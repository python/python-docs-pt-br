# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Raphael Mendonça, 2021
# i17obot <i17obot@rougeth.com>, 2021
# Adorilson Bezerra <adorilson@gmail.com>, 2024
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-17 14:16+0000\n"
"PO-Revision-Date: 2021-06-28 01:03+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/csv.rst:2
msgid ":mod:`!csv` --- CSV File Reading and Writing"
msgstr ":mod:`!csv` --- Leitura e escrita de arquivos CSV"

#: ../../library/csv.rst:9
msgid "**Source code:** :source:`Lib/csv.py`"
msgstr "**Código-fonte:** :source:`Lib/csv.py`"

#: ../../library/csv.rst:17
msgid ""
"The so-called CSV (Comma Separated Values) format is the most common import "
"and export format for spreadsheets and databases.  CSV format was used for "
"many years prior to attempts to describe the format in a standardized way "
"in :rfc:`4180`.  The lack of a well-defined standard means that subtle "
"differences often exist in the data produced and consumed by different "
"applications.  These differences can make it annoying to process CSV files "
"from multiple sources. Still, while the delimiters and quoting characters "
"vary, the overall format is similar enough that it is possible to write a "
"single module which can efficiently manipulate such data, hiding the details "
"of reading and writing the data from the programmer."
msgstr ""
"O chamado formato CSV (Comma Separated Values) é o formato mais comum de "
"importação e exportação de planilhas e bancos de dados. O formato CSV foi "
"usado por muitos anos antes das tentativas de descrever o formato de maneira "
"padronizada em :rfc:`4180`. A falta de um padrão bem definido significa que "
"existem diferenças sutis nos dados produzidos e consumidos por diferentes "
"aplicativos. Essas diferenças podem tornar irritante o processamento de "
"arquivos CSV de várias fontes. Ainda assim, enquanto os delimitadores e os "
"caracteres de citação variam, o formato geral é semelhante o suficiente para "
"que seja possível escrever um único módulo que possa manipular "
"eficientemente esses dados, ocultando os detalhes da leitura e gravação dos "
"dados do programador."

#: ../../library/csv.rst:28
msgid ""
"The :mod:`csv` module implements classes to read and write tabular data in "
"CSV format.  It allows programmers to say, \"write this data in the format "
"preferred by Excel,\" or \"read data from this file which was generated by "
"Excel,\" without knowing the precise details of the CSV format used by "
"Excel.  Programmers can also describe the CSV formats understood by other "
"applications or define their own special-purpose CSV formats."
msgstr ""
"O módulo :mod:`csv` implementa classes para ler e gravar dados tabulares no "
"formato CSV. Ele permite que os programadores digam \"escreva esses dados no "
"formato preferido pelo Excel\" ou \"leia os dados desse arquivo gerado pelo "
"Excel\", sem conhecer os detalhes precisos do formato CSV usado pelo Excel. "
"Os programadores também podem descrever os formatos CSV entendidos por "
"outros aplicativos ou definir seus próprios formatos CSV para fins especiais."

#: ../../library/csv.rst:35
msgid ""
"The :mod:`csv` module's :class:`reader` and :class:`writer` objects read and "
"write sequences.  Programmers can also read and write data in dictionary "
"form using the :class:`DictReader` and :class:`DictWriter` classes."
msgstr ""
"Os objetos de :class:`reader` e :class:`writer` do módulo :mod:`csv` leem e "
"escrevem sequências. Os programadores também podem ler e gravar dados no "
"formato de dicionário usando as classes :class:`DictReader` e :class:"
"`DictWriter`."

#: ../../library/csv.rst:41
msgid ":pep:`305` - CSV File API"
msgstr ":pep:`305` - API de arquivo CSV"

#: ../../library/csv.rst:42
msgid "The Python Enhancement Proposal which proposed this addition to Python."
msgstr "A proposta de melhoria do Python que propôs essa adição ao Python."

#: ../../library/csv.rst:48
msgid "Module Contents"
msgstr "Conteúdo do módulo"

#: ../../library/csv.rst:50
msgid "The :mod:`csv` module defines the following functions:"
msgstr "O módulo :mod:`csv` define as seguintes funções:"

#: ../../library/csv.rst:58
msgid ""
"Return a :ref:`reader object <reader-objects>` that will process lines from "
"the given *csvfile*.  A csvfile must be an iterable of strings, each in the "
"reader's defined csv format. A csvfile is most commonly a file-like object "
"or list. If *csvfile* is a file object, it should be opened with "
"``newline=''``. [1]_  An optional *dialect* parameter can be given which is "
"used to define a set of parameters specific to a particular CSV dialect.  It "
"may be an instance of a subclass of the :class:`Dialect` class or one of the "
"strings returned by the :func:`list_dialects` function.  The other optional "
"*fmtparams* keyword arguments can be given to override individual formatting "
"parameters in the current dialect.  For full details about the dialect and "
"formatting parameters, see section :ref:`csv-fmt-params`."
msgstr ""
"Retorna um  :ref:`objeto leitor <reader-objects>` que irá iterar sobre as "
"linhas no *csvfile* fornecido. Um csvfile deve ser um iterável de strings, "
"cada uma no formato csv definido  pelo leitor. Um csvfile é muito comumente "
"um objeto similar a arquivo ou uma lista. Se *csvfile* for um objeto de "
"arquivo, ele deverá ser aberto com ``newline=''``. [1]_ Pode ser fornecido "
"um parâmetro opcional *dialect*, usado para definir um conjunto de "
"parâmetros específicos para um dialeto CSV específico. Pode ser uma "
"instância de uma subclasse da classe :class:`Dialect` ou uma das strings "
"retornadas pela função :func:`list_dialects`. Os outros argumentos nomeados "
"opcionais *fmtparams* podem ser dados para substituir parâmetros de "
"formatação individuais no dialeto atual. Para detalhes completos sobre os "
"parâmetros de dialeto e formatação, consulte a seção :ref:`csv-fmt-params`."

#: ../../library/csv.rst:72
msgid ""
"Each row read from the csv file is returned as a list of strings.  No "
"automatic data type conversion is performed unless the ``QUOTE_NONNUMERIC`` "
"format option is specified (in which case unquoted fields are transformed "
"into floats)."
msgstr ""
"Cada linha lida no arquivo csv é retornada como uma lista de cadeias. "
"Nenhuma conversão automática de tipo de dados é executada, a menos que a "
"opção de formato ``QUOTE_NONNUMERIC`` seja especificada (nesse caso, os "
"campos não citados são transformados em pontos flutuantes)."

#: ../../library/csv.rst:76 ../../library/csv.rst:106 ../../library/csv.rst:181
#: ../../library/csv.rst:219
msgid "A short usage example::"
msgstr "Um pequeno exemplo de uso::"

#: ../../library/csv.rst:78
msgid ""
">>> import csv\n"
">>> with open('eggs.csv', newline='') as csvfile:\n"
"...     spamreader = csv.reader(csvfile, delimiter=' ', quotechar='|')\n"
"...     for row in spamreader:\n"
"...         print(', '.join(row))\n"
"Spam, Spam, Spam, Spam, Spam, Baked Beans\n"
"Spam, Lovely Spam, Wonderful Spam"
msgstr ""
">>> import csv\n"
">>> with open('eggs.csv', newline='') as csvfile:\n"
"...     spamreader = csv.reader(csvfile, delimiter=' ', quotechar='|')\n"
"...     for row in spamreader:\n"
"...         print(', '.join(row))\n"
"Spam, Spam, Spam, Spam, Spam, Baked Beans\n"
"Spam, Lovely Spam, Wonderful Spam"

#: ../../library/csv.rst:89
msgid ""
"Return a writer object responsible for converting the user's data into "
"delimited strings on the given file-like object.  *csvfile* can be any "
"object with a :meth:`~io.TextIOBase.write` method.  If *csvfile* is a file "
"object, it should be opened with ``newline=''`` [1]_.  An optional *dialect* "
"parameter can be given which is used to define a set of parameters specific "
"to a particular CSV dialect.  It may be an instance of a subclass of the :"
"class:`Dialect` class or one of the strings returned by the :func:"
"`list_dialects` function.  The other optional *fmtparams* keyword arguments "
"can be given to override individual formatting parameters in the current "
"dialect.  For full details about dialects and formatting parameters, see "
"the :ref:`csv-fmt-params` section. To make it as easy as possible to "
"interface with modules which implement the DB API, the value :const:`None` "
"is written as the empty string.  While this isn't a reversible "
"transformation, it makes it easier to dump SQL NULL data values to CSV files "
"without preprocessing the data returned from a ``cursor.fetch*`` call. All "
"other non-string data are stringified with :func:`str` before being written."
msgstr ""
"Retorna um objeto de escrita responsável por converter os dados de usuário "
"em strings delimitadas no objeto arquivo ou similar. *csvfile* pode ser "
"qualquer objeto com um método :meth:`~io.TextIOBase.write`. Se *csvfile* for "
"um objeto arquivo, ele deverá ser aberto com ``newline=''`` [1]_. Pode ser "
"fornecido um parâmetro opcional *dialect*, usado para definir um conjunto de "
"parâmetros específicos para um dialeto CSV específico. Pode ser uma "
"instância de uma subclasse da classe :class:`Dialect` ou uma das strings "
"retornadas pela função :func:`list_dialects`. Os outros argumentos nomeados "
"opcionais *fmtparams* podem ser dados para substituir parâmetros de "
"formatação individuais no dialeto atual. Para detalhes completos sobre os "
"parâmetros de dialeto e formatação, consulte a seção :ref:`csv-fmt-params`. "
"Para tornar o mais fácil possível a interface com os módulos que implementam "
"a API do DB, o valor :const:`None` é escrito como uma string vazia. Embora "
"isso não seja uma transformação reversível, torna mais fácil despejar "
"valores de dados SQL NULL em arquivos CSV sem preprocessar os dados "
"retornados de uma chamada ``cursor.fetch*``. Todos os outros dados que não "
"são de strings são codificados com :func:`str` antes de serem escritos."

#: ../../library/csv.rst:108
msgid ""
"import csv\n"
"with open('eggs.csv', 'w', newline='') as csvfile:\n"
"    spamwriter = csv.writer(csvfile, delimiter=' ',\n"
"                            quotechar='|', quoting=csv.QUOTE_MINIMAL)\n"
"    spamwriter.writerow(['Spam'] * 5 + ['Baked Beans'])\n"
"    spamwriter.writerow(['Spam', 'Lovely Spam', 'Wonderful Spam'])"
msgstr ""
"import csv\n"
"with open('eggs.csv', 'w', newline='') as csvfile:\n"
"    spamwriter = csv.writer(csvfile, delimiter=' ',\n"
"                            quotechar='|', quoting=csv.QUOTE_MINIMAL)\n"
"    spamwriter.writerow(['Spam'] * 5 + ['Baked Beans'])\n"
"    spamwriter.writerow(['Spam', 'Lovely Spam', 'Wonderful Spam'])"

#: ../../library/csv.rst:118
msgid ""
"Associate *dialect* with *name*.  *name* must be a string. The dialect can "
"be specified either by passing a sub-class of :class:`Dialect`, or by "
"*fmtparams* keyword arguments, or both, with keyword arguments overriding "
"parameters of the dialect. For full details about dialects and formatting "
"parameters, see section :ref:`csv-fmt-params`."
msgstr ""
"Associa *dialect* a *name*. *name* deve ser uma string. O dialeto pode ser "
"especificado passando uma subclasse de :class:`Dialect` ou por *fmtparams* "
"argumentos nomeados, ou ambos, com argumentos nomeados substituindo os "
"parâmetros do dialeto. Para detalhes completos sobre os parâmetros de "
"dialeto e formatação, consulte a seção :ref:`csv-fmt-params`."

#: ../../library/csv.rst:127
msgid ""
"Delete the dialect associated with *name* from the dialect registry.  An :"
"exc:`Error` is raised if *name* is not a registered dialect name."
msgstr ""
"Exclui o dialeto associado ao *name* do registro do dialeto. Um :exc:`Error` "
"é levantado se *name* não for um nome de dialeto registrado."

#: ../../library/csv.rst:133
msgid ""
"Return the dialect associated with *name*.  An :exc:`Error` is raised if "
"*name* is not a registered dialect name.  This function returns an "
"immutable :class:`Dialect`."
msgstr ""
"Retorna o dialeto associado a *name*. Um :exc:`Error` é levantado se *name* "
"não for um nome de dialeto registrado. Esta função retorna uma classe :class:"
"`Dialect` imutável."

#: ../../library/csv.rst:139
msgid "Return the names of all registered dialects."
msgstr "Retorna os nomes de todos os dialetos registrados"

#: ../../library/csv.rst:144
msgid ""
"Returns the current maximum field size allowed by the parser. If *new_limit* "
"is given, this becomes the new limit."
msgstr ""
"Retorna o tamanho máximo atual do campo permitido pelo analisador sintático. "
"Se *new_limit* for fornecido, este se tornará o novo limite."

#: ../../library/csv.rst:148
msgid "The :mod:`csv` module defines the following classes:"
msgstr "O módulo :mod:`csv` define as seguintes classes:"

#: ../../library/csv.rst:153
msgid ""
"Create an object that operates like a regular reader but maps the "
"information in each row to a :class:`dict` whose keys are given by the "
"optional *fieldnames* parameter."
msgstr ""
"Cria um objeto que funcione como um leitor comum, mas mapeia as informações "
"em cada linha para :class:`dict` cujas chaves são fornecidas pelo parâmetro "
"opcional *fieldnames*."

#: ../../library/csv.rst:157
msgid ""
"The *fieldnames* parameter is a :term:`sequence`.  If *fieldnames* is "
"omitted, the values in the first row of file *f* will be used as the "
"fieldnames and will be omitted from the results. If *fieldnames* is "
"provided, they will be used and the first row will be included in the "
"results.  Regardless of how the fieldnames are determined, the dictionary "
"preserves their original ordering."
msgstr ""
"O parâmetro *fieldnames* é uma :term:`sequência`. Se *fieldnames* for "
"omitido, os valores na primeira linha do arquivo *f* serão usados como nomes "
"de campo e serão omitidos dos resultados. Se *fieldnames* for fornecido, "
"eles serão usados e a primeira linha será incluída nos resultados. "
"Independentemente de como os nomes de campo são determinados, o dicionário "
"preserva sua ordem original."

#: ../../library/csv.rst:164
msgid ""
"If a row has more fields than fieldnames, the remaining data is put in a "
"list and stored with the fieldname specified by *restkey* (which defaults to "
"``None``).  If a non-blank row has fewer fields than fieldnames, the missing "
"values are filled-in with the value of *restval* (which defaults to "
"``None``)."
msgstr ""
"Se uma linha tiver mais campos que nomes de campo, os dados restantes serão "
"colocados em uma lista e armazenados com o nome do campo especificado por "
"*restkey* (o padrão é ``None``). Se uma linha que não estiver em branco "
"tiver menos campos que nomes de campo, os valores ausentes serão preenchidos "
"com o valor *restval* (o padrão é ``None``)."

#: ../../library/csv.rst:170
msgid ""
"All other optional or keyword arguments are passed to the underlying :class:"
"`reader` instance."
msgstr ""
"Todos os outros argumentos nomeados ou opcionais são passados para a "
"instância subjacente de :class:`reader`."

#: ../../library/csv.rst:173 ../../library/csv.rst:217
msgid ""
"If the argument passed to *fieldnames* is an iterator, it will be coerced to "
"a :class:`list`."
msgstr ""
"Se o argumento passado para *fieldnames* for um iterador, ele será "
"convertido para uma :class:`list`."

#: ../../library/csv.rst:175
msgid "Returned rows are now of type :class:`OrderedDict`."
msgstr "Linhas retornadas agora são do tipo :class:`OrderedDict`."

#: ../../library/csv.rst:178
msgid "Returned rows are now of type :class:`dict`."
msgstr "As linhas retornadas agora são do tipo :class:`dict`."

#: ../../library/csv.rst:183
msgid ""
">>> import csv\n"
">>> with open('names.csv', newline='') as csvfile:\n"
"...     reader = csv.DictReader(csvfile)\n"
"...     for row in reader:\n"
"...         print(row['first_name'], row['last_name'])\n"
"...\n"
"Eric Idle\n"
"John Cleese\n"
"\n"
">>> print(row)\n"
"{'first_name': 'John', 'last_name': 'Cleese'}"
msgstr ""
">>> import csv\n"
">>> with open('names.csv', newline='') as csvfile:\n"
"...     reader = csv.DictReader(csvfile)\n"
"...     for row in reader:\n"
"...         print(row['first_name'], row['last_name'])\n"
"...\n"
"Eric Idle\n"
"John Cleese\n"
"\n"
">>> print(row)\n"
"{'first_name': 'John', 'last_name': 'Cleese'}"

#: ../../library/csv.rst:199
msgid ""
"Create an object which operates like a regular writer but maps dictionaries "
"onto output rows.  The *fieldnames* parameter is a :mod:`sequence "
"<collections.abc>` of keys that identify the order in which values in the "
"dictionary passed to the :meth:`~csvwriter.writerow` method are written to "
"file *f*.  The optional *restval* parameter specifies the value to be "
"written if the dictionary is missing a key in *fieldnames*.  If the "
"dictionary passed to the :meth:`~csvwriter.writerow` method contains a key "
"not found in *fieldnames*, the optional *extrasaction* parameter indicates "
"what action to take. If it is set to ``'raise'``, the default value, a :exc:"
"`ValueError` is raised. If it is set to ``'ignore'``, extra values in the "
"dictionary are ignored. Any other optional or keyword arguments are passed "
"to the underlying :class:`writer` instance."
msgstr ""
"Cria um objeto que funcione como um de escrita comum, mas mapeia dicionários "
"nas linhas de saída. O parâmetro *fieldnames* é uma :mod:`sequência "
"<collections.abc>` de chaves que identificam a ordem na qual os valores no "
"dicionário transmitidos para o método :meth:`~csvwriter.writerow` são "
"escritos no arquivo *f*. O parâmetro opcional *restval* especifica o valor a "
"ser escrito se o dicionário estiver com falta de uma chave em *fieldnames*. "
"Se o dicionário transmitido para o método :meth:`~csvwriter.writerow` "
"contiver uma chave não encontrada em *fieldnames*, o parâmetro opcional "
"*extrasaction* indica qual ação executar. Se estiver definido como "
"``'raise'``, o valor padrão, a :exc:`ValueError` é levantada. Se estiver "
"definido como ``'ignore'``, valores extras no dicionário serão ignorados. "
"Quaisquer outros argumentos nomeados ou opcionais são passados para a "
"instância subjacente de :class:`writer`."

#: ../../library/csv.rst:214
msgid ""
"Note that unlike the :class:`DictReader` class, the *fieldnames* parameter "
"of the :class:`DictWriter` class is not optional."
msgstr ""
"Observe que, diferentemente da classe :class:`DictReader`, o parâmetro "
"*fieldnames* da classe :class:`DictWriter` não é opcional."

#: ../../library/csv.rst:221
msgid ""
"import csv\n"
"\n"
"with open('names.csv', 'w', newline='') as csvfile:\n"
"    fieldnames = ['first_name', 'last_name']\n"
"    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)\n"
"\n"
"    writer.writeheader()\n"
"    writer.writerow({'first_name': 'Baked', 'last_name': 'Beans'})\n"
"    writer.writerow({'first_name': 'Lovely', 'last_name': 'Spam'})\n"
"    writer.writerow({'first_name': 'Wonderful', 'last_name': 'Spam'})"
msgstr ""
"import csv\n"
"\n"
"with open('names.csv', 'w', newline='') as csvfile:\n"
"    fieldnames = ['first_name', 'last_name']\n"
"    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)\n"
"\n"
"    writer.writeheader()\n"
"    writer.writerow({'first_name': 'Baked', 'last_name': 'Beans'})\n"
"    writer.writerow({'first_name': 'Lovely', 'last_name': 'Spam'})\n"
"    writer.writerow({'first_name': 'Wonderful', 'last_name': 'Spam'})"

#: ../../library/csv.rst:235
msgid ""
"The :class:`Dialect` class is a container class whose attributes contain "
"information for how to handle doublequotes, whitespace, delimiters, etc. Due "
"to the lack of a strict CSV specification, different applications produce "
"subtly different CSV data.  :class:`Dialect` instances define how :class:"
"`reader` and :class:`writer` instances behave."
msgstr ""
"A classe :class:`Dialect` é uma classe de contêiner cujos atributos contêm "
"informações sobre como lidar com aspas duplas, espaços em branco, "
"delimitadores, etc. Devido à falta de uma especificação CSV estrita, "
"diferentes aplicativos produzem dados CSV sutilmente diferentes. As "
"instâncias de :class:`Dialect` definem como as instâncias :class:`reader` e :"
"class:`writer` se comportam."

#: ../../library/csv.rst:241
msgid ""
"All available :class:`Dialect` names are returned by :func:`list_dialects`, "
"and they can be registered with specific :class:`reader` and :class:`writer` "
"classes through their initializer (``__init__``) functions like this::"
msgstr ""
"Todos os nomes de :class:`Dialect` disponíveis são retornados por :func:"
"`list_dialects`, e eles podem ser registrados com classes :class:`reader` e :"
"class:`writer` específicas através de suas funções inicializadoras "
"(``__init__``) como esta::"

#: ../../library/csv.rst:245
msgid ""
"import csv\n"
"\n"
"with open('students.csv', 'w', newline='') as csvfile:\n"
"    writer = csv.writer(csvfile, dialect='unix')"
msgstr ""
"import csv\n"
"\n"
"with open('students.csv', 'w', newline='') as csvfile:\n"
"    writer = csv.writer(csvfile, dialect='unix')"

#: ../../library/csv.rst:253
msgid ""
"The :class:`excel` class defines the usual properties of an Excel-generated "
"CSV file.  It is registered with the dialect name ``'excel'``."
msgstr ""
"A classe :class:`excel` define as propriedades usuais de um arquivo CSV "
"gerado pelo Excel. Ele é registrado com o nome do dialeto ``'excel'``."

#: ../../library/csv.rst:259
msgid ""
"The :class:`excel_tab` class defines the usual properties of an Excel-"
"generated TAB-delimited file.  It is registered with the dialect name "
"``'excel-tab'``."
msgstr ""
"A classe :class:`excel_tab` define as propriedades usuais de um arquivo "
"delimitado por TAB gerado pelo Excel. Ela é registrado com o nome do dialeto "
"``'excel-tab'``."

#: ../../library/csv.rst:265
msgid ""
"The :class:`unix_dialect` class defines the usual properties of a CSV file "
"generated on UNIX systems, i.e. using ``'\\n'`` as line terminator and "
"quoting all fields.  It is registered with the dialect name ``'unix'``."
msgstr ""
"A classe :class:`unix_dialect` define as propriedades usuais de um arquivo "
"CSV gerado em sistemas UNIX, ou seja, usando ``'\\n'`` como terminador de "
"linha e citando todos os campos. É registrado com o nome do dialeto "
"``'unix'``."

#: ../../library/csv.rst:274
msgid "The :class:`Sniffer` class is used to deduce the format of a CSV file."
msgstr ""
"A classe :class:`Sniffer` é usada para deduzir o formato de um arquivo CSV."

#: ../../library/csv.rst:276
msgid "The :class:`Sniffer` class provides two methods:"
msgstr "A classe :class:`Sniffer` fornece dois métodos:"

#: ../../library/csv.rst:280
msgid ""
"Analyze the given *sample* and return a :class:`Dialect` subclass reflecting "
"the parameters found.  If the optional *delimiters* parameter is given, it "
"is interpreted as a string containing possible valid delimiter characters."
msgstr ""
"Analisa a *sample* fornecida e retorna uma subclasse :class:`Dialect`, "
"refletindo os parâmetros encontrados. Se o parâmetro opcional *delimiters* "
"for fornecido, ele será interpretado como uma string contendo possíveis "
"caracteres válidos de delimitador."

#: ../../library/csv.rst:288
msgid ""
"Analyze the sample text (presumed to be in CSV format) and return :const:"
"`True` if the first row appears to be a series of column headers. Inspecting "
"each column, one of two key criteria will be considered to estimate if the "
"sample contains a header:"
msgstr ""
"Analisa o texto de amostra (presume-se que esteja no formato CSV) e retorne :"
"const:`True` se a primeira linha parecer uma série de cabeçalhos de coluna. "
"Inspecionando cada coluna, um dos dois critérios principais será considerado "
"para estimar se a amostra contém um cabeçalho:"

#: ../../library/csv.rst:293
msgid "the second through n-th rows contain numeric values"
msgstr "da segunda até a enésima linha contém valores numéricos"

#: ../../library/csv.rst:294
msgid ""
"the second through n-th rows contain strings where at least one value's "
"length differs from that of the putative header of that column."
msgstr ""
"da segunda até a enésima linha contém strings em que pelo menos o "
"comprimento de um valor difere daquele do cabeçalho putativo dessa coluna."

#: ../../library/csv.rst:297
msgid ""
"Twenty rows after the first row are sampled; if more than half of columns + "
"rows meet the criteria, :const:`True` is returned."
msgstr ""
"Vinte linhas após a primeira linha são amostradas; se mais da metade das "
"colunas + linhas atenderem aos critérios, :const:`True` será retornado."

#: ../../library/csv.rst:302
msgid ""
"This method is a rough heuristic and may produce both false positives and "
"negatives."
msgstr ""
"Este método é uma heurística aproximada e pode produzir falsos positivos e "
"negativos."

#: ../../library/csv.rst:305
msgid "An example for :class:`Sniffer` use::"
msgstr "Um exemplo para uso de :class:`Sniffer`::"

#: ../../library/csv.rst:307
msgid ""
"with open('example.csv', newline='') as csvfile:\n"
"    dialect = csv.Sniffer().sniff(csvfile.read(1024))\n"
"    csvfile.seek(0)\n"
"    reader = csv.reader(csvfile, dialect)\n"
"    # ... process CSV file contents here ..."
msgstr ""
"with open('example.csv', newline='') as csvfile:\n"
"    dialect = csv.Sniffer().sniff(csvfile.read(1024))\n"
"    csvfile.seek(0)\n"
"    reader = csv.reader(csvfile, dialect)\n"
"    # ... processa conteúdo do arquivo CSV aqui ..."

#: ../../library/csv.rst:316
msgid "The :mod:`csv` module defines the following constants:"
msgstr "O módulo :mod:`csv` define as seguintes constantes:"

#: ../../library/csv.rst:320
msgid "Instructs :class:`writer` objects to quote all fields."
msgstr "Instrui objetos :class:`writer` a colocar aspas em todos os campos."

#: ../../library/csv.rst:325
msgid ""
"Instructs :class:`writer` objects to only quote those fields which contain "
"special characters such as *delimiter*, *quotechar* or any of the characters "
"in *lineterminator*."
msgstr ""
"Instrui objetos :class:`writer` a colocar aspas apenas nos campos que contêm "
"caracteres especiais como *delimiters*, *quotechar* ou qualquer um dos "
"caracteres em *lineterminator*."

#: ../../library/csv.rst:332
msgid "Instructs :class:`writer` objects to quote all non-numeric fields."
msgstr ""
"Instrui objetos :class:`writer` a colocar aspas em todos os campos não "
"numéricos."

#: ../../library/csv.rst:334
msgid ""
"Instructs :class:`reader` objects to convert all non-quoted fields to type "
"*float*."
msgstr ""
"Instrui objetos :class:`reader` a converter todos os campos não envoltos por "
"aspas no tipo *float*."

#: ../../library/csv.rst:339
msgid ""
"Instructs :class:`writer` objects to never quote fields.  When the current "
"*delimiter* occurs in output data it is preceded by the current *escapechar* "
"character.  If *escapechar* is not set, the writer will raise :exc:`Error` "
"if any characters that require escaping are encountered."
msgstr ""
"Instrui objetos :class:`writer` a nunca colocar aspas nos campos. Quando o "
"*delimiter* atual ocorre nos dados de saída, é precedido pelo caractere "
"*escapechar* atual. Se *escapeechar* não estiver definido, o escritor "
"levantará :exc:`Error` se algum caractere que exija escape for encontrado."

#: ../../library/csv.rst:344
msgid ""
"Instructs :class:`reader` objects to perform no special processing of quote "
"characters."
msgstr ""
"Instrui objetos :class:`reader` a não executar nenhum processamento especial "
"de caracteres de aspas."

#: ../../library/csv.rst:348
msgid ""
"Instructs :class:`writer` objects to quote all fields which are not "
"``None``.  This is similar to :data:`QUOTE_ALL`, except that if a field "
"value is ``None`` an empty (unquoted) string is written."
msgstr ""
"Instrui objetos :class:`writer` a coloca entre aspas os campos que não são "
"``None``. Isso é semelhante a :data:`QUOTE_ALL`, exceto que se o valor de um "
"campo for ``None``, uma string vazia (sem aspas) é escrita."

#: ../../library/csv.rst:352
msgid ""
"Instructs :class:`reader` objects to interpret an empty (unquoted) field as "
"``None`` and to otherwise behave as :data:`QUOTE_ALL`."
msgstr ""
"Instrui objetos :class:`reader` a interpretar um campo vazio (sem aspas) "
"como ``None`` e a se comportar de outra forma como :data:`QUOTE_ALL`."

#: ../../library/csv.rst:359
msgid ""
"Instructs :class:`writer` objects to always place quotes around fields which "
"are strings.  This is similar to :data:`QUOTE_NONNUMERIC`, except that if a "
"field value is ``None`` an empty (unquoted) string is written."
msgstr ""
"Instrui objetos :class:`writer` a sempre coloca aspas em volta dos campos "
"que são strings. Isso é semelhante a :data:`QUOTE_NONNUMERIC`, exceto que se "
"o valor de um campo for ``None``, uma string vazia (sem aspas) é escrita."

#: ../../library/csv.rst:363
msgid ""
"Instructs :class:`reader` objects to interpret an empty (unquoted) string as "
"``None`` and to otherwise behave as :data:`QUOTE_NONNUMERIC`."
msgstr ""
"Instrui objetos :class:`reader` a interpretar uma string vazia (sem aspas) "
"como ``None`` e a se comportar de outra forma como :data:`QUOTE_NONNUMERIC`."

#: ../../library/csv.rst:368
msgid "The :mod:`csv` module defines the following exception:"
msgstr "O módulo :mod:`csv` define a seguinte exceção:"

#: ../../library/csv.rst:373
msgid "Raised by any of the functions when an error is detected."
msgstr "Levantada por qualquer uma das funções quando um erro é detectado."

#: ../../library/csv.rst:378
msgid "Dialects and Formatting Parameters"
msgstr "Dialetos e parâmetros de formatação"

#: ../../library/csv.rst:380
msgid ""
"To make it easier to specify the format of input and output records, "
"specific formatting parameters are grouped together into dialects.  A "
"dialect is a subclass of the :class:`Dialect` class containing various "
"attributes describing the format of the CSV file.  When creating :class:"
"`reader` or :class:`writer` objects, the programmer can specify a string or "
"a subclass of the :class:`Dialect` class as the dialect parameter.  In "
"addition to, or instead of, the *dialect* parameter, the programmer can also "
"specify individual formatting parameters, which have the same names as the "
"attributes defined below for the :class:`Dialect` class."
msgstr ""
"Para facilitar a especificação do formato dos registros de entrada e saída, "
"parâmetros específicos de formatação são agrupados em dialetos. Um dialeto é "
"uma subclasse da classe :class:`Dialect` contendo vários atributos "
"descrevendo o formato do arquivo CSV. Ao criar objetos :class:`reader` ou :"
"class:`writer`, o programador pode especificar uma string ou uma subclasse "
"da classe :class:`Dialect` como parâmetro de dialeto. Além do parâmetro "
"*dialect*, ou em vez do parâmetro *dialect*, o programador também pode "
"especificar parâmetros de formatação individuais, com os mesmos nomes dos "
"atributos definidos abaixo para a classe :class:`Dialect`."

#: ../../library/csv.rst:390
msgid "Dialects support the following attributes:"
msgstr "Os dialetos possuem suporte aos seguintes atributos:"

#: ../../library/csv.rst:395
msgid ""
"A one-character string used to separate fields.  It defaults to ``','``."
msgstr ""
"Uma string de um caractere usada para separar campos. O padrão é ``','``."

#: ../../library/csv.rst:400
msgid ""
"Controls how instances of *quotechar* appearing inside a field should "
"themselves be quoted.  When :const:`True`, the character is doubled. When :"
"const:`False`, the *escapechar* is used as a prefix to the *quotechar*.  It "
"defaults to :const:`True`."
msgstr ""
"Controla como as instâncias de *quotechar* que aparecem dentro de um campo "
"devem estar entre aspas. Quando :const:`True`, o caractere é dobrado. "
"Quando :const:`False`, o *escapechar* é usado como um prefixo para o "
"*quotechar*. O padrão é :const:`True`."

#: ../../library/csv.rst:405
msgid ""
"On output, if *doublequote* is :const:`False` and no *escapechar* is set, :"
"exc:`Error` is raised if a *quotechar* is found in a field."
msgstr ""
"Na saída, se *doublequote* for :const:`False` e não *escapeechar* for "
"definido, :exc:`Error` é levantada se um *quotechar* é encontrado em um "
"campo."

#: ../../library/csv.rst:411
msgid ""
"A one-character string used by the writer to escape the *delimiter* if "
"*quoting* is set to :const:`QUOTE_NONE` and the *quotechar* if *doublequote* "
"is :const:`False`. On reading, the *escapechar* removes any special meaning "
"from the following character. It defaults to :const:`None`, which disables "
"escaping."
msgstr ""
"Uma string usada pelo escritor para escapar do *delimiter* se *quoting* "
"estiver definida como :const:`QUOTE_NONE` e o *quotechar* se *doublequote* "
"for :const:`False`. Na leitura, o *escapechar* remove qualquer significado "
"especial do caractere seguinte. O padrão é :const:`None`, que desativa o "
"escape."

#: ../../library/csv.rst:416
msgid "An empty *escapechar* is not allowed."
msgstr "Um *escapechar* vazio não é permitido."

#: ../../library/csv.rst:421
msgid ""
"The string used to terminate lines produced by the :class:`writer`. It "
"defaults to ``'\\r\\n'``."
msgstr ""
"A string usada para terminar as linhas produzidas pelo :class:`writer`. O "
"padrão é ``'\\r\\n'``."

#: ../../library/csv.rst:426
msgid ""
"The :class:`reader` is hard-coded to recognise either ``'\\r'`` or ``'\\n'`` "
"as end-of-line, and ignores *lineterminator*. This behavior may change in "
"the future."
msgstr ""
"A :class:`reader` é codificada para reconhecer ``'\\r'`` ou ``'\\n'`` como "
"fim de linha e ignora *lineterminator*. Esse comportamento pode mudar no "
"futuro."

#: ../../library/csv.rst:433
msgid ""
"A one-character string used to quote fields containing special characters, "
"such as the *delimiter* or *quotechar*, or which contain new-line "
"characters.  It defaults to ``'\"'``."
msgstr ""
"Uma string de um caractere usada para citar campos contendo caracteres "
"especiais, como *delimiter* ou *quotechar*, ou que contêm caracteres de nova "
"linha. O padrão é ``'\"'``."

#: ../../library/csv.rst:437
msgid "An empty *quotechar* is not allowed."
msgstr "Um *quotechar* vazio não é permitido."

#: ../../library/csv.rst:442
msgid ""
"Controls when quotes should be generated by the writer and recognised by the "
"reader.  It can take on any of the :ref:`QUOTE_\\* constants <csv-"
"constants>` and defaults to :const:`QUOTE_MINIMAL`."
msgstr ""
"Controla quando as aspas devem ser geradas pelo escritor e reconhecidas pelo "
"leitor. Ele pode assumir qualquer uma das constantes :ref:`QUOTE_\\* "
"constants <csv-constants>` e o padrão é :const:`QUOTE_MINIMAL`."

#: ../../library/csv.rst:449
msgid ""
"When :const:`True`, spaces immediately following the *delimiter* are "
"ignored. The default is :const:`False`."
msgstr ""
"Quando :const:`True`, os espaços em branco imediatamente após o *delimiter* "
"são ignorados. O padrão é :const:`False`."

#: ../../library/csv.rst:455
msgid ""
"When ``True``, raise exception :exc:`Error` on bad CSV input. The default is "
"``False``."
msgstr ""
"Quando ``True``, levanta a exceção :exc:`Error` em uma entrada CSV ruim. O "
"padrão é ``False``."

#: ../../library/csv.rst:461
msgid "Reader Objects"
msgstr "Objetos Reader"

#: ../../library/csv.rst:463
msgid ""
"Reader objects (:class:`DictReader` instances and objects returned by the :"
"func:`reader` function) have the following public methods:"
msgstr ""
"Os objetos Reader (instâncias :class:`DictReader` e objetos retornados pela "
"função :func:`reader`) têm os seguintes métodos públicos:"

#: ../../library/csv.rst:468
msgid ""
"Return the next row of the reader's iterable object as a list (if the object "
"was returned from :func:`reader`) or a dict (if it is a :class:`DictReader` "
"instance), parsed according to the current :class:`Dialect`.  Usually you "
"should call this as ``next(reader)``."
msgstr ""
"Retorna a próxima linha do objeto iterável do leitor como uma lista (se o "
"objeto foi retornado de :func:`leitor`) ou um dict (se for uma instância de :"
"class:`DictReader`), analisado de acordo com a :class:`Dialect` atual. "
"Normalmente, você deve chamar isso de ``next(reader)``."

#: ../../library/csv.rst:474
msgid "Reader objects have the following public attributes:"
msgstr "Os objetos Reader possuem os seguintes atributos públicos:"

#: ../../library/csv.rst:478
msgid "A read-only description of the dialect in use by the parser."
msgstr ""
"Uma descrição somente leitura do dialeto em uso pelo analisador sintático."

#: ../../library/csv.rst:483
msgid ""
"The number of lines read from the source iterator. This is not the same as "
"the number of records returned, as records can span multiple lines."
msgstr ""
"O número de linhas lidas no iterador de origem. Não é o mesmo que o número "
"de registros retornados, pois os registros podem abranger várias linhas."

#: ../../library/csv.rst:487
msgid "DictReader objects have the following public attribute:"
msgstr "Os objetos DictReader têm o seguinte atributo público:"

#: ../../library/csv.rst:491
msgid ""
"If not passed as a parameter when creating the object, this attribute is "
"initialized upon first access or when the first record is read from the file."
msgstr ""
"Se não for passado como parâmetro ao criar o objeto, esse atributo será "
"inicializado no primeiro acesso ou quando o primeiro registro for lido no "
"arquivo."

#: ../../library/csv.rst:498
msgid "Writer Objects"
msgstr "Objetos Writer"

#: ../../library/csv.rst:500
msgid ""
":class:`writer` objects (:class:`DictWriter` instances and objects returned "
"by the :func:`writer` function) have the following public methods.  A *row* "
"must be an iterable of strings or numbers for :class:`writer` objects and a "
"dictionary mapping fieldnames to strings or numbers (by passing them "
"through :func:`str` first) for :class:`DictWriter` objects.  Note that "
"complex numbers are written out surrounded by parens. This may cause some "
"problems for other programs which read CSV files (assuming they support "
"complex numbers at all)."
msgstr ""
"Objetos :class:`writer` (instâncias e objetos :class:`DictWriter` retornados "
"pela função :func:`writer`) possuem os seguintes métodos públicos. Uma *row* "
"deve ser iterável de strings ou números para objetos :class:`writer` e um "
"dicionário mapeando nomes de campos para strings ou números (passando-os "
"por :func:`str` primeiro) para :class:`DictWriter`. Observe que números "
"complexos são escritos cercados por parênteses. Isso pode causar alguns "
"problemas para outros programas que leem arquivos CSV (supondo que eles "
"aceitem números complexos)."

#: ../../library/csv.rst:511
msgid ""
"Write the *row* parameter to the writer's file object, formatted according "
"to the current :class:`Dialect`. Return the return value of the call to the "
"*write* method of the underlying file object."
msgstr ""
"Escreve o parâmetro *row* no objeto arquivo do escritor, formatado de acordo "
"com a :class:`Dialect` atual. Retorna o valor de retorno da chamada ao "
"método *write* do objeto arquivo subjacente."

#: ../../library/csv.rst:515
msgid "Added support of arbitrary iterables."
msgstr "Adicionado suporte a iteráveis arbitrários."

#: ../../library/csv.rst:520
msgid ""
"Write all elements in *rows* (an iterable of *row* objects as described "
"above) to the writer's file object, formatted according to the current "
"dialect."
msgstr ""
"Escreve todos os elementos em *rows* (um iterável de objetos *row*, conforme "
"descrito acima) no objeto arquivo do escritor, formatado de acordo com o "
"dialeto atual."

#: ../../library/csv.rst:524
msgid "Writer objects have the following public attribute:"
msgstr "Os objetos Writer têm o seguinte atributo público:"

#: ../../library/csv.rst:529
msgid "A read-only description of the dialect in use by the writer."
msgstr "Uma descrição somente leitura do dialeto em uso pelo escritor."

#: ../../library/csv.rst:532
msgid "DictWriter objects have the following public method:"
msgstr "Os objetos DictWriter têm o seguinte método público:"

#: ../../library/csv.rst:537
msgid ""
"Write a row with the field names (as specified in the constructor) to the "
"writer's file object, formatted according to the current dialect. Return the "
"return value of the :meth:`csvwriter.writerow` call used internally."
msgstr ""
"Escreve uma linha com os nomes dos campos (conforme especificado no "
"construtor) no objeto arquivo do escritor, formatado de acordo com o dialeto "
"atual. Retorna o valor de retorno da chamada :meth:`csvwriter.writerow` "
"usada internamente."

#: ../../library/csv.rst:542
msgid ""
":meth:`writeheader` now also returns the value returned by the :meth:"
"`csvwriter.writerow` method it uses internally."
msgstr ""
":meth:`writeheader` agora também retorna o valor retornado pelo método :meth:"
"`csvwriter.writerow` que ele usa internamente."

#: ../../library/csv.rst:550
msgid "Examples"
msgstr "Exemplos"

#: ../../library/csv.rst:552
msgid "The simplest example of reading a CSV file::"
msgstr "O exemplo mais simples de leitura de um arquivo CSV::"

#: ../../library/csv.rst:554
msgid ""
"import csv\n"
"with open('some.csv', newline='') as f:\n"
"    reader = csv.reader(f)\n"
"    for row in reader:\n"
"        print(row)"
msgstr ""
"import csv\n"
"with open('some.csv', newline='') as f:\n"
"    reader = csv.reader(f)\n"
"    for row in reader:\n"
"        print(row)"

#: ../../library/csv.rst:560
msgid "Reading a file with an alternate format::"
msgstr "Lendo um arquivo com um formato alternativo::"

#: ../../library/csv.rst:562
msgid ""
"import csv\n"
"with open('passwd', newline='') as f:\n"
"    reader = csv.reader(f, delimiter=':', quoting=csv.QUOTE_NONE)\n"
"    for row in reader:\n"
"        print(row)"
msgstr ""
"import csv\n"
"with open('passwd', newline='') as f:\n"
"    reader = csv.reader(f, delimiter=':', quoting=csv.QUOTE_NONE)\n"
"    for row in reader:\n"
"        print(row)"

#: ../../library/csv.rst:568
msgid "The corresponding simplest possible writing example is::"
msgstr "O exemplo de escrita possível mais simples possível é::"

#: ../../library/csv.rst:570
msgid ""
"import csv\n"
"with open('some.csv', 'w', newline='') as f:\n"
"    writer = csv.writer(f)\n"
"    writer.writerows(someiterable)"
msgstr ""
"import csv\n"
"with open('some.csv', 'w', newline='') as f:\n"
"    writer = csv.writer(f)\n"
"    writer.writerows(someiterable)"

#: ../../library/csv.rst:575
msgid ""
"Since :func:`open` is used to open a CSV file for reading, the file will by "
"default be decoded into unicode using the system default encoding (see :func:"
"`locale.getencoding`).  To decode a file using a different encoding, use the "
"``encoding`` argument of open::"
msgstr ""
"Como :func:`open` é usado para abrir um arquivo CSV para leitura, o arquivo "
"será decodificado por padrão em unicode usando a codificação padrão do "
"sistema (consulte :func:`locale.getencoding`). Para decodificar um arquivo "
"usando uma codificação diferente, use o argumento ``encoding`` do open::"

#: ../../library/csv.rst:580
msgid ""
"import csv\n"
"with open('some.csv', newline='', encoding='utf-8') as f:\n"
"    reader = csv.reader(f)\n"
"    for row in reader:\n"
"        print(row)"
msgstr ""
"import csv\n"
"with open('some.csv', newline='', encoding='utf-8') as f:\n"
"    reader = csv.reader(f)\n"
"    for row in reader:\n"
"        print(row)"

#: ../../library/csv.rst:586
msgid ""
"The same applies to writing in something other than the system default "
"encoding: specify the encoding argument when opening the output file."
msgstr ""
"O mesmo se aplica à escrita em algo diferente da codificação padrão do "
"sistema: especifique o argumento de codificação ao abrir o arquivo de saída."

#: ../../library/csv.rst:589
msgid "Registering a new dialect::"
msgstr "Registrando um novo dialeto::"

#: ../../library/csv.rst:591
msgid ""
"import csv\n"
"csv.register_dialect('unixpwd', delimiter=':', quoting=csv.QUOTE_NONE)\n"
"with open('passwd', newline='') as f:\n"
"    reader = csv.reader(f, 'unixpwd')"
msgstr ""
"import csv\n"
"csv.register_dialect('unixpwd', delimiter=':', quoting=csv.QUOTE_NONE)\n"
"with open('passwd', newline='') as f:\n"
"    reader = csv.reader(f, 'unixpwd')"

#: ../../library/csv.rst:596
msgid ""
"A slightly more advanced use of the reader --- catching and reporting "
"errors::"
msgstr ""
"Um uso um pouco mais avançado do leitor --- capturando e relatando erros::"

#: ../../library/csv.rst:598
msgid ""
"import csv, sys\n"
"filename = 'some.csv'\n"
"with open(filename, newline='') as f:\n"
"    reader = csv.reader(f)\n"
"    try:\n"
"        for row in reader:\n"
"            print(row)\n"
"    except csv.Error as e:\n"
"        sys.exit('file {}, line {}: {}'.format(filename, reader.line_num, e))"
msgstr ""
"import csv, sys\n"
"filename = 'some.csv'\n"
"with open(filename, newline='') as f:\n"
"    reader = csv.reader(f)\n"
"    try:\n"
"        for row in reader:\n"
"            print(row)\n"
"    except csv.Error as e:\n"
"        sys.exit('file {}, line {}: {}'.format(filename, reader.line_num, e))"

#: ../../library/csv.rst:608
msgid ""
"And while the module doesn't directly support parsing strings, it can easily "
"be done::"
msgstr ""
"E embora o módulo não tenha suporte diretamente à análise sintática de "
"strings, isso pode ser feito facilmente::"

#: ../../library/csv.rst:611
msgid ""
"import csv\n"
"for row in csv.reader(['one,two,three']):\n"
"    print(row)"
msgstr ""
"import csv\n"
"for row in csv.reader(['one,two,three']):\n"
"    print(row)"

#: ../../library/csv.rst:617
msgid "Footnotes"
msgstr "Notas de rodapé"

#: ../../library/csv.rst:618
msgid ""
"If ``newline=''`` is not specified, newlines embedded inside quoted fields "
"will not be interpreted correctly, and on platforms that use ``\\r\\n`` "
"linendings on write an extra ``\\r`` will be added.  It should always be "
"safe to specify ``newline=''``, since the csv module does its own (:term:"
"`universal <universal newlines>`) newline handling."
msgstr ""
"Se ``newline=''`` não for especificado, as novas linhas incorporadas nos "
"campos entre aspas não serão interpretadas corretamente, e nas plataformas "
"que usam fim de linha ``\\r\\n`` na escrita, um ``\\r`` extra será "
"adicionado. Sempre deve ser seguro especificar ``newline=''``, já que o "
"módulo csv faz seu próprio tratamento de nova linha (:term:`universal "
"<universal newlines>`)."

#: ../../library/csv.rst:11
msgid "csv"
msgstr "csv"

#: ../../library/csv.rst:11
msgid "data"
msgstr "dados"

#: ../../library/csv.rst:11
msgid "tabular"
msgstr "tabular"

#: ../../library/csv.rst:53
msgid "universal newlines"
msgstr "novas linhas universais"

#: ../../library/csv.rst:53
msgid "csv.reader function"
msgstr "função csv.reader"
