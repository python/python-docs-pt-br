# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-16 15:24+0000\n"
"PO-Revision-Date: 2023-05-24 02:12+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/array.rst:2
msgid ":mod:`array` --- Efficient arrays of numeric values"
msgstr ":mod:`array`--- Vetores eficientes de valores numéricos"

#: ../../library/array.rst:11
msgid ""
"This module defines an object type which can compactly represent an array of "
"basic values: characters, integers, floating point numbers.  Arrays are "
"sequence types and behave very much like lists, except that the type of "
"objects stored in them is constrained.  The type is specified at object "
"creation time by using a :dfn:`type code`, which is a single character.  The "
"following type codes are defined:"
msgstr ""
"Esse módulo define um tipo de objeto que pode representar compactamente um "
"vetor de valores básicos: caracteres, inteiros, números de ponto flutuante. "
"Vetores são tipos de sequência e funcionam bem parecidamente com listas, "
"porém o tipo dos objetos armazenados é restringido. O tipo é especificado na "
"criação do objeto usando um :dfn:`código de tipo`, que é um único caractere. "
"São definidos os seguintes códigos de tipo:"

#: ../../library/array.rst:19
msgid "Type code"
msgstr "Código de tipo"

#: ../../library/array.rst:19
msgid "C Type"
msgstr "Tipo em C"

#: ../../library/array.rst:19
msgid "Python Type"
msgstr "Tipo em Python"

#: ../../library/array.rst:19
msgid "Minimum size in bytes"
msgstr "Tamanho mínimo em bytes"

#: ../../library/array.rst:19
msgid "Notes"
msgstr "Notas"

#: ../../library/array.rst:21
msgid "``'b'``"
msgstr "``'b'``"

#: ../../library/array.rst:21
msgid "signed char"
msgstr "signed char"

#: ../../library/array.rst:21 ../../library/array.rst:23
#: ../../library/array.rst:27 ../../library/array.rst:29
#: ../../library/array.rst:31 ../../library/array.rst:33
#: ../../library/array.rst:35 ../../library/array.rst:37
#: ../../library/array.rst:39 ../../library/array.rst:41
msgid "int"
msgstr "int"

#: ../../library/array.rst:21 ../../library/array.rst:23
msgid "1"
msgstr "1"

#: ../../library/array.rst:23
msgid "``'B'``"
msgstr "``'B'``"

#: ../../library/array.rst:23
msgid "unsigned char"
msgstr "unsigned char"

#: ../../library/array.rst:25
msgid "``'u'``"
msgstr "``'u'``"

#: ../../library/array.rst:25
msgid "wchar_t"
msgstr "wchar_t"

#: ../../library/array.rst:25
msgid "Unicode character"
msgstr "Caractere unicode"

#: ../../library/array.rst:25 ../../library/array.rst:27
#: ../../library/array.rst:29 ../../library/array.rst:31
#: ../../library/array.rst:33
msgid "2"
msgstr "2"

#: ../../library/array.rst:25
msgid "\\(1)"
msgstr "\\(1)"

#: ../../library/array.rst:27
msgid "``'h'``"
msgstr "``'h'``"

#: ../../library/array.rst:27
msgid "signed short"
msgstr "signed short"

#: ../../library/array.rst:29
msgid "``'H'``"
msgstr "``'H'``"

#: ../../library/array.rst:29
msgid "unsigned short"
msgstr "unsigned short"

#: ../../library/array.rst:31
msgid "``'i'``"
msgstr "``'i'``"

#: ../../library/array.rst:31
msgid "signed int"
msgstr "signed int"

#: ../../library/array.rst:33
msgid "``'I'``"
msgstr "``'I'``"

#: ../../library/array.rst:33
msgid "unsigned int"
msgstr "unsigned int"

#: ../../library/array.rst:35
msgid "``'l'``"
msgstr "``'l'``"

#: ../../library/array.rst:35
msgid "signed long"
msgstr "signed long"

#: ../../library/array.rst:35 ../../library/array.rst:37
#: ../../library/array.rst:43
msgid "4"
msgstr "4"

#: ../../library/array.rst:37
msgid "``'L'``"
msgstr "``'L'``"

#: ../../library/array.rst:37
msgid "unsigned long"
msgstr "unsigned long"

#: ../../library/array.rst:39
msgid "``'q'``"
msgstr "``'q'``"

#: ../../library/array.rst:39
msgid "signed long long"
msgstr "signed long long"

#: ../../library/array.rst:39 ../../library/array.rst:41
#: ../../library/array.rst:45
msgid "8"
msgstr "8"

#: ../../library/array.rst:41
msgid "``'Q'``"
msgstr "``'Q'``"

#: ../../library/array.rst:41
msgid "unsigned long long"
msgstr "unsigned long long"

#: ../../library/array.rst:43
msgid "``'f'``"
msgstr "``'f'``"

#: ../../library/array.rst:43 ../../library/array.rst:45
msgid "float"
msgstr "ponto flutuante"

#: ../../library/array.rst:45
msgid "``'d'``"
msgstr "``'d'``"

#: ../../library/array.rst:45
msgid "double"
msgstr "double"

#: ../../library/array.rst:48
msgid "Notes:"
msgstr "Notas:"

#: ../../library/array.rst:51
msgid "It can be 16 bits or 32 bits depending on the platform."
msgstr "Pode ser de 16 ou 32 bits dependendo da plataforma."

#: ../../library/array.rst:53
msgid ""
"``array('u')`` now uses :c:type:`wchar_t` as C type instead of deprecated "
"``Py_UNICODE``. This change doesn't affect its behavior because "
"``Py_UNICODE`` is alias of :c:type:`wchar_t` since Python 3.3."
msgstr ""

#: ../../library/array.rst:61
msgid ""
"The actual representation of values is determined by the machine "
"architecture (strictly speaking, by the C implementation).  The actual size "
"can be accessed through the :attr:`array.itemsize` attribute."
msgstr ""

#: ../../library/array.rst:65
msgid "The module defines the following item:"
msgstr ""

#: ../../library/array.rst:70
msgid "A string with all available type codes."
msgstr "String com todos os códigos de tipo disponíveis."

#: ../../library/array.rst:73
msgid "The module defines the following type:"
msgstr "O módulo define o seguinte tipo:"

#: ../../library/array.rst:78
msgid ""
"A new array whose items are restricted by *typecode*, and initialized from "
"the optional *initializer* value, which must be a :class:`bytes` or :class:"
"`bytearray` object, a Unicode string, or iterable over elements of the "
"appropriate type."
msgstr ""

#: ../../library/array.rst:83
msgid ""
"If given a :class:`bytes` or :class:`bytearray` object, the initializer is "
"passed to the new array's :meth:`frombytes` method; if given a Unicode "
"string, the initializer is passed to the :meth:`fromunicode` method; "
"otherwise, the initializer's iterator is passed to the :meth:`extend` method "
"to add initial items to the array."
msgstr ""

#: ../../library/array.rst:90
msgid ""
"Array objects support the ordinary sequence operations of indexing, slicing, "
"concatenation, and multiplication.  When using slice assignment, the "
"assigned value must be an array object with the same type code; in all other "
"cases, :exc:`TypeError` is raised. Array objects also implement the buffer "
"interface, and may be used wherever :term:`bytes-like objects <bytes-like "
"object>` are supported."
msgstr ""
"Objetos array tem suporte para as operações de sequência comuns: indexação, "
"fatiamento, concatenação, e multiplicação.  Quando usando a atribuição de "
"fatias, o valor associado deve ser um objeto array com o mesmo código de "
"tipo; caso contrário, :exc:`TypeError` é levantada. Objetos array também "
"implementam a interface buffer, e também podem ser usados em qualquer lugar "
"onde :term:`objetos byte ou similar <bytes-like object>` é permitido."

#: ../../library/array.rst:96
msgid ""
"Raises an :ref:`auditing event <auditing>` ``array.__new__`` with arguments "
"``typecode``, ``initializer``."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``array.__new__`` com os "
"argumentos ``typecode``, ``initializer``."

#: ../../library/array.rst:101
msgid "The typecode character used to create the array."
msgstr "O caractere typecode usado para criar o vetor."

#: ../../library/array.rst:106
msgid "The length in bytes of one array item in the internal representation."
msgstr "O tamanho em bytes de um item do vetor em representação interna."

#: ../../library/array.rst:111
msgid "Append a new item with value *x* to the end of the array."
msgstr "Adiciona um novo item com valor *x* ao final do vetor."

#: ../../library/array.rst:116
msgid ""
"Return a tuple ``(address, length)`` giving the current memory address and "
"the length in elements of the buffer used to hold array's contents.  The "
"size of the memory buffer in bytes can be computed as ``array.buffer_info()"
"[1] * array.itemsize``.  This is occasionally useful when working with low-"
"level (and inherently unsafe) I/O interfaces that require memory addresses, "
"such as certain :c:func:`!ioctl` operations.  The returned numbers are valid "
"as long as the array exists and no length-changing operations are applied to "
"it."
msgstr ""

#: ../../library/array.rst:126
msgid ""
"When using array objects from code written in C or C++ (the only way to "
"effectively make use of this information), it makes more sense to use the "
"buffer interface supported by array objects.  This method is maintained for "
"backward compatibility and should be avoided in new code.  The buffer "
"interface is documented in :ref:`bufferobjects`."
msgstr ""
"Quando se está usando vetores de código escrito em C ou C++ (o único jeito "
"efetivo de usar essa informação), faz mais sentido usar a interface do "
"buffer suportada pelos vetores. Esse método é mantido para "
"retrocompatibilidade e deve ser evitado em código novo. A interface de "
"buffers está documentada em :ref:`bufferobjects`."

#: ../../library/array.rst:135
msgid ""
"\"Byteswap\" all items of the array.  This is only supported for values "
"which are 1, 2, 4, or 8 bytes in size; for other types of values, :exc:"
"`RuntimeError` is raised.  It is useful when reading data from a file "
"written on a machine with a different byte order."
msgstr ""
"\"Byteswap\" todos os itens do vetor. Isso é somente suportado para valores "
"de 1, 2, 4 ou 8 bytes de tamanho; para outros tipos de valores é levantada :"
"exc:`RuntimeError` .  Isso é útil quando estamos lendo dados de um arquivo "
"para serem escritos em um arquivo de outra máquina de ordem de bytes "
"diferente."

#: ../../library/array.rst:143
msgid "Return the number of occurrences of *x* in the array."
msgstr "Retorna a quantidade de ocorrências de *x* no vetor."

#: ../../library/array.rst:148
msgid ""
"Append items from *iterable* to the end of the array.  If *iterable* is "
"another array, it must have *exactly* the same type code; if not, :exc:"
"`TypeError` will be raised.  If *iterable* is not an array, it must be "
"iterable and its elements must be the right type to be appended to the array."
msgstr ""
"Acrescenta os itens de *iterable* ao final do vetor. Se *iterable* for outro "
"vetor, ele deve ter *exatamente* o mesmo código de tipo; senão, ocorrerá "
"uma :exc:`TypeError`. Se *iterable* não for um vetor, ele deve ser iterável "
"e seus elementos devem ser do tipo correto para ser acrescentado ao vetor."

#: ../../library/array.rst:156
msgid ""
"Appends items from the :term:`bytes-like object`, interpreting its content "
"as an array of machine values (as if it had been read from a file using the :"
"meth:`fromfile` method)."
msgstr ""

#: ../../library/array.rst:160
msgid ":meth:`!fromstring` is renamed to :meth:`frombytes` for clarity."
msgstr ""

#: ../../library/array.rst:166
msgid ""
"Read *n* items (as machine values) from the :term:`file object` *f* and "
"append them to the end of the array.  If less than *n* items are available, :"
"exc:`EOFError` is raised, but the items that were available are still "
"inserted into the array."
msgstr ""
"Lê *n* itens (como valores de máquinas) do :term:`objeto arquivo <file "
"object>` *f* e adiciona-os ao fim do vetor. Se estão disponíveis menos de "
"*n* itens, :exc:`EOFError` é levantada, mas os itens disponíveis ainda são "
"inseridos ao final do vetor."

#: ../../library/array.rst:174
msgid ""
"Append items from the list.  This is equivalent to ``for x in list: a."
"append(x)`` except that if there is a type error, the array is unchanged."
msgstr ""
"Adiciona itens de *list*.  Isso é equivalente a ``for x in list: a."
"append(x)`` exceto que se ocorrer um errro de tipo, o vetor não é alterado."

#: ../../library/array.rst:180
msgid ""
"Extends this array with data from the given Unicode string. The array must "
"have type code ``'u'``; otherwise a :exc:`ValueError` is raised. Use ``array."
"frombytes(unicodestring.encode(enc))`` to append Unicode data to an array of "
"some other type."
msgstr ""

#: ../../library/array.rst:188
msgid ""
"Return the smallest *i* such that *i* is the index of the first occurrence "
"of *x* in the array.  The optional arguments *start* and *stop* can be "
"specified to search for *x* within a subsection of the array.  Raise :exc:"
"`ValueError` if *x* is not found."
msgstr ""

#: ../../library/array.rst:193
msgid "Added optional *start* and *stop* parameters."
msgstr ""

#: ../../library/array.rst:199
msgid ""
"Insert a new item with value *x* in the array before position *i*. Negative "
"values are treated as being relative to the end of the array."
msgstr ""
"Insere um novo item com o *x* no vetor antes da posição *i*. Valores "
"negativos são tratados como sendo em relação ao fim do vetor."

#: ../../library/array.rst:205
msgid ""
"Removes the item with the index *i* from the array and returns it. The "
"optional argument defaults to ``-1``, so that by default the last item is "
"removed and returned."
msgstr ""
"Remove o item com o índice *i* do vetor e retorna este item. O valor padrão "
"do argumento é ``-1``, assim por padrão o último item é removido e retornado."

#: ../../library/array.rst:212
msgid "Remove the first occurrence of *x* from the array."
msgstr "Remove a primeira ocorrência de *x* do vetor."

#: ../../library/array.rst:217
msgid "Reverse the order of the items in the array."
msgstr "Inverte a ordem dos itens no vetor."

#: ../../library/array.rst:222
msgid ""
"Convert the array to an array of machine values and return the bytes "
"representation (the same sequence of bytes that would be written to a file "
"by the :meth:`tofile` method.)"
msgstr ""
"Devolve os itens do vetor como um vetor de valores de máquina com a "
"representação em bytes (a mesma sequência de bytes que seria escrita pelo "
"método :meth:`tofile`.)"

#: ../../library/array.rst:226
msgid ":meth:`!tostring` is renamed to :meth:`tobytes` for clarity."
msgstr ""

#: ../../library/array.rst:232
msgid "Write all items (as machine values) to the :term:`file object` *f*."
msgstr ""
"Escreve todos os itens (como valores de máquinas) para o :term:`objeto "
"arquivo <file object>` *f*."

#: ../../library/array.rst:237
msgid "Convert the array to an ordinary list with the same items."
msgstr "Devolve os itens do vetor como uma lista comum."

#: ../../library/array.rst:242
msgid ""
"Convert the array to a Unicode string.  The array must have a type ``'u'``; "
"otherwise a :exc:`ValueError` is raised. Use ``array.tobytes().decode(enc)`` "
"to obtain a Unicode string from an array of some other type."
msgstr ""

#: ../../library/array.rst:247
msgid ""
"The string representation of array objects has the form ``array(typecode, "
"initializer)``. The *initializer* is omitted if the array is empty, "
"otherwise it is a Unicode string if the *typecode* is ``'u'``, otherwise it "
"is a list of numbers. The string representation is guaranteed to be able to "
"be converted back to an array with the same type and value using :func:"
"`eval`, so long as the :class:`~array.array` class has been imported using "
"``from array import array``. Variables ``inf`` and ``nan`` must also be "
"defined if it contains corresponding floating point values. Examples::"
msgstr ""

#: ../../library/array.rst:268
msgid "Module :mod:`struct`"
msgstr "Módulo :mod:`struct`"

#: ../../library/array.rst:268
msgid "Packing and unpacking of heterogeneous binary data."
msgstr "Empacotamento e desempacotamento de dados binários heterogêneos."

#: ../../library/array.rst:272
msgid "Module :mod:`xdrlib`"
msgstr "Módulo :mod:`xdrlib`"

#: ../../library/array.rst:271
msgid ""
"Packing and unpacking of External Data Representation (XDR) data as used in "
"some remote procedure call systems."
msgstr ""
"Empacotamento e desempacotamento de dados External Data Representation (XDR) "
"usados em alguns sistemas para chamada remota de procedimentos."

#: ../../library/array.rst:274
msgid "`NumPy <https://numpy.org/>`_"
msgstr ""

#: ../../library/array.rst:275
msgid "The NumPy package defines another array type."
msgstr ""

#: ../../library/array.rst:7
msgid "arrays"
msgstr ""
