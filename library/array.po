# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-09 18:46+0900\n"
"PO-Revision-Date: 2019-09-01 05:18+0000\n"
"Last-Translator: Juliana Karoline <julianaklulo@gmail.com>\n"
"Language-Team: Portuguese (Brazil) (http://www.transifex.com/python-doc/"
"python-27/language/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../library/array.rst:3
msgid ":mod:`array` --- Efficient arrays of numeric values"
msgstr ":mod:`array`--- Arrays eficientes de valores numéricos"

#: ../../library/array.rst:11
msgid ""
"This module defines an object type which can compactly represent an array of "
"basic values: characters, integers, floating point numbers.  Arrays are "
"sequence types and behave very much like lists, except that the type of "
"objects stored in them is constrained.  The type is specified at object "
"creation time by using a :dfn:`type code`, which is a single character.  The "
"following type codes are defined:"
msgstr ""
"Esse módulo define um tipo de objeto que pode representar compactamente um "
"vetor de valores básicos: caracteres, inteiros, números de ponto flutuante. "
"Vetores são tipos de sequência e funcionam bem parecidamente com listas, "
"porém o tipo dos objetos armazenados é restringido. O tipo é especificado na "
"criação do objeto usando um type code, que é um único caractere. Os "
"seguintes type codes são definidos: "

#: ../../library/array.rst:19
msgid "Type code"
msgstr "Type code"

#: ../../library/array.rst:19
msgid "C Type"
msgstr "Tipo em C"

#: ../../library/array.rst:19
msgid "Python Type"
msgstr "Tipo em Python"

#: ../../library/array.rst:19
msgid "Minimum size in bytes"
msgstr "Tamanho mínimo em bytes"

#: ../../library/array.rst:21
msgid "``'c'``"
msgstr "``'c'``"

#: ../../library/array.rst:21
msgid "char"
msgstr "char"

#: ../../library/array.rst:21
msgid "character"
msgstr "caractere"

#: ../../library/array.rst:21 ../../library/array.rst:23
#: ../../library/array.rst:25
msgid "1"
msgstr "1"

#: ../../library/array.rst:23
msgid "``'b'``"
msgstr "``'b'``"

#: ../../library/array.rst:23
msgid "signed char"
msgstr "signed char"

#: ../../library/array.rst:23 ../../library/array.rst:25
#: ../../library/array.rst:29 ../../library/array.rst:31
#: ../../library/array.rst:33 ../../library/array.rst:37
msgid "int"
msgstr "int"

#: ../../library/array.rst:25
msgid "``'B'``"
msgstr "``'B'``"

#: ../../library/array.rst:25
msgid "unsigned char"
msgstr "unsigned char"

#: ../../library/array.rst:27
msgid "``'u'``"
msgstr "``'u'``"

#: ../../library/array.rst:27
msgid "Py_UNICODE"
msgstr "Py_UNICODE"

#: ../../library/array.rst:27
msgid "Unicode character"
msgstr "Caractere unicode"

#: ../../library/array.rst:27
msgid "2 (see note)"
msgstr ""

#: ../../library/array.rst:29
msgid "``'h'``"
msgstr "``'h'``"

#: ../../library/array.rst:29
msgid "signed short"
msgstr "signed short"

#: ../../library/array.rst:29 ../../library/array.rst:31
#: ../../library/array.rst:33 ../../library/array.rst:35
msgid "2"
msgstr "2"

#: ../../library/array.rst:31
msgid "``'H'``"
msgstr "``'H'``"

#: ../../library/array.rst:31
msgid "unsigned short"
msgstr "unsigned short"

#: ../../library/array.rst:33
msgid "``'i'``"
msgstr "``'i'``"

#: ../../library/array.rst:33
msgid "signed int"
msgstr "signed int"

#: ../../library/array.rst:35
msgid "``'I'``"
msgstr "``'I'``"

#: ../../library/array.rst:35
msgid "unsigned int"
msgstr "unsigned int"

#: ../../library/array.rst:35 ../../library/array.rst:39
msgid "long"
msgstr "extenso, comprido"

#: ../../library/array.rst:37
msgid "``'l'``"
msgstr "``'l'``"

#: ../../library/array.rst:37
msgid "signed long"
msgstr "signed long"

#: ../../library/array.rst:37 ../../library/array.rst:39
#: ../../library/array.rst:41
msgid "4"
msgstr "4"

#: ../../library/array.rst:39
msgid "``'L'``"
msgstr "``'L'``"

#: ../../library/array.rst:39
msgid "unsigned long"
msgstr "unsigned long"

#: ../../library/array.rst:41
msgid "``'f'``"
msgstr "``'f'``"

#: ../../library/array.rst:41 ../../library/array.rst:43
msgid "float"
msgstr "float"

#: ../../library/array.rst:43
msgid "``'d'``"
msgstr "``'d'``"

#: ../../library/array.rst:43
msgid "double"
msgstr "double"

#: ../../library/array.rst:43
msgid "8"
msgstr "8"

#: ../../library/array.rst:48
msgid ""
"The ``'u'`` typecode corresponds to Python's unicode character.  On narrow "
"Unicode builds this is 2-bytes, on wide builds this is 4-bytes."
msgstr ""

#: ../../library/array.rst:51
msgid ""
"The actual representation of values is determined by the machine "
"architecture (strictly speaking, by the C implementation).  The actual size "
"can be accessed through the :attr:`itemsize` attribute.  The values stored  "
"for ``'L'`` and ``'I'`` items will be represented as Python long integers "
"when retrieved, because Python's plain integer type cannot represent the "
"full range of C's unsigned (long) integers."
msgstr ""

#: ../../library/array.rst:58
msgid "The module defines the following type:"
msgstr "O módulo define o seguinte tipo:"

#: ../../library/array.rst:63
msgid ""
"A new array whose items are restricted by *typecode*, and initialized from "
"the optional *initializer* value, which must be a list, string, or iterable "
"over elements of the appropriate type."
msgstr ""

#: ../../library/array.rst:67
msgid "Formerly, only lists or strings were accepted."
msgstr ""

#: ../../library/array.rst:70
msgid ""
"If given a list or string, the initializer is passed to the new array's :"
"meth:`fromlist`, :meth:`fromstring`, or :meth:`fromunicode` method (see "
"below) to add initial items to the array.  Otherwise, the iterable "
"initializer is passed to the :meth:`extend` method."
msgstr ""

#: ../../library/array.rst:78
msgid "Obsolete alias for :class:`~array.array`."
msgstr ""

#: ../../library/array.rst:80
msgid ""
"Array objects support the ordinary sequence operations of indexing, slicing, "
"concatenation, and multiplication.  When using slice assignment, the "
"assigned value must be an array object with the same type code; in all other "
"cases, :exc:`TypeError` is raised. Array objects also implement the buffer "
"interface, and may be used wherever buffer objects are supported."
msgstr ""

#: ../../library/array.rst:86
msgid "The following data items and methods are also supported:"
msgstr "Os seguintes itens e métodos também são suportados:"

#: ../../library/array.rst:90
msgid "The typecode character used to create the array."
msgstr "O caracter typecode usado para criar o array"

#: ../../library/array.rst:95
msgid "The length in bytes of one array item in the internal representation."
msgstr "O tamanho em bytes de um item do array em representação interna"

#: ../../library/array.rst:100
msgid "Append a new item with value *x* to the end of the array."
msgstr "Adiciona um novo item com valor *x* ao final do array."

#: ../../library/array.rst:105
msgid ""
"Return a tuple ``(address, length)`` giving the current memory address and "
"the length in elements of the buffer used to hold array's contents.  The "
"size of the memory buffer in bytes can be computed as ``array.buffer_info()"
"[1] * array.itemsize``.  This is occasionally useful when working with low-"
"level (and inherently unsafe) I/O interfaces that require memory addresses, "
"such as certain :c:func:`ioctl` operations.  The returned numbers are valid "
"as long as the array exists and no length-changing operations are applied to "
"it."
msgstr ""
"Retorna uma tupla ``(address, length)`` com o endereço corrente da memória e "
"o tamanho em elementos do buffer usado para armazenar conteúdos do array.  O "
"tamanho do buffer da memória em bytes pode ser computado como ``array."
"buffer_info()[1] * array.itemsize``. Isso é ocasionalmente útil quando se "
"está trabalhando com interfaces I/O de baixo nível (inerentemente inseguras) "
"que precisam de endereços de memória, como algumas operações :c:func:"
"`ioctl`. Os números retornados são válidos enquanto o array existir e "
"nenhuma operação de alteração de tamanho for aplicada a ele."

#: ../../library/array.rst:115
msgid ""
"When using array objects from code written in C or C++ (the only way to "
"effectively make use of this information), it makes more sense to use the "
"buffer interface supported by array objects.  This method is maintained for "
"backward compatibility and should be avoided in new code.  The buffer "
"interface is documented in :ref:`bufferobjects`."
msgstr ""
"Quando se está usando arrays de código escrito em C ou C++ (o único jeito "
"efetivo de usar essa informação), faz mais sentido usar a interface do "
"buffer suportada pelos arrays. Esse método é mantido para "
"retrocompatibilidade e deve ser evitado em código novo. A interface de "
"buffers está documentada em :ref:`bufferobjects`."

#: ../../library/array.rst:124
msgid ""
"\"Byteswap\" all items of the array.  This is only supported for values "
"which are 1, 2, 4, or 8 bytes in size; for other types of values, :exc:"
"`RuntimeError` is raised.  It is useful when reading data from a file "
"written on a machine with a different byte order."
msgstr ""
"\"Byteswap\" todos os itens do vetor. Isso é somente suportado para valores "
"de 1, 2, 4 ou 8 bytes de tamanho; para outros tipos de valores é levantada :"
"exc:`RuntimeError` .  Isso é útil quando estamos lendo dados de um arquivo "
"para serem escritos em um arquivo de outra máquina de ordem de bytes "
"diferente."

#: ../../library/array.rst:132
msgid "Return the number of occurrences of *x* in the array."
msgstr "Retorna a quantidade de ocorrências de *x* no array."

#: ../../library/array.rst:137
msgid ""
"Append items from *iterable* to the end of the array.  If *iterable* is "
"another array, it must have *exactly* the same type code; if not, :exc:"
"`TypeError` will be raised.  If *iterable* is not an array, it must be "
"iterable and its elements must be the right type to be appended to the array."
msgstr ""
"Acrescenta os itens em *iterable* ao final do array. Se *iterable* for outro "
"array, ele deve ter *exatamente* o mesmo type code; senão, ocorrerá um :exc:"
"`TypeError`. Se *iterable* não for um array, ele deve ser iterável e seus "
"elementos devem ser do tipo correto para ser acrescentado ao array, "

#: ../../library/array.rst:142
msgid "Formerly, the argument could only be another array."
msgstr ""

#: ../../library/array.rst:148 ../../library/array.rst:199
msgid ""
"Read *n* items (as machine values) from the file object *f* and append them "
"to the end of the array.  If less than *n* items are available, :exc:"
"`EOFError` is raised, but the items that were available are still inserted "
"into the array. *f* must be a real built-in file object; something else with "
"a :meth:`read` method won't do."
msgstr ""

#: ../../library/array.rst:157
msgid ""
"Append items from the list.  This is equivalent to ``for x in list: a."
"append(x)`` except that if there is a type error, the array is unchanged."
msgstr ""
"Adiciona itens de *list*.  Isso é equivalente a ``for x in list: a."
"append(x)`` exceto que se ocorrer um errro de tipo, o vetor não é alterado."

#: ../../library/array.rst:163
msgid ""
"Appends items from the string, interpreting the string as an array of "
"machine values (as if it had been read from a file using the :meth:"
"`fromfile` method)."
msgstr ""
"Adiciona itens da string, interpretando a string como um array (como se "
"tivesse sido lido de um arquivo usando o método :meth:`fromfile`)."

#: ../../library/array.rst:169
msgid ""
"Extends this array with data from the given unicode string.  The array must "
"be a type ``'u'`` array; otherwise a :exc:`ValueError` is raised.  Use "
"``array.fromstring(unicodestring.encode(enc))`` to append Unicode data to an "
"array of some other type."
msgstr ""

#: ../../library/array.rst:177
msgid ""
"Return the smallest *i* such that *i* is the index of the first occurrence "
"of *x* in the array."
msgstr ""
"Retorna o menor *i* em que *i* é o índice da primeira ocorrência de *x* no "
"vetor."

#: ../../library/array.rst:183
msgid ""
"Insert a new item with value *x* in the array before position *i*. Negative "
"values are treated as being relative to the end of the array."
msgstr ""
"Insere um novo item com o *x* no vetor antes da posição *i*. Valores "
"negativos são tratados como sendo em relação ao fim do vetor."

#: ../../library/array.rst:189
msgid ""
"Removes the item with the index *i* from the array and returns it. The "
"optional argument defaults to ``-1``, so that by default the last item is "
"removed and returned."
msgstr ""
"Remove o item com o índice *i* do vetor e retorna este item. O valor padrão "
"do argumento é ``-1``, assim por padrão o último item é removido e retornado."

#: ../../library/array.rst:196
msgid "Use the :meth:`fromfile` method."
msgstr ""

#: ../../library/array.rst:208
msgid "Remove the first occurrence of *x* from the array."
msgstr "Remove a primeira ocorrência de *x* da array."

#: ../../library/array.rst:213
msgid "Reverse the order of the items in the array."
msgstr "Inverte a ordem dos itens na array."

#: ../../library/array.rst:218 ../../library/array.rst:245
msgid "Write all items (as machine values) to the file object *f*."
msgstr ""

#: ../../library/array.rst:223
msgid "Convert the array to an ordinary list with the same items."
msgstr "Converte a array para uma lista comum com os mesmos itens."

#: ../../library/array.rst:228
msgid ""
"Convert the array to an array of machine values and return the string "
"representation (the same sequence of bytes that would be written to a file "
"by the :meth:`tofile` method.)"
msgstr ""

#: ../../library/array.rst:235
msgid ""
"Convert the array to a unicode string.  The array must be a type ``'u'`` "
"array; otherwise a :exc:`ValueError` is raised. Use ``array.tostring()."
"decode(enc)`` to obtain a unicode string from an array of some other type."
msgstr ""

#: ../../library/array.rst:242
msgid "Use the :meth:`tofile` method."
msgstr ""

#: ../../library/array.rst:247
msgid ""
"When an array object is printed or converted to a string, it is represented "
"as ``array(typecode, initializer)``.  The *initializer* is omitted if the "
"array is empty, otherwise it is a string if the *typecode* is ``'c'``, "
"otherwise it is a list of numbers.  The string is guaranteed to be able to "
"be converted back to an array with the same type and value using :func:"
"`eval`, so long as the :class:`~array.array` class has been imported using "
"``from array import array``. Examples::"
msgstr ""

#: ../../library/array.rst:265
msgid "Module :mod:`struct`"
msgstr "Modulo :mod:`struct`"

#: ../../library/array.rst:265
msgid "Packing and unpacking of heterogeneous binary data."
msgstr "Empacotamento e desempacotamento de dados binários heterogêneos."

#: ../../library/array.rst:269
msgid "Module :mod:`xdrlib`"
msgstr "Módulo :mod:`xdrlib`"

#: ../../library/array.rst:268
msgid ""
"Packing and unpacking of External Data Representation (XDR) data as used in "
"some remote procedure call systems."
msgstr ""
"Empacotamento e desempacotamento de dados External Data Representation (XDR) "
"usados em alguns sistemas para chamada remota de procedimentos."

#: ../../library/array.rst:272
msgid "`The Numerical Python Documentation <https://docs.scipy.org/doc/>`_"
msgstr "`The Numerical Python Documentation <https://docs.scipy.org/doc/>`_"

#: ../../library/array.rst:272
msgid ""
"The Numeric Python extension (NumPy) defines another array type; see http://"
"www.numpy.org/ for further information about Numerical Python."
msgstr ""
"A extensão Numeric Python (NumPy) define outro tipo array; veja http://www."
"numpy.org/ para mais informações sobre Numerical Python."
