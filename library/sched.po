# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-08 14:49-0300\n"
"PO-Revision-Date: 2025-08-15 19:01+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/sched.rst:2
msgid ":mod:`!sched` --- Event scheduler"
msgstr ":mod:`!sched` --- Agendador de eventos"

#: ../../library/sched.rst:9
msgid "**Source code:** :source:`Lib/sched.py`"
msgstr "**Código-fonte:** :source:`Lib/sched.py`"

#: ../../library/sched.rst:15
msgid ""
"The :mod:`sched` module defines a class which implements a general purpose "
"event scheduler:"
msgstr ""
"O módulo :mod:`sched` define uma classe que implementa um agendador de "
"eventos de uso geral:"

#: ../../library/sched.rst:20
msgid ""
"The :class:`scheduler` class defines a generic interface to scheduling "
"events. It needs two functions to actually deal with the \"outside world\" "
"--- *timefunc* should be callable without arguments, and return  a number "
"(the \"time\", in any units whatsoever).  The *delayfunc* function should be "
"callable with one argument, compatible with the output of *timefunc*, and "
"should delay that many time units. *delayfunc* will also be called with the "
"argument ``0`` after each event is run to allow other threads an opportunity "
"to run in multi-threaded applications."
msgstr ""
"A classe :class:`scheduler` define uma interface genérica para agendar "
"eventos. Ela precisa de duas funções para lidar com o \"mundo externo\" --- "
"*timefunc* deve ser chamável sem argumentos e retornar um número (o "
"\"tempo\", em quaisquer unidades). A função *delayfunc* deve ser chamável "
"com um argumento, compatível com a saída de *timefunc*, e deve atrasar a "
"mesma quantidade de unidades de tempo. *delayfunc* também será chamada com o "
"argumento ``0`` após a execução de cada evento para permitir que outras "
"threads executem em aplicações multithread."

#: ../../library/sched.rst:29
msgid "*timefunc* and *delayfunc* parameters are optional."
msgstr "Os parâmetros *timefunc* e *delayfunc* são opcionais."

#: ../../library/sched.rst:32
msgid ""
":class:`scheduler` class can be safely used in multi-threaded environments."
msgstr ""
"A classe :class:`scheduler` pode ser usada com segurança em ambientes "
"multithread."

#: ../../library/sched.rst:36
msgid "Example::"
msgstr "Exemplo::"

#: ../../library/sched.rst:38
msgid ""
">>> import sched, time\n"
">>> s = sched.scheduler(time.time, time.sleep)\n"
">>> def print_time(a='default'):\n"
"...     print(\"From print_time\", time.time(), a)\n"
"...\n"
">>> def print_some_times():\n"
"...     print(time.time())\n"
"...     s.enter(10, 1, print_time)\n"
"...     s.enter(5, 2, print_time, argument=('positional',))\n"
"...     # despite having higher priority, 'keyword' runs after 'positional' "
"as enter() is relative\n"
"...     s.enter(5, 1, print_time, kwargs={'a': 'keyword'})\n"
"...     s.enterabs(1_650_000_000, 10, print_time, argument=(\"first "
"enterabs\",))\n"
"...     s.enterabs(1_650_000_000, 5, print_time, argument=(\"second "
"enterabs\",))\n"
"...     s.run()\n"
"...     print(time.time())\n"
"...\n"
">>> print_some_times()\n"
"1652342830.3640375\n"
"From print_time 1652342830.3642538 second enterabs\n"
"From print_time 1652342830.3643398 first enterabs\n"
"From print_time 1652342835.3694863 positional\n"
"From print_time 1652342835.3696074 keyword\n"
"From print_time 1652342840.369612 default\n"
"1652342840.3697174"
msgstr ""
">>> import sched, time\n"
">>> s = sched.scheduler(time.time, time.sleep)\n"
">>> def print_time(a='default'):\n"
"...     print(\"From print_time\", time.time(), a)\n"
"...\n"
">>> def print_some_times():\n"
"...     print(time.time())\n"
"...     s.enter(10, 1, print_time)\n"
"...     s.enter(5, 2, print_time, argument=('positional',))\n"
"...     # apesar de ter prioridade mais alta, 'keyword' é executado depois "
"de 'positional', pois enter() é relativo\n"
"...     s.enter(5, 1, print_time, kwargs={'a': 'keyword'})\n"
"...     s.enterabs(1_650_000_000, 10, print_time, argument=(\"first "
"enterabs\",))\n"
"...     s.enterabs(1_650_000_000, 5, print_time, argument=(\"second "
"enterabs\",))\n"
"...     s.run()\n"
"...     print(time.time())\n"
"...\n"
">>> print_some_times()\n"
"1652342830.3640375\n"
"From print_time 1652342830.3642538 second enterabs\n"
"From print_time 1652342830.3643398 first enterabs\n"
"From print_time 1652342835.3694863 positional\n"
"From print_time 1652342835.3696074 keyword\n"
"From print_time 1652342840.369612 default\n"
"1652342840.3697174"

#: ../../library/sched.rst:67
msgid "Scheduler Objects"
msgstr "Objetos Scheduler"

#: ../../library/sched.rst:69
msgid ":class:`scheduler` instances have the following methods and attributes:"
msgstr "As instâncias :class:`scheduler` têm os seguintes métodos e atributos:"

#: ../../library/sched.rst:74
msgid ""
"Schedule a new event. The *time* argument should be a numeric type "
"compatible with the return value of the *timefunc* function passed  to the "
"constructor. Events scheduled for the same *time* will be executed in the "
"order of their *priority*. A lower number represents a higher priority."
msgstr ""
"Agenda um novo evento. O argumento *time* deve ser um tipo numérico "
"compatível com o valor de retorno da função *timefunc* passada ao "
"construtor. Eventos agendados para o mesmo *time* serão executados na ordem "
"de sua prioridade *priority*. Um número menor representa uma prioridade "
"maior."

#: ../../library/sched.rst:79
msgid ""
"Executing the event means executing ``action(*argument, **kwargs)``. "
"*argument* is a sequence holding the positional arguments for *action*. "
"*kwargs* is a dictionary holding the keyword arguments for *action*."
msgstr ""
"Executa o evento significa executar ``action(*argument, **kwargs)``. "
"*argument* é uma sequência que contém os argumentos posicionais para "
"*action*. *kwargs* é um dicionário que contém os argumentos nomeados para "
"*action*."

#: ../../library/sched.rst:83
msgid ""
"Return value is an event which may be used for later cancellation of the "
"event (see :meth:`cancel`)."
msgstr ""
"O valor de retorno é um evento que pode ser usado para cancelamento "
"posterior do evento (veja :meth:`cancel`)."

#: ../../library/sched.rst:86 ../../library/sched.rst:99
msgid "*argument* parameter is optional."
msgstr "o parâmetro *argument* é opcional."

#: ../../library/sched.rst:89 ../../library/sched.rst:102
msgid "*kwargs* parameter was added."
msgstr "o parâmetro *kwargs* foi adicionado."

#: ../../library/sched.rst:95
msgid ""
"Schedule an event for *delay* more time units. Other than the relative time, "
"the other arguments, the effect and the return value are the same as those "
"for :meth:`enterabs`."
msgstr ""
"Agenda um evento para atrasar *delay* mais unidades de tempo. Além do tempo "
"relativo, os outros argumentos, o efeito e o valor de retorno são os mesmos "
"de :meth:`enterabs`."

#: ../../library/sched.rst:107
msgid ""
"Remove the event from the queue. If *event* is not an event currently in the "
"queue, this method will raise a :exc:`ValueError`."
msgstr ""
"Remove o evento da fila. Se *event* não for um evento atualmente na fila, "
"este método levantará uma :exc:`ValueError`."

#: ../../library/sched.rst:113
msgid "Return ``True`` if the event queue is empty."
msgstr "Retorna ``True`` se a fila de eventos estiver vazia."

#: ../../library/sched.rst:118
msgid ""
"Run all scheduled events. This method will wait  (using the *delayfunc* "
"function passed to the constructor) for the next event, then execute it and "
"so on until there are no more scheduled events."
msgstr ""
"Executa todos os eventos agendados. Este método aguardará (usando a função "
"*delayfunc* passada ao construtor) o próximo evento, depois o executará e "
"assim por diante até que não haja mais eventos agendados."

#: ../../library/sched.rst:122
msgid ""
"If *blocking* is false executes the scheduled events due to expire soonest "
"(if any) and then return the deadline of the next scheduled call in the "
"scheduler (if any)."
msgstr ""
"Se *blocking* for falso, executa os eventos agendados que expirarão mais "
"cedo (se houver) e então retorna o prazo da próxima chamada agendada no "
"agendador (se houver)."

#: ../../library/sched.rst:126
msgid ""
"Either *action* or *delayfunc* can raise an exception.  In either case, the "
"scheduler will maintain a consistent state and propagate the exception.  If "
"an exception is raised by *action*, the event will not be attempted in "
"future calls to :meth:`run`."
msgstr ""
"Tanto *action* quanto *delayfunc* podem levantar uma exceção. Em ambos os "
"casos, o agendador manterá um estado consistente e propagará a exceção. Se "
"uma exceção for gerada por *action*, o evento não será tentado em chamadas "
"futuras para :meth:`run`."

#: ../../library/sched.rst:131
msgid ""
"If a sequence of events takes longer to run than the time available before "
"the next event, the scheduler will simply fall behind.  No events will be "
"dropped; the calling code is responsible for canceling  events which are no "
"longer pertinent."
msgstr ""
"Se uma sequência de eventos demorar mais para ser executada do que o tempo "
"disponível antes do próximo evento, o agendador simplesmente ficará para "
"trás. Nenhum evento será descartado; o código de chamada é responsável por "
"cancelar eventos que não são mais pertinentes."

#: ../../library/sched.rst:136
msgid "*blocking* parameter was added."
msgstr "O argumento *blocking* foi adicionado."

#: ../../library/sched.rst:141
msgid ""
"Read-only attribute returning a list of upcoming events in the order they "
"will be run.  Each event is shown as a :term:`named tuple` with the "
"following fields:  time, priority, action, argument, kwargs."
msgstr ""
"Atributo somente leitura que retorna uma lista de eventos futuros na ordem "
"em que serão executados. Cada evento é exibido como uma :term:`tupla "
"nomeada` com os seguintes campos: time, priority, action, argument, kwargs."

#: ../../library/sched.rst:11
msgid "event scheduling"
msgstr "agendamento de eventos"
