# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# i17obot <i17obot@rougeth.com>, 2021
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-02-21 14:16+0000\n"
"PO-Revision-Date: 2021-06-28 01:06+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/filecmp.rst:2
msgid ":mod:`!filecmp` --- File and Directory Comparisons"
msgstr ":mod:`!filecmp` --- Comparações de arquivos e diretórios"

#: ../../library/filecmp.rst:9
msgid "**Source code:** :source:`Lib/filecmp.py`"
msgstr "**Código-fonte:** :source:`Lib/filecmp.py`"

#: ../../library/filecmp.rst:13
msgid ""
"The :mod:`filecmp` module defines functions to compare files and "
"directories, with various optional time/correctness trade-offs. For "
"comparing files, see also the :mod:`difflib` module."
msgstr ""
"O módulo :mod:`filecmp` define funções para comparar arquivos e diretórios, "
"com várias compensações opcionais de tempo/correção. Para comparar arquivos, "
"veja também o módulo :mod:`difflib`."

#: ../../library/filecmp.rst:17
msgid "The :mod:`filecmp` module defines the following functions:"
msgstr "O módulo :mod:`filecmp` define as seguintes funções:"

#: ../../library/filecmp.rst:22
msgid ""
"Compare the files named *f1* and *f2*, returning ``True`` if they seem "
"equal, ``False`` otherwise."
msgstr ""
"Compara os arquivos chamados *f1* e *f2*, retornando ``True`` se eles "
"parecerem iguais, ``False`` caso contrário."

#: ../../library/filecmp.rst:25
msgid ""
"If *shallow* is true and the :func:`os.stat` signatures (file type, size, "
"and modification time) of both files are identical, the files are taken to "
"be equal."
msgstr ""
"Se *shallow* for verdadeiro e as assinaturas de :func:`os.stat` (tipo de "
"arquivo, tamanho e hora de modificação) de ambos os arquivos forem "
"idênticas, os arquivos serão considerados iguais."

#: ../../library/filecmp.rst:29
msgid ""
"Otherwise, the files are treated as different if their sizes or contents "
"differ."
msgstr ""
"Caso contrário, os arquivos serão tratados como diferentes se seus tamanhos "
"ou conteúdos forem diferentes."

#: ../../library/filecmp.rst:31
msgid ""
"Note that no external programs are called from this function, giving it "
"portability and efficiency."
msgstr ""
"Observe que nenhum programa externo é chamado a partir desta função, o que "
"lhe confere portabilidade e eficiência."

#: ../../library/filecmp.rst:34
msgid ""
"This function uses a cache for past comparisons and the results, with cache "
"entries invalidated if the :func:`os.stat` information for the file "
"changes.  The entire cache may be cleared using :func:`clear_cache`."
msgstr ""
"Esta função usa um cache para comparações passadas e os resultados, com "
"entradas de cache invalidadas se as informações de :func:`os.stat` para o "
"arquivo mudarem. O cache inteiro pode ser limpo usando :func:`clear_cache`."

#: ../../library/filecmp.rst:41
msgid ""
"Compare the files in the two directories *dir1* and *dir2* whose names are "
"given by *common*."
msgstr ""
"Compara os arquivos nos dois diretórios *dir1* e *dir2* cujos nomes são "
"dados por *common*."

#: ../../library/filecmp.rst:44
msgid ""
"Returns three lists of file names: *match*, *mismatch*, *errors*.  *match* "
"contains the list of files that match, *mismatch* contains the names of "
"those that don't, and *errors* lists the names of files which could not be "
"compared.  Files are listed in *errors* if they don't exist in one of the "
"directories, the user lacks permission to read them or if the comparison "
"could not be done for some other reason."
msgstr ""
"Retorna três listas de nomes de arquivos: *match*, *mismatch*, *errors*. "
"*match* contém a lista de arquivos que correspondem, *mismatch* contém os "
"nomes daqueles que não correspondem e *errors* lista os nomes dos arquivos "
"que não puderam ser comparados. Os arquivos são listados em *errors* se não "
"existirem em um dos diretórios, o usuário não tiver permissão para lê-los ou "
"se a comparação não puder ser feita por algum outro motivo."

#: ../../library/filecmp.rst:51
msgid ""
"The *shallow* parameter has the same meaning and default value as for :func:"
"`filecmp.cmp`."
msgstr ""
"O parâmetro *shallow* tem o mesmo significado e valor padrão que :func:"
"`filecmp.cmp`."

#: ../../library/filecmp.rst:54
msgid ""
"For example, ``cmpfiles('a', 'b', ['c', 'd/e'])`` will compare ``a/c`` with "
"``b/c`` and ``a/d/e`` with ``b/d/e``.  ``'c'`` and ``'d/e'`` will each be in "
"one of the three returned lists."
msgstr ""
"Por exemplo, ``cmpfiles('a', 'b', ['c', 'd/e'])`` comparará ``a/c`` com ``b/"
"c`` e ``a/d/e`` com ``b/d/e``. ``'c'`` e ``'d/e'`` estarão cada um em uma "
"das três listas retornadas."

#: ../../library/filecmp.rst:61
msgid ""
"Clear the filecmp cache. This may be useful if a file is compared so quickly "
"after it is modified that it is within the mtime resolution of the "
"underlying filesystem."
msgstr ""
"Limpa o cache do filecmp. Isso pode ser útil se um arquivo for comparado tão "
"rapidamente após ser modificado que ele esteja dentro da resolução de mtime "
"do sistema de arquivos subjacente."

#: ../../library/filecmp.rst:71
msgid "The :class:`dircmp` class"
msgstr "A classe :class:`dircmp`"

#: ../../library/filecmp.rst:75
msgid ""
"Construct a new directory comparison object, to compare the directories *a* "
"and *b*.  *ignore* is a list of names to ignore, and defaults to :const:"
"`filecmp.DEFAULT_IGNORES`.  *hide* is a list of names to hide, and defaults "
"to ``[os.curdir, os.pardir]``."
msgstr ""
"Constrói um novo objeto de comparação de diretórios para comparar os "
"diretórios *a* e *b*. *ignore* é uma lista de nomes a serem ignorados e o "
"padrão é :const:`filecmp.DEFAULT_IGNORES`. *hide* é uma lista de nomes a "
"serem ocultados e o padrão é ``[os.curdir, os.pardir]``."

#: ../../library/filecmp.rst:80
msgid ""
"The :class:`dircmp` class compares files by doing *shallow* comparisons as "
"described for :func:`filecmp.cmp` by default using the *shallow* parameter."
msgstr ""
"A classe :class:`dircmp` compara arquivos fazendo comparações rasas, isto é, "
"*shallow* conforme descrito para :func:`filecmp.cmp` por padrão usando o "
"parâmetro *shallow*."

#: ../../library/filecmp.rst:86
msgid "Added the *shallow* parameter."
msgstr "Adicionado o parâmetro *shallow*."

#: ../../library/filecmp.rst:88
msgid "The :class:`dircmp` class provides the following methods:"
msgstr "A classe :class:`dircmp` fornece os seguintes métodos:"

#: ../../library/filecmp.rst:92
msgid "Print (to :data:`sys.stdout`) a comparison between *a* and *b*."
msgstr "Exibe (para :data:`sys.stdout`) uma comparação entre *a* e *b*."

#: ../../library/filecmp.rst:96
msgid ""
"Print a comparison between *a* and *b* and common immediate subdirectories."
msgstr "Exibe uma comparação entre *a* e *b* e subdiretórios imediatos comuns."

#: ../../library/filecmp.rst:101
msgid ""
"Print a comparison between *a* and *b* and common subdirectories "
"(recursively)."
msgstr ""
"Exibe uma comparação entre *a* e *b* e subdiretórios comuns (recursivamente)."

#: ../../library/filecmp.rst:104
msgid ""
"The :class:`dircmp` class offers a number of interesting attributes that may "
"be used to get various bits of information about the directory trees being "
"compared."
msgstr ""
"A classe :class:`dircmp` oferece uma série de atributos interessantes que "
"podem ser usados ​​para obter várias informações sobre as árvores de "
"diretórios que estão sendo comparadas."

#: ../../library/filecmp.rst:108
msgid ""
"Note that via :meth:`~object.__getattr__` hooks, all attributes are computed "
"lazily, so there is no speed penalty if only those attributes which are "
"lightweight to compute are used."
msgstr ""
"Observe que, por meio dos ganchos :meth:`~object.__getattr__`, todos os "
"atributos são computados preguiçosamente, portanto, não há perda de "
"velocidade se apenas os atributos que são leves para computar forem usados."

#: ../../library/filecmp.rst:115
msgid "The directory *a*."
msgstr "O diretório *a*."

#: ../../library/filecmp.rst:120
msgid "The directory *b*."
msgstr "O diretório *b*."

#: ../../library/filecmp.rst:125
msgid "Files and subdirectories in *a*, filtered by *hide* and *ignore*."
msgstr "Arquivos e subdiretórios em *a*, filtrados por *hide* e *ignore*."

#: ../../library/filecmp.rst:130
msgid "Files and subdirectories in *b*, filtered by *hide* and *ignore*."
msgstr "Arquivos e subdiretórios em *b*, filtrados por *hide* e *ignore*."

#: ../../library/filecmp.rst:135
msgid "Files and subdirectories in both *a* and *b*."
msgstr "Arquivos e subdiretórios em *a* e *b*."

#: ../../library/filecmp.rst:140
msgid "Files and subdirectories only in *a*."
msgstr "Arquivos e subdiretórios em apenas *a*."

#: ../../library/filecmp.rst:145
msgid "Files and subdirectories only in *b*."
msgstr "Arquivos e subdiretórios em apenas *b*."

#: ../../library/filecmp.rst:150
msgid "Subdirectories in both *a* and *b*."
msgstr "Subdiretórios em *a* e *b*."

#: ../../library/filecmp.rst:155
msgid "Files in both *a* and *b*."
msgstr "Arquivos em *a* e *b*."

#: ../../library/filecmp.rst:160
msgid ""
"Names in both *a* and *b*, such that the type differs between the "
"directories, or names for which :func:`os.stat` reports an error."
msgstr ""
"Nomes em *a* e *b*, de modo que o tipo difere entre os diretórios, ou nomes "
"para os quais :func:`os.stat` relata um erro."

#: ../../library/filecmp.rst:166
msgid ""
"Files which are identical in both *a* and *b*, using the class's file "
"comparison operator."
msgstr ""
"Arquivos que são idênticos em *a* e *b*, usando o operador de comparação de "
"arquivos da classe."

#: ../../library/filecmp.rst:172
msgid ""
"Files which are in both *a* and *b*, whose contents differ according to the "
"class's file comparison operator."
msgstr ""
"Arquivos que estão em *a* e *b*, cujos conteúdos diferem de acordo com o "
"operador de comparação de arquivos da classe."

#: ../../library/filecmp.rst:178
msgid "Files which are in both *a* and *b*, but could not be compared."
msgstr "Arquivos que estão em *a* e *b*, mas não puderam ser comparados."

#: ../../library/filecmp.rst:183
msgid ""
"A dictionary mapping names in :attr:`common_dirs` to :class:`dircmp` "
"instances (or MyDirCmp instances if this instance is of type MyDirCmp, a "
"subclass of :class:`dircmp`)."
msgstr ""
"Um dicionário que mapeia nomes em :attr:`common_dirs` para instâncias :class:"
"`dircmp` (ou instâncias MyDirCmp se esta instância for do tipo MyDirCmp, uma "
"subclasse de :class:`dircmp`)."

#: ../../library/filecmp.rst:187
msgid ""
"Previously entries were always :class:`dircmp` instances. Now entries are "
"the same type as *self*, if *self* is a subclass of :class:`dircmp`."
msgstr ""
"Anteriormente, as entradas eram sempre instâncias de :class:`dircmp`. Agora, "
"as entradas são do mesmo tipo que *self*, se *self* for uma subclasse de :"
"class:`dircmp`."

#: ../../library/filecmp.rst:196
msgid "List of directories ignored by :class:`dircmp` by default."
msgstr "Lista de diretórios ignorados por :class:`dircmp` por padrão."

#: ../../library/filecmp.rst:199
msgid ""
"Here is a simplified example of using the ``subdirs`` attribute to search "
"recursively through two directories to show common different files::"
msgstr ""
"Aqui está um exemplo simplificado do uso do atributo ``subdirs`` para "
"pesquisar recursivamente em dois diretórios para mostrar arquivos diferentes "
"em comum:"

#: ../../library/filecmp.rst:202
msgid ""
">>> from filecmp import dircmp\n"
">>> def print_diff_files(dcmp):\n"
"...     for name in dcmp.diff_files:\n"
"...         print(\"diff_file %s found in %s and %s\" % (name, dcmp.left,\n"
"...               dcmp.right))\n"
"...     for sub_dcmp in dcmp.subdirs.values():\n"
"...         print_diff_files(sub_dcmp)\n"
"...\n"
">>> dcmp = dircmp('dir1', 'dir2')\n"
">>> print_diff_files(dcmp)"
msgstr ""
