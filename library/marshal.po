# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Marco Rougeth <marco@rougeth.com>, 2023
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2025
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-08 02:53-0300\n"
"PO-Revision-Date: 2021-06-28 01:09+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/marshal.rst:2
msgid ":mod:`!marshal` --- Internal Python object serialization"
msgstr ":mod:`!marshal` --- Serialização interna de objetos Python"

#: ../../library/marshal.rst:10
msgid ""
"This module contains functions that can read and write Python values in a "
"binary format.  The format is specific to Python, but independent of machine "
"architecture issues (e.g., you can write a Python value to a file on a PC, "
"transport the file to a Mac, and read it back there).  Details of the format "
"are undocumented on purpose; it may change between Python versions (although "
"it rarely does). [#]_"
msgstr ""
"Este módulo contém funções que podem ler e gravar valores Python em formato "
"binário. O formato é específico para Python, mas independente dos problemas "
"de arquitetura da máquina (por exemplo, você pode gravar um valor Python em "
"um arquivo em um PC, transportar o arquivo para um Mac e lê-lo de volta lá). "
"Os detalhes do formato não são documentados propositalmente; ele pode mudar "
"entre as versões do Python (embora raramente mude). [#]_"

#: ../../library/marshal.rst:21
msgid ""
"This is not a general \"persistence\" module.  For general persistence and "
"transfer of Python objects through RPC calls, see the modules :mod:`pickle` "
"and :mod:`shelve`.  The :mod:`marshal` module exists mainly to support "
"reading and writing the \"pseudo-compiled\" code for Python modules of :file:"
"`.pyc` files. Therefore, the Python maintainers reserve the right to modify "
"the marshal format in backward incompatible ways should the need arise. The "
"format of code objects is not compatible between Python versions, even if "
"the version of the format is the same. De-serializing a code object in the "
"incorrect Python version has undefined behavior. If you're serializing and "
"de-serializing Python objects, use the :mod:`pickle` module instead -- the "
"performance is comparable, version independence is guaranteed, and pickle "
"supports a substantially wider range of objects than marshal."
msgstr ""
"Este não é um módulo de \"persistência\" geral. Para persistência geral e "
"transferência de objetos Python através de chamadas RPC, veja os módulos :"
"mod:`pickle` e :mod:`shelve`. O módulo :mod:`marshal` existe principalmente "
"para ter suporte à leitura e escrita do código \"pseudocompilado\" para "
"módulos Python de arquivos :file:`.pyc`. Portanto, os mantenedores do Python "
"se reservam o direito de modificar o formato do marshal de maneiras "
"incompatíveis com versões anteriores, caso seja necessário. O formato dos "
"objetos código não é compatível entre as versões do Python, mesmo que a "
"versão do formato seja a mesma. Desserializar um objeto código na versão "
"incorreta do Python tem um comportamento indefinido. Se você estiver "
"serializando e desserializando objetos Python, use o módulo :mod:`pickle` -- "
"o desempenho é comparável, a independência de versão é garantida e pickle "
"tem suporte a uma gama substancialmente maior de objetos do que marshal."

#: ../../library/marshal.rst:37
msgid ""
"The :mod:`marshal` module is not intended to be secure against erroneous or "
"maliciously constructed data.  Never unmarshal data received from an "
"untrusted or unauthenticated source."
msgstr ""
"O módulo :mod:`marshal` não se destina a ser seguro contra dados errôneos ou "
"construídos de forma maliciosa. Nunca faça o unmarshalling de dados "
"recebidos de uma fonte não confiável ou não autenticada."

#: ../../library/marshal.rst:41
msgid ""
"There are functions that read/write files as well as functions operating on "
"bytes-like objects."
msgstr ""
"Existem funções que leem/gravam arquivos, bem como funções que operam em "
"objetos bytes ou similar"

#: ../../library/marshal.rst:46
msgid ""
"Not all Python object types are supported; in general, only objects whose "
"value is independent from a particular invocation of Python can be written "
"and read by this module.  The following types are supported:"
msgstr ""

#: ../../library/marshal.rst:50
msgid ""
"Numeric types: :class:`int`, :class:`bool`, :class:`float`, :class:`complex`."
msgstr ""

#: ../../library/marshal.rst:51
msgid ""
"Strings (:class:`str`) and :class:`bytes`. :term:`Bytes-like objects <bytes-"
"like object>` like :class:`bytearray` are marshalled as :class:`!bytes`."
msgstr ""

#: ../../library/marshal.rst:54
msgid ""
"Containers: :class:`tuple`, :class:`list`, :class:`set`, :class:`frozenset`, "
"and (since :data:`version` 5), :class:`slice`. It should be understood that "
"these are supported only if the values contained therein are themselves "
"supported. Recursive containers are supported since :data:`version` 3."
msgstr ""

#: ../../library/marshal.rst:59
msgid ""
"The singletons :const:`None`, :const:`Ellipsis` and :exc:`StopIteration`."
msgstr ""

#: ../../library/marshal.rst:60
msgid ""
":class:`code` objects, if *allow_code* is true. See note above about version "
"dependence."
msgstr ""

#: ../../library/marshal.rst:65
msgid ""
"Added format version 3, which supports marshalling recursive lists, sets and "
"dictionaries."
msgstr ""

#: ../../library/marshal.rst:67
msgid ""
"Added format version 4, which supports efficient representations of short "
"strings."
msgstr ""

#: ../../library/marshal.rst:72
msgid "Added format version 5, which allows marshalling slices."
msgstr ""

#: ../../library/marshal.rst:75
msgid "The module defines these functions:"
msgstr "O módulo define estas funções:"

#: ../../library/marshal.rst:80
msgid ""
"Write the value on the open file.  The value must be a supported type.  The "
"file must be a writeable :term:`binary file`."
msgstr ""
"Grava o valor no arquivo aberto. O valor deve ser um tipo compatível. O "
"arquivo deve ser :term:`arquivo binário` gravável."

#: ../../library/marshal.rst:83
msgid ""
"If the value has (or contains an object that has) an unsupported type, a :"
"exc:`ValueError` exception is raised --- but garbage data will also be "
"written to the file.  The object will not be properly read back by :func:"
"`load`. :ref:`Code objects <code-objects>` are only supported if "
"*allow_code* is true."
msgstr ""
"Se o valor tem (ou contém um objeto que tem) um tipo não suportado, uma "
"exceção :exc:`ValueError` é levantada -- mas dados de lixo também serão "
"gravados no arquivo. O objeto não será lido corretamente por :func:`load`. "
"Há suporte a :ref:`objetos código <code-objects>` somente se *allow_code* "
"for verdadeiro."

#: ../../library/marshal.rst:88
msgid ""
"The *version* argument indicates the data format that ``dump`` should use "
"(see below)."
msgstr ""
"O argumento *version* indica o formato de dados que o ``dump`` deve usar "
"(veja abaixo)."

#: ../../library/marshal.rst:91 ../../library/marshal.rst:131
msgid ""
"Raises an :ref:`auditing event <auditing>` ``marshal.dumps`` with arguments "
"``value``, ``version``."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``marshal.dumps`` com os "
"argumentos ``value``, ``version``."

#: ../../library/marshal.rst:93 ../../library/marshal.rst:117
#: ../../library/marshal.rst:133 ../../library/marshal.rst:151
msgid "Added the *allow_code* parameter."
msgstr "Adicionado o parâmetro *allow_code*."

#: ../../library/marshal.rst:99
msgid ""
"Read one value from the open file and return it.  If no valid value is read "
"(e.g. because the data has a different Python version's incompatible marshal "
"format), raise :exc:`EOFError`, :exc:`ValueError` or :exc:`TypeError`. :ref:"
"`Code objects <code-objects>` are only supported if *allow_code* is true. "
"The file must be a readable :term:`binary file`."
msgstr ""
"Lê um valor do arquivo aberto e retorna-o. Se nenhum valor válido for lido "
"(por exemplo, porque os dados têm um formato de empacotamento incompatível "
"com uma versão diferente do Python), levanta :exc:`EOFError`, :exc:"
"`ValueError` ou :exc:`TypeError`. Há suporte a :ref:`objetos código <code-"
"objects>` somente se *allow_code* for verdadeiro. O arquivo deve ser um :"
"term:`arquivo binário` legível."

#: ../../library/marshal.rst:105
msgid ""
"Raises an :ref:`auditing event <auditing>` ``marshal.load`` with no "
"arguments."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``marshal.load`` sem "
"argumentos."

#: ../../library/marshal.rst:109
msgid ""
"If an object containing an unsupported type was marshalled with :func:"
"`dump`, :func:`load` will substitute ``None`` for the unmarshallable type."
msgstr ""
"Se um objeto contendo um tipo não suportado foi empacotado com :func:"
"`dump`, :func:`load` irá substituir ``None`` pelo tipo não empacotável."

#: ../../library/marshal.rst:114
msgid ""
"This call used to raise a ``code.__new__`` audit event for each code object. "
"Now it raises a single ``marshal.load`` event for the entire load operation."
msgstr ""
"Esta chamada costumava levantar um evento de auditoria ``code.__new__`` para "
"cada objeto código. Agora, ele levanta um único evento ``marshal.load`` para "
"toda a operação de carregamento."

#: ../../library/marshal.rst:123
msgid ""
"Return the bytes object that would be written to a file by ``dump(value, "
"file)``.  The value must be a supported type.  Raise a :exc:`ValueError` "
"exception if value has (or contains an object that has) an unsupported "
"type. :ref:`Code objects <code-objects>` are only supported if *allow_code* "
"is true."
msgstr ""
"Retorna o objeto bytes que seria escrito em um arquivo por ``dump(value, "
"file)``. O valor deve ser um tipo compatível. Levanta uma exceção :exc:"
"`ValueError` se o valor tem (ou contém um objeto que tem) um tipo não "
"suportado. Há suporte a :ref:`objetos código <code-objects>` somente se "
"*allow_code* for verdadeiro."

#: ../../library/marshal.rst:128
msgid ""
"The *version* argument indicates the data format that ``dumps`` should use "
"(see below)."
msgstr ""
"O argumento *version* indica o formato de dados que ``dumps`` deve usar "
"(veja abaixo)."

#: ../../library/marshal.rst:139
msgid ""
"Convert the :term:`bytes-like object` to a value.  If no valid value is "
"found, raise :exc:`EOFError`, :exc:`ValueError` or :exc:`TypeError`. :ref:"
"`Code objects <code-objects>` are only supported if *allow_code* is true. "
"Extra bytes in the input are ignored."
msgstr ""
"Converte o :term:`objeto bytes ou similar` em um valor. Se nenhum valor "
"válido for encontrado, levanta :exc:`EOFError`, :exc:`ValueError` ou :exc:"
"`TypeError`. Há suporte a :ref:`objetos código <code-objects>` somente se "
"*allow_code* for verdadeiro. Bytes extras na entrada são ignorados."

#: ../../library/marshal.rst:144
msgid ""
"Raises an :ref:`auditing event <auditing>` ``marshal.loads`` with argument "
"``bytes``."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``marshal.loads`` com o "
"argumento ``bytes``."

#: ../../library/marshal.rst:148
msgid ""
"This call used to raise a ``code.__new__`` audit event for each code object. "
"Now it raises a single ``marshal.loads`` event for the entire load operation."
msgstr ""
"Esta chamada costumava levantar um evento de auditoria ``code.__new__`` para "
"cada objeto código. Agora, ele levanta um único evento ``marshal.loads`` "
"para toda a operação de carregamento."

#: ../../library/marshal.rst:155
msgid "In addition, the following constants are defined:"
msgstr "Além disso, as seguintes constantes são definidas:"

#: ../../library/marshal.rst:159
msgid ""
"Indicates the format that the module uses. Version 0 is the historical first "
"version; subsequent versions add new features. Generally, a new version "
"becomes the default when it is introduced."
msgstr ""

#: ../../library/marshal.rst:165
msgid "Version"
msgstr "Versão"

#: ../../library/marshal.rst:165
msgid "Available since"
msgstr ""

#: ../../library/marshal.rst:165
msgid "New features"
msgstr ""

#: ../../library/marshal.rst:167
msgid "1"
msgstr "1"

#: ../../library/marshal.rst:167
msgid "Python 2.4"
msgstr ""

#: ../../library/marshal.rst:167
msgid "Sharing interned strings"
msgstr ""

#: ../../library/marshal.rst:169
msgid "2"
msgstr "2"

#: ../../library/marshal.rst:169
msgid "Python 2.5"
msgstr ""

#: ../../library/marshal.rst:169
msgid "Binary representation of floats"
msgstr ""

#: ../../library/marshal.rst:171
msgid "3"
msgstr "3"

#: ../../library/marshal.rst:171 ../../library/marshal.rst:173
msgid "Python 3.4"
msgstr ""

#: ../../library/marshal.rst:171
msgid "Support for object instancing and recursion"
msgstr ""

#: ../../library/marshal.rst:173
msgid "4"
msgstr "4"

#: ../../library/marshal.rst:173
msgid "Efficient representation of short strings"
msgstr ""

#: ../../library/marshal.rst:175
msgid "5"
msgstr "5"

#: ../../library/marshal.rst:175
msgid "Python 3.14"
msgstr ""

#: ../../library/marshal.rst:175
msgid "Support for :class:`slice` objects"
msgstr ""

#: ../../library/marshal.rst:180
msgid "Footnotes"
msgstr "Notas de rodapé"

#: ../../library/marshal.rst:181
msgid ""
"The name of this module stems from a bit of terminology used by the "
"designers of Modula-3 (amongst others), who use the term \"marshalling\" for "
"shipping of data around in a self-contained form. Strictly speaking, \"to "
"marshal\" means to convert some data from internal to external form (in an "
"RPC buffer for instance) and \"unmarshalling\" for the reverse process."
msgstr ""
"O nome deste módulo deriva de um pouco da terminologia usada pelos designers "
"do Modula-3 (entre outros), que usam o termo \"marshalling\" para enviar "
"dados em um formato independente. Estritamente falando, \"to marshal\" "
"significa converter alguns dados da forma interna para a externa (em um "
"buffer RPC, por exemplo) e \"unmarshalling\" para o processo reverso."

#: ../../library/marshal.rst:17
msgid "module"
msgstr "módulo"

#: ../../library/marshal.rst:17
msgid "pickle"
msgstr "pickle"

#: ../../library/marshal.rst:17
msgid "shelve"
msgstr "shelve"

#: ../../library/marshal.rst:44
msgid "object"
msgstr "objeto"

#: ../../library/marshal.rst:44
msgid "code"
msgstr "código"

#: ../../library/marshal.rst:44
msgid "code object"
msgstr "objeto código"
