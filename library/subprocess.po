# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Leticia Portella <leportella@gmail.com>, 2021
# Vinicius Gubiani Ferreira <vini.g.fer@gmail.com>, 2021
# Raphael Mendonça, 2021
# Marco Rougeth <marco@rougeth.com>, 2021
# Misael borges <misael@planosassessoria.com.br>, 2021
# i17obot <i17obot@rougeth.com>, 2021
# Augusta Carla Klug <augustaklug@gmail.com>, 2021
# Adorilson Bezerra <adorilson@gmail.com>, 2023
# elielmartinsbr <elielmartinsbr@gmail.com>, 2024
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-08 02:53-0300\n"
"PO-Revision-Date: 2021-06-28 01:14+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/subprocess.rst:2
msgid ":mod:`!subprocess` --- Subprocess management"
msgstr ":mod:`!subprocess` --- Gerenciamento de subprocessos"

#: ../../library/subprocess.rst:10
msgid "**Source code:** :source:`Lib/subprocess.py`"
msgstr "**Código-fonte:** :source:`Lib/subprocess.py`"

#: ../../library/subprocess.rst:14
msgid ""
"The :mod:`subprocess` module allows you to spawn new processes, connect to "
"their input/output/error pipes, and obtain their return codes.  This module "
"intends to replace several older modules and functions::"
msgstr ""
"O módulo :mod:`subprocess` permite que você crie novos processos, conecte-se "
"aos seus canais de entrada/saída/erro e obtenha seus códigos de retorno. "
"Este módulo pretende substituir vários módulos e funções mais antigos::"

#: ../../library/subprocess.rst:18
msgid ""
"os.system\n"
"os.spawn*"
msgstr ""
"os.system\n"
"os.spawn*"

#: ../../library/subprocess.rst:21
msgid ""
"Information about how the :mod:`subprocess` module can be used to replace "
"these modules and functions can be found in the following sections."
msgstr ""
"Informações sobre como o módulo :mod:`subprocess` pode ser usado para "
"substituir esses módulos e funções podem ser encontradas nas seções a seguir."

#: ../../library/subprocess.rst:26
msgid ":pep:`324` -- PEP proposing the subprocess module"
msgstr ":pep:`324` -- PEP propondo o módulo subprocess"

#: ../../library/subprocess.rst:598 ../../library/subprocess.rst:605
#: ../../library/subprocess.rst:615 ../../library/subprocess.rst:624
#: ../../library/subprocess.rst:633 ../../library/subprocess.rst:639
#: ../../library/subprocess.rst:1494 ../../library/subprocess.rst:1516
#: ../../includes/wasm-mobile-notavail.rst:3
msgid "Availability"
msgstr "Disponibilidade"

#: ../../includes/wasm-mobile-notavail.rst:5
msgid ""
"This module is not supported on :ref:`mobile platforms <mobile-"
"availability>` or :ref:`WebAssembly platforms <wasm-availability>`."
msgstr ""
"Este módulo não tem suporte em :ref:`plataformas móveis <mobile-"
"availability>` ou :ref:`plataformas WebAssembly <wasm-availability>`."

#: ../../library/subprocess.rst:31
msgid "Using the :mod:`subprocess` Module"
msgstr "Usando o módulo :mod:`subprocess`"

#: ../../library/subprocess.rst:33
msgid ""
"The recommended approach to invoking subprocesses is to use the :func:`run` "
"function for all use cases it can handle. For more advanced use cases, the "
"underlying :class:`Popen` interface can be used directly."
msgstr ""
"A abordagem recomendada para invocar subprocessos é usar a função :func:"
"`run` para todos os casos de uso que ela pode manipular. Para casos de uso "
"mais avançados, a interface subjacente :class:`Popen` pode ser usada "
"diretamente."

#: ../../library/subprocess.rst:43
msgid ""
"Run the command described by *args*.  Wait for command to complete, then "
"return a :class:`CompletedProcess` instance."
msgstr ""
"Executa o comando descrito por *args*. Aguarda a conclusão do comando e "
"retorna uma instância de :class:`CompletedProcess`."

#: ../../library/subprocess.rst:46
msgid ""
"The arguments shown above are merely the most common ones, described below "
"in :ref:`frequently-used-arguments` (hence the use of keyword-only notation "
"in the abbreviated signature). The full function signature is largely the "
"same as that of the :class:`Popen` constructor - most of the arguments to "
"this function are passed through to that interface. (*timeout*,  *input*, "
"*check*, and *capture_output* are not.)"
msgstr ""
"Os argumentos mostrados acima são meramente os mais comuns, descritos abaixo "
"em :ref:`frequently-used-arguments` (daí o uso de notação somente-nomeado na "
"assinatura abreviada). A assinatura da função completa é basicamente a mesma "
"do construtor :class:`Popen` - a maioria dos argumentos para esta função são "
"passados para aquela interface. (*timeout*, *input*, *check* e "
"*capture_output* não são.)"

#: ../../library/subprocess.rst:53
msgid ""
"If *capture_output* is true, stdout and stderr will be captured. When used, "
"the internal :class:`Popen` object is automatically created with *stdout* "
"and *stderr* both set to :data:`~subprocess.PIPE`. The *stdout* and *stderr* "
"arguments may not be supplied at the same time as *capture_output*. If you "
"wish to capture and combine both streams into one, set *stdout* to :data:"
"`~subprocess.PIPE` and *stderr* to :data:`~subprocess.STDOUT`, instead of "
"using *capture_output*."
msgstr ""
"Se *capture_output* for verdadeiro, *stdout* e *stderr* serão capturados. "
"Quando usado, o objeto interno :class:`Popen` é automaticamente criado com "
"*stdout* and *stderr* definidos como :data:`~subprocess.PIPE`. Os argumentos "
"*stdout * e *stderr* não podem ser fornecidos ao mesmo tempo que "
"*capture_output*. Se você deseja capturar e combinar ambos os fluxos em um, "
"defina *stdout* para :data:`~subprocess.PIPE` e *stderr* para :data:"
"`~subprocess.STDOUT`, ao invés de usar *capture_output*."

#: ../../library/subprocess.rst:62
msgid ""
"A *timeout* may be specified in seconds, it is internally passed on to :meth:"
"`Popen.communicate`. If the timeout expires, the child process will be "
"killed and waited for. The :exc:`TimeoutExpired` exception will be re-raised "
"after the child process has terminated. The initial process creation itself "
"cannot be interrupted on many platform APIs so you are not guaranteed to see "
"a timeout exception until at least after however long process creation takes."
msgstr ""
"Um *timeout* pode ser especificado em segundos, ele é passado internamente "
"para :meth:`Popen.communicate`. Se o tempo limite expirar, o processo filho "
"será eliminado e aguardado. A exceção :exc:`TimeoutExpired` será levantada "
"novamente após o término do processo filho. A criação inicial do processo em "
"si não pode ser interrompida em muitas APIs de plataforma, portanto, não há "
"garantia de que você verá uma exceção de tempo limite até, pelo menos, o "
"tempo que a criação do processo demorar."

#: ../../library/subprocess.rst:70
msgid ""
"The *input* argument is passed to :meth:`Popen.communicate` and thus to the "
"subprocess's stdin.  If used it must be a byte sequence, or a string if "
"*encoding* or *errors* is specified or *text* is true.  When used, the "
"internal :class:`Popen` object is automatically created with *stdin* set to :"
"data:`~subprocess.PIPE`, and the *stdin* argument may not be used as well."
msgstr ""
"O argumento *input* é passado para :meth:`Popen.communicate` e, portanto, "
"para o stdin do subprocesso. Se usado, deve ser uma sequência de bytes ou "
"uma string se *encoding* ou *errors* forem especificados ou *text* for "
"verdadeiro. Quando usado, o objeto internal :class:`Popen` é automaticamente "
"criado com :data:`~subprocess.PIPE`, e o argumento *stdin* também não pode "
"ser usado."

#: ../../library/subprocess.rst:77
msgid ""
"If *check* is true, and the process exits with a non-zero exit code, a :exc:"
"`CalledProcessError` exception will be raised. Attributes of that exception "
"hold the arguments, the exit code, and stdout and stderr if they were "
"captured."
msgstr ""
"Se *check* for verdadeiro, e o processo sair com um código de saída "
"diferente de zero, uma exceção :exc:`CalledProcessError` será levantada. Os "
"atributos dessa exceção contêm os argumentos, o código de saída e stdout e "
"stderr se eles foram capturados."

#: ../../library/subprocess.rst:82
msgid ""
"If *encoding* or *errors* are specified, or *text* is true, file objects for "
"stdin, stdout and stderr are opened in text mode using the specified "
"*encoding* and *errors* or the :class:`io.TextIOWrapper` default. The "
"*universal_newlines* argument is equivalent  to *text* and is provided for "
"backwards compatibility. By default, file objects are opened in binary mode."
msgstr ""
"Se *encoding* ou *errors* forem especificados, ou *text* for verdadeiro, os "
"objetos arquivo para stdin, stdout e stderr são abertos em modo de texto "
"usando a *encoding* e *errors* especificados ou o :class:`io.TextIOWrapper` "
"padrão. O argumento *universal_newlines* é equivalente a *text* e é "
"fornecido para compatibilidade com versões anteriores. Por padrão, os "
"objetos arquivo são abertos no modo binário."

#: ../../library/subprocess.rst:88
msgid ""
"If *env* is not ``None``, it must be a mapping that defines the environment "
"variables for the new process; these are used instead of the default "
"behavior of inheriting the current process' environment. It is passed "
"directly to :class:`Popen`. This mapping can be str to str on any platform "
"or bytes to bytes on POSIX platforms much like :data:`os.environ` or :data:"
"`os.environb`."
msgstr ""
"Se *env* não for ``None``, deve ser um mapeamento que defina as variáveis de "
"ambiente para o novo processo; elas são usadas em vez do comportamento "
"padrão de herdar o ambiente do processo atual. É passado diretamente para :"
"class:`Popen`. Este mapeamento pode ser str para str em qualquer plataforma "
"ou bytes para bytes em plataformas POSIX como :data:`os.environ` ou :data:"
"`os.environb`."

#: ../../library/subprocess.rst:95
msgid "Examples::"
msgstr "Exemplos::"

#: ../../library/subprocess.rst:97
msgid ""
">>> subprocess.run([\"ls\", \"-l\"])  # doesn't capture output\n"
"CompletedProcess(args=['ls', '-l'], returncode=0)\n"
"\n"
">>> subprocess.run(\"exit 1\", shell=True, check=True)\n"
"Traceback (most recent call last):\n"
"  ...\n"
"subprocess.CalledProcessError: Command 'exit 1' returned non-zero exit "
"status 1\n"
"\n"
">>> subprocess.run([\"ls\", \"-l\", \"/dev/null\"], capture_output=True)\n"
"CompletedProcess(args=['ls', '-l', '/dev/null'], returncode=0,\n"
"stdout=b'crw-rw-rw- 1 root root 1, 3 Jan 23 16:23 /dev/null\\n', stderr=b'')"
msgstr ""
">>> subprocess.run([\"ls\", \"-l\"])  # não captura a saída\n"
"CompletedProcess(args=['ls', '-l'], returncode=0)\n"
"\n"
">>> subprocess.run(\"exit 1\", shell=True, check=True)\n"
"Traceback (most recent call last):\n"
"  ...\n"
"subprocess.CalledProcessError: Command 'exit 1' returned non-zero exit "
"status 1\n"
"\n"
">>> subprocess.run([\"ls\", \"-l\", \"/dev/null\"], capture_output=True)\n"
"CompletedProcess(args=['ls', '-l', '/dev/null'], returncode=0,\n"
"stdout=b'crw-rw-rw- 1 root root 1, 3 Jan 23 16:23 /dev/null\\n', stderr=b'')"

#: ../../library/subprocess.rst:113
msgid "Added *encoding* and *errors* parameters"
msgstr "Adicionados os parâmetros *encoding* e *errors*."

#: ../../library/subprocess.rst:117
msgid ""
"Added the *text* parameter, as a more understandable alias of "
"*universal_newlines*. Added the *capture_output* parameter."
msgstr ""
"Adicionado o parâmetro *text*, como um apelido mais compreensível que "
"*universal_newlines*. Adicionado o parâmetro *capture_output*."

#: ../../library/subprocess.rst:122 ../../library/subprocess.rst:506
#: ../../library/subprocess.rst:1214 ../../library/subprocess.rst:1254
#: ../../library/subprocess.rst:1317
msgid ""
"Changed Windows shell search order for ``shell=True``. The current directory "
"and ``%PATH%`` are replaced with ``%COMSPEC%`` and ``%SystemRoot%"
"\\System32\\cmd.exe``. As a result, dropping a malicious program named ``cmd."
"exe`` into a current directory no longer works."
msgstr ""
"Ordem de pesquisa do shell do Windows alterada para ``shell=True``. O "
"diretório atual e ``%PATH%`` são substituídos por ``%COMSPEC%`` e "
"``%SystemRoot%\\System32\\cmd.exe``. Como resultado, colocar um programa "
"malicioso chamado ``cmd.exe`` em um diretório atual não funciona mais."

#: ../../library/subprocess.rst:130
msgid ""
"The return value from :func:`run`, representing a process that has finished."
msgstr ""
"O valor de retorno de :func:`run`, representando um processo que foi "
"concluído."

#: ../../library/subprocess.rst:134
msgid ""
"The arguments used to launch the process. This may be a list or a string."
msgstr ""
"Os argumentos usados para iniciar o processo. Pode ser uma lista ou uma "
"string."

#: ../../library/subprocess.rst:138
msgid ""
"Exit status of the child process. Typically, an exit status of 0 indicates "
"that it ran successfully."
msgstr ""
"Status de saída do processo filho. Normalmente, um status de saída 0 indica "
"que foi executado com êxito."

#: ../../library/subprocess.rst:141 ../../library/subprocess.rst:945
msgid ""
"A negative value ``-N`` indicates that the child was terminated by signal "
"``N`` (POSIX only)."
msgstr ""
"Um valor negativo ``-N`` indica que o filho foi terminado pelo sinal ``N`` "
"(POSIX apenas)."

#: ../../library/subprocess.rst:146
msgid ""
"Captured stdout from the child process. A bytes sequence, or a string if :"
"func:`run` was called with an encoding, errors, or text=True. ``None`` if "
"stdout was not captured."
msgstr ""
"Stdout capturado do processo filho. Uma sequência de bytes ou uma string se :"
"func:`run` foi chamada com uma codificação, erros ou text=True. ``None`` se "
"stdout não foi capturado."

#: ../../library/subprocess.rst:150
msgid ""
"If you ran the process with ``stderr=subprocess.STDOUT``, stdout and stderr "
"will be combined in this attribute, and :attr:`stderr` will be ``None``."
msgstr ""
"Se você executou o processo com ``stderr=subprocess.STDOUT``, stdout e "
"stderr serão combinados neste atributo, e :attr:`stderr` será ``None``."

#: ../../library/subprocess.rst:156
msgid ""
"Captured stderr from the child process. A bytes sequence, or a string if :"
"func:`run` was called with an encoding, errors, or text=True. ``None`` if "
"stderr was not captured."
msgstr ""
"Stderr capturado do processo filho. Uma sequência de bytes ou uma string se :"
"func:`run` foi chamada com uma codificação, erros ou text=True. ``None`` se "
"stderr não foi capturado."

#: ../../library/subprocess.rst:162
msgid "If :attr:`returncode` is non-zero, raise a :exc:`CalledProcessError`."
msgstr ""
"Se :attr:`returncode` é diferente de zero, levantar um :exc:"
"`CalledProcessError`."

#: ../../library/subprocess.rst:168
msgid ""
"Special value that can be used as the *stdin*, *stdout* or *stderr* argument "
"to :class:`Popen` and indicates that the special file :data:`os.devnull` "
"will be used."
msgstr ""
"Valor especial que pode ser usado como o argumento *stdin*, *stdout* ou "
"*stderr* para :class:`Popen` e indica que o arquivo especial :data:`os."
"devnull` será usado."

#: ../../library/subprocess.rst:177
msgid ""
"Special value that can be used as the *stdin*, *stdout* or *stderr* argument "
"to :class:`Popen` and indicates that a pipe to the standard stream should be "
"opened.  Most useful with :meth:`Popen.communicate`."
msgstr ""
"Valor especial que pode ser usado como o argumento *stdin*, *stdout* ou "
"*stderr* para :class:`Popen` e indica que um encadeamento para o fluxo "
"padrão deve ser aberto. Mais útil com :meth:`Popen.communicate`."

#: ../../library/subprocess.rst:184
msgid ""
"Special value that can be used as the *stderr* argument to :class:`Popen` "
"and indicates that standard error should go into the same handle as standard "
"output."
msgstr ""
"Valor especial que pode ser usado como o argumento *stderr* para :class:"
"`Popen` e indica que o erro padrão deve ir para o mesmo manipulador que a "
"saída padrão."

#: ../../library/subprocess.rst:191
msgid "Base class for all other exceptions from this module."
msgstr "Classe base para todas as outras exceções deste módulo."

#: ../../library/subprocess.rst:198
msgid ""
"Subclass of :exc:`SubprocessError`, raised when a timeout expires while "
"waiting for a child process."
msgstr ""
"Subclasse de :exc:`SubprocessError`, levantada quando um tempo limite expira "
"enquanto espera por um processo filho."

#: ../../library/subprocess.rst:203 ../../library/subprocess.rst:247
msgid "Command that was used to spawn the child process."
msgstr "Comando que foi usado para gerar o processo filho."

#: ../../library/subprocess.rst:207
msgid "Timeout in seconds."
msgstr "Tempo limite em segundos."

#: ../../library/subprocess.rst:211
msgid ""
"Output of the child process if it was captured by :func:`run` or :func:"
"`check_output`.  Otherwise, ``None``.  This is always :class:`bytes` when "
"any output was captured regardless of the ``text=True`` setting.  It may "
"remain ``None`` instead of ``b''`` when no output was observed."
msgstr ""
"Saída do processo filho se ele foi capturado por :func:`run` ou :func:"
"`check_output`. Caso contrário, ``None``. Isto é sempre :class:`bytes` "
"quando qualquer saída foi capturada independente da configuração "
"``text=True``. Pode permanecer ``None`` em vez de ``b''`` quando nenhuma "
"saída foi observada."

#: ../../library/subprocess.rst:219 ../../library/subprocess.rst:256
msgid "Alias for output, for symmetry with :attr:`stderr`."
msgstr "Apelido para a saída, para simetria com :attr:`stderr`."

#: ../../library/subprocess.rst:223
msgid ""
"Stderr output of the child process if it was captured by :func:`run`. "
"Otherwise, ``None``.  This is always :class:`bytes` when stderr output was "
"captured regardless of the ``text=True`` setting.  It may remain ``None`` "
"instead of ``b''`` when no stderr output was observed."
msgstr ""
"Saída de stderr do processo filho se ele foi capturado por :func:`run`. Caso "
"contrário, ``None``. Isto é sempre :class:`bytes` quando a saída de stderr "
"foi capturada independente da configuração ``text=True``. Pode permanecer "
"``None`` em vez de ``b''`` quando nenhuma saída de stderr foi observada."

#: ../../library/subprocess.rst:230 ../../library/subprocess.rst:263
msgid "*stdout* and *stderr* attributes added"
msgstr "Adicionados os atributos *stdout* e *stderr*"

#: ../../library/subprocess.rst:235
msgid ""
"Subclass of :exc:`SubprocessError`, raised when a process run by :func:"
"`check_call`, :func:`check_output`, or :func:`run` (with ``check=True``) "
"returns a non-zero exit status."
msgstr ""
"Subclasse de :exc:`SubprocessError`, levantada quando um processo executado "
"por :func:`check_call`, :func:`check_output` ou :func:`run` (com "
"``check=True``) retorna um status de saída diferente de zero."

#: ../../library/subprocess.rst:242
msgid ""
"Exit status of the child process.  If the process exited due to a signal, "
"this will be the negative signal number."
msgstr ""
"Status de saída do processo filho. Se o processo foi encerrado devido a um "
"sinal, este será o número do sinal negativo."

#: ../../library/subprocess.rst:251
msgid ""
"Output of the child process if it was captured by :func:`run` or :func:"
"`check_output`.  Otherwise, ``None``."
msgstr ""
"Saída do processo filho se ele foi capturado por :func:`run` ou :func:"
"`check_output`. Caso contrário, ``None``."

#: ../../library/subprocess.rst:260
msgid ""
"Stderr output of the child process if it was captured by :func:`run`. "
"Otherwise, ``None``."
msgstr ""
"Saída stderr do processo filho se ele foi capturado por :func:`run`. Caso "
"contrário, ``None``."

#: ../../library/subprocess.rst:270
msgid "Frequently Used Arguments"
msgstr "Argumentos usados frequentemente"

#: ../../library/subprocess.rst:272
msgid ""
"To support a wide variety of use cases, the :class:`Popen` constructor (and "
"the convenience functions) accept a large number of optional arguments. For "
"most typical use cases, many of these arguments can be safely left at their "
"default values. The arguments that are most commonly needed are:"
msgstr ""
"Para suportar uma ampla variedade de casos de uso, o construtor :class:"
"`Popen` (e as funções de conveniência) aceita muitos argumentos opcionais. "
"Para a maioria dos casos de uso típicos, muitos desses argumentos podem ser "
"seguramente deixados em seus valores padrão. Os argumentos mais comumente "
"necessários são:"

#: ../../library/subprocess.rst:277
msgid ""
"*args* is required for all calls and should be a string, or a sequence of "
"program arguments. Providing a sequence of arguments is generally preferred, "
"as it allows the module to take care of any required escaping and quoting of "
"arguments (e.g. to permit spaces in file names). If passing a single string, "
"either *shell* must be :const:`True` (see below) or else the string must "
"simply name the program to be executed without specifying any arguments."
msgstr ""
"*args* é necessário para todas as chamadas e deve ser uma string ou uma "
"sequência de argumentos do programa. Fornecer uma sequência de argumentos "
"geralmente é preferível, pois permite que o módulo cuide de qualquer escape "
"e aspas em argumentos que forem necessários (por exemplo, para permitir "
"espaços em nomes de arquivo). Se for passada uma única string, *shell* deve "
"ser :const:`True` (veja abaixo) ou então a string deve apenas nomear o "
"programa a ser executado sem especificar nenhum argumento."

#: ../../library/subprocess.rst:285
msgid ""
"*stdin*, *stdout* and *stderr* specify the executed program's standard "
"input, standard output and standard error file handles, respectively.  Valid "
"values are ``None``, :data:`PIPE`, :data:`DEVNULL`, an existing file "
"descriptor (a positive integer), and an existing :term:`file object` with a "
"valid file descriptor.  With the default settings of ``None``, no "
"redirection will occur.  :data:`PIPE` indicates that a new pipe to the child "
"should be created.  :data:`DEVNULL` indicates that the special file :data:"
"`os.devnull` will be used.  Additionally, *stderr* can be :data:`STDOUT`, "
"which indicates that the stderr data from the child process should be "
"captured into the same file handle as for *stdout*."
msgstr ""
"*stdin*, *stdout* e *stderr* especificam a entrada padrão, a saída padrão e "
"a saída de erro do programa executado, respectivamente. Os valores válidos "
"são ``None``, :data:`PIPE`, :data:`DEVNULL`, um descritor de arquivo "
"existente (um número inteiro positivo) e um :term:`objeto arquivo` existente "
"com um descritor de arquivo válido. Com as configurações padrão de ``None``, "
"nenhum redirecionamento ocorrerá. :data:`PIPE` indica que um novo canal para "
"o filho deve ser criado. :data:`DEVNULL` indica que o arquivo especial :data:"
"`os.devnull` será usado. Além disso, *stderr* pode ser :data:`STDOUT`, o que "
"indica que os dados de stderr do processo filho devem ser capturados no "
"mesmo identificador de arquivo que para *stdout*."

#: ../../library/subprocess.rst:299
msgid ""
"If *encoding* or *errors* are specified, or *text* (also known as "
"*universal_newlines*) is true, the file objects *stdin*, *stdout* and "
"*stderr* will be opened in text mode using the *encoding* and *errors* "
"specified in the call or the defaults for :class:`io.TextIOWrapper`."
msgstr ""
"Se *encoding* ou *errors* forem especificados, ou *text* (também conhecido "
"como *universal_newlines*) for verdadeiro, os objetos arquivo *stdin*, "
"*stdout* e *stderr* serão abertos em modo de texto usando a *encoding* e "
"*errors* especificados na chamada ou os valores padrão para :class:`io."
"TextIOWrapper`."

#: ../../library/subprocess.rst:305
msgid ""
"For *stdin*, line ending characters ``'\\n'`` in the input will be converted "
"to the default line separator :data:`os.linesep`. For *stdout* and *stderr*, "
"all line endings in the output will be converted to ``'\\n'``.  For more "
"information see the documentation of the :class:`io.TextIOWrapper` class "
"when the *newline* argument to its constructor is ``None``."
msgstr ""
"Para *stdin*, os caracteres de fim de linha ``'\\n'`` na entrada serão "
"convertidos para o separador de linha padrão :data:`os.linesep`. Para "
"*stdout* e *stderr*, todas as terminações de linha na saída serão "
"convertidas para ``'\\n'``. Para obter mais informações, consulte a "
"documentação da classe :class:`io.TextIOWrapper` quando o argumento "
"*newline* para seu construtor é ``None``."

#: ../../library/subprocess.rst:311
msgid ""
"If text mode is not used, *stdin*, *stdout* and *stderr* will be opened as "
"binary streams. No encoding or line ending conversion is performed."
msgstr ""
"Se o modo de texto não for usado, *stdin*, *stdout* e *stderr* serão abertos "
"como fluxos binários. Nenhuma codificação ou conversão de final de linha é "
"executada."

#: ../../library/subprocess.rst:314 ../../library/subprocess.rst:1503
#: ../../library/subprocess.rst:1521
msgid "Added the *encoding* and *errors* parameters."
msgstr "Adicionados os parâmetros *encoding* e *errors*."

#: ../../library/subprocess.rst:317
msgid "Added the *text* parameter as an alias for *universal_newlines*."
msgstr ""
"Adicionado o parâmetro *text* como um apelido para *universal_newlines*."

#: ../../library/subprocess.rst:322
msgid ""
"The newlines attribute of the file objects :attr:`Popen.stdin`, :attr:`Popen."
"stdout` and :attr:`Popen.stderr` are not updated by the :meth:`Popen."
"communicate` method."
msgstr ""
"O atributo newlines dos objetos arquivo :attr:`Popen.stdin`, :attr:`Popen."
"stdout` e :attr:`Popen.stderr` não são atualizados pelo método :meth:`Popen."
"communicate`."

#: ../../library/subprocess.rst:326
msgid ""
"If *shell* is ``True``, the specified command will be executed through the "
"shell.  This can be useful if you are using Python primarily for the "
"enhanced control flow it offers over most system shells and still want "
"convenient access to other shell features such as shell pipes, filename "
"wildcards, environment variable expansion, and expansion of ``~`` to a "
"user's home directory.  However, note that Python itself offers "
"implementations of many shell-like features (in particular, :mod:`glob`, :"
"mod:`fnmatch`, :func:`os.walk`, :func:`os.path.expandvars`, :func:`os.path."
"expanduser`, and :mod:`shutil`)."
msgstr ""
"Se *shell* for ``True``, o comando especificado será executado através do "
"shell. Isso pode ser útil se você estiver usando Python principalmente para "
"o fluxo de controle aprimorado que ele oferece sobre a maioria dos shells do "
"sistema e ainda deseja acesso conveniente a outros recursos do shell, como "
"canais de shell, caracteres curinga de nome de arquivo, expansão de variável "
"de ambiente e expansão de ``~`` para o diretório inicial de um usuário. No "
"entanto, observe que o próprio Python oferece implementações de muitos "
"recursos semelhantes a shell (em particular, :mod:`glob`, :mod:`fnmatch`, :"
"func:`os.walk`, :func:`os.path.expandvars`, :func:`os.path.expanduser` e :"
"mod:`shutil`)."

#: ../../library/subprocess.rst:336
msgid ""
"When *universal_newlines* is ``True``, the class uses the encoding :func:"
"`locale.getpreferredencoding(False) <locale.getpreferredencoding>` instead "
"of ``locale.getpreferredencoding()``.  See the :class:`io.TextIOWrapper` "
"class for more information on this change."
msgstr ""
"Quando *universal_newlines* é ``True``, a classe usa a codificação :func:"
"`locale.getpreferredencoding(False) <locale.getpreferredencoding>` em vez de "
"``locale.getpreferredencoding()``.  Veja a classe :class:`io.TextIOWrapper` "
"para mais informações sobre esta alteração."

#: ../../library/subprocess.rst:344 ../../library/subprocess.rst:465
msgid ""
"Read the `Security Considerations`_ section before using ``shell=True``."
msgstr "Leia a seção `Security Considerations`_ antes de usar ``shell=True``."

#: ../../library/subprocess.rst:346
msgid ""
"These options, along with all of the other options, are described in more "
"detail in the :class:`Popen` constructor documentation."
msgstr ""
"Essas opções, junto com todas as outras opções, são descritas em mais "
"detalhes na documentação do construtor :class:`Popen`."

#: ../../library/subprocess.rst:351
msgid "Popen Constructor"
msgstr "Construtor Popen"

#: ../../library/subprocess.rst:353
msgid ""
"The underlying process creation and management in this module is handled by "
"the :class:`Popen` class. It offers a lot of flexibility so that developers "
"are able to handle the less common cases not covered by the convenience "
"functions."
msgstr ""
"A criação e gerenciamento do processo subjacente neste módulo é manipulado "
"pela classe :class:`Popen`. Ela oferece muita flexibilidade para que os "
"desenvolvedores sejam capazes de lidar com os casos menos comuns não "
"cobertos pelas funções de conveniência."

#: ../../library/subprocess.rst:368
msgid ""
"Execute a child program in a new process.  On POSIX, the class uses :meth:"
"`os.execvpe`-like behavior to execute the child program.  On Windows, the "
"class uses the Windows ``CreateProcess()`` function.  The arguments to :"
"class:`Popen` are as follows."
msgstr ""
"Executa um programa filho em um novo processo. No POSIX, a classe usa o "
"comportamento de :meth:`os.execvpe` para executar o programa filho. No "
"Windows, a classe usa a função Windows ``CreateProcess()``. Os argumentos "
"para :class:`Popen` são os seguintes."

#: ../../library/subprocess.rst:373
msgid ""
"*args* should be a sequence of program arguments or else a single string or :"
"term:`path-like object`. By default, the program to execute is the first "
"item in *args* if *args* is a sequence.  If *args* is a string, the "
"interpretation is platform-dependent and described below.  See the *shell* "
"and *executable* arguments for additional differences from the default "
"behavior.  Unless otherwise stated, it is recommended to pass *args* as a "
"sequence."
msgstr ""
"*args* deve ser uma sequência de argumentos do programa ou então uma única "
"string ou :term:`objeto caminho ou similar <path-like object>`. Por padrão, "
"o programa a ser executado é o primeiro item em *args* se *args* for uma "
"sequência. Se *args* for uma string, a interpretação depende da plataforma e "
"é descrita abaixo. Consulte os argumentos *shell* e *executable* para obter "
"diferenças adicionais em relação ao comportamento padrão. Salvo indicação em "
"contrário, é recomendado passar *args* como uma sequência."

#: ../../library/subprocess.rst:383
msgid ""
"For maximum reliability, use a fully qualified path for the executable. To "
"search for an unqualified name on :envvar:`PATH`, use :meth:`shutil.which`. "
"On all platforms, passing :data:`sys.executable` is the recommended way to "
"launch the current Python interpreter again, and use the ``-m`` command-line "
"format to launch an installed module."
msgstr ""
"Para confiabilidade máxima, use um caminho totalmente qualificado para o "
"executável. Para procurar um nome não qualificado no :envvar:`PATH`, use :"
"meth:`shutil.which`. Em todas as plataformas, passar :data:`sys.executable` "
"é a maneira recomendada de relançar o interpretador Python atual, e usar o "
"formato de linha de comando ``-m`` para iniciar um módulo instalado."

#: ../../library/subprocess.rst:389
msgid ""
"Resolving the path of *executable* (or the first item of *args*) is platform "
"dependent. For POSIX, see :meth:`os.execvpe`, and note that when resolving "
"or searching for the executable path, *cwd* overrides the current working "
"directory and *env* can override the ``PATH`` environment variable. For "
"Windows, see the documentation of the ``lpApplicationName`` and "
"``lpCommandLine`` parameters of WinAPI ``CreateProcess``, and note that when "
"resolving or searching for the executable path with ``shell=False``, *cwd* "
"does not override the current working directory and *env* cannot override "
"the ``PATH`` environment variable. Using a full path avoids all of these "
"variations."
msgstr ""
"Resolver o caminho do executável (ou o primeiro item de *args*) depende da "
"plataforma. Para POSIX, veja :meth:`os.execvpe`, e note que ao resolver ou "
"procurar o caminho do executável, *cwd* substitui o diretório de trabalho "
"atual e *env* pode substituir a variável de ambiente ``PATH``. Para Windows, "
"veja a documentação dos parâmetros ``lpApplicationName`` e ``lpCommandLine`` "
"do WinAPI ``CreateProcess``, e note que ao resolver ou procurar o caminho do "
"executável com ``shell=False``, *cwd* não substitui o diretório de trabalho "
"atual e *env* não pode substituir a variável de ambiente ``PATH``. Usar um "
"caminho completo evita todas essas variações."

#: ../../library/subprocess.rst:400
msgid ""
"An example of passing some arguments to an external program as a sequence "
"is::"
msgstr ""
"Um exemplo de passagem de alguns argumentos para um programa externo como "
"uma sequência é::"

#: ../../library/subprocess.rst:403
msgid "Popen([\"/usr/bin/git\", \"commit\", \"-m\", \"Fixes a bug.\"])"
msgstr "Popen([\"/usr/bin/git\", \"commit\", \"-m\", \"Fixes a bug.\"])"

#: ../../library/subprocess.rst:405
msgid ""
"On POSIX, if *args* is a string, the string is interpreted as the name or "
"path of the program to execute.  However, this can only be done if not "
"passing arguments to the program."
msgstr ""
"No POSIX, se *args* for uma string, a string é interpretada como o nome ou "
"caminho do programa a ser executado. No entanto, isso só pode ser feito se "
"não forem passados argumentos para o programa."

#: ../../library/subprocess.rst:411
msgid ""
"It may not be obvious how to break a shell command into a sequence of "
"arguments, especially in complex cases. :meth:`shlex.split` can illustrate "
"how to determine the correct tokenization for *args*::"
msgstr ""
"Pode não ser óbvio como quebrar um comando shell em uma sequência de "
"argumentos, especialmente em casos complexos. :meth:`shlex.split` pode "
"ilustrar como determinar a tokenização correta para *args*::"

#: ../../library/subprocess.rst:415
msgid ""
">>> import shlex, subprocess\n"
">>> command_line = input()\n"
"/bin/vikings -input eggs.txt -output \"spam spam.txt\" -cmd \"echo "
"'$MONEY'\"\n"
">>> args = shlex.split(command_line)\n"
">>> print(args)\n"
"['/bin/vikings', '-input', 'eggs.txt', '-output', 'spam spam.txt', '-cmd', "
"\"echo '$MONEY'\"]\n"
">>> p = subprocess.Popen(args) # Success!"
msgstr ""
">>> import shlex, subprocess\n"
">>> command_line = input()\n"
"/bin/vikings -input eggs.txt -output \"spam spam.txt\" -cmd \"echo "
"'$MONEY'\"\n"
">>> args = shlex.split(command_line)\n"
">>> print(args)\n"
"['/bin/vikings', '-input', 'eggs.txt', '-output', 'spam spam.txt', '-cmd', "
"\"echo '$MONEY'\"]\n"
">>> p = subprocess.Popen(args) # Successo!"

#: ../../library/subprocess.rst:423
msgid ""
"Note in particular that options (such as *-input*) and arguments (such as "
"*eggs.txt*) that are separated by whitespace in the shell go in separate "
"list elements, while arguments that need quoting or backslash escaping when "
"used in the shell (such as filenames containing spaces or the *echo* command "
"shown above) are single list elements."
msgstr ""
"Observe em particular que as opções (como *-input*) e argumentos (como *eggs."
"txt*) que são separados por espaços em branco no shell vão em elementos de "
"lista separados, enquanto os argumentos que precisam de aspas ou escape de "
"contrabarra quando usados no shell (como nomes de arquivos contendo espaços "
"ou o comando *echo* mostrado acima) são um único elemento de lista."

#: ../../library/subprocess.rst:429
msgid ""
"On Windows, if *args* is a sequence, it will be converted to a string in a "
"manner described in :ref:`converting-argument-sequence`.  This is because "
"the underlying ``CreateProcess()`` operates on strings."
msgstr ""
"No Windows, se *args* for uma sequência, será convertido em uma string da "
"maneira descrita em :ref:`converting-argument-sequence`. Isso ocorre porque "
"o ``CreateProcess()`` subjacente opera em strings."

#: ../../library/subprocess.rst:433
msgid ""
"*args* parameter accepts a :term:`path-like object` if *shell* is ``False`` "
"and a sequence containing path-like objects on POSIX."
msgstr ""
"O parâmetro *args* aceita um :term:`objeto caminho ou similar <path-like "
"object>` se *shell* é ``False`` e uma sequência contendo objetos caminho ou "
"similar no POSIX."

#: ../../library/subprocess.rst:437
msgid ""
"*args* parameter accepts a :term:`path-like object` if *shell* is ``False`` "
"and a sequence containing bytes and path-like objects on Windows."
msgstr ""
"O parâmetro *args* aceita um :term:`objeto caminho ou similar` se *shell* "
"for ``False`` e uma sequência contendo bytes e objetos caminho ou similar no "
"Windows."

#: ../../library/subprocess.rst:442
msgid ""
"The *shell* argument (which defaults to ``False``) specifies whether to use "
"the shell as the program to execute.  If *shell* is ``True``, it is "
"recommended to pass *args* as a string rather than as a sequence."
msgstr ""
"O argumento *shell* (que por padrão é ``False``) especifica se deve usar o "
"*shell* como o programa a ser executado. Se *shell* for ``True``, é "
"recomendado passar *args* como uma string em vez de uma sequência."

#: ../../library/subprocess.rst:446
msgid ""
"On POSIX with ``shell=True``, the shell defaults to :file:`/bin/sh`.  If "
"*args* is a string, the string specifies the command to execute through the "
"shell.  This means that the string must be formatted exactly as it would be "
"when typed at the shell prompt.  This includes, for example, quoting or "
"backslash escaping filenames with spaces in them.  If *args* is a sequence, "
"the first item specifies the command string, and any additional items will "
"be treated as additional arguments to the shell itself.  That is to say, :"
"class:`Popen` does the equivalent of::"
msgstr ""
"Em POSIX com ``shell=True``, o *shell* padrão é :file:`/bin/sh`. Se *args* "
"for uma string, a *string* especifica o comando a ser executado através do "
"*shell*. Isso significa que a *string* deve ser formatada exatamente como "
"seria ao ser digitada no prompt do *shell*. Isso inclui, por exemplo, citar "
"ou escapar com contrabarra nomes de arquivos que contenham espaços. Se "
"*args* for uma sequência, o primeiro item especifica a *string* do comando, "
"e quaisquer itens adicionais serão tratados como argumentos adicionais para "
"o próprio *shell*. Ou seja, :class:`Popen` faz o equivalente a:"

#: ../../library/subprocess.rst:455
msgid "Popen(['/bin/sh', '-c', args[0], args[1], ...])"
msgstr "Popen(['/bin/sh', '-c', args[0], args[1], ...])"

#: ../../library/subprocess.rst:457
msgid ""
"On Windows with ``shell=True``, the :envvar:`COMSPEC` environment variable "
"specifies the default shell.  The only time you need to specify "
"``shell=True`` on Windows is when the command you wish to execute is built "
"into the shell (e.g. :command:`dir` or :command:`copy`).  You do not need "
"``shell=True`` to run a batch file or console-based executable."
msgstr ""
"No Windows com ``shell=True``, a variável de ambiente :envvar:`COMSPEC` "
"especifica o shell padrão. A única vez que você precisa especificar "
"``shell=True`` no Windows é quando o comando que você deseja executar é "
"construído no shell (por exemplo, :command:`dir` ou :command:`copy`). Você "
"não precisa de ``shell=True`` para executar um arquivo em lote ou executável "
"baseado em console."

#: ../../library/subprocess.rst:467
msgid ""
"*bufsize* will be supplied as the corresponding argument to the :func:`open` "
"function when creating the stdin/stdout/stderr pipe file objects:"
msgstr ""
"*bufsize* será fornecido como o argumento correspondente à função :func:"
"`open` ao criar os objetos arquivo de encadeamento stdin/stdout/stderr:"

#: ../../library/subprocess.rst:471
msgid ""
"``0`` means unbuffered (read and write are one system call and can return "
"short)"
msgstr ""
"``0`` significa sem buffer (leitura e gravação são uma chamada de sistema e "
"podem retornar curto)"

#: ../../library/subprocess.rst:473
msgid ""
"``1`` means line buffered (only usable if ``text=True`` or "
"``universal_newlines=True``)"
msgstr ""
"``1`` significa buffer de linha (utilizável somente se ``text=True`` ou "
"``universal_newlines=True``)"

#: ../../library/subprocess.rst:475
msgid "any other positive value means use a buffer of approximately that size"
msgstr ""
"qualquer outro valor positivo significa usar um buffer de aproximadamente "
"esse tamanho"

#: ../../library/subprocess.rst:477
msgid ""
"negative bufsize (the default) means the system default of io."
"DEFAULT_BUFFER_SIZE will be used."
msgstr ""
"bufsize negativo (o padrão) significa que o padrão do sistema io."
"DEFAULT_BUFFER_SIZE será usado."

#: ../../library/subprocess.rst:480
msgid ""
"*bufsize* now defaults to -1 to enable buffering by default to match the "
"behavior that most code expects.  In versions prior to Python 3.2.4 and "
"3.3.1 it incorrectly defaulted to ``0`` which was unbuffered and allowed "
"short reads.  This was unintentional and did not match the behavior of "
"Python 2 as most code expected."
msgstr ""
"*bufsize* agora assume o padrão -1 para habilitar o buffer por padrão para "
"corresponder ao comportamento que a maioria dos códigos espera. Em versões "
"anteriores ao Python 3.2.4 e 3.3.1, ele assumia incorretamente o padrão "
"``0``, que não tinha buffer e permitia leituras curtas. Isso não foi "
"intencional e não correspondeu ao comportamento do Python 2, como a maioria "
"dos códigos esperava."

#: ../../library/subprocess.rst:487
msgid ""
"The *executable* argument specifies a replacement program to execute.   It "
"is very seldom needed.  When ``shell=False``, *executable* replaces the "
"program to execute specified by *args*.  However, the original *args* is "
"still passed to the program.  Most programs treat the program specified by "
"*args* as the command name, which can then be different from the program "
"actually executed.  On POSIX, the *args* name becomes the display name for "
"the executable in utilities such as :program:`ps`.  If ``shell=True``, on "
"POSIX the *executable* argument specifies a replacement shell for the "
"default :file:`/bin/sh`."
msgstr ""
"O argumento *executable* especifica um programa de substituição para "
"executar. Ele é muito raramente necessário. Quando ``shell=False``, "
"*executable* substitui o programa a ser executado especificado por *args*. "
"No entanto, o *args* original ainda é passado para o programa. A maioria dos "
"programas trata o programa especificado por *args* como o nome do comando, "
"que pode então ser diferente do programa realmente executado. No POSIX, o "
"nome *args* se torna o nome de exibição para o executável em utilitários "
"como :program:`ps`. Se ``shell=True``, no POSIX o argumento *executable* "
"especifica um shell de substituição para o padrão :file:`/bin/sh`."

#: ../../library/subprocess.rst:497
msgid "*executable* parameter accepts a :term:`path-like object` on POSIX."
msgstr ""
"O parâmetro *executable* aceita um :term:`objeto caminho ou similar` no "
"POSIX."

#: ../../library/subprocess.rst:500
msgid ""
"*executable* parameter accepts a bytes and :term:`path-like object` on "
"Windows."
msgstr ""
"O parâmetro *executable* aceita um :term:`objeto caminho ou similar` bytes "
"no Windows."

#: ../../library/subprocess.rst:512
msgid ""
"*stdin*, *stdout* and *stderr* specify the executed program's standard "
"input, standard output and standard error file handles, respectively.  Valid "
"values are ``None``, :data:`PIPE`, :data:`DEVNULL`, an existing file "
"descriptor (a positive integer), and an existing :term:`file object` with a "
"valid file descriptor.  With the default settings of ``None``, no "
"redirection will occur.  :data:`PIPE` indicates that a new pipe to the child "
"should be created.  :data:`DEVNULL` indicates that the special file :data:"
"`os.devnull` will be used.  Additionally, *stderr* can be :data:`STDOUT`, "
"which indicates that the stderr data from the applications should be "
"captured into the same file handle as for *stdout*."
msgstr ""
"*stdin*, *stdout* e *stderr* especificam a entrada padrão, a saída padrão e "
"a saída de erro do programa executado, respectivamente. Os valores válidos "
"são ``None``, :data:`PIPE`, :data:`DEVNULL`, um descritor de arquivo "
"existente (um número inteiro positivo) e um :term:`objeto arquivo` existente "
"com um descritor de arquivo válido. Com as configurações padrão de ``None``, "
"nenhum redirecionamento ocorrerá. :data:`PIPE` indica que um novo canal para "
"o filho deve ser criado. :data:`DEVNULL` indica que o arquivo especial :data:"
"`os.devnull` será usado. Além disso, *stderr* pode ser :data:`STDOUT`, o que "
"indica que os dados de stderr da aplicação devem ser capturados no mesmo "
"identificador de arquivo que para *stdout*."

#: ../../library/subprocess.rst:523
msgid ""
"If *preexec_fn* is set to a callable object, this object will be called in "
"the child process just before the child is executed. (POSIX only)"
msgstr ""
"Se *preexec_fn* for definido como um objeto chamável, esse objeto será "
"chamado no processo filho pouco antes de o filho ser executado. (Somente "
"POSIX)"

#: ../../library/subprocess.rst:529
msgid ""
"The *preexec_fn* parameter is NOT SAFE to use in the presence of threads in "
"your application.  The child process could deadlock before exec is called."
msgstr ""
"O parâmetro *preexec_fn* NÃO É SEGURO para uso na presença de threads em sua "
"aplicação. O processo filho pode travar antes de exec ser chamado."

#: ../../library/subprocess.rst:535
msgid ""
"If you need to modify the environment for the child use the *env* parameter "
"rather than doing it in a *preexec_fn*. The *start_new_session* and "
"*process_group* parameters should take the place of code using *preexec_fn* "
"to call :func:`os.setsid` or :func:`os.setpgid` in the child."
msgstr ""
"Se você precisar modificar o ambiente para o filho, use o parâmetro *env* em "
"vez de fazer isso em um *preexec_fn*. Os parâmetros *start_new_session* e "
"*process_group* devem tomar o lugar do código usando *preexec_fn* para "
"chamar :func:`os.setsid` ou :func:`os.setpgid` no filho."

#: ../../library/subprocess.rst:542
msgid ""
"The *preexec_fn* parameter is no longer supported in subinterpreters. The "
"use of the parameter in a subinterpreter raises :exc:`RuntimeError`. The new "
"restriction may affect applications that are deployed in mod_wsgi, uWSGI, "
"and other embedded environments."
msgstr ""
"O parâmetro *preexec_fn* não é mais suportado em subinterpretadores. O uso "
"do parâmetro em um subinterpretador levanta :exc:`RuntimeError`. A nova "
"restrição pode afetar aplicações que são implantadas em mod_wsgi, uWSGI e "
"outros ambientes incorporados."

#: ../../library/subprocess.rst:547
msgid ""
"If *close_fds* is true, all file descriptors except ``0``, ``1`` and ``2`` "
"will be closed before the child process is executed.  Otherwise when "
"*close_fds* is false, file descriptors obey their inheritable flag as "
"described in :ref:`fd_inheritance`."
msgstr ""

#: ../../library/subprocess.rst:552
msgid ""
"On Windows, if *close_fds* is true then no handles will be inherited by the "
"child process unless explicitly passed in the ``handle_list`` element of :"
"attr:`STARTUPINFO.lpAttributeList`, or by standard handle redirection."
msgstr ""

#: ../../library/subprocess.rst:556
msgid ""
"The default for *close_fds* was changed from :const:`False` to what is "
"described above."
msgstr ""

#: ../../library/subprocess.rst:560
msgid ""
"On Windows the default for *close_fds* was changed from :const:`False` to :"
"const:`True` when redirecting the standard handles. It's now possible to set "
"*close_fds* to :const:`True` when redirecting the standard handles."
msgstr ""

#: ../../library/subprocess.rst:565
msgid ""
"*pass_fds* is an optional sequence of file descriptors to keep open between "
"the parent and child.  Providing any *pass_fds* forces *close_fds* to be :"
"const:`True`.  (POSIX only)"
msgstr ""

#: ../../library/subprocess.rst:569
msgid "The *pass_fds* parameter was added."
msgstr "O parâmetro *pass_fds* foi adicionado."

#: ../../library/subprocess.rst:572
msgid ""
"If *cwd* is not ``None``, the function changes the working directory to "
"*cwd* before executing the child.  *cwd* can be a string, bytes or :term:"
"`path-like <path-like object>` object.  On POSIX, the function looks for "
"*executable* (or for the first item in *args*) relative to *cwd* if the "
"executable path is a relative path."
msgstr ""

#: ../../library/subprocess.rst:578
msgid "*cwd* parameter accepts a :term:`path-like object` on POSIX."
msgstr ""

#: ../../library/subprocess.rst:581
msgid "*cwd* parameter accepts a :term:`path-like object` on Windows."
msgstr ""

#: ../../library/subprocess.rst:584
msgid "*cwd* parameter accepts a bytes object on Windows."
msgstr ""

#: ../../library/subprocess.rst:587
msgid ""
"If *restore_signals* is true (the default) all signals that Python has set "
"to SIG_IGN are restored to SIG_DFL in the child process before the exec. "
"Currently this includes the SIGPIPE, SIGXFZ and SIGXFSZ signals. (POSIX only)"
msgstr ""

#: ../../library/subprocess.rst:592
msgid "*restore_signals* was added."
msgstr "*restore_signals* foi adicionado."

#: ../../library/subprocess.rst:595
msgid ""
"If *start_new_session* is true the ``setsid()`` system call will be made in "
"the child process prior to the execution of the subprocess."
msgstr ""

#: ../../library/subprocess.rst:599
msgid "*start_new_session* was added."
msgstr "*start_new_session* foi adicionado."

#: ../../library/subprocess.rst:602
msgid ""
"If *process_group* is a non-negative integer, the ``setpgid(0, value)`` "
"system call will be made in the child process prior to the execution of the "
"subprocess."
msgstr ""

#: ../../library/subprocess.rst:606
msgid "*process_group* was added."
msgstr ""

#: ../../library/subprocess.rst:609
msgid ""
"If *group* is not ``None``, the setregid() system call will be made in the "
"child process prior to the execution of the subprocess. If the provided "
"value is a string, it will be looked up via :func:`grp.getgrnam` and the "
"value in ``gr_gid`` will be used. If the value is an integer, it will be "
"passed verbatim. (POSIX only)"
msgstr ""

#: ../../library/subprocess.rst:618
msgid ""
"If *extra_groups* is not ``None``, the setgroups() system call will be made "
"in the child process prior to the execution of the subprocess. Strings "
"provided in *extra_groups* will be looked up via :func:`grp.getgrnam` and "
"the values in ``gr_gid`` will be used. Integer values will be passed "
"verbatim. (POSIX only)"
msgstr ""

#: ../../library/subprocess.rst:627
msgid ""
"If *user* is not ``None``, the setreuid() system call will be made in the "
"child process prior to the execution of the subprocess. If the provided "
"value is a string, it will be looked up via :func:`pwd.getpwnam` and the "
"value in ``pw_uid`` will be used. If the value is an integer, it will be "
"passed verbatim. (POSIX only)"
msgstr ""

#: ../../library/subprocess.rst:636
msgid ""
"If *umask* is not negative, the umask() system call will be made in the "
"child process prior to the execution of the subprocess."
msgstr ""

#: ../../library/subprocess.rst:642
msgid ""
"If *env* is not ``None``, it must be a mapping that defines the environment "
"variables for the new process; these are used instead of the default "
"behavior of inheriting the current process' environment. This mapping can be "
"str to str on any platform or bytes to bytes on POSIX platforms much like :"
"data:`os.environ` or :data:`os.environb`."
msgstr ""

#: ../../library/subprocess.rst:650
msgid ""
"If specified, *env* must provide any variables required for the program to "
"execute.  On Windows, in order to run a `side-by-side assembly`_ the "
"specified *env* **must** include a valid :envvar:`SystemRoot`."
msgstr ""

#: ../../library/subprocess.rst:656
msgid ""
"If *encoding* or *errors* are specified, or *text* is true, the file objects "
"*stdin*, *stdout* and *stderr* are opened in text mode with the specified "
"*encoding* and *errors*, as described above in :ref:`frequently-used-"
"arguments`. The *universal_newlines* argument is equivalent  to *text* and "
"is provided for backwards compatibility. By default, file objects are opened "
"in binary mode."
msgstr ""

#: ../../library/subprocess.rst:662
msgid "*encoding* and *errors* were added."
msgstr "*encoding* e *errors* foram adicionados."

#: ../../library/subprocess.rst:665 ../../library/subprocess.rst:1312
msgid "*text* was added as a more readable alias for *universal_newlines*."
msgstr ""
"*text* foi adicionado como um atalho mais legível para *universal_newlines*."

#: ../../library/subprocess.rst:668
msgid ""
"If given, *startupinfo* will be a :class:`STARTUPINFO` object, which is "
"passed to the underlying ``CreateProcess`` function."
msgstr ""

#: ../../library/subprocess.rst:671
msgid "If given, *creationflags*, can be one or more of the following flags:"
msgstr ""

#: ../../library/subprocess.rst:673
msgid ":data:`CREATE_NEW_CONSOLE`"
msgstr ":data:`CREATE_NEW_CONSOLE`"

#: ../../library/subprocess.rst:674
msgid ":data:`CREATE_NEW_PROCESS_GROUP`"
msgstr ":data:`CREATE_NEW_PROCESS_GROUP`"

#: ../../library/subprocess.rst:675
msgid ":data:`ABOVE_NORMAL_PRIORITY_CLASS`"
msgstr ":data:`ABOVE_NORMAL_PRIORITY_CLASS`"

#: ../../library/subprocess.rst:676
msgid ":data:`BELOW_NORMAL_PRIORITY_CLASS`"
msgstr ":data:`BELOW_NORMAL_PRIORITY_CLASS`"

#: ../../library/subprocess.rst:677
msgid ":data:`HIGH_PRIORITY_CLASS`"
msgstr ":data:`HIGH_PRIORITY_CLASS`"

#: ../../library/subprocess.rst:678
msgid ":data:`IDLE_PRIORITY_CLASS`"
msgstr ":data:`IDLE_PRIORITY_CLASS`"

#: ../../library/subprocess.rst:679
msgid ":data:`NORMAL_PRIORITY_CLASS`"
msgstr ":data:`NORMAL_PRIORITY_CLASS`"

#: ../../library/subprocess.rst:680
msgid ":data:`REALTIME_PRIORITY_CLASS`"
msgstr ":data:`REALTIME_PRIORITY_CLASS`"

#: ../../library/subprocess.rst:681
msgid ":data:`CREATE_NO_WINDOW`"
msgstr ":data:`CREATE_NO_WINDOW`"

#: ../../library/subprocess.rst:682
msgid ":data:`DETACHED_PROCESS`"
msgstr ":data:`DETACHED_PROCESS`"

#: ../../library/subprocess.rst:683
msgid ":data:`CREATE_DEFAULT_ERROR_MODE`"
msgstr ":data:`CREATE_DEFAULT_ERROR_MODE`"

#: ../../library/subprocess.rst:684
msgid ":data:`CREATE_BREAKAWAY_FROM_JOB`"
msgstr ":data:`CREATE_BREAKAWAY_FROM_JOB`"

#: ../../library/subprocess.rst:686
msgid ""
"*pipesize* can be used to change the size of the pipe when :data:`PIPE` is "
"used for *stdin*, *stdout* or *stderr*. The size of the pipe is only changed "
"on platforms that support this (only Linux at this time of writing). Other "
"platforms will ignore this parameter."
msgstr ""

#: ../../library/subprocess.rst:691
msgid "Added the *pipesize* parameter."
msgstr ""

#: ../../library/subprocess.rst:694
msgid ""
"Popen objects are supported as context managers via the :keyword:`with` "
"statement: on exit, standard file descriptors are closed, and the process is "
"waited for. ::"
msgstr ""

#: ../../library/subprocess.rst:698
msgid ""
"with Popen([\"ifconfig\"], stdout=PIPE) as proc:\n"
"    log.write(proc.stdout.read())"
msgstr ""

#: ../../library/subprocess.rst:701 ../../library/subprocess.rst:703
msgid ""
"Popen and the other functions in this module that use it raise an :ref:"
"`auditing event <auditing>` ``subprocess.Popen`` with arguments "
"``executable``, ``args``, ``cwd``, and ``env``. The value for ``args`` may "
"be a single string or a list of strings, depending on platform."
msgstr ""

#: ../../library/subprocess.rst:708
msgid "Added context manager support."
msgstr "Adicionado suporte a gerenciador de contexto."

#: ../../library/subprocess.rst:711
msgid ""
"Popen destructor now emits a :exc:`ResourceWarning` warning if the child "
"process is still running."
msgstr ""
"O destruidor Popen agora emite um aviso :exc:`ResourceWarning` se o processo "
"filho ainda estiver em execução."

#: ../../library/subprocess.rst:715
msgid ""
"Popen can use :func:`os.posix_spawn` in some cases for better performance. "
"On Windows Subsystem for Linux and QEMU User Emulation, Popen constructor "
"using :func:`os.posix_spawn` no longer raise an exception on errors like "
"missing program, but the child process fails with a non-zero :attr:`~Popen."
"returncode`."
msgstr ""

#: ../../library/subprocess.rst:724
msgid "Exceptions"
msgstr "Exceções"

#: ../../library/subprocess.rst:726
msgid ""
"Exceptions raised in the child process, before the new program has started "
"to execute, will be re-raised in the parent."
msgstr ""
"Exceções levantadas no processo filho, antes que o novo programa comece a "
"ser executado, serão levantadas novamente no pai."

#: ../../library/subprocess.rst:729
msgid ""
"The most common exception raised is :exc:`OSError`.  This occurs, for "
"example, when trying to execute a non-existent file.  Applications should "
"prepare for :exc:`OSError` exceptions. Note that, when ``shell=True``, :exc:"
"`OSError` will be raised by the child only if the selected shell itself was "
"not found. To determine if the shell failed to find the requested "
"application, it is necessary to check the return code or output from the "
"subprocess."
msgstr ""

#: ../../library/subprocess.rst:736
msgid ""
"A :exc:`ValueError` will be raised if :class:`Popen` is called with invalid "
"arguments."
msgstr ""
"A exceção :exc:`ValueError` será levantada se :class:`Popen` for chamado com "
"argumentos inválidos."

#: ../../library/subprocess.rst:739
msgid ""
":func:`check_call` and :func:`check_output` will raise :exc:"
"`CalledProcessError` if the called process returns a non-zero return code."
msgstr ""
":func:`check_call` e :func:`check_output` levantarão :exc:"
"`CalledProcessError` se o processo chamado retornar um código de retorno "
"diferente de zero."

#: ../../library/subprocess.rst:743
msgid ""
"All of the functions and methods that accept a *timeout* parameter, such as :"
"func:`run` and :meth:`Popen.communicate` will raise :exc:`TimeoutExpired` if "
"the timeout expires before the process exits."
msgstr ""

#: ../../library/subprocess.rst:747
msgid ""
"Exceptions defined in this module all inherit from :exc:`SubprocessError`."
msgstr ""
"Todas as exceções definidas neste módulo herdam de :exc:`SubprocessError`."

#: ../../library/subprocess.rst:749
msgid "The :exc:`SubprocessError` base class was added."
msgstr "A classe base :exc:`SubprocessError` foi adicionada."

#: ../../library/subprocess.rst:755
msgid "Security Considerations"
msgstr "Considerações de Segurança"

#: ../../library/subprocess.rst:757
msgid ""
"Unlike some other popen functions, this library will not implicitly choose "
"to call a system shell.  This means that all characters, including shell "
"metacharacters, can safely be passed to child processes. If the shell is "
"invoked explicitly, via ``shell=True``, it is the application's "
"responsibility to ensure that all whitespace and metacharacters are quoted "
"appropriately to avoid `shell injection <https://en.wikipedia.org/wiki/"
"Shell_injection#Shell_injection>`_ vulnerabilities. On :ref:`some platforms "
"<shlex-quote-warning>`, it is possible to use :func:`shlex.quote` for this "
"escaping."
msgstr ""

#: ../../library/subprocess.rst:767
msgid ""
"On Windows, batch files (:file:`*.bat` or :file:`*.cmd`) may be launched by "
"the operating system in a system shell regardless of the arguments passed to "
"this library. This could result in arguments being parsed according to shell "
"rules, but without any escaping added by Python. If you are intentionally "
"launching a batch file with arguments from untrusted sources, consider "
"passing ``shell=True`` to allow Python to escape special characters. See :gh:"
"`114539` for additional discussion."
msgstr ""

#: ../../library/subprocess.rst:777
msgid "Popen Objects"
msgstr "Objetos Popen"

#: ../../library/subprocess.rst:779
msgid "Instances of the :class:`Popen` class have the following methods:"
msgstr "Instâncias da classe :class:`Popen` têm os seguintes métodos:"

#: ../../library/subprocess.rst:784
msgid ""
"Check if child process has terminated.  Set and return :attr:`~Popen."
"returncode` attribute. Otherwise, returns ``None``."
msgstr ""

#: ../../library/subprocess.rst:790
msgid ""
"Wait for child process to terminate.  Set and return :attr:`~Popen."
"returncode` attribute."
msgstr ""

#: ../../library/subprocess.rst:793
msgid ""
"If the process does not terminate after *timeout* seconds, raise a :exc:"
"`TimeoutExpired` exception.  It is safe to catch this exception and retry "
"the wait."
msgstr ""

#: ../../library/subprocess.rst:799
msgid ""
"This will deadlock when using ``stdout=PIPE`` or ``stderr=PIPE`` and the "
"child process generates enough output to a pipe such that it blocks waiting "
"for the OS pipe buffer to accept more data. Use :meth:`Popen.communicate` "
"when using pipes to avoid that."
msgstr ""

#: ../../library/subprocess.rst:806
msgid ""
"When the ``timeout`` parameter is not ``None``, then (on POSIX) the function "
"is implemented using a busy loop (non-blocking call and short sleeps). Use "
"the :mod:`asyncio` module for an asynchronous wait: see :class:`asyncio."
"create_subprocess_exec`."
msgstr ""

#: ../../library/subprocess.rst:811 ../../library/subprocess.rst:852
#: ../../library/subprocess.rst:1209 ../../library/subprocess.rst:1249
#: ../../library/subprocess.rst:1303
msgid "*timeout* was added."
msgstr "*timeout* foi adicionado."

#: ../../library/subprocess.rst:816
msgid ""
"Interact with process: Send data to stdin.  Read data from stdout and "
"stderr, until end-of-file is reached.  Wait for process to terminate and set "
"the :attr:`~Popen.returncode` attribute.  The optional *input* argument "
"should be data to be sent to the child process, or ``None``, if no data "
"should be sent to the child.  If streams were opened in text mode, *input* "
"must be a string. Otherwise, it must be bytes."
msgstr ""

#: ../../library/subprocess.rst:823
msgid ""
":meth:`communicate` returns a tuple ``(stdout_data, stderr_data)``. The data "
"will be strings if streams were opened in text mode; otherwise, bytes."
msgstr ""

#: ../../library/subprocess.rst:827
msgid ""
"Note that if you want to send data to the process's stdin, you need to "
"create the Popen object with ``stdin=PIPE``.  Similarly, to get anything "
"other than ``None`` in the result tuple, you need to give ``stdout=PIPE`` "
"and/or ``stderr=PIPE`` too."
msgstr ""

#: ../../library/subprocess.rst:832
msgid ""
"If the process does not terminate after *timeout* seconds, a :exc:"
"`TimeoutExpired` exception will be raised.  Catching this exception and "
"retrying communication will not lose any output."
msgstr ""

#: ../../library/subprocess.rst:836
msgid ""
"The child process is not killed if the timeout expires, so in order to "
"cleanup properly a well-behaved application should kill the child process "
"and finish communication::"
msgstr ""

#: ../../library/subprocess.rst:840
msgid ""
"proc = subprocess.Popen(...)\n"
"try:\n"
"    outs, errs = proc.communicate(timeout=15)\n"
"except TimeoutExpired:\n"
"    proc.kill()\n"
"    outs, errs = proc.communicate()"
msgstr ""

#: ../../library/subprocess.rst:849
msgid ""
"The data read is buffered in memory, so do not use this method if the data "
"size is large or unlimited."
msgstr ""

#: ../../library/subprocess.rst:858
msgid "Sends the signal *signal* to the child."
msgstr "Envia o sinal *signal* para o filho."

#: ../../library/subprocess.rst:860
msgid "Do nothing if the process completed."
msgstr "Não faz nada se o processo for concluído."

#: ../../library/subprocess.rst:864
msgid ""
"On Windows, SIGTERM is an alias for :meth:`terminate`. CTRL_C_EVENT and "
"CTRL_BREAK_EVENT can be sent to processes started with a *creationflags* "
"parameter which includes ``CREATE_NEW_PROCESS_GROUP``."
msgstr ""

#: ../../library/subprocess.rst:871
msgid ""
"Stop the child. On POSIX OSs the method sends :py:const:`~signal.SIGTERM` to "
"the child. On Windows the Win32 API function :c:func:`!TerminateProcess` is "
"called to stop the child."
msgstr ""

#: ../../library/subprocess.rst:878
msgid ""
"Kills the child. On POSIX OSs the function sends SIGKILL to the child. On "
"Windows :meth:`kill` is an alias for :meth:`terminate`."
msgstr ""

#: ../../library/subprocess.rst:882
msgid ""
"The following attributes are also set by the class for you to access. "
"Reassigning them to new values is unsupported:"
msgstr ""

#: ../../library/subprocess.rst:887
msgid ""
"The *args* argument as it was passed to :class:`Popen` -- a sequence of "
"program arguments or else a single string."
msgstr ""
"O argumento *args* conforme foi passado para :class:`Popen` - uma sequência "
"de argumentos do programa ou então uma única string."

#: ../../library/subprocess.rst:894
msgid ""
"If the *stdin* argument was :data:`PIPE`, this attribute is a writeable "
"stream object as returned by :func:`open`. If the *encoding* or *errors* "
"arguments were specified or the *text* or *universal_newlines* argument was "
"``True``, the stream is a text stream, otherwise it is a byte stream. If the "
"*stdin* argument was not :data:`PIPE`, this attribute is ``None``."
msgstr ""

#: ../../library/subprocess.rst:903
msgid ""
"If the *stdout* argument was :data:`PIPE`, this attribute is a readable "
"stream object as returned by :func:`open`. Reading from the stream provides "
"output from the child process. If the *encoding* or *errors* arguments were "
"specified or the *text* or *universal_newlines* argument was ``True``, the "
"stream is a text stream, otherwise it is a byte stream. If the *stdout* "
"argument was not :data:`PIPE`, this attribute is ``None``."
msgstr ""

#: ../../library/subprocess.rst:913
msgid ""
"If the *stderr* argument was :data:`PIPE`, this attribute is a readable "
"stream object as returned by :func:`open`. Reading from the stream provides "
"error output from the child process. If the *encoding* or *errors* arguments "
"were specified or the *text* or *universal_newlines* argument was ``True``, "
"the stream is a text stream, otherwise it is a byte stream. If the *stderr* "
"argument was not :data:`PIPE`, this attribute is ``None``."
msgstr ""

#: ../../library/subprocess.rst:922
msgid ""
"Use :meth:`~Popen.communicate` rather than :attr:`.stdin.write <Popen."
"stdin>`, :attr:`.stdout.read <Popen.stdout>` or :attr:`.stderr.read <Popen."
"stderr>` to avoid deadlocks due to any of the other OS pipe buffers filling "
"up and blocking the child process."
msgstr ""

#: ../../library/subprocess.rst:930
msgid "The process ID of the child process."
msgstr "O ID de processo do processo filho."

#: ../../library/subprocess.rst:932
msgid ""
"Note that if you set the *shell* argument to ``True``, this is the process "
"ID of the spawned shell."
msgstr ""
"Observe que se você definir o argumento *shell* como ``True``, este é o ID "
"do processo do shell gerado."

#: ../../library/subprocess.rst:938
msgid ""
"The child return code. Initially ``None``, :attr:`returncode` is set by a "
"call to the :meth:`poll`, :meth:`wait`, or :meth:`communicate` methods if "
"they detect that the process has terminated."
msgstr ""

#: ../../library/subprocess.rst:942
msgid ""
"A ``None`` value indicates that the process hadn't yet terminated at the "
"time of the last method call."
msgstr ""

#: ../../library/subprocess.rst:950
msgid "Windows Popen Helpers"
msgstr ""

#: ../../library/subprocess.rst:952
msgid ""
"The :class:`STARTUPINFO` class and following constants are only available on "
"Windows."
msgstr ""

#: ../../library/subprocess.rst:958
msgid ""
"Partial support of the Windows `STARTUPINFO <https://msdn.microsoft.com/en-"
"us/library/ms686331(v=vs.85).aspx>`__ structure is used for :class:`Popen` "
"creation.  The following attributes can be set by passing them as keyword-"
"only arguments."
msgstr ""

#: ../../library/subprocess.rst:963
msgid "Keyword-only argument support was added."
msgstr ""

#: ../../library/subprocess.rst:968
msgid ""
"A bit field that determines whether certain :class:`STARTUPINFO` attributes "
"are used when the process creates a window. ::"
msgstr ""

#: ../../library/subprocess.rst:971
msgid ""
"si = subprocess.STARTUPINFO()\n"
"si.dwFlags = subprocess.STARTF_USESTDHANDLES | subprocess."
"STARTF_USESHOWWINDOW"
msgstr ""

#: ../../library/subprocess.rst:976
msgid ""
"If :attr:`dwFlags` specifies :data:`STARTF_USESTDHANDLES`, this attribute is "
"the standard input handle for the process. If :data:`STARTF_USESTDHANDLES` "
"is not specified, the default for standard input is the keyboard buffer."
msgstr ""

#: ../../library/subprocess.rst:983
msgid ""
"If :attr:`dwFlags` specifies :data:`STARTF_USESTDHANDLES`, this attribute is "
"the standard output handle for the process. Otherwise, this attribute is "
"ignored and the default for standard output is the console window's buffer."
msgstr ""

#: ../../library/subprocess.rst:990
msgid ""
"If :attr:`dwFlags` specifies :data:`STARTF_USESTDHANDLES`, this attribute is "
"the standard error handle for the process. Otherwise, this attribute is "
"ignored and the default for standard error is the console window's buffer."
msgstr ""

#: ../../library/subprocess.rst:996
msgid ""
"If :attr:`dwFlags` specifies :data:`STARTF_USESHOWWINDOW`, this attribute "
"can be any of the values that can be specified in the ``nCmdShow`` parameter "
"for the `ShowWindow <https://msdn.microsoft.com/en-us/library/"
"ms633548(v=vs.85).aspx>`__ function, except for ``SW_SHOWDEFAULT``. "
"Otherwise, this attribute is ignored."
msgstr ""

#: ../../library/subprocess.rst:1003
msgid ""
":data:`SW_HIDE` is provided for this attribute. It is used when :class:"
"`Popen` is called with ``shell=True``."
msgstr ""

#: ../../library/subprocess.rst:1008
msgid ""
"A dictionary of additional attributes for process creation as given in "
"``STARTUPINFOEX``, see `UpdateProcThreadAttribute <https://msdn.microsoft."
"com/en-us/library/windows/desktop/ms686880(v=vs.85).aspx>`__."
msgstr ""

#: ../../library/subprocess.rst:1012
msgid "Supported attributes:"
msgstr "Atributos suportados:"

#: ../../library/subprocess.rst:1014
msgid "**handle_list**"
msgstr "**handle_list**"

#: ../../library/subprocess.rst:1015
msgid ""
"Sequence of handles that will be inherited. *close_fds* must be true if non-"
"empty."
msgstr ""

#: ../../library/subprocess.rst:1018
msgid ""
"The handles must be temporarily made inheritable by :func:`os."
"set_handle_inheritable` when passed to the :class:`Popen` constructor, else :"
"class:`OSError` will be raised with Windows error "
"``ERROR_INVALID_PARAMETER`` (87)."
msgstr ""

#: ../../library/subprocess.rst:1025
msgid ""
"In a multithreaded process, use caution to avoid leaking handles that are "
"marked inheritable when combining this feature with concurrent calls to "
"other process creation functions that inherit all handles such as :func:`os."
"system`.  This also applies to standard handle redirection, which "
"temporarily creates inheritable handles."
msgstr ""

#: ../../library/subprocess.rst:1035
msgid "Windows Constants"
msgstr "Constantes do Windows"

#: ../../library/subprocess.rst:1037
msgid "The :mod:`subprocess` module exposes the following constants."
msgstr ""

#: ../../library/subprocess.rst:1041
msgid ""
"The standard input device. Initially, this is the console input buffer, "
"``CONIN$``."
msgstr ""

#: ../../library/subprocess.rst:1046
msgid ""
"The standard output device. Initially, this is the active console screen "
"buffer, ``CONOUT$``."
msgstr ""

#: ../../library/subprocess.rst:1051
msgid ""
"The standard error device. Initially, this is the active console screen "
"buffer, ``CONOUT$``."
msgstr ""

#: ../../library/subprocess.rst:1056
msgid "Hides the window. Another window will be activated."
msgstr "Oculta a janela. Outra janela será ativada."

#: ../../library/subprocess.rst:1060
msgid ""
"Specifies that the :attr:`STARTUPINFO.hStdInput`, :attr:`STARTUPINFO."
"hStdOutput`, and :attr:`STARTUPINFO.hStdError` attributes contain additional "
"information."
msgstr ""

#: ../../library/subprocess.rst:1066
msgid ""
"Specifies that the :attr:`STARTUPINFO.wShowWindow` attribute contains "
"additional information."
msgstr ""

#: ../../library/subprocess.rst:1071
msgid ""
"A :attr:`STARTUPINFO.dwFlags` parameter to specify that the *Working in "
"Background* mouse cursor will be displayed while a process is launching. "
"This is the default behavior for GUI processes."
msgstr ""

#: ../../library/subprocess.rst:1080
msgid ""
"A :attr:`STARTUPINFO.dwFlags` parameter to specify that the mouse cursor "
"will not be changed when launching a process."
msgstr ""

#: ../../library/subprocess.rst:1087
msgid ""
"The new process has a new console, instead of inheriting its parent's "
"console (the default)."
msgstr ""

#: ../../library/subprocess.rst:1092
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"group will be created. This flag is necessary for using :func:`os.kill` on "
"the subprocess."
msgstr ""

#: ../../library/subprocess.rst:1096
msgid "This flag is ignored if :data:`CREATE_NEW_CONSOLE` is specified."
msgstr ""

#: ../../library/subprocess.rst:1100
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"will have an above average priority."
msgstr ""

#: ../../library/subprocess.rst:1107
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"will have a below average priority."
msgstr ""

#: ../../library/subprocess.rst:1114
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"will have a high priority."
msgstr ""

#: ../../library/subprocess.rst:1121
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"will have an idle (lowest) priority."
msgstr ""

#: ../../library/subprocess.rst:1128
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"will have a normal priority. (default)"
msgstr ""

#: ../../library/subprocess.rst:1135
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"will have realtime priority. You should almost never use "
"REALTIME_PRIORITY_CLASS, because this interrupts system threads that manage "
"mouse input, keyboard input, and background disk flushing. This class can be "
"appropriate for applications that \"talk\" directly to hardware or that "
"perform brief tasks that should have limited interruptions."
msgstr ""

#: ../../library/subprocess.rst:1146
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"will not create a window."
msgstr ""

#: ../../library/subprocess.rst:1153
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"will not inherit its parent's console. This value cannot be used with "
"CREATE_NEW_CONSOLE."
msgstr ""

#: ../../library/subprocess.rst:1161
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"does not inherit the error mode of the calling process. Instead, the new "
"process gets the default error mode. This feature is particularly useful for "
"multithreaded shell applications that run with hard errors disabled."
msgstr ""

#: ../../library/subprocess.rst:1171
msgid ""
"A :class:`Popen` ``creationflags`` parameter to specify that a new process "
"is not associated with the job."
msgstr ""

#: ../../library/subprocess.rst:1179
msgid "Older high-level API"
msgstr "API de alto nível mais antiga"

#: ../../library/subprocess.rst:1181
msgid ""
"Prior to Python 3.5, these three functions comprised the high level API to "
"subprocess. You can now use :func:`run` in many cases, but lots of existing "
"code calls these functions."
msgstr ""
"Antes do Python 3.5, essas três funções constituíam a API de alto nível para "
"subprocesso. Agora você pode usar :func:`run` em muitos casos, mas muitos "
"códigos existentes chamam essas funções."

#: ../../library/subprocess.rst:1188
msgid ""
"Run the command described by *args*.  Wait for command to complete, then "
"return the :attr:`~Popen.returncode` attribute."
msgstr ""

#: ../../library/subprocess.rst:1191 ../../library/subprocess.rst:1231
msgid ""
"Code needing to capture stdout or stderr should use :func:`run` instead::"
msgstr ""

#: ../../library/subprocess.rst:1193
msgid "run(...).returncode"
msgstr ""

#: ../../library/subprocess.rst:1195 ../../library/subprocess.rst:1235
msgid "To suppress stdout or stderr, supply a value of :data:`DEVNULL`."
msgstr ""

#: ../../library/subprocess.rst:1197 ../../library/subprocess.rst:1237
msgid ""
"The arguments shown above are merely some common ones. The full function "
"signature is the same as that of the :class:`Popen` constructor - this "
"function passes all supplied arguments other than *timeout* directly through "
"to that interface."
msgstr ""

#: ../../library/subprocess.rst:1204 ../../library/subprocess.rst:1244
msgid ""
"Do not use ``stdout=PIPE`` or ``stderr=PIPE`` with this function.  The child "
"process will block if it generates enough output to a pipe to fill up the OS "
"pipe buffer as the pipes are not being read from."
msgstr ""

#: ../../library/subprocess.rst:1224
msgid ""
"Run command with arguments.  Wait for command to complete. If the return "
"code was zero then return, otherwise raise :exc:`CalledProcessError`. The :"
"exc:`CalledProcessError` object will have the return code in the :attr:"
"`~CalledProcessError.returncode` attribute. If :func:`check_call` was unable "
"to start the process it will propagate the exception that was raised."
msgstr ""

#: ../../library/subprocess.rst:1233
msgid "run(..., check=True)"
msgstr ""

#: ../../library/subprocess.rst:1266
msgid "Run command with arguments and return its output."
msgstr "Executa o comando com argumentos e retorna sua saída."

#: ../../library/subprocess.rst:1268
msgid ""
"If the return code was non-zero it raises a :exc:`CalledProcessError`. The :"
"exc:`CalledProcessError` object will have the return code in the :attr:"
"`~CalledProcessError.returncode` attribute and any output in the :attr:"
"`~CalledProcessError.output` attribute."
msgstr ""

#: ../../library/subprocess.rst:1273
msgid "This is equivalent to::"
msgstr "Isso equivale a::"

#: ../../library/subprocess.rst:1275
msgid "run(..., check=True, stdout=PIPE).stdout"
msgstr ""

#: ../../library/subprocess.rst:1277
msgid ""
"The arguments shown above are merely some common ones. The full function "
"signature is largely the same as that of :func:`run` - most arguments are "
"passed directly through to that interface. One API deviation from :func:"
"`run` behavior exists: passing ``input=None`` will behave the same as "
"``input=b''`` (or ``input=''``, depending on other arguments) rather than "
"using the parent's standard input file handle."
msgstr ""

#: ../../library/subprocess.rst:1284
msgid ""
"By default, this function will return the data as encoded bytes. The actual "
"encoding of the output data may depend on the command being invoked, so the "
"decoding to text will often need to be handled at the application level."
msgstr ""

#: ../../library/subprocess.rst:1288
msgid ""
"This behaviour may be overridden by setting *text*, *encoding*, *errors*, or "
"*universal_newlines* to ``True`` as described in :ref:`frequently-used-"
"arguments` and :func:`run`."
msgstr ""

#: ../../library/subprocess.rst:1292
msgid ""
"To also capture standard error in the result, use ``stderr=subprocess."
"STDOUT``::"
msgstr ""

#: ../../library/subprocess.rst:1295
msgid ""
">>> subprocess.check_output(\n"
"...     \"ls non_existent_file; exit 0\",\n"
"...     stderr=subprocess.STDOUT,\n"
"...     shell=True)\n"
"'ls: non_existent_file: No such file or directory\\n'"
msgstr ""

#: ../../library/subprocess.rst:1306
msgid "Support for the *input* keyword argument was added."
msgstr ""

#: ../../library/subprocess.rst:1309
msgid "*encoding* and *errors* were added.  See :func:`run` for details."
msgstr ""

#: ../../library/subprocess.rst:1327
msgid "Replacing Older Functions with the :mod:`subprocess` Module"
msgstr ""

#: ../../library/subprocess.rst:1329
msgid ""
"In this section, \"a becomes b\" means that b can be used as a replacement "
"for a."
msgstr ""

#: ../../library/subprocess.rst:1333
msgid ""
"All \"a\" functions in this section fail (more or less) silently if the "
"executed program cannot be found; the \"b\" replacements raise :exc:"
"`OSError` instead."
msgstr ""

#: ../../library/subprocess.rst:1337
msgid ""
"In addition, the replacements using :func:`check_output` will fail with a :"
"exc:`CalledProcessError` if the requested operation produces a non-zero "
"return code. The output is still available as the :attr:`~CalledProcessError."
"output` attribute of the raised exception."
msgstr ""

#: ../../library/subprocess.rst:1342
msgid ""
"In the following examples, we assume that the relevant functions have "
"already been imported from the :mod:`subprocess` module."
msgstr ""

#: ../../library/subprocess.rst:1347
msgid "Replacing :program:`/bin/sh` shell command substitution"
msgstr ""

#: ../../library/subprocess.rst:1349
msgid "output=$(mycmd myarg)"
msgstr ""

#: ../../library/subprocess.rst:1353 ../../library/subprocess.rst:1364
#: ../../library/subprocess.rst:1381
msgid "becomes::"
msgstr "torna-se::"

#: ../../library/subprocess.rst:1355
msgid "output = check_output([\"mycmd\", \"myarg\"])"
msgstr ""

#: ../../library/subprocess.rst:1358
msgid "Replacing shell pipeline"
msgstr ""

#: ../../library/subprocess.rst:1360 ../../library/subprocess.rst:1377
msgid "output=$(dmesg | grep hda)"
msgstr ""

#: ../../library/subprocess.rst:1366
msgid ""
"p1 = Popen([\"dmesg\"], stdout=PIPE)\n"
"p2 = Popen([\"grep\", \"hda\"], stdin=p1.stdout, stdout=PIPE)\n"
"p1.stdout.close()  # Allow p1 to receive a SIGPIPE if p2 exits.\n"
"output = p2.communicate()[0]"
msgstr ""

#: ../../library/subprocess.rst:1371
msgid ""
"The ``p1.stdout.close()`` call after starting the p2 is important in order "
"for p1 to receive a SIGPIPE if p2 exits before p1."
msgstr ""

#: ../../library/subprocess.rst:1374
msgid ""
"Alternatively, for trusted input, the shell's own pipeline support may still "
"be used directly:"
msgstr ""

#: ../../library/subprocess.rst:1383
msgid "output = check_output(\"dmesg | grep hda\", shell=True)"
msgstr ""

#: ../../library/subprocess.rst:1387
msgid "Replacing :func:`os.system`"
msgstr "Substituindo :func:`os.system`"

#: ../../library/subprocess.rst:1391
msgid ""
"sts = os.system(\"mycmd\" + \" myarg\")\n"
"# becomes\n"
"retcode = call(\"mycmd\" + \" myarg\", shell=True)"
msgstr ""

#: ../../library/subprocess.rst:1395
msgid "Notes:"
msgstr "Notas:"

#: ../../library/subprocess.rst:1397
msgid "Calling the program through the shell is usually not required."
msgstr ""

#: ../../library/subprocess.rst:1398
msgid ""
"The :func:`call` return value is encoded differently to that of :func:`os."
"system`."
msgstr ""

#: ../../library/subprocess.rst:1401
msgid ""
"The :func:`os.system` function ignores SIGINT and SIGQUIT signals while the "
"command is running, but the caller must do this separately when using the :"
"mod:`subprocess` module."
msgstr ""

#: ../../library/subprocess.rst:1405
msgid "A more realistic example would look like this::"
msgstr "Um exemplo mais realista ficaria assim::"

#: ../../library/subprocess.rst:1407
msgid ""
"try:\n"
"    retcode = call(\"mycmd\" + \" myarg\", shell=True)\n"
"    if retcode < 0:\n"
"        print(\"Child was terminated by signal\", -retcode, file=sys."
"stderr)\n"
"    else:\n"
"        print(\"Child returned\", retcode, file=sys.stderr)\n"
"except OSError as e:\n"
"    print(\"Execution failed:\", e, file=sys.stderr)"
msgstr ""

#: ../../library/subprocess.rst:1418
msgid "Replacing the :func:`os.spawn <os.spawnl>` family"
msgstr ""

#: ../../library/subprocess.rst:1420
msgid "P_NOWAIT example::"
msgstr "Exemplo P_NOWAIT::"

#: ../../library/subprocess.rst:1422
msgid ""
"pid = os.spawnlp(os.P_NOWAIT, \"/bin/mycmd\", \"mycmd\", \"myarg\")\n"
"==>\n"
"pid = Popen([\"/bin/mycmd\", \"myarg\"]).pid"
msgstr ""

#: ../../library/subprocess.rst:1426
msgid "P_WAIT example::"
msgstr "Exemplo P_WAIT::"

#: ../../library/subprocess.rst:1428
msgid ""
"retcode = os.spawnlp(os.P_WAIT, \"/bin/mycmd\", \"mycmd\", \"myarg\")\n"
"==>\n"
"retcode = call([\"/bin/mycmd\", \"myarg\"])"
msgstr ""

#: ../../library/subprocess.rst:1432
msgid "Vector example::"
msgstr "Exemplo de vetor::"

#: ../../library/subprocess.rst:1434
msgid ""
"os.spawnvp(os.P_NOWAIT, path, args)\n"
"==>\n"
"Popen([path] + args[1:])"
msgstr ""

#: ../../library/subprocess.rst:1438
msgid "Environment example::"
msgstr "Exemplo de ambiente::"

#: ../../library/subprocess.rst:1440
msgid ""
"os.spawnlpe(os.P_NOWAIT, \"/bin/mycmd\", \"mycmd\", \"myarg\", env)\n"
"==>\n"
"Popen([\"/bin/mycmd\", \"myarg\"], env={\"PATH\": \"/usr/bin\"})"
msgstr ""

#: ../../library/subprocess.rst:1447
msgid "Replacing :func:`os.popen`"
msgstr ""

#: ../../library/subprocess.rst:1449
msgid "Return code handling translates as follows::"
msgstr ""

#: ../../library/subprocess.rst:1451
msgid ""
"pipe = os.popen(cmd, 'w')\n"
"...\n"
"rc = pipe.close()\n"
"if rc is not None and rc >> 8:\n"
"    print(\"There were some errors\")\n"
"==>\n"
"process = Popen(cmd, stdin=PIPE)\n"
"...\n"
"process.stdin.close()\n"
"if process.wait() != 0:\n"
"    print(\"There were some errors\")"
msgstr ""

#: ../../library/subprocess.rst:1465
msgid "Legacy Shell Invocation Functions"
msgstr ""

#: ../../library/subprocess.rst:1467
msgid ""
"This module also provides the following legacy functions from the 2.x "
"``commands`` module. These operations implicitly invoke the system shell and "
"none of the guarantees described above regarding security and exception "
"handling consistency are valid for these functions."
msgstr ""

#: ../../library/subprocess.rst:1474
msgid "Return ``(exitcode, output)`` of executing *cmd* in a shell."
msgstr ""

#: ../../library/subprocess.rst:1476
msgid ""
"Execute the string *cmd* in a shell with :meth:`Popen.check_output` and "
"return a 2-tuple ``(exitcode, output)``. *encoding* and *errors* are used to "
"decode output; see the notes on :ref:`frequently-used-arguments` for more "
"details."
msgstr ""

#: ../../library/subprocess.rst:1481
msgid ""
"A trailing newline is stripped from the output. The exit code for the "
"command can be interpreted as the return code of subprocess.  Example::"
msgstr ""

#: ../../library/subprocess.rst:1485
msgid ""
">>> subprocess.getstatusoutput('ls /bin/ls')\n"
"(0, '/bin/ls')\n"
">>> subprocess.getstatusoutput('cat /bin/junk')\n"
"(1, 'cat: /bin/junk: No such file or directory')\n"
">>> subprocess.getstatusoutput('/bin/junk')\n"
"(127, 'sh: /bin/junk: not found')\n"
">>> subprocess.getstatusoutput('/bin/kill $$')\n"
"(-15, '')"
msgstr ""

#: ../../library/subprocess.rst:1496
msgid "Windows support was added."
msgstr "Suporte ao Windows foi adicionado."

#: ../../library/subprocess.rst:1499
msgid ""
"The function now returns (exitcode, output) instead of (status, output) as "
"it did in Python 3.3.3 and earlier.  exitcode has the same value as :attr:"
"`~Popen.returncode`."
msgstr ""

#: ../../library/subprocess.rst:1508
msgid "Return output (stdout and stderr) of executing *cmd* in a shell."
msgstr ""

#: ../../library/subprocess.rst:1510
msgid ""
"Like :func:`getstatusoutput`, except the exit code is ignored and the return "
"value is a string containing the command's output.  Example::"
msgstr ""

#: ../../library/subprocess.rst:1513
msgid ""
">>> subprocess.getoutput('ls /bin/ls')\n"
"'/bin/ls'"
msgstr ""

#: ../../library/subprocess.rst:1518
msgid "Windows support added"
msgstr "Suporte para Windows adicionado."

#: ../../library/subprocess.rst:1526
msgid "Notes"
msgstr "Notas"

#: ../../library/subprocess.rst:1531
msgid "Timeout Behavior"
msgstr ""

#: ../../library/subprocess.rst:1533
msgid ""
"When using the ``timeout`` parameter in functions like :func:`run`, :meth:"
"`Popen.wait`, or :meth:`Popen.communicate`, users should be aware of the "
"following behaviors:"
msgstr ""

#: ../../library/subprocess.rst:1537
msgid ""
"**Process Creation Delay**: The initial process creation itself cannot be "
"interrupted on many platform APIs. This means that even when specifying a "
"timeout, you are not guaranteed to see a timeout exception until at least "
"after however long process creation takes."
msgstr ""

#: ../../library/subprocess.rst:1542
msgid ""
"**Extremely Small Timeout Values**: Setting very small timeout values (such "
"as a few milliseconds) may result in almost immediate :exc:`TimeoutExpired` "
"exceptions because process creation and system scheduling inherently require "
"time."
msgstr ""

#: ../../library/subprocess.rst:1549
msgid "Converting an argument sequence to a string on Windows"
msgstr "Converter uma sequência de argumentos em uma string no Windows"

#: ../../library/subprocess.rst:1551
msgid ""
"On Windows, an *args* sequence is converted to a string that can be parsed "
"using the following rules (which correspond to the rules used by the MS C "
"runtime):"
msgstr ""

#: ../../library/subprocess.rst:1555
msgid ""
"Arguments are delimited by white space, which is either a space or a tab."
msgstr ""

#: ../../library/subprocess.rst:1558
msgid ""
"A string surrounded by double quotation marks is interpreted as a single "
"argument, regardless of white space contained within.  A quoted string can "
"be embedded in an argument."
msgstr ""

#: ../../library/subprocess.rst:1563
msgid ""
"A double quotation mark preceded by a backslash is interpreted as a literal "
"double quotation mark."
msgstr ""

#: ../../library/subprocess.rst:1566
msgid ""
"Backslashes are interpreted literally, unless they immediately precede a "
"double quotation mark."
msgstr ""

#: ../../library/subprocess.rst:1569
msgid ""
"If backslashes immediately precede a double quotation mark, every pair of "
"backslashes is interpreted as a literal backslash.  If the number of "
"backslashes is odd, the last backslash escapes the next double quotation "
"mark as described in rule 3."
msgstr ""

#: ../../library/subprocess.rst:1578
msgid ":mod:`shlex`"
msgstr ":mod:`shlex`"

#: ../../library/subprocess.rst:1579
msgid "Module which provides function to parse and escape command lines."
msgstr ""

#: ../../library/subprocess.rst:1585
msgid "Disable use of ``posix_spawn()``"
msgstr ""

#: ../../library/subprocess.rst:1587
msgid ""
"On Linux, :mod:`subprocess` defaults to using the ``vfork()`` system call "
"internally when it is safe to do so rather than ``fork()``. This greatly "
"improves performance."
msgstr ""

#: ../../library/subprocess.rst:1593
msgid "subprocess._USE_POSIX_SPAWN = False  # See CPython issue gh-NNNNNN."
msgstr ""

#: ../../library/subprocess.rst:1595
msgid ""
"It is safe to set this to false on any Python version. It will have no "
"effect on older or newer versions where unsupported. Do not assume the "
"attribute is available to read. Despite the name, a true value does not "
"indicate the corresponding function will be used, only that it may be."
msgstr ""

#: ../../library/subprocess.rst:1600
msgid ""
"Please file issues any time you have to use these private knobs with a way "
"to reproduce the issue you were seeing. Link to that issue from a comment in "
"your code."
msgstr ""

#: ../../library/subprocess.rst:1604
msgid "``_USE_POSIX_SPAWN``"
msgstr ""

#: ../../library/subprocess.rst:296
msgid "universal newlines"
msgstr "novas linhas universais"

#: ../../library/subprocess.rst:296
msgid "subprocess module"
msgstr ""
