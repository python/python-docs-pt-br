# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-07 14:17+0000\n"
"PO-Revision-Date: 2025-09-16 00:01+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/string.templatelib.rst:2
msgid ":mod:`!string.templatelib` --- Support for template string literals"
msgstr ""
":mod:`!string.templatelib` --- Suporte para literais de string template"

#: ../../library/string.templatelib.rst:7
msgid "**Source code:** :source:`Lib/string/templatelib.py`"
msgstr "**Código-fonte:** :source:`Lib/string/templatelib.py`"

#: ../../library/string.templatelib.rst:13
msgid ":ref:`Format strings <f-strings>`"
msgstr ":ref:`Strings de formatação <f-strings>`"

#: ../../library/string.templatelib.rst:14
msgid ":ref:`Template string literal (t-string) syntax <t-strings>`"
msgstr ":ref:`Sintaxe de literal de string template (t-string) <t-strings>`"

#: ../../library/string.templatelib.rst:15
msgid ":pep:`750`"
msgstr ":pep:`750`"

#: ../../library/string.templatelib.rst:20
msgid "Template strings"
msgstr "Strings template"

#: ../../library/string.templatelib.rst:24
msgid ""
"Template strings are a mechanism for custom string processing. They have the "
"full flexibility of Python's :ref:`f-strings`, but return a :class:"
"`Template` instance that gives access to the static and interpolated (in "
"curly brackets) parts of a string *before* they are combined."
msgstr ""
"Strings template são um mecanismo para processamento personalizado de "
"strings. Elas têm toda a flexibilidade das :ref:`f-strings` do Python, mas "
"retornam uma instância :class:`Template` que dá acesso às partes estáticas e "
"interpoladas (entre chaves) de uma string *antes* de serem combinadas."

#: ../../library/string.templatelib.rst:30
msgid ""
"To write a t-string, use a ``'t'`` prefix instead of an ``'f'``, like so:"
msgstr ""
"Para escrever uma t-string, use um prefixo ``'t'`` em vez de ``'f'``, assim:"

#: ../../library/string.templatelib.rst:32
msgid ""
">>> pi = 3.14\n"
">>> t't-strings are new in Python {pi!s}!'\n"
"Template(\n"
"   strings=('t-strings are new in Python ', '!'),\n"
"   interpolations=(Interpolation(3.14, 'pi', 's', ''),)\n"
")"
msgstr ""
">>> pi = 3.14\n"
">>> t't-strings são novas no Python {pi!s}!'\n"
"Template(\n"
"   strings=('t-strings são novas no Python ', '!'),\n"
"   interpolations=(Interpolation(3.14, 'pi', 's', ''),)\n"
")"

#: ../../library/string.templatelib.rst:42
msgid "Types"
msgstr "Tipos"

#: ../../library/string.templatelib.rst:46
msgid ""
"The :class:`!Template` class describes the contents of a template string. It "
"is immutable, meaning that attributes of a template cannot be reassigned."
msgstr ""
"A classe :class:`!Template` descreve o conteúdo de uma string template. Ela "
"é imutável, o que significa que os atributos de um template não podem ser "
"reatribuídos."

#: ../../library/string.templatelib.rst:49
msgid ""
"The most common way to create a :class:`!Template` instance is to use the :"
"ref:`template string literal syntax <t-strings>`. This syntax is identical "
"to that of :ref:`f-strings <f-strings>`, except that it uses a ``t`` prefix "
"in place of an ``f``:"
msgstr ""
"A maneira mais comum de criar uma instância de :class:`!Template` é usar a :"
"ref:`sintaxe de literal de string template <t-strings>`. Essa sintaxe é "
"idêntica à de :ref:`f-strings <f-strings>`, exceto pelo fato de usar um "
"prefixo ``t`` no lugar de um ``f``:"

#: ../../library/string.templatelib.rst:59
msgid ""
"Templates are stored as sequences of literal :attr:`~Template.strings` and "
"dynamic :attr:`~Template.interpolations`. A :attr:`~Template.values` "
"attribute holds the values of the interpolations:"
msgstr ""
"Os templates são armazenados como sequências de literais :attr:`~Template."
"strings` e dinâmicos :attr:`~Template.interpolations`. Um atributo :attr:"
"`~Template.values` contém os valores das interpolações:"

#: ../../library/string.templatelib.rst:72
msgid ""
"The :attr:`!strings` tuple has one more element than :attr:`!interpolations` "
"and :attr:`!values`; the interpolations “belong” between the strings. This "
"may be easier to understand when tuples are aligned"
msgstr ""
"A tupla :attr:`!strings` tem um elemento a mais que :attr:`!interpolations` "
"e :attr:`!values`; as interpolações \"pertencem\" às strings. Isso pode ser "
"mais fácil de entender quando as tuplas estão alinhadas"

#: ../../library/string.templatelib.rst:76
msgid ""
"template.strings:  ('Ah! We do have ',              '.')\n"
"template.values:   (                   'Camembert',    )"
msgstr ""
"template.strings:  ('Ah! We do have ',              '.')\n"
"template.values:   (                   'Camembert',    )"

#: ../../library/string.templatelib.rst:82
#: ../../library/string.templatelib.rst:249
msgid "Attributes"
msgstr "Atributos"

#: ../../library/string.templatelib.rst:86
msgid "A :class:`tuple` of the static strings in the template."
msgstr "Uma :class:`tuple` das strings estáticas no template."

#: ../../library/string.templatelib.rst:93
msgid "Empty strings *are* included in the tuple:"
msgstr "Strings vazias *estão* incluídas na tupla:"

#: ../../library/string.templatelib.rst:101
msgid ""
"The ``strings`` tuple is never empty, and always contains one more string "
"than the ``interpolations`` and ``values`` tuples:"
msgstr ""
"A tupla ``strings`` nunca está vazia e sempre contém uma string a mais que "
"as tuplas ``interpolations`` e ``values``:"

#: ../../library/string.templatelib.rst:116
msgid "A :class:`tuple` of the interpolations in the template."
msgstr "Uma :class:`tuple` das interpolações no template."

#: ../../library/string.templatelib.rst:123
msgid ""
"The ``interpolations`` tuple may be empty and always contains one fewer "
"values than the ``strings`` tuple:"
msgstr ""
"A tupla ``interpolações`` pode estar vazia e sempre contém um valor a menos "
"que a tupla ``strings``:"

#: ../../library/string.templatelib.rst:132
msgid "A tuple of all interpolated values in the template."
msgstr "Uma tupla de todos os valores interpolados no template."

#: ../../library/string.templatelib.rst:139
msgid ""
"The ``values`` tuple always has the same length as the ``interpolations`` "
"tuple. It is always equivalent to ``tuple(i.value for i in template."
"interpolations)``."
msgstr ""
"A tupla ``values`` sempre tem o mesmo comprimento que a tupla "
"``interpolations``. Isso sempre equivale a ``tuple(i.value for i in template."
"interpolations)``."

#: ../../library/string.templatelib.rst:144
#: ../../library/string.templatelib.rst:317
msgid "Methods"
msgstr "Métodos"

#: ../../library/string.templatelib.rst:147
msgid ""
"While literal syntax is the most common way to create a :class:`!Template`, "
"it is also possible to create them directly using the constructor:"
msgstr ""
"Embora a sintaxe de literal seja a maneira mais comum de criar um :class:`!"
"Template`, também é possível criá-las diretamente usando o construtor:"

#: ../../library/string.templatelib.rst:158
msgid ""
"If multiple strings are passed consecutively, they will be concatenated into "
"a single value in the :attr:`~Template.strings` attribute. For example, the "
"following code creates a :class:`Template` with a single final string:"
msgstr ""
"Se várias strings forem passadas consecutivamente, elas serão concatenadas "
"em um único valor no atributo :attr:`~Template.strings`. Por exemplo, o "
"código a seguir cria uma :class:`Template` com uma única string final:"

#: ../../library/string.templatelib.rst:167
msgid ""
"If multiple interpolations are passed consecutively, they will be treated as "
"separate interpolations and an empty string will be inserted between them. "
"For example, the following code creates a template with empty placeholders "
"in the :attr:`~Template.strings` attribute:"
msgstr ""
"Se várias interpolações forem passadas consecutivamente, elas serão tratadas "
"como interpolações separadas e uma string vazia será inserida entre elas. "
"Por exemplo, o código a seguir cria um modelo com espaços reservados vazios "
"no atributo :attr:`~Template.strings`:"

#: ../../library/string.templatelib.rst:182
msgid ""
"Iterate over the template, yielding each non-empty string and :class:"
"`Interpolation` in the correct order:"
msgstr ""
"Itera sobre o template, produzindo cada string não-vazia e :class:"
"`Interpolation` em ordem correta."

#: ../../library/string.templatelib.rst:191
msgid "Empty strings are **not** included in the iteration:"
msgstr "Strings vazias *não* são incluídas na iteração:"

#: ../../library/string.templatelib.rst:204
msgid ""
"Concatenate this template with another, returning a new :class:`!Template` "
"instance:"
msgstr ""
"Concatena este template com outro, retornando uma nova instância :class:`!"
"Template`:"

#: ../../library/string.templatelib.rst:211
msgid ""
"Concatenating a :class:`!Template` and a ``str`` is **not** supported. This "
"is because it is unclear whether the string should be treated as a static "
"string or an interpolation. If you want to concatenate a :class:`!Template` "
"with a string, you should either wrap the string directly in a :class:`!"
"Template` (to treat it as a static string) or use an :class:`!Interpolation` "
"(to treat it as dynamic):"
msgstr ""
"A concatenação de uma :class:`!Template` e uma ``str`` **não** é suportada. "
"Isso ocorre porque não está claro se a string deve ser tratada como uma "
"string estática ou uma interpolação. Se você quiser concatenar uma :class:`!"
"Template` com uma string, você deve encapsular a string diretamente em uma :"
"class:`!Template` (para tratá-la como uma string estática) ou usar uma :"
"class:`!Interpolation` (para tratá-la como dinâmica):"

#: ../../library/string.templatelib.rst:232
msgid ""
"The :class:`!Interpolation` type represents an expression inside a template "
"string. It is immutable, meaning that attributes of an interpolation cannot "
"be reassigned."
msgstr ""
"O tipo :class:`!Interpolation` representa uma expressão dentro de uma string "
"template. É imutável, o que significa que os atributos de uma interpolação "
"não podem ser reatribuídos."

#: ../../library/string.templatelib.rst:235
msgid ""
"Interpolations support pattern matching, allowing you to match against their "
"attributes with the :ref:`match statement <match>`:"
msgstr ""
"As interpolações oferecem suporte à correspondência de padrões, permitindo "
"que você compare seus atributos com a :ref:`instrução match <match>`:"

#: ../../library/string.templatelib.rst:253
msgid "The evaluated value of the interpolation."
msgstr "O valor avaliado da interpolação."

#: ../../library/string.templatelib.rst:261
msgid ""
"For interpolations created by t-string literals, :attr:`!expression` is the "
"expression text found inside the curly brackets (``{`` & ``}``), including "
"any whitespace, excluding the curly brackets themselves, and ending before "
"the first ``!``, ``:``, or ``=`` if any is present. For manually created "
"interpolations, :attr:`!expression` is the arbitrary string provided when "
"constructing the interpolation instance."
msgstr ""
"Para interpolações criadas por literais de t-string, :attr:`!expression` é o "
"texto da expressão encontrado dentro das chaves (``{`` e ``}``), incluindo "
"quaisquer espaços em branco, excluindo as próprias chaves e terminando antes "
"do primeiro ``!``, ``:`` ou ``=``, se houver algum. Para interpolações "
"criadas manualmente, :attr:`!expression` é a string arbitrária fornecida ao "
"construir a instância de interpolação."

#: ../../library/string.templatelib.rst:268
msgid ""
"We recommend using valid Python expressions or the empty string for the "
"``expression`` field of manually created :class:`!Interpolation` instances, "
"although this is not enforced at runtime."
msgstr ""
"Recomendamos usar expressões Python válidas ou a string vazia para o campo "
"``expression`` de instâncias :class:`!Interpolation` criadas manualmente, "
"embora isso não seja imposto em tempo de execução."

#: ../../library/string.templatelib.rst:278
msgid "The conversion to apply to the value, or ``None``."
msgstr "A conversão a ser aplicada ao valor, ou ``None``."

#: ../../library/string.templatelib.rst:280
msgid ""
"The :attr:`!conversion` is the optional conversion to apply to the value:"
msgstr "O :attr:`!conversion` é a conversão opcional a ser aplicada ao valor:"

#: ../../library/string.templatelib.rst:288
msgid ""
"Unlike f-strings, where conversions are applied automatically, the expected "
"behavior with t-strings is that code that *processes* the :class:`!Template` "
"will decide how to interpret and whether to apply the :attr:`!conversion`. "
"For convenience, the :func:`convert` function can be used to mimic f-string "
"conversion semantics."
msgstr ""
"Ao contrário das f-strings, onde as conversões são aplicadas "
"automaticamente, o comportamento esperado com t-strings é que o código que "
"*processa* o :class:`!Template` decidirá como interpretar e se aplicará o :"
"attr:`!conversion`. Por conveniência, a função :func:`convert` pode ser "
"usada para imitar a semântica de conversão de f-strings."

#: ../../library/string.templatelib.rst:298
msgid "The format specification to apply to the value."
msgstr "A especificação de formato a ser aplicada ao valor."

#: ../../library/string.templatelib.rst:300
msgid ""
"The :attr:`!format_spec` is an optional, arbitrary string used as the format "
"specification to present the value:"
msgstr ""
"O :attr:`!format_spec` é uma string arbitrária opcional usada como "
"especificação de formato para apresentar o valor:"

#: ../../library/string.templatelib.rst:308
msgid ""
"Unlike f-strings, where format specifications are applied automatically via "
"the :func:`format` protocol, the expected behavior with t-strings is that "
"code that *processes* the interpolation will decide how to interpret and "
"whether to apply the format specification. As a result, :attr:`!format_spec` "
"values in interpolations can be arbitrary strings, including those that do "
"not conform to the :func:`format` protocol."
msgstr ""
"Ao contrário das f-strings, onde as especificações de formato são aplicadas "
"automaticamente por meio do protocolo :func:`format`, o comportamento "
"esperado com t-strings é que o código que *processa* a interpolação decida "
"como interpretar e se a especificação de formato deve ser aplicada. Como "
"resultado, os valores :attr:`!format_spec` em interpolações podem ser "
"strings arbitrárias, incluindo aquelas que não estão em conformidade com o "
"protocolo de :func:`format`."

#: ../../library/string.templatelib.rst:323
msgid "Create a new :class:`!Interpolation` object from component parts."
msgstr ""
"Cria um novo objeto :class:`!Interpolation` a partir de partes do componente."

#: ../../library/string.templatelib.rst:0
msgid "Parameters"
msgstr "Parâmetros"

#: ../../library/string.templatelib.rst:325
msgid "The evaluated, in-scope result of the interpolation."
msgstr "O resultado avaliado e dentro do escopo da interpolação."

#: ../../library/string.templatelib.rst:326
msgid "The text of a valid Python expression, or an empty string."
msgstr "O texto de uma expressão Python válida ou uma string vazia."

#: ../../library/string.templatelib.rst:328
msgid ""
"The :ref:`conversion <formatstrings>` to be used, one of ``None``, ``'a'``, "
"``'r'``, or ``'s'``."
msgstr ""
"A :ref:`conversão <formatstrings>` a ser usada, uma entre ``None``, ``'a'``, "
"``'r'`` ou ``'s'``."

#: ../../library/string.templatelib.rst:330
msgid ""
"An optional, arbitrary string used as the :ref:`format specification "
"<formatspec>` to present the value."
msgstr ""
"Uma string arbitrária opcional usada como :ref:`especificação de formato "
"<formatspec>` para apresentar o valor."

#: ../../library/string.templatelib.rst:335
msgid "Helper functions"
msgstr "Funções auxiliares"

#: ../../library/string.templatelib.rst:339
msgid ""
"Applies formatted string literal :ref:`conversion <formatstrings-"
"conversion>` semantics to the given object *obj*. This is frequently useful "
"for custom template string processing logic."
msgstr ""
"Aplica a semântica de :ref:`conversão <formatstrings-conversion>` de literal "
"de string formatada ao objeto *obj* fornecido. Isso é frequentemente útil "
"para lógica de processamento de string template personalizada."

#: ../../library/string.templatelib.rst:343
msgid "Three conversion flags are currently supported:"
msgstr "Atualmente, há três sinalizadores de conversão suportados:"

#: ../../library/string.templatelib.rst:345
msgid "``'s'`` which calls :func:`str` on the value (like ``!s``),"
msgstr "``'s'`` que chama :func:`str` no valor (como ``!s``),"

#: ../../library/string.templatelib.rst:346
msgid "``'r'`` which calls :func:`repr` (like ``!r``), and"
msgstr "``'r'`` que chama :func:`repr` (como ``!r``) e"

#: ../../library/string.templatelib.rst:347
msgid "``'a'`` which calls :func:`ascii` (like ``!a``)."
msgstr "``'a'`` que chama :func:`ascii` (como ``!a``)."

#: ../../library/string.templatelib.rst:349
msgid "If the conversion flag is ``None``, *obj* is returned unchanged."
msgstr ""
"Se o sinalizador de conversão é ``None``, *obj* é retornado sem alterações."
