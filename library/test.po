# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Marco Rougeth <marco@rougeth.com>, 2021
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2021
# i17obot <i17obot@rougeth.com>, 2021
# João Porfirio, 2022
# Altair Ribeiro, 2022
# Italo Penaforte <italo.penaforte@gmail.com>, 2023
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-08 02:53-0300\n"
"PO-Revision-Date: 2021-06-28 01:14+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/test.rst:2
msgid ":mod:`!test` --- Regression tests package for Python"
msgstr ":mod:`!test` --- Pacote de Testes de Regressão do Python"

#: ../../library/test.rst:10
msgid ""
"The :mod:`test` package is meant for internal use by Python only. It is "
"documented for the benefit of the core developers of Python. Any use of this "
"package outside of Python's standard library is discouraged as code "
"mentioned here can change or be removed without notice between releases of "
"Python."
msgstr ""
"O pacote :mod:`test` é apenas para uso interno do Python. O mesmo está sendo "
"documentado para o benefício dos principais desenvolvedores do Python. "
"Qualquer uso deste pacote fora da biblioteca padrão do Python é "
"desencorajado, pois, o código mencionado aqui pode ser alterado ou removido "
"sem aviso prévio entre as versões do Python."

#: ../../library/test.rst:18
msgid ""
"The :mod:`test` package contains all regression tests for Python as well as "
"the modules :mod:`test.support` and :mod:`test.regrtest`. :mod:`test."
"support` is used to enhance your tests while :mod:`test.regrtest` drives the "
"testing suite."
msgstr ""
"O pacote :mod:`test` contém todos os testes de regressão do Python, bem como "
"os módulos :mod:`test.support` e :mod:`test.regrtest`. :mod:`test.support` é "
"utilizado para aprimorar seus testes enquanto o :mod:`test.regrtest` "
"direciona a suite de testes."

#: ../../library/test.rst:23
msgid ""
"Each module in the :mod:`test` package whose name starts with ``test_`` is a "
"testing suite for a specific module or feature. All new tests should be "
"written using the :mod:`unittest` or :mod:`doctest` module.  Some older "
"tests are written using a \"traditional\" testing style that compares output "
"printed to ``sys.stdout``; this style of test is considered deprecated."
msgstr ""
"Cada módulo no pacote :mod:`test` cujo nome começa com ``test_`` é um "
"conjunto de testes para um módulo ou recurso específico. Todos os novos "
"testes devem ser escritos usando o módulo :mod:`unittest` ou :mod:`doctest`. "
"Alguns testes mais antigos são escritos usando um estilo de teste "
"\"tradicional\" que compara a saída impressa a ``sys.stdout``. Este estilo "
"de teste foi considerado descontinuado."

#: ../../library/test.rst:32
msgid "Module :mod:`unittest`"
msgstr "Módulo :mod:`unittest`"

#: ../../library/test.rst:33
msgid "Writing PyUnit regression tests."
msgstr "Escrevendo testes de regressão PyUnit."

#: ../../library/test.rst:35
msgid "Module :mod:`doctest`"
msgstr "Módulo :mod:`doctest`"

#: ../../library/test.rst:36
msgid "Tests embedded in documentation strings."
msgstr "Testes embutidos em Strings da documentação."

#: ../../library/test.rst:42
msgid "Writing Unit Tests for the :mod:`test` package"
msgstr "Escrever testes unitários para o pacote :mod:`test`"

#: ../../library/test.rst:44
msgid ""
"It is preferred that tests that use the :mod:`unittest` module follow a few "
"guidelines. One is to name the test module by starting it with ``test_`` and "
"end it with the name of the module being tested. The test methods in the "
"test module should start with ``test_`` and end with a description of what "
"the method is testing. This is needed so that the methods are recognized by "
"the test driver as test methods. Also, no documentation string for the "
"method should be included. A comment (such as ``# Tests function returns "
"only True or False``) should be used to provide documentation for test "
"methods. This is done because documentation strings get printed out if they "
"exist and thus what test is being run is not stated."
msgstr ""
"É preferível que os testes que usam o módulo :mod:`unittest` sigam algumas "
"diretrizes. Uma é nomear o módulo de teste iniciando-o com ``test_`` e "
"termine com o nome do módulo que está sendo testado. Os métodos de teste no "
"módulo de teste deve começar com ``test_`` e terminar com uma descrição do "
"que o método está testando. Isso é necessário para que os métodos sejam "
"reconhecidos pelo driver de teste como métodos de teste. Além disso, na "
"string de documentação para o método deve ser incluído. Um comentário (como "
"os ``# Tests function returns only True or False``) deve ser usado para "
"fornecer documentação para testar métodos. Isso é feito porque as strings de "
"documentação são impressas se existem e, portanto, qual teste está sendo "
"executado não é indicado."

#: ../../library/test.rst:55
msgid "A basic boilerplate is often used::"
msgstr "Um boilerplate básico é muitas vezes usado::"

#: ../../library/test.rst:57
msgid ""
"import unittest\n"
"from test import support\n"
"\n"
"class MyTestCase1(unittest.TestCase):\n"
"\n"
"    # Only use setUp() and tearDown() if necessary\n"
"\n"
"    def setUp(self):\n"
"        ... code to execute in preparation for tests ...\n"
"\n"
"    def tearDown(self):\n"
"        ... code to execute to clean up after tests ...\n"
"\n"
"    def test_feature_one(self):\n"
"        # Test feature one.\n"
"        ... testing code ...\n"
"\n"
"    def test_feature_two(self):\n"
"        # Test feature two.\n"
"        ... testing code ...\n"
"\n"
"    ... more test methods ...\n"
"\n"
"class MyTestCase2(unittest.TestCase):\n"
"    ... same structure as MyTestCase1 ...\n"
"\n"
"... more test classes ...\n"
"\n"
"if __name__ == '__main__':\n"
"    unittest.main()"
msgstr ""
"import unittest\n"
"from test import support\n"
"\n"
"class MyTestCase1(unittest.TestCase):\n"
"\n"
"    # Só use setUp() e tearDown() se necessário\n"
"\n"
"    def setUp(self):\n"
"        ... código para executar na preparação de testes ...\n"
"\n"
"    def tearDown(self):\n"
"        ... código para executar a limpeza após os testes ...\n"
"\n"
"    def test_feature_one(self):\n"
"        # Testa o recurso um.\n"
"        ... código de teste ...\n"
"\n"
"    def test_feature_two(self):\n"
"        # Testa o recurso dois.\n"
"        ... código de teste ...\n"
"\n"
"    ... mais métodos de teste ...\n"
"\n"
"class MyTestCase2(unittest.TestCase):\n"
"    ... mesma estrutura que MyTestCase1 ...\n"
"\n"
"... mais classes de teste ...\n"
"\n"
"if __name__ == '__main__':\n"
"    unittest.main()"

#: ../../library/test.rst:88
msgid ""
"This code pattern allows the testing suite to be run by :mod:`test."
"regrtest`, on its own as a script that supports the :mod:`unittest` CLI, or "
"via the ``python -m unittest`` CLI."
msgstr ""
"Este padrão de código permite que o conjunto de testes seja executado pelo :"
"mod:`test.regrtest`, por conta própria, como um script que suporte o :mod:"
"`unittest` CLI, ou através do ``python -m unittest`` CLI."

#: ../../library/test.rst:92
msgid ""
"The goal for regression testing is to try to break code. This leads to a few "
"guidelines to be followed:"
msgstr ""
"O objetivo do teste de regressão é tentar quebrar o código. Isso leva a "
"algumas diretrizes que devemos seguir:"

#: ../../library/test.rst:95
msgid ""
"The testing suite should exercise all classes, functions, and constants. "
"This includes not just the external API that is to be presented to the "
"outside world but also \"private\" code."
msgstr ""
"O conjunto de testes deve exercitar todas as classes, funções e constantes. "
"Isso inclui não apenas a API externa que deve ser apresentada ao mundo "
"exterior, mas também o código \"privado\"."

#: ../../library/test.rst:99
msgid ""
"Whitebox testing (examining the code being tested when the tests are being "
"written) is preferred. Blackbox testing (testing only the published user "
"interface) is not complete enough to make sure all boundary and edge cases "
"are tested."
msgstr ""
"Os testes de Whitebox (que examinam o código que está sendo testado quando "
"os testes estão sendo gravados) são preferidos. O teste Blackbox (que testa "
"apenas a interface do público de usuário) não é completo o suficiente para "
"garantir que todos os casos de limite e extremos sejam testados."

#: ../../library/test.rst:104
msgid ""
"Make sure all possible values are tested including invalid ones. This makes "
"sure that not only all valid values are acceptable but also that improper "
"values are handled correctly."
msgstr ""
"Certifique-se de que todos os valores possíveis sejam testados, incluindo os "
"inválidos. Isso garante que não apenas todos os valores válidos são aceitos, "
"mas também, que os valores impróprios são tratados corretamente."

#: ../../library/test.rst:108
msgid ""
"Exhaust as many code paths as possible. Test where branching occurs and thus "
"tailor input to make sure as many different paths through the code are taken."
msgstr ""
"Esgote o maior número possível de caminhos de código. Teste onde ocorre a "
"ramificação e, assim, personalize a entrada para garantir que tantos "
"caminhos diferentes pelo código sejam tomados."

#: ../../library/test.rst:111
msgid ""
"Add an explicit test for any bugs discovered for the tested code. This will "
"make sure that the error does not crop up again if the code is changed in "
"the future."
msgstr ""
"Adicione um teste explícito para quaisquer bugs descobertos ao código "
"testado. Isso garantirá que o erro não apareça novamente se o código for "
"alterado no futuro."

#: ../../library/test.rst:115
msgid ""
"Make sure to clean up after your tests (such as close and remove all "
"temporary files)."
msgstr ""
"Certifique-se de limpar após seus testes (como fechar e remover todos os "
"arquivos temporários)."

#: ../../library/test.rst:118
msgid ""
"If a test is dependent on a specific condition of the operating system then "
"verify the condition already exists before attempting the test."
msgstr ""
"Se um teste depende de uma condição específica do sistema operacional, então "
"verifica se a condição já existe antes de tentar o teste."

#: ../../library/test.rst:121
msgid ""
"Import as few modules as possible and do it as soon as possible. This "
"minimizes external dependencies of tests and also minimizes possible "
"anomalous behavior from side-effects of importing a module."
msgstr ""
"Importa o menor número de módulos possível e faça isso o mais rápido "
"possível. Isso minimiza dependências externas de testes, e também minimiza "
"possíveis comportamento anômalo dos efeitos colaterais da importação de um "
"módulo."

#: ../../library/test.rst:125
msgid ""
"Try to maximize code reuse. On occasion, tests will vary by something as "
"small as what type of input is used. Minimize code duplication by "
"subclassing a basic test class with a class that specifies the input::"
msgstr ""
"Tente maximizar a reutilização de código. Ocasionalmente, os testes variam "
"em algo tão pequeno quanto o tipo de entrada é usado. Minimize a duplicação "
"de código criando uma subclasse básica de testes com uma classe que "
"especifica o input::"

#: ../../library/test.rst:129
msgid ""
"class TestFuncAcceptsSequencesMixin:\n"
"\n"
"    func = mySuperWhammyFunction\n"
"\n"
"    def test_func(self):\n"
"        self.func(self.arg)\n"
"\n"
"class AcceptLists(TestFuncAcceptsSequencesMixin, unittest.TestCase):\n"
"    arg = [1, 2, 3]\n"
"\n"
"class AcceptStrings(TestFuncAcceptsSequencesMixin, unittest.TestCase):\n"
"    arg = 'abc'\n"
"\n"
"class AcceptTuples(TestFuncAcceptsSequencesMixin, unittest.TestCase):\n"
"    arg = (1, 2, 3)"
msgstr ""
"class TestFuncAcceptsSequencesMixin:\n"
"\n"
"    func = mySuperWhammyFunction\n"
"\n"
"    def test_func(self):\n"
"        self.func(self.arg)\n"
"\n"
"class AcceptLists(TestFuncAcceptsSequencesMixin, unittest.TestCase):\n"
"    arg = [1, 2, 3]\n"
"\n"
"class AcceptStrings(TestFuncAcceptsSequencesMixin, unittest.TestCase):\n"
"    arg = 'abc'\n"
"\n"
"class AcceptTuples(TestFuncAcceptsSequencesMixin, unittest.TestCase):\n"
"    arg = (1, 2, 3)"

#: ../../library/test.rst:145
msgid ""
"When using this pattern, remember that all classes that inherit from :class:"
"`unittest.TestCase` are run as tests.  The :class:`!"
"TestFuncAcceptsSequencesMixin` class in the example above does not have any "
"data and so can't be run by itself, thus it does not inherit from :class:"
"`unittest.TestCase`."
msgstr ""
"Ao usar este padrão, lembre-se que todas as classes que herdam de :class:"
"`unittest.TestCase` são executadas como testes. A classe :class:`!"
"TestFuncAcceptsSequencesMixin` no exemplo acima não tem nenhum dado e, "
"portanto, não pode ser executada sozinha, portanto, ela não herda de :class:"
"`unittest.TestCase`."

#: ../../library/test.rst:153
msgid "Test Driven Development"
msgstr "Test Driven Development"

#: ../../library/test.rst:154
msgid "A book by Kent Beck on writing tests before code."
msgstr "Um livro de Kent Beck sobre escrita de testes antes do código."

#: ../../library/test.rst:160
msgid "Running tests using the command-line interface"
msgstr "Executando testes usando a interface de linha de comando"

#: ../../library/test.rst:165
msgid ""
"The :mod:`test` package can be run as a script to drive Python's regression "
"test suite, thanks to the :option:`-m` option: :program:`python -m test`. "
"Under the hood, it uses :mod:`test.regrtest`; the call :program:`python -m "
"test.regrtest` used in previous Python versions still works.  Running the "
"script by itself automatically starts running all regression tests in the :"
"mod:`test` package. It does this by finding all modules in the package whose "
"name starts with ``test_``, importing them, and executing the function :func:"
"`test_main` if present or loading the tests via unittest.TestLoader."
"loadTestsFromModule if ``test_main`` does not exist.  The names of tests to "
"execute may also be passed to the script. Specifying a single regression "
"test (:program:`python -m test test_spam`) will minimize output and only "
"print whether the test passed or failed."
msgstr ""
"O pacote :mod:`test` pode ser executado como um script para conduzir o "
"conjunto de testes de regressão do Python, graças à opção :option:`-m`: :"
"program:`python -m test`. Nos bastidores, ele usa :mod:`test.regrtest`; a "
"chamada :program:`python -m test.regrtest` usado nas versões anteriores do "
"Python ainda funciona. Executar o script por si só começa a executar todos "
"os testes de regressão no pacote :mod:`test`. Ele faz isso encontrando todos "
"os módulos no pacote cujo nome começa com ``test_``, importando-os e "
"executando a função :func:`test_main` se presente ou carregando os testes "
"via unittest.TestLoader.loadTestsFromModule se ``test_main`` não existir. Os "
"nomes dos testes a serem executados também podem ser passados para o script. "
"Especificando um teste de regressão simples (:program:`python -m test "
"test_spam`) minimizará saiba e imprima apenas se o teste passou ou falhou."

#: ../../library/test.rst:178
msgid ""
"Running :mod:`test` directly allows what resources are available for tests "
"to use to be set. You do this by using the ``-u`` command-line option. "
"Specifying ``all`` as the value for the ``-u`` option enables all possible "
"resources: :program:`python -m test -uall`. If all but one resource is "
"desired (a more common case), a comma-separated list of resources that are "
"not desired may be listed after ``all``. The command :program:`python -m "
"test -uall,-audio,-largefile` will run :mod:`test` with all resources except "
"the ``audio`` and ``largefile`` resources. For a list of all resources and "
"more command-line options, run :program:`python -m test -h`."
msgstr ""
"A execução de :mod:`test` permite definir diretamente quais recursos estão "
"disponíveis para os testes usarem. Você faz isso usando a opção de linha de "
"comando ``-u``. Especificar ``all`` como o valor para a opção ``-u`` ativa "
"todos os recursos possíveis: :program:`python -m test -uall`. Se todos menos "
"um recurso for desejado (um caso mais comum), uma lista separada por "
"vírgulas de recursos que não são desejados pode ser listada após ``all``. O "
"comando :program:`python -m test -uall,-audio,-largefile` executará :mod:"
"`test` com todos os recursos, exceto os recursos ``audio`` e ``largefile``. "
"Para obter uma lista de todos os recursos e mais opções de linha de comando, "
"execute :program:`python -m test -h`."

#: ../../library/test.rst:189
msgid ""
"Some other ways to execute the regression tests depend on what platform the "
"tests are being executed on. On Unix, you can run :program:`make test` at "
"the top-level directory where Python was built. On Windows, executing :"
"program:`rt.bat` from your :file:`PCbuild` directory will run all regression "
"tests."
msgstr ""
"Alguns outros meios para executar os testes de regressão dependem em qual "
"plataforma os testes estão sendo executados. No Unix, você pode executar: "
"programa: ' make test' no diretório de mais alto nível onde o Python foi "
"construído. No Windows, executar: programa 'rt.bat' do seu diretório: file: "
"'PCbuild' executará todos os testes de regressão."

#: ../../library/test.rst:195
msgid ""
"Output is colorized by default and can be :ref:`controlled using environment "
"variables <using-on-controlling-color>`."
msgstr ""

#: ../../library/test.rst:201
msgid ":mod:`test.support` --- Utilities for the Python test suite"
msgstr ":mod:`test.support` --- Utilitários para o conjunto de teste do Python"

#: ../../library/test.rst:207
msgid ""
"The :mod:`test.support` module provides support for Python's regression test "
"suite."
msgstr ""
"O módulo :mod:`test.support` fornece suporte para a suíte de testes de "
"regressão do Python."

#: ../../library/test.rst:212
msgid ""
":mod:`test.support` is not a public module.  It is documented here to help "
"Python developers write tests.  The API of this module is subject to change "
"without backwards compatibility concerns between releases."
msgstr ""
":mod: 'test.support' não é um módulo público. Ele está documentado aqui para "
"ajudar desenvolvedores de Python a escreverem testes. A API desse módulo "
"está sujeito a mudar sem problemas de compatibilidade entre as versões "
"anteriores."

#: ../../library/test.rst:217
msgid "This module defines the following exceptions:"
msgstr "Esse módulo define as seguintes exceções:"

#: ../../library/test.rst:221
msgid ""
"Exception to be raised when a test fails. This is deprecated in favor of :"
"mod:`unittest`\\ -based tests and :class:`unittest.TestCase`'s assertion "
"methods."
msgstr ""
"Exceção a ser levantada quando um teste falha. Isto foi descontinuado em "
"favor dos testes baseados em :mod:`unittest` e métodos de asserção de :class:"
"`unittest.TestCase`."

#: ../../library/test.rst:228
msgid ""
"Subclass of :exc:`unittest.SkipTest`. Raised when a resource (such as a "
"network connection) is not available. Raised by the :func:`requires` "
"function."
msgstr ""
"Subclasse de :exc:`unittest.SkipTest`. Levantada quando um recurso (como uma "
"conexão de rede) não está disponível. Levantada pela função :func:`requires`."

#: ../../library/test.rst:233
msgid "The :mod:`test.support` module defines the following constants:"
msgstr "O módulo :mod:`test.support` define as seguintes constantes:"

#: ../../library/test.rst:237
msgid ""
"``True`` when verbose output is enabled. Should be checked when more "
"detailed information is desired about a running test. *verbose* is set by :"
"mod:`test.regrtest`."
msgstr ""
"``True`` quando a saída detalhada está habilitada. Deve ser verificado "
"quando informações mais detalhadas são desejadas sobre um teste em execução. "
"*verbose* é definido por :mod:`test.regrtest`."

#: ../../library/test.rst:244
msgid "``True`` if the running interpreter is Jython."
msgstr "``True`` se o interpretador em execução for Jython."

#: ../../library/test.rst:249
msgid "``True`` if ``sys.platform`` is ``android``."
msgstr ""

#: ../../library/test.rst:254
msgid "``True`` if ``sys.platform`` is ``emscripten``."
msgstr ""

#: ../../library/test.rst:259
msgid "``True`` if ``sys.platform`` is ``wasi``."
msgstr ""

#: ../../library/test.rst:264
msgid "``True`` if ``sys.platform`` is ``ios``, ``tvos``, or ``watchos``."
msgstr ""

#: ../../library/test.rst:269
msgid ""
"``True`` if ``sys.platform`` is ``darwin`` or ``is_apple_mobile`` is "
"``True``."
msgstr ""

#: ../../library/test.rst:274
msgid "Path for shell if not on Windows; otherwise ``None``."
msgstr ""
"Caminho para o console se não estiver no Windows; por outro lado ``None``"

#: ../../library/test.rst:279
msgid ""
"Timeout in seconds for tests using a network server listening on the network "
"local loopback interface like ``127.0.0.1``."
msgstr ""
"Tempo limite em segundos para testes usando um servidor de rede escutando na "
"interface de loopback local da rede como ``127.0.0.1``."

#: ../../library/test.rst:282
msgid ""
"The timeout is long enough to prevent test failure: it takes into account "
"that the client and the server can run in different threads or even "
"different processes."
msgstr ""
"O tempo limite é longo o suficiente para evitar a falha do teste: leva em "
"consideração que o cliente e o servidor podem ser executados em diferentes "
"threads ou mesmo processos diferentes."

#: ../../library/test.rst:286
msgid ""
"The timeout should be long enough for :meth:`~socket.socket.connect`, :meth:"
"`~socket.socket.recv` and :meth:`~socket.socket.send` methods of :class:"
"`socket.socket`."
msgstr ""
"O tempo limite deve ser longo o suficiente para os métodos :meth:`~socket."
"socket.connect`, :meth:`~socket.socket.recv` e :meth:`~socket.socket.send` "
"de :class:`socket.socket`."

#: ../../library/test.rst:290
msgid "Its default value is 5 seconds."
msgstr "Seu valor padrão é 5 segundos."

#: ../../library/test.rst:292
msgid "See also :data:`INTERNET_TIMEOUT`."
msgstr "Veja também :data:`INTERNET_TIMEOUT`."

#: ../../library/test.rst:297
msgid "Timeout in seconds for network requests going to the internet."
msgstr ""
"Tempo limite em segundos para solicitações de rede indo para a Internet."

#: ../../library/test.rst:299
msgid ""
"The timeout is short enough to prevent a test to wait for too long if the "
"internet request is blocked for whatever reason."
msgstr ""
"O tempo limite é curto o suficiente para evitar que um teste espere muito "
"tempo se a requisição da Internet for bloqueada por qualquer motivo."

#: ../../library/test.rst:302
msgid ""
"Usually, a timeout using :data:`INTERNET_TIMEOUT` should not mark a test as "
"failed, but skip the test instead: see :func:`~test.support.socket_helper."
"transient_internet`."
msgstr ""
"Normalmente, um tempo limite usando :data:`INTERNET_TIMEOUT` não deve marcar "
"um teste como falhado, mas ignorá-lo: veja :func:`~test.support."
"socket_helper.transient_internet`."

#: ../../library/test.rst:306
msgid "Its default value is 1 minute."
msgstr "Seu valor padrão é 1 minuto."

#: ../../library/test.rst:308
msgid "See also :data:`LOOPBACK_TIMEOUT`."
msgstr "Veja também :data:`LOOPBACK_TIMEOUT`."

#: ../../library/test.rst:313
msgid ""
"Timeout in seconds to mark a test as failed if the test takes \"too long\"."
msgstr ""
"Tempo limite em segundos para marcar um teste como falho se o teste demorar "
"\"muito tempo\"."

#: ../../library/test.rst:315
msgid ""
"The timeout value depends on the regrtest ``--timeout`` command line option."
msgstr ""
"O valor do tempo limite depende da opção da linha de comando regrtest ``--"
"timeout``."

#: ../../library/test.rst:317
msgid ""
"If a test using :data:`SHORT_TIMEOUT` starts to fail randomly on slow "
"buildbots, use :data:`LONG_TIMEOUT` instead."
msgstr ""
"Se um teste usando :data:`SHORT_TIMEOUT` começar a falhar aleatoriamente em "
"buildbots lentos, use :data:`LONG_TIMEOUT`."

#: ../../library/test.rst:320
msgid "Its default value is 30 seconds."
msgstr "Seu valor padrão é 30 segundos."

#: ../../library/test.rst:325
msgid "Timeout in seconds to detect when a test hangs."
msgstr "Tempo limite em segundos para detectar quando um teste trava."

#: ../../library/test.rst:327
msgid ""
"It is long enough to reduce the risk of test failure on the slowest Python "
"buildbots. It should not be used to mark a test as failed if the test takes "
"\"too long\".  The timeout value depends on the regrtest ``--timeout`` "
"command line option."
msgstr ""
"É longo o suficiente para reduzir o risco de falha de teste nos buildbots "
"Python mais lentos. Não deve ser usado para marcar um teste como reprovado "
"se o teste demorar \"muito tempo\". O valor do tempo limite depende da opção "
"de linha de comando regrtest ``--timeout``."

#: ../../library/test.rst:332
msgid "Its default value is 5 minutes."
msgstr "Seu valor padrão é 5 minutos."

#: ../../library/test.rst:334
msgid ""
"See also :data:`LOOPBACK_TIMEOUT`, :data:`INTERNET_TIMEOUT` and :data:"
"`SHORT_TIMEOUT`."
msgstr ""
"Veja também :data:`LOOPBACK_TIMEOUT`, :data:`INTERNET_TIMEOUT` e :data:"
"`SHORT_TIMEOUT`."

#: ../../library/test.rst:340
msgid "Set when tests can be skipped when they are not useful for PGO."
msgstr ""
"Definido quando os testes podem ser ignorados quando não são úteis para PGO."

#: ../../library/test.rst:345
msgid ""
"A constant that is likely larger than the underlying OS pipe buffer size, to "
"make writes blocking."
msgstr ""
"Uma constante que provavelmente é maior que o tamanho do buffer de canal do "
"sistema operacional subjacente, para fazer o bloqueio de escritas."

#: ../../library/test.rst:351
msgid ""
"``True`` if Python was built with the :c:macro:`Py_DEBUG` macro defined, "
"that is, if Python was :ref:`built in debug mode <debug-build>`."
msgstr ""
"``True`` se o Python foi criado com a macro :c:macro:`Py_DEBUG` definida, ou "
"seja, se o Python foi :ref:`criado no modo de depuração <debug-build>`."

#: ../../library/test.rst:360
msgid ""
"A constant that is likely larger than the underlying OS socket buffer size, "
"to make writes blocking."
msgstr ""
"Uma constante que provavelmente é maior que o tamanho do buffer de soquete "
"do sistema operacional subjacente, para fazer o bloqueio de escritas."

#: ../../library/test.rst:366
msgid "Set to the top level directory that contains :mod:`test.support`."
msgstr "Define o diretório de mais alto nível que contém :mod:`test.support`."

#: ../../library/test.rst:371
msgid "Set to the top level directory for the test package."
msgstr "Define o diretório de mais alto nível para o pacote de teste."

#: ../../library/test.rst:376
msgid "Set to the ``data`` directory within the test package."
msgstr "Define o diretório ``data`` de dentro do pacote de teste."

#: ../../library/test.rst:381
msgid "Set to :data:`sys.maxsize` for big memory tests."
msgstr "Define :data:`sys.maxsize` para grandes testes de memória."

#: ../../library/test.rst:386
msgid ""
"Set by :func:`set_memlimit` as the memory limit for big memory tests. "
"Limited by :data:`MAX_Py_ssize_t`."
msgstr ""

#: ../../library/test.rst:392
msgid ""
"Set by :func:`set_memlimit` as the memory limit for big memory tests.  Not "
"limited by :data:`MAX_Py_ssize_t`."
msgstr ""

#: ../../library/test.rst:398
msgid ""
"Set to ``True`` if Python is built without docstrings (the :c:macro:"
"`WITH_DOC_STRINGS` macro is not defined). See the :option:`configure --"
"without-doc-strings <--without-doc-strings>` option."
msgstr ""

#: ../../library/test.rst:402
msgid "See also the :data:`HAVE_DOCSTRINGS` variable."
msgstr ""

#: ../../library/test.rst:407
msgid ""
"Set to ``True`` if function docstrings are available. See the :option:"
"`python -OO <-O>` option, which strips docstrings of functions implemented "
"in Python."
msgstr ""

#: ../../library/test.rst:410
msgid "See also the :data:`MISSING_C_DOCSTRINGS` variable."
msgstr ""

#: ../../library/test.rst:415
msgid "Define the URL of a dedicated HTTP server for the network tests."
msgstr ""

#: ../../library/test.rst:420
msgid "Object that is equal to anything.  Used to test mixed type comparison."
msgstr ""

#: ../../library/test.rst:425
msgid ""
"Object that is not equal to anything (even to :data:`ALWAYS_EQ`). Used to "
"test mixed type comparison."
msgstr ""

#: ../../library/test.rst:431
msgid ""
"Object that is greater than anything (except itself). Used to test mixed "
"type comparison."
msgstr ""

#: ../../library/test.rst:437
msgid ""
"Object that is less than anything (except itself). Used to test mixed type "
"comparison."
msgstr ""

#: ../../library/test.rst:441
msgid "The :mod:`test.support` module defines the following functions:"
msgstr "O módulo :mod:`test.support` define as seguintes funções:"

#: ../../library/test.rst:445
msgid "Run the loop body until ``break`` stops the loop."
msgstr ""

#: ../../library/test.rst:447
msgid ""
"After *timeout* seconds, raise an :exc:`AssertionError` if *error* is true, "
"or just stop the loop if *error* is false."
msgstr ""

#: ../../library/test.rst:450
msgid "Example::"
msgstr "Exemplo::"

#: ../../library/test.rst:452
msgid ""
"for _ in support.busy_retry(support.SHORT_TIMEOUT):\n"
"    if check():\n"
"        break"
msgstr ""

#: ../../library/test.rst:456 ../../library/test.rst:480
msgid "Example of error=False usage::"
msgstr ""

#: ../../library/test.rst:458
msgid ""
"for _ in support.busy_retry(support.SHORT_TIMEOUT, error=False):\n"
"    if check():\n"
"        break\n"
"else:\n"
"    raise RuntimeError('my custom error')"
msgstr ""

#: ../../library/test.rst:466
msgid "Wait strategy that applies exponential backoff."
msgstr ""

#: ../../library/test.rst:468
msgid ""
"Run the loop body until ``break`` stops the loop. Sleep at each loop "
"iteration, but not at the first iteration. The sleep delay is doubled at "
"each iteration (up to *max_delay* seconds)."
msgstr ""

#: ../../library/test.rst:472
msgid "See :func:`busy_retry` documentation for the parameters usage."
msgstr ""

#: ../../library/test.rst:474
msgid "Example raising an exception after SHORT_TIMEOUT seconds::"
msgstr ""

#: ../../library/test.rst:476
msgid ""
"for _ in support.sleeping_retry(support.SHORT_TIMEOUT):\n"
"    if check():\n"
"        break"
msgstr ""

#: ../../library/test.rst:482
msgid ""
"for _ in support.sleeping_retry(support.SHORT_TIMEOUT, error=False):\n"
"    if check():\n"
"        break\n"
"else:\n"
"    raise RuntimeError('my custom error')"
msgstr ""

#: ../../library/test.rst:490
msgid ""
"Return ``True`` if *resource* is enabled and available. The list of "
"available resources is only set when :mod:`test.regrtest` is executing the "
"tests."
msgstr ""

#: ../../library/test.rst:497
msgid "Return ``True`` if Python was not built with ``-O0`` or ``-Og``."
msgstr ""

#: ../../library/test.rst:502
msgid "Return :const:`_testcapi.WITH_PYMALLOC`."
msgstr ""

#: ../../library/test.rst:507
msgid ""
"Raise :exc:`ResourceDenied` if *resource* is not available. *msg* is the "
"argument to :exc:`ResourceDenied` if it is raised. Always returns ``True`` "
"if called by a function whose ``__name__`` is ``'__main__'``. Used when "
"tests are executed by :mod:`test.regrtest`."
msgstr ""

#: ../../library/test.rst:515
msgid "Return a repr of *dict* with keys sorted."
msgstr ""

#: ../../library/test.rst:520
msgid ""
"Return the path to the file named *filename*. If no match is found "
"*filename* is returned. This does not equal a failure since it could be the "
"path to the file."
msgstr ""

#: ../../library/test.rst:524
msgid ""
"Setting *subdir* indicates a relative path to use to find the file rather "
"than looking directly in the path directories."
msgstr ""

#: ../../library/test.rst:530
msgid "Get size of a page in bytes."
msgstr ""

#: ../../library/test.rst:537
msgid ""
"Set the :func:`sys.setswitchinterval` to the given *interval*.  Defines a "
"minimum interval for Android systems to prevent the system from hanging."
msgstr ""

#: ../../library/test.rst:543
msgid ""
"Use this check to guard CPython's implementation-specific tests or to run "
"them only on the implementations guarded by the arguments.  This function "
"returns ``True`` or ``False`` depending on the host platform. Example usage::"
msgstr ""

#: ../../library/test.rst:548
msgid ""
"check_impl_detail()               # Only on CPython (default).\n"
"check_impl_detail(jython=True)    # Only on Jython.\n"
"check_impl_detail(cpython=False)  # Everywhere except CPython."
msgstr ""

#: ../../library/test.rst:555
msgid ""
"Set the values for :data:`max_memuse` and :data:`real_max_memuse` for big "
"memory tests."
msgstr ""
"Define os valores para :data:`max_memuse` e :data:`real_max_memuse` para "
"grandes testes de memória."

#: ../../library/test.rst:561
msgid ""
"Store the value from *stdout*.  It is meant to hold the stdout at the time "
"the regrtest began."
msgstr ""
"Armazena o valor de *stdout*. Destina-se a manter o stdout no momento em que "
"o registro começou."

#: ../../library/test.rst:567
msgid ""
"Return the original stdout set by :func:`record_original_stdout` or ``sys."
"stdout`` if it's not set."
msgstr ""
"Retorna o stdout original definido por :func:`record_original_stdout` ou "
"``sys.stdout`` se não estiver definido."

#: ../../library/test.rst:573
msgid ""
"Return a list of command line arguments reproducing the current settings in "
"``sys.flags`` and ``sys.warnoptions``."
msgstr ""
"Retorna uma lista de argumentos de linha de comando reproduzindo as "
"configurações em ``sys.flags`` e ``sys.warnoptions``."

#: ../../library/test.rst:579
msgid ""
"Return a list of command line arguments reproducing the current optimization "
"settings in ``sys.flags``."
msgstr ""
"Retorna a lista de argumentos da linha de comando reproduzindo as "
"configurações de otimização atuais em ``sys.flags``."

#: ../../library/test.rst:587
msgid ""
"A context managers that temporarily replaces the named stream with :class:"
"`io.StringIO` object."
msgstr ""
"Um gerenciador de contexto que substitui temporariamente o fluxo nomeado "
"pelo objeto :class:`io.StringIO`."

#: ../../library/test.rst:590
msgid "Example use with output streams::"
msgstr "Exemplo do uso com fluxos de saída::"

#: ../../library/test.rst:592
msgid ""
"with captured_stdout() as stdout, captured_stderr() as stderr:\n"
"    print(\"hello\")\n"
"    print(\"error\", file=sys.stderr)\n"
"assert stdout.getvalue() == \"hello\\n\"\n"
"assert stderr.getvalue() == \"error\\n\""
msgstr ""

#: ../../library/test.rst:598
msgid "Example use with input stream::"
msgstr "Exemplo de uso com fluxo de entrada::"

#: ../../library/test.rst:600
msgid ""
"with captured_stdin() as stdin:\n"
"    stdin.write('hello\\n')\n"
"    stdin.seek(0)\n"
"    # call test code that consumes from sys.stdin\n"
"    captured = input()\n"
"self.assertEqual(captured, \"hello\")"
msgstr ""

#: ../../library/test.rst:610
msgid "A context manager that temporary disables :mod:`faulthandler`."
msgstr ""
"Um gerenciador de contexto que desativa temporariamente :mod:`faulthandler`."

#: ../../library/test.rst:615
msgid ""
"Force as many objects as possible to be collected.  This is needed because "
"timely deallocation is not guaranteed by the garbage collector.  This means "
"that ``__del__`` methods may be called later than expected and weakrefs may "
"remain alive for longer than expected."
msgstr ""
"Força a coleta de tantos objetos quanto possível. Isso é necessário porque a "
"desalocação oportuna não é garantida pelo coletor de lixo. Isso significa "
"que os métodos ``__del__`` podem ser chamados mais tarde do que o esperado e "
"as referência fraca podem permanecer ativas por mais tempo do que o esperado."

#: ../../library/test.rst:623
msgid ""
"A context manager that disables the garbage collector on entry. On exit, the "
"garbage collector is restored to its prior state."
msgstr ""

#: ../../library/test.rst:629
msgid "Context manager to swap out an attribute with a new object."
msgstr ""

#: ../../library/test.rst:631 ../../library/test.rst:649
#: ../../library/test.rst:904 ../../library/test.rst:1370
msgid "Usage::"
msgstr "Uso::"

#: ../../library/test.rst:633
msgid ""
"with swap_attr(obj, \"attr\", 5):\n"
"    ..."
msgstr ""

#: ../../library/test.rst:636
msgid ""
"This will set ``obj.attr`` to 5 for the duration of the ``with`` block, "
"restoring the old value at the end of the block.  If ``attr`` doesn't exist "
"on ``obj``, it will be created and then deleted at the end of the block."
msgstr ""

#: ../../library/test.rst:641 ../../library/test.rst:659
msgid ""
"The old value (or ``None`` if it doesn't exist) will be assigned to the "
"target of the \"as\" clause, if there is one."
msgstr ""

#: ../../library/test.rst:647
msgid "Context manager to swap out an item with a new object."
msgstr ""

#: ../../library/test.rst:651
msgid ""
"with swap_item(obj, \"item\", 5):\n"
"    ..."
msgstr ""

#: ../../library/test.rst:654
msgid ""
"This will set ``obj[\"item\"]`` to 5 for the duration of the ``with`` block, "
"restoring the old value at the end of the block. If ``item`` doesn't exist "
"on ``obj``, it will be created and then deleted at the end of the block."
msgstr ""

#: ../../library/test.rst:665
msgid ""
"Call the ``flush()`` method on :data:`sys.stdout` and then on :data:`sys."
"stderr`. It can be used to make sure that the logs order is consistent "
"before writing into stderr."
msgstr ""

#: ../../library/test.rst:674
msgid ""
"Print a warning into :data:`sys.__stderr__`. Format the message as: "
"``f\"Warning -- {msg}\"``. If *msg* is made of multiple lines, add "
"``\"Warning -- \"`` prefix to each line."
msgstr ""

#: ../../library/test.rst:683
msgid ""
"Wait until process *pid* completes and check that the process exit code is "
"*exitcode*."
msgstr ""

#: ../../library/test.rst:686
msgid ""
"Raise an :exc:`AssertionError` if the process exit code is not equal to "
"*exitcode*."
msgstr ""

#: ../../library/test.rst:689
msgid ""
"If the process runs longer than *timeout* seconds (:data:`SHORT_TIMEOUT` by "
"default), kill the process and raise an :exc:`AssertionError`. The timeout "
"feature is not available on Windows."
msgstr ""

#: ../../library/test.rst:698
msgid ""
"Return the size of the :c:type:`PyObject` whose structure members are "
"defined by *fmt*. The returned value includes the size of the Python object "
"header and alignment."
msgstr ""

#: ../../library/test.rst:704
msgid ""
"Return the size of the :c:type:`PyVarObject` whose structure members are "
"defined by *fmt*. The returned value includes the size of the Python object "
"header and alignment."
msgstr ""

#: ../../library/test.rst:710
msgid ""
"For testcase *test*, assert that the ``sys.getsizeof`` for *o* plus the GC "
"header size equals *size*."
msgstr ""

#: ../../library/test.rst:716
msgid ""
"A decorator to conditionally mark tests with :func:`unittest."
"expectedFailure`. Any use of this decorator should have an associated "
"comment identifying the relevant tracker issue."
msgstr ""

#: ../../library/test.rst:723
msgid ""
"A decorator that skips the decorated test on TLS certification validation "
"failures."
msgstr ""

#: ../../library/test.rst:728
msgid ""
"A decorator for running a function in a different locale, correctly "
"resetting it after it has finished.  *catstr* is the locale category as a "
"string (for example ``\"LC_ALL\"``).  The *locales* passed will be tried "
"sequentially, and the first valid locale will be used."
msgstr ""

#: ../../library/test.rst:736
msgid ""
"A decorator for running a function in a specific timezone, correctly "
"resetting it after it has finished."
msgstr ""

#: ../../library/test.rst:742
msgid ""
"Decorator for the minimum version when running test on FreeBSD.  If the "
"FreeBSD version is less than the minimum, the test is skipped."
msgstr ""

#: ../../library/test.rst:748
msgid ""
"Decorator for the minimum version when running test on Linux.  If the Linux "
"version is less than the minimum, the test is skipped."
msgstr ""

#: ../../library/test.rst:754
msgid ""
"Decorator for the minimum version when running test on macOS.  If the macOS "
"version is less than the minimum, the test is skipped."
msgstr ""

#: ../../library/test.rst:760
msgid ""
"Decorator for skipping tests on the free-threaded build.  If the :term:`GIL` "
"is disabled, the test is skipped."
msgstr ""
"Decorador para pular testes na construção com threads livres. Se a :term:"
"`GIL` estiver desabilitada, o teste será ignorado."

#: ../../library/test.rst:766
msgid "Decorator for skipping tests on non-IEEE 754 platforms."
msgstr ""

#: ../../library/test.rst:771
msgid "Decorator for skipping tests if :mod:`zlib` doesn't exist."
msgstr ""

#: ../../library/test.rst:776
msgid "Decorator for skipping tests if :mod:`gzip` doesn't exist."
msgstr ""

#: ../../library/test.rst:781
msgid "Decorator for skipping tests if :mod:`bz2` doesn't exist."
msgstr ""

#: ../../library/test.rst:786
msgid "Decorator for skipping tests if :mod:`lzma` doesn't exist."
msgstr ""

#: ../../library/test.rst:791
msgid "Decorator for skipping tests if *resource* is not available."
msgstr ""

#: ../../library/test.rst:796
msgid "Decorator for only running the test if :data:`HAVE_DOCSTRINGS`."
msgstr ""

#: ../../library/test.rst:801
msgid ""
"Decorator for only running the test if :ref:`Limited C API <limited-c-api>` "
"is available."
msgstr ""

#: ../../library/test.rst:807
msgid "Decorator for tests only applicable to CPython."
msgstr ""

#: ../../library/test.rst:812
msgid ""
"Decorator for invoking :func:`check_impl_detail` on *guards*.  If that "
"returns ``False``, then uses *msg* as the reason for skipping the test."
msgstr ""

#: ../../library/test.rst:817
msgid ""
"Decorator for marking tests as thread-unsafe.  This test always runs in one "
"thread even when invoked with ``--parallel-threads``."
msgstr ""

#: ../../library/test.rst:823
msgid "Decorator to temporarily turn off tracing for the duration of the test."
msgstr ""

#: ../../library/test.rst:828
msgid ""
"Decorator for tests which involve reference counting.  The decorator does "
"not run the test if it is not run by CPython.  Any trace function is unset "
"for the duration of the test to prevent unexpected refcounts caused by the "
"trace function."
msgstr ""

#: ../../library/test.rst:836
msgid "Decorator for bigmem tests."
msgstr ""

#: ../../library/test.rst:838
msgid ""
"*size* is a requested size for the test (in arbitrary, test-interpreted "
"units.)  *memuse* is the number of bytes per unit for the test, or a good "
"estimate of it.  For example, a test that needs two byte buffers, of 4 GiB "
"each, could be decorated with ``@bigmemtest(size=_4G, memuse=2)``."
msgstr ""

#: ../../library/test.rst:843
msgid ""
"The *size* argument is normally passed to the decorated test method as an "
"extra argument.  If *dry_run* is ``True``, the value passed to the test "
"method may be less than the requested value.  If *dry_run* is ``False``, it "
"means the test doesn't support dummy runs when ``-M`` is not specified."
msgstr ""

#: ../../library/test.rst:851
msgid "Decorator for tests that fill the address space."
msgstr "Decorador para testes que preeenche o espaço do endereço."

#: ../../library/test.rst:856
msgid ""
"Return ``False`` if there is no evidence the interpreter was compiled with "
"``musl``, otherwise return a version triple, either ``(0, 0, 0)`` if the "
"version is unknown, or the actual version if it is known.  Intended for use "
"in ``skip`` decorators.  ``emscripten`` and ``wasi`` are assumed to be "
"compiled with ``musl``; otherwise ``platform.libc_ver`` is checked."
msgstr ""

#: ../../library/test.rst:865
msgid ""
"Test for syntax errors in *statement* by attempting to compile *statement*. "
"*testcase* is the :mod:`unittest` instance for the test.  *errtext* is the "
"regular expression which should match the string representation of the "
"raised :exc:`SyntaxError`.  If *lineno* is not ``None``, compares to the "
"line of the exception.  If *offset* is not ``None``, compares to the offset "
"of the exception."
msgstr ""

#: ../../library/test.rst:875
msgid "Open *url*.  If open fails, raises :exc:`TestFailed`."
msgstr "Abre *url*. Se falhar em abrir, levanta :exc:`TestFailed`."

#: ../../library/test.rst:880
msgid ""
"Use this at the end of ``test_main`` whenever sub-processes are started. "
"This will help ensure that no extra children (zombies) stick around to hog "
"resources and create problems when looking for refleaks."
msgstr ""

#: ../../library/test.rst:887
msgid ""
"Get an attribute, raising :exc:`unittest.SkipTest` if :exc:`AttributeError` "
"is raised."
msgstr ""

#: ../../library/test.rst:893
msgid ""
"Context manager catching unraisable exception using :func:`sys."
"unraisablehook`."
msgstr ""

#: ../../library/test.rst:896
msgid ""
"Storing the exception value (``cm.unraisable.exc_value``) creates a "
"reference cycle. The reference cycle is broken explicitly when the context "
"manager exits."
msgstr ""

#: ../../library/test.rst:900
msgid ""
"Storing the object (``cm.unraisable.object``) can resurrect it if it is set "
"to an object which is being finalized. Exiting the context manager clears "
"the stored object."
msgstr ""

#: ../../library/test.rst:906
msgid ""
"with support.catch_unraisable_exception() as cm:\n"
"    # code creating an \"unraisable exception\"\n"
"    ...\n"
"\n"
"    # check the unraisable exception: use cm.unraisable\n"
"    ...\n"
"\n"
"# cm.unraisable attribute no longer exists at this point\n"
"# (to break a reference cycle)"
msgstr ""

#: ../../library/test.rst:921
msgid ""
"Generic implementation of the :mod:`unittest` ``load_tests`` protocol for "
"use in test packages.  *pkg_dir* is the root directory of the package; "
"*loader*, *standard_tests*, and *pattern* are the arguments expected by "
"``load_tests``.  In simple cases, the test package's ``__init__.py`` can be "
"the following::"
msgstr ""

#: ../../library/test.rst:927
msgid ""
"import os\n"
"from test.support import load_package_tests\n"
"\n"
"def load_tests(*args):\n"
"    return load_package_tests(os.path.dirname(__file__), *args)"
msgstr ""

#: ../../library/test.rst:936
msgid ""
"Returns the set of attributes, functions or methods of *ref_api* not found "
"on *other_api*, except for a defined list of items to be ignored in this "
"check specified in *ignore*."
msgstr ""

#: ../../library/test.rst:940
msgid ""
"By default this skips private attributes beginning with '_' but includes all "
"magic methods, i.e. those starting and ending in '__'."
msgstr ""

#: ../../library/test.rst:948
msgid ""
"Override *object_to_patch.attr_name* with *new_value*.  Also add cleanup "
"procedure to *test_instance* to restore *object_to_patch* for *attr_name*.  "
"The *attr_name* should be a valid attribute for *object_to_patch*."
msgstr ""

#: ../../library/test.rst:956
msgid ""
"Run *code* in subinterpreter.  Raise :exc:`unittest.SkipTest` if :mod:"
"`tracemalloc` is enabled."
msgstr ""

#: ../../library/test.rst:962
msgid "Assert instances of *cls* are deallocated after iterating."
msgstr ""

#: ../../library/test.rst:967
msgid ""
"Check for the existence of the compiler executables whose names are listed "
"in *cmd_names* or all the compiler executables when *cmd_names* is empty and "
"return the first missing executable or ``None`` when none is found missing."
msgstr ""

#: ../../library/test.rst:975
msgid ""
"Assert that the ``__all__`` variable of *module* contains all public names."
msgstr ""

#: ../../library/test.rst:977
msgid ""
"The module's public names (its API) are detected automatically based on "
"whether they match the public name convention and were defined in *module*."
msgstr ""

#: ../../library/test.rst:981
msgid ""
"The *name_of_module* argument can specify (as a string or tuple thereof) "
"what module(s) an API could be defined in order to be detected as a public "
"API. One case for this is when *module* imports part of its public API from "
"other modules, possibly a C backend (like ``csv`` and its ``_csv``)."
msgstr ""

#: ../../library/test.rst:986
msgid ""
"The *extra* argument can be a set of names that wouldn't otherwise be "
"automatically detected as \"public\", like objects without a proper :attr:"
"`~definition.__module__` attribute. If provided, it will be added to the "
"automatically detected ones."
msgstr ""

#: ../../library/test.rst:990
msgid ""
"The *not_exported* argument can be a set of names that must not be treated "
"as part of the public API even though their names indicate otherwise."
msgstr ""

#: ../../library/test.rst:993 ../../library/test.rst:1623
msgid "Example use::"
msgstr "Exemplo de uso::"

#: ../../library/test.rst:995
msgid ""
"import bar\n"
"import foo\n"
"import unittest\n"
"from test import support\n"
"\n"
"class MiscTestCase(unittest.TestCase):\n"
"    def test__all__(self):\n"
"        support.check__all__(self, foo)\n"
"\n"
"class OtherTestCase(unittest.TestCase):\n"
"    def test__all__(self):\n"
"        extra = {'BAR_CONST', 'FOO_CONST'}\n"
"        not_exported = {'baz'}  # Undocumented name.\n"
"        # bar imports part of its API from _bar.\n"
"        support.check__all__(self, bar, ('bar', '_bar'),\n"
"                             extra=extra, not_exported=not_exported)"
msgstr ""

#: ../../library/test.rst:1016
msgid ""
"Skip tests if the :mod:`multiprocessing.synchronize` module is missing, if "
"there is no available semaphore implementation, or if creating a lock raises "
"an :exc:`OSError`."
msgstr ""

#: ../../library/test.rst:1025
msgid "Assert that type *tp* cannot be instantiated using *args* and *kwds*."
msgstr ""

#: ../../library/test.rst:1032
msgid ""
"This function returns a context manager that will change the global :func:"
"`sys.set_int_max_str_digits` setting for the duration of the context to "
"allow execution of test code that needs a different limit on the number of "
"digits when converting between an integer and string."
msgstr ""

#: ../../library/test.rst:1040
msgid "The :mod:`test.support` module defines the following classes:"
msgstr ""

#: ../../library/test.rst:1045
msgid ""
"A context manager used to try to prevent crash dialog popups on tests that "
"are expected to crash a subprocess."
msgstr ""

#: ../../library/test.rst:1048
msgid ""
"On Windows, it disables Windows Error Reporting dialogs using `SetErrorMode "
"<https://msdn.microsoft.com/en-us/library/windows/desktop/ms680621.aspx>`_."
msgstr ""
"No Windows, desativa as caixas de diálogo Relatório de Erros do Windows "
"usando SetErrorMode <https://msdn.microsoft.com/en-us/library/windows/"
"desktop/ms680621.aspx>_."

#: ../../library/test.rst:1051
msgid ""
"On UNIX, :func:`resource.setrlimit` is used to set :const:`resource."
"RLIMIT_CORE`'s soft limit to 0 to prevent coredump file creation."
msgstr ""

#: ../../library/test.rst:1055
msgid ""
"On both platforms, the old value is restored by :meth:`~object.__exit__`."
msgstr ""

#: ../../library/test.rst:1060
msgid ""
"Class to save and restore signal handlers registered by the Python signal "
"handler."
msgstr ""

#: ../../library/test.rst:1065
msgid ""
"Save the signal handlers to a dictionary mapping signal numbers to the "
"current signal handler."
msgstr ""

#: ../../library/test.rst:1070
msgid ""
"Set the signal numbers from the :meth:`save` dictionary to the saved handler."
msgstr ""

#: ../../library/test.rst:1078
msgid "Try to match a single dict with the supplied arguments."
msgstr "Tenta corresponder um único dicionário com os argumentos fornecidos."

#: ../../library/test.rst:1083
msgid "Try to match a single stored value (*dv*) with a supplied value (*v*)."
msgstr ""
"Tente combinar um único valor armazenado (*dv*) com um valor fornecido (*v*)."

#: ../../library/test.rst:1087
msgid ":mod:`test.support.socket_helper` --- Utilities for socket tests"
msgstr ""

#: ../../library/test.rst:1093
msgid ""
"The :mod:`test.support.socket_helper` module provides support for socket "
"tests."
msgstr ""

#: ../../library/test.rst:1100
msgid "Set to ``True`` if IPv6 is enabled on this host, ``False`` otherwise."
msgstr ""

#: ../../library/test.rst:1105
msgid ""
"Returns an unused port that should be suitable for binding.  This is "
"achieved by creating a temporary socket with the same family and type as the "
"``sock`` parameter (default is :const:`~socket.AF_INET`, :const:`~socket."
"SOCK_STREAM`), and binding it to the specified host address (defaults to "
"``0.0.0.0``) with the port set to 0, eliciting an unused ephemeral port from "
"the OS. The temporary socket is then closed and deleted, and the ephemeral "
"port is returned."
msgstr ""

#: ../../library/test.rst:1114
msgid ""
"Either this method or :func:`bind_port` should be used for any tests where a "
"server socket needs to be bound to a particular port for the duration of the "
"test. Which one to use depends on whether the calling code is creating a "
"Python socket, or if an unused port needs to be provided in a constructor or "
"passed to an external program (i.e. the ``-accept`` argument to openssl's "
"s_server mode).  Always prefer :func:`bind_port` over :func:"
"`find_unused_port` where possible.  Using a hard coded port is discouraged "
"since it can make multiple instances of the test impossible to run "
"simultaneously, which is a problem for buildbots."
msgstr ""

#: ../../library/test.rst:1128
msgid ""
"Bind the socket to a free port and return the port number.  Relies on "
"ephemeral ports in order to ensure we are using an unbound port.  This is "
"important as many tests may be running simultaneously, especially in a "
"buildbot environment.  This method raises an exception if the ``sock."
"family`` is :const:`~socket.AF_INET` and ``sock.type`` is :const:`~socket."
"SOCK_STREAM`, and the socket has :const:`~socket.SO_REUSEADDR` or :const:"
"`~socket.SO_REUSEPORT` set on it. Tests should never set these socket "
"options for TCP/IP sockets. The only case for setting these options is "
"testing multicasting via multiple UDP sockets."
msgstr ""

#: ../../library/test.rst:1139
msgid ""
"Additionally, if the :const:`~socket.SO_EXCLUSIVEADDRUSE` socket option is "
"available (i.e. on Windows), it will be set on the socket.  This will "
"prevent anyone else from binding to our host/port for the duration of the "
"test."
msgstr ""

#: ../../library/test.rst:1147
msgid ""
"Bind a Unix socket, raising :exc:`unittest.SkipTest` if :exc:"
"`PermissionError` is raised."
msgstr ""

#: ../../library/test.rst:1153
msgid ""
"A decorator for running tests that require a functional ``bind()`` for Unix "
"sockets."
msgstr ""

#: ../../library/test.rst:1159
msgid ""
"A context manager that raises :exc:`~test.support.ResourceDenied` when "
"various issues with the internet connection manifest themselves as "
"exceptions."
msgstr ""

#: ../../library/test.rst:1165
msgid ""
":mod:`test.support.script_helper` --- Utilities for the Python execution "
"tests"
msgstr ""

#: ../../library/test.rst:1171
msgid ""
"The :mod:`test.support.script_helper` module provides support for Python's "
"script execution tests."
msgstr ""

#: ../../library/test.rst:1176
msgid ""
"Return ``True`` if ``sys.executable interpreter`` requires environment "
"variables in order to be able to run at all."
msgstr ""

#: ../../library/test.rst:1179
msgid ""
"This is designed to be used with ``@unittest.skipIf()`` to annotate tests "
"that need to use an ``assert_python*()`` function to launch an isolated mode "
"(``-I``) or no environment mode (``-E``) sub-interpreter process."
msgstr ""

#: ../../library/test.rst:1183
msgid ""
"A normal build & test does not run into this situation but it can happen "
"when trying to run the standard library test suite from an interpreter that "
"doesn't have an obvious home with Python's current home finding logic."
msgstr ""

#: ../../library/test.rst:1187
msgid ""
"Setting :envvar:`PYTHONHOME` is one way to get most of the testsuite to run "
"in that situation.  :envvar:`PYTHONPATH` or :envvar:`PYTHONUSERSITE` are "
"other common environment variables that might impact whether or not the "
"interpreter can start."
msgstr ""

#: ../../library/test.rst:1195
msgid ""
"Set up the environment based on *env_vars* for running the interpreter in a "
"subprocess.  The values can include ``__isolated``, ``__cleanenv``, "
"``__cwd``, and ``TERM``."
msgstr ""

#: ../../library/test.rst:1199 ../../library/test.rst:1215
#: ../../library/test.rst:1227
msgid "The function no longer strips whitespaces from *stderr*."
msgstr ""

#: ../../library/test.rst:1205
msgid ""
"Assert that running the interpreter with *args* and optional environment "
"variables *env_vars* succeeds (``rc == 0``) and return a ``(return code, "
"stdout, stderr)`` tuple."
msgstr ""

#: ../../library/test.rst:1209
msgid ""
"If the *__cleanenv* keyword-only parameter is set, *env_vars* is used as a "
"fresh environment."
msgstr ""

#: ../../library/test.rst:1212
msgid ""
"Python is started in isolated mode (command line option ``-I``), except if "
"the *__isolated* keyword-only parameter is set to ``False``."
msgstr ""

#: ../../library/test.rst:1221
msgid ""
"Assert that running the interpreter with *args* and optional environment "
"variables *env_vars* fails (``rc != 0``) and return a ``(return code, "
"stdout, stderr)`` tuple."
msgstr ""

#: ../../library/test.rst:1225
msgid "See :func:`assert_python_ok` for more options."
msgstr ""

#: ../../library/test.rst:1233
msgid "Run a Python subprocess with the given arguments."
msgstr ""

#: ../../library/test.rst:1235
msgid ""
"*kw* is extra keyword args to pass to :func:`subprocess.Popen`. Returns a :"
"class:`subprocess.Popen` object."
msgstr ""

#: ../../library/test.rst:1241
msgid ""
"Run the given :class:`subprocess.Popen` process until completion and return "
"stdout."
msgstr ""

#: ../../library/test.rst:1247
msgid ""
"Create script containing *source* in path *script_dir* and "
"*script_basename*. If *omit_suffix* is ``False``, append ``.py`` to the "
"name.  Return the full script path."
msgstr ""
"Cria um script contendo *source* no caminho *script_dir* e "
"*script_basename*. Se *omit_suffix* ``False``, acrescente ``.py`` ao nome. "
"Retorna o caminho completo do script."

#: ../../library/test.rst:1254
msgid ""
"Create zip file at *zip_dir* and *zip_basename* with extension ``zip`` which "
"contains the files in *script_name*. *name_in_zip* is the archive name. "
"Return a tuple containing ``(full path, full path of archive name)``."
msgstr ""
"Cria um arquivo zip em *zip_dir* e *zip_basename* com a extensão ``zip`` que "
"contém os arquivos em *script_name*. *name_in_zip* é o nome do arquivo. "
"Retorna uma tupla contendo ``(full path, full path of archive name)``."

#: ../../library/test.rst:1261
msgid ""
"Create a directory named *pkg_dir* containing an ``__init__`` file with "
"*init_source* as its contents."
msgstr ""
"Cria um diretório nomeado *pkg_dir* contendo um arquivo ``__init__`` com "
"*init_source* como seus conteúdos."

#: ../../library/test.rst:1268
msgid ""
"Create a zip package directory with a path of *zip_dir* and *zip_basename* "
"containing an empty ``__init__`` file and a file *script_basename* "
"containing the *source*.  If *compiled* is ``True``, both source files will "
"be compiled and added to the zip package.  Return a tuple of the full zip "
"path and the archive name for the zip file."
msgstr ""

#: ../../library/test.rst:1276
msgid ""
":mod:`test.support.bytecode_helper` --- Support tools for testing correct "
"bytecode generation"
msgstr ""
":mod:`test.support.bytecode_helper` --- Ferramentas de suporte para testar a "
"geração correta de bytecode"

#: ../../library/test.rst:1281
msgid ""
"The :mod:`test.support.bytecode_helper` module provides support for testing "
"and inspecting bytecode generation."
msgstr ""

#: ../../library/test.rst:1286
msgid "The module defines the following class:"
msgstr "O módulo define a seguinte classe:"

#: ../../library/test.rst:1290
msgid "This class has custom assertion methods for inspecting bytecode."
msgstr ""

#: ../../library/test.rst:1294
msgid "Return the disassembly of *co* as string."
msgstr ""

#: ../../library/test.rst:1299
msgid ""
"Return instr if *opname* is found, otherwise throws :exc:`AssertionError`."
msgstr ""

#: ../../library/test.rst:1304
msgid "Throws :exc:`AssertionError` if *opname* is found."
msgstr ""

#: ../../library/test.rst:1308
msgid ":mod:`test.support.threading_helper` --- Utilities for threading tests"
msgstr ""

#: ../../library/test.rst:1313
msgid ""
"The :mod:`test.support.threading_helper` module provides support for "
"threading tests."
msgstr ""

#: ../../library/test.rst:1320
msgid ""
"Join a *thread* within *timeout*.  Raise an :exc:`AssertionError` if thread "
"is still alive after *timeout* seconds."
msgstr ""

#: ../../library/test.rst:1326
msgid "Decorator to ensure the threads are cleaned up even if the test fails."
msgstr ""

#: ../../library/test.rst:1331
msgid ""
"Context manager to start *threads*, which is a sequence of threads. *unlock* "
"is a function called after the threads are started, even if an exception was "
"raised; an example would be :meth:`threading.Event.set`. ``start_threads`` "
"will attempt to join the started threads upon exit."
msgstr ""

#: ../../library/test.rst:1339
msgid ""
"Cleanup up threads not specified in *original_values*.  Designed to emit a "
"warning if a test leaves running threads in the background."
msgstr ""

#: ../../library/test.rst:1345
msgid "Return current thread count and copy of dangling threads."
msgstr ""

#: ../../library/test.rst:1350
msgid ""
"Context manager to wait until all threads created in the ``with`` statement "
"exit."
msgstr ""

#: ../../library/test.rst:1356
msgid ""
"Context manager catching :class:`threading.Thread` exception using :func:"
"`threading.excepthook`."
msgstr ""

#: ../../library/test.rst:1359
msgid "Attributes set when an exception is caught:"
msgstr ""

#: ../../library/test.rst:1361
msgid "``exc_type``"
msgstr "``exc_type``"

#: ../../library/test.rst:1362
msgid "``exc_value``"
msgstr "``exc_value``"

#: ../../library/test.rst:1363
msgid "``exc_traceback``"
msgstr "``exc_traceback``"

#: ../../library/test.rst:1364
msgid "``thread``"
msgstr "``thread``"

#: ../../library/test.rst:1366
msgid "See :func:`threading.excepthook` documentation."
msgstr ""

#: ../../library/test.rst:1368
msgid "These attributes are deleted at the context manager exit."
msgstr ""

#: ../../library/test.rst:1372
msgid ""
"with threading_helper.catch_threading_exception() as cm:\n"
"    # code spawning a thread which raises an exception\n"
"    ...\n"
"\n"
"    # check the thread exception, use cm attributes:\n"
"    # exc_type, exc_value, exc_traceback, thread\n"
"    ...\n"
"\n"
"# exc_type, exc_value, exc_traceback, thread attributes of cm no longer\n"
"# exists at this point\n"
"# (to avoid reference cycles)"
msgstr ""

#: ../../library/test.rst:1388
msgid ":mod:`test.support.os_helper` --- Utilities for os tests"
msgstr ""

#: ../../library/test.rst:1393
msgid "The :mod:`test.support.os_helper` module provides support for os tests."
msgstr ""

#: ../../library/test.rst:1400
msgid "A non-ASCII character encodable by :func:`os.fsencode`."
msgstr ""

#: ../../library/test.rst:1405
msgid "Set to :func:`os.getcwd`."
msgstr ""

#: ../../library/test.rst:1410
msgid ""
"Set to a name that is safe to use as the name of a temporary file.  Any "
"temporary file that is created should be closed and unlinked (removed)."
msgstr ""

#: ../../library/test.rst:1416
msgid ""
"Set to a filename containing the :data:`FS_NONASCII` character, if it "
"exists. This guarantees that if the filename exists, it can be encoded and "
"decoded with the default filesystem encoding. This allows tests that require "
"a non-ASCII filename to be easily skipped on platforms where they can't work."
msgstr ""

#: ../../library/test.rst:1424
msgid ""
"Set to a filename (str type) that should not be able to be encoded by file "
"system encoding in strict mode.  It may be ``None`` if it's not possible to "
"generate such a filename."
msgstr ""
"Define o nome de arquivo (tipo str) que não pode ser codificado pela "
"codificação do sistema de arquivos no modo estrito. Ele pode ser ``None`` se "
"não for possível gerar como um nome de arquivo."

#: ../../library/test.rst:1431
msgid ""
"Set to a filename (bytes type) that should not be able to be decoded by file "
"system encoding in strict mode.  It may be ``None`` if it's not possible to "
"generate such a filename."
msgstr ""
"Define o nome de arquivo (tipo str) que não pode ser codificado pela "
"codificação do sistema de arquivos no modo estrito. Ele pode ser ``None`` se "
"não for possível ser gerado com um nome de arquivo."

#: ../../library/test.rst:1438
msgid "Set to a non-ASCII name for a temporary file."
msgstr "Define um nome não-ASCII para o arquivo temporário."

#: ../../library/test.rst:1443
msgid ""
"Class used to temporarily set or unset environment variables.  Instances can "
"be used as a context manager and have a complete dictionary interface for "
"querying/modifying the underlying ``os.environ``. After exit from the "
"context manager all changes to environment variables done through this "
"instance will be rolled back."
msgstr ""

#: ../../library/test.rst:1449
msgid "Added dictionary interface."
msgstr "Adicionada uma interface para dicionário."

#: ../../library/test.rst:1455
msgid ""
"Simple :term:`path-like object`.  It implements the :meth:`~os.PathLike."
"__fspath__` method which just returns the *path* argument.  If *path* is an "
"exception, it will be raised in :meth:`!__fspath__`."
msgstr ""

#: ../../library/test.rst:1463
msgid ""
"Temporarily set the environment variable ``envvar`` to the value of "
"``value``."
msgstr ""
"Temporariamente define a variável de ambiente ``envvar`` para o valor "
"``value``."

#: ../../library/test.rst:1469
msgid "Temporarily unset one or more environment variables."
msgstr ""

#: ../../library/test.rst:1471
msgid "More than one environment variable can be unset."
msgstr ""

#: ../../library/test.rst:1477
msgid "Return ``True`` if the OS supports symbolic links, ``False`` otherwise."
msgstr ""

#: ../../library/test.rst:1483
msgid "Return ``True`` if the OS supports xattr, ``False`` otherwise."
msgstr ""

#: ../../library/test.rst:1489
msgid ""
"A context manager that temporarily changes the current working directory to "
"*path* and yields the directory."
msgstr ""

#: ../../library/test.rst:1492
msgid ""
"If *quiet* is ``False``, the context manager raises an exception on error.  "
"Otherwise, it issues only a warning and keeps the current working directory "
"the same."
msgstr ""

#: ../../library/test.rst:1499
msgid ""
"Create an empty file with *filename*.  If it already exists, truncate it."
msgstr ""

#: ../../library/test.rst:1504
msgid "Count the number of open file descriptors."
msgstr "Conta o número de descritores de arquivos abertos."

#: ../../library/test.rst:1509
msgid "Return ``True`` if the file system for *directory* is case-insensitive."
msgstr ""

#: ../../library/test.rst:1514
msgid ""
"Create an invalid file descriptor by opening and closing a temporary file, "
"and returning its descriptor."
msgstr ""
"Cria um descritor de arquivo inválido abrindo e fechando um arquivo "
"temporário e retornando seu descritor."

#: ../../library/test.rst:1520
msgid ""
"Call :func:`os.rmdir` on *filename*.  On Windows platforms, this is wrapped "
"with a wait loop that checks for the existence of the file, which is needed "
"due to antivirus programs that can hold files open and prevent deletion."
msgstr ""

#: ../../library/test.rst:1528
msgid ""
"Call :func:`shutil.rmtree` on *path* or call :func:`os.lstat` and :func:`os."
"rmdir` to remove a path and its contents.  As with :func:`rmdir`, on Windows "
"platforms this is wrapped with a wait loop that checks for the existence of "
"the files."
msgstr ""

#: ../../library/test.rst:1536
msgid "A decorator for running tests that require support for symbolic links."
msgstr ""
"Um decorador para executar testes que requerem suporte para links simbólicos."

#: ../../library/test.rst:1541
msgid "A decorator for running tests that require support for xattr."
msgstr "Um decorador para execução de testes que requerem suporte para xattr."

#: ../../library/test.rst:1546
msgid ""
"A context manager that temporarily creates a new directory and changes the "
"current working directory (CWD)."
msgstr ""
"Um gerenciador de contexto que cria temporariamente um novo diretório e "
"altera o diretório de trabalho atual (CWD)."

#: ../../library/test.rst:1549
msgid ""
"The context manager creates a temporary directory in the current directory "
"with name *name* before temporarily changing the current working directory.  "
"If *name* is ``None``, the temporary directory is created using :func:"
"`tempfile.mkdtemp`."
msgstr ""

#: ../../library/test.rst:1554
msgid ""
"If *quiet* is ``False`` and it is not possible to create or change the CWD, "
"an error is raised.  Otherwise, only a warning is raised and the original "
"CWD is used."
msgstr ""
"Se *quiet* é ``False`` e ele não possibilita criar ou alterar o CWD, um erro "
"é levantado. Por outro lado, somente um aviso surge e o CWD original é "
"utilizado."

#: ../../library/test.rst:1561
msgid ""
"A context manager that creates a temporary directory at *path* and yields "
"the directory."
msgstr ""
"Um gerenciador de contexto que cria um diretório temporário no *path* e "
"produz o diretório."

#: ../../library/test.rst:1564
msgid ""
"If *path* is ``None``, the temporary directory is created using :func:"
"`tempfile.mkdtemp`.  If *quiet* is ``False``, the context manager raises an "
"exception on error.  Otherwise, if *path* is specified and cannot be "
"created, only a warning is issued."
msgstr ""

#: ../../library/test.rst:1572
msgid "A context manager that temporarily sets the process umask."
msgstr ""
"Um gerenciador de contexto que temporariamente define o umask do processo."

#: ../../library/test.rst:1577
msgid ""
"Call :func:`os.unlink` on *filename*.  As with :func:`rmdir`, on Windows "
"platforms, this is wrapped with a wait loop that checks for the existence of "
"the file."
msgstr ""

#: ../../library/test.rst:1583
msgid ":mod:`test.support.import_helper` --- Utilities for import tests"
msgstr ""

#: ../../library/test.rst:1588
msgid ""
"The :mod:`test.support.import_helper` module provides support for import "
"tests."
msgstr ""

#: ../../library/test.rst:1595
msgid ""
"Remove the module named *module_name* from ``sys.modules`` and delete any "
"byte-compiled files of the module."
msgstr ""

#: ../../library/test.rst:1601
msgid ""
"This function imports and returns a fresh copy of the named Python module by "
"removing the named module from ``sys.modules`` before doing the import. Note "
"that unlike :func:`reload`, the original module is not affected by this "
"operation."
msgstr ""

#: ../../library/test.rst:1606
msgid ""
"*fresh* is an iterable of additional module names that are also removed from "
"the ``sys.modules`` cache before doing the import."
msgstr ""

#: ../../library/test.rst:1609
msgid ""
"*blocked* is an iterable of module names that are replaced with ``None`` in "
"the module cache during the import to ensure that attempts to import them "
"raise :exc:`ImportError`."
msgstr ""

#: ../../library/test.rst:1613
msgid ""
"The named module and any modules named in the *fresh* and *blocked* "
"parameters are saved before starting the import and then reinserted into "
"``sys.modules`` when the fresh import is complete."
msgstr ""

#: ../../library/test.rst:1617
msgid ""
"Module and package deprecation messages are suppressed during this import if "
"*deprecated* is ``True``."
msgstr ""

#: ../../library/test.rst:1620
msgid ""
"This function will raise :exc:`ImportError` if the named module cannot be "
"imported."
msgstr ""

#: ../../library/test.rst:1625
msgid ""
"# Get copies of the warnings module for testing without affecting the\n"
"# version being used by the rest of the test suite. One copy uses the\n"
"# C implementation, the other is forced to use the pure Python fallback\n"
"# implementation\n"
"py_warnings = import_fresh_module('warnings', blocked=['_warnings'])\n"
"c_warnings = import_fresh_module('warnings', fresh=['_warnings'])"
msgstr ""

#: ../../library/test.rst:1637
msgid ""
"This function imports and returns the named module. Unlike a normal import, "
"this function raises :exc:`unittest.SkipTest` if the module cannot be "
"imported."
msgstr ""

#: ../../library/test.rst:1641
msgid ""
"Module and package deprecation messages are suppressed during this import if "
"*deprecated* is ``True``.  If a module is required on a platform but "
"optional for others, set *required_on* to an iterable of platform prefixes "
"which will be compared against :data:`sys.platform`."
msgstr ""

#: ../../library/test.rst:1651
msgid "Return a copy of :data:`sys.modules`."
msgstr "Retorna a cópia de :data:`sys.modules`."

#: ../../library/test.rst:1656
msgid ""
"Remove modules except for *oldmodules* and ``encodings`` in order to "
"preserve internal cache."
msgstr ""

#: ../../library/test.rst:1662
msgid "Delete *name* from ``sys.modules``."
msgstr "Exclui o *name* de ``sys.modules``."

#: ../../library/test.rst:1667
msgid ""
"Move a :pep:`3147`/:pep:`488` pyc file to its legacy pyc location and return "
"the file system path to the legacy pyc file.  The *source* value is the file "
"system path to the source file.  It does not need to exist, however the PEP "
"3147/488 pyc file must exist."
msgstr ""

#: ../../library/test.rst:1675
msgid ""
"A context manager to force import to return a new module reference.  This is "
"useful for testing module-level behaviors, such as the emission of a :exc:"
"`DeprecationWarning` on import.  Example usage::"
msgstr ""

#: ../../library/test.rst:1679
msgid ""
"with CleanImport('foo'):\n"
"    importlib.import_module('foo')  # New reference."
msgstr ""

#: ../../library/test.rst:1685
msgid "A context manager to temporarily add directories to :data:`sys.path`."
msgstr ""

#: ../../library/test.rst:1687
msgid ""
"This makes a copy of :data:`sys.path`, appends any directories given as "
"positional arguments, then reverts :data:`sys.path` to the copied settings "
"when the context ends."
msgstr ""

#: ../../library/test.rst:1691
msgid ""
"Note that *all* :data:`sys.path` modifications in the body of the context "
"manager, including replacement of the object, will be reverted at the end of "
"the block."
msgstr ""

#: ../../library/test.rst:1697
msgid ":mod:`test.support.warnings_helper` --- Utilities for warnings tests"
msgstr ""

#: ../../library/test.rst:1702
msgid ""
"The :mod:`test.support.warnings_helper` module provides support for warnings "
"tests."
msgstr ""

#: ../../library/test.rst:1709
msgid ""
"Suppress warnings that are instances of *category*, which must be :exc:"
"`Warning` or a subclass. Roughly equivalent to :func:`warnings."
"catch_warnings` with :meth:`warnings.simplefilter('ignore', "
"category=category) <warnings.simplefilter>`. For example::"
msgstr ""

#: ../../library/test.rst:1715
msgid ""
"@warning_helper.ignore_warnings(category=DeprecationWarning)\n"
"def test_suppress_warning():\n"
"    # do something"
msgstr ""

#: ../../library/test.rst:1724
msgid ""
"Context manager to check that no :exc:`ResourceWarning` was raised.  You "
"must remove the object which may emit :exc:`ResourceWarning` before the end "
"of the context manager."
msgstr ""

#: ../../library/test.rst:1731
msgid ""
"Test for syntax warning in *statement* by attempting to compile *statement*. "
"Test also that the :exc:`SyntaxWarning` is emitted only once, and that it "
"will be converted to a :exc:`SyntaxError` when turned into error. *testcase* "
"is the :mod:`unittest` instance for the test.  *errtext* is the regular "
"expression which should match the string representation of the emitted :exc:"
"`SyntaxWarning` and raised :exc:`SyntaxError`.  If *lineno* is not ``None``, "
"compares to the line of the warning and exception. If *offset* is not "
"``None``, compares to the offset of the exception."
msgstr ""

#: ../../library/test.rst:1745
msgid ""
"A convenience wrapper for :func:`warnings.catch_warnings` that makes it "
"easier to test that a warning was correctly raised.  It is approximately "
"equivalent to calling ``warnings.catch_warnings(record=True)`` with :meth:"
"`warnings.simplefilter` set to ``always`` and with the option to "
"automatically validate the results that are recorded."
msgstr ""

#: ../../library/test.rst:1751
msgid ""
"``check_warnings`` accepts 2-tuples of the form ``(\"message regexp\", "
"WarningCategory)`` as positional arguments. If one or more *filters* are "
"provided, or if the optional keyword argument *quiet* is ``False``, it "
"checks to make sure the warnings are as expected:  each specified filter "
"must match at least one of the warnings raised by the enclosed code or the "
"test fails, and if any warnings are raised that do not match any of the "
"specified filters the test fails.  To disable the first of these checks, set "
"*quiet* to ``True``."
msgstr ""

#: ../../library/test.rst:1760
msgid "If no arguments are specified, it defaults to::"
msgstr "Se nenhum argumento é especificado, o padrão é::"

#: ../../library/test.rst:1762
msgid "check_warnings((\"\", Warning), quiet=True)"
msgstr ""

#: ../../library/test.rst:1764
msgid "In this case all warnings are caught and no errors are raised."
msgstr "Nesse caso, todos os avisos são capturados e nenhum erro é gerado."

#: ../../library/test.rst:1766
msgid ""
"On entry to the context manager, a :class:`WarningRecorder` instance is "
"returned. The underlying warnings list from :func:`~warnings.catch_warnings` "
"is available via the recorder object's :attr:`warnings` attribute.  As a "
"convenience, the attributes of the object representing the most recent "
"warning can also be accessed directly through the recorder object (see "
"example below).  If no warning has been raised, then any of the attributes "
"that would otherwise be expected on an object representing a warning will "
"return ``None``."
msgstr ""

#: ../../library/test.rst:1775
msgid ""
"The recorder object also has a :meth:`reset` method, which clears the "
"warnings list."
msgstr ""

#: ../../library/test.rst:1778
msgid "The context manager is designed to be used like this::"
msgstr "O gerenciador de contexto é desenhado para ser utilizado dessa forma::"

#: ../../library/test.rst:1780
msgid ""
"with check_warnings((\"assertion is always true\", SyntaxWarning),\n"
"                    (\"\", UserWarning)):\n"
"    exec('assert(False, \"Hey!\")')\n"
"    warnings.warn(UserWarning(\"Hide me!\"))"
msgstr ""

#: ../../library/test.rst:1785
msgid ""
"In this case if either warning was not raised, or some other warning was "
"raised, :func:`check_warnings` would raise an error."
msgstr ""
"No caso, se um aviso não foi levantado, ou algum outro aviso não foi "
"levantado, :func:`check_warnings` deveria aparecer como um erro."

#: ../../library/test.rst:1788
msgid ""
"When a test needs to look more deeply into the warnings, rather than just "
"checking whether or not they occurred, code like this can be used::"
msgstr ""

#: ../../library/test.rst:1791
msgid ""
"with check_warnings(quiet=True) as w:\n"
"    warnings.warn(\"foo\")\n"
"    assert str(w.args[0]) == \"foo\"\n"
"    warnings.warn(\"bar\")\n"
"    assert str(w.args[0]) == \"bar\"\n"
"    assert str(w.warnings[0].args[0]) == \"foo\"\n"
"    assert str(w.warnings[1].args[0]) == \"bar\"\n"
"    w.reset()\n"
"    assert len(w.warnings) == 0"
msgstr ""

#: ../../library/test.rst:1802
msgid ""
"Here all warnings will be caught, and the test code tests the captured "
"warnings directly."
msgstr ""
"Aqui todos os avisos serão capturados e o código de teste testa os avisos "
"diretamente capturados."

#: ../../library/test.rst:1805
msgid "New optional arguments *filters* and *quiet*."
msgstr "Novos argumentos opcionais *filters* e *quiet*."

#: ../../library/test.rst:1811
msgid ""
"Class used to record warnings for unit tests. See documentation of :func:"
"`check_warnings` above for more details."
msgstr ""
