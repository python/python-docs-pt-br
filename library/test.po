# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-09 18:46+0900\n"
"PO-Revision-Date: 2019-03-06 07:02+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Portuguese (Brazil) (http://www.transifex.com/python-doc/"
"python-27/language/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../library/test.rst:3
msgid ":mod:`test` --- Regression tests package for Python"
msgstr ":mod:`test` --- Pacote de Testes de Regressão do Python"

#: ../../library/test.rst:10
msgid ""
"The :mod:`test` package is meant for internal use by Python only. It is "
"documented for the benefit of the core developers of Python. Any use of this "
"package outside of Python's standard library is discouraged as code "
"mentioned here can change or be removed without notice between releases of "
"Python."
msgstr ""
"O pacote :mod:`test` é apenas para uso interno do Python. O mesmo está sendo "
"documentado para o benefício dos principais desenvolvedores do Python. "
"Qualquer uso deste pacote fora da biblioteca padrão do Python é "
"desencorajado, pois, o código mencionado aqui pode ser alterado ou removido "
"sem aviso prévio entre as versões do Python."

#: ../../library/test.rst:17
msgid ""
"The :mod:`test` package contains all regression tests for Python as well as "
"the modules :mod:`test.support` and :mod:`test.regrtest`. :mod:`test."
"support` is used to enhance your tests while :mod:`test.regrtest` drives the "
"testing suite."
msgstr ""
"O pacote :mod:`test` contém todos os testes de regressão do Python, bem como "
"os módulos :mod:`test.support` e :mod:`test.regrtest`. O :mod:`test.support` "
"é usado para aprimorar seus testes enquanto o :mod:` test.regrtest` conduz "
"(guia) o conjunto de testes."

#: ../../library/test.rst:22
msgid ""
"Each module in the :mod:`test` package whose name starts with ``test_`` is a "
"testing suite for a specific module or feature. All new tests should be "
"written using the :mod:`unittest` or :mod:`doctest` module.  Some older "
"tests are written using a \"traditional\" testing style that compares output "
"printed to ``sys.stdout``; this style of test is considered deprecated."
msgstr ""
"Cada módulo no pacote :mod: `test` cujo nome começa com ``test_`` é um "
"conjunto de testes para um módulo ou recurso específico. Todos os novos "
"testes devem ser escritos usando o módulo :mod:`unittest` ou :mod:`doctest`. "
"Alguns testes mais antigos são escritos usando um estilo de teste "
"\"tradicional\" que compara a saída impressa em ``sys.stdout``; Este estilo "
"de teste foi considerado obsoleto."

#: ../../library/test.rst:32
msgid "Module :mod:`unittest`"
msgstr "Módulo :mod:`unittest`"

#: ../../library/test.rst:32
msgid "Writing PyUnit regression tests."
msgstr "Escrevendo testes de regressão PyUnit."

#: ../../library/test.rst:34
msgid "Module :mod:`doctest`"
msgstr "Módulo :mod:`doctest`"

#: ../../library/test.rst:35
msgid "Tests embedded in documentation strings."
msgstr "Testes embutidos em Strings da documentação."

#: ../../library/test.rst:41
msgid "Writing Unit Tests for the :mod:`test` package"
msgstr "Escrever testes unitáriops para o pacote :mod:`test`"

#: ../../library/test.rst:43
msgid ""
"It is preferred that tests that use the :mod:`unittest` module follow a few "
"guidelines. One is to name the test module by starting it with ``test_`` and "
"end it with the name of the module being tested. The test methods in the "
"test module should start with ``test_`` and end with a description of what "
"the method is testing. This is needed so that the methods are recognized by "
"the test driver as test methods. Also, no documentation string for the "
"method should be included. A comment (such as ``# Tests function returns "
"only True or False``) should be used to provide documentation for test "
"methods. This is done because documentation strings get printed out if they "
"exist and thus what test is being run is not stated."
msgstr ""
"É preferível que os testes que usam o módulo :mod:`unittest` sigam algumas "
"diretrizes. Uma é nomear o módulo de teste iniciando-o com ``test_``` e "
"termine com o nome do módulo que está sendo testado. Os métodos de teste no "
"módulo de teste deve começar com ``test_`` e terminar com uma descrição do "
"que o método está testando. Isso é necessário para que os métodos sejam "
"reconhecidos pelo driver de teste como métodos de teste. Além disso, na "
"string de documentação para o método deve ser incluído. Um comentário (como "
"os ``# Tests function returns only True or False``) deve ser usado para "
"fornecer documentação para testar métodos. Isso é feito porque as strings de "
"documentação são impressas se existem e, portanto, qual teste está sendo "
"executado não é indicado."

#: ../../library/test.rst:54
msgid "A basic boilerplate is often used::"
msgstr "Um boilerplate básico é muitas vezes usado::"

#: ../../library/test.rst:93
msgid ""
"This boilerplate code allows the testing suite to be run by :mod:`test."
"regrtest` as well as on its own as a script."
msgstr ""

#: ../../library/test.rst:96
msgid ""
"The goal for regression testing is to try to break code. This leads to a few "
"guidelines to be followed:"
msgstr ""
"O objetivo do teste de regressão é tentar quebrar o código. Isso leva a "
"algumas diretrizes que devemos seguir: "

#: ../../library/test.rst:99
msgid ""
"The testing suite should exercise all classes, functions, and constants. "
"This includes not just the external API that is to be presented to the "
"outside world but also \"private\" code."
msgstr ""
"O conjunto de testes deve exercitar todas as classes, funções e constantes. "
"Isso inclui não apenas a API externa que deve ser apresentada ao mundo "
"exterior, mas também o código \"privado\"."

#: ../../library/test.rst:103
msgid ""
"Whitebox testing (examining the code being tested when the tests are being "
"written) is preferred. Blackbox testing (testing only the published user "
"interface) is not complete enough to make sure all boundary and edge cases "
"are tested."
msgstr ""
"Os testes de Whitebox (que examinam o código que está sendo testado quando "
"os testes estão sendo gravados) são preferidos. O teste Blackbox (que testa "
"apenas a interface do público de usuário) não é completo o suficiente para "
"garantir que todos os casos de limite e extremos sejam testados."

#: ../../library/test.rst:108
msgid ""
"Make sure all possible values are tested including invalid ones. This makes "
"sure that not only all valid values are acceptable but also that improper "
"values are handled correctly."
msgstr ""
"Certifique-se de que todos os valores possíveis sejam testados, incluindo os "
"inválidos. Isso garante que não apenas todos os valores válidos são aceitos, "
"mas também, que os valores impróprios são tratados corretamente."

#: ../../library/test.rst:112
msgid ""
"Exhaust as many code paths as possible. Test where branching occurs and thus "
"tailor input to make sure as many different paths through the code are taken."
msgstr ""
"Esgote o maior número possível de caminhos de código. Teste onde ocorre a "
"ramificação e, assim, personalize a entrada para garantir que tantos "
"caminhos diferentes pelo código sejam tomados."

#: ../../library/test.rst:115
msgid ""
"Add an explicit test for any bugs discovered for the tested code. This will "
"make sure that the error does not crop up again if the code is changed in "
"the future."
msgstr ""
"Adicione um teste explícito para quaisquer bugs descobertos ao código "
"testado. Isso garantirá que o erro não apareça novamente se o código for "
"alterado no futuro."

#: ../../library/test.rst:119
msgid ""
"Make sure to clean up after your tests (such as close and remove all "
"temporary files)."
msgstr ""
"Certifique-se de limpar após seus testes (como fechar e remover todos os "
"arquivos temporários)."

#: ../../library/test.rst:122
msgid ""
"If a test is dependent on a specific condition of the operating system then "
"verify the condition already exists before attempting the test."
msgstr ""
"Se um teste depende de uma condição específica do sistema operacional, então "
"verifique se a condição já existe antes de tentar o teste."

#: ../../library/test.rst:125
msgid ""
"Import as few modules as possible and do it as soon as possible. This "
"minimizes external dependencies of tests and also minimizes possible "
"anomalous behavior from side-effects of importing a module."
msgstr ""
"Importe o menor número de módulos possível e faça isso o mais rápido "
"possível. Isso minimiza dependências externas de testes, e também minimiza "
"possíveis comportamento anômalo dos efeitos colaterais da importação de um "
"módulo."

#: ../../library/test.rst:129
msgid ""
"Try to maximize code reuse. On occasion, tests will vary by something as "
"small as what type of input is used. Minimize code duplication by "
"subclassing a basic test class with a class that specifies the input::"
msgstr ""
"Tente maximizar a reutilização de código. Ocasionalmente, os testes variam "
"em algo tão pequeno quanto o tipo de entrada é usado. Minimize a duplicação "
"de código subclassificando uma classe de teste básica com uma classe que "
"especifica o input::"

#: ../../library/test.rst:152
msgid "Test Driven Development"
msgstr "Test Driven Development"

#: ../../library/test.rst:153
msgid "A book by Kent Beck on writing tests before code."
msgstr "Um livro de Kent Beck sobre escrita de testes antes do código."

#: ../../library/test.rst:159
msgid "Running tests using the command-line interface"
msgstr "Executando testes usando a interface de linha de comando"

#: ../../library/test.rst:161
msgid ""
"The :mod:`test.regrtest` module can be run as a script to drive Python's "
"regression test suite, thanks to the :option:`-m` option: :program:`python -"
"m test.regrtest`. Running the script by itself automatically starts running "
"all regression tests in the :mod:`test` package. It does this by finding all "
"modules in the package whose name starts with ``test_``, importing them, and "
"executing the function :func:`test_main` if present. The names of tests to "
"execute may also be passed to the script. Specifying a single regression "
"test (:program:`python -m test.regrtest test_spam`) will minimize output and "
"only print whether the test passed or failed and thus minimize output."
msgstr ""

#: ../../library/test.rst:171
msgid ""
"Running :mod:`test.regrtest` directly allows what resources are available "
"for tests to use to be set. You do this by using the ``-u`` command-line "
"option. Specifying ``all`` as the value for the ``-u`` option enables all "
"possible resources: :program:`python -m test.regrtest -uall`. If all but one "
"resource is desired (a more common case), a comma-separated list of "
"resources that are not desired may be listed after ``all``. The command :"
"program:`python -m test.regrtest -uall,-audio,-largefile` will run :mod:"
"`test.regrtest` with all resources except the ``audio`` and ``largefile`` "
"resources. For a list of all resources and more command-line options, run :"
"program:`python -m test.regrtest -h`."
msgstr ""

#: ../../library/test.rst:182
msgid ""
"Some other ways to execute the regression tests depend on what platform the "
"tests are being executed on. On Unix, you can run :program:`make test` at "
"the top-level directory where Python was built. On Windows, executing :"
"program:`rt.bat` from your :file:`PCBuild` directory will run all regression "
"tests."
msgstr ""

#: ../../library/test.rst:188
msgid ""
"The :mod:`test` package can be run as a script: :program:`python -m test`. "
"This works the same as running the :mod:`test.regrtest` module."
msgstr ""

#: ../../library/test.rst:194
msgid ":mod:`test.support` --- Utility functions for tests"
msgstr ""

#: ../../library/test.rst:201
msgid ""
"The :mod:`test.test_support` module has been renamed to :mod:`test.support` "
"in Python 3.x and 2.7.14.  The name ``test.test_support`` has been retained "
"as an alias in 2.7."
msgstr ""

#: ../../library/test.rst:205
msgid ""
"The :mod:`test.support` module provides support for Python's regression "
"tests."
msgstr ""

#: ../../library/test.rst:208
msgid "This module defines the following exceptions:"
msgstr "Esse módulo define as seguintes exceções:"

#: ../../library/test.rst:213
msgid ""
"Exception to be raised when a test fails. This is deprecated in favor of :"
"mod:`unittest`\\ -based tests and :class:`unittest.TestCase`'s assertion "
"methods."
msgstr ""
"Exceção a ser levantada quando um teste falha. Isto foi descontinuado em "
"favor dos testes baseados em :mod:`unittest` e métodos de asserção de :class:"
"`unittest.TestCase`."

#: ../../library/test.rst:220
msgid ""
"Subclass of :exc:`unittest.SkipTest`. Raised when a resource (such as a "
"network connection) is not available. Raised by the :func:`requires` "
"function."
msgstr ""
"Subclasse de :exc:`unittest.SkipTest`. Levantada quando um recurso (como uma "
"conexão de rede) não está disponível. Levantada pela função :func:`requires`."

#: ../../library/test.rst:224
msgid "The :mod:`test.support` module defines the following constants:"
msgstr "O módulo :mod:`test.support` define as seguintes constantes:"

#: ../../library/test.rst:229
msgid ""
":const:`True` when verbose output is enabled. Should be checked when more "
"detailed information is desired about a running test. *verbose* is set by :"
"mod:`test.regrtest`."
msgstr ""

#: ../../library/test.rst:236
msgid ":const:`True` when Unicode support is available."
msgstr ""

#: ../../library/test.rst:241
msgid ":const:`True` if the running interpreter is Jython."
msgstr ""

#: ../../library/test.rst:246
msgid ""
"Set to a name that is safe to use as the name of a temporary file.  Any "
"temporary file that is created should be closed and unlinked (removed)."
msgstr ""

#: ../../library/test.rst:252
msgid "Define the URL of a dedicated HTTP server for the network tests."
msgstr ""

#: ../../library/test.rst:254
msgid "The :mod:`test.support` module defines the following functions:"
msgstr "O módulo :mod:`test.support` define as seguintes funções:"

#: ../../library/test.rst:259
msgid ""
"Remove the module named *module_name* from ``sys.modules`` and delete any "
"byte-compiled files of the module."
msgstr ""

#: ../../library/test.rst:265
msgid ""
"Return :const:`True` if *resource* is enabled and available. The list of "
"available resources is only set when :mod:`test.regrtest` is executing the "
"tests."
msgstr ""

#: ../../library/test.rst:272
msgid ""
"Raise :exc:`ResourceDenied` if *resource* is not available. *msg* is the "
"argument to :exc:`ResourceDenied` if it is raised. Always returns :const:"
"`True` if called by a function whose ``__name__`` is ``'__main__'``. Used "
"when tests are executed by :mod:`test.regrtest`."
msgstr ""

#: ../../library/test.rst:280
msgid ""
"Return the path to the file named *filename*. If no match is found "
"*filename* is returned. This does not equal a failure since it could be the "
"path to the file."
msgstr ""

#: ../../library/test.rst:287
msgid ""
"Execute :class:`unittest.TestCase` subclasses passed to the function. The "
"function scans the classes for methods starting with the prefix ``test_`` "
"and executes the tests individually."
msgstr ""

#: ../../library/test.rst:291
msgid ""
"It is also legal to pass strings as parameters; these should be keys in "
"``sys.modules``. Each associated module will be scanned by ``unittest."
"TestLoader.loadTestsFromModule()``. This is usually seen in the following :"
"func:`test_main` function::"
msgstr ""

#: ../../library/test.rst:299
msgid "This will run all tests defined in the named module."
msgstr ""

#: ../../library/test.rst:304
msgid ""
"A convenience wrapper for :func:`warnings.catch_warnings()` that makes it "
"easier to test that a warning was correctly raised.  It is approximately "
"equivalent to calling ``warnings.catch_warnings(record=True)`` with :meth:"
"`warnings.simplefilter` set to ``always`` and with the option to "
"automatically validate the results that are recorded."
msgstr ""

#: ../../library/test.rst:310
msgid ""
"``check_warnings`` accepts 2-tuples of the form ``(\"message regexp\", "
"WarningCategory)`` as positional arguments. If one or more *filters* are "
"provided, or if the optional keyword argument *quiet* is :const:`False`, it "
"checks to make sure the warnings are as expected:  each specified filter "
"must match at least one of the warnings raised by the enclosed code or the "
"test fails, and if any warnings are raised that do not match any of the "
"specified filters the test fails.  To disable the first of these checks, set "
"*quiet* to :const:`True`."
msgstr ""

#: ../../library/test.rst:319
msgid "If no arguments are specified, it defaults to::"
msgstr "Se nenhum argumento é especificado, o padrão é::"

#: ../../library/test.rst:323
msgid "In this case all warnings are caught and no errors are raised."
msgstr "Nesse caso, todos os avisos são capturados e nenhum erro é gerado."

#: ../../library/test.rst:325
msgid ""
"On entry to the context manager, a :class:`WarningRecorder` instance is "
"returned. The underlying warnings list from :func:`~warnings.catch_warnings` "
"is available via the recorder object's :attr:`warnings` attribute.  As a "
"convenience, the attributes of the object representing the most recent "
"warning can also be accessed directly through the recorder object (see "
"example below).  If no warning has been raised, then any of the attributes "
"that would otherwise be expected on an object representing a warning will "
"return :const:`None`."
msgstr ""

#: ../../library/test.rst:334
msgid ""
"The recorder object also has a :meth:`reset` method, which clears the "
"warnings list."
msgstr ""

#: ../../library/test.rst:337
msgid "The context manager is designed to be used like this::"
msgstr "O gerenciador de contexto é desenhado para ser utilizado dessa forma::"

#: ../../library/test.rst:344
msgid ""
"In this case if either warning was not raised, or some other warning was "
"raised, :func:`check_warnings` would raise an error."
msgstr ""
"No caso, se um aviso não foi levantado, ou algum outro aviso não foi "
"levantado, :func:`check_warnings` deveria aparecer como um erro."

#: ../../library/test.rst:347
msgid ""
"When a test needs to look more deeply into the warnings, rather than just "
"checking whether or not they occurred, code like this can be used::"
msgstr ""

#: ../../library/test.rst:360
msgid ""
"Here all warnings will be caught, and the test code tests the captured "
"warnings directly."
msgstr ""
"Aqui todos os avisos serão capturados e o código de teste testa os avisos "
"diretamente capturados."

#: ../../library/test.rst:364
msgid "New optional arguments *filters* and *quiet*."
msgstr "Novos argumentos opcionais *filters* e *quiet*."

#: ../../library/test.rst:370
msgid ""
"Similar to :func:`check_warnings`, but for Python 3 compatibility warnings. "
"If ``sys.py3kwarning == 1``, it checks if the warning is effectively raised. "
"If ``sys.py3kwarning == 0``, it checks that no warning is raised.  It "
"accepts 2-tuples of the form ``(\"message regexp\", WarningCategory)`` as "
"positional arguments.  When the optional keyword argument *quiet* is :const:"
"`True`, it does not fail if a filter catches nothing.  Without arguments, it "
"defaults to::"
msgstr ""

#: ../../library/test.rst:385
msgid ""
"This is a context manager that runs the :keyword:`with` statement body using "
"a :class:`StringIO.StringIO` object as sys.stdout.  That object can be "
"retrieved using the ``as`` clause of the :keyword:`with` statement."
msgstr ""

#: ../../library/test.rst:389 ../../library/test.rst:434
msgid "Example use::"
msgstr "Exemplo de uso::"

#: ../../library/test.rst:400
msgid ""
"This function imports and returns the named module. Unlike a normal import, "
"this function raises :exc:`unittest.SkipTest` if the module cannot be "
"imported."
msgstr ""

#: ../../library/test.rst:404 ../../library/test.rst:428
msgid ""
"Module and package deprecation messages are suppressed during this import if "
"*deprecated* is :const:`True`."
msgstr ""

#: ../../library/test.rst:412
msgid ""
"This function imports and returns a fresh copy of the named Python module by "
"removing the named module from ``sys.modules`` before doing the import. Note "
"that unlike :func:`reload`, the original module is not affected by this "
"operation."
msgstr ""

#: ../../library/test.rst:417
msgid ""
"*fresh* is an iterable of additional module names that are also removed from "
"the ``sys.modules`` cache before doing the import."
msgstr ""

#: ../../library/test.rst:420
msgid ""
"*blocked* is an iterable of module names that are replaced with :const:`0` "
"in the module cache during the import to ensure that attempts to import them "
"raise :exc:`ImportError`."
msgstr ""

#: ../../library/test.rst:424
msgid ""
"The named module and any modules named in the *fresh* and *blocked* "
"parameters are saved before starting the import and then reinserted into "
"``sys.modules`` when the fresh import is complete."
msgstr ""

#: ../../library/test.rst:431
msgid ""
"This function will raise :exc:`unittest.SkipTest` if the named module cannot "
"be imported."
msgstr ""

#: ../../library/test.rst:446
msgid "The :mod:`test.support` module defines the following classes:"
msgstr ""

#: ../../library/test.rst:450
msgid ""
"Instances are a context manager that raises :exc:`ResourceDenied` if the "
"specified exception type is raised.  Any keyword arguments are treated as "
"attribute/value pairs to be compared against any exception raised within "
"the :keyword:`with` statement.  Only if all pairs match properly against "
"attributes on the exception is :exc:`ResourceDenied` raised."
msgstr ""

#: ../../library/test.rst:459
msgid ""
"Class used to temporarily set or unset environment variables.  Instances can "
"be used as a context manager and have a complete dictionary interface for "
"querying/modifying the underlying ``os.environ``. After exit from the "
"context manager all changes to environment variables done through this "
"instance will be rolled back."
msgstr ""

#: ../../library/test.rst:466
msgid "Added dictionary interface."
msgstr "Adicionada uma interface para dicionário."

#: ../../library/test.rst:472
msgid ""
"Temporarily set the environment variable ``envvar`` to the value of "
"``value``."
msgstr ""
"Temporariamente define a variável de ambiente ``envvar`` para o valor "
"``value``."

#: ../../library/test.rst:478
msgid "Temporarily unset the environment variable ``envvar``."
msgstr "Desativa temporariamente a variável de ambiente ``envvar``."

#: ../../library/test.rst:483
msgid ""
"Class used to record warnings for unit tests. See documentation of :func:"
"`check_warnings` above for more details."
msgstr ""
