# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-09 18:46+0900\n"
"PO-Revision-Date: 2020-04-29 11:54+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>\n"
"Language-Team: Portuguese (Brazil) (http://www.transifex.com/python-doc/"
"python-27/language/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../library/xml.rst:4
msgid "XML Processing Modules"
msgstr "Módulos de Processamento de XML"

#: ../../library/xml.rst:12
msgid ""
"Python's interfaces for processing XML are grouped in the ``xml`` package."
msgstr ""
"As interfaces do Python para processar XML estão agrupadas no pacote ``xml``."

#: ../../library/xml.rst:16
msgid ""
"The XML modules are not secure against erroneous or maliciously constructed "
"data.  If you need to parse untrusted or unauthenticated data see :ref:`xml-"
"vulnerabilities`."
msgstr ""

#: ../../library/xml.rst:20
msgid ""
"It is important to note that modules in the :mod:`xml` package require that "
"there be at least one SAX-compliant XML parser available. The Expat parser "
"is included with Python, so the :mod:`xml.parsers.expat` module will always "
"be available."
msgstr ""
"É importante observar que os módulos no pacote :mod:`xml` exigem que está "
"disponível pelo menos um analisador sintático XML compatível com SAX. O "
"analisador sintático Expat está incluído no Python, então o módulo :mod:`xml."
"parsers.expat` estará sempre disponível."

#: ../../library/xml.rst:25
msgid ""
"The documentation for the :mod:`xml.dom` and :mod:`xml.sax` packages are the "
"definition of the Python bindings for the DOM and SAX interfaces."
msgstr ""
"A documentação para os pacotes :mod:`xml.dom` e :mod:`xml.sax` são a "
"definição das ligações Python para as interfaces DOM e SAX."

#: ../../library/xml.rst:28
msgid "The XML handling submodules are:"
msgstr "Os submódulos de manipulação XML são:"

#: ../../library/xml.rst:30
msgid ""
":mod:`xml.etree.ElementTree`: the ElementTree API, a simple and lightweight "
"XML processor"
msgstr ""
":mod:`xml.etree.ElementTree`: a API de ElementTree, um processador XML "
"simples e leve"

#: ../../library/xml.rst:35
msgid ":mod:`xml.dom`: the DOM API definition"
msgstr ":mod:`xml.dom`: a definição da API de DOM"

#: ../../library/xml.rst:36
msgid ":mod:`xml.dom.minidom`: a minimal DOM implementation"
msgstr ":mod:`xml.dom.minidom`: uma implementação mínima do DOM"

#: ../../library/xml.rst:37
msgid ":mod:`xml.dom.pulldom`: support for building partial DOM trees"
msgstr ""
"suporte para construir árvores parciais de DOM no :mod:`xml.dom.pulldom`"

#: ../../library/xml.rst:41
msgid ":mod:`xml.sax`: SAX2 base classes and convenience functions"
msgstr ":mod:`xml.sax`: Classe base SAX2 e funções de conveniência"

#: ../../library/xml.rst:42
msgid ":mod:`xml.parsers.expat`: the Expat parser binding"
msgstr ":mod:`xml.parsers.expat`: a ligação do analisador sintático Expat"

#: ../../library/xml.rst:48
msgid "XML vulnerabilities"
msgstr "Vulnerabilidades em XML"

#: ../../library/xml.rst:50
msgid ""
"The XML processing modules are not secure against maliciously constructed "
"data. An attacker can abuse vulnerabilities for e.g. denial of service "
"attacks, to access local files, to generate network connections to other "
"machines, or to or circumvent firewalls. The attacks on XML abuse unfamiliar "
"features like inline `DTD`_ (document type definition) with entities."
msgstr ""

#: ../../library/xml.rst:56
msgid ""
"The following table gives an overview of the known attacks and if the "
"various modules are vulnerable to them."
msgstr ""

#: ../../library/xml.rst:60
msgid "kind"
msgstr "tipo"

#: ../../library/xml.rst:60
msgid "sax"
msgstr "sax"

#: ../../library/xml.rst:60
msgid "etree"
msgstr "etree"

#: ../../library/xml.rst:60
msgid "minidom"
msgstr "minidom"

#: ../../library/xml.rst:60
msgid "pulldom"
msgstr "pulldom"

#: ../../library/xml.rst:60
msgid "xmlrpc"
msgstr "xmlrpc"

#: ../../library/xml.rst:62
msgid "billion laughs"
msgstr "billion laughs"

#: ../../library/xml.rst:62 ../../library/xml.rst:63 ../../library/xml.rst:64
#: ../../library/xml.rst:65 ../../library/xml.rst:66
msgid "**Vulnerable**"
msgstr "**Vulnerável**"

#: ../../library/xml.rst:63
msgid "quadratic blowup"
msgstr "quadratic blowup"

#: ../../library/xml.rst:64 ../../library/xml.rst:95
msgid "external entity expansion"
msgstr "external entity expansion"

#: ../../library/xml.rst:64
msgid "Safe    (1)"
msgstr ""

#: ../../library/xml.rst:64
msgid "Safe    (2)"
msgstr ""

#: ../../library/xml.rst:64
msgid "Safe    (3)"
msgstr ""

#: ../../library/xml.rst:65 ../../library/xml.rst:100
msgid "`DTD`_ retrieval"
msgstr "`DTD`_ retrieval"

#: ../../library/xml.rst:65 ../../library/xml.rst:66
msgid "Safe"
msgstr "Seguro"

#: ../../library/xml.rst:66 ../../library/xml.rst:106
msgid "decompression bomb"
msgstr "decompression bomb"

#: ../../library/xml.rst:69
msgid ""
":mod:`xml.etree.ElementTree` doesn't expand external entities and raises a "
"ParserError when an entity occurs."
msgstr ""

#: ../../library/xml.rst:71
msgid ""
":mod:`xml.dom.minidom` doesn't expand external entities and simply returns "
"the unexpanded entity verbatim."
msgstr ""
":mod:`xml.dom.minidom` não expande entidades externas e simplesmente retorna "
"a entidade não expandida literalmente."

#: ../../library/xml.rst:73
msgid ":mod:`xmlrpclib` doesn't expand external entities and omits them."
msgstr ""

#: ../../library/xml.rst:81
msgid "billion laughs / exponential entity expansion"
msgstr "billion laughs / exponential entity expansion"

#: ../../library/xml.rst:77
msgid ""
"The `Billion Laughs`_ attack -- also known as exponential entity expansion "
"-- uses multiple levels of nested entities. Each entity refers to another "
"entity several times, the final entity definition contains a small string. "
"Eventually the small string is expanded to several gigabytes. The "
"exponential expansion consumes lots of CPU time, too."
msgstr ""

#: ../../library/xml.rst:88
msgid "quadratic blowup entity expansion"
msgstr "quadratic blowup entity expansion"

#: ../../library/xml.rst:84
msgid ""
"A quadratic blowup attack is similar to a `Billion Laughs`_ attack; it "
"abuses entity expansion, too. Instead of nested entities it repeats one "
"large entity with a couple of thousand chars over and over again. The attack "
"isn't as efficient as the exponential case but it avoids triggering "
"countermeasures of parsers against heavily nested entities."
msgstr ""

#: ../../library/xml.rst:91
msgid ""
"Entity declarations can contain more than just text for replacement. They "
"can also point to external resources by public identifiers or system "
"identifiers. System identifiers are standard URIs or can refer to local "
"files. The XML parser retrieves the resource with e.g. HTTP or FTP requests "
"and embeds the content into the XML document."
msgstr ""

#: ../../library/xml.rst:98
msgid ""
"Some XML libraries like Python's :mod:`xml.dom.pulldom` retrieve document "
"type definitions from remote or local locations. The feature has similar "
"implications as the external entity expansion issue."
msgstr ""
"Algumas bibliotecas XML, como a :mod:`xml.dom.pulldom` do Python, recuperam "
"definições de tipo de documento de locais remotos ou locais. O recurso tem "
"implicações semelhantes ao problema de expansão de entidade externa."

#: ../../library/xml.rst:103
msgid ""
"The issue of decompression bombs (aka `ZIP bomb`_) apply to all XML "
"libraries that can parse compressed XML stream like gzipped HTTP streams or "
"LZMA-ed files. For an attacker it can reduce the amount of transmitted data "
"by three magnitudes or more."
msgstr ""

#: ../../library/xml.rst:108
msgid ""
"The documentation of `defusedxml`_ on PyPI has further information about all "
"known attack vectors with examples and references."
msgstr ""

#: ../../library/xml.rst:112
msgid "defused packages"
msgstr ""

#: ../../library/xml.rst:114
msgid ""
"These external packages are recommended for any code that parses untrusted "
"XML data."
msgstr ""

#: ../../library/xml.rst:117
msgid ""
"`defusedxml`_ is a pure Python package with modified subclasses of all "
"stdlib XML parsers that prevent any potentially malicious operation. The "
"package also ships with example exploits and extended documentation on more "
"XML exploits like xpath injection."
msgstr ""

#: ../../library/xml.rst:122
msgid ""
"`defusedexpat`_ provides a modified libexpat and patched replacement :mod:"
"`pyexpat` extension module with countermeasures against entity expansion DoS "
"attacks. Defusedexpat still allows a sane and configurable amount of entity "
"expansions. The modifications will be merged into future releases of Python."
msgstr ""

#: ../../library/xml.rst:127
msgid ""
"The workarounds and modifications are not included in patch releases as they "
"break backward compatibility. After all inline DTD and entity expansion are "
"well-defined XML features."
msgstr ""
