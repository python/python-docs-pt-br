# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# i17obot <i17obot@rougeth.com>, 2021
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-31 10:59+0000\n"
"PO-Revision-Date: 2021-06-28 01:06+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/fileinput.rst:2
msgid ":mod:`!fileinput` --- Iterate over lines from multiple input streams"
msgstr ""
":mod:`!fileinput` --- Itera sobre linhas de múltiplos fluxos de entrada"

#: ../../library/fileinput.rst:10
msgid "**Source code:** :source:`Lib/fileinput.py`"
msgstr "**Código-fonte:** :source:`Lib/fileinput.py`"

#: ../../library/fileinput.rst:14
msgid ""
"This module implements a helper class and functions to quickly write a loop "
"over standard input or a list of files. If you just want to read or write "
"one file see :func:`open`."
msgstr ""
"Este módulo implementa uma classe auxiliar e funções para escrever "
"rapidamente um laço sobre uma entrada padrão ou uma lista de arquivos. Se "
"você quiser apenas ler ou escrever um arquivo veja :func:`open`."

#: ../../library/fileinput.rst:18
msgid "The typical use is::"
msgstr "O uso típico é::"

#: ../../library/fileinput.rst:20
msgid ""
"import fileinput\n"
"for line in fileinput.input(encoding=\"utf-8\"):\n"
"    process(line)"
msgstr ""

#: ../../library/fileinput.rst:24
msgid ""
"This iterates over the lines of all files listed in ``sys.argv[1:]``, "
"defaulting to ``sys.stdin`` if the list is empty.  If a filename is ``'-'``, "
"it is also replaced by ``sys.stdin`` and the optional arguments *mode* and "
"*openhook* are ignored.  To specify an alternative list of filenames, pass "
"it as the first argument to :func:`.input`.  A single file name is also "
"allowed."
msgstr ""
"Isto itera sobre as linhas de todos os arquivos listados em ``sys."
"argv[1:]``, padronizando ``sys.stdin`` se a lista estiver vazia. Se o nome "
"de um arquivo for ``'-'``, ele também será substituído por ``sys.stdin`` e "
"os argumentos opcionais *mode* e *openhook* serão ignorados. Para "
"especificar uma lista alternativa de nomes de arquivos, passe-a como "
"primeiro argumento para :func:`.input`. Um único nome de arquivo também é "
"permitido."

#: ../../library/fileinput.rst:30
msgid ""
"All files are opened in text mode by default, but you can override this by "
"specifying the *mode* parameter in the call to :func:`.input` or :class:"
"`FileInput`.  If an I/O error occurs during opening or reading a file, :exc:"
"`OSError` is raised."
msgstr ""
"Todos os arquivos são abertos em modo texto por padrão, mas você pode "
"substituir isso especificando o parâmetro *mode* na chamada para :func:`."
"input` ou :class:`FileInput`. Se ocorrer um erro de E/S durante a abertura "
"ou leitura de um arquivo, :exc:`OSError` será levantada."

#: ../../library/fileinput.rst:35
msgid ":exc:`IOError` used to be raised; it is now an alias of :exc:`OSError`."
msgstr ""
":exc:`IOError` costumava ser levantada; agora é um apelido de :exc:`OSError`."

#: ../../library/fileinput.rst:38
msgid ""
"If ``sys.stdin`` is used more than once, the second and further use will "
"return no lines, except perhaps for interactive use, or if it has been "
"explicitly reset (e.g. using ``sys.stdin.seek(0)``)."
msgstr ""
"Se ``sys.stdin`` for usado mais de uma vez, o segundo e posterior uso não "
"retornará nenhuma linha, exceto talvez para uso interativo, ou se tiver sido "
"explicitamente redefinido (por exemplo, usando ``sys.stdin.seek(0)``)."

#: ../../library/fileinput.rst:42
msgid ""
"Empty files are opened and immediately closed; the only time their presence "
"in the list of filenames is noticeable at all is when the last file opened "
"is empty."
msgstr ""
"Arquivos vazios são abertos e fechados imediatamente; a única vez que sua "
"presença na lista de nomes de arquivos é perceptível é quando o último "
"arquivo aberto está vazio."

#: ../../library/fileinput.rst:46
msgid ""
"Lines are returned with any newlines intact, which means that the last line "
"in a file may not have one."
msgstr ""
"As linhas são retornadas com novas linhas intactas, o que significa que a "
"última linha de um arquivo pode não ter nenhuma."

#: ../../library/fileinput.rst:49
msgid ""
"You can control how files are opened by providing an opening hook via the "
"*openhook* parameter to :func:`fileinput.input` or :func:`FileInput`. The "
"hook must be a function that takes two arguments, *filename* and *mode*, and "
"returns an accordingly opened file-like object. If *encoding* and/or "
"*errors* are specified, they will be passed to the hook as additional "
"keyword arguments. This module provides a :func:`hook_compressed` to support "
"compressed files."
msgstr ""
"Você pode controlar como os arquivos são abertos fornecendo um gancho de "
"abertura através do parâmetro *openhook* para :func:`fileinput.input` ou :"
"func:`FileInput`. O gancho deve ser uma função que recebe dois argumentos, "
"*filename* e *mode*, e retorna um objeto arquivo ou similar aberto de "
"acordo. Se *encoding* e/ou *errors* forem especificados, eles serão passados ​​"
"para o gancho como argumentos nomeados adicionais. Este módulo fornece um :"
"func:`hook_compressed` para oferece suporte a arquivos compactados."

#: ../../library/fileinput.rst:56
msgid "The following function is the primary interface of this module:"
msgstr "A seguinte função é a interface principal deste módulo:"

#: ../../library/fileinput.rst:61
msgid ""
"Create an instance of the :class:`FileInput` class.  The instance will be "
"used as global state for the functions of this module, and is also returned "
"to use during iteration.  The parameters to this function will be passed "
"along to the constructor of the :class:`FileInput` class."
msgstr ""
"Cria uma instância da classe :class:`FileInput`. A instância será usada como "
"estado global para as funções deste módulo e também será retornada para uso "
"durante a iteração. Os parâmetros desta função serão passados ​​para o "
"construtor da classe :class:`FileInput`."

#: ../../library/fileinput.rst:66
msgid ""
"The :class:`FileInput` instance can be used as a context manager in the :"
"keyword:`with` statement.  In this example, *input* is closed after the :"
"keyword:`!with` statement is exited, even if an exception occurs::"
msgstr ""
"A instância :class:`FileInput` pode ser usada como um gerenciador de "
"contexto na instrução :keyword:`with`. Neste exemplo, *input* é fechado após "
"a saída da instrução :keyword:`!with`, mesmo se ocorrer uma exceção::"

#: ../../library/fileinput.rst:70
msgid ""
"with fileinput.input(files=('spam.txt', 'eggs.txt'), encoding=\"utf-8\") as "
"f:\n"
"    for line in f:\n"
"        process(line)"
msgstr ""

#: ../../library/fileinput.rst:74 ../../library/fileinput.rst:170
msgid "Can be used as a context manager."
msgstr "Pode ser usado como gerenciador de contexto."

#: ../../library/fileinput.rst:77
msgid "The keyword parameters *mode* and *openhook* are now keyword-only."
msgstr "Os parâmetros nomeados *mode* e *openhook* agora são somente-nomeados."

#: ../../library/fileinput.rst:80 ../../library/fileinput.rst:176
#: ../../library/fileinput.rst:210
msgid "The keyword-only parameter *encoding* and *errors* are added."
msgstr ""
"Os parâmetros somente-nomeados *encoding* e *errors* foram adicionados."

#: ../../library/fileinput.rst:84
msgid ""
"The following functions use the global state created by :func:`fileinput."
"input`; if there is no active state, :exc:`RuntimeError` is raised."
msgstr ""
"As funções a seguir usam o estado global criado por :func:`fileinput.input`; "
"se não houver estado ativo, :exc:`RuntimeError` será levantada."

#: ../../library/fileinput.rst:90
msgid ""
"Return the name of the file currently being read.  Before the first line has "
"been read, returns ``None``."
msgstr ""
"Retorna o nome do arquivo que está sendo lido no momento. Antes da primeira "
"linha ser lida, retorna ``None``."

#: ../../library/fileinput.rst:96
msgid ""
"Return the integer \"file descriptor\" for the current file. When no file is "
"opened (before the first line and between files), returns ``-1``."
msgstr ""
"Retorna o número inteiro de \"descritor de arquivo\" para o arquivo atual. "
"Quando nenhum arquivo é aberto (antes da primeira linha e entre arquivos), "
"retorna ``-1``."

#: ../../library/fileinput.rst:102
msgid ""
"Return the cumulative line number of the line that has just been read.  "
"Before the first line has been read, returns ``0``.  After the last line of "
"the last file has been read, returns the line number of that line."
msgstr ""
"Retorna o número cumulativo da linha que acabou de ser lida. Antes da "
"primeira linha ser lida, retorna ``0``. Após a leitura da última linha do "
"último arquivo, retorna o número da linha dessa linha."

#: ../../library/fileinput.rst:109
msgid ""
"Return the line number in the current file.  Before the first line has been "
"read, returns ``0``.  After the last line of the last file has been read, "
"returns the line number of that line within the file."
msgstr ""
"Retorna o número da linha no arquivo atual. Antes da primeira linha ser "
"lida, retorna ``0``. Após a leitura da última linha do último arquivo, "
"retorna o número da linha dessa linha no arquivo."

#: ../../library/fileinput.rst:116
msgid ""
"Return ``True`` if the line just read is the first line of its file, "
"otherwise return ``False``."
msgstr ""
"Retorna ``True`` se a linha que acabou de ler for a primeira linha do seu "
"arquivo, caso contrário retorna ``False``."

#: ../../library/fileinput.rst:122
msgid ""
"Return ``True`` if the last line was read from ``sys.stdin``, otherwise "
"return ``False``."
msgstr ""
"Retorna ``True`` se a última linha foi lida em ``sys.stdin``, caso contrário "
"retorna ``False``."

#: ../../library/fileinput.rst:128
msgid ""
"Close the current file so that the next iteration will read the first line "
"from the next file (if any); lines not read from the file will not count "
"towards the cumulative line count.  The filename is not changed until after "
"the first line of the next file has been read.  Before the first line has "
"been read, this function has no effect; it cannot be used to skip the first "
"file.  After the last line of the last file has been read, this function has "
"no effect."
msgstr ""
"Fecha o arquivo atual para que a próxima iteração leia a primeira linha do "
"próximo arquivo (se houver); as linhas não lidas do arquivo não contarão "
"para a contagem cumulativa de linhas. O nome do arquivo não é alterado até "
"que a primeira linha do próximo arquivo seja lida. Antes da leitura da "
"primeira linha, esta função não tem efeito; ele não pode ser usado para "
"pular o primeiro arquivo. Após a leitura da última linha do último arquivo, "
"esta função não terá efeito."

#: ../../library/fileinput.rst:138
msgid "Close the sequence."
msgstr "Fecha a sequência."

#: ../../library/fileinput.rst:140
msgid ""
"The class which implements the sequence behavior provided by the module is "
"available for subclassing as well:"
msgstr ""
"A classe que implementa o comportamento de sequência fornecido pelo módulo "
"também está disponível para subclasses:"

#: ../../library/fileinput.rst:146
msgid ""
"Class :class:`FileInput` is the implementation; its methods :meth:"
"`filename`, :meth:`fileno`, :meth:`lineno`, :meth:`filelineno`, :meth:"
"`isfirstline`, :meth:`isstdin`, :meth:`nextfile` and :meth:`close` "
"correspond to the functions of the same name in the module. In addition it "
"is :term:`iterable` and has a :meth:`~io.TextIOBase.readline` method which "
"returns the next input line. The sequence must be accessed in strictly "
"sequential order; random access and :meth:`~io.TextIOBase.readline` cannot "
"be mixed."
msgstr ""
"A classe :class:`FileInput` é a implementação; seus métodos :meth:"
"`filename`, :meth:`fileno`, :meth:`lineno`, :meth:`filelineno`, :meth:"
"`isfirstline`, :meth:`isstdin`, :meth:`nextfile` e :meth:`close` "
"correspondem às funções de mesmo nome no módulo. Além disso, é :term:"
"`iterável` e possui um método :meth:`~io.TextIOBase.readline` que retorna a "
"próxima linha de entrada. A sequência deve ser acessada em ordem "
"estritamente sequencial; acesso aleatório e :meth:`~io.TextIOBase.readline` "
"não podem ser misturados."

#: ../../library/fileinput.rst:154
msgid ""
"With *mode* you can specify which file mode will be passed to :func:`open`. "
"It must be one of ``'r'`` and ``'rb'``."
msgstr ""
"Com *mode* você pode especificar qual modo de arquivo será passado para :"
"func:`open`. Deve ser um entre ``'r'`` e ``'rb'``."

#: ../../library/fileinput.rst:157
msgid ""
"The *openhook*, when given, must be a function that takes two arguments, "
"*filename* and *mode*, and returns an accordingly opened file-like object. "
"You cannot use *inplace* and *openhook* together."
msgstr ""
"O *openhook*, quando fornecido, deve ser uma função que recebe dois "
"argumentos, *filename* e *mode*, e retorna um objeto arquivo ou similar "
"aberto de acordo. Você não pode usar *inplace* e *openhook* juntos."

#: ../../library/fileinput.rst:161
msgid ""
"You can specify *encoding* and *errors* that is passed to :func:`open` or "
"*openhook*."
msgstr ""
"Você pode especificar *encoding* e *errors* que são passados ​​para :func:"
"`open` ou *openhook*."

#: ../../library/fileinput.rst:163
msgid ""
"A :class:`FileInput` instance can be used as a context manager in the :"
"keyword:`with` statement.  In this example, *input* is closed after the :"
"keyword:`!with` statement is exited, even if an exception occurs::"
msgstr ""
"Uma instância :class:`FileInput` pode ser usada como um gerenciador de "
"contexto na instrução :keyword:`with`. Neste exemplo, *input* é fechado após "
"a saída da instrução :keyword:`!with`, mesmo se ocorrer uma exceção::"

#: ../../library/fileinput.rst:167
msgid ""
"with FileInput(files=('spam.txt', 'eggs.txt')) as input:\n"
"    process(input)"
msgstr ""

#: ../../library/fileinput.rst:173
msgid "The keyword parameter *mode* and *openhook* are now keyword-only."
msgstr "Os parâmetros nomeados *mode* e *openhook* agora são somente-nomeados."

#: ../../library/fileinput.rst:179
msgid ""
"The ``'rU'`` and ``'U'`` modes and the :meth:`!__getitem__` method have been "
"removed."
msgstr ""
"Os modos ``'rU'`` e ``'U'`` e o método :meth:`!__getitem__` foram removidos."

#: ../../library/fileinput.rst:184
msgid ""
"**Optional in-place filtering:** if the keyword argument ``inplace=True`` is "
"passed to :func:`fileinput.input` or to the :class:`FileInput` constructor, "
"the file is moved to a backup file and standard output is directed to the "
"input file (if a file of the same name as the backup file already exists, it "
"will be replaced silently).  This makes it possible to write a filter that "
"rewrites its input file in place.  If the *backup* parameter is given "
"(typically as ``backup='.<some extension>'``), it specifies the extension "
"for the backup file, and the backup file remains around; by default, the "
"extension is ``'.bak'`` and it is deleted when the output file is closed.  "
"In-place filtering is disabled when standard input is read."
msgstr ""
"**Filtragem local opcional:** se o argumento nomeado ``inplace=True`` for "
"passado para :func:`fileinput.input` ou para o construtor :class:"
"`FileInput`, o arquivo é movido para um arquivo de backup e a saída padrão é "
"direcionada para o arquivo de entrada (se já existir um arquivo com o mesmo "
"nome do arquivo de backup, ele será substituído silenciosamente). Isso torna "
"possível escrever um filtro que reescreva seu arquivo de entrada "
"internamente. Se o parâmetro *backup* for fornecido (normalmente como "
"``backup='.<some extension>'``), ele especifica a extensão do arquivo de "
"backup, e o arquivo de backup permanece disponível; por padrão, a extensão é "
"``'.bak'`` e é excluída quando o arquivo de saída é fechado. A filtragem "
"local é desativada quando a entrada padrão é lida."

#: ../../library/fileinput.rst:196
msgid "The two following opening hooks are provided by this module:"
msgstr "Os dois ganchos de abertura a seguir são fornecidos por este módulo:"

#: ../../library/fileinput.rst:200
msgid ""
"Transparently opens files compressed with gzip and bzip2 (recognized by the "
"extensions ``'.gz'`` and ``'.bz2'``) using the :mod:`gzip` and :mod:`bz2` "
"modules.  If the filename extension is not ``'.gz'`` or ``'.bz2'``, the file "
"is opened normally (ie, using :func:`open` without any decompression)."
msgstr ""
"Abre de forma transparente arquivos compactados com gzip e bzip2 "
"(reconhecidos pelas extensões ``'.gz'`` e ``'.bz2'``) usando os módulos :mod:"
"`gzip` e :mod:`bz2`. Se a extensão do nome do arquivo não for ``'.gz'`` ou "
"``'.bz2'``, o arquivo é aberto normalmente (ou seja, usando :func:`open` sem "
"qualquer descompactação)."

#: ../../library/fileinput.rst:205
msgid ""
"The *encoding* and *errors* values are passed to :class:`io.TextIOWrapper` "
"for compressed files and open for normal files."
msgstr ""
"Os valores *encoding* e *errors* são passados ​​para :class:`io.TextIOWrapper` "
"para arquivos compactados e abertos para arquivos normais."

#: ../../library/fileinput.rst:208
msgid ""
"Usage example:  ``fi = fileinput.FileInput(openhook=fileinput."
"hook_compressed, encoding=\"utf-8\")``"
msgstr ""
"Exemplo de uso: ``fi = fileinput.FileInput(openhook=fileinput."
"hook_compressed, encoding=\"utf-8\")``"

#: ../../library/fileinput.rst:216
msgid ""
"Returns a hook which opens each file with :func:`open`, using the given "
"*encoding* and *errors* to read the file."
msgstr ""
"Retorna um gancho que abre cada arquivo com :func:`open`, usando a "
"*encoding* e *errors* fornecidas para ler o arquivo."

#: ../../library/fileinput.rst:219
msgid ""
"Usage example: ``fi = fileinput.FileInput(openhook=fileinput."
"hook_encoded(\"utf-8\", \"surrogateescape\"))``"
msgstr ""
"Exemplo de uso: ``fi = fileinput.FileInput(openhook=fileinput."
"hook_encoded(\"utf-8\", \"surrogateescape\"))``"

#: ../../library/fileinput.rst:223
msgid "Added the optional *errors* parameter."
msgstr "Adicionado o parâmetro opcional *errors*."

#: ../../library/fileinput.rst:226
msgid ""
"This function is deprecated since :func:`fileinput.input` and :class:"
"`FileInput` now have *encoding* and *errors* parameters."
msgstr ""
"Esta função foi descontinuado já que :func:`fileinput.input` e :class:"
"`FileInput` agora possuem parâmetros *encoding* e *errors*."
