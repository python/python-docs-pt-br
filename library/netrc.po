# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 01:10+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/netrc.rst:2
msgid ":mod:`!netrc` --- netrc file processing"
msgstr ":mod:`!netrc` --- Arquivo de processamento netrc"

#: ../../library/netrc.rst:10
msgid "**Source code:** :source:`Lib/netrc.py`"
msgstr "**Código-fonte:** :source:`Lib/netrc.py`"

#: ../../library/netrc.rst:14
msgid ""
"The :class:`~netrc.netrc` class parses and encapsulates the netrc file "
"format used by the Unix :program:`ftp` program and other FTP clients."
msgstr ""
"A classe :class:`~netrc.netrc` analisa e encapsula o formato do arquivo "
"netrc usado pelo programa Unix :program:`ftp` e outros clientes FTP."

#: ../../library/netrc.rst:20
msgid ""
"A :class:`~netrc.netrc` instance or subclass instance encapsulates data "
"from  a netrc file.  The initialization argument, if present, specifies the "
"file to parse.  If no argument is given, the file :file:`.netrc` in the "
"user's home directory -- as determined by :func:`os.path.expanduser` -- will "
"be read.  Otherwise, a :exc:`FileNotFoundError` exception will be raised. "
"Parse errors will raise :exc:`NetrcParseError` with diagnostic information "
"including the file name, line number, and terminating token. If no argument "
"is specified on a POSIX system, the presence of passwords in the :file:`."
"netrc` file will raise a :exc:`NetrcParseError` if the file ownership or "
"permissions are insecure (owned by a user other than the user running the "
"process, or accessible for read or write by any other user). This implements "
"security behavior equivalent to that of ftp and other programs that use :"
"file:`.netrc`."
msgstr ""
"Uma instância ou instância de subclasse de :class:`~netrc.netrc` encapsula "
"dados de um arquivo netrc. O argumento de inicialização, se presente, "
"especifica o arquivo a ser analisado. Se nenhum argumento for fornecido, o "
"arquivo :file:`.netrc` no diretório inicial do usuário -- conforme "
"determinado por :func:`os.path.expanduser` -- será lido. Caso contrário, uma "
"exceção :exc:`FileNotFoundError` será levantada. Os erros de análise "
"levantam :exc:`NetrcParseError` com informações de diagnóstico, incluindo o "
"nome do arquivo, o número da linha e o token final. Se nenhum argumento for "
"especificado em um sistema POSIX, a presença de senhas no arquivo :file:`."
"netrc` levantará um :exc:`NetrcParseError` se a propriedade ou as permissões "
"do arquivo forem inseguras (pertencentes a um usuário que não seja o usuário "
"executando o processo ou acessível para leitura ou gravação por qualquer "
"outro usuário). Isso implementa um comportamento de segurança equivalente ao "
"do ftp e de outros programas que usam :file:`.netrc`."

#: ../../library/netrc.rst:34
msgid "Added the POSIX permission check."
msgstr "Adicionada a verificação de permissão POSIX."

#: ../../library/netrc.rst:36
msgid ""
":func:`os.path.expanduser` is used to find the location of the :file:`."
"netrc` file when *file* is not passed as argument."
msgstr ""
":func:`os.path.expanduser` é usado para encontrar a localização do arquivo :"
"file:`.netrc` quando *file* não é passado como argumento."

#: ../../library/netrc.rst:40
msgid ""
":class:`netrc` try UTF-8 encoding before using locale specific encoding. The "
"entry in the netrc file no longer needs to contain all tokens.  The missing "
"tokens' value default to an empty string.  All the tokens and their values "
"now can contain arbitrary characters, like whitespace and non-ASCII "
"characters. If the login name is anonymous, it won't trigger the security "
"check."
msgstr ""
":class:`netrc` tenta a codificação UTF-8 antes de usar a codificação "
"específica da localidade. A entrada no arquivo netrc não precisa mais conter "
"todos os tokens. O valor padrão dos tokens ausentes é uma string vazia. "
"Todos os tokens e seus valores agora podem conter caracteres arbitrários, "
"como espaços em branco e caracteres não ASCII. Se o nome de login for "
"anônimo, ele não acionará a verificação de segurança."

#: ../../library/netrc.rst:51
msgid ""
"Exception raised by the :class:`~netrc.netrc` class when syntactical errors "
"are encountered in source text.  Instances of this exception provide three "
"interesting attributes:"
msgstr ""
"Exceção levantada pela classe :class:`~netrc.netrc` quando erros sintáticos "
"são encontrados no texto fonte. As instâncias desta exceção fornecem três "
"atributos interessantes:"

#: ../../library/netrc.rst:57
msgid "Textual explanation of the error."
msgstr "Explicação textual do erro."

#: ../../library/netrc.rst:61
msgid "The name of the source file."
msgstr "O nome do arquivo de origem."

#: ../../library/netrc.rst:65
msgid "The line number on which the error was found."
msgstr "O número da linha em que o erro foi encontrado."

#: ../../library/netrc.rst:71
msgid "netrc Objects"
msgstr "Objetos netrc"

#: ../../library/netrc.rst:73
msgid "A :class:`~netrc.netrc` instance has the following methods:"
msgstr ""
"Uma instância da classe :class:`~netrc.netrc` tem os seguintes métodos:"

#: ../../library/netrc.rst:78
msgid ""
"Return a 3-tuple ``(login, account, password)`` of authenticators for "
"*host*. If the netrc file did not contain an entry for the given host, "
"return the tuple associated with the 'default' entry.  If neither matching "
"host nor default entry is available, return ``None``."
msgstr ""
"Retorna uma tupla de 3 elementos ``(login, conta, senha)`` dos "
"autenticadores do *host*. Se o arquivo netrc não contém uma entrada para o "
"host dado, retorna a tupla associada com a entrada padrão. Se não houver "
"nenhum host correspondente nem uma entrada padrão estiver disponível, "
"retorna ``None``."

#: ../../library/netrc.rst:86
msgid ""
"Dump the class data as a string in the format of a netrc file. (This "
"discards comments and may reorder the entries.)"
msgstr ""
"Despeja os dados da classe como uma string no formato de um arquivo netrc. "
"(Isso descarta os comentários e pode reordenar as entradas.)"

#: ../../library/netrc.rst:89
msgid "Instances of :class:`~netrc.netrc` have public instance variables:"
msgstr ""
"Instâncias de :class:`~netrc.netrc` possuem variáveis de instância públicas:"

#: ../../library/netrc.rst:94
msgid ""
"Dictionary mapping host names to ``(login, account, password)`` tuples.  The "
"'default' entry, if any, is represented as a pseudo-host by that name."
msgstr ""
"Dicionário mapeando nomes de host para tuplas ``(login, conta, senha)``. A "
"entrada *default*, se houver, é representada como um pseudo-host por esse "
"nome."

#: ../../library/netrc.rst:100
msgid "Dictionary mapping macro names to string lists."
msgstr "Dicionário mapeando nomes de macros para listas de strings."
