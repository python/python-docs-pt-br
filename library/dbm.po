# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 15:28+0000\n"
"PO-Revision-Date: 2025-09-21 20:43+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/dbm.rst:2
msgid ":mod:`dbm` --- Interfaces to Unix \"databases\""
msgstr ""

#: ../../library/dbm.rst:7
msgid "**Source code:** :source:`Lib/dbm/__init__.py`"
msgstr "**Código-fonte:** :source:`Lib/dbm/__init__.py`"

#: ../../library/dbm.rst:11
msgid ""
":mod:`dbm` is a generic interface to variants of the DBM database --- :mod:"
"`dbm.gnu` or :mod:`dbm.ndbm`.  If none of these modules is installed, the "
"slow-but-simple implementation in module :mod:`dbm.dumb` will be used.  "
"There is a `third party interface <https://www.jcea.es/programacion/pybsddb."
"htm>`_ to the Oracle Berkeley DB."
msgstr ""

#: ../../library/dbm.rst:20
msgid ""
"A tuple containing the exceptions that can be raised by each of the "
"supported modules, with a unique exception also named :exc:`dbm.error` as "
"the first item --- the latter is used when :exc:`dbm.error` is raised."
msgstr ""
"Uma tupla contendo as exceções que podem ser levantadas por cada um dos "
"módulos suportados, com a única exceção também chamada :exc:`dbm.error` como "
"o primeiro item --- o último é usado quando :exc:`dbm.error` é levantada."

#: ../../library/dbm.rst:27
msgid ""
"This function attempts to guess which of the several simple database modules "
"available --- :mod:`dbm.gnu`, :mod:`dbm.ndbm` or :mod:`dbm.dumb` --- should "
"be used to open a given file."
msgstr ""

#: ../../library/dbm.rst:31
msgid "Return one of the following values:"
msgstr "Retorna um dos seguintes valores:"

#: ../../library/dbm.rst:33
msgid ""
"``None`` if the file can't be opened because it's unreadable or doesn't exist"
msgstr ""
"``None`` se o arquivo não puder ser aberto porque está ilegível ou não existe"

#: ../../library/dbm.rst:34
msgid "the empty string (``''``) if the file's format can't be guessed"
msgstr ""
"a string vazia (``''``) se o formato do arquivo não puder ser adivinhado"

#: ../../library/dbm.rst:35
msgid ""
"a string containing the required module name, such as ``'dbm.ndbm'`` or "
"``'dbm.gnu'``"
msgstr ""
"uma string contendo o nome do módulo necessário, tal como ``'dbm.ndbm'`` ou "
"``'dbm.gnu'``"

#: ../../library/dbm.rst:37 ../../library/dbm.rst:202 ../../library/dbm.rst:386
msgid "*filename* accepts a :term:`path-like object`."
msgstr "*filename* aceita um :term:`objeto caminho ou similar`."

#: ../../library/dbm.rst:61
msgid "Open a database and return the corresponding database object."
msgstr ""
"Abre um banco de dados e retorna o objeto banco de dados correspondendo."

#: ../../library/dbm.rst:0
msgid "Parameters"
msgstr "Parâmetros"

#: ../../library/dbm.rst:63
msgid ""
"The database file to open.  If the database file already exists, the :func:"
"`whichdb` function is used to determine its type and the appropriate module "
"is used; if it does not exist, the first submodule listed above that can be "
"imported is used."
msgstr ""
"O arquivo de banco de dados para abrir. Se o arquivo de banco de dados já "
"existe, a função :func:`whichdb` é usada para determinar seu tipo e o módulo "
"apropriado é usado; se ele não existir, o primeiro submódulo listado acima "
"que pode ser importado é usado."

#: ../../library/dbm.rst:64 ../../library/dbm.rst:174
msgid "The database file to open."
msgstr "O arquivo de banco de dados para abrir."

#: ../../library/dbm.rst:66
msgid ""
"If the database file already exists, the :func:`whichdb` function is used to "
"determine its type and the appropriate module is used; if it does not exist, "
"the first submodule listed above that can be imported is used."
msgstr ""
"Se o arquivo de banco de dados já existe, a função :func:`whichdb` é usada "
"para determinar seu tipo e o módulo apropriado é usado; se ele não existir, "
"o primeiro submódulo listado acima que pode ser importado é usado."

#: ../../library/dbm.rst:71 ../../library/dbm.rst:297
msgid ""
"* ``'r'`` (default): |flag_r| * ``'w'``: |flag_w| * ``'c'``: |flag_c| * "
"``'n'``: |flag_n|"
msgstr ""
"* ``'r'`` (padrão): |flag_r| * ``'w'``: |flag_w| * ``'c'``: |flag_c| * "
"``'n'``: |flag_n|"

#: ../../library/dbm.rst:72 ../../library/dbm.rst:179 ../../library/dbm.rst:298
msgid "``'r'`` (default): |flag_r|"
msgstr "``'r'`` (padrão): |flag_r|"

#: ../../library/dbm.rst:73 ../../library/dbm.rst:180 ../../library/dbm.rst:299
#: ../../library/dbm.rst:367
msgid "``'w'``: |flag_w|"
msgstr "``'w'``: |flag_w|"

#: ../../library/dbm.rst:74 ../../library/dbm.rst:181 ../../library/dbm.rst:300
msgid "``'c'``: |flag_c|"
msgstr "``'c'``: |flag_c|"

#: ../../library/dbm.rst:75 ../../library/dbm.rst:182 ../../library/dbm.rst:301
#: ../../library/dbm.rst:369
msgid "``'n'``: |flag_n|"
msgstr "``'n'``: |flag_n|"

#: ../../library/dbm.rst:77 ../../library/dbm.rst:196 ../../library/dbm.rst:303
#: ../../library/dbm.rst:371
msgid "|mode_param_doc|"
msgstr "|mode_param_doc|"

#: ../../library/dbm.rst:80
msgid "*file* accepts a :term:`path-like object`."
msgstr "*file* aceita um :term:`objeto caminho ou similar`."

#: ../../library/dbm.rst:83
msgid ""
"The object returned by :func:`~dbm.open` supports the same basic "
"functionality as a :class:`dict`; keys and their corresponding values can be "
"stored, retrieved, and deleted, and the :keyword:`in` operator and the :meth:"
"`!keys` method are available, as well as :meth:`!get` and :meth:`!"
"setdefault` methods."
msgstr ""
"O objeto retornado por :func:`~dbm.open` oferece suporte à mesma "
"funcionalidade básica que um :class:`dict`; chaves e seus valores "
"correspondentes podem ser armazenados, obtidos e excluídos, e o operador :"
"keyword:`in` e o método :meth:`!keys` estão disponíveis, bem como métodos :"
"meth:`!get` e :meth:`!setdefault`."

#: ../../library/dbm.rst:88
msgid ""
"Key and values are always stored as :class:`bytes`. This means that when "
"strings are used they are implicitly converted to the default encoding "
"before being stored."
msgstr ""
"Chaves e valores são sempre armazenados como :class:`bytes`. Isso significa "
"que quando strings são usadas, elas são implicitamente convertidas para a "
"codificação padrão antes de serem armazenadas."

#: ../../library/dbm.rst:92
msgid ""
"These objects also support being used in a :keyword:`with` statement, which "
"will automatically close them when done."
msgstr ""
"Estes objetos também oferecem suporte a serem usados em uma instrução :"
"keyword:`with`, que vai fechá-los automaticamente quando estiver concluída."

#: ../../library/dbm.rst:95
msgid ""
":meth:`!get` and :meth:`!setdefault` methods are now available for all :mod:"
"`dbm` backends."
msgstr ""
"O métodos :meth:`!get` e :meth:`!setdefault` estão agora disponíveis para "
"todos os backends do :mod:`dbm`."

#: ../../library/dbm.rst:99
msgid ""
"Added native support for the context management protocol to the objects "
"returned by :func:`~dbm.open`."
msgstr ""
"Adicionado suporte nativo para o protocolo de gerenciamento de contexto para "
"os objetos retornados por :func:`~dbm.open`."

#: ../../library/dbm.rst:103
msgid ""
"Deleting a key from a read-only database raises a database module specific "
"exception instead of :exc:`KeyError`."
msgstr ""
"Excluir uma chave de um banco de dados somente leitura levanta uma exceção "
"de banco de dados específica do módulo em vez de :exc:`KeyError`."

#: ../../library/dbm.rst:107
msgid ""
"The following example records some hostnames and a corresponding title,  and "
"then prints out the contents of the database::"
msgstr ""
"Os seguintes exemplos registram alguns hostnames e um título correspondente, "
"e então exibe o conteúdo do banco de dados::"

#: ../../library/dbm.rst:137
msgid "Module :mod:`shelve`"
msgstr "Módulo :mod:`shelve`"

#: ../../library/dbm.rst:138
msgid "Persistence module which stores non-string data."
msgstr "Módulo persistente que armazena dados não-string."

#: ../../library/dbm.rst:141
msgid "The individual submodules are described in the following sections."
msgstr "Os submódulos individuais são descritos nas seções a seguir."

#: ../../library/dbm.rst:145
msgid ":mod:`dbm.gnu` --- GNU database manager"
msgstr ":mod:`dbm.gnu` --- Gerenciador de banco de dados do GNU"

#: ../../library/dbm.rst:151
msgid "**Source code:** :source:`Lib/dbm/gnu.py`"
msgstr "**Código-fonte:** :source:`Lib/dbm/gnu.py`"

#: ../../library/dbm.rst:155
msgid ""
"The :mod:`dbm.gnu` module provides an interface to the :abbr:`GDBM (GNU "
"dbm)` library, similar to the :mod:`dbm.ndbm` module, but with additional "
"functionality like crash tolerance."
msgstr ""
"O módulo :mod:`dbm.gnu` fornece uma interface para a biblioteca :abbr:`GDBM "
"(GNU dbm)`, semelhante ao módulo :mod:`dbm.ndbm`, mas com funcionalidades "
"adicionais, como tolerância a falhas."

#: ../../library/dbm.rst:161 ../../library/dbm.rst:267
msgid ""
"The file formats created by :mod:`dbm.gnu` and :mod:`dbm.ndbm` are "
"incompatible and can not be used interchangeably."
msgstr ""
"Os formatos de arquivo criados por :mod:`dbm.gnu` e :mod:`dbm.ndbm` são "
"incompatíveis e não podem ser usados de forma intercambiável."

#: ../../library/dbm.rst:166
msgid ""
"Raised on :mod:`dbm.gnu`-specific errors, such as I/O errors. :exc:"
"`KeyError` is raised for general mapping errors like specifying an incorrect "
"key."
msgstr ""
"Levantada em erros específicos do :mod:`dbm.gnu`, como erros de E/S. :exc:"
"`KeyError` é levantada para erros gerais de mapeamento, como especificar uma "
"chave incorreta."

#: ../../library/dbm.rst:172
msgid "Open a GDBM database and return a :class:`!gdbm` object."
msgstr "Abre um banco de dados GDBM e retorna um objeto :class:`!gdbm`."

#: ../../library/dbm.rst:178
msgid ""
"* ``'r'`` (default): |flag_r| * ``'w'``: |flag_w| * ``'c'``: |flag_c| * "
"``'n'``: |flag_n|  The following additional characters may be appended to "
"control how the database is opened:  * ``'f'``: Open the database in fast "
"mode.   Writes to the database will not be synchronized. * ``'s'``: "
"Synchronized mode.   Changes to the database will be written immediately to "
"the file. * ``'u'``: Do not lock database.  Not all flags are valid for all "
"versions of GDBM. See the :data:`open_flags` member for a list of supported "
"flag characters."
msgstr ""
"* ``'r'`` (padrão): |flag_r| * ``'w'``: |flag_w| * ``'c'``: |flag_c| * "
"``'n'``: |flag_n| Os seguintes caracteres adicionais podem ser anexados para "
"controlar como o banco de dados é aberto: * ``'f'``: Abre o banco de dados "
"no modo rápido. As gravações no banco de dados não serão sincronizadas. * "
"``'s'``: Modo sincronizado. As alterações no banco de dados serão gravadas "
"imediatamente no arquivo. * ``'u'``: Não trava o banco de dados. Nem todos "
"os sinalizadores são válidos para todas as versões do GDBM. Consulte o "
"membro :data:`open_flags` para obter uma lista de caracteres de "
"sinalizadores suportados."

#: ../../library/dbm.rst:184
msgid ""
"The following additional characters may be appended to control how the "
"database is opened:"
msgstr ""
"Os seguintes caracteres adicionais podem ser acrescentados para controlar "
"como o banco de dados é aberto:"

#: ../../library/dbm.rst:187
msgid ""
"``'f'``: Open the database in fast mode. Writes to the database will not be "
"synchronized."
msgstr ""
"``'f'``: Abre o banco de dados em modo rápido. As gravações no banco de "
"dados não serão sincronizadas."

#: ../../library/dbm.rst:189
msgid ""
"``'s'``: Synchronized mode. Changes to the database will be written "
"immediately to the file."
msgstr ""
"``'s'``: Modo sincronizado. Alterações no banco de dados serão gravadas "
"imediatamente no arquivo."

#: ../../library/dbm.rst:191
msgid "``'u'``: Do not lock database."
msgstr "``'u'``: Não trava o banco de dados."

#: ../../library/dbm.rst:193
msgid ""
"Not all flags are valid for all versions of GDBM. See the :data:`open_flags` "
"member for a list of supported flag characters."
msgstr ""
"Nem todos os sinalizadores são válidos para todas as versões do GDBM. Veja o "
"membro :data:`open_flags` para uma lista de caracteres de sinalizadores "
"suportados."

#: ../../library/dbm.rst:0
msgid "Raises"
msgstr "Levanta"

#: ../../library/dbm.rst:199
msgid "If an invalid *flag* argument is passed."
msgstr "Se um argumento *flag* inválido for passado."

#: ../../library/dbm.rst:207
msgid ""
"A string of characters the *flag* parameter of :meth:`~dbm.gnu.open` "
"supports."
msgstr ""
"Uma sequência de caracteres que o parâmetro *flag* de :meth:`~dbm.gnu.open` "
"suporta."

#: ../../library/dbm.rst:209
msgid ""
":class:`!gdbm` objects behave similar to :term:`mappings <mapping>`, but :"
"meth:`!items` and :meth:`!values` methods are not supported. The following "
"methods are also provided:"
msgstr ""
"Os objetos :class:`!gdbm` se comportam de forma semelhante a :term:"
"`mapeamentos <mapping>`, mas os métodos :meth:`!items` e :meth:`!values` não "
"são suportados. Os seguintes métodos também são fornecidos:"

#: ../../library/dbm.rst:215
msgid ""
"It's possible to loop over every key in the database using this method  and "
"the :meth:`nextkey` method.  The traversal is ordered by GDBM's internal "
"hash values, and won't be sorted by the key values.  This method returns the "
"starting key."
msgstr ""
"É possível fazer um laço em cada chave no banco de dados usando este método "
"e o método :meth:`nextkey`. A travessia é ordenada pelos valores de hash "
"internos do GDBM e não será classificada pelos valores de chave. Este método "
"retorna a chave inicial."

#: ../../library/dbm.rst:222
msgid ""
"Returns the key that follows *key* in the traversal.  The following code "
"prints every key in the database ``db``, without having to create a list in "
"memory that contains them all::"
msgstr ""
"Retorna a chave que segue *key* na travessia. O código a seguir imprime cada "
"chave no banco de dados ``db``, sem precisar criar uma lista na memória que "
"contenha todas elas::"

#: ../../library/dbm.rst:233
msgid ""
"If you have carried out a lot of deletions and would like to shrink the "
"space used by the GDBM file, this routine will reorganize the database.  :"
"class:`!gdbm` objects will not shorten the length of a database file except "
"by using this reorganization; otherwise, deleted file space will be kept and "
"reused as new (key, value) pairs are added."
msgstr ""
"Se você realizou muitas exclusões e gostaria de reduzir o espaço usado pelo "
"arquivo GDBM, esta rotina reorganizará o banco de dados. Objetos :class:`!"
"gdbm` não reduzirão o tamanho de um arquivo de banco de dados, exceto usando "
"esta reorganização; caso contrário, o espaço de arquivo excluído será "
"mantido e reutilizado à medida que novos pares (chave, valor) forem "
"adicionados."

#: ../../library/dbm.rst:241
msgid ""
"When the database has been opened in fast mode, this method forces any "
"unwritten data to be written to the disk."
msgstr ""
"Quando o banco de dados é aberto no modo rápido, esse método força a "
"gravação de todos os dados não gravados no disco."

#: ../../library/dbm.rst:246
msgid "Close the GDBM database."
msgstr "Fecha o banco de dados GDBM."

#: ../../library/dbm.rst:250
msgid ":mod:`dbm.ndbm` --- New Database Manager"
msgstr ":mod:`dbm.ndbm` --- New Database Manager"

#: ../../library/dbm.rst:256
msgid "**Source code:** :source:`Lib/dbm/ndbm.py`"
msgstr "**Código-fonte:** :source:`Lib/dbm/ndbm.py`"

#: ../../library/dbm.rst:260
msgid ""
"The :mod:`dbm.ndbm` module provides an interface to the :abbr:`NDBM (New "
"Database Manager)` library. This module can be used with the \"classic\" "
"NDBM interface or the :abbr:`GDBM (GNU dbm)` compatibility interface."
msgstr ""
"O módulo :mod:`dbm.ndbm` fornece uma interface para a biblioteca :abbr:`NDBM "
"(New Database Manager)`. Este módulo pode ser usado com a interface NDBM "
"\"clássica\" ou a interface de compatibilidade :abbr:`GDBM (GNU dbm)`."

#: ../../library/dbm.rst:272
msgid ""
"The NDBM library shipped as part of macOS has an undocumented limitation on "
"the size of values, which can result in corrupted database files when "
"storing values larger than this limit. Reading such corrupted files can "
"result in a hard crash (segmentation fault)."
msgstr ""
"A biblioteca NDBM enviada como parte do macOS tem uma limitação não "
"documentada no tamanho dos valores, o que pode resultar em arquivos de banco "
"de dados corrompidos ao armazenar valores maiores que esse limite. Ler esses "
"arquivos corrompidos pode resultar em uma falha grave (falha de segmentação)."

#: ../../library/dbm.rst:279
msgid ""
"Raised on :mod:`dbm.ndbm`-specific errors, such as I/O errors. :exc:"
"`KeyError` is raised for general mapping errors like specifying an incorrect "
"key."
msgstr ""
"Levantada em erros específicos de :mod:`dbm.ndbm`, como erros de E/S. :exc:"
"`KeyError` é levantada para erros gerais de mapeamento, como especificar uma "
"chave incorreta."

#: ../../library/dbm.rst:285
msgid "Name of the NDBM implementation library used."
msgstr "Nome da biblioteca de implementação NDBM usada."

#: ../../library/dbm.rst:290
msgid "Open an NDBM database and return an :class:`!ndbm` object."
msgstr "Abre um banco de dados NDBM e retorna um objeto :class:`!ndbm`."

#: ../../library/dbm.rst:292
msgid ""
"The basename of the database file (without the :file:`.dir` or :file:`.pag` "
"extensions)."
msgstr ""
"O nome base do arquivo de banco de dados (sem as extensões :file:`.dir` ou :"
"file:`.pag`)."

#: ../../library/dbm.rst:306
msgid ""
":class:`!ndbm` objects behave similar to :term:`mappings <mapping>`, but :"
"meth:`!items` and :meth:`!values` methods are not supported. The following "
"methods are also provided:"
msgstr ""
"Os objetos :class:`!ndbm` se comportam de forma semelhante a :term:"
"`mapeamentos <mapping>`, mas os métodos :meth:`!items` e :meth:`!values` não "
"são suportados. Os seguintes métodos também são fornecidos:"

#: ../../library/dbm.rst:310
msgid "Accepts :term:`path-like object` for filename."
msgstr "Aceita um :term:`objeto caminho ou similar` como nome de arquivo."

#: ../../library/dbm.rst:315
msgid "Close the NDBM database."
msgstr "Fecha o banco de dados NDBM."

#: ../../library/dbm.rst:319
msgid ":mod:`dbm.dumb` --- Portable DBM implementation"
msgstr ":mod:`dbm.dumb` --- Implementação portátil do DBM"

#: ../../library/dbm.rst:324
msgid "**Source code:** :source:`Lib/dbm/dumb.py`"
msgstr "**Código-fonte:** :source:`Lib/dbm/dumb.py`"

#: ../../library/dbm.rst:330
msgid ""
"The :mod:`dbm.dumb` module is intended as a last resort fallback for the :"
"mod:`dbm` module when a more robust module is not available. The :mod:`dbm."
"dumb` module is not written for speed and is not nearly as heavily used as "
"the other database modules."
msgstr ""
"O módulo :mod:`dbm.dumb` é pensado como um último recurso alternativo para o "
"módulo :mod:`dbm` quando um módulo mais robusto não está disponível. O "
"módulo :mod:`dbm.dumb` não é escrito para velocidade e não é tão usado "
"quanto os outros módulos de banco de dados."

#: ../../library/dbm.rst:337
msgid ""
"The :mod:`dbm.dumb` module provides a persistent :class:`dict`-like "
"interface which is written entirely in Python. Unlike other :mod:`dbm` "
"backends, such as :mod:`dbm.gnu`, no external library is required."
msgstr ""
"O módulo :mod:`dbm.dumb` fornece uma interface persistente do tipo :class:"
"`dict` que é escrita inteiramente em Python. Ao contrário de outros "
"backends :mod:`dbm`, como :mod:`dbm.gnu`, nenhuma biblioteca externa é "
"necessária."

#: ../../library/dbm.rst:342
msgid "The :mod:`!dbm.dumb` module defines the following:"
msgstr "O módulo :mod:`!dbm.dumb` define o seguinte:"

#: ../../library/dbm.rst:346
msgid ""
"Raised on :mod:`dbm.dumb`-specific errors, such as I/O errors.  :exc:"
"`KeyError` is raised for general mapping errors like specifying an incorrect "
"key."
msgstr ""
"Levantada em erros específicos de :mod:`dbm.dumb`, como erros de E/S. :exc:"
"`KeyError` é levantada para erros gerais de mapeamento, como especificar uma "
"chave incorreta."

#: ../../library/dbm.rst:352
msgid ""
"Open a :mod:`!dbm.dumb` database. The returned database object behaves "
"similar to a :term:`mapping`, in addition to providing :meth:`~dumbdbm.sync` "
"and :meth:`~dumbdbm.close` methods."
msgstr ""
"Abre um banco de dados :mod:`!dbm.dumb`. O objeto banco de dados retornado "
"se comporta de forma semelhante a um :term:`mapeamento`, além de fornecer os "
"métodos :meth:`~dumbdbm.sync` e :meth:`~dumbdbm.close`."

#: ../../library/dbm.rst:357
msgid ""
"The basename of the database file (without extensions). A new database "
"creates the following files:  - :file:`{filename}.dat` - :file:`{filename}."
"dir`"
msgstr ""
"O nome base do arquivo do banco de dados (sem extensões). Um novo banco de "
"dados cria os seguintes arquivos: - :file:`{filename}.dat` - :file:"
"`{filename}.dir`"

#: ../../library/dbm.rst:358
msgid ""
"The basename of the database file (without extensions). A new database "
"creates the following files:"
msgstr ""
"O nome base do arquivo do banco de dados (sem extensões). Um novo banco de "
"dados cria os seguintes arquivos:"

#: ../../library/dbm.rst:361
msgid ":file:`{filename}.dat`"
msgstr ":file:`{filename}.dat`"

#: ../../library/dbm.rst:362
msgid ":file:`{filename}.dir`"
msgstr ":file:`{filename}.dir`"

#: ../../library/dbm.rst:365
msgid ""
"* ``'r'``: |flag_r| * ``'w'``: |flag_w| * ``'c'`` (default): |flag_c| * "
"``'n'``: |flag_n|"
msgstr ""
"* ``'r'``: |flag_r| * ``'w'``: |flag_w| * ``'c'`` (padrão): |flag_c| * "
"``'n'``: |flag_n|"

#: ../../library/dbm.rst:366
msgid "``'r'``: |flag_r|"
msgstr "``'r'``: |flag_r|"

#: ../../library/dbm.rst:368
msgid "``'c'`` (default): |flag_c|"
msgstr "``'c'`` (padrão): |flag_c|"

#: ../../library/dbm.rst:375
msgid ""
"It is possible to crash the Python interpreter when loading a database with "
"a sufficiently large/complex entry due to stack depth limitations in "
"Python's AST compiler."
msgstr ""
"É possível travar o interpretador Python ao carregar um banco de dados com "
"uma entrada suficientemente grande/complexa devido a limitações de "
"profundidade de pilha no compilador AST do Python."

#: ../../library/dbm.rst:379
msgid ""
":func:`~dbm.dumb.open` always creates a new database when *flag* is ``'n'``."
msgstr ""
":func:`~dbm.dumb.open` sempre cria um novo banco de dados quando *flag* é "
"``'n'``."

#: ../../library/dbm.rst:382
msgid ""
"A database opened read-only if *flag* is ``'r'``. A database is not created "
"if it does not exist if *flag* is ``'r'`` or ``'w'``."
msgstr ""
"Um banco de dados aberto somente leitura se *flag* for ``'r'``. Um banco de "
"dados não é criado se não existir se *flag* for ``'r'`` ou ``'w'``."

#: ../../library/dbm.rst:389
msgid ""
"In addition to the methods provided by the :class:`collections.abc."
"MutableMapping` class, the following methods are provided:"
msgstr ""
"Além dos métodos fornecidos pela classe :class:`collections.abc."
"MutableMapping`, os seguintes métodos são fornecidos:"

#: ../../library/dbm.rst:395
msgid ""
"Synchronize the on-disk directory and data files.  This method is called by "
"the :meth:`Shelve.sync` method."
msgstr ""

#: ../../library/dbm.rst:400
msgid "Close the database."
msgstr "Fecha o banco de dados."

#: ../../library/dbm.rst:326
msgid "databases"
msgstr "bancos de dados"
