# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-26 20:45+0000\n"
"PO-Revision-Date: 2024-05-11 00:33+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/mimetypes.rst:2
msgid ":mod:`!mimetypes` --- Map filenames to MIME types"
msgstr ":mod:`!mimetypes` --- Mapeia nomes de arquivos para tipos MIME"

#: ../../library/mimetypes.rst:9
msgid "**Source code:** :source:`Lib/mimetypes.py`"
msgstr "**Código-fonte:** :source:`Lib/mimetypes.py`"

#: ../../library/mimetypes.rst:15
msgid ""
"The :mod:`mimetypes` module converts between a filename or URL and the MIME "
"type associated with the filename extension.  Conversions are provided from "
"filename to MIME type and from MIME type to filename extension; encodings "
"are not supported for the latter conversion."
msgstr ""
"O módulo :mod:`mimetypes` converte entre um nome de arquivo ou URL e o tipo "
"MIME associado à extensão do arquivo. As conversões são fornecidas do nome "
"do arquivo para o tipo MIME e da extensão do tipo MIME para o nome do "
"arquivo; codificações não são suportadas para a última conversão."

#: ../../library/mimetypes.rst:20
msgid ""
"The module provides one class and a number of convenience functions. The "
"functions are the normal interface to this module, but some applications may "
"be interested in the class as well."
msgstr ""
"O módulo fornece uma classe e várias funções convenientes. As funções são a "
"interface normal para este módulo, mas algumas aplicações também podem estar "
"interessadas na classe."

#: ../../library/mimetypes.rst:24
msgid ""
"The functions described below provide the primary interface for this "
"module.  If the module has not been initialized, they will call :func:`init` "
"if they rely on the information :func:`init` sets up."
msgstr ""
"As funções descritas abaixo fornecem a interface principal para este módulo. "
"Se o módulo não foi inicializado, eles chamarão :func:`init` se confiarem "
"nas informações :func:`init` configuradas."

#: ../../library/mimetypes.rst:33
msgid ""
"Guess the type of a file based on its filename, path or URL, given by *url*. "
"URL can be a string or a :term:`path-like object`."
msgstr ""
"Adivinha o tipo de arquivo com base em seu nome de arquivo, caminho ou URL, "
"fornecido por *url*. A URL pode ser uma string ou um :term:`objeto caminho "
"ou similar`."

#: ../../library/mimetypes.rst:36
msgid ""
"The return value is a tuple ``(type, encoding)`` where *type* is ``None`` if "
"the type can't be guessed (missing or unknown suffix) or a string of the "
"form ``'type/subtype'``, usable for a MIME :mailheader:`content-type` header."
msgstr ""
"O valor de retorno é uma tupla ``(type, encoding)`` onde o *tipo* é ``None`` "
"se o tipo não puder ser ser adivinhado (sufixo ausente ou desconhecido) ou "
"uma string no formato ``'type/subtype'``, utilizável para um cabeçalho MIME :"
"mailheader:`content-type`."

#: ../../library/mimetypes.rst:40
msgid ""
"*encoding* is ``None`` for no encoding or the name of the program used to "
"encode (e.g. :program:`compress` or :program:`gzip`). The encoding is "
"suitable for use as a :mailheader:`Content-Encoding` header, **not** as a :"
"mailheader:`Content-Transfer-Encoding` header. The mappings are table "
"driven. Encoding suffixes are case sensitive; type suffixes are first tried "
"case sensitively, then case insensitively."
msgstr ""
"*encoding* é ``None`` para nenhuma codificação ou o nome do programa usado "
"para codificar (por exemplo :program:`compress` ou :program:`gzip`). A "
"codificação é adequada para uso como cabeçalho :mailheader:`Content-"
"Encoding` , **não** como cabeçalho :mailheader:`Content-Transfer-Encoding`. "
"Os mapeamentos são orientados por tabela. Os sufixos de codificação "
"diferenciam maiúsculas de minúsculas; os sufixos de tipo são testados "
"primeiro com maiúsculas e minúsculas e depois sem maiúsculas."

#: ../../library/mimetypes.rst:47
msgid ""
"The optional *strict* argument is a flag specifying whether the list of "
"known MIME types is limited to only the official types `registered with IANA "
"<https://www.iana.org/assignments/media-types/media-types.xhtml>`_. When "
"*strict* is ``True`` (the default), only the IANA types are supported; when "
"*strict* is ``False``, some additional non-standard but commonly used MIME "
"types are also recognized."
msgstr ""
"O argumento opcional *strict* é um sinalizador que especifica se a lista de "
"tipos MIME conhecidos é limitada apenas aos tipos oficiais `registrados na "
"IANA <https://www.iana.org/assignments/media-types/media-types.xhtml>`_. "
"Quando *strict* é ``True`` (o padrão), apenas os tipos IANA são suportados; "
"quando *strict* é ``False``, alguns tipos MIME adicionais não padronizados, "
"mas geralmente usados, também são reconhecidos."

#: ../../library/mimetypes.rst:54
msgid "Added support for url being a :term:`path-like object`."
msgstr ""

#: ../../library/mimetypes.rst:60
msgid ""
"Guess the extensions for a file based on its MIME type, given by *type*. The "
"return value is a list of strings giving all possible filename extensions, "
"including the leading dot (``'.'``).  The extensions are not guaranteed to "
"have been associated with any particular data stream, but would be mapped to "
"the MIME type *type* by :func:`guess_type`."
msgstr ""

#: ../../library/mimetypes.rst:66 ../../library/mimetypes.rst:78
msgid ""
"The optional *strict* argument has the same meaning as with the :func:"
"`guess_type` function."
msgstr ""
"O argumento opcional *strict* tem o mesmo significado que com a função :func:"
"`guess_type`."

#: ../../library/mimetypes.rst:71
msgid ""
"Guess the extension for a file based on its MIME type, given by *type*. The "
"return value is a string giving a filename extension, including the leading "
"dot (``'.'``).  The extension is not guaranteed to have been associated with "
"any particular data stream, but would be mapped to the MIME type *type* by :"
"func:`guess_type`.  If no extension can be guessed for *type*, ``None`` is "
"returned."
msgstr ""

#: ../../library/mimetypes.rst:80
msgid ""
"Some additional functions and data items are available for controlling the "
"behavior of the module."
msgstr ""

#: ../../library/mimetypes.rst:86
msgid ""
"Initialize the internal data structures.  If given, *files* must be a "
"sequence of file names which should be used to augment the default type "
"map.  If omitted, the file names to use are taken from :const:`knownfiles`; "
"on Windows, the current registry settings are loaded.  Each file named in "
"*files* or :const:`knownfiles` takes precedence over those named before it.  "
"Calling :func:`init` repeatedly is allowed."
msgstr ""

#: ../../library/mimetypes.rst:93
msgid ""
"Specifying an empty list for *files* will prevent the system defaults from "
"being applied: only the well-known values will be present from a built-in "
"list."
msgstr ""

#: ../../library/mimetypes.rst:96
msgid ""
"If *files* is ``None`` the internal data structure is completely rebuilt to "
"its initial default value. This is a stable operation and will produce the "
"same results when called multiple times."
msgstr ""

#: ../../library/mimetypes.rst:100
msgid "Previously, Windows registry settings were ignored."
msgstr ""

#: ../../library/mimetypes.rst:106
msgid ""
"Load the type map given in the file *filename*, if it exists.  The type map "
"is returned as a dictionary mapping filename extensions, including the "
"leading dot (``'.'``), to strings of the form ``'type/subtype'``.  If the "
"file *filename* does not exist or cannot be read, ``None`` is returned."
msgstr ""

#: ../../library/mimetypes.rst:114 ../../library/mimetypes.rst:279
msgid ""
"Add a mapping from the MIME type *type* to the extension *ext*. When the "
"extension is already known, the new type will replace the old one. When the "
"type is already known the extension will be added to the list of known "
"extensions."
msgstr ""

#: ../../library/mimetypes.rst:118 ../../library/mimetypes.rst:283
msgid ""
"When *strict* is ``True`` (the default), the mapping will be added to the "
"official MIME types, otherwise to the non-standard ones."
msgstr ""

#: ../../library/mimetypes.rst:124
msgid ""
"Flag indicating whether or not the global data structures have been "
"initialized. This is set to ``True`` by :func:`init`."
msgstr ""

#: ../../library/mimetypes.rst:132
msgid ""
"List of type map file names commonly installed.  These files are typically "
"named :file:`mime.types` and are installed in different locations by "
"different packages."
msgstr ""

#: ../../library/mimetypes.rst:139
msgid ""
"Dictionary mapping suffixes to suffixes.  This is used to allow recognition "
"of encoded files for which the encoding and the type are indicated by the "
"same extension.  For example, the :file:`.tgz` extension is mapped to :file:"
"`.tar.gz` to allow the encoding and type to be recognized separately."
msgstr ""

#: ../../library/mimetypes.rst:147
msgid "Dictionary mapping filename extensions to encoding types."
msgstr ""

#: ../../library/mimetypes.rst:152
msgid "Dictionary mapping filename extensions to MIME types."
msgstr ""

#: ../../library/mimetypes.rst:157
msgid ""
"Dictionary mapping filename extensions to non-standard, but commonly found "
"MIME types."
msgstr ""

#: ../../library/mimetypes.rst:161
msgid "An example usage of the module::"
msgstr ""

#: ../../library/mimetypes.rst:163
msgid ""
">>> import mimetypes\n"
">>> mimetypes.init()\n"
">>> mimetypes.knownfiles\n"
"['/etc/mime.types', '/etc/httpd/mime.types', ... ]\n"
">>> mimetypes.suffix_map['.tgz']\n"
"'.tar.gz'\n"
">>> mimetypes.encodings_map['.gz']\n"
"'gzip'\n"
">>> mimetypes.types_map['.tgz']\n"
"'application/x-tar-gz'"
msgstr ""

#: ../../library/mimetypes.rst:178
msgid "MimeTypes Objects"
msgstr "Objetos MimeTypes"

#: ../../library/mimetypes.rst:180
msgid ""
"The :class:`MimeTypes` class may be useful for applications which may want "
"more than one MIME-type database; it provides an interface similar to the "
"one of the :mod:`mimetypes` module."
msgstr ""

#: ../../library/mimetypes.rst:187
msgid ""
"This class represents a MIME-types database.  By default, it provides access "
"to the same database as the rest of this module. The initial database is a "
"copy of that provided by the module, and may be extended by loading "
"additional :file:`mime.types`\\ -style files into the database using the :"
"meth:`read` or :meth:`readfp` methods.  The mapping dictionaries may also be "
"cleared before loading additional data if the default data is not desired."
msgstr ""

#: ../../library/mimetypes.rst:194
msgid ""
"The optional *filenames* parameter can be used to cause additional files to "
"be loaded \"on top\" of the default database."
msgstr ""

#: ../../library/mimetypes.rst:200
msgid ""
"Dictionary mapping suffixes to suffixes.  This is used to allow recognition "
"of encoded files for which the encoding and the type are indicated by the "
"same extension.  For example, the :file:`.tgz` extension is mapped to :file:"
"`.tar.gz` to allow the encoding and type to be recognized separately.  This "
"is initially a copy of the global :data:`suffix_map` defined in the module."
msgstr ""

#: ../../library/mimetypes.rst:209
msgid ""
"Dictionary mapping filename extensions to encoding types.  This is initially "
"a copy of the global :data:`encodings_map` defined in the module."
msgstr ""

#: ../../library/mimetypes.rst:215
msgid ""
"Tuple containing two dictionaries, mapping filename extensions to MIME "
"types: the first dictionary is for the non-standards types and the second "
"one is for the standard types. They are initialized by :data:`common_types` "
"and :data:`types_map`."
msgstr ""

#: ../../library/mimetypes.rst:223
msgid ""
"Tuple containing two dictionaries, mapping MIME types to a list of filename "
"extensions: the first dictionary is for the non-standards types and the "
"second one is for the standard types. They are initialized by :data:"
"`common_types` and :data:`types_map`."
msgstr ""

#: ../../library/mimetypes.rst:231
msgid ""
"Similar to the :func:`guess_extension` function, using the tables stored as "
"part of the object."
msgstr ""

#: ../../library/mimetypes.rst:237
msgid ""
"Similar to the :func:`guess_type` function, using the tables stored as part "
"of the object."
msgstr ""

#: ../../library/mimetypes.rst:243
msgid ""
"Similar to the :func:`guess_all_extensions` function, using the tables "
"stored as part of the object."
msgstr ""

#: ../../library/mimetypes.rst:249
msgid ""
"Load MIME information from a file named *filename*.  This uses :meth:"
"`readfp` to parse the file."
msgstr ""

#: ../../library/mimetypes.rst:252
msgid ""
"If *strict* is ``True``, information will be added to list of standard "
"types, else to the list of non-standard types."
msgstr ""

#: ../../library/mimetypes.rst:258
msgid ""
"Load MIME type information from an open file *fp*.  The file must have the "
"format of the standard :file:`mime.types` files."
msgstr ""
"Carrega informações do tipo MIME de um arquivo aberto *fp*. O arquivo "
"precisa estar no formato padrão dos arquivos :file:`mime.types`."

#: ../../library/mimetypes.rst:261 ../../library/mimetypes.rst:271
msgid ""
"If *strict* is ``True``, information will be added to the list of standard "
"types, else to the list of non-standard types."
msgstr ""

#: ../../library/mimetypes.rst:267
msgid "Load MIME type information from the Windows registry."
msgstr "Carrega informações do tipo MIME a partir do registro do Windows."

#: ../../library/mimetypes.rst:269
msgid "Availability"
msgstr "Disponibilidade"

#: ../../library/mimetypes.rst:11 ../../library/mimetypes.rst:31
msgid "MIME"
msgstr "MIME"

#: ../../library/mimetypes.rst:11
msgid "content type"
msgstr ""

#: ../../library/mimetypes.rst:31
msgid "headers"
msgstr ""

#: ../../library/mimetypes.rst:130
msgid "file"
msgstr "arquivo"

#: ../../library/mimetypes.rst:130
msgid "mime.types"
msgstr ""
