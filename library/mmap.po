# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-23 16:12+0000\n"
"PO-Revision-Date: 2022-11-05 17:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/mmap.rst:2
msgid ":mod:`mmap` --- Memory-mapped file support"
msgstr ":mod:`mmap` --- Suporte a arquivos mapeados na memória"

#: ../../library/mmap.rst:9
msgid ""
"Memory-mapped file objects behave like both :class:`bytearray` and like :"
"term:`file objects <file object>`.  You can use mmap objects in most places "
"where :class:`bytearray` are expected; for example, you can use the :mod:"
"`re` module to search through a memory-mapped file.  You can also change a "
"single byte by doing ``obj[index] = 97``, or change a subsequence by "
"assigning to a slice: ``obj[i1:i2] = b'...'``.  You can also read and write "
"data starting at the current file position, and :meth:`seek` through the "
"file to different positions."
msgstr ""
"Objetos arquivo mapeados na memória se comportam como :class:`bytearray` e "
"como :term:`objetos arquivo <file object>`. Você pode usar objetos mmap na "
"maioria dos lugares onde :class:`bytearray` é esperado; por exemplo, você "
"pode usar o módulo :mod:`re` para pesquisar um arquivo mapeado na memória. "
"Você também pode alterar um único byte executando ``obj[index] = 97`` ou "
"alterar uma subsequência atribuindo a uma fatia: ``obj[i1:i2] = b'...'``. "
"Você também pode ler e gravar dados começando na posição atual do arquivo e :"
"meth:`seek` através do arquivo para diferentes posições."

#: ../../library/mmap.rst:17
msgid ""
"A memory-mapped file is created by the :class:`~mmap.mmap` constructor, "
"which is different on Unix and on Windows.  In either case you must provide "
"a file descriptor for a file opened for update. If you wish to map an "
"existing Python file object, use its :meth:`fileno` method to obtain the "
"correct value for the *fileno* parameter.  Otherwise, you can open the file "
"using the :func:`os.open` function, which returns a file descriptor directly "
"(the file still needs to be closed when done)."
msgstr ""
"Um arquivo mapeado na memória é criado pelo construtor :class:`~mmap.mmap`, "
"que é diferente no Unix e no Windows. Nos dois casos, você deve fornecer um "
"descritor de arquivo para um arquivo aberto para atualização. Se você deseja "
"mapear um objeto arquivo Python existente, use o método :meth:`fileno` para "
"obter o valor correto para o parâmetro *fileno*. Caso contrário, você pode "
"abrir o arquivo usando a função :func:`os.open`, que retorna um descritor de "
"arquivo diretamente (o arquivo ainda precisa ser fechado quando terminar)."

#: ../../library/mmap.rst:26
msgid ""
"If you want to create a memory-mapping for a writable, buffered file, you "
"should :func:`~io.IOBase.flush` the file first.  This is necessary to ensure "
"that local modifications to the buffers are actually available to the "
"mapping."
msgstr ""
"Se você deseja criar um mapeamento de memória para um arquivo gravável e "
"armazenado em buffer, deve usar :func:`~io.IOBase.flush` no arquivo "
"primeiro. Isso é necessário para garantir que as modificações locais nos "
"buffers estejam realmente disponíveis para o mapeamento."

#: ../../library/mmap.rst:31
msgid ""
"For both the Unix and Windows versions of the constructor, *access* may be "
"specified as an optional keyword parameter. *access* accepts one of four "
"values: :const:`ACCESS_READ`, :const:`ACCESS_WRITE`, or :const:`ACCESS_COPY` "
"to specify read-only, write-through or copy-on-write memory respectively, "
"or :const:`ACCESS_DEFAULT` to defer to *prot*.  *access* can be used on both "
"Unix and Windows.  If *access* is not specified, Windows mmap returns a "
"write-through mapping.  The initial memory values for all three access types "
"are taken from the specified file.  Assignment to an :const:`ACCESS_READ` "
"memory map raises a :exc:`TypeError` exception.  Assignment to an :const:"
"`ACCESS_WRITE` memory map affects both memory and the underlying file. "
"Assignment to an :const:`ACCESS_COPY` memory map affects memory but does not "
"update the underlying file."
msgstr ""
"Para as versões Unix e Windows do construtor, *access* pode ser especificado "
"como um parâmetro opcional de palavra-chave. *access* aceita um dos quatro "
"valores: :const:`ACCESS_READ`, :const:`ACCESS_WRITE` ou :const:`ACCESS_COPY` "
"para especificar memória somente leitura, gravação ou cópia na gravação, "
"respectivamente :const:`ACCESS_DEFAULT` para adiar para *prot*. *access* "
"pode ser usado no Unix e no Windows. Se *access* não for especificado, o "
"mmap do Windows retornará um mapeamento de gravação. Os valores iniciais da "
"memória para todos os três tipos de acesso são obtidos do arquivo "
"especificado. A atribuição a um mapa de memória :const:`ACCESS_READ` gera "
"uma exceção :exc:`TypeError`. A atribuição a um mapa de memória :const:"
"`ACCESS_WRITE` afeta a memória e o arquivo subjacente. A atribuição a um "
"mapa de memória :const:`ACCESS_COPY` afeta a memória, mas não atualiza o "
"arquivo subjacente."

#: ../../library/mmap.rst:44
msgid "Added :const:`ACCESS_DEFAULT` constant."
msgstr "Adicionada a constante :const:`ACCESS_DEFAULT`."

#: ../../library/mmap.rst:47
msgid ""
"To map anonymous memory, -1 should be passed as the fileno along with the "
"length."
msgstr ""
"Para mapear a memória anônima, -1 deve ser passado como o fileno junto com o "
"comprimento."

#: ../../library/mmap.rst:51
msgid ""
"**(Windows version)** Maps *length* bytes from the file specified by the "
"file handle *fileno*, and creates a mmap object.  If *length* is larger than "
"the current size of the file, the file is extended to contain *length* "
"bytes.  If *length* is ``0``, the maximum length of the map is the current "
"size of the file, except that if the file is empty Windows raises an "
"exception (you cannot create an empty mapping on Windows)."
msgstr ""
"**(Versão Windows)** Mapeia *length* bytes do arquivo especificado pelo "
"identificador de arquivo *fileno* e cria um objeto mmap. Se *length* for "
"maior que o tamanho atual do arquivo, o arquivo será estendido para conter "
"*length* bytes. Se *length* for ``0``, o tamanho máximo do mapa será o "
"tamanho atual do arquivo, exceto que, se o arquivo estiver vazio, o Windows "
"levantará uma exceção (você não poderá criar um mapeamento vazio no Windows)."

#: ../../library/mmap.rst:58
msgid ""
"*tagname*, if specified and not ``None``, is a string giving a tag name for "
"the mapping.  Windows allows you to have many different mappings against the "
"same file.  If you specify the name of an existing tag, that tag is opened, "
"otherwise a new tag of this name is created.  If this parameter is omitted "
"or ``None``, the mapping is created without a name.  Avoiding the use of the "
"tag parameter will assist in keeping your code portable between Unix and "
"Windows."
msgstr ""
"*tagname*, se especificado e não ``None``, é uma string que fornece um nome "
"de tag para o mapeamento. O Windows permite que você tenha muitos "
"mapeamentos diferentes no mesmo arquivo. Se você especificar o nome de uma "
"marca existente, essa marca será aberta; caso contrário, uma nova marca com "
"esse nome será criada. Se este parâmetro for omitido ou ``None``, o "
"mapeamento será criado sem um nome. Evitar o uso do parâmetro tag ajudará a "
"manter seu código portátil entre o Unix e o Windows."

#: ../../library/mmap.rst:66
msgid ""
"*offset* may be specified as a non-negative integer offset. mmap references "
"will be relative to the offset from the beginning of the file. *offset* "
"defaults to 0.  *offset* must be a multiple of the :const:"
"`ALLOCATIONGRANULARITY`."
msgstr ""

#: ../../library/mmap.rst:70 ../../library/mmap.rst:161
msgid ""
"Raises an :ref:`auditing event <auditing>` ``mmap.__new__`` with arguments "
"``fileno``, ``length``, ``access``, ``offset``."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``mmap.__new__`` com os "
"argumentos ``fileno``, ``length``, ``access``, ``offset``."

#: ../../library/mmap.rst:75
msgid ""
"**(Unix version)** Maps *length* bytes from the file specified by the file "
"descriptor *fileno*, and returns a mmap object.  If *length* is ``0``, the "
"maximum length of the map will be the current size of the file when :class:"
"`~mmap.mmap` is called."
msgstr ""

#: ../../library/mmap.rst:80
msgid ""
"*flags* specifies the nature of the mapping. :const:`MAP_PRIVATE` creates a "
"private copy-on-write mapping, so changes to the contents of the mmap object "
"will be private to this process, and :const:`MAP_SHARED` creates a mapping "
"that's shared with all other processes mapping the same areas of the file.  "
"The default value is :const:`MAP_SHARED`. Some systems have additional "
"possible flags with the full list specified in :ref:`MAP_* constants <map-"
"constants>`."
msgstr ""

#: ../../library/mmap.rst:88
msgid ""
"*prot*, if specified, gives the desired memory protection; the two most "
"useful values are :const:`PROT_READ` and :const:`PROT_WRITE`, to specify "
"that the pages may be read or written.  *prot* defaults to :const:`PROT_READ "
"\\| PROT_WRITE`."
msgstr ""

#: ../../library/mmap.rst:93
msgid ""
"*access* may be specified in lieu of *flags* and *prot* as an optional "
"keyword parameter.  It is an error to specify both *flags*, *prot* and "
"*access*.  See the description of *access* above for information on how to "
"use this parameter."
msgstr ""

#: ../../library/mmap.rst:98
msgid ""
"*offset* may be specified as a non-negative integer offset. mmap references "
"will be relative to the offset from the beginning of the file. *offset* "
"defaults to 0. *offset* must be a multiple of :const:`ALLOCATIONGRANULARITY` "
"which is equal to :const:`PAGESIZE` on Unix systems."
msgstr ""

#: ../../library/mmap.rst:103
msgid ""
"To ensure validity of the created memory mapping the file specified by the "
"descriptor *fileno* is internally automatically synchronized with the "
"physical backing store on macOS."
msgstr ""

#: ../../library/mmap.rst:107
msgid "This example shows a simple way of using :class:`~mmap.mmap`::"
msgstr ""

#: ../../library/mmap.rst:132
msgid ""
":class:`~mmap.mmap` can also be used as a context manager in a :keyword:"
"`with` statement::"
msgstr ""

#: ../../library/mmap.rst:140
msgid "Context manager support."
msgstr "Suporte a gerenciador de contexto."

#: ../../library/mmap.rst:144
msgid ""
"The next example demonstrates how to create an anonymous map and exchange "
"data between the parent and child processes::"
msgstr ""

#: ../../library/mmap.rst:163
msgid "Memory-mapped file objects support the following methods:"
msgstr ""

#: ../../library/mmap.rst:167
msgid ""
"Closes the mmap. Subsequent calls to other methods of the object will result "
"in a ValueError exception being raised. This will not close the open file."
msgstr ""

#: ../../library/mmap.rst:174
msgid "``True`` if the file is closed."
msgstr ""

#: ../../library/mmap.rst:181
msgid ""
"Returns the lowest index in the object where the subsequence *sub* is found, "
"such that *sub* is contained in the range [*start*, *end*]. Optional "
"arguments *start* and *end* are interpreted as in slice notation. Returns "
"``-1`` on failure."
msgstr ""

#: ../../library/mmap.rst:186 ../../library/mmap.rst:267
#: ../../library/mmap.rst:299
msgid "Writable :term:`bytes-like object` is now accepted."
msgstr ""

#: ../../library/mmap.rst:192
msgid ""
"Flushes changes made to the in-memory copy of a file back to disk. Without "
"use of this call there is no guarantee that changes are written back before "
"the object is destroyed.  If *offset* and *size* are specified, only changes "
"to the given range of bytes will be flushed to disk; otherwise, the whole "
"extent of the mapping is flushed.  *offset* must be a multiple of the :const:"
"`PAGESIZE` or :const:`ALLOCATIONGRANULARITY`."
msgstr ""

#: ../../library/mmap.rst:199
msgid ""
"``None`` is returned to indicate success.  An exception is raised when the "
"call failed."
msgstr ""

#: ../../library/mmap.rst:202
msgid ""
"Previously, a nonzero value was returned on success; zero was returned on "
"error under Windows.  A zero value was returned on success; an exception was "
"raised on error under Unix."
msgstr ""

#: ../../library/mmap.rst:210
msgid ""
"Send advice *option* to the kernel about the memory region beginning at "
"*start* and extending *length* bytes.  *option* must be one of the :ref:"
"`MADV_* constants <madvise-constants>` available on the system.  If *start* "
"and *length* are omitted, the entire mapping is spanned.  On some systems "
"(including Linux), *start* must be a multiple of the :const:`PAGESIZE`."
msgstr ""

#: ../../library/mmap.rst:217
msgid "Availability: Systems with the ``madvise()`` system call."
msgstr ""

#: ../../library/mmap.rst:224
msgid ""
"Copy the *count* bytes starting at offset *src* to the destination index "
"*dest*.  If the mmap was created with :const:`ACCESS_READ`, then calls to "
"move will raise a :exc:`TypeError` exception."
msgstr ""

#: ../../library/mmap.rst:231
msgid ""
"Return a :class:`bytes` containing up to *n* bytes starting from the current "
"file position. If the argument is omitted, ``None`` or negative, return all "
"bytes from the current file position to the end of the mapping. The file "
"position is updated to point after the bytes that were returned."
msgstr ""

#: ../../library/mmap.rst:237
msgid "Argument can be omitted or ``None``."
msgstr ""

#: ../../library/mmap.rst:242
msgid ""
"Returns a byte at the current file position as an integer, and advances the "
"file position by 1."
msgstr ""

#: ../../library/mmap.rst:248
msgid ""
"Returns a single line, starting at the current file position and up to the "
"next newline. The file position is updated to point after the bytes that "
"were returned."
msgstr ""

#: ../../library/mmap.rst:255
msgid ""
"Resizes the map and the underlying file, if any. If the mmap was created "
"with :const:`ACCESS_READ` or :const:`ACCESS_COPY`, resizing the map will "
"raise a :exc:`TypeError` exception."
msgstr ""

#: ../../library/mmap.rst:262
msgid ""
"Returns the highest index in the object where the subsequence *sub* is "
"found, such that *sub* is contained in the range [*start*, *end*]. Optional "
"arguments *start* and *end* are interpreted as in slice notation. Returns "
"``-1`` on failure."
msgstr ""

#: ../../library/mmap.rst:273
msgid ""
"Set the file's current position.  *whence* argument is optional and defaults "
"to ``os.SEEK_SET`` or ``0`` (absolute file positioning); other values are "
"``os.SEEK_CUR`` or ``1`` (seek relative to the current position) and ``os."
"SEEK_END`` or ``2`` (seek relative to the file's end)."
msgstr ""

#: ../../library/mmap.rst:281
msgid ""
"Return the length of the file, which can be larger than the size of the "
"memory-mapped area."
msgstr ""

#: ../../library/mmap.rst:287
msgid "Returns the current position of the file pointer."
msgstr ""

#: ../../library/mmap.rst:292
msgid ""
"Write the bytes in *bytes* into memory at the current position of the file "
"pointer and return the number of bytes written (never less than "
"``len(bytes)``, since if the write fails, a :exc:`ValueError` will be "
"raised).  The file position is updated to point after the bytes that were "
"written.  If the mmap was created with :const:`ACCESS_READ`, then writing to "
"it will raise a :exc:`TypeError` exception."
msgstr ""

#: ../../library/mmap.rst:302
msgid "The number of bytes written is now returned."
msgstr ""

#: ../../library/mmap.rst:308
msgid ""
"Write the integer *byte* into memory at the current position of the file "
"pointer; the file position is advanced by ``1``. If the mmap was created "
"with :const:`ACCESS_READ`, then writing to it will raise a :exc:`TypeError` "
"exception."
msgstr ""

#: ../../library/mmap.rst:316
msgid "MADV_* Constants"
msgstr "Constantes MADV_*"

#: ../../library/mmap.rst:343
msgid ""
"These options can be passed to :meth:`mmap.madvise`.  Not every option will "
"be present on every system."
msgstr ""

#: ../../library/mmap.rst:346
msgid "Availability: Systems with the madvise() system call."
msgstr ""

#: ../../library/mmap.rst:353
msgid "MAP_* Constants"
msgstr "Constantes MAP_*"

#: ../../library/mmap.rst:363
msgid ""
"These are the various flags that can be passed to :meth:`mmap.mmap`. Note "
"that some options might not be present on some systems."
msgstr ""

#: ../../library/mmap.rst:365
msgid "Added MAP_POPULATE constant."
msgstr ""
