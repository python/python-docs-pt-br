# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Raphael Mendonça, 2021
# i17obot <i17obot@rougeth.com>, 2021
# Welington Carlos <wcarlos3@gmail.com>, 2021
# Tiago Henrique <tiagohrm@gmail.com>, 2021
# (Douglas da Silva) <dementikovalev@yandex.ru>, 2021
# Misael borges <misael@planosassessoria.com.br>, 2021
# Danilo Lima <djkcond@gmail.com>, 2021
# Italo Penaforte <italo.penaforte@gmail.com>, 2022
# Julia Rizza <contato@juliarizza.com>, 2023
# Vinicius Gubiani Ferreira <vini.g.fer@gmail.com>, 2023
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2023
# Marco Rougeth <marco@rougeth.com>, 2023
# felipe caridade fernandes <caridade500@gmail.com>, 2023
# Ricardo Cappellano <rcappellano@gmail.com>, 2023
# Patricia Mortada, 2023
# Lucas Gonçalves Cordeiro <lucasgon192@gmail.com>, 2023
# Leandro Cavalcante Damascena <leandro.damascena@gmail.com>, 2024
# Adorilson Bezerra <adorilson@gmail.com>, 2024
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-18 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 01:13+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/stdtypes.rst:8
msgid "Built-in Types"
msgstr "Tipos embutidos"

#: ../../library/stdtypes.rst:10
msgid ""
"The following sections describe the standard types that are built into the "
"interpreter."
msgstr ""
"As seções a seguir descrevem os tipos padrão que são embutidos ao "
"interpretador."

#: ../../library/stdtypes.rst:15
msgid ""
"The principal built-in types are numerics, sequences, mappings, classes, "
"instances and exceptions."
msgstr ""
"Os principais tipos embutidos são numéricos, sequências, mapeamentos, "
"classes, instâncias e exceções."

#: ../../library/stdtypes.rst:18
msgid ""
"Some collection classes are mutable.  The methods that add, subtract, or "
"rearrange their members in place, and don't return a specific item, never "
"return the collection instance itself but ``None``."
msgstr ""
"Algumas classes de coleção são mutáveis. Os métodos que adicionam, subtraem "
"ou reorganizam seus membros no lugar, e não retornam um item específico, "
"nunca retornam a instância da coleção propriamente dita, mas um ``None``."

#: ../../library/stdtypes.rst:22
msgid ""
"Some operations are supported by several object types; in particular, "
"practically all objects can be compared for equality, tested for truth "
"value, and converted to a string (with the :func:`repr` function or the "
"slightly different :func:`str` function).  The latter function is implicitly "
"used when an object is written by the :func:`print` function."
msgstr ""
"Algumas operações são suportadas por vários tipos de objetos; em particular, "
"praticamente todos os objetos podem ser comparados em termos de igualdade, "
"testados quanto ao valor verdade e convertidos em uma string (com a função :"
"func:`repr` ou a função ligeiramente diferente :func:`str`). A última função "
"é implicitamente usada quando um objeto é escrito pela função :func:`print`."

#: ../../library/stdtypes.rst:32
msgid "Truth Value Testing"
msgstr "Teste do valor verdade"

#: ../../library/stdtypes.rst:41
msgid ""
"Any object can be tested for truth value, for use in an :keyword:`if` or :"
"keyword:`while` condition or as operand of the Boolean operations below."
msgstr ""
"Qualquer objeto pode ser testado quanto ao valor verdade, para uso em uma "
"condição :keyword:`if` ou :keyword:`while` ou como operando das operações "
"booleanas abaixo."

#: ../../library/stdtypes.rst:46
msgid ""
"By default, an object is considered true unless its class defines either a :"
"meth:`~object.__bool__` method that returns ``False`` or a :meth:`~object."
"__len__` method that returns zero, when called with the object. [1]_  Here "
"are most of the built-in objects considered false:"
msgstr ""
"Por padrão, um objeto é considerado verdadeiro, a menos que sua a classe "
"defina um método :meth:`~object.__bool__` que retorne ``False`` ou um "
"método :meth:`~object.__len__` que retorna zero, quando chamado com o "
"objeto. [1]_ Aqui estão a maioria dos objetos embutidos considerados falsos:"

#: ../../library/stdtypes.rst:56
msgid "constants defined to be false: ``None`` and ``False``"
msgstr "constantes definidas para serem falsas: ``None`` e ``False``"

#: ../../library/stdtypes.rst:58
msgid ""
"zero of any numeric type: ``0``, ``0.0``, ``0j``, ``Decimal(0)``, "
"``Fraction(0, 1)``"
msgstr ""
"zero de qualquer tipo numérico: ``0``, ``0.0``, ``0j``, ``Decimal(0)``, "
"``Fraction(0, 1)``"

#: ../../library/stdtypes.rst:61
msgid ""
"empty sequences and collections: ``''``, ``()``, ``[]``, ``{}``, ``set()``, "
"``range(0)``"
msgstr ""
"sequências e coleções vazias: ``''``, ``()``, ``[]``, ``{}``, ``set()``, "
"``range(0)``"

#: ../../library/stdtypes.rst:70
msgid ""
"Operations and built-in functions that have a Boolean result always return "
"``0`` or ``False`` for false and ``1`` or ``True`` for true, unless "
"otherwise stated. (Important exception: the Boolean operations ``or`` and "
"``and`` always return one of their operands.)"
msgstr ""
"Operações e funções embutidas que têm um resultado Booleano retornam ``0`` "
"ou ``False`` para falso e ``1`` ou ``True`` para verdadeiro, salvo "
"indicações ao contrário. (Exceção importante: as operações Booleanas ``or`` "
"e ``and`` sempre retornam um de seus operandos.)"

#: ../../library/stdtypes.rst:79
msgid "Boolean Operations --- :keyword:`!and`, :keyword:`!or`, :keyword:`!not`"
msgstr ""
"Operações booleanas --- :keyword:`!and`, :keyword:`!or`, :keyword:`!not`"

#: ../../library/stdtypes.rst:83
msgid "These are the Boolean operations, ordered by ascending priority:"
msgstr "Esses são as operações booleanas, ordenados por prioridade ascendente:"

#: ../../library/stdtypes.rst:86 ../../library/stdtypes.rst:144
#: ../../library/stdtypes.rst:276 ../../library/stdtypes.rst:366
#: ../../library/stdtypes.rst:416 ../../library/stdtypes.rst:965
#: ../../library/stdtypes.rst:1170
msgid "Operation"
msgstr "Operação"

#: ../../library/stdtypes.rst:86 ../../library/stdtypes.rst:276
#: ../../library/stdtypes.rst:366 ../../library/stdtypes.rst:416
#: ../../library/stdtypes.rst:965 ../../library/stdtypes.rst:1170
msgid "Result"
msgstr "Resultado"

#: ../../library/stdtypes.rst:86 ../../library/stdtypes.rst:276
#: ../../library/stdtypes.rst:416 ../../library/stdtypes.rst:965
#: ../../library/stdtypes.rst:1170 ../../library/stdtypes.rst:2432
#: ../../library/stdtypes.rst:3651
msgid "Notes"
msgstr "Notas"

#: ../../library/stdtypes.rst:88
msgid "``x or y``"
msgstr "``x or y``"

#: ../../library/stdtypes.rst:88
msgid "if *x* is true, then *x*, else *y*"
msgstr "se *x* é true, então *x*, do contrário *y*"

#: ../../library/stdtypes.rst:88 ../../library/stdtypes.rst:967
#: ../../library/stdtypes.rst:970 ../../library/stdtypes.rst:1181
#: ../../library/stdtypes.rst:2438 ../../library/stdtypes.rst:3657
msgid "\\(1)"
msgstr "\\(1)"

#: ../../library/stdtypes.rst:91
msgid "``x and y``"
msgstr "``x and y``"

#: ../../library/stdtypes.rst:91
msgid "if *x* is false, then *x*, else *y*"
msgstr "se *x* é falso, então *x*, do contrário *y*"

#: ../../library/stdtypes.rst:91 ../../library/stdtypes.rst:289
#: ../../library/stdtypes.rst:309 ../../library/stdtypes.rst:1209
#: ../../library/stdtypes.rst:2442 ../../library/stdtypes.rst:2444
#: ../../library/stdtypes.rst:3661 ../../library/stdtypes.rst:3663
msgid "\\(2)"
msgstr "\\(2)"

#: ../../library/stdtypes.rst:94
msgid "``not x``"
msgstr "``not x``"

#: ../../library/stdtypes.rst:94
msgid "if *x* is false, then ``True``, else ``False``"
msgstr "se *x* é falso, então ``True``, caso contrário ``False``"

#: ../../library/stdtypes.rst:94 ../../library/stdtypes.rst:979
#: ../../library/stdtypes.rst:1212 ../../library/stdtypes.rst:2446
#: ../../library/stdtypes.rst:2448 ../../library/stdtypes.rst:2450
#: ../../library/stdtypes.rst:2452 ../../library/stdtypes.rst:3665
#: ../../library/stdtypes.rst:3667 ../../library/stdtypes.rst:3669
#: ../../library/stdtypes.rst:3671
msgid "\\(3)"
msgstr "\\(3)"

#: ../../library/stdtypes.rst:103 ../../library/stdtypes.rst:320
#: ../../library/stdtypes.rst:434 ../../library/stdtypes.rst:1016
#: ../../library/stdtypes.rst:1221 ../../library/stdtypes.rst:2478
#: ../../library/stdtypes.rst:3701
msgid "Notes:"
msgstr "Notas:"

#: ../../library/stdtypes.rst:106
msgid ""
"This is a short-circuit operator, so it only evaluates the second argument "
"if the first one is false."
msgstr ""
"Esse é um operador de curto-circuito, por isso só avalia o segundo argumento "
"se o primeiro é falso."

#: ../../library/stdtypes.rst:110
msgid ""
"This is a short-circuit operator, so it only evaluates the second argument "
"if the first one is true."
msgstr ""
"Este é um operador de curto-circuito, por isso só avalia o segundo argumento "
"se o primeiro é verdadeiro."

#: ../../library/stdtypes.rst:114
msgid ""
"``not`` has a lower priority than non-Boolean operators, so ``not a == b`` "
"is interpreted as ``not (a == b)``, and ``a == not b`` is a syntax error."
msgstr ""
"``not`` tem uma prioridade mais baixa do que operadores não booleanos, então "
"``not a == b`` é interpretado como ``not (a == b)`` e ``a == not b`` é um "
"erro de sintaxe."

#: ../../library/stdtypes.rst:121
msgid "Comparisons"
msgstr "Comparações"

#: ../../library/stdtypes.rst:135
msgid ""
"There are eight comparison operations in Python.  They all have the same "
"priority (which is higher than that of the Boolean operations).  Comparisons "
"can be chained arbitrarily; for example, ``x < y <= z`` is equivalent to ``x "
"< y and y <= z``, except that *y* is evaluated only once (but in both cases "
"*z* is not evaluated at all when ``x < y`` is found to be false)."
msgstr ""
"Há oito operadores comparativos no Python. Todos eles possuem a mesma "
"prioridade (que é maior do que aquela das operações Booleanas). Comparações "
"podem ser encadeadas arbitrariamente; por exemplo, ``x < y <= z`` é "
"equivalente a ``x < y and y <= z``, exceto que *y* é avaliado apenas uma vez "
"(porém em ambos os casos *z* não é avaliado de todo quando ``x < y`` é "
"sabido ser falso)."

#: ../../library/stdtypes.rst:141
msgid "This table summarizes the comparison operations:"
msgstr "Esta tabela resume as operações de comparação:"

#: ../../library/stdtypes.rst:144 ../../library/stdtypes.rst:2409
#: ../../library/stdtypes.rst:2432 ../../library/stdtypes.rst:3628
#: ../../library/stdtypes.rst:3651
msgid "Meaning"
msgstr "Significado"

#: ../../library/stdtypes.rst:146
msgid "``<``"
msgstr "``<``"

#: ../../library/stdtypes.rst:146
msgid "strictly less than"
msgstr "estritamente menor que"

#: ../../library/stdtypes.rst:148
msgid "``<=``"
msgstr "``<=``"

#: ../../library/stdtypes.rst:148
msgid "less than or equal"
msgstr "menor que ou igual"

#: ../../library/stdtypes.rst:150
msgid "``>``"
msgstr "``>``"

#: ../../library/stdtypes.rst:150
msgid "strictly greater than"
msgstr "estritamente maior que"

#: ../../library/stdtypes.rst:152
msgid "``>=``"
msgstr "``>=``"

#: ../../library/stdtypes.rst:152
msgid "greater than or equal"
msgstr "maior que ou igual"

#: ../../library/stdtypes.rst:154
msgid "``==``"
msgstr "``==``"

#: ../../library/stdtypes.rst:154
msgid "equal"
msgstr "igual"

#: ../../library/stdtypes.rst:156
msgid "``!=``"
msgstr "``!=``"

#: ../../library/stdtypes.rst:156
msgid "not equal"
msgstr "não é igual"

#: ../../library/stdtypes.rst:158
msgid "``is``"
msgstr "``is``"

#: ../../library/stdtypes.rst:158
msgid "object identity"
msgstr "identidade do objeto"

#: ../../library/stdtypes.rst:160
msgid "``is not``"
msgstr "``is not``"

#: ../../library/stdtypes.rst:160
msgid "negated object identity"
msgstr "identidade de objeto negada"

#: ../../library/stdtypes.rst:167
msgid ""
"Objects of different types, except different numeric types, never compare "
"equal. The ``==`` operator is always defined but for some object types (for "
"example, class objects) is equivalent to :keyword:`is`. The ``<``, ``<=``, "
"``>`` and ``>=`` operators are only defined where they make sense; for "
"example, they raise a :exc:`TypeError` exception when one of the arguments "
"is a complex number."
msgstr ""
"Objetos de tipos diferentes, exceto tipos numéricos diferentes, nunca "
"comparam iguais. O operador ``==`` é sempre definido, mas para alguns tipos "
"de objetos (por exemplo, objetos de classe) é equivalente a :keyword:`is`. "
"Os operadores ``<``, ``<=``, ``>`` e ``>=`` são definidos apenas onde fazem "
"sentido; por exemplo, eles levantam uma exceção :exc:`TypeError` quando um "
"dos argumentos é um número complexo."

#: ../../library/stdtypes.rst:181
msgid ""
"Non-identical instances of a class normally compare as non-equal unless the "
"class defines the :meth:`~object.__eq__` method."
msgstr ""
"Instâncias não idênticas de uma classe normalmente comparam-se como "
"desiguais ao menos que a classe defina o método :meth:`~object.__eq__`."

#: ../../library/stdtypes.rst:184
msgid ""
"Instances of a class cannot be ordered with respect to other instances of "
"the same class, or other types of object, unless the class defines enough of "
"the methods :meth:`~object.__lt__`, :meth:`~object.__le__`, :meth:`~object."
"__gt__`, and :meth:`~object.__ge__` (in general, :meth:`~object.__lt__` and :"
"meth:`~object.__eq__` are sufficient, if you want the conventional meanings "
"of the comparison operators)."
msgstr ""
"Instâncias de uma classe não podem ser ordenadas com respeito a outras "
"instâncias da mesma classe, ou outros tipos de objeto, ao menos que a classe "
"defina o suficiente dos métodos :meth:`~object.__lt__`, :meth:`~object."
"__le__`, :meth:`~object.__gt__` e :meth:`~object.__ge__` (no geral, :meth:"
"`~object.__lt__` e :meth:`~object.__eq__` são suficientes, se você quiser o "
"significado convencional dos operadores de comparação)."

#: ../../library/stdtypes.rst:191
msgid ""
"The behavior of the :keyword:`is` and :keyword:`is not` operators cannot be "
"customized; also they can be applied to any two objects and never raise an "
"exception."
msgstr ""
"O comportamento dos operadores :keyword:`is` e :keyword:`is not` não pode "
"ser personalizado; além disso eles podem ser aplicados a quaisquer dois "
"objetos e nunca levantam uma exceção."

#: ../../library/stdtypes.rst:199
msgid ""
"Two more operations with the same syntactic priority, :keyword:`in` and :"
"keyword:`not in`, are supported by types that are :term:`iterable` or "
"implement the :meth:`~object.__contains__` method."
msgstr ""
"Mais duas operações com a mesma prioridade sintática, :keyword:`in` e :"
"keyword:`not in`, são suportadas por tipos que são :term:`iteráveis "
"<iterável>` ou implementam o método :meth:`~object.__contains__`."

#: ../../library/stdtypes.rst:206
msgid "Numeric Types --- :class:`int`, :class:`float`, :class:`complex`"
msgstr "Tipos numéricos --- :class:`int`, :class:`float`, :class:`complex`"

#: ../../library/stdtypes.rst:216
msgid ""
"There are three distinct numeric types: :dfn:`integers`, :dfn:`floating-"
"point numbers`, and :dfn:`complex numbers`.  In addition, Booleans are a "
"subtype of integers.  Integers have unlimited precision.  Floating-point "
"numbers are usually implemented using :c:expr:`double` in C; information "
"about the precision and internal representation of floating-point numbers "
"for the machine on which your program is running is available in :data:`sys."
"float_info`.  Complex numbers have a real and imaginary part, which are each "
"a floating-point number.  To extract these parts from a complex number *z*, "
"use ``z.real`` and ``z.imag``. (The standard library includes the additional "
"numeric types :mod:`fractions.Fraction`, for rationals, and :mod:`decimal."
"Decimal`, for floating-point numbers with user-definable precision.)"
msgstr ""
"Existem três tipos numéricos distintos: :dfn:`inteiros`, :dfn:`números de "
"ponto flutuante` e :dfn:`números complexos`. Além disso, os booleanos são um "
"subtipo de números inteiros. Inteiros têm precisão ilimitada. Números de "
"ponto flutuante são geralmente implementados usando :c:expr:`double` em C; "
"informações sobre a precisão e representação interna dos números de ponto "
"flutuante para a máquina na qual seu programa está sendo executado estão "
"disponíveis em :data:`sys.float_info`. Números complexos têm uma parte real "
"e imaginária, cada um com um número de ponto flutuante. Para extrair essas "
"partes de um número complexo *z*, use ``z.real`` e ``z.imag``. (A biblioteca "
"padrão inclui os tipos numéricos adicionais :mod:`fractions.Fraction`, para "
"racionais, e :mod:`decimal.Decimal`, para números de ponto flutuante com "
"precisão definida pelo usuário.)"

#: ../../library/stdtypes.rst:238
msgid ""
"Numbers are created by numeric literals or as the result of built-in "
"functions and operators.  Unadorned integer literals (including hex, octal "
"and binary numbers) yield integers.  Numeric literals containing a decimal "
"point or an exponent sign yield floating-point numbers.  Appending ``'j'`` "
"or ``'J'`` to a numeric literal yields an imaginary number (a complex number "
"with a zero real part) which you can add to an integer or float to get a "
"complex number with real and imaginary parts."
msgstr ""
"Números são criados por literais numéricos ou como resultado de operadores e "
"funções embutidas. Integrais literais planos (incluindo números "
"hexadecimais, octais e binários) culminam em integrais. Literais numéricos "
"contendo um ponto decimal ou um sinal exponencial resultam em números de "
"ponto flutuante. Anexando ``'j'`` ou ``'J'`` para um literal numérico "
"resulta em um número imaginário (um número complexo com uma parte real zero) "
"com a qual você pode adicionar a um integral ou flutuante para receber um "
"número complexo com partes reais e imaginárias."

#: ../../library/stdtypes.rst:263
msgid ""
"Python fully supports mixed arithmetic: when a binary arithmetic operator "
"has operands of different numeric types, the operand with the \"narrower\" "
"type is widened to that of the other, where integer is narrower than "
"floating point, which is narrower than complex. A comparison between numbers "
"of different types behaves as though the exact values of those numbers were "
"being compared. [2]_"
msgstr ""
"Python suporta completamente aritmética mista: quando um operador de "
"aritmética binária tem operandos de tipos numéricos diferentes, o operando "
"com o tipo \"mais estreito\" é ampliado para o tipo do outro operando, onde "
"um inteiro é mais estreito do que um ponto flutuante, que por sua vez é mais "
"estreito que um número complexo. Uma comparação entre números de diferentes "
"tipos se comporta como se os valores exatos desses números estivessem sendo "
"comparados. [2]_"

#: ../../library/stdtypes.rst:269
msgid ""
"The constructors :func:`int`, :func:`float`, and :func:`complex` can be used "
"to produce numbers of a specific type."
msgstr ""
"Os construtores :func:`int`, :func:`float`, e :func:`complex` podem ser "
"usados para produzir números de um tipo específico."

#: ../../library/stdtypes.rst:272
msgid ""
"All numeric types (except complex) support the following operations (for "
"priorities of the operations, see :ref:`operator-summary`):"
msgstr ""
"Todos os tipos numéricos (exceto complexos) suportam as seguintes operações "
"(para prioridades das operações, consulte :ref:`operator-summary`):"

#: ../../library/stdtypes.rst:276
msgid "Full documentation"
msgstr "Documentação completa"

#: ../../library/stdtypes.rst:278
msgid "``x + y``"
msgstr "``x + y``"

#: ../../library/stdtypes.rst:278
msgid "sum of *x* and *y*"
msgstr "soma de *x* e *y*"

#: ../../library/stdtypes.rst:280
msgid "``x - y``"
msgstr "``x - y``"

#: ../../library/stdtypes.rst:280
msgid "difference of *x* and *y*"
msgstr "diferença de *x* e *y*"

#: ../../library/stdtypes.rst:282
msgid "``x * y``"
msgstr "``x * y``"

#: ../../library/stdtypes.rst:282
msgid "product of *x* and *y*"
msgstr "produto de *x* e *y*"

#: ../../library/stdtypes.rst:284
msgid "``x / y``"
msgstr "``x / y``"

#: ../../library/stdtypes.rst:284
msgid "quotient of *x* and *y*"
msgstr "quociente de *x* e *y*"

#: ../../library/stdtypes.rst:286
msgid "``x // y``"
msgstr "``x // y``"

#: ../../library/stdtypes.rst:286
msgid "floored quotient of *x* and *y*"
msgstr "piso do quociente de *x* e *y*"

#: ../../library/stdtypes.rst:286
msgid "\\(1)\\(2)"
msgstr "\\(1)\\(2)"

#: ../../library/stdtypes.rst:289
msgid "``x % y``"
msgstr "``x % y``"

#: ../../library/stdtypes.rst:289
msgid "remainder of ``x / y``"
msgstr "restante de ``x / y``"

#: ../../library/stdtypes.rst:291
msgid "``-x``"
msgstr "``-x``"

#: ../../library/stdtypes.rst:291
msgid "*x* negated"
msgstr "*x* negado"

#: ../../library/stdtypes.rst:293
msgid "``+x``"
msgstr "``+x``"

#: ../../library/stdtypes.rst:293
msgid "*x* unchanged"
msgstr "*x* inalterado"

#: ../../library/stdtypes.rst:295
msgid "``abs(x)``"
msgstr "``abs(x)``"

#: ../../library/stdtypes.rst:295
msgid "absolute value or magnitude of *x*"
msgstr "valor absoluto ou magnitude de *x*"

#: ../../library/stdtypes.rst:295
msgid ":func:`abs`"
msgstr ":func:`abs`"

#: ../../library/stdtypes.rst:298
msgid "``int(x)``"
msgstr "``int(x)``"

#: ../../library/stdtypes.rst:298
msgid "*x* converted to integer"
msgstr "*x* convertido em inteiro"

#: ../../library/stdtypes.rst:298
msgid "\\(3)\\(6)"
msgstr "\\(3)\\(6)"

#: ../../library/stdtypes.rst:298
msgid ":func:`int`"
msgstr ":func:`int`"

#: ../../library/stdtypes.rst:300
msgid "``float(x)``"
msgstr "``float(x)``"

#: ../../library/stdtypes.rst:300
msgid "*x* converted to floating point"
msgstr "*x* convertido em ponto flutuante"

#: ../../library/stdtypes.rst:300
msgid "\\(4)\\(6)"
msgstr "\\(4)\\(6)"

#: ../../library/stdtypes.rst:300
msgid ":func:`float`"
msgstr ":func:`float`"

#: ../../library/stdtypes.rst:302
msgid "``complex(re, im)``"
msgstr "``complex(re, im)``"

#: ../../library/stdtypes.rst:302
msgid ""
"a complex number with real part *re*, imaginary part *im*. *im* defaults to "
"zero."
msgstr ""
"um número complexo com parte real *re*, parte imaginária *im*. *im* tem como "
"padrão zero."

#: ../../library/stdtypes.rst:302 ../../library/stdtypes.rst:1202
#: ../../library/stdtypes.rst:2440 ../../library/stdtypes.rst:3688
msgid "\\(6)"
msgstr "\\(6)"

#: ../../library/stdtypes.rst:302
msgid ":func:`complex`"
msgstr ":func:`complex`"

#: ../../library/stdtypes.rst:306
msgid "``c.conjugate()``"
msgstr "``c.conjugate()``"

#: ../../library/stdtypes.rst:306
msgid "conjugate of the complex number *c*"
msgstr "conjugado do número complexo *c*"

#: ../../library/stdtypes.rst:309
msgid "``divmod(x, y)``"
msgstr "``divmod(x, y)``"

#: ../../library/stdtypes.rst:309
msgid "the pair ``(x // y, x % y)``"
msgstr "o par ``(x // y, x % y)``"

#: ../../library/stdtypes.rst:309
msgid ":func:`divmod`"
msgstr ":func:`divmod`"

#: ../../library/stdtypes.rst:311
msgid "``pow(x, y)``"
msgstr "``pow(x, y)``"

#: ../../library/stdtypes.rst:311 ../../library/stdtypes.rst:313
msgid "*x* to the power *y*"
msgstr "*x* elevado a *y*"

#: ../../library/stdtypes.rst:311 ../../library/stdtypes.rst:313
#: ../../library/stdtypes.rst:1191 ../../library/stdtypes.rst:1194
#: ../../library/stdtypes.rst:2465 ../../library/stdtypes.rst:2468
#: ../../library/stdtypes.rst:2471 ../../library/stdtypes.rst:3684
#: ../../library/stdtypes.rst:3691
msgid "\\(5)"
msgstr "\\(5)"

#: ../../library/stdtypes.rst:311
msgid ":func:`pow`"
msgstr ":func:`pow`"

#: ../../library/stdtypes.rst:313
msgid "``x ** y``"
msgstr "``x ** y``"

#: ../../library/stdtypes.rst:323
msgid ""
"Also referred to as integer division.  For operands of type :class:`int`, "
"the result has type :class:`int`.  For operands of type :class:`float`, the "
"result has type :class:`float`.  In general, the result is a whole integer, "
"though the result's type is not necessarily :class:`int`.  The result is "
"always rounded towards minus infinity: ``1//2`` is ``0``, ``(-1)//2`` is "
"``-1``, ``1//(-2)`` is ``-1``, and ``(-1)//(-2)`` is ``0``."
msgstr ""
"Também referido como uma divisão inteira. Para operandos do tipo :class:"
"`int`, o resultado tem o tipo :class:`int`; Para operandos do tipo :class:"
"`float`, o resultado tem o tipo :class:`float`. Em geral o resultado é "
"inteiro como todo, apesar do tipo do resultado não necessariamente ser :"
"class:`int`. O resultado é sempre arredondado para menos infinito: ``1//2`` "
"é ``0``, ``(-1)//2`` é ``-1``, ``1//(-2)`` é ``-1`` e ``(-1)//(-2)`` é ``0``."

#: ../../library/stdtypes.rst:331
msgid ""
"Not for complex numbers.  Instead convert to floats using :func:`abs` if "
"appropriate."
msgstr ""
"Não para números complexos. Ao invés disso, converte para pontos flutuantes "
"usando :func:`abs` se for apropriado."

#: ../../library/stdtypes.rst:342
msgid ""
"Conversion from :class:`float` to :class:`int` truncates, discarding the "
"fractional part. See functions :func:`math.floor` and :func:`math.ceil` for "
"alternative conversions."
msgstr ""
"Conversão de :class:`float` para :class:`int` trunca, descartando a parte "
"fracionária. Veja as funções :func:`math.floor` e :func:`math.ceil` para "
"conversões alternativas."

#: ../../library/stdtypes.rst:347
msgid ""
"float also accepts the strings \"nan\" and \"inf\" with an optional prefix "
"\"+\" or \"-\" for Not a Number (NaN) and positive or negative infinity."
msgstr ""
"ponto flutuante também aceita a string \"nan\" e \"inf\" com um prefixo "
"opcional \"+\" ou \"-\" a Não é um Número (NaN) e infinidade positiva ou "
"negativa."

#: ../../library/stdtypes.rst:351
msgid ""
"Python defines ``pow(0, 0)`` and ``0 ** 0`` to be ``1``, as is common for "
"programming languages."
msgstr ""
"Python define ``pow(0, 0)`` e ``0 ** 0`` sendo ``1``, como é comum para "
"linguagens de programação."

#: ../../library/stdtypes.rst:355
msgid ""
"The numeric literals accepted include the digits ``0`` to ``9`` or any "
"Unicode equivalent (code points with the ``Nd`` property)."
msgstr ""
"Os literais numéricos aceitos incluem os dígitos de ``0`` a ``9`` ou "
"qualquer equivalente Unicode (pontos de código com a propriedade ``Nd``)."

#: ../../library/stdtypes.rst:358
msgid ""
"See `the Unicode Standard <https://unicode.org/Public/UNIDATA/extracted/"
"DerivedNumericType.txt>`_ for a complete list of code points with the ``Nd`` "
"property."
msgstr ""
"Veja `o Unicode Standard <https://unicode.org/Public/UNIDATA/extracted/"
"DerivedNumericType.txt>`_ para obter uma lista completa de pontos de código "
"com a propriedade ``Nd``."

#: ../../library/stdtypes.rst:362
msgid ""
"All :class:`numbers.Real` types (:class:`int` and :class:`float`) also "
"include the following operations:"
msgstr ""
"Todos os tipos :class:`numbers.Real` (:class:`int` e :class:`float`) também "
"incluem as seguintes operações."

#: ../../library/stdtypes.rst:368
msgid ":func:`math.trunc(\\ x) <math.trunc>`"
msgstr ":func:`math.trunc(\\ x) <math.trunc>`"

#: ../../library/stdtypes.rst:368
msgid "*x* truncated to :class:`~numbers.Integral`"
msgstr "*x* truncado para :class:`~numbers.Integral`"

#: ../../library/stdtypes.rst:371
msgid ":func:`round(x[, n]) <round>`"
msgstr ":func:`round(x[, n]) <round>`"

#: ../../library/stdtypes.rst:371
msgid ""
"*x* rounded to *n* digits, rounding half to even. If *n* is omitted, it "
"defaults to 0."
msgstr ""
"*x* arredondado para *n* dígitos, arredondando metade para igualar. Se *n* é "
"omitido, ele toma o padrão de 0."

#: ../../library/stdtypes.rst:375
msgid ":func:`math.floor(\\ x) <math.floor>`"
msgstr ":func:`math.floor(\\ x) <math.floor>`"

#: ../../library/stdtypes.rst:375
msgid "the greatest :class:`~numbers.Integral` <= *x*"
msgstr "o maior :class:`~numbers.Integral` <= *x*"

#: ../../library/stdtypes.rst:378
msgid ":func:`math.ceil(x) <math.ceil>`"
msgstr ":func:`math.ceil(x) <math.ceil>`"

#: ../../library/stdtypes.rst:378
msgid "the least :class:`~numbers.Integral` >= *x*"
msgstr "pelo menos :class:`~numbers.Integral` >= *x*"

#: ../../library/stdtypes.rst:382
msgid ""
"For additional numeric operations see the :mod:`math` and :mod:`cmath` "
"modules."
msgstr ""
"Para operações numéricas adicionais, consulte os módulos :mod:`math` e :mod:"
"`cmath`."

#: ../../library/stdtypes.rst:391
msgid "Bitwise Operations on Integer Types"
msgstr "Operações de bits em tipos inteiros"

#: ../../library/stdtypes.rst:405
msgid ""
"Bitwise operations only make sense for integers. The result of bitwise "
"operations is calculated as though carried out in two's complement with an "
"infinite number of sign bits."
msgstr ""
"Operações bit a bit só fazem sentido para números inteiros. O resultado de "
"operações bit a bit é calculado como se fosse realizado no complemento de "
"dois com um número infinito de bits de sinal."

#: ../../library/stdtypes.rst:409
msgid ""
"The priorities of the binary bitwise operations are all lower than the "
"numeric operations and higher than the comparisons; the unary operation "
"``~`` has the same priority as the other unary numeric operations (``+`` and "
"``-``)."
msgstr ""
"As prioridades das operações bit a bit binárias são todas menores do que as "
"operações numéricas e maiores que as comparações; a operação unária ``~`` "
"tem a mesma prioridade que as outras operações numéricas unárias (``+`` e ``-"
"``)."

#: ../../library/stdtypes.rst:413
msgid "This table lists the bitwise operations sorted in ascending priority:"
msgstr ""
"Esta tabela lista as operações de bits classificadas em prioridade "
"ascendente:"

#: ../../library/stdtypes.rst:418
msgid "``x | y``"
msgstr "``x | y``"

#: ../../library/stdtypes.rst:418
msgid "bitwise :dfn:`or` of *x* and *y*"
msgstr ":dfn:`ou` bit a bit de *x* e *y*"

#: ../../library/stdtypes.rst:418 ../../library/stdtypes.rst:421
#: ../../library/stdtypes.rst:424 ../../library/stdtypes.rst:1216
#: ../../library/stdtypes.rst:2454 ../../library/stdtypes.rst:2458
#: ../../library/stdtypes.rst:3673 ../../library/stdtypes.rst:3677
msgid "\\(4)"
msgstr "\\(4)"

#: ../../library/stdtypes.rst:421
msgid "``x ^ y``"
msgstr "``x ^ y``"

#: ../../library/stdtypes.rst:421
msgid "bitwise :dfn:`exclusive or` of *x* and *y*"
msgstr ":dfn:`ou exclusivo` bit a bit de *x* e *y*"

#: ../../library/stdtypes.rst:424
msgid "``x & y``"
msgstr "``x & y``"

#: ../../library/stdtypes.rst:424
msgid "bitwise :dfn:`and` of *x* and *y*"
msgstr ":dfn:`e` bit a bit de *x* e *y*"

#: ../../library/stdtypes.rst:427
msgid "``x << n``"
msgstr "``x << n``"

#: ../../library/stdtypes.rst:427
msgid "*x* shifted left by *n* bits"
msgstr "*x* deslocado para a esquerda por *n* bits"

#: ../../library/stdtypes.rst:427
msgid "(1)(2)"
msgstr "(1)(2)"

#: ../../library/stdtypes.rst:429
msgid "``x >> n``"
msgstr "``x >> n``"

#: ../../library/stdtypes.rst:429
msgid "*x* shifted right by *n* bits"
msgstr "*x* deslocado para a direita por *n* bits"

#: ../../library/stdtypes.rst:429
msgid "(1)(3)"
msgstr "(1)(3)"

#: ../../library/stdtypes.rst:431
msgid "``~x``"
msgstr "``~x``"

#: ../../library/stdtypes.rst:431
msgid "the bits of *x* inverted"
msgstr "os bits de *x* invertidos"

#: ../../library/stdtypes.rst:437
msgid ""
"Negative shift counts are illegal and cause a :exc:`ValueError` to be raised."
msgstr ""
"Contagens de deslocamento negativo são ilegais e levantam uma :exc:"
"`ValueError` ."

#: ../../library/stdtypes.rst:440
msgid ""
"A left shift by *n* bits is equivalent to multiplication by ``pow(2, n)``."
msgstr ""
"Um deslocamento à esquerda por *n* bits é equivalente à multiplicação por "
"``pow(2, n)``."

#: ../../library/stdtypes.rst:443
msgid ""
"A right shift by *n* bits is equivalent to floor division by ``pow(2, n)``."
msgstr ""
"Um deslocamento à direita por *n* bits é equivalente à divisão pelo piso por "
"``pow(2, n)``."

#: ../../library/stdtypes.rst:446
msgid ""
"Performing these calculations with at least one extra sign extension bit in "
"a finite two's complement representation (a working bit-width of ``1 + max(x."
"bit_length(), y.bit_length())`` or more) is sufficient to get the same "
"result as if there were an infinite number of sign bits."
msgstr ""
"Executar esses cálculos com pelo menos um bit extra de extensão de sinal na "
"representação de complemento de dois finitos (uma largura de bit de trabalho "
"``1 + max(x.bit_length(), y.bit_length())`` ou mais) é suficiente para obter "
"o mesmo resultado como se houvesse um número infinito de bits de sinal."

#: ../../library/stdtypes.rst:453
msgid "Additional Methods on Integer Types"
msgstr "Métodos adicionais em tipos inteiros"

#: ../../library/stdtypes.rst:455
msgid ""
"The int type implements the :class:`numbers.Integral` :term:`abstract base "
"class`. In addition, it provides a few more methods:"
msgstr ""
"O tipo int implementa a :term:`classe base abstrata` :class:`numbers."
"Integral`. Além disso, ele provê mais alguns métodos:"

#: ../../library/stdtypes.rst:460
msgid ""
"Return the number of bits necessary to represent an integer in binary, "
"excluding the sign and leading zeros::"
msgstr ""
"Retorna o número de bits necessários para representar um inteiro em binário, "
"excluindo o sinal e entrelinha zeros::"

#: ../../library/stdtypes.rst:463
msgid ""
">>> n = -37\n"
">>> bin(n)\n"
"'-0b100101'\n"
">>> n.bit_length()\n"
"6"
msgstr ""
">>> n = -37\n"
">>> bin(n)\n"
"'-0b100101'\n"
">>> n.bit_length()\n"
"6"

#: ../../library/stdtypes.rst:469
msgid ""
"More precisely, if ``x`` is nonzero, then ``x.bit_length()`` is the unique "
"positive integer ``k`` such that ``2**(k-1) <= abs(x) < 2**k``. "
"Equivalently, when ``abs(x)`` is small enough to have a correctly rounded "
"logarithm, then ``k = 1 + int(log(abs(x), 2))``. If ``x`` is zero, then ``x."
"bit_length()`` returns ``0``."
msgstr ""
"Mais precisamente, se ``x`` for diferente de zero, então ``x.bit_length()`` "
"é o único positivo inteiro ``k`` tal que ``2**(k-1) <= abs(x) < 2**k``. "
"Equivalentemente, quando ``abs(x)`` for pequeno o suficiente para ter um "
"logaritmo corretamente arrendondado, então ``k = 1 + int(log(abs(x), 2))``. "
"Se ``x`` é zero, então ``x.bit_length()`` retorna ``0``."

#: ../../library/stdtypes.rst:475 ../../library/stdtypes.rst:498
#: ../../library/stdtypes.rst:543 ../../library/stdtypes.rst:587
msgid "Equivalent to::"
msgstr "Equivalente a::"

#: ../../library/stdtypes.rst:477
msgid ""
"def bit_length(self):\n"
"    s = bin(self)       # binary representation:  bin(-37) --> '-0b100101'\n"
"    s = s.lstrip('-0b') # remove leading zeros and minus sign\n"
"    return len(s)       # len('100101') --> 6"
msgstr ""
"def bit_length(self):\n"
"    s = bin(self)       # representação binária:  bin(-37) --> '-0b100101'\n"
"    s = s.lstrip('-0b') # remove zeros no início e sinal negativo\n"
"    return len(s)       # len('100101') --> 6"

#: ../../library/stdtypes.rst:486
msgid ""
"Return the number of ones in the binary representation of the absolute value "
"of the integer. This is also known as the population count. Example::"
msgstr ""
"Retorna o número de unidades na representação binária do valor absoluto do "
"inteiro. Isso também é conhecido como contagem da população. Exemplo::"

#: ../../library/stdtypes.rst:490
msgid ""
">>> n = 19\n"
">>> bin(n)\n"
"'0b10011'\n"
">>> n.bit_count()\n"
"3\n"
">>> (-n).bit_count()\n"
"3"
msgstr ""
">>> n = 19\n"
">>> bin(n)\n"
"'0b10011'\n"
">>> n.bit_count()\n"
"3\n"
">>> (-n).bit_count()\n"
"3"

#: ../../library/stdtypes.rst:500
msgid ""
"def bit_count(self):\n"
"    return bin(self).count(\"1\")"
msgstr ""
"def bit_count(self):\n"
"    return bin(self).count(\"1\")"

#: ../../library/stdtypes.rst:507
msgid "Return an array of bytes representing an integer."
msgstr "Retorna um vetor de bytes representando um inteiro."

#: ../../library/stdtypes.rst:519
msgid ""
"The integer is represented using *length* bytes, and defaults to 1.  An :exc:"
"`OverflowError` is raised if the integer is not representable with the given "
"number of bytes."
msgstr ""
"O inteiro é representado usando *length* bytes, e o padrão é 1. Uma :exc:"
"`OverflowError` é levantada se um inteiro não é representável com o dado "
"número de bytes."

#: ../../library/stdtypes.rst:523
msgid ""
"The *byteorder* argument determines the byte order used to represent the "
"integer, and defaults to ``\"big\"``.  If *byteorder* is ``\"big\"``, the "
"most significant byte is at the beginning of the byte array.  If *byteorder* "
"is ``\"little\"``, the most significant byte is at the end of the byte array."
msgstr ""
"O argumento *byteorder* determina a ordem de bytes usada para representar um "
"inteiro, e o padrão é ``\"big\"``. Se o *byteorder* é ``\"big\"``, o byte "
"mais significativo está no início do vetor de byte. Se *byteorder* é "
"``\"little\"``, o byte mais significativo está no final do vetor de byte."

#: ../../library/stdtypes.rst:529
msgid ""
"The *signed* argument determines whether two's complement is used to "
"represent the integer.  If *signed* is ``False`` and a negative integer is "
"given, an :exc:`OverflowError` is raised. The default value for *signed* is "
"``False``."
msgstr ""
"O argumento *signed* determina aonde o modo de complemento de dois é usado "
"para representar o inteiro. Se *signed* é ``False`` e um inteiro negativo é "
"dado, uma :exc:`OverflowError` é levantada. O valor padrão para *signed* é "
"``False``."

#: ../../library/stdtypes.rst:534
msgid ""
"The default values can be used to conveniently turn an integer into a single "
"byte object::"
msgstr ""
"Os valores padrão podem ser usados para transformar convenientemente um "
"inteiro em um objeto de byte único::"

#: ../../library/stdtypes.rst:537
msgid ""
">>> (65).to_bytes()\n"
"b'A'"
msgstr ""
">>> (65).to_bytes()\n"
"b'A'"

#: ../../library/stdtypes.rst:540
msgid ""
"However, when using the default arguments, don't try to convert a value "
"greater than 255 or you'll get an :exc:`OverflowError`."
msgstr ""
"No entanto, ao usar os argumentos padrão, não tente converter um valor maior "
"que 255 ou você obterá um :exc:`OverflowError`."

#: ../../library/stdtypes.rst:545
msgid ""
"def to_bytes(n, length=1, byteorder='big', signed=False):\n"
"    if byteorder == 'little':\n"
"        order = range(length)\n"
"    elif byteorder == 'big':\n"
"        order = reversed(range(length))\n"
"    else:\n"
"        raise ValueError(\"byteorder must be either 'little' or 'big'\")\n"
"\n"
"    return bytes((n >> i*8) & 0xff for i in order)"
msgstr ""
"def to_bytes(n, length=1, byteorder='big', signed=False):\n"
"    if byteorder == 'little':\n"
"        order = range(length)\n"
"    elif byteorder == 'big':\n"
"        order = reversed(range(length))\n"
"    else:\n"
"        raise ValueError(\"byteorder must be either 'little' or 'big'\")\n"
"\n"
"    return bytes((n >> i*8) & 0xff for i in order)"

#: ../../library/stdtypes.rst:556
msgid "Added default argument values for ``length`` and ``byteorder``."
msgstr ""
"Adicionados valores de argumento padrão para ``length`` e ``byteorder``."

#: ../../library/stdtypes.rst:561
msgid "Return the integer represented by the given array of bytes."
msgstr "Retorna o inteiro representado pelo vetor de bytes dado."

#: ../../library/stdtypes.rst:574
msgid ""
"The argument *bytes* must either be a :term:`bytes-like object` or an "
"iterable producing bytes."
msgstr ""
"O argumento *bytes* precisa ou ser um :term:`objeto byte ou similar <bytes-"
"like object>` ou um iterador produzindo bytes."

#: ../../library/stdtypes.rst:577
msgid ""
"The *byteorder* argument determines the byte order used to represent the "
"integer, and defaults to ``\"big\"``.  If *byteorder* is ``\"big\"``, the "
"most significant byte is at the beginning of the byte array.  If *byteorder* "
"is ``\"little\"``, the most significant byte is at the end of the byte "
"array.  To request the native byte order of the host system, use :data:`sys."
"byteorder` as the byte order value."
msgstr ""
"O argumento *byteorder* determina a ordem de bytes usada para representar um "
"inteiro, e o padrão é ``\"big\"``. Se o *byteorder* é ``\"big\"``, o byte "
"mais significativo está no início do vetor de byte. Se *byteorder* é "
"``\"little\"``, o byte mais significativo está no final do vetor de byte. "
"Para requisitar a ordem nativa de byte do sistema hospedeiro, use :data:`sys."
"byteorder` como o valor da ordem de byte."

#: ../../library/stdtypes.rst:584
msgid ""
"The *signed* argument indicates whether two's complement is used to "
"represent the integer."
msgstr ""
"O argumento *signed* indica quando o complemento de dois é usado para "
"representar o inteiro."

#: ../../library/stdtypes.rst:589
msgid ""
"def from_bytes(bytes, byteorder='big', signed=False):\n"
"    if byteorder == 'little':\n"
"        little_ordered = list(bytes)\n"
"    elif byteorder == 'big':\n"
"        little_ordered = list(reversed(bytes))\n"
"    else:\n"
"        raise ValueError(\"byteorder must be either 'little' or 'big'\")\n"
"\n"
"    n = sum(b << i*8 for i, b in enumerate(little_ordered))\n"
"    if signed and little_ordered and (little_ordered[-1] & 0x80):\n"
"        n -= 1 << 8*len(little_ordered)\n"
"\n"
"    return n"
msgstr ""
"def from_bytes(bytes, byteorder='big', signed=False):\n"
"    if byteorder == 'little':\n"
"        little_ordered = list(bytes)\n"
"    elif byteorder == 'big':\n"
"        little_ordered = list(reversed(bytes))\n"
"    else:\n"
"        raise ValueError(\"byteorder must be either 'little' or 'big'\")\n"
"\n"
"    n = sum(b << i*8 for i, b in enumerate(little_ordered))\n"
"    if signed and little_ordered and (little_ordered[-1] & 0x80):\n"
"        n -= 1 << 8*len(little_ordered)\n"
"\n"
"    return n"

#: ../../library/stdtypes.rst:604
msgid "Added default argument value for ``byteorder``."
msgstr "Adicionados valor de argumento padrão para ``byteorder``."

#: ../../library/stdtypes.rst:609
msgid ""
"Return a pair of integers whose ratio is equal to the original integer and "
"has a positive denominator.  The integer ratio of integers (whole numbers) "
"is always the integer as the numerator and ``1`` as the denominator."
msgstr ""
"Retorna um par de números inteiros cuja razão é igual ao número inteiro "
"original e tem um denominador positivo. A proporção inteira de números "
"inteiros (números inteiros) é sempre o número inteiro como numerador e ``1`` "
"como denominador."

#: ../../library/stdtypes.rst:618
msgid ""
"Returns ``True``. Exists for duck type compatibility with :meth:`float."
"is_integer`."
msgstr ""
"Retorna ``True``. Existe para compatibilidade com tipo pato com :meth:`float."
"is_integer`."

#: ../../library/stdtypes.rst:623
msgid "Additional Methods on Float"
msgstr "Métodos adicionais em ponto flutuante"

#: ../../library/stdtypes.rst:625
msgid ""
"The float type implements the :class:`numbers.Real` :term:`abstract base "
"class`. float also has the following additional methods."
msgstr ""
"O tipo float implementa a :term:`classe base abstrata` :class:`numbers."
"Real`. float também possui os seguintes métodos adicionais."

#: ../../library/stdtypes.rst:630
msgid ""
"Return a pair of integers whose ratio is exactly equal to the original "
"float. The ratio is in lowest terms and has a positive denominator.  Raises :"
"exc:`OverflowError` on infinities and a :exc:`ValueError` on NaNs."
msgstr ""
"Retorna um par de inteiros dos quais a proporção é exatamente igual ao float "
"original.  A proporção está em seus termos mais baixos e tem um denominador "
"positivo. Levanta um :exc:`OverflowError` em infinidades e um :exc:"
"`ValueError` em NaNs."

#: ../../library/stdtypes.rst:637
msgid ""
"Return ``True`` if the float instance is finite with integral value, and "
"``False`` otherwise::"
msgstr ""
"Retorna ``True`` se a instância do float for finita com o valor integral e "
"``False``, caso contrário::"

#: ../../library/stdtypes.rst:640
msgid ""
">>> (-2.0).is_integer()\n"
"True\n"
">>> (3.2).is_integer()\n"
"False"
msgstr ""
">>> (-2.0).is_integer()\n"
"True\n"
">>> (3.2).is_integer()\n"
"False"

#: ../../library/stdtypes.rst:645
msgid ""
"Two methods support conversion to and from hexadecimal strings.  Since "
"Python's floats are stored internally as binary numbers, converting a float "
"to or from a *decimal* string usually involves a small rounding error.  In "
"contrast, hexadecimal strings allow exact representation and specification "
"of floating-point numbers.  This can be useful when debugging, and in "
"numerical work."
msgstr ""
"Dois métodos suportam conversão para e de strings hexadecimais. Uma vez que "
"os pontos flutuantes do Python são armazenados internamente como números "
"binários, a conversão de um ponto flutuante para ou de uma string *decimal* "
"geralmente envolve um pequeno erro de arredondamento. Em contraste, as "
"strings hexadecimais permitem a representação exata e a especificação de "
"números de ponto flutuante. Isso pode ser útil na depuração e no trabalho "
"numérico."

#: ../../library/stdtypes.rst:656
msgid ""
"Return a representation of a floating-point number as a hexadecimal string.  "
"For finite floating-point numbers, this representation will always include a "
"leading ``0x`` and a trailing ``p`` and exponent."
msgstr ""
"Retorna a representação de um número de ponto flutuante como uma string "
"hexadecimal. Para números de ponto flutuante finitos, essa representação vai "
"sempre incluir um ``0x`` inicial e um ``p`` final e expoente."

#: ../../library/stdtypes.rst:664
msgid ""
"Class method to return the float represented by a hexadecimal string *s*.  "
"The string *s* may have leading and trailing whitespace."
msgstr ""
"Método de classe para retornar um ponto flutuante representado por uma "
"string hexadecimal *s*. A string *s* pode ter espaços em branco iniciais e "
"finais."

#: ../../library/stdtypes.rst:669
msgid ""
"Note that :meth:`float.hex` is an instance method, while :meth:`float."
"fromhex` is a class method."
msgstr ""
"Note que :meth:`float.hex` é um método de instância, enquanto :meth:`float."
"fromhex` é um método de classe."

#: ../../library/stdtypes.rst:672
msgid "A hexadecimal string takes the form::"
msgstr "Uma string hexadecimal toma a forma::"

#: ../../library/stdtypes.rst:674
msgid "[sign] ['0x'] integer ['.' fraction] ['p' exponent]"
msgstr "[sign] ['0x'] integer ['.' fraction] ['p' exponent]"

#: ../../library/stdtypes.rst:676
msgid ""
"where the optional ``sign`` may by either ``+`` or ``-``, ``integer`` and "
"``fraction`` are strings of hexadecimal digits, and ``exponent`` is a "
"decimal integer with an optional leading sign.  Case is not significant, and "
"there must be at least one hexadecimal digit in either the integer or the "
"fraction.  This syntax is similar to the syntax specified in section 6.4.4.2 "
"of the C99 standard, and also to the syntax used in Java 1.5 onwards.  In "
"particular, the output of :meth:`float.hex` is usable as a hexadecimal "
"floating-point literal in C or Java code, and hexadecimal strings produced "
"by C's ``%a`` format character or Java's ``Double.toHexString`` are accepted "
"by :meth:`float.fromhex`."
msgstr ""
"onde o sinal opcional ``sign`` pode ser tanto ``+`` or ``-``, ``integer`` e "
"``fraction`` são strings de dígitos hexadecimais, e ``exponent`` é um "
"inteiro decimal com um sinal opcional no início. Maiúsculo ou minúsculo não "
"é significativo, e deve haver ao menos um dígito hexadecimal tanto no "
"inteiro ou na fração. Essa sintaxe é similar à sintaxe especificada na seção "
"6.4.4.2 do padrão C99, e também do da sintaxe usada no Java 1.5 em diante. "
"Em particular, a saída de :meth:`float.hex` é usável como um literal "
"hexadecimal de ponto flutuante em código C ou Java, e strings hexadecimais "
"produzidas pelo formato do caractere ``%a`` do C ou ``Double.toHexString`` "
"do Java são aceitos pelo :meth:`float.fromhex`."

#: ../../library/stdtypes.rst:689
msgid ""
"Note that the exponent is written in decimal rather than hexadecimal, and "
"that it gives the power of 2 by which to multiply the coefficient. For "
"example, the hexadecimal string ``0x3.a7p10`` represents the floating-point "
"number ``(3 + 10./16 + 7./16**2) * 2.0**10``, or ``3740.0``::"
msgstr ""
"Note que o expoente é escrito em decimal ao invés de hexadecimal, e que ele "
"dá a potência de 2 pela qual se multiplica o coeficiente. Por exemplo, a "
"string hexadecimal ``0x3.a7p10`` representa o número de ponto flutuante ``(3 "
"+ 10./16 + 7./16**2) * 2.0**10`` ou ``3740.0``::"

#: ../../library/stdtypes.rst:695
msgid ""
">>> float.fromhex('0x3.a7p10')\n"
"3740.0"
msgstr ""
">>> float.fromhex('0x3.a7p10')\n"
"3740.0"

#: ../../library/stdtypes.rst:699
msgid ""
"Applying the reverse conversion to ``3740.0`` gives a different hexadecimal "
"string representing the same number::"
msgstr ""
"Aplicando a conversão inversa a ``3740.0`` retorna uma string hexadecimal "
"diferente representada pelo mesmo número::"

#: ../../library/stdtypes.rst:702
msgid ""
">>> float.hex(3740.0)\n"
"'0x1.d380000000000p+11'"
msgstr ""
">>> float.hex(3740.0)\n"
"'0x1.d380000000000p+11'"

#: ../../library/stdtypes.rst:709
msgid "Hashing of numeric types"
msgstr "Hashing de tipos numéricos"

#: ../../library/stdtypes.rst:711
msgid ""
"For numbers ``x`` and ``y``, possibly of different types, it's a requirement "
"that ``hash(x) == hash(y)`` whenever ``x == y`` (see the :meth:`~object."
"__hash__` method documentation for more details).  For ease of "
"implementation and efficiency across a variety of numeric types (including :"
"class:`int`, :class:`float`, :class:`decimal.Decimal` and :class:`fractions."
"Fraction`) Python's hash for numeric types is based on a single mathematical "
"function that's defined for any rational number, and hence applies to all "
"instances of :class:`int` and :class:`fractions.Fraction`, and all finite "
"instances of :class:`float` and :class:`decimal.Decimal`.  Essentially, this "
"function is given by reduction modulo ``P`` for a fixed prime ``P``.  The "
"value of ``P`` is made available to Python as the :attr:`~sys.hash_info."
"modulus` attribute of :data:`sys.hash_info`."
msgstr ""
"Para números ``x`` e ``y``, possivelmente de diferentes tipos, é um "
"requisito que ``hash(x) == hash(y)`` sempre que ``x == y`` (veja a "
"documentação do método :meth:`~object.__hash__` para mais detalhes). Para "
"facilitar a implementação e eficiência através de uma variedade de tipos "
"numéricos (incluindo :class:`int`, :class:`float`, :class:`decimal.Decimal` "
"e :class:`fractions.Fraction`), o hash do Python para tipos numéricos é "
"baseado em uma única função matemática que é definida para qualquer número "
"racional e, portanto, se aplica para todas as instâncias de :class:`int` e :"
"class:`fractions.Fraction`, e todas as instâncias finitas das classes :class:"
"`float` e :class:`decimal.Decimal`. Essencialmente, essa função é dada pelo "
"módulo de redução ``P`` para um primo fixado ``P``. O valor de ``P`` é "
"disponibilizado ao Python como um atributo :attr:`~sys.hash_info.modulus` "
"do :data:`sys.hash_info`."

#: ../../library/stdtypes.rst:726
msgid ""
"Currently, the prime used is ``P = 2**31 - 1`` on machines with 32-bit C "
"longs and ``P = 2**61 - 1`` on machines with 64-bit C longs."
msgstr ""
"Atualmente, o primo usado é ``P = 2**31 - 1`` em máquinas com longos de 32 "
"bits do C e ``P = 2**61 - 1`` em máquinas com longos de 64 bits do C."

#: ../../library/stdtypes.rst:729
msgid "Here are the rules in detail:"
msgstr "Aqui estão as regras em detalhe:"

#: ../../library/stdtypes.rst:731
msgid ""
"If ``x = m / n`` is a nonnegative rational number and ``n`` is not divisible "
"by ``P``, define ``hash(x)`` as ``m * invmod(n, P) % P``, where ``invmod(n, "
"P)`` gives the inverse of ``n`` modulo ``P``."
msgstr ""
"Se ``x = m / n`` é um número racional não negativo e ``n`` não é divisível "
"por ``P``, define ``hash(x)`` como ``m * invmod(n, P) % P``, onde "
"``invmod(n, P)`` retorna o inverso do módulo de ``n`` com ``P``."

#: ../../library/stdtypes.rst:735
msgid ""
"If ``x = m / n`` is a nonnegative rational number and ``n`` is divisible by "
"``P`` (but ``m`` is not) then ``n`` has no inverse modulo ``P`` and the rule "
"above doesn't apply; in this case define ``hash(x)`` to be the constant "
"value ``sys.hash_info.inf``."
msgstr ""
"Se ``x = m / n`` é um número racional não negativo e ``n`` é divisível por "
"``P`` (porém ``m`` não é) então ``n`` não possui modulo ``P`` inverso e a "
"regra acima não se aplica; nesse caso defina ``hash(x)`` para ser o valor "
"constante ``sys.hash_info.inf``."

#: ../../library/stdtypes.rst:740
msgid ""
"If ``x = m / n`` is a negative rational number define ``hash(x)`` as ``-"
"hash(-x)``.  If the resulting hash is ``-1``, replace it with ``-2``."
msgstr ""
"Se ``x = m / n`` é um número racional negativo, defina ``hash(x)`` como ``-"
"hash(-x)``. Se a hash resultante é ``-1``, a substituo com ``-2``."

#: ../../library/stdtypes.rst:744
msgid ""
"The particular values ``sys.hash_info.inf`` and ``-sys.hash_info.inf`` are "
"used as hash values for positive infinity or negative infinity "
"(respectively)."
msgstr ""
"Os valores particulares ``sys.hash_info.inf`` e ``-sys.hash_info.inf`` são "
"usados como valores de hash para infinidade positiva ou infinidade negativa "
"(respectivamente)."

#: ../../library/stdtypes.rst:748
msgid ""
"For a :class:`complex` number ``z``, the hash values of the real and "
"imaginary parts are combined by computing ``hash(z.real) + sys.hash_info."
"imag * hash(z.imag)``, reduced modulo ``2**sys.hash_info.width`` so that it "
"lies in ``range(-2**(sys.hash_info.width - 1), 2**(sys.hash_info.width - "
"1))``.  Again, if the result is ``-1``, it's replaced with ``-2``."
msgstr ""
"Para número :class:`complex` ``z``, o valor da hash do número real partes "
"imaginárias são combinados calculando ``hash(z.real) + sys.hash_info.imag * "
"hash(z.imag)``, módulo reduzido ``2**sys.hash_info.width`` de modo que isto "
"permaneça em ``range(-2**(sys.hash_info.width - 1), 2**(sys.hash_info.width "
"- 1))``. Novamente, se o resultado é ``-1``, ele é substituído por ``-2``."

#: ../../library/stdtypes.rst:756
msgid ""
"To clarify the above rules, here's some example Python code, equivalent to "
"the built-in hash, for computing the hash of a rational number, :class:"
"`float`, or :class:`complex`::"
msgstr ""
"Para esclarecer as regras acima, aqui estão alguns exemplos de código em "
"Python, equivalentes ao hash embutido, para calcular o hash de números "
"racionais, :class:`float` ou :class:`complex`::"

#: ../../library/stdtypes.rst:761
msgid ""
"import sys, math\n"
"\n"
"def hash_fraction(m, n):\n"
"    \"\"\"Compute the hash of a rational number m / n.\n"
"\n"
"    Assumes m and n are integers, with n positive.\n"
"    Equivalent to hash(fractions.Fraction(m, n)).\n"
"\n"
"    \"\"\"\n"
"    P = sys.hash_info.modulus\n"
"    # Remove common factors of P.  (Unnecessary if m and n already "
"coprime.)\n"
"    while m % P == n % P == 0:\n"
"        m, n = m // P, n // P\n"
"\n"
"    if n % P == 0:\n"
"        hash_value = sys.hash_info.inf\n"
"    else:\n"
"        # Fermat's Little Theorem: pow(n, P-1, P) is 1, so\n"
"        # pow(n, P-2, P) gives the inverse of n modulo P.\n"
"        hash_value = (abs(m) % P) * pow(n, P - 2, P) % P\n"
"    if m < 0:\n"
"        hash_value = -hash_value\n"
"    if hash_value == -1:\n"
"        hash_value = -2\n"
"    return hash_value\n"
"\n"
"def hash_float(x):\n"
"    \"\"\"Compute the hash of a float x.\"\"\"\n"
"\n"
"    if math.isnan(x):\n"
"        return object.__hash__(x)\n"
"    elif math.isinf(x):\n"
"        return sys.hash_info.inf if x > 0 else -sys.hash_info.inf\n"
"    else:\n"
"        return hash_fraction(*x.as_integer_ratio())\n"
"\n"
"def hash_complex(z):\n"
"    \"\"\"Compute the hash of a complex number z.\"\"\"\n"
"\n"
"    hash_value = hash_float(z.real) + sys.hash_info.imag * hash_float(z."
"imag)\n"
"    # do a signed reduction modulo 2**sys.hash_info.width\n"
"    M = 2**(sys.hash_info.width - 1)\n"
"    hash_value = (hash_value & (M - 1)) - (hash_value & M)\n"
"    if hash_value == -1:\n"
"        hash_value = -2\n"
"    return hash_value"
msgstr ""
"import sys, math\n"
"\n"
"def hash_fraction(m, n):\n"
"    \"\"\"Calcula o hash de um número racional m / n.\n"
"\n"
"    Presume que m e n são inteiros, com n positivo.\n"
"    Equivalente a hash(fractions.Fraction(m, n)).\n"
"\n"
"    \"\"\"\n"
"    P = sys.hash_info.modulus\n"
"    # Remove fatores comuns de P.  (Desnecessário se m e n são primos entre "
"si.)\n"
"    while m % P == n % P == 0:\n"
"        m, n = m // P, n // P\n"
"\n"
"    if n % P == 0:\n"
"        hash_value = sys.hash_info.inf\n"
"    else:\n"
"        # Pequeno teorema de Fermat: pow(n, P-1, P) é 1, então\n"
"        # pow(n, P-2, P) dá o inverso de n módulo P.\n"
"        hash_value = (abs(m) % P) * pow(n, P - 2, P) % P\n"
"    if m < 0:\n"
"        hash_value = -hash_value\n"
"    if hash_value == -1:\n"
"        hash_value = -2\n"
"    return hash_value\n"
"\n"
"def hash_float(x):\n"
"    \"\"\"Calcula o hash de um ponto flutuante x.\"\"\"\n"
"\n"
"    if math.isnan(x):\n"
"        return object.__hash__(x)\n"
"    elif math.isinf(x):\n"
"        return sys.hash_info.inf if x > 0 else -sys.hash_info.inf\n"
"    else:\n"
"        return hash_fraction(*x.as_integer_ratio())\n"
"\n"
"def hash_complex(z):\n"
"    \"\"\"Calcula o hash de um número complexo z.\"\"\"\n"
"\n"
"    hash_value = hash_float(z.real) + sys.hash_info.imag * hash_float(z."
"imag)\n"
"    # faz um módulo para redução de sinal 2**sys.hash_info.width\n"
"    M = 2**(sys.hash_info.width - 1)\n"
"    hash_value = (hash_value & (M - 1)) - (hash_value & M)\n"
"    if hash_value == -1:\n"
"        hash_value = -2\n"
"    return hash_value"

#: ../../library/stdtypes.rst:812
msgid "Boolean Type - :class:`bool`"
msgstr "Tipo booleano - :class:`bool`"

#: ../../library/stdtypes.rst:814
msgid ""
"Booleans represent truth values. The :class:`bool` type has exactly two "
"constant instances: ``True`` and ``False``."
msgstr ""
"Booleanos representam valores verdade. O tipo :class:`bool` tem exatamente "
"duas instâncias constantes: ``True`` e ``False``."

#: ../../library/stdtypes.rst:822
msgid ""
"The built-in function :func:`bool`  converts any value to a boolean, if the "
"value can be interpreted as a truth value (see section :ref:`truth` above)."
msgstr ""
"A função embutida :func:`bool` converte qualquer valor em um booleano, se o "
"valor puder ser interpretado como um valor verdade (consultar seção :ref:"
"`truth` acima)."

#: ../../library/stdtypes.rst:825
msgid ""
"For logical operations, use the :ref:`boolean operators <boolean>` ``and``, "
"``or`` and ``not``. When applying the bitwise operators ``&``, ``|``, ``^`` "
"to two booleans, they return a bool equivalent to the logical operations "
"\"and\", \"or\", \"xor\". However, the logical operators ``and``, ``or`` and "
"``!=`` should be preferred over ``&``, ``|`` and ``^``."
msgstr ""
"Para operações lógicas, use :ref:`operadores booleanos <boolean>` ``and``, "
"``or`` e ``not``. Ao aplicar operadores bit a bit ``&``, ``|``, ``^`` a dois "
"booleanos, o resultado é um booleano equivalente às operações lógicas \"e\", "
"\"ou\", \"xor\". Entretanto, é preferível usar os operadores lógicos "
"``and``, ``or`` e ``!=`` em relação aos ``&``, ``|`` e ``^``."

#: ../../library/stdtypes.rst:834
msgid ""
"The use of the bitwise inversion operator ``~`` is deprecated and will raise "
"an error in Python 3.16."
msgstr ""
"O uso do operador de inversão bit a bit ``~`` foi descontinuado e levantará "
"um erro no Python 3.16."

#: ../../library/stdtypes.rst:837
msgid ""
":class:`bool` is a subclass of :class:`int` (see :ref:`typesnumeric`). In "
"many numeric contexts, ``False`` and ``True`` behave like the integers 0 and "
"1, respectively. However, relying on this is discouraged; explicitly convert "
"using :func:`int` instead."
msgstr ""
":class:`bool` é uma subclasse :class:`int` (veja :ref:`typesnumeric`). Em "
"diversos contextos numéricos, ``False`` e ``True`` se comportam como 0 e 1, "
"respectivamente. Entretanto, basear-se somente nisso,  é desencorajado; ao "
"invés disso, a conversão deve ser feita explicitamente usando :func:`int`."

#: ../../library/stdtypes.rst:845
msgid "Iterator Types"
msgstr "Tipos iteradores"

#: ../../library/stdtypes.rst:853
msgid ""
"Python supports a concept of iteration over containers.  This is implemented "
"using two distinct methods; these are used to allow user-defined classes to "
"support iteration.  Sequences, described below in more detail, always "
"support the iteration methods."
msgstr ""
"Python suporta o conceito de iteração por contêineres. Isso é implementado "
"usando dois métodos distintos; estes são usados para permitir classes "
"definidas pelo usuário suportem iteração. Sequências, descritas abaixo em "
"mais detalhes, sempre suportam os métodos de iteração."

#: ../../library/stdtypes.rst:858
msgid ""
"One method needs to be defined for container objects to provide :term:"
"`iterable` support:"
msgstr ""
"Um método necessita ser definido para objetos contêineres afim destes "
"proverem suporte a :term:`iterável`:"

#: ../../library/stdtypes.rst:865
msgid ""
"Return an :term:`iterator` object.  The object is required to support the "
"iterator protocol described below.  If a container supports different types "
"of iteration, additional methods can be provided to specifically request "
"iterators for those iteration types.  (An example of an object supporting "
"multiple forms of iteration would be a tree structure which supports both "
"breadth-first and depth-first traversal.)  This method corresponds to the :c:"
"member:`~PyTypeObject.tp_iter` slot of the type structure for Python objects "
"in the Python/C API."
msgstr ""
"Retorna um objeto :term:`iterador`. O objeto deve suportar o protocolo "
"iterador descrito abaixo. Se um contêiner suporta diferentes tipos de "
"iterador, métodos adicionais podem ser providenciados para requisitar "
"especificamente iteradores para aqueles tipos de iterações. (Um exemplo de "
"um objeto suportando múltiplas formas de iteração seria uma estrutura em "
"árvore a qual suporta ambas travessias de travessia em largura e em "
"profundidade.) Esse método corresponde ao slot :c:member:`~PyTypeObject."
"tp_iter` da estrutura de tipos para objetos Python na API Python/C."

#: ../../library/stdtypes.rst:874
msgid ""
"The iterator objects themselves are required to support the following two "
"methods, which together form the :dfn:`iterator protocol`:"
msgstr ""
"Os próprios objetos iteradores são obrigados a suportarem os dois métodos a "
"seguir, que juntos formam o :dfn:`protocolo iterador`:"

#: ../../library/stdtypes.rst:880
msgid ""
"Return the :term:`iterator` object itself.  This is required to allow both "
"containers and iterators to be used with the :keyword:`for` and :keyword:"
"`in` statements.  This method corresponds to the :c:member:`~PyTypeObject."
"tp_iter` slot of the type structure for Python objects in the Python/C API."
msgstr ""
"Retorna o próprio objeto :term:`iterador` em si. Isso é necessário para "
"permitir que ambos os contêineres e iteradores sejam usados com as "
"instruções :keyword:`for` e :keyword:`in`. Este método corresponde ao slot :"
"c:member:`~PyTypeObject.tp_iter` da estrutura de tipos para objetos Python "
"na API Python/C."

#: ../../library/stdtypes.rst:889
msgid ""
"Return the next item from the :term:`iterator`.  If there are no further "
"items, raise the :exc:`StopIteration` exception.  This method corresponds to "
"the :c:member:`~PyTypeObject.tp_iternext` slot of the type structure for "
"Python objects in the Python/C API."
msgstr ""
"Retorna o próximo item do :term:`iterador`. Se não houver itens além, a "
"exceção :exc:`StopIteration` é levantada. Esse método corresponde ao slot :c:"
"member:`~PyTypeObject.tp_iternext` da estrutura de tipos para objetos Python "
"na API Python/C."

#: ../../library/stdtypes.rst:894
msgid ""
"Python defines several iterator objects to support iteration over general "
"and specific sequence types, dictionaries, and other more specialized "
"forms.  The specific types are not important beyond their implementation of "
"the iterator protocol."
msgstr ""
"Python define diversos objetos iteradores para suportar iterações sobre "
"tipos de sequências gerais e específicas, dicionários, e outras formas mais "
"especializadas. Os tipos específicos não são importantes além de sua "
"implementação do protocolo iterador."

#: ../../library/stdtypes.rst:899
msgid ""
"Once an iterator's :meth:`~iterator.__next__` method raises :exc:"
"`StopIteration`, it must continue to do so on subsequent calls. "
"Implementations that do not obey this property are deemed broken."
msgstr ""
"Uma vez que o método :meth:`~iterator.__next__` do iterador levantou :exc:"
"`StopIteration`, ele deve continuar fazendo isso em chamadas subsequentes. "
"Implementações que não obedecem essa propriedade são consideradas quebradas."

#: ../../library/stdtypes.rst:907
msgid "Generator Types"
msgstr "Tipos geradores"

#: ../../library/stdtypes.rst:909
msgid ""
"Python's :term:`generator`\\s provide a convenient way to implement the "
"iterator protocol.  If a container object's :meth:`~iterator.__iter__` "
"method is implemented as a generator, it will automatically return an "
"iterator object (technically, a generator object) supplying the :meth:`!"
"__iter__` and :meth:`~generator.__next__` methods. More information about "
"generators can be found in :ref:`the documentation for the yield expression "
"<yieldexpr>`."
msgstr ""
"Os :term:`geradores <gerador>` do Python proveem uma maneira conveniente "
"para implementar o protocolo iterador. Se o método :meth:`~iterator."
"__iter__` de um objeto contêiner é implementado como um gerador, ele irá "
"automaticamente retornar um objeto iterador (tecnicamente, um objeto "
"gerador) fornecendo os métodos :meth:`!__iter__` e :meth:`~generator."
"__next__` . Mais informações sobre geradores podem ser encontradas na :ref:"
"`documentação para a expressão yield <yieldexpr>`."

#: ../../library/stdtypes.rst:921
msgid "Sequence Types --- :class:`list`, :class:`tuple`, :class:`range`"
msgstr "Tipos sequências --- :class:`list`, :class:`tuple`, :class:`range`"

#: ../../library/stdtypes.rst:923
msgid ""
"There are three basic sequence types: lists, tuples, and range objects. "
"Additional sequence types tailored for processing of :ref:`binary data "
"<binaryseq>` and :ref:`text strings <textseq>` are described in dedicated "
"sections."
msgstr ""
"Existem três tipos básicos de sequência: listas, tuplas e objetos range. "
"Tipos de sequência adicionais adaptados para o processamento de :ref:`dados "
"binários <binaryseq>` e :ref:`strings de texto <textseq>` são descritos em "
"seções dedicadas."

#: ../../library/stdtypes.rst:932
msgid "Common Sequence Operations"
msgstr "Operações comuns de sequências"

#: ../../library/stdtypes.rst:936
msgid ""
"The operations in the following table are supported by most sequence types, "
"both mutable and immutable. The :class:`collections.abc.Sequence` ABC is "
"provided to make it easier to correctly implement these operations on custom "
"sequence types."
msgstr ""
"As operações nas seguintes tabelas são suportadas pela maioria dos tipos "
"sequências, ambos mutáveis e imutáveis. A classe ABC :class:`collections.abc."
"Sequence` é fornecida para tornar fácil a correta implementação desses "
"operadores em tipos sequências personalizados."

#: ../../library/stdtypes.rst:941
msgid ""
"This table lists the sequence operations sorted in ascending priority.  In "
"the table, *s* and *t* are sequences of the same type, *n*, *i*, *j* and *k* "
"are integers and *x* is an arbitrary object that meets any type and value "
"restrictions imposed by *s*."
msgstr ""
"Essa tabela lista as operações de sequência ordenadas em prioridade "
"ascendente. Na tabela, *s* e *t* são sequências do mesmo tipo, *n*, *i*, *j* "
"e *k* são inteiros e *x* é um objeto arbitrário que atende a qualquer "
"restrição de valor e tipo imposta por *s*."

#: ../../library/stdtypes.rst:946
msgid ""
"The ``in`` and ``not in`` operations have the same priorities as the "
"comparison operations. The ``+`` (concatenation) and ``*`` (repetition) "
"operations have the same priority as the corresponding numeric operations. "
"[3]_"
msgstr ""
"As operações ``in`` e ``not in`` têm as mesmas prioridades que as operações "
"de comparação. As operações ``+`` (concatenação) e ``*`` (repetição) têm a "
"mesma prioridade que as operações numéricas correspondentes. [3]_"

#: ../../library/stdtypes.rst:967
msgid "``x in s``"
msgstr "``x in s``"

#: ../../library/stdtypes.rst:967
msgid "``True`` if an item of *s* is equal to *x*, else ``False``"
msgstr ""
"``True`` caso um item de *s* seja igual a *x*, caso contrário ``False``"

#: ../../library/stdtypes.rst:970
msgid "``x not in s``"
msgstr "``x not in s``"

#: ../../library/stdtypes.rst:970
msgid "``False`` if an item of *s* is equal to *x*, else ``True``"
msgstr "``False`` caso um item de *s* for igual a *x*, caso contrário ``True``"

#: ../../library/stdtypes.rst:973
msgid "``s + t``"
msgstr "``s + t``"

#: ../../library/stdtypes.rst:973
msgid "the concatenation of *s* and *t*"
msgstr "a concatenação de *s* e *t*"

#: ../../library/stdtypes.rst:973
msgid "(6)(7)"
msgstr "(6)(7)"

#: ../../library/stdtypes.rst:976
msgid "``s * n`` or ``n * s``"
msgstr "``s * n`` ou ``n * s``"

#: ../../library/stdtypes.rst:976
msgid "equivalent to adding *s* to itself *n* times"
msgstr "equivalente a adicionar *s* a si mesmo *n* vezes"

#: ../../library/stdtypes.rst:976
msgid "(2)(7)"
msgstr "(2)(7)"

#: ../../library/stdtypes.rst:979
msgid "``s[i]``"
msgstr "``s[i]``"

#: ../../library/stdtypes.rst:979
msgid "*i*\\ th item of *s*, origin 0"
msgstr "*i*\\ -ésimo item de *s*, origem 0"

#: ../../library/stdtypes.rst:981
msgid "``s[i:j]``"
msgstr "``s[i:j]``"

#: ../../library/stdtypes.rst:981
msgid "slice of *s* from *i* to *j*"
msgstr "fatia de *s* de *i* até *j*"

#: ../../library/stdtypes.rst:981
msgid "(3)(4)"
msgstr "(3)(4)"

#: ../../library/stdtypes.rst:983
msgid "``s[i:j:k]``"
msgstr "``s[i:j:k]``"

#: ../../library/stdtypes.rst:983
msgid "slice of *s* from *i* to *j* with step *k*"
msgstr "fatia de *s* de *i* até *j* com passo *k*"

#: ../../library/stdtypes.rst:983
msgid "(3)(5)"
msgstr "(3)(5)"

#: ../../library/stdtypes.rst:986
msgid "``len(s)``"
msgstr "``len(s)``"

#: ../../library/stdtypes.rst:986
msgid "length of *s*"
msgstr "comprimento de *s*"

#: ../../library/stdtypes.rst:988
msgid "``min(s)``"
msgstr "``min(s)``"

#: ../../library/stdtypes.rst:988
msgid "smallest item of *s*"
msgstr "menor item de *s*"

#: ../../library/stdtypes.rst:990
msgid "``max(s)``"
msgstr "``max(s)``"

#: ../../library/stdtypes.rst:990
msgid "largest item of *s*"
msgstr "maior item de *s*"

#: ../../library/stdtypes.rst:992
msgid "``s.index(x[, i[, j]])``"
msgstr "``s.index(x[, i[, j]])``"

#: ../../library/stdtypes.rst:992
msgid ""
"index of the first occurrence of *x* in *s* (at or after index *i* and "
"before index *j*)"
msgstr ""
"índice da primeira ocorrência de *x* em *s* (no ou após o índice *i*, e "
"antes do índice *j*)"

#: ../../library/stdtypes.rst:992 ../../library/stdtypes.rst:3659
msgid "\\(8)"
msgstr "\\(8)"

#: ../../library/stdtypes.rst:996
msgid "``s.count(x)``"
msgstr "``s.count(x)``"

#: ../../library/stdtypes.rst:996
msgid "total number of occurrences of *x* in *s*"
msgstr "numero total de ocorrência de *x* em *s*"

#: ../../library/stdtypes.rst:1000
msgid ""
"Sequences of the same type also support comparisons.  In particular, tuples "
"and lists are compared lexicographically by comparing corresponding "
"elements. This means that to compare equal, every element must compare equal "
"and the two sequences must be of the same type and have the same length.  "
"(For full details see :ref:`comparisons` in the language reference.)"
msgstr ""
"Sequências do mesmo tipo também suportam comparações. Em particular, tuplas "
"e listas são comparadas lexicograficamente pela comparação de elementos "
"correspondentes. Isso significa que para comparar igualmente, cada elemento "
"deve comparar igual e as duas sequências devem ser do mesmo tipo e possuírem "
"o mesmo comprimento. (Para detalhes completos, veja :ref:`comparisons` na "
"referência da linguagem.)"

#: ../../library/stdtypes.rst:1010
msgid ""
"Forward and reversed iterators over mutable sequences access values using an "
"index.  That index will continue to march forward (or backward) even if the "
"underlying sequence is mutated.  The iterator terminates only when an :exc:"
"`IndexError` or a :exc:`StopIteration` is encountered (or when the index "
"drops below zero)."
msgstr ""
"Iteradores para frente e reversos sobre sequências mutáveis acessam valores "
"usando um índice. Esse índice continuará avançando (ou retrocedendo) mesmo "
"que a sequência subjacente seja alterada. O iterador termina somente quando "
"um :exc:`IndexError` ou um :exc:`StopIteration` é encontrado (ou quando o "
"índice cai abaixo de zero)."

#: ../../library/stdtypes.rst:1019
msgid ""
"While the ``in`` and ``not in`` operations are used only for simple "
"containment testing in the general case, some specialised sequences (such "
"as :class:`str`, :class:`bytes` and :class:`bytearray`) also use them for "
"subsequence testing::"
msgstr ""
"Enquanto as operações ``in`` e ``not in`` são usadas somente para testes de "
"contenção simples em modo geral, algumas sequências especializadas (tais "
"como :class:`str`, :class:`bytes` e :class:`bytearray`) também usam-nas para "
"testes de subsequências::"

#: ../../library/stdtypes.rst:1024
msgid ""
">>> \"gg\" in \"eggs\"\n"
"True"
msgstr ""
">>> \"gg\" in \"eggs\"\n"
"True"

#: ../../library/stdtypes.rst:1028
msgid ""
"Values of *n* less than ``0`` are treated as ``0`` (which yields an empty "
"sequence of the same type as *s*).  Note that items in the sequence *s* are "
"not copied; they are referenced multiple times.  This often haunts new "
"Python programmers; consider::"
msgstr ""
"Os valores de *n* menos ``0`` são tratados como ``0`` (o que produz uma "
"sequência vazia do mesmo tipo que *s*). Observe que os itens na sequência "
"*s* não são copiados; eles são referenciados várias vezes. Isso "
"frequentemente assombra novos programadores Python; considere então que::"

#: ../../library/stdtypes.rst:1033
msgid ""
">>> lists = [[]] * 3\n"
">>> lists\n"
"[[], [], []]\n"
">>> lists[0].append(3)\n"
">>> lists\n"
"[[3], [3], [3]]"
msgstr ""
">>> lists = [[]] * 3\n"
">>> lists\n"
"[[], [], []]\n"
">>> lists[0].append(3)\n"
">>> lists\n"
"[[3], [3], [3]]"

#: ../../library/stdtypes.rst:1040
msgid ""
"What has happened is that ``[[]]`` is a one-element list containing an empty "
"list, so all three elements of ``[[]] * 3`` are references to this single "
"empty list.  Modifying any of the elements of ``lists`` modifies this single "
"list. You can create a list of different lists this way::"
msgstr ""
"O que aconteceu é que ``[[]]`` é uma lista de um elemento contendo uma lista "
"vazia, então todos os três elementos de ``[[]] * 3`` são referências a esta "
"única lista vazia. Modificar qualquer um dos elementos de ``lists`` modifica "
"a lista vazia. Podemos criar uma lista de listas diferentes dessa maneira::"

#: ../../library/stdtypes.rst:1045
msgid ""
">>> lists = [[] for i in range(3)]\n"
">>> lists[0].append(3)\n"
">>> lists[1].append(5)\n"
">>> lists[2].append(7)\n"
">>> lists\n"
"[[3], [5], [7]]"
msgstr ""
">>> lists = [[] for i in range(3)]\n"
">>> lists[0].append(3)\n"
">>> lists[1].append(5)\n"
">>> lists[2].append(7)\n"
">>> lists\n"
"[[3], [5], [7]]"

#: ../../library/stdtypes.rst:1052
msgid ""
"Further explanation is available in the FAQ entry :ref:`faq-multidimensional-"
"list`."
msgstr ""
"Outra explicação está disponível no FAQ :ref:`faq-multidimensional-list`."

#: ../../library/stdtypes.rst:1056
msgid ""
"If *i* or *j* is negative, the index is relative to the end of sequence *s*: "
"``len(s) + i`` or ``len(s) + j`` is substituted.  But note that ``-0`` is "
"still ``0``."
msgstr ""
"Se *i* ou *j* for negativo, o índice será relativo ao fim da sequência *s*: "
"``len(s) + i`` ou ``len(s) + j`` será substituído. Mas note que ``-0`` ainda "
"será ``0``."

#: ../../library/stdtypes.rst:1061
msgid ""
"The slice of *s* from *i* to *j* is defined as the sequence of items with "
"index *k* such that ``i <= k < j``.  If *i* or *j* is greater than "
"``len(s)``, use ``len(s)``.  If *i* is omitted or ``None``, use ``0``.  If "
"*j* is omitted or ``None``, use ``len(s)``.  If *i* is greater than or equal "
"to *j*, the slice is empty."
msgstr ""
"A fatia *s* de *i* até *j* é definida como a sequência de itens com índice "
"*k* tal que ``i <= k < j``. Se *i* ou *j* foi maior do que ``len(s)``, usa "
"``len(s)``. Se *i* for omitido ou ``None``, use ``0``. Se *j* for omitido ou "
"``None``, usa ``len(s)``. Se *i* for maior ou igual a *j*, a fatia é vazia."

#: ../../library/stdtypes.rst:1068
msgid ""
"The slice of *s* from *i* to *j* with step *k* is defined as the sequence of "
"items with index  ``x = i + n*k`` such that ``0 <= n < (j-i)/k``.  In other "
"words, the indices are ``i``, ``i+k``, ``i+2*k``, ``i+3*k`` and so on, "
"stopping when *j* is reached (but never including *j*).  When *k* is "
"positive, *i* and *j* are reduced to ``len(s)`` if they are greater. When "
"*k* is negative, *i* and *j* are reduced to ``len(s) - 1`` if they are "
"greater.  If *i* or *j* are omitted or ``None``, they become \"end\" values "
"(which end depends on the sign of *k*).  Note, *k* cannot be zero. If *k* is "
"``None``, it is treated like ``1``."
msgstr ""
"A fatia *s* de *i* até *j* com passo *k* é definida como sendo a sequência "
"de itens com índice ``x = i + n*k`` tal que ``0 <= n < (j-i)/k``. Em outras "
"palavras, os índices são ``i``, ``i+k``, ``i+2*k``, ``i+3*k`` e assim por "
"diante, parando quando *j* for atingido (mas nunca incluindo *j*). Quando "
"*k* for positivo, *i* e *j* serão reduzidos a ``len(s)`` se forem maiores. "
"Quando *k* for negativo, *i* e *j* são reduzidos para ``len(s) - 1`` se "
"forem maiores. Se *i* ou *j* forem omitidos ou ``None``, eles se tornam "
"valores \"finais\" (cujo final depende de *k*). Nota: *k* não pode ser zero. "
"Se *k* for ``None``, o mesmo será tratado como sendo igual a ``1``."

#: ../../library/stdtypes.rst:1079
msgid ""
"Concatenating immutable sequences always results in a new object.  This "
"means that building up a sequence by repeated concatenation will have a "
"quadratic runtime cost in the total sequence length.  To get a linear "
"runtime cost, you must switch to one of the alternatives below:"
msgstr ""
"Concatenar sequências imutáveis sempre resulta em um novo objeto. Isso "
"significa que a criação de uma sequência por concatenação repetida terá um "
"custo quadrático de tempo de execução no comprimento total da sequência. "
"Para obter um custo de tempo de execução linear, devemos alternar para uma "
"das alternativas abaixo:"

#: ../../library/stdtypes.rst:1084
msgid ""
"if concatenating :class:`str` objects, you can build a list and use :meth:"
"`str.join` at the end or else write to an :class:`io.StringIO` instance and "
"retrieve its value when complete"
msgstr ""
"Se estiver concatenando objetos :class:`str`, você pode criar uma lista e "
"usar :meth:`str.join` no final ou então escrever numa instância de :class:"
"`io.StringIO` e recuperar o seu valor ao final"

#: ../../library/stdtypes.rst:1088
msgid ""
"if concatenating :class:`bytes` objects, you can similarly use :meth:`bytes."
"join` or :class:`io.BytesIO`, or you can do in-place concatenation with a :"
"class:`bytearray` object.  :class:`bytearray` objects are mutable and have "
"an efficient overallocation mechanism"
msgstr ""
"Se estiver concatenando objetos :class:`bytes`, você também pode usar o "
"método :meth:`bytes.join` ou :class:`io.BytesIO`, ou você pode fazer "
"concatenação interna com um objeto :class:`bytearray`. A classe :class:"
"`bytearray` são objetos mutáveis e possuem um eficiente mecanismo de "
"superalocação"

#: ../../library/stdtypes.rst:1093
msgid "if concatenating :class:`tuple` objects, extend a :class:`list` instead"
msgstr ""
"Se estiver concatenando objetos :class:`tuple`, estenda a classe :class:"
"`list` em vez disso"

#: ../../library/stdtypes.rst:1095
msgid "for other types, investigate the relevant class documentation"
msgstr "para outros tipos, busque na documentação relevante da classe"

#: ../../library/stdtypes.rst:1099
msgid ""
"Some sequence types (such as :class:`range`) only support item sequences "
"that follow specific patterns, and hence don't support sequence "
"concatenation or repetition."
msgstr ""
"Alguns tipos sequências (como :class:`range`) apenas suportam sequências de "
"itens que seguem padrões específicos e, portanto, não suportam concatenação "
"ou repetição de sequência."

#: ../../library/stdtypes.rst:1104
msgid ""
"``index`` raises :exc:`ValueError` when *x* is not found in *s*. Not all "
"implementations support passing the additional arguments *i* and *j*. These "
"arguments allow efficient searching of subsections of the sequence. Passing "
"the extra arguments is roughly equivalent to using ``s[i:j].index(x)``, only "
"without copying any data and with the returned index being relative to the "
"start of the sequence rather than the start of the slice."
msgstr ""
"``index`` levanta :exc:`ValueError` quando *x* não é encontrado em *s*. Nem "
"todas as implementações suportam a passagem dos argumentos adicionais *i* e "
"*j*. Esses argumentos permitem a pesquisa eficiente de subseções da "
"sequência. Passar os argumentos extras é aproximadamente equivalente a usar "
"``s[i:j].index(x)``, apenas sem copiar nenhum dado e com o índice retornado "
"sendo relativo ao início da sequência e não ao início da fatia."

#: ../../library/stdtypes.rst:1115
msgid "Immutable Sequence Types"
msgstr "Tipos sequência imutáveis"

#: ../../library/stdtypes.rst:1122
msgid ""
"The only operation that immutable sequence types generally implement that is "
"not also implemented by mutable sequence types is support for the :func:"
"`hash` built-in."
msgstr ""
"A única operação que os tipos sequências imutáveis geralmente implementam "
"que também não é implementada pelos tipos sequências mutáveis é suporte para "
"a função embutida :func:`hash`."

#: ../../library/stdtypes.rst:1126
msgid ""
"This support allows immutable sequences, such as :class:`tuple` instances, "
"to be used as :class:`dict` keys and stored in :class:`set` and :class:"
"`frozenset` instances."
msgstr ""
"Esse suporte permite sequências imutáveis, tais como instâncias da classe :"
"class:`tuple`, serem usadas como chaves de dicionários :class:`dict` e "
"armazenados em instâncias de :class:`set` e de :class:`frozenset`."

#: ../../library/stdtypes.rst:1130
msgid ""
"Attempting to hash an immutable sequence that contains unhashable values "
"will result in :exc:`TypeError`."
msgstr ""
"A tentativa de obter um hash de uma sequência imutável que contém valores "
"desnecessários resultará em um erro :exc:`TypeError`."

#: ../../library/stdtypes.rst:1137
msgid "Mutable Sequence Types"
msgstr "Tipos sequências mutáveis"

#: ../../library/stdtypes.rst:1144
msgid ""
"The operations in the following table are defined on mutable sequence types. "
"The :class:`collections.abc.MutableSequence` ABC is provided to make it "
"easier to correctly implement these operations on custom sequence types."
msgstr ""
"As operações na tabela a seguir são definidas em tipos sequência mutáveis. A "
"ABC :class:`collections.abc.MutableSequence` é fornecida para tornar mais "
"fácil a implementação correta dessas operações em tipos sequências "
"personalizados."

#: ../../library/stdtypes.rst:1148
msgid ""
"In the table *s* is an instance of a mutable sequence type, *t* is any "
"iterable object and *x* is an arbitrary object that meets any type and value "
"restrictions imposed by *s* (for example, :class:`bytearray` only accepts "
"integers that meet the value restriction ``0 <= x <= 255``)."
msgstr ""
"Na tabela *s* é uma instância de um tipo de sequência mutável, *t* é "
"qualquer objeto iterável e *x* é um objeto arbitrário que atende a qualquer "
"restrição de tipo e valor imposto por *s* (por exemplo :class:`bytearray` só "
"aceita inteiros que atendam a restrição de valor ``0 <= x <= 255``)."

#: ../../library/stdtypes.rst:1172
msgid "``s[i] = x``"
msgstr "``s[i] = x``"

#: ../../library/stdtypes.rst:1172
msgid "item *i* of *s* is replaced by *x*"
msgstr "item *i* de *s* é substituído por *x*"

#: ../../library/stdtypes.rst:1175
msgid "``s[i:j] = t``"
msgstr "``s[i:j] = t``"

#: ../../library/stdtypes.rst:1175
msgid ""
"slice of *s* from *i* to *j* is replaced by the contents of the iterable *t*"
msgstr ""
"fatias de *s* de *i* até *j* são substituídas pelo conteúdo do iterável *t*"

#: ../../library/stdtypes.rst:1179
msgid "``del s[i:j]``"
msgstr "``del s[i:j]``"

#: ../../library/stdtypes.rst:1179
msgid "same as ``s[i:j] = []``"
msgstr "o mesmo que ``s[i:j] = []``"

#: ../../library/stdtypes.rst:1181
msgid "``s[i:j:k] = t``"
msgstr "``s[i:j:k] = t``"

#: ../../library/stdtypes.rst:1181
msgid "the elements of ``s[i:j:k]`` are replaced by those of *t*"
msgstr "os elementos de ``s[i:j:k]`` são substituídos por aqueles de *t*"

#: ../../library/stdtypes.rst:1184
msgid "``del s[i:j:k]``"
msgstr "``del s[i:j:k]``"

#: ../../library/stdtypes.rst:1184
msgid "removes the elements of ``s[i:j:k]`` from the list"
msgstr "remove os elementos de ``s[i:j:k]`` desde a listas"

#: ../../library/stdtypes.rst:1187
msgid "``s.append(x)``"
msgstr "``s.append(x)``"

#: ../../library/stdtypes.rst:1187
msgid ""
"appends *x* to the end of the sequence (same as ``s[len(s):len(s)] = [x]``)"
msgstr ""
"adiciona *x* no final da sequência (igual a ``s[len(s):len(s)] = [x]``)"

#: ../../library/stdtypes.rst:1191
msgid "``s.clear()``"
msgstr "``s.clear()``"

#: ../../library/stdtypes.rst:1191
msgid "removes all items from *s* (same as ``del s[:]``)"
msgstr "remove todos os itens de *s* (mesmo que ``del s[:]``)"

#: ../../library/stdtypes.rst:1194
msgid "``s.copy()``"
msgstr "``s.copy()``"

#: ../../library/stdtypes.rst:1194
msgid "creates a shallow copy of *s* (same as ``s[:]``)"
msgstr "cria uma cópia rasa de *s* (mesmo que ``s[:]``)"

#: ../../library/stdtypes.rst:1197
msgid "``s.extend(t)`` or ``s += t``"
msgstr "``s.extend(t)`` ou ``s += t``"

#: ../../library/stdtypes.rst:1197
msgid ""
"extends *s* with the contents of *t* (for the most part the same as "
"``s[len(s):len(s)] = t``)"
msgstr ""
"estende *s* com o conteúdo de *t* (na maior parte do mesmo ``s[len(s):"
"len(s)] = t``)"

#: ../../library/stdtypes.rst:1202
msgid "``s *= n``"
msgstr "``s *= n``"

#: ../../library/stdtypes.rst:1202
msgid "updates *s* with its contents repeated *n* times"
msgstr "atualiza *s* com o seu conteúdo por *n* vezes"

#: ../../library/stdtypes.rst:1205
msgid "``s.insert(i, x)``"
msgstr "``s.insert(i, x)``"

#: ../../library/stdtypes.rst:1205
msgid ""
"inserts *x* into *s* at the index given by *i* (same as ``s[i:i] = [x]``)"
msgstr ""
"insere *x* dentro de *s* no índice dado por *i* (igual a ``s[i:i] = [x]``)"

#: ../../library/stdtypes.rst:1209
msgid "``s.pop()`` or ``s.pop(i)``"
msgstr "``s.pop()`` ou ``s.pop(i)``"

#: ../../library/stdtypes.rst:1209
msgid "retrieves the item at *i* and also removes it from *s*"
msgstr "retorna o item em *i* e também remove-o de *s*"

#: ../../library/stdtypes.rst:1212
msgid "``s.remove(x)``"
msgstr "``s.remove(x)``"

#: ../../library/stdtypes.rst:1212
msgid "removes the first item from *s* where ``s[i]`` is equal to *x*"
msgstr "remove o primeiro item de *s* onde ``s[i]`` é igual a *x*"

#: ../../library/stdtypes.rst:1216
msgid "``s.reverse()``"
msgstr "``s.reverse()``"

#: ../../library/stdtypes.rst:1216
msgid "reverses the items of *s* in place"
msgstr "inverte os itens de *s* in-place"

#: ../../library/stdtypes.rst:1224
msgid ""
"If *k* is not equal to ``1``, *t* must have the same length as the slice it "
"is replacing."
msgstr ""
"se *k* não for igual a ``1``, *t* deve ter o mesmo comprimento que a fatia a "
"qual ele está substituindo."

#: ../../library/stdtypes.rst:1227
msgid ""
"The optional argument *i* defaults to ``-1``, so that by default the last "
"item is removed and returned."
msgstr ""
"O argumento opcional *i* tem como  padrão ``-1``, de modo que, por padrão, o "
"último item é removido e retornado."

#: ../../library/stdtypes.rst:1231
msgid ":meth:`remove` raises :exc:`ValueError` when *x* is not found in *s*."
msgstr ""
":meth:`remove` levanta :exc:`ValueError` quando *x* não é encontrado em *s*."

#: ../../library/stdtypes.rst:1234
msgid ""
"The :meth:`reverse` method modifies the sequence in place for economy of "
"space when reversing a large sequence.  To remind users that it operates by "
"side effect, it does not return the reversed sequence."
msgstr ""
"O método :meth:`reverse` modifica a sequência no lugar para economizar "
"espaço ao reverter uma grande sequência. Para lembrar os usuários que isso "
"ocorre como sendo um efeito colateral, o mesmo não retorna a sequência "
"invertida."

#: ../../library/stdtypes.rst:1239
msgid ""
":meth:`clear` and :meth:`!copy` are included for consistency with the "
"interfaces of mutable containers that don't support slicing operations (such "
"as :class:`dict` and :class:`set`). :meth:`!copy` is not part of the :class:"
"`collections.abc.MutableSequence` ABC, but most concrete mutable sequence "
"classes provide it."
msgstr ""
":meth:`clear` e :meth:`!copy` estão incluídos para consistência com as "
"interfaces de contêineres mutáveis que não suportam operações de fatiamento "
"(como :class:`dict` e :class:`set`). :meth:`!copy` não faz parte da ABC de :"
"class:`collections.abc.MutableSequence`, mas a maioria das classes concretas "
"de sequências mutáveis fornece isso."

#: ../../library/stdtypes.rst:1245
msgid ":meth:`clear` and :meth:`!copy` methods."
msgstr "Métodos :meth:`clear` e :meth:`!copy`."

#: ../../library/stdtypes.rst:1249
msgid ""
"The value *n* is an integer, or an object implementing :meth:`~object."
"__index__`.  Zero and negative values of *n* clear the sequence.  Items in "
"the sequence are not copied; they are referenced multiple times, as "
"explained for ``s * n`` under :ref:`typesseq-common`."
msgstr ""
"O valor *n* é um inteiro, ou um objeto implementando :meth:`~object."
"__index__`. Valores zero e negativos de *n* limparão a sequência. Os itens "
"na sequência não são copiados; eles são referenciados várias vezes, como "
"explicado para ``s * n`` em :ref:`typesseq-common`."

#: ../../library/stdtypes.rst:1258
msgid "Lists"
msgstr "Listas"

#: ../../library/stdtypes.rst:1262
msgid ""
"Lists are mutable sequences, typically used to store collections of "
"homogeneous items (where the precise degree of similarity will vary by "
"application)."
msgstr ""
"As listas são sequências mutáveis, normalmente usadas para armazenar "
"coleções de itens homogêneos (onde o grau preciso de similaridade variará de "
"acordo com a aplicação)."

#: ../../library/stdtypes.rst:1268
msgid "Lists may be constructed in several ways:"
msgstr "As listas podem ser construídas de várias maneiras:"

#: ../../library/stdtypes.rst:1270
msgid "Using a pair of square brackets to denote the empty list: ``[]``"
msgstr "Usando um par de colchetes para denotar uma lista vazia: ``[]``"

#: ../../library/stdtypes.rst:1271
msgid ""
"Using square brackets, separating items with commas: ``[a]``, ``[a, b, c]``"
msgstr "Usando colchetes, separando itens por vírgulas: ``[a]``, ``[a, b, c]``"

#: ../../library/stdtypes.rst:1272
msgid "Using a list comprehension: ``[x for x in iterable]``"
msgstr "Usando uma compreensão de lista: ``[x for x in iterable]``"

#: ../../library/stdtypes.rst:1273
msgid "Using the type constructor: ``list()`` or ``list(iterable)``"
msgstr "Usando o construtor de tipo: ``list()`` ou ``list(iterable)``"

#: ../../library/stdtypes.rst:1275
msgid ""
"The constructor builds a list whose items are the same and in the same order "
"as *iterable*'s items.  *iterable* may be either a sequence, a container "
"that supports iteration, or an iterator object.  If *iterable* is already a "
"list, a copy is made and returned, similar to ``iterable[:]``. For example, "
"``list('abc')`` returns ``['a', 'b', 'c']`` and ``list( (1, 2, 3) )`` "
"returns ``[1, 2, 3]``. If no argument is given, the constructor creates a "
"new empty list, ``[]``."
msgstr ""
"O construtor produz uma lista cujos itens são iguais e na mesma ordem que os "
"itens de *iterable*. *iterable* pode ser uma sequência, um contêiner que "
"suporte iteração ou um objeto iterador. Se *iterable* já for uma lista, uma "
"cópia será feita e retornada, semelhante a ``iterable[:]``. Por exemplo, "
"``list('abc')`` retorna ``['a', 'b', 'c']`` e ``list( (1, 2, 3) )`` retorna "
"``[1, 2, 3]``. Se nenhum argumento for dado, o construtor criará uma nova "
"lista vazia ``[]``."

#: ../../library/stdtypes.rst:1284
msgid ""
"Many other operations also produce lists, including the :func:`sorted` built-"
"in."
msgstr ""
"Muitas outras operações também produzem listas, incluindo a função embutida :"
"func:`sorted`."

#: ../../library/stdtypes.rst:1287
msgid ""
"Lists implement all of the :ref:`common <typesseq-common>` and :ref:`mutable "
"<typesseq-mutable>` sequence operations. Lists also provide the following "
"additional method:"
msgstr ""
"Listas implementam todas as operações de sequências :ref:`comuns <typesseq-"
"common>` e :ref:`mutáveis <typesseq-mutable>`. As listas também fornecem o "
"seguinte método adicional:"

#: ../../library/stdtypes.rst:1293
msgid ""
"This method sorts the list in place, using only ``<`` comparisons between "
"items. Exceptions are not suppressed - if any comparison operations fail, "
"the entire sort operation will fail (and the list will likely be left in a "
"partially modified state)."
msgstr ""
"Esse método classifica a lista in-place, usando apenas comparações ``<`` "
"entre itens. As exceções não são suprimidas -- se qualquer operação de "
"comparação falhar, toda a operação de ordenação falhará (e a lista "
"provavelmente será deixada em um estado parcialmente modificado)."

#: ../../library/stdtypes.rst:1298
msgid ""
":meth:`sort` accepts two arguments that can only be passed by keyword (:ref:"
"`keyword-only arguments <keyword-only_parameter>`):"
msgstr ""
":meth:`sort` aceita 2 argumentos que só podem ser passados como :ref:"
"`argumentos somente-nomeados <keyword-only_parameter>`:"

#: ../../library/stdtypes.rst:1301
msgid ""
"*key* specifies a function of one argument that is used to extract a "
"comparison key from each list element (for example, ``key=str.lower``). The "
"key corresponding to each item in the list is calculated once and then used "
"for the entire sorting process. The default value of ``None`` means that "
"list items are sorted directly without calculating a separate key value."
msgstr ""
"*key* especifica uma função de um argumento que é usado para extrair uma "
"chave de comparação de cada elemento da lista (por exemplo, ``key=str."
"lower``). A chave correspondente a cada item na lista é calculada uma vez e "
"depois usada para todo o processo de classificação. O valor padrão ``None`` "
"significa que os itens da lista são classificados diretamente sem calcular "
"um valor de chave separado."

#: ../../library/stdtypes.rst:1308
msgid ""
"The :func:`functools.cmp_to_key` utility is available to convert a 2.x style "
"*cmp* function to a *key* function."
msgstr ""
"A função utilitária :func:`functools.cmp_to_key` está disponível para "
"converter a função *cmp* no estilo 2.x para uma função *key*."

#: ../../library/stdtypes.rst:1311
msgid ""
"*reverse* is a boolean value.  If set to ``True``, then the list elements "
"are sorted as if each comparison were reversed."
msgstr ""
"*reverse* é um valor booleano. Se definido igual a ``True``, então os "
"elementos da lista são classificados como se cada comparação estivesse "
"invertida."

#: ../../library/stdtypes.rst:1314
msgid ""
"This method modifies the sequence in place for economy of space when sorting "
"a large sequence.  To remind users that it operates by side effect, it does "
"not return the sorted sequence (use :func:`sorted` to explicitly request a "
"new sorted list instance)."
msgstr ""
"Este método modifica a sequência in-place para economizar espaço ao "
"classificar uma sequência grande. Para lembrar aos usuários que os mesmos "
"operam por efeito colateral, ele não retorna a sequência ordenada (utilize a "
"função :func:`sorted` para solicitar explicitamente uma nova instância da "
"lista ordenada)."

#: ../../library/stdtypes.rst:1319
msgid ""
"The :meth:`sort` method is guaranteed to be stable.  A sort is stable if it "
"guarantees not to change the relative order of elements that compare equal "
"--- this is helpful for sorting in multiple passes (for example, sort by "
"department, then by salary grade)."
msgstr ""
"O método :meth:`sort` é garantido como sendo estável. Uma classificação é "
"estável se ela garantir não alterar a ordem relativa de elementos que "
"comparam igual -- isso é útil para classificar em várias passagens (por "
"exemplo, classificar por departamento, depois por nota salarial)."

#: ../../library/stdtypes.rst:1324
msgid ""
"For sorting examples and a brief sorting tutorial, see :ref:`sortinghowto`."
msgstr ""
"Para exemplos de classificação e um breve tutorial de classificação, veja :"
"ref:`sortinghowto`."

#: ../../library/stdtypes.rst:1328
msgid ""
"While a list is being sorted, the effect of attempting to mutate, or even "
"inspect, the list is undefined.  The C implementation of Python makes the "
"list appear empty for the duration, and raises :exc:`ValueError` if it can "
"detect that the list has been mutated during a sort."
msgstr ""
"No momento em que uma lista está sendo ordenada, o efeito de tentar alterar, "
"ou mesmo inspecionar, a lista é indefinida. A implementação C do Python faz "
"com que a lista apareça vazia durante o tempo de processamento, e levanta a "
"exceção :exc:`ValueError` se puder detectar que a lista foi alterada durante "
"uma ordenação."

#: ../../library/stdtypes.rst:1337
msgid "Tuples"
msgstr "Tuplas"

#: ../../library/stdtypes.rst:1341
msgid ""
"Tuples are immutable sequences, typically used to store collections of "
"heterogeneous data (such as the 2-tuples produced by the :func:`enumerate` "
"built-in). Tuples are also used for cases where an immutable sequence of "
"homogeneous data is needed (such as allowing storage in a :class:`set` or :"
"class:`dict` instance)."
msgstr ""
"Tuplas são sequências imutáveis, tipicamente usadas para armazenar coleções "
"de dados heterogêneos (como as tuplas de 2 elementos produzidas pelo função "
"embutida :func:`enumerate`). Tuplas também são usadas para casos em que seja "
"necessária uma sequência imutável de dados homogêneos (como permitir o "
"armazenamento em uma instância :class:`set` ou :class:`dict`)."

#: ../../library/stdtypes.rst:1349
msgid "Tuples may be constructed in a number of ways:"
msgstr "As tuplas podem ser construídas de várias maneiras:"

#: ../../library/stdtypes.rst:1351
msgid "Using a pair of parentheses to denote the empty tuple: ``()``"
msgstr "Usando um par de parênteses para denotar a tupla vazia: ``()``"

#: ../../library/stdtypes.rst:1352
msgid "Using a trailing comma for a singleton tuple: ``a,`` or ``(a,)``"
msgstr ""
"Usando uma vírgula à direita para uma tupla singleton: ``a,`` ou ``(a,)``"

#: ../../library/stdtypes.rst:1353
msgid "Separating items with commas: ``a, b, c`` or ``(a, b, c)``"
msgstr "Separando os itens com vírgulas: ``a, b, c`` ou ``(a, b, c)``"

#: ../../library/stdtypes.rst:1354
msgid "Using the :func:`tuple` built-in: ``tuple()`` or ``tuple(iterable)``"
msgstr ""
"Usando a função embutida :func:`tuple`: ``tuple()`` ou ``tuple(iterable)``"

#: ../../library/stdtypes.rst:1356
msgid ""
"The constructor builds a tuple whose items are the same and in the same "
"order as *iterable*'s items.  *iterable* may be either a sequence, a "
"container that supports iteration, or an iterator object.  If *iterable* is "
"already a tuple, it is returned unchanged. For example, ``tuple('abc')`` "
"returns ``('a', 'b', 'c')`` and ``tuple( [1, 2, 3] )`` returns ``(1, 2, "
"3)``. If no argument is given, the constructor creates a new empty tuple, "
"``()``."
msgstr ""
"O construtor constrói uma tupla cujos itens são iguais e na mesma ordem dos "
"itens de *iterable*. *iterable* pode ser uma sequência, um contêiner que "
"suporta iteração ou um objeto iterador. Se *iterable* já for uma tupla, este "
"será retornado inalterado. Por exemplo, ``tuple('abc')`` retorna ``('a', "
"'b', 'c')`` e ``tuple( [1, 2, 3] )`` retorna ``(1, 2, 3)``. Se nenhum "
"argumento for dado, o construtor criará uma tupla vazia, ``()``."

#: ../../library/stdtypes.rst:1364
msgid ""
"Note that it is actually the comma which makes a tuple, not the parentheses. "
"The parentheses are optional, except in the empty tuple case, or when they "
"are needed to avoid syntactic ambiguity. For example, ``f(a, b, c)`` is a "
"function call with three arguments, while ``f((a, b, c))`` is a function "
"call with a 3-tuple as the sole argument."
msgstr ""
"Observe que, na verdade, é a vírgula que faz uma tupla, e não os parênteses. "
"Os parênteses são opcionais, exceto no caso de tupla vazia, ou quando são "
"necessários para evitar ambiguidades sintáticas. Por exemplo, ``f(a, b, c)`` "
"é uma chamada da função com três argumentos, enquanto que ``f((a, b, c))`` é "
"uma chamada de função com uma tupla de 3 elementos com um único argumento."

#: ../../library/stdtypes.rst:1370
msgid ""
"Tuples implement all of the :ref:`common <typesseq-common>` sequence "
"operations."
msgstr ""
"As tuplas implementam todas as operações :ref:`comuns <typesseq-common>` de "
"sequência."

#: ../../library/stdtypes.rst:1373
msgid ""
"For heterogeneous collections of data where access by name is clearer than "
"access by index, :func:`collections.namedtuple` may be a more appropriate "
"choice than a simple tuple object."
msgstr ""
"Para coleções heterogêneas de dados onde o acesso pelo nome é mais claro do "
"que o acesso pelo índice, :func:`collections.namedtuple` pode ser uma "
"escolha mais apropriada do que um objeto tupla simples."

#: ../../library/stdtypes.rst:1381
msgid "Ranges"
msgstr "Intervalos"

#: ../../library/stdtypes.rst:1385
msgid ""
"The :class:`range` type represents an immutable sequence of numbers and is "
"commonly used for looping a specific number of times in :keyword:`for` loops."
msgstr ""
"O tipo :class:`range` representa uma sequência imutável de números e é "
"comumente usado para percorrer um número determinado de vezes em um laço :"
"keyword:`for`."

#: ../../library/stdtypes.rst:1392
msgid ""
"The arguments to the range constructor must be integers (either built-in :"
"class:`int` or any object that implements the :meth:`~object.__index__` "
"special method).  If the *step* argument is omitted, it defaults to ``1``. "
"If the *start* argument is omitted, it defaults to ``0``. If *step* is "
"zero, :exc:`ValueError` is raised."
msgstr ""
"Os argumentos para o construtor de intervalo devem ser inteiros (:class:"
"`int` embutido ou qualquer objeto que implemente o método especial :meth:"
"`~object.__index__`). Se o argumento *step* for omitido, será usado o padrão "
"``1``. Se o argumento *start* for omitido, será usado o padrão ``0``. Se "
"*step* for zero, uma exceção :exc:`ValueError` será levantada."

#: ../../library/stdtypes.rst:1398
msgid ""
"For a positive *step*, the contents of a range ``r`` are determined by the "
"formula ``r[i] = start + step*i`` where ``i >= 0`` and ``r[i] < stop``."
msgstr ""
"Para um *step* positivo, o conteúdo de um intervalo ``r`` será determinado "
"pela fórmula ``r[i] = start + step*i`` onde ``i >= 0`` e ``r[i] < stop``."

#: ../../library/stdtypes.rst:1402
msgid ""
"For a negative *step*, the contents of the range are still determined by the "
"formula ``r[i] = start + step*i``, but the constraints are ``i >= 0`` and "
"``r[i] > stop``."
msgstr ""
"Para um *step* negativo, o conteúdo do intervalo ainda será determinado pela "
"fórmula ``r[i] = start + step*i``, mas as restrições serão ``i >= 0`` e "
"``r[i] > stop``."

#: ../../library/stdtypes.rst:1406
msgid ""
"A range object will be empty if ``r[0]`` does not meet the value constraint. "
"Ranges do support negative indices, but these are interpreted as indexing "
"from the end of the sequence determined by the positive indices."
msgstr ""
"Um objeto intervalo estará vazio se ``r[0]`` não atender à restrição de "
"valor. Intervalos suportam índices negativos, mas estes são interpretados "
"como indexadores partindo do final da sequência determinada pelos índices "
"positivos."

#: ../../library/stdtypes.rst:1411
msgid ""
"Ranges containing absolute values larger than :data:`sys.maxsize` are "
"permitted but some features (such as :func:`len`) may raise :exc:"
"`OverflowError`."
msgstr ""
"Intervalos contendo valores absolutos maiores que :data:`sys.maxsize` são "
"permitidos, mas alguns recursos (como :func:`len`) podem levantar :exc:"
"`OverflowError`."

#: ../../library/stdtypes.rst:1415
msgid "Range examples::"
msgstr "Exemplos de intervalos::"

#: ../../library/stdtypes.rst:1417
msgid ""
">>> list(range(10))\n"
"[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n"
">>> list(range(1, 11))\n"
"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n"
">>> list(range(0, 30, 5))\n"
"[0, 5, 10, 15, 20, 25]\n"
">>> list(range(0, 10, 3))\n"
"[0, 3, 6, 9]\n"
">>> list(range(0, -10, -1))\n"
"[0, -1, -2, -3, -4, -5, -6, -7, -8, -9]\n"
">>> list(range(0))\n"
"[]\n"
">>> list(range(1, 0))\n"
"[]"
msgstr ""
">>> list(range(10))\n"
"[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n"
">>> list(range(1, 11))\n"
"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n"
">>> list(range(0, 30, 5))\n"
"[0, 5, 10, 15, 20, 25]\n"
">>> list(range(0, 10, 3))\n"
"[0, 3, 6, 9]\n"
">>> list(range(0, -10, -1))\n"
"[0, -1, -2, -3, -4, -5, -6, -7, -8, -9]\n"
">>> list(range(0))\n"
"[]\n"
">>> list(range(1, 0))\n"
"[]"

#: ../../library/stdtypes.rst:1432
msgid ""
"Ranges implement all of the :ref:`common <typesseq-common>` sequence "
"operations except concatenation and repetition (due to the fact that range "
"objects can only represent sequences that follow a strict pattern and "
"repetition and concatenation will usually violate that pattern)."
msgstr ""
"Ranges implementam todas as operações :ref:`comuns <typesseq-common>` de "
"sequência, exceto a concatenação e a repetição (devido ao fato de que os "
"objetos intervalos só podem representar sequências que seguem um padrão "
"rígido. e a repetição e a concatenação geralmente vão violar esse padrão)."

#: ../../library/stdtypes.rst:1439
msgid ""
"The value of the *start* parameter (or ``0`` if the parameter was not "
"supplied)"
msgstr ""
"O valor do parâmetro *start* (ou ``0`` se o parâmetro não for fornecido)"

#: ../../library/stdtypes.rst:1444
msgid "The value of the *stop* parameter"
msgstr "O valor do parâmetro *stop*"

#: ../../library/stdtypes.rst:1448
msgid ""
"The value of the *step* parameter (or ``1`` if the parameter was not "
"supplied)"
msgstr ""
"O valor do parâmetro *step* (ou ``1`` se o parâmetro não for fornecido)"

#: ../../library/stdtypes.rst:1451
msgid ""
"The advantage of the :class:`range` type over a regular :class:`list` or :"
"class:`tuple` is that a :class:`range` object will always take the same "
"(small) amount of memory, no matter the size of the range it represents (as "
"it only stores the ``start``, ``stop`` and ``step`` values, calculating "
"individual items and subranges as needed)."
msgstr ""
"A vantagem do tipo :class:`range` sobre um :class:`list` ou :class:`tuple` "
"regular é que um objeto :class:`range` sempre terá a mesma quantidade "
"(pequena) de memória, não importa o tamanho do intervalo o mesmo esteja "
"representando (como ele apenas armazena os valores ``start``, ``stop`` e "
"``step``, calculando itens individuais e subintervalos conforme necessário)."

#: ../../library/stdtypes.rst:1457
msgid ""
"Range objects implement the :class:`collections.abc.Sequence` ABC, and "
"provide features such as containment tests, element index lookup, slicing "
"and support for negative indices (see :ref:`typesseq`):"
msgstr ""
"Objetos intervalos implementam a ABC :class:`collections.abc.Sequence`, e "
"fornecem recursos como testes de contenção, pesquisa de índice de elemento, "
"fatiamento e suporte a índices negativos (veja :ref:`typesseq`):"

#: ../../library/stdtypes.rst:1477
msgid ""
"Testing range objects for equality with ``==`` and ``!=`` compares them as "
"sequences.  That is, two range objects are considered equal if they "
"represent the same sequence of values.  (Note that two range objects that "
"compare equal might have different :attr:`~range.start`, :attr:`~range.stop` "
"and :attr:`~range.step` attributes, for example ``range(0) == range(2, 1, "
"3)`` or ``range(0, 3, 2) == range(0, 4, 2)``.)"
msgstr ""
"Testar objetos intervalos por igualdade com ``==`` e ``!=`` os compara como "
"sequências. Ou seja, dois objetos intervalos são considerados iguais se "
"representarem a mesma sequência de valores. (Observe que dois objetos "
"intervalos considerados iguais podem ter diferentes atributos :attr:`~range."
"start`, :attr:`~range.stop` e :attr:`~range.step`, por exemplo ``range(0) == "
"range(2, 1, 3)`` ou ``range(0, 3, 2) == range(0, 4, 2)``.)"

#: ../../library/stdtypes.rst:1484
msgid ""
"Implement the Sequence ABC. Support slicing and negative indices. Test :"
"class:`int` objects for membership in constant time instead of iterating "
"through all items."
msgstr ""
"Implementa a ABC Sequence. Suporte a fatiamento e a índices negativos. Testa "
"objetos :class:`int` para associação em tempo constante em vez de iterar "
"através de todos os itens."

#: ../../library/stdtypes.rst:1490
msgid ""
"Define '==' and '!=' to compare range objects based on the sequence of "
"values they define (instead of comparing based on object identity)."
msgstr ""
"Define '==' e '!=' para comparar objetos intervalos com base na sequência de "
"valores que eles definem (em vez de comparar com base na identidade do "
"objeto)."

#: ../../library/stdtypes.rst:1495
msgid ""
"Added the :attr:`~range.start`, :attr:`~range.stop` and :attr:`~range.step` "
"attributes."
msgstr ""
"Adicionados os atributos :attr:`~range.start`, :attr:`~range.stop` e :attr:"
"`~range.step`."

#: ../../library/stdtypes.rst:1500
msgid ""
"The `linspace recipe <https://code.activestate.com/recipes/579000-equally-"
"spaced-numbers-linspace/>`_ shows how to implement a lazy version of range "
"suitable for floating-point applications."
msgstr ""
"A `receita de linspace  <https://code.activestate.com/recipes/579000-equally-"
"spaced-numbers-linspace/>`_ mostra como implementar uma versão preguiçosa de "
"um intervalo adequado para aplicações de ponto flutuante."

#: ../../library/stdtypes.rst:1512
msgid "Text Sequence Type --- :class:`str`"
msgstr "Tipo sequência de texto --- :class:`str`"

#: ../../library/stdtypes.rst:1514
msgid ""
"Textual data in Python is handled with :class:`str` objects, or :dfn:"
"`strings`. Strings are immutable :ref:`sequences <typesseq>` of Unicode code "
"points.  String literals are written in a variety of ways:"
msgstr ""
"Os dados textuais em Python são tratados com objetos :class:`str`, ou :dfn:"
"`strings`. Strings são :ref:`sequências <typesseq>` imutáveis de pontos de "
"código Unicode. As strings literais são escritas de diversas maneiras:"

#: ../../library/stdtypes.rst:1519
msgid "Single quotes: ``'allows embedded \"double\" quotes'``"
msgstr "Aspas simples: ``'permitem aspas \"duplas\" internas'``"

#: ../../library/stdtypes.rst:1520
msgid "Double quotes: ``\"allows embedded 'single' quotes\"``"
msgstr "Aspas duplas: ``\"permitem aspas 'simples' internas\"``"

#: ../../library/stdtypes.rst:1521
msgid ""
"Triple quoted: ``'''Three single quotes'''``, ``\"\"\"Three double "
"quotes\"\"\"``"
msgstr ""
"Aspas triplas: ``'''Três aspas simples'''``, ``\"\"\"Três aspas "
"duplas\"\"\"``"

#: ../../library/stdtypes.rst:1523
msgid ""
"Triple quoted strings may span multiple lines - all associated whitespace "
"will be included in the string literal."
msgstr ""
"Strings de aspas triplas podem expandir por várias linhas -- todos os "
"espaços em branco associados serão incluídos em literal string."

#: ../../library/stdtypes.rst:1526
msgid ""
"String literals that are part of a single expression and have only "
"whitespace between them will be implicitly converted to a single string "
"literal. That is, ``(\"spam \" \"eggs\") == \"spam eggs\"``."
msgstr ""
"Os literais strings que fazem parte de uma única expressão e têm apenas "
"espaços em branco entre eles serão implicitamente convertidos em um único "
"literal string. Isso é, ``(\"spam \" \"eggs\") == \"spam eggs\"``."

#: ../../library/stdtypes.rst:1530
msgid ""
"See :ref:`strings` for more about the various forms of string literal, "
"including supported :ref:`escape sequences <escape-sequences>`, and the "
"``r`` (\"raw\") prefix that disables most escape sequence processing."
msgstr ""
"Veja :ref:`strings` para mais informações sobre as várias formas de literal "
"de string, incluindo o suporte a :ref:`sequêncis de escape <escape-"
"sequences>`, e o prefixo ``r`` (\"raw\") que desabilita a maioria dos "
"processos de sequência de escape."

#: ../../library/stdtypes.rst:1534
msgid ""
"Strings may also be created from other objects using the :class:`str` "
"constructor."
msgstr ""
"As strings também podem ser criadas a partir de outros objetos usando o "
"construtor :class:`str`."

#: ../../library/stdtypes.rst:1537
msgid ""
"Since there is no separate \"character\" type, indexing a string produces "
"strings of length 1. That is, for a non-empty string *s*, ``s[0] == s[0:1]``."
msgstr ""
"Uma vez que não há nenhum tipo de \"caractere\" separador, indexar uma "
"string produz strings de comprimento 1. Ou seja, para uma string não vazia "
"*s*, ``s[0] == s[0:1]``."

#: ../../library/stdtypes.rst:1543
msgid ""
"There is also no mutable string type, but :meth:`str.join` or :class:`io."
"StringIO` can be used to efficiently construct strings from multiple "
"fragments."
msgstr ""
"Também não existe um tipo string mutável, mas o método :meth:`str.join` ou a "
"classe :class:`io.StringIO` podem ser usados para construir strings de forma "
"eficiente a partir de vários partes distintas."

#: ../../library/stdtypes.rst:1547
msgid ""
"For backwards compatibility with the Python 2 series, the ``u`` prefix is "
"once again permitted on string literals. It has no effect on the meaning of "
"string literals and cannot be combined with the ``r`` prefix."
msgstr ""
"Para a compatibilidade com versões anteriores do Python 2, o prefixo ``u`` "
"foi mais uma vez permitido em literais strings. Não possui quaisquer efeito "
"sobre o significado de literais strings e não pode ser combinado com o "
"prefixo ``r``."

#: ../../library/stdtypes.rst:1559
msgid ""
"Return a :ref:`string <textseq>` version of *object*.  If *object* is not "
"provided, returns the empty string.  Otherwise, the behavior of ``str()`` "
"depends on whether *encoding* or *errors* is given, as follows."
msgstr ""
"Retorna uma versão :ref:`string <textseq>` de *object*. Se *object* não é "
"fornecido, retorna uma string vazia. Caso contrário, o comportamento de "
"``str()`` dependerá se o *encoding* ou *errors* são fornecidos, da seguinte "
"forma."

#: ../../library/stdtypes.rst:1563
msgid ""
"If neither *encoding* nor *errors* is given, ``str(object)`` returns :meth:"
"`type(object).__str__(object) <object.__str__>`, which is the \"informal\" "
"or nicely printable string representation of *object*.  For string objects, "
"this is the string itself.  If *object* does not have a :meth:`~object."
"__str__` method, then :func:`str` falls back to returning :func:"
"`repr(object) <repr>`."
msgstr ""
"Se nem *encoding* nem *errors* for fornecido, ``str(object)`` retornará :"
"meth:`type(object).__str__(object) <object.__str__>`, que é a representação "
"da string \"informal\" ou que pode ser facilmente imprimível  de *object*. "
"Para objetos string, esta é a própria string. Se *object* não tiver um "
"método::meth:`~object.__str__`, então a função :func:`str` retornará :func:"
"`repr(object) <repr>`."

#: ../../library/stdtypes.rst:1575
msgid ""
"If at least one of *encoding* or *errors* is given, *object* should be a :"
"term:`bytes-like object` (e.g. :class:`bytes` or :class:`bytearray`).  In "
"this case, if *object* is a :class:`bytes` (or :class:`bytearray`) object, "
"then ``str(bytes, encoding, errors)`` is equivalent to :meth:`bytes."
"decode(encoding, errors) <bytes.decode>`.  Otherwise, the bytes object "
"underlying the buffer object is obtained before calling :meth:`bytes."
"decode`.  See :ref:`binaryseq` and :ref:`bufferobjects` for information on "
"buffer objects."
msgstr ""
"Se pelo menos um de *encoding* ou *errors* for fornecido, *object* deve ser "
"um :term:`objeto byte ou similar <bytes-like object>` (por exemplo, :class:"
"`bytes` ou :class:`bytearray`). Nesse caso, se *object* for um objeto :class:"
"`bytes` (ou :class:`bytearray`), então ``str(bytes, encoding, errors)`` será "
"equivalente a :meth:`bytes.decode(encoding, errors) <bytes.decode>`. Caso "
"contrário, o objeto byte subjacente ao objeto buffer é obtido antes de "
"chamar :meth:`bytes.decode`. Veja :ref:`binaryseq` e :ref:`bufferobjects` "
"para obter informações sobre objetos buffer."

#: ../../library/stdtypes.rst:1584
msgid ""
"Passing a :class:`bytes` object to :func:`str` without the *encoding* or "
"*errors* arguments falls under the first case of returning the informal "
"string representation (see also the :option:`-b` command-line option to "
"Python).  For example::"
msgstr ""
"Passando um objeto :class:`bytes` para :func:`str` sem os argumentos "
"*encoding* ou *errors* se enquadra no primeiro caso de retornar a "
"representação informal de strings (consulte também a opção de linha de "
"comando :option:`-b` para Python). Por exemplo::"

#: ../../library/stdtypes.rst:1589
msgid ""
">>> str(b'Zoot!')\n"
"\"b'Zoot!'\""
msgstr ""
">>> str(b'Zoot!')\n"
"\"b'Zoot!'\""

#: ../../library/stdtypes.rst:1592
msgid ""
"For more information on the ``str`` class and its methods, see :ref:"
"`textseq` and the :ref:`string-methods` section below.  To output formatted "
"strings, see the :ref:`f-strings` and :ref:`formatstrings` sections.  In "
"addition, see the :ref:`stringservices` section."
msgstr ""
"Para mais informações sobre a classe ``str`` e seus métodos, veja :ref:"
"`textseq` e a seção :ref:`string-methods` abaixo.  Para gerar strings "
"formatadas, veja as seções :ref:`f-strings` e :ref:`formatstrings`. Além "
"disso, veja a seção :ref:`stringservices`."

#: ../../library/stdtypes.rst:1604
msgid "String Methods"
msgstr "Métodos de string"

#: ../../library/stdtypes.rst:1609
msgid ""
"Strings implement all of the :ref:`common <typesseq-common>` sequence "
"operations, along with the additional methods described below."
msgstr ""
"Strings implementam todas as operações :ref:`comuns <typesseq-common>` de "
"sequências, juntamente com os métodos adicionais descritos abaixo."

#: ../../library/stdtypes.rst:1612
msgid ""
"Strings also support two styles of string formatting, one providing a large "
"degree of flexibility and customization (see :meth:`str.format`, :ref:"
"`formatstrings` and :ref:`string-formatting`) and the other based on C "
"``printf`` style formatting that handles a narrower range of types and is "
"slightly harder to use correctly, but is often faster for the cases it can "
"handle (:ref:`old-string-formatting`)."
msgstr ""
"Strings também possuem suporte para duas formas de formatação de string, uma "
"fornecendo uma ampla gama de flexibilidade e customização (veja :meth:`str."
"format`, :ref:`formatstrings` e :ref:`string-formatting`) e a outra baseada "
"no estilo de formatação ``printf`` da linguagem C, que lida com uma gama "
"menor de tipos e é levemente mais difícil de utilizar corretamente, mas é "
"frequentemente mais rápida para os casos na qual ela consegue manipular (:"
"ref:`old-string-formatting`)."

#: ../../library/stdtypes.rst:1619
msgid ""
"The :ref:`textservices` section of the standard library covers a number of "
"other modules that provide various text related utilities (including regular "
"expression support in the :mod:`re` module)."
msgstr ""
"A seção :ref:`textservices` da biblioteca padrão cobre um número de diversos "
"outros módulos que fornecem vários utilitários relacionados a texto "
"(incluindo suporte a expressões regulares no módulo :mod:`re`)."

#: ../../library/stdtypes.rst:1625
msgid ""
"Return a copy of the string with its first character capitalized and the "
"rest lowercased."
msgstr ""
"Retorna uma cópia da string com o seu primeiro caractere em maiúsculo e o "
"restante em minúsculo."

#: ../../library/stdtypes.rst:1628
msgid ""
"The first character is now put into titlecase rather than uppercase. This "
"means that characters like digraphs will only have their first letter "
"capitalized, instead of the full character."
msgstr ""
"O primeiro caractere agora é colocado em *titlecase* ao invés de letras "
"maiúsculas. Isso significa que caracteres como dígrafos apenas terão sua "
"primeira letra alterada para maiúscula, ao invés de todos os caracteres."

#: ../../library/stdtypes.rst:1635
msgid ""
"Return a casefolded copy of the string. Casefolded strings may be used for "
"caseless matching."
msgstr ""
"Retorna uma cópia da string em *casefolded*. Strings em *casefold* podem ser "
"usadas para corresponder letras sem importar se são minúsculas ou maiúsculas."

#: ../../library/stdtypes.rst:1638
msgid ""
"Casefolding is similar to lowercasing but more aggressive because it is "
"intended to remove all case distinctions in a string. For example, the "
"German lowercase letter ``'ß'`` is equivalent to ``\"ss\"``. Since it is "
"already lowercase, :meth:`lower` would do nothing to ``'ß'``; :meth:"
"`casefold` converts it to ``\"ss\"``."
msgstr ""
"*Casefolding* é similar a mudar para letras minúsculas, mas mais agressivo "
"porque destina-se a remover todas as diferenças maiúsculas/minúsculas em uma "
"string. Por exemplo, a letra minúscula alemã ``'ß'`` é equivalente a "
"``\"ss\"``. Como ela já é uma minúscula, o método :meth:`lower` não irá "
"fazer nada para ``'ß'``; já o método :meth:`casefold` converte a letra para "
"``\"ss\"``."

#: ../../library/stdtypes.rst:1644
msgid ""
"The casefolding algorithm is `described in section 3.13 'Default Case "
"Folding' of the Unicode Standard <https://www.unicode.org/versions/"
"Unicode15.1.0/ch03.pdf>`__."
msgstr ""
"O algoritmo *casefolding* está `descrito na seção 3.13 'Default Case "
"Folding' do Padrão Unicode <https://www.unicode.org/versions/Unicode15.1.0/"
"ch03.pdf>`__."

#: ../../library/stdtypes.rst:1653
msgid ""
"Return centered in a string of length *width*. Padding is done using the "
"specified *fillchar* (default is an ASCII space). The original string is "
"returned if *width* is less than or equal to ``len(s)``."
msgstr ""
"Retorna um texto centralizado em uma string de comprimento *width*. "
"Preenchimento é feito usando o parâmetro *fillchar* especificado (padrão é o "
"caractere de espaço ASCII). A string original é retornada se *width* é menor "
"ou igual que ``len(s)``."

#: ../../library/stdtypes.rst:1661
msgid ""
"Return the number of non-overlapping occurrences of substring *sub* in the "
"range [*start*, *end*].  Optional arguments *start* and *end* are "
"interpreted as in slice notation."
msgstr ""
"Retorna o número de ocorrências da sub-string *sub* que não se sobrepõem no "
"intervalo [*start*, *end*]. Argumentos opcionais *start* e *end* são "
"interpretados como na notação de fatias."

#: ../../library/stdtypes.rst:1665
msgid ""
"If *sub* is empty, returns the number of empty strings between characters "
"which is the length of the string plus one."
msgstr ""
"Se *sub* estiver vazio, retorna o número de strings vazias entre os "
"caracteres, que é o comprimento da string mais um."

#: ../../library/stdtypes.rst:1671
msgid "Return the string encoded to :class:`bytes`."
msgstr "Retorna a string codificada para :class:`bytes`."

#: ../../library/stdtypes.rst:1673 ../../library/stdtypes.rst:2824
msgid ""
"*encoding* defaults to ``'utf-8'``; see :ref:`standard-encodings` for "
"possible values."
msgstr ""
"*encoding* tem como padrão ``'utf-8'``; veja :ref:`standard-encodings` para "
"valores possíveis."

#: ../../library/stdtypes.rst:1676
msgid ""
"*errors* controls how encoding errors are handled. If ``'strict'`` (the "
"default), a :exc:`UnicodeError` exception is raised. Other possible values "
"are ``'ignore'``, ``'replace'``, ``'xmlcharrefreplace'``, "
"``'backslashreplace'`` and any other name registered via :func:`codecs."
"register_error`. See :ref:`error-handlers` for details."
msgstr ""
"*errors* controla como os erros de codificação são tratados. Se ``'strict'`` "
"(o padrão), uma exceção :exc:`UnicodeError` é levantada. Outros valores "
"possíveis são ``'ignore'``, ``'replace'``, ``'xmlcharrefreplace'``, "
"``'backslashreplace'`` e qualquer outro nome registrado via :func:`codecs."
"register_error`. Veja :ref:`error-handlers` para detalhes."

#: ../../library/stdtypes.rst:1683
msgid ""
"For performance reasons, the value of *errors* is not checked for validity "
"unless an encoding error actually occurs, :ref:`devmode` is enabled or a :"
"ref:`debug build <debug-build>` is used."
msgstr ""
"Por motivos de desempenho, o valor de *errors* não é verificado quanto à "
"validade, a menos que um erro de codificação realmente ocorra, :ref:"
"`devmode` esteja ativado ou uma :ref:`construção de depuração <debug-build>` "
"seja usada."

#: ../../library/stdtypes.rst:1688 ../../library/stdtypes.rst:2843
msgid "Added support for keyword arguments."
msgstr "Adicionado suporte para argumentos nomeados."

#: ../../library/stdtypes.rst:1691 ../../library/stdtypes.rst:2846
msgid ""
"The value of the *errors* argument is now checked in :ref:`devmode` and in :"
"ref:`debug mode <debug-build>`."
msgstr ""
"O valor do argumento *errors* agora é verificado em :ref:`devmode` e no :ref:"
"`modo de depuração <debug-build>`."

#: ../../library/stdtypes.rst:1698
msgid ""
"Return ``True`` if the string ends with the specified *suffix*, otherwise "
"return ``False``.  *suffix* can also be a tuple of suffixes to look for.  "
"With optional *start*, test beginning at that position.  With optional "
"*end*, stop comparing at that position."
msgstr ""
"Retorna ``True`` se a string terminar com o *suffix* especificado, caso "
"contrário retorna ``False``.  *suffix* também pode ser uma tupla de sufixos "
"para procurar. Com o parâmetro opcional *start*, começamos a testar a partir "
"daquela posição. Com o parâmetro opcional *end*, devemos parar de comparar "
"na posição especificada."

#: ../../library/stdtypes.rst:1706
msgid ""
"Return a copy of the string where all tab characters are replaced by one or "
"more spaces, depending on the current column and the given tab size.  Tab "
"positions occur every *tabsize* characters (default is 8, giving tab "
"positions at columns 0, 8, 16 and so on).  To expand the string, the current "
"column is set to zero and the string is examined character by character.  If "
"the character is a tab (``\\t``), one or more space characters are inserted "
"in the result until the current column is equal to the next tab position. "
"(The tab character itself is not copied.)  If the character is a newline "
"(``\\n``) or return (``\\r``), it is copied and the current column is reset "
"to zero.  Any other character is copied unchanged and the current column is "
"incremented by one regardless of how the character is represented when "
"printed."
msgstr ""
"Retorna uma cópia da string onde todos os caracteres de tabulação são "
"substituídos por um ou mais espaços, dependendo da coluna atual e do tamanho "
"fornecido para a tabulação. Posições de tabulação ocorrem a cada *tabsize* "
"caracteres (o padrão é 8, dada as posições de tabulação nas colunas 0, 8, 16 "
"e assim por diante). Para expandir a string, a coluna atual é definida como "
"zero e a string é examinada caractere por caractere. Se o caractere é uma "
"tabulação (``\\t``), um ou mais caracteres de espaço são inseridos no "
"resultado até que a coluna atual seja igual a próxima posição de tabulação. "
"(O caractere de tabulação em si não é copiado.) Se o caractere é um "
"caractere de nova linha (``\\n``) ou de retorno (``\\r``), ele é copiado e a "
"coluna atual é redefinida para zero. Qualquer outro caractere é copiado sem "
"ser modificado e a coluna atual é incrementada em uma unidade "
"independentemente de como o caractere é representado quando é impresso."

#: ../../library/stdtypes.rst:1727
msgid ""
"Return the lowest index in the string where substring *sub* is found within "
"the slice ``s[start:end]``.  Optional arguments *start* and *end* are "
"interpreted as in slice notation.  Return ``-1`` if *sub* is not found."
msgstr ""
"Retorna o índice mais baixo na string onde a substring *sub* é encontrado "
"dentro da fatia ``s[start:end]``. Argumentos opcionais como *start* e *end* "
"são interpretados como na notação de fatiamento. Retorna ``-1`` se *sub* não "
"for localizado."

#: ../../library/stdtypes.rst:1733
msgid ""
"The :meth:`~str.find` method should be used only if you need to know the "
"position of *sub*.  To check if *sub* is a substring or not, use the :"
"keyword:`in` operator::"
msgstr ""
"O método :meth:`~str.find` deve ser usado apenas se precisarmos conhecer a "
"posição de *sub*. Para verificar se *sub* é ou não uma substring, use o "
"operador :keyword:`in`::"

#: ../../library/stdtypes.rst:1737
msgid ""
">>> 'Py' in 'Python'\n"
"True"
msgstr ""
">>> 'Py' in 'Python'\n"
"True"

#: ../../library/stdtypes.rst:1743
msgid ""
"Perform a string formatting operation.  The string on which this method is "
"called can contain literal text or replacement fields delimited by braces "
"``{}``.  Each replacement field contains either the numeric index of a "
"positional argument, or the name of a keyword argument.  Returns a copy of "
"the string where each replacement field is replaced with the string value of "
"the corresponding argument."
msgstr ""
"Executa uma operação de formatação de string. A string na qual este método é "
"chamado pode conter texto literal ou campos para substituição delimitados "
"por chaves ``{}``. Cada campo de substituição contém um índice numérico de "
"um argumento posicional ou o nome de um argumento nomeado. Retorna a cópia "
"da string onde cada campo para substituição é substituído com o valor da "
"string do argumento correspondente."

#: ../../library/stdtypes.rst:1753
msgid ""
"See :ref:`formatstrings` for a description of the various formatting options "
"that can be specified in format strings."
msgstr ""
"Veja :ref:`formatstrings` para uma descrição das várias opções de formatação "
"que podem ser especificadas em uma strings de formato."

#: ../../library/stdtypes.rst:1757
msgid ""
"When formatting a number (:class:`int`, :class:`float`, :class:`complex`, :"
"class:`decimal.Decimal` and subclasses) with the ``n`` type (ex: ``'{:n}'."
"format(1234)``), the function temporarily sets the ``LC_CTYPE`` locale to "
"the ``LC_NUMERIC`` locale to decode ``decimal_point`` and ``thousands_sep`` "
"fields of :c:func:`localeconv` if they are non-ASCII or longer than 1 byte, "
"and the ``LC_NUMERIC`` locale is different than the ``LC_CTYPE`` locale.  "
"This temporary change affects other threads."
msgstr ""
"Ao formatar um número (:class:`int`, :class:`float`, :class:`complex`, :"
"class:`decimal.Decimal` e sub-classes) com o tipo ``n`` (ex: ``'{:n}'."
"format(1234)``), a função define temporariamente a localidade ``LC_CTYPE`` "
"para a localidade ``LC_NUMERIC`` a fim de decodificar campos "
"``decimal_point`` e ``thousands_sep`` de :c:func:`localeconv` se eles são "
"caracteres não-ASCII ou maiores que 1 byte, e a localidade ``LC_NUMERIC`` é "
"diferente da localidade ``LC_CTYPE``. Esta mudança temporária afeta outras "
"threads."

#: ../../library/stdtypes.rst:1766
msgid ""
"When formatting a number with the ``n`` type, the function sets temporarily "
"the ``LC_CTYPE`` locale to the ``LC_NUMERIC`` locale in some cases."
msgstr ""
"Ao formatar um número com o tipo ``n``, a função define temporariamente a "
"localidade ``LC_CTYPE`` para a localidade ``LC_NUMERIC`` em alguns casos."

#: ../../library/stdtypes.rst:1774
msgid ""
"Similar to ``str.format(**mapping)``, except that ``mapping`` is used "
"directly and not copied to a :class:`dict`.  This is useful if for example "
"``mapping`` is a dict subclass:"
msgstr ""
"Semelhante a ``str.format(**mapping)``, exceto pelo fato de que ``mapping`` "
"é usado diretamente e não copiado para uma classe :class:`dict`. Isso é útil "
"se, por exemplo, ``mapping`` é uma subclasse de dict:"

#: ../../library/stdtypes.rst:1790
msgid ""
"Like :meth:`~str.find`, but raise :exc:`ValueError` when the substring is "
"not found."
msgstr ""
"Senelhante a :meth:`~str.find`, mas levanta :exc:`ValueError` quando a "
"substring não é encontrada."

#: ../../library/stdtypes.rst:1796
msgid ""
"Return ``True`` if all characters in the string are alphanumeric and there "
"is at least one character, ``False`` otherwise.  A character ``c`` is "
"alphanumeric if one of the following returns ``True``: ``c.isalpha()``, ``c."
"isdecimal()``, ``c.isdigit()``, or ``c.isnumeric()``."
msgstr ""
"Retorna ``True`` se todos os caracteres na string são alfanuméricos e existe "
"pelo menos um caractere, ou ``False`` caso contrário. Um caractere ``c`` é "
"alfanumérico se um dos seguintes retorna ``True``: ``c.isalpha()``, ``c."
"isdecimal()``, ``c.isdigit()``, ou ``c.isnumeric()``."

#: ../../library/stdtypes.rst:1804
msgid ""
"Return ``True`` if all characters in the string are alphabetic and there is "
"at least one character, ``False`` otherwise.  Alphabetic characters are "
"those characters defined in the Unicode character database as \"Letter\", i."
"e., those with general category property being one of \"Lm\", \"Lt\", "
"\"Lu\", \"Ll\", or \"Lo\".  Note that this is different from the `Alphabetic "
"property defined in the section 4.10 'Letters, Alphabetic, and Ideographic' "
"of the Unicode Standard <https://www.unicode.org/versions/Unicode15.1.0/ch04."
"pdf>`_."
msgstr ""
"Retorna ``True`` se todos os caracteres na string são alfabéticos e existe "
"pelo menos um caractere, ``False`` caso contrário. Caracteres alfabéticos "
"são aqueles caracteres definidos na base de dados de caracteres Unicode como "
"\"Letra\", isto é, aqueles cuja propriedade na categoria geral é um destes: "
"\"Lm\", \"Lt\", \"Lu\", \"Ll\" ou \"Lo\". Perceba que isso é diferente da "
"`propriedade Alfabética definida na seção 4.10 \"Letters, Alphabetic, and "
"Ideographic\" do Padrão Unicode <https://www.unicode.org/versions/"
"Unicode15.1.0/ch04.pdf>`_."

#: ../../library/stdtypes.rst:1815
msgid ""
"Return ``True`` if the string is empty or all characters in the string are "
"ASCII, ``False`` otherwise. ASCII characters have code points in the range "
"U+0000-U+007F."
msgstr ""
"Retorna ``True`` se a string é vazia ou se todos os caracteres na string são "
"ASCII, ``False`` caso contrário. Caracteres ASCII têm pontos de código no "
"intervalo U+0000-U+007F."

#: ../../library/stdtypes.rst:1824
msgid ""
"Return ``True`` if all characters in the string are decimal characters and "
"there is at least one character, ``False`` otherwise. Decimal characters are "
"those that can be used to form numbers in base 10, e.g. U+0660, ARABIC-INDIC "
"DIGIT ZERO.  Formally a decimal character is a character in the Unicode "
"General Category \"Nd\"."
msgstr ""
"Retorna ``True`` se todos os caracteres na string são caracteres decimais e "
"existe pelo menos um caractere, ``False`` caso contrário. Caracteres "
"decimais são aqueles que podem ser usados para formar números na base 10, "
"exemplo U+0660, ou dígito zero para arábico-índico. Formalmente, um "
"caractere decimal é um caractere em Unicode cuja categoria geral é \"Nd\"."

#: ../../library/stdtypes.rst:1834
msgid ""
"Return ``True`` if all characters in the string are digits and there is at "
"least one character, ``False`` otherwise.  Digits include decimal characters "
"and digits that need special handling, such as the compatibility superscript "
"digits. This covers digits which cannot be used to form numbers in base 10, "
"like the Kharosthi numbers.  Formally, a digit is a character that has the "
"property value Numeric_Type=Digit or Numeric_Type=Decimal."
msgstr ""
"Retorna ``True`` se todos os caracteres na string são dígitos e existe pelo "
"menos um caractere, ``False`` caso contrário. Dígitos incluem caracteres "
"decimais e dígitos que precisam de tratamento especial, tal como a "
"compatibilidade com dígitos sobre-escritos. Isso inclui dígitos que não "
"podem ser usados para formar números na base 10, como por exemplo os números "
"de Kharosthi. Formalmente, um dígito é um caractere que tem a propriedade "
"com valor Numeric_Type=Digit ou Numeric_Type=Decimal."

#: ../../library/stdtypes.rst:1844
msgid ""
"Return ``True`` if the string is a valid identifier according to the "
"language definition, section :ref:`identifiers`."
msgstr ""
"Retorna ``True`` se a string é um identificador válido conforme a definição "
"da linguagem, seção :ref:`identifiers`."

#: ../../library/stdtypes.rst:1847
msgid ""
":func:`keyword.iskeyword` can be used to test whether string ``s`` is a "
"reserved identifier, such as :keyword:`def` and :keyword:`class`."
msgstr ""
":func:`keyword.iskeyword` pode ser usada para testar se a string ``s`` é uma "
"palavra reservada, tal como :keyword:`def` e :keyword:`class`."

#: ../../library/stdtypes.rst:1850
msgid "Example: ::"
msgstr "Exemplo: ::"

#: ../../library/stdtypes.rst:1853
msgid ""
">>> from keyword import iskeyword\n"
"\n"
">>> 'hello'.isidentifier(), iskeyword('hello')\n"
"(True, False)\n"
">>> 'def'.isidentifier(), iskeyword('def')\n"
"(True, True)"
msgstr ""

#: ../../library/stdtypes.rst:1863
msgid ""
"Return ``True`` if all cased characters [4]_ in the string are lowercase and "
"there is at least one cased character, ``False`` otherwise."
msgstr ""
"Retorna ``True`` se todos os caracteres em caixa (que possuem maiúsculo e "
"minúsculo) [4]_ na string são minúsculos e existe pelo menos um caractere em "
"caixa, ``False`` caso contrário."

#: ../../library/stdtypes.rst:1869
msgid ""
"Return ``True`` if all characters in the string are numeric characters, and "
"there is at least one character, ``False`` otherwise. Numeric characters "
"include digit characters, and all characters that have the Unicode numeric "
"value property, e.g. U+2155, VULGAR FRACTION ONE FIFTH.  Formally, numeric "
"characters are those with the property value Numeric_Type=Digit, "
"Numeric_Type=Decimal or Numeric_Type=Numeric."
msgstr ""
"Retorna ``True`` se todos os caracteres na string são caracteres numéricos, "
"e existe pelo menos um caractere, ``False`` caso contrário. Caracteres "
"numéricos incluem dígitos, e todos os caracteres que têm a propriedade com "
"valor numérico Unicode, isto é: U+2155, um quinto de fração vulgar. "
"Formalmente, caracteres numéricos são aqueles que possuem propriedades com "
"valor Numeric_Type=Digit, Numeric_Type=Decimal ou Numeric_Type=Numeric."

#: ../../library/stdtypes.rst:1879
msgid ""
"Return ``True`` if all characters in the string are printable or the string "
"is empty, ``False`` otherwise.  Nonprintable characters are those characters "
"defined in the Unicode character database as \"Other\" or \"Separator\", "
"excepting the ASCII space (0x20) which is considered printable.  (Note that "
"printable characters in this context are those which should not be escaped "
"when :func:`repr` is invoked on a string.  It has no bearing on the handling "
"of strings written to :data:`sys.stdout` or :data:`sys.stderr`.)"
msgstr ""
"Retorna ``True`` se todos os caracteres na string podem ser impressos ou se "
"a string é vazia, ``False`` caso contrário. Caracteres que não podem ser "
"impressos são aqueles que estão definidos no banco de dados de caracteres "
"Unicode como \"Outros\" ou \"Separadores\", exceto o caractere ASCII que "
"representa o espaço (0x20), o qual é impresso. (Perceba que caracteres que "
"podem ser impressos, neste contexto, são aqueles que não devem ser escapados "
"quando :func:`repr` é invocada sobre uma string. Ela não tem sentido no "
"tratamento de strings escritas usando :data:`sys.stdout` ou :data:`sys."
"stderr`.)"

#: ../../library/stdtypes.rst:1890
msgid ""
"Return ``True`` if there are only whitespace characters in the string and "
"there is at least one character, ``False`` otherwise."
msgstr ""
"Retorna ``True`` se existem apenas caracteres de espaço em branco na string "
"e existe pelo menos um caractere, ``False`` caso contrário."

#: ../../library/stdtypes.rst:1893
msgid ""
"A character is *whitespace* if in the Unicode character database (see :mod:"
"`unicodedata`), either its general category is ``Zs`` (\"Separator, "
"space\"), or its bidirectional class is one of ``WS``, ``B``, or ``S``."
msgstr ""
"Um caractere é *espaço em branco* se no banco de dados de caracteres Unicode "
"(veja :mod:`unicodedata`), ou pertence a categoria geral ``Zs`` "
"(\"Separador, espaço\"), ou sua classe bidirecional é ``WS``, ``B`` ou ``S``."

#: ../../library/stdtypes.rst:1901
msgid ""
"Return ``True`` if the string is a titlecased string and there is at least "
"one character, for example uppercase characters may only follow uncased "
"characters and lowercase characters only cased ones.  Return ``False`` "
"otherwise."
msgstr ""
"Retorna ``True`` se a string é titlecased e existe pelo menos um caractere, "
"por exemplo caracteres maiúsculos somente podem proceder caracteres que não "
"diferenciam maiúsculas/minúsculas, e caracteres minúsculos somente podem "
"proceder caracteres que permitem ambos. Retorna ``False`` caso contrário."

#: ../../library/stdtypes.rst:1908
msgid ""
"Return ``True`` if all cased characters [4]_ in the string are uppercase and "
"there is at least one cased character, ``False`` otherwise."
msgstr ""
"Retorna ``True`` se todos os caracteres que permitem maiúsculas ou "
"minúsculas [4]_ na string estão com letras maiúsculas, e existe pelo menos "
"um caractere maiúsculo, ``False`` caso contrário."

#: ../../library/stdtypes.rst:1926
msgid ""
"Return a string which is the concatenation of the strings in *iterable*. A :"
"exc:`TypeError` will be raised if there are any non-string values in "
"*iterable*, including :class:`bytes` objects.  The separator between "
"elements is the string providing this method."
msgstr ""
"Retorna a string que é a concatenação das strings no *iterável*. Uma :exc:"
"`TypeError` será levantada se existirem quaisquer valores que não sejam "
"strings no *iterável*, incluindo objetos :class:`bytes`. O separador entre "
"elementos é a string que está fornecendo este método."

#: ../../library/stdtypes.rst:1934
msgid ""
"Return the string left justified in a string of length *width*. Padding is "
"done using the specified *fillchar* (default is an ASCII space). The "
"original string is returned if *width* is less than or equal to ``len(s)``."
msgstr ""
"Retorna a string alinhada a esquerda em uma string de comprimento *width*. "
"Preenchimento é feito usando *fillchar* que for especificado (o padrão é o "
"caractere ASCII de espaço). A string original é retornada se *width* é menor "
"ou igual que ``len(s)``."

#: ../../library/stdtypes.rst:1941
msgid ""
"Return a copy of the string with all the cased characters [4]_ converted to "
"lowercase."
msgstr ""
"Retorna uma cópia da string com todos os caracteres que permitem maiúsculo E "
"minúsculo [4]_ convertidos para letras minúsculas."

#: ../../library/stdtypes.rst:1944
msgid ""
"The lowercasing algorithm used is `described in section 3.13 'Default Case "
"Folding' of the Unicode Standard <https://www.unicode.org/versions/"
"Unicode15.1.0/ch03.pdf>`__."
msgstr ""
"O algoritmo de letras minúsculas está `descrito na seção 3.13 'Default Case "
"Folding' do Padrão Unicode <https://www.unicode.org/versions/Unicode15.1.0/"
"ch03.pdf>`__."

#: ../../library/stdtypes.rst:1951
msgid ""
"Return a copy of the string with leading characters removed.  The *chars* "
"argument is a string specifying the set of characters to be removed.  If "
"omitted or ``None``, the *chars* argument defaults to removing whitespace.  "
"The *chars* argument is not a prefix; rather, all combinations of its values "
"are stripped::"
msgstr ""
"Retorna uma cópia da string com caracteres iniciais removidos. O argumento "
"*chars* é uma string que especifica o conjunto de caracteres a serem "
"removidos. Se for omitido ou se for ``None``, o argumento *chars* será "
"considerado como espaço em branco por padrão para a remoção. O argumento "
"*chars* não é um prefixo; ao invés disso, todas as combinações dos seus "
"valores são retirados::"

#: ../../library/stdtypes.rst:1956
msgid ""
">>> '   spacious   '.lstrip()\n"
"'spacious   '\n"
">>> 'www.example.com'.lstrip('cmowz.')\n"
"'example.com'"
msgstr ""

#: ../../library/stdtypes.rst:1961
msgid ""
"See :meth:`str.removeprefix` for a method that will remove a single prefix "
"string rather than all of a set of characters.  For example::"
msgstr ""
"Consulte :meth:`str.removeprefix` para um método que removerá uma única "
"string de prefixo em vez de todo um conjunto de caracteres. Por exemplo::"

#: ../../library/stdtypes.rst:1964
msgid ""
">>> 'Arthur: three!'.lstrip('Arthur: ')\n"
"'ee!'\n"
">>> 'Arthur: three!'.removeprefix('Arthur: ')\n"
"'three!'"
msgstr ""

#: ../../library/stdtypes.rst:1972
msgid ""
"This static method returns a translation table usable for :meth:`str."
"translate`."
msgstr ""
"Este método estático retorna uma tabela de tradução usável para :meth:`str."
"translate`."

#: ../../library/stdtypes.rst:1974
msgid ""
"If there is only one argument, it must be a dictionary mapping Unicode "
"ordinals (integers) or characters (strings of length 1) to Unicode ordinals, "
"strings (of arbitrary lengths) or ``None``.  Character keys will then be "
"converted to ordinals."
msgstr ""
"Se existe apenas um argumento, ele deve ser um dicionário mapeando números "
"Unicode (inteiros) ou caracteres (strings de comprimento 1) para números "
"Unicode, strings (de comprimento arbitrário) ou ``None``. Caracteres chave "
"serão então convertidos para números ordinais."

#: ../../library/stdtypes.rst:1979
msgid ""
"If there are two arguments, they must be strings of equal length, and in the "
"resulting dictionary, each character in x will be mapped to the character at "
"the same position in y.  If there is a third argument, it must be a string, "
"whose characters will be mapped to ``None`` in the result."
msgstr ""
"Se existirem dois argumentos, eles devem ser strings de igual comprimento, e "
"no dicionário resultante, cada caractere em x será mapeado para o caractere "
"na mesma posição em y. Se existir um terceiro argumento, ele deve ser uma "
"string, cujos caracteres serão mapeados para ``None`` no resultado."

#: ../../library/stdtypes.rst:1987
msgid ""
"Split the string at the first occurrence of *sep*, and return a 3-tuple "
"containing the part before the separator, the separator itself, and the part "
"after the separator.  If the separator is not found, return a 3-tuple "
"containing the string itself, followed by two empty strings."
msgstr ""
"Quebra a string na primeira ocorrência de *sep*, e retorna uma tupla com 3 "
"elementos contendo a parte antes do separador, o próprio separador, e a "
"parte após o separador. Se o separador não for encontrado, retorna uma tupla "
"com 3 elementos contendo a string, seguido de duas strings vazias."

#: ../../library/stdtypes.rst:1995
msgid ""
"If the string starts with the *prefix* string, return "
"``string[len(prefix):]``. Otherwise, return a copy of the original string::"
msgstr ""
"Se a string começar com a string *prefix*, retorna ``string[len(prefix):]``. "
"Caso contrário, retorna uma cópia da string original::"

#: ../../library/stdtypes.rst:1999
msgid ""
">>> 'TestHook'.removeprefix('Test')\n"
"'Hook'\n"
">>> 'BaseTestCase'.removeprefix('Test')\n"
"'BaseTestCase'"
msgstr ""

#: ../../library/stdtypes.rst:2009
msgid ""
"If the string ends with the *suffix* string and that *suffix* is not empty, "
"return ``string[:-len(suffix)]``. Otherwise, return a copy of the original "
"string::"
msgstr ""
"Se a string terminar com a string *suffix* e a *suffix* não estiver vazia, "
"retorna ``string[:-len(suffix)]``. Caso contrário, retorna uma cópia da "
"string original::"

#: ../../library/stdtypes.rst:2013
msgid ""
">>> 'MiscTests'.removesuffix('Tests')\n"
"'Misc'\n"
">>> 'TmpDirMixin'.removesuffix('Tests')\n"
"'TmpDirMixin'"
msgstr ""

#: ../../library/stdtypes.rst:2023
msgid ""
"Return a copy of the string with all occurrences of substring *old* replaced "
"by *new*.  If *count* is given, only the first *count* occurrences are "
"replaced. If *count* is not specified or ``-1``, then all occurrences are "
"replaced."
msgstr ""
"Retorna uma cópia da string com todas as ocorrências da substring *old* "
"substituídas por *new*. Se o argumento opcional *count* é fornecido, apenas "
"as primeiras *count* ocorrências são substituídas. Se *count* não é "
"especificado ou é igual a ``-1``, então todas as ocorrências serão "
"substituídas."

#: ../../library/stdtypes.rst:2027
msgid "*count* is now supported as a keyword argument."
msgstr "*count* agora é suportado como um argumento nomeado."

#: ../../library/stdtypes.rst:2033
msgid ""
"Return the highest index in the string where substring *sub* is found, such "
"that *sub* is contained within ``s[start:end]``.  Optional arguments *start* "
"and *end* are interpreted as in slice notation.  Return ``-1`` on failure."
msgstr ""
"Retorna o maior índice onde a substring *sub* foi encontrada dentro da "
"string, onde *sub* está contida dentro do intervalo ``s[start:end]``. "
"Argumentos opcionais *start* e *end* são interpretados usando a notação "
"slice. Retorna ``-1`` em caso de falha."

#: ../../library/stdtypes.rst:2040
msgid ""
"Like :meth:`rfind` but raises :exc:`ValueError` when the substring *sub* is "
"not found."
msgstr ""
"Similar a :meth:`rfind` mas levanta um :exc:`ValueError` quando a substring "
"*sub* não é encontrada."

#: ../../library/stdtypes.rst:2046
msgid ""
"Return the string right justified in a string of length *width*. Padding is "
"done using the specified *fillchar* (default is an ASCII space). The "
"original string is returned if *width* is less than or equal to ``len(s)``."
msgstr ""
"Retorna a string alinhada à direita em uma string de comprimento *width*. "
"Preenchimento é feito usando o caractere *fillchar* especificado (o padrão é "
"um caractere de espaço ASCII). A string original é retornada se *width* é "
"menor que ou igual a ``len(s)``."

#: ../../library/stdtypes.rst:2053
msgid ""
"Split the string at the last occurrence of *sep*, and return a 3-tuple "
"containing the part before the separator, the separator itself, and the part "
"after the separator.  If the separator is not found, return a 3-tuple "
"containing two empty strings, followed by the string itself."
msgstr ""
"Quebra a string na última ocorrência de *sep*, e retorna uma tupla com 3 "
"elementos contendo a parte antes do separador, o próprio separador, e a "
"parte após o separador. Se o separador não for encontrado, retorna uma tupla "
"com 3 elementos contendo duas strings vazias, seguido da própria string "
"original."

#: ../../library/stdtypes.rst:2061
msgid ""
"Return a list of the words in the string, using *sep* as the delimiter "
"string. If *maxsplit* is given, at most *maxsplit* splits are done, the "
"*rightmost* ones.  If *sep* is not specified or ``None``, any whitespace "
"string is a separator.  Except for splitting from the right, :meth:`rsplit` "
"behaves like :meth:`split` which is described in detail below."
msgstr ""
"Retorna uma lista de palavras na string, usando *sep* como a string "
"delimitadora. Se *maxsplit* é fornecido, no máximo *maxsplit* cortes são "
"feitos, sendo estes mais *à direita*. Se *sep* não foi especificado ou "
"``None`` foi informado, qualquer string de espaço em branco é um separador. "
"Exceto pelo fato de separar pela direita, :meth:`rsplit` se comporta como :"
"meth:`split`, o qual é descrito em detalhes abaixo."

#: ../../library/stdtypes.rst:2070
msgid ""
"Return a copy of the string with trailing characters removed.  The *chars* "
"argument is a string specifying the set of characters to be removed.  If "
"omitted or ``None``, the *chars* argument defaults to removing whitespace.  "
"The *chars* argument is not a suffix; rather, all combinations of its values "
"are stripped::"
msgstr ""
"Retorna uma cópia da string com caracteres no final removidos. O argumento "
"*chars* é uma string que especifica o conjunto de caracteres para serem "
"removidos. Se omitidos ou tiver o valor ``None``, o argumento *chars* "
"considera como padrão a remoção dos espaços em branco. O argumento *chars* "
"não é um sufixo; ao invés disso, todas as combinações dos seus valores são "
"removidos::"

#: ../../library/stdtypes.rst:2075
msgid ""
">>> '   spacious   '.rstrip()\n"
"'   spacious'\n"
">>> 'mississippi'.rstrip('ipz')\n"
"'mississ'"
msgstr ""

#: ../../library/stdtypes.rst:2080
msgid ""
"See :meth:`str.removesuffix` for a method that will remove a single suffix "
"string rather than all of a set of characters.  For example::"
msgstr ""
"Consulte :meth:`str.removesuffix` para um método que removerá uma única "
"string de sufixo em vez de todo um conjunto de caracteres. Por exemplo::"

#: ../../library/stdtypes.rst:2083
msgid ""
">>> 'Monty Python'.rstrip(' Python')\n"
"'M'\n"
">>> 'Monty Python'.removesuffix(' Python')\n"
"'Monty'"
msgstr ""

#: ../../library/stdtypes.rst:2090
msgid ""
"Return a list of the words in the string, using *sep* as the delimiter "
"string.  If *maxsplit* is given, at most *maxsplit* splits are done (thus, "
"the list will have at most ``maxsplit+1`` elements).  If *maxsplit* is not "
"specified or ``-1``, then there is no limit on the number of splits (all "
"possible splits are made)."
msgstr ""
"Retorna uma lista de palavras na string, usando *sep* como a string "
"delimitadora. Se *maxsplit* é fornecido, no máximo *maxsplit* cortes são "
"feitos (portando, a lista terá no máximo ``maxsplit+1`` elementos). Se "
"*maxsplit* não foi especificado ou ``-1`` foi informado, então não existe "
"limite no número de cortes (todos os cortes possíveis são realizados)."

#: ../../library/stdtypes.rst:2096
msgid ""
"If *sep* is given, consecutive delimiters are not grouped together and are "
"deemed to delimit empty strings (for example, ``'1,,2'.split(',')`` returns "
"``['1', '', '2']``).  The *sep* argument may consist of multiple characters "
"as a single delimiter (to split with multiple delimiters, use :func:`re."
"split`). Splitting an empty string with a specified separator returns "
"``['']``."
msgstr ""
"Se *sep* é fornecido, delimitadores consecutivos não são agrupados juntos e "
"eles são destinados para delimitar strings vazias (por exemplo, ``'1,,2'."
"split(',')`` retorna ``['1', '', '2']``). O argumento *sep* pode consistir "
"em vários caracteres como um único delimitador (para separar com vários "
"delimitadores, use :func:`re.split`). Separar uma string vazia com um "
"separador especificado retorna ``['']``."

#: ../../library/stdtypes.rst:2103 ../../library/stdtypes.rst:2121
#: ../../library/stdtypes.rst:2173 ../../library/stdtypes.rst:2241
#: ../../library/stdtypes.rst:2309 ../../library/stdtypes.rst:3161
#: ../../library/stdtypes.rst:3179 ../../library/stdtypes.rst:3270
#: ../../library/stdtypes.rst:3286 ../../library/stdtypes.rst:3311
#: ../../library/stdtypes.rst:3325 ../../library/stdtypes.rst:3353
#: ../../library/stdtypes.rst:3367 ../../library/stdtypes.rst:3385
#: ../../library/stdtypes.rst:3412 ../../library/stdtypes.rst:3435
#: ../../library/stdtypes.rst:3462 ../../library/stdtypes.rst:3504
#: ../../library/stdtypes.rst:3528
msgid "For example::"
msgstr "Por exemplo::"

#: ../../library/stdtypes.rst:2105
msgid ""
">>> '1,2,3'.split(',')\n"
"['1', '2', '3']\n"
">>> '1,2,3'.split(',', maxsplit=1)\n"
"['1', '2,3']\n"
">>> '1,2,,3,'.split(',')\n"
"['1', '2', '', '3', '']\n"
">>> '1<>2<>3<4'.split('<>')\n"
"['1', '2', '3<4']"
msgstr ""

#: ../../library/stdtypes.rst:2114
msgid ""
"If *sep* is not specified or is ``None``, a different splitting algorithm is "
"applied: runs of consecutive whitespace are regarded as a single separator, "
"and the result will contain no empty strings at the start or end if the "
"string has leading or trailing whitespace.  Consequently, splitting an empty "
"string or a string consisting of just whitespace with a ``None`` separator "
"returns ``[]``."
msgstr ""
"Se *sep* não for especificado ou for ``None``, um algoritmo diferente de "
"separação é aplicado: ocorrências consecutivas de espaços em branco são "
"consideradas como um separador único, e o resultado não conterá strings "
"vazias no início ou no final, se a string tiver espaços em branco no início "
"ou no final. Consequentemente, separar uma string vazia ou uma string que "
"consiste apenas de espaços em branco com o separador ``None``, retorna "
"``[]``."

#: ../../library/stdtypes.rst:2123
msgid ""
">>> '1 2 3'.split()\n"
"['1', '2', '3']\n"
">>> '1 2 3'.split(maxsplit=1)\n"
"['1', '2 3']\n"
">>> '   1   2   3   '.split()\n"
"['1', '2', '3']"
msgstr ""

#: ../../library/stdtypes.rst:2136
msgid ""
"Return a list of the lines in the string, breaking at line boundaries.  Line "
"breaks are not included in the resulting list unless *keepends* is given and "
"true."
msgstr ""
"Retorna uma lista das linhas na string, quebrando a mesma nas fronteiras de "
"cada linha. Quebras de linhas não são incluídas na lista resultante a não "
"ser que *keepends* seja fornecido e seja verdadeiro."

#: ../../library/stdtypes.rst:2140
msgid ""
"This method splits on the following line boundaries.  In particular, the "
"boundaries are a superset of :term:`universal newlines`."
msgstr ""
"Este método divide nos seguintes limites das linhas. Em particular, os "
"limites são um superconjunto de :term:`novas linhas universais <universal "
"newlines>`."

#: ../../library/stdtypes.rst:2144
msgid "Representation"
msgstr "Representação"

#: ../../library/stdtypes.rst:2144
msgid "Description"
msgstr "Descrição"

#: ../../library/stdtypes.rst:2146
msgid "``\\n``"
msgstr "``\\n``"

#: ../../library/stdtypes.rst:2146
msgid "Line Feed"
msgstr "Feed de linha"

#: ../../library/stdtypes.rst:2148
msgid "``\\r``"
msgstr "``\\r``"

#: ../../library/stdtypes.rst:2148
msgid "Carriage Return"
msgstr "Retorno de Carro"

#: ../../library/stdtypes.rst:2150
msgid "``\\r\\n``"
msgstr "``\\r\\n``"

#: ../../library/stdtypes.rst:2150
msgid "Carriage Return + Line Feed"
msgstr "Retorno do Carro + Feed da Linha"

#: ../../library/stdtypes.rst:2152
msgid "``\\v`` or ``\\x0b``"
msgstr "``\\v`` ou ``\\x0b``"

#: ../../library/stdtypes.rst:2152
msgid "Line Tabulation"
msgstr "Tabulação de Linha"

#: ../../library/stdtypes.rst:2154
msgid "``\\f`` or ``\\x0c``"
msgstr "``\\f`` ou ``\\x0c``"

#: ../../library/stdtypes.rst:2154
msgid "Form Feed"
msgstr "Formulário de Feed"

#: ../../library/stdtypes.rst:2156
msgid "``\\x1c``"
msgstr "``\\x1c``"

#: ../../library/stdtypes.rst:2156
msgid "File Separator"
msgstr "Separador de Arquivos"

#: ../../library/stdtypes.rst:2158
msgid "``\\x1d``"
msgstr "``\\x1d``"

#: ../../library/stdtypes.rst:2158
msgid "Group Separator"
msgstr "Separador de Grupo"

#: ../../library/stdtypes.rst:2160
msgid "``\\x1e``"
msgstr "``\\x1e``"

#: ../../library/stdtypes.rst:2160
msgid "Record Separator"
msgstr "Separador de Registro"

#: ../../library/stdtypes.rst:2162
msgid "``\\x85``"
msgstr "``\\x85``"

#: ../../library/stdtypes.rst:2162
msgid "Next Line (C1 Control Code)"
msgstr "Próxima Linha (C1 Control Code)"

#: ../../library/stdtypes.rst:2164
msgid "``\\u2028``"
msgstr "``\\u2028``"

#: ../../library/stdtypes.rst:2164
msgid "Line Separator"
msgstr "Separador de Linha"

#: ../../library/stdtypes.rst:2166
msgid "``\\u2029``"
msgstr "``\\u2029``"

#: ../../library/stdtypes.rst:2166
msgid "Paragraph Separator"
msgstr "Separador de Parágrafo"

#: ../../library/stdtypes.rst:2171
msgid "``\\v`` and ``\\f`` added to list of line boundaries."
msgstr "``\\v`` e ``\\f`` adicionado à lista de limites de linha."

#: ../../library/stdtypes.rst:2175
msgid ""
">>> 'ab c\\n\\nde fg\\rkl\\r\\n'.splitlines()\n"
"['ab c', '', 'de fg', 'kl']\n"
">>> 'ab c\\n\\nde fg\\rkl\\r\\n'.splitlines(keepends=True)\n"
"['ab c\\n', '\\n', 'de fg\\r', 'kl\\r\\n']"
msgstr ""

#: ../../library/stdtypes.rst:2180
msgid ""
"Unlike :meth:`~str.split` when a delimiter string *sep* is given, this "
"method returns an empty list for the empty string, and a terminal line break "
"does not result in an extra line::"
msgstr ""
"Ao contrário do método :meth:`~str.split` quando um delimitador de String "
"*sep* é fornecido, este método retorna uma lista vazia para a uma String "
"vazia e uma quebra de linha de terminal não resulta numa linha extra::"

#: ../../library/stdtypes.rst:2184
msgid ""
">>> \"\".splitlines()\n"
"[]\n"
">>> \"One line\\n\".splitlines()\n"
"['One line']"
msgstr ""

#: ../../library/stdtypes.rst:2189
msgid "For comparison, ``split('\\n')`` gives::"
msgstr "Para comparação, temos ``split('\\n')``::"

#: ../../library/stdtypes.rst:2191
msgid ""
">>> ''.split('\\n')\n"
"['']\n"
">>> 'Two lines\\n'.split('\\n')\n"
"['Two lines', '']"
msgstr ""

#: ../../library/stdtypes.rst:2199
msgid ""
"Return ``True`` if string starts with the *prefix*, otherwise return "
"``False``. *prefix* can also be a tuple of prefixes to look for.  With "
"optional *start*, test string beginning at that position.  With optional "
"*end*, stop comparing string at that position."
msgstr ""
"Retorne ``True`` se a String começar com o *prefixo*, caso contrário, "
"retorna ``False``. *prefixo* também pode ser uma tupla de prefixos a serem "
"procurados. Com *start* opcional, a String de teste começa nessa posição. "
"Com *fim* opcional, interrompe a comparação de String nessa posição."

#: ../../library/stdtypes.rst:2207
msgid ""
"Return a copy of the string with the leading and trailing characters "
"removed. The *chars* argument is a string specifying the set of characters "
"to be removed. If omitted or ``None``, the *chars* argument defaults to "
"removing whitespace. The *chars* argument is not a prefix or suffix; rather, "
"all combinations of its values are stripped::"
msgstr ""
"Retorna uma cópia da string com caracteres no início e no final removidos. O "
"argumento *chars* é uma string que especifica o conjunto de caracteres a "
"serem removidos. Se for omitido ou for ``None``, o argumento *chars* irá "
"remover por padrão os caracteres em branco. O argumento *chars* não é um "
"prefixo, nem um sufixo; ao contrário disso, todas as combinações dos seus "
"seus valores são removidas::"

#: ../../library/stdtypes.rst:2213
msgid ""
">>> '   spacious   '.strip()\n"
"'spacious'\n"
">>> 'www.example.com'.strip('cmowz.')\n"
"'example'"
msgstr ""

#: ../../library/stdtypes.rst:2218
msgid ""
"The outermost leading and trailing *chars* argument values are stripped from "
"the string. Characters are removed from the leading end until reaching a "
"string character that is not contained in the set of characters in *chars*. "
"A similar action takes place on the trailing end. For example::"
msgstr ""
"Os valores do argumento *chars* são removidos dos extremos inicial e final "
"da string. Caracteres são removidos do extremo inicial até atingir um "
"caractere da string que não está contido no conjunto de caracteres em "
"*chars*. Uma ação similar acontece no extremo final da string. Por exemplo::"

#: ../../library/stdtypes.rst:2224
msgid ""
">>> comment_string = '#....... Section 3.2.1 Issue #32 .......'\n"
">>> comment_string.strip('.#! ')\n"
"'Section 3.2.1 Issue #32'"
msgstr ""

#: ../../library/stdtypes.rst:2231
msgid ""
"Return a copy of the string with uppercase characters converted to lowercase "
"and vice versa. Note that it is not necessarily true that ``s.swapcase()."
"swapcase() == s``."
msgstr ""
"Retorna uma cópia da string com caracteres maiúsculos convertidos para "
"minúsculos e vice-versa. Perceba que não é necessariamente verdade que ``s."
"swapcase().swapcase() == s``."

#: ../../library/stdtypes.rst:2238
msgid ""
"Return a titlecased version of the string where words start with an "
"uppercase character and the remaining characters are lowercase."
msgstr ""
"Retorna uma versão titlecased da string, onde palavras iniciam com um "
"caractere com letra maiúscula e os caracteres restantes são em letras "
"minúsculas."

#: ../../library/stdtypes.rst:2243
msgid ""
">>> 'Hello world'.title()\n"
"'Hello World'"
msgstr ""

#: ../../library/stdtypes.rst:2246 ../../library/stdtypes.rst:3472
msgid ""
"The algorithm uses a simple language-independent definition of a word as "
"groups of consecutive letters.  The definition works in many contexts but it "
"means that apostrophes in contractions and possessives form word boundaries, "
"which may not be the desired result::"
msgstr ""
"O algoritmo usa uma definição simples independente de idioma para uma "
"palavra, como grupos de letras consecutivas. A definição funciona em muitos "
"contextos, mas isso significa que apóstrofes em contradições e possessivos "
"formam limites de palavras, os quais podem não ser o resultado desejado::"

#: ../../library/stdtypes.rst:2251
msgid ""
">>> \"they're bill's friends from the UK\".title()\n"
"\"They'Re Bill'S Friends From The Uk\""
msgstr ""

#: ../../library/stdtypes.rst:2254
msgid ""
"The :func:`string.capwords` function does not have this problem, as it "
"splits words on spaces only."
msgstr ""
"A função :func:`string.capwords` não tem esse problema, pois ela divide "
"palavras apenas em espaços."

#: ../../library/stdtypes.rst:2257
msgid ""
"Alternatively, a workaround for apostrophes can be constructed using regular "
"expressions::"
msgstr ""
"Alternativamente, uma solução alternativa para os apóstrofes pode ser "
"construída usando expressões regulares::"

#: ../../library/stdtypes.rst:2260
msgid ""
">>> import re\n"
">>> def titlecase(s):\n"
"...     return re.sub(r\"[A-Za-z]+('[A-Za-z]+)?\",\n"
"...                   lambda mo: mo.group(0).capitalize(),\n"
"...                   s)\n"
"...\n"
">>> titlecase(\"they're bill's friends.\")\n"
"\"They're Bill's Friends.\""
msgstr ""

#: ../../library/stdtypes.rst:2272
msgid ""
"Return a copy of the string in which each character has been mapped through "
"the given translation table.  The table must be an object that implements "
"indexing via :meth:`~object.__getitem__`, typically a :term:`mapping` or :"
"term:`sequence`.  When indexed by a Unicode ordinal (an integer), the table "
"object can do any of the following: return a Unicode ordinal or a string, to "
"map the character to one or more other characters; return ``None``, to "
"delete the character from the return string; or raise a :exc:`LookupError` "
"exception, to map the character to itself."
msgstr ""
"Retorna uma cópia da string na qual cada caractere foi mapeado através da "
"tabela de tradução fornecida. A tabela deve ser um objeto que implementa "
"indexação através de :meth:`~object.__getitem__`, tipicamente um :term:"
"`mapeamento <mapping>` ou uma :term:`sequência <sequence>`. Quando indexada "
"por um ordinal unicode (um inteiro), o objeto tabela pode fazer qualquer uma "
"das seguintes ações: retornar um ordinal unicode ou uma string, para mapear "
"o caractere para um ou mais caracteres; retornar ``None``, para deletar o "
"caractere da string de retorno; ou levantar uma exceção :exc:`LookupError`, "
"para mapear o caractere para si mesmo."

#: ../../library/stdtypes.rst:2281
msgid ""
"You can use :meth:`str.maketrans` to create a translation map from character-"
"to-character mappings in different formats."
msgstr ""
"Você pode usar :meth:`str.maketrans` para criar um mapa de tradução com "
"mapeamentos caractere para caractere em diferentes formatos."

#: ../../library/stdtypes.rst:2284
msgid ""
"See also the :mod:`codecs` module for a more flexible approach to custom "
"character mappings."
msgstr ""
"Veja também o módulo :mod:`codecs` para uma abordagem mais flexível para "
"mapeamento de caractere customizado."

#: ../../library/stdtypes.rst:2290
msgid ""
"Return a copy of the string with all the cased characters [4]_ converted to "
"uppercase.  Note that ``s.upper().isupper()`` might be ``False`` if ``s`` "
"contains uncased characters or if the Unicode category of the resulting "
"character(s) is not \"Lu\" (Letter, uppercase), but e.g. \"Lt\" (Letter, "
"titlecase)."
msgstr ""
"Retorna uma cópia da string com todos os caracteres que permitem maiúsculo e "
"minúsculo [4]_ convertidos para letras maiúsculas. Perceba que ``s.upper()."
"isupper()`` pode ser ``False`` se ``s`` contiver caracteres que não possuem "
"maiúsculas e minúsculas, ou se a categoria Unicode do(s) caractere(s) "
"resultante(s) não for \"Lu\" (Letra maiúscula), mas por ex \"Lt\" (Letra em "
"titlecase)."

#: ../../library/stdtypes.rst:2296
msgid ""
"The uppercasing algorithm used is `described in section 3.13 'Default Case "
"Folding' of the Unicode Standard <https://www.unicode.org/versions/"
"Unicode15.1.0/ch03.pdf>`__."
msgstr ""
"O algoritmo de letras maiúsculas está `descrito na seção 3.13 'Default Case "
"Folding' do Padrão Unicode <https://www.unicode.org/versions/Unicode15.1.0/"
"ch03.pdf>`__."

#: ../../library/stdtypes.rst:2303
msgid ""
"Return a copy of the string left filled with ASCII ``'0'`` digits to make a "
"string of length *width*. A leading sign prefix (``'+'``/``'-'``) is handled "
"by inserting the padding *after* the sign character rather than before. The "
"original string is returned if *width* is less than or equal to ``len(s)``."
msgstr ""
"Retorna uma cópia da String deixada preenchida com dígitos ASCII ``'0'`` "
"para fazer uma string de comprimento *width*. Um prefixo sinalizador "
"principal (``'+'``/``'-'``) será tratado inserindo o preenchimento *após* o "
"caractere de sinal em vez de antes. A String original será retornada se o "
"*width* for menor ou igual a ``len(s)``."

#: ../../library/stdtypes.rst:2311
msgid ""
">>> \"42\".zfill(5)\n"
"'00042'\n"
">>> \"-42\".zfill(5)\n"
"'-0042'"
msgstr ""

#: ../../library/stdtypes.rst:2321
msgid "``printf``-style String Formatting"
msgstr "Formatação de String no Formato no estilo ``printf``"

#: ../../library/stdtypes.rst:2334
msgid ""
"The formatting operations described here exhibit a variety of quirks that "
"lead to a number of common errors (such as failing to display tuples and "
"dictionaries correctly).  Using the newer :ref:`formatted string literals <f-"
"strings>`, the :meth:`str.format` interface, or :ref:`template strings "
"<template-strings>` may help avoid these errors.  Each of these alternatives "
"provides their own trade-offs and benefits of simplicity, flexibility, and/"
"or extensibility."
msgstr ""
"As operações de formatação descritas aqui exibem uma variedade de "
"peculiaridades que levam a diversos erros comuns (tais como não conseguir "
"exibir tuplas e dicionários corretamente). Usar o novo :ref:`formatador de "
"string literal (f-strings) <f-strings>`, a interface :meth:`str.format`, ou :"
"ref:`templates de strings <template-strings>` pode ajudar a evitar esses "
"erros. Cada uma dessas alternativas fornece seus próprios custos e "
"benefícios de simplicidade, flexibilidade, e/ou extensibilidade."

#: ../../library/stdtypes.rst:2342
msgid ""
"String objects have one unique built-in operation: the ``%`` operator "
"(modulo). This is also known as the string *formatting* or *interpolation* "
"operator. Given ``format % values`` (where *format* is a string), ``%`` "
"conversion specifications in *format* are replaced with zero or more "
"elements of *values*. The effect is similar to using the :c:func:`sprintf` "
"function in the C language. For example:"
msgstr ""
"Os objetos string possuem um único operador embutido: o operador ``%`` "
"(módulo). O mesmo também é conhecido como o operador de *formatação* ou "
"*interpolação*. Dado ``format % values`` (onde *format* é uma string), as "
"especificações de conversão ``%`` em *format* são substituídas por zero ou "
"mais elementos de *values*. O efeito é semelhante ao uso da função :c:func:"
"`sprintf` na linguagem C. Por exemplo:"

#: ../../library/stdtypes.rst:2349
msgid ""
">>> print('%s has %d quote types.' % ('Python', 2))\n"
"Python has 2 quote types."
msgstr ""

#: ../../library/stdtypes.rst:2354
msgid ""
"If *format* requires a single argument, *values* may be a single non-tuple "
"object. [5]_  Otherwise, *values* must be a tuple with exactly the number of "
"items specified by the format string, or a single mapping object (for "
"example, a dictionary)."
msgstr ""
"Se *format* precisar de um único operador, *valores* podem ser objetos "
"simples ou que não sejam uma tupla. [5]_ Caso contrário, *valores* "
"precisarão ser uma tupla com exatamente o número de itens especificados pela "
"string de formatação, ou um único mapa de objetos (por exemplo, um "
"dicionário)."

#: ../../library/stdtypes.rst:2364 ../../library/stdtypes.rst:3583
msgid ""
"A conversion specifier contains two or more characters and has the following "
"components, which must occur in this order:"
msgstr ""
"Um especificador de conversão contém dois ou mais caracteres e tem os "
"seguintes componentes, que devem aparecer nesta ordem:"

#: ../../library/stdtypes.rst:2367 ../../library/stdtypes.rst:3586
msgid "The ``'%'`` character, which marks the start of the specifier."
msgstr "O caractere ``'%'``, que determina o início do especificador."

#: ../../library/stdtypes.rst:2369 ../../library/stdtypes.rst:3588
msgid ""
"Mapping key (optional), consisting of a parenthesised sequence of characters "
"(for example, ``(somename)``)."
msgstr ""
"Mapeamento de Chaves (opcional), consistindo de uma sequência entre "
"parênteses de caracteres (por exemplo, ``(algumnome)``)."

#: ../../library/stdtypes.rst:2372 ../../library/stdtypes.rst:3591
msgid ""
"Conversion flags (optional), which affect the result of some conversion "
"types."
msgstr ""
"Flags de conversão (opcional), que afetam o resultado de alguns tipos de "
"conversão."

#: ../../library/stdtypes.rst:2375 ../../library/stdtypes.rst:3594
msgid ""
"Minimum field width (optional).  If specified as an ``'*'`` (asterisk), the "
"actual width is read from the next element of the tuple in *values*, and the "
"object to convert comes after the minimum field width and optional precision."
msgstr ""
"Largura mínima do Campo(opcional). Se for especificado por ``'*'`` "
"(asterisco), a largura real será lida a partir do próximo elemento da tupla "
"em *values* e o objeto a converter virá após a largura mínima do campo e a "
"precisão que é opcional."

#: ../../library/stdtypes.rst:2379 ../../library/stdtypes.rst:3598
msgid ""
"Precision (optional), given as a ``'.'`` (dot) followed by the precision.  "
"If specified as ``'*'`` (an asterisk), the actual precision is read from the "
"next element of the tuple in *values*, and the value to convert comes after "
"the precision."
msgstr ""
"Precisão (opcional), fornecido como uma ``'.'`` (ponto) seguido pela "
"precisão. Se determinado como um ``'*'`` (um asterisco), a precisão real "
"será lida a partir do próximo elemento da tupla em *values*, e o valor a "
"converter virá após a precisão."

#: ../../library/stdtypes.rst:2384 ../../library/stdtypes.rst:3603
msgid "Length modifier (optional)."
msgstr "Modificador de Comprimento(opcional)."

#: ../../library/stdtypes.rst:2386 ../../library/stdtypes.rst:3605
msgid "Conversion type."
msgstr "Tipos de Conversão"

#: ../../library/stdtypes.rst:2388
msgid ""
"When the right argument is a dictionary (or other mapping type), then the "
"formats in the string *must* include a parenthesised mapping key into that "
"dictionary inserted immediately after the ``'%'`` character. The mapping key "
"selects the value to be formatted from the mapping.  For example:"
msgstr ""
"Quando o argumento certo for um dicionário (ou outro tipo de mapeamento), "
"então os formatos na string *deverão* incluir uma chave de mapeamento entre "
"parênteses nesse dicionário inserido imediatamente após o caractere ``'%'``. "
"A key de mapeamento seleciona o valor a ser formatado a partir do "
"mapeamento. Por exemplo:"

#: ../../library/stdtypes.rst:2397 ../../library/stdtypes.rst:3616
msgid ""
"In this case no ``*`` specifiers may occur in a format (since they require a "
"sequential parameter list)."
msgstr ""
"Nesse caso, nenhum especificador ``*`` poderá ocorrer num formato (uma vez "
"que eles exigem uma lista de parâmetros sequenciais)."

#: ../../library/stdtypes.rst:2400 ../../library/stdtypes.rst:3619
msgid "The conversion flag characters are:"
msgstr "Os caracteres flags de conversão são:"

#: ../../library/stdtypes.rst:2409 ../../library/stdtypes.rst:3628
msgid "Flag"
msgstr "Sinalizador"

#: ../../library/stdtypes.rst:2411 ../../library/stdtypes.rst:3630
msgid "``'#'``"
msgstr "``'#'``"

#: ../../library/stdtypes.rst:2411 ../../library/stdtypes.rst:3630
msgid ""
"The value conversion will use the \"alternate form\" (where defined below)."
msgstr ""
"A conversão de valor usará o \"formulário alternativo\" (em que definimos "
"abaixo)."

#: ../../library/stdtypes.rst:2414 ../../library/stdtypes.rst:3633
msgid "``'0'``"
msgstr "``'0'``"

#: ../../library/stdtypes.rst:2414 ../../library/stdtypes.rst:3633
msgid "The conversion will be zero padded for numeric values."
msgstr "A conversão será preenchida por zeros para valores numéricos."

#: ../../library/stdtypes.rst:2416 ../../library/stdtypes.rst:3635
msgid "``'-'``"
msgstr "``'-'``"

#: ../../library/stdtypes.rst:2416 ../../library/stdtypes.rst:3635
msgid ""
"The converted value is left adjusted (overrides the ``'0'`` conversion if "
"both are given)."
msgstr ""
"O valor convertido será ajustado à esquerda (substitui a conversão ``'0'`` "
"se ambos forem fornecidos)."

#: ../../library/stdtypes.rst:2419 ../../library/stdtypes.rst:3638
msgid "``' '``"
msgstr "``' '``"

#: ../../library/stdtypes.rst:2419 ../../library/stdtypes.rst:3638
msgid ""
"(a space) A blank should be left before a positive number (or empty string) "
"produced by a signed conversion."
msgstr ""
"(um espaço) Um espaço em branco deverá ser deixado antes de um número "
"positivo (ou uma String vazia) produzido por uma conversão assinada."

#: ../../library/stdtypes.rst:2422 ../../library/stdtypes.rst:3641
msgid "``'+'``"
msgstr "``'+'``"

#: ../../library/stdtypes.rst:2422 ../../library/stdtypes.rst:3641
msgid ""
"A sign character (``'+'`` or ``'-'``) will precede the conversion (overrides "
"a \"space\" flag)."
msgstr ""
"Um sinal de caractere (``'+'`` ou ``'-'``) precedera a conversão "
"(substituindo o sinalizador \"space\")."

#: ../../library/stdtypes.rst:2426 ../../library/stdtypes.rst:3645
msgid ""
"A length modifier (``h``, ``l``, or ``L``) may be present, but is ignored as "
"it is not necessary for Python -- so e.g. ``%ld`` is identical to ``%d``."
msgstr ""
"Um modificador de comprimento (``h``, ``l``, ou ``L``) pode estar presente, "
"mas será ignorado, pois o mesmo não é necessário para o Python -- então por "
"exemplo ``%ld`` é idêntico a ``%d``."

#: ../../library/stdtypes.rst:2429 ../../library/stdtypes.rst:3648
msgid "The conversion types are:"
msgstr "Os tipos de conversão são:"

#: ../../library/stdtypes.rst:2432 ../../library/stdtypes.rst:3651
msgid "Conversion"
msgstr "Conversão"

#: ../../library/stdtypes.rst:2434 ../../library/stdtypes.rst:3653
msgid "``'d'``"
msgstr "``'d'``"

#: ../../library/stdtypes.rst:2434 ../../library/stdtypes.rst:2436
#: ../../library/stdtypes.rst:3653 ../../library/stdtypes.rst:3655
msgid "Signed integer decimal."
msgstr "Número decimal inteiro sinalizador."

#: ../../library/stdtypes.rst:2436 ../../library/stdtypes.rst:3655
msgid "``'i'``"
msgstr "``'i'``"

#: ../../library/stdtypes.rst:2438 ../../library/stdtypes.rst:3657
msgid "``'o'``"
msgstr "``'o'``"

#: ../../library/stdtypes.rst:2438 ../../library/stdtypes.rst:3657
msgid "Signed octal value."
msgstr "Valor octal sinalizador."

#: ../../library/stdtypes.rst:2440 ../../library/stdtypes.rst:3659
msgid "``'u'``"
msgstr "``'u'``"

#: ../../library/stdtypes.rst:2440 ../../library/stdtypes.rst:3659
msgid "Obsolete type -- it is identical to ``'d'``."
msgstr "Tipo obsoleto -- é idêntico a ``'d'``."

#: ../../library/stdtypes.rst:2442 ../../library/stdtypes.rst:3661
msgid "``'x'``"
msgstr "``'x'``"

#: ../../library/stdtypes.rst:2442 ../../library/stdtypes.rst:3661
msgid "Signed hexadecimal (lowercase)."
msgstr "Sinalizador hexadecimal (minúsculas)."

#: ../../library/stdtypes.rst:2444 ../../library/stdtypes.rst:3663
msgid "``'X'``"
msgstr "``'X'``"

#: ../../library/stdtypes.rst:2444 ../../library/stdtypes.rst:3663
msgid "Signed hexadecimal (uppercase)."
msgstr "Sinalizador hexadecimal (maiúscula)."

#: ../../library/stdtypes.rst:2446 ../../library/stdtypes.rst:3665
msgid "``'e'``"
msgstr "``'e'``"

#: ../../library/stdtypes.rst:2446 ../../library/stdtypes.rst:3665
msgid "Floating-point exponential format (lowercase)."
msgstr "Formato exponencial de ponto flutuante (minúsculas)."

#: ../../library/stdtypes.rst:2448 ../../library/stdtypes.rst:3667
msgid "``'E'``"
msgstr "``'E'``"

#: ../../library/stdtypes.rst:2448 ../../library/stdtypes.rst:3667
msgid "Floating-point exponential format (uppercase)."
msgstr "Formato exponencial de ponto flutuante (maiúscula)."

#: ../../library/stdtypes.rst:2450 ../../library/stdtypes.rst:3669
msgid "``'f'``"
msgstr "``'f'``"

#: ../../library/stdtypes.rst:2450 ../../library/stdtypes.rst:2452
#: ../../library/stdtypes.rst:3669 ../../library/stdtypes.rst:3671
msgid "Floating-point decimal format."
msgstr "Formato decimal de ponto flutuante."

#: ../../library/stdtypes.rst:2452 ../../library/stdtypes.rst:3671
msgid "``'F'``"
msgstr "``'F'``"

#: ../../library/stdtypes.rst:2454 ../../library/stdtypes.rst:3673
msgid "``'g'``"
msgstr "``'g'``"

#: ../../library/stdtypes.rst:2454 ../../library/stdtypes.rst:3673
msgid ""
"Floating-point format. Uses lowercase exponential format if exponent is less "
"than -4 or not less than precision, decimal format otherwise."
msgstr ""
"O formato de ponto flutuante. Usa o formato exponencial em minúsculas se o "
"expoente for inferior a -4 ou não inferior a precisão, formato decimal, caso "
"contrário."

#: ../../library/stdtypes.rst:2458 ../../library/stdtypes.rst:3677
msgid "``'G'``"
msgstr "``'G'``"

#: ../../library/stdtypes.rst:2458 ../../library/stdtypes.rst:3677
msgid ""
"Floating-point format. Uses uppercase exponential format if exponent is less "
"than -4 or not less than precision, decimal format otherwise."
msgstr ""
"Formato de ponto flutuante. Usa o formato exponencial em maiúsculas se o "
"expoente for inferior a -4 ou não inferior que a precisão, formato decimal, "
"caso contrário."

#: ../../library/stdtypes.rst:2462 ../../library/stdtypes.rst:3681
msgid "``'c'``"
msgstr "``'c'``"

#: ../../library/stdtypes.rst:2462
msgid "Single character (accepts integer or single character string)."
msgstr "Caráter único (aceita inteiro ou um único caractere String)."

#: ../../library/stdtypes.rst:2465 ../../library/stdtypes.rst:3694
msgid "``'r'``"
msgstr "``'r'``"

#: ../../library/stdtypes.rst:2465
msgid "String (converts any Python object using :func:`repr`)."
msgstr "String (converte qualquer objeto Python usando a função :func:`repr`)."

#: ../../library/stdtypes.rst:2468 ../../library/stdtypes.rst:3688
msgid "``'s'``"
msgstr "``'s'``"

#: ../../library/stdtypes.rst:2468
msgid "String (converts any Python object using :func:`str`)."
msgstr "String (converte qualquer objeto Python usando a função :func:`str`)."

#: ../../library/stdtypes.rst:2471 ../../library/stdtypes.rst:3691
msgid "``'a'``"
msgstr "``'a'``"

#: ../../library/stdtypes.rst:2471
msgid "String (converts any Python object using :func:`ascii`)."
msgstr ""
"String (converte qualquer objeto Python usando a função :func:`ascii`)."

#: ../../library/stdtypes.rst:2474 ../../library/stdtypes.rst:3697
msgid "``'%'``"
msgstr "``'%'``"

#: ../../library/stdtypes.rst:2474 ../../library/stdtypes.rst:3697
msgid "No argument is converted, results in a ``'%'`` character in the result."
msgstr ""
"Nenhum argumento é convertido, resultando um caractere ``''%'`` no resultado."

#: ../../library/stdtypes.rst:2481 ../../library/stdtypes.rst:3704
msgid ""
"The alternate form causes a leading octal specifier (``'0o'``) to be "
"inserted before the first digit."
msgstr ""
"A forma alternativa faz com que um especificador octal principal (``'0o'``) "
"seja inserido antes do primeiro dígito."

#: ../../library/stdtypes.rst:2485 ../../library/stdtypes.rst:3708
msgid ""
"The alternate form causes a leading ``'0x'`` or ``'0X'`` (depending on "
"whether the ``'x'`` or ``'X'`` format was used) to be inserted before the "
"first digit."
msgstr ""
"O formato alternativo produz um ``'0x'`` ou ``'0X'`` (dependendo se o "
"formato ``'x'`` or ``'X'`` foi usado) para ser inserido antes do primeiro "
"dígito."

#: ../../library/stdtypes.rst:2489 ../../library/stdtypes.rst:3712
msgid ""
"The alternate form causes the result to always contain a decimal point, even "
"if no digits follow it."
msgstr ""
"A forma alternativa faz com que o resultado sempre contenha um ponto "
"decimal, mesmo que nenhum dígito o siga."

#: ../../library/stdtypes.rst:2492 ../../library/stdtypes.rst:3715
msgid ""
"The precision determines the number of digits after the decimal point and "
"defaults to 6."
msgstr ""
"A precisão determina o número de dígitos após o ponto decimal e o padrão é 6."

#: ../../library/stdtypes.rst:2496 ../../library/stdtypes.rst:3719
msgid ""
"The alternate form causes the result to always contain a decimal point, and "
"trailing zeroes are not removed as they would otherwise be."
msgstr ""
"A forma alternativa faz com que o resultado sempre contenha um ponto decimal "
"e os zeros à direita não sejam removidos, como de outra forma seriam."

#: ../../library/stdtypes.rst:2499 ../../library/stdtypes.rst:3722
msgid ""
"The precision determines the number of significant digits before and after "
"the decimal point and defaults to 6."
msgstr ""
"A precisão determina o número de dígitos significativos antes e depois do "
"ponto decimal e o padrão é 6."

#: ../../library/stdtypes.rst:2503 ../../library/stdtypes.rst:3726
msgid "If precision is ``N``, the output is truncated to ``N`` characters."
msgstr "Se a precisão for ``N``, a saída será truncada em caracteres ``N``."

#: ../../library/stdtypes.rst:2506 ../../library/stdtypes.rst:3735
msgid "See :pep:`237`."
msgstr "Veja :pep:`237`."

#: ../../library/stdtypes.rst:2508
msgid ""
"Since Python strings have an explicit length, ``%s`` conversions do not "
"assume that ``'\\0'`` is the end of the string."
msgstr ""
"Como as Strings do Python possuem comprimento explícito, ``%s`` as "
"conversões não presumem que ``'\\0'`` é o fim da string."

#: ../../library/stdtypes.rst:2513
msgid ""
"``%f`` conversions for numbers whose absolute value is over 1e50 are no "
"longer replaced by ``%g`` conversions."
msgstr ""
"``%f`` as conversões para números cujo valor absoluto é superior a 1e50 não "
"são mais substituídas pela conversão ``%g``."

#: ../../library/stdtypes.rst:2524
msgid ""
"Binary Sequence Types --- :class:`bytes`, :class:`bytearray`, :class:"
"`memoryview`"
msgstr ""
"Tipos de Sequência Binária --- :class:`bytes`, :class:`bytearray`, :class:"
"`memoryview`"

#: ../../library/stdtypes.rst:2532
msgid ""
"The core built-in types for manipulating binary data are :class:`bytes` and :"
"class:`bytearray`. They are supported by :class:`memoryview` which uses the :"
"ref:`buffer protocol <bufferobjects>` to access the memory of other binary "
"objects without needing to make a copy."
msgstr ""
"Os principais tipos embutidos para manipular dados binários são :class:"
"`bytes` e :class:`bytearray`. Eles são suportados por :class:`memoryview` a "
"qual usa o :ref:`buffer protocol <bufferobjects>` para acessar a memória de "
"outros objetos binários sem precisar fazer uma cópia."

#: ../../library/stdtypes.rst:2537
msgid ""
"The :mod:`array` module supports efficient storage of basic data types like "
"32-bit integers and IEEE754 double-precision floating values."
msgstr ""
"O módulo :mod:`array` suporta armazenamento eficiente de tipos de dados "
"básicos como inteiros de 32 bits e valores de ponto-flutuante com precisão "
"dupla IEEE754."

#: ../../library/stdtypes.rst:2543
msgid "Bytes Objects"
msgstr "Objetos Bytes"

#: ../../library/stdtypes.rst:2547
msgid ""
"Bytes objects are immutable sequences of single bytes. Since many major "
"binary protocols are based on the ASCII text encoding, bytes objects offer "
"several methods that are only valid when working with ASCII compatible data "
"and are closely related to string objects in a variety of other ways."
msgstr ""
"Objetos bytes são sequências imutáveis de bytes simples. Como muitos "
"protocolos binários importantes são baseados em codificação ASCII de texto, "
"objetos bytes oferecem diversos métodos que são válidos apenas quando "
"trabalhamos com dados compatíveis com ASCII, e são proximamente relacionados "
"com objetos string em uma variedade de outros sentidos."

#: ../../library/stdtypes.rst:2554
msgid ""
"Firstly, the syntax for bytes literals is largely the same as that for "
"string literals, except that a ``b`` prefix is added:"
msgstr ""
"Em primeiro lugar, a sintaxe para literais de bytes é em grande parte a "
"mesma para literais de String, exceto que um prefixo ``b`` é adicionado:"

#: ../../library/stdtypes.rst:2557
msgid "Single quotes: ``b'still allows embedded \"double\" quotes'``"
msgstr "Aspas simples: ``b'still allows embedded \"double\" quotes'``"

#: ../../library/stdtypes.rst:2558
msgid "Double quotes: ``b\"still allows embedded 'single' quotes\"``"
msgstr "Aspas duplas: ``b\"still allows embedded 'single' quotes\"``"

#: ../../library/stdtypes.rst:2559
msgid ""
"Triple quoted: ``b'''3 single quotes'''``, ``b\"\"\"3 double quotes\"\"\"``"
msgstr ""
"Aspas triplas: ``b'''3 single quotes'''``, ``b\"\"\"3 double quotes\"\"\"``"

#: ../../library/stdtypes.rst:2561
msgid ""
"Only ASCII characters are permitted in bytes literals (regardless of the "
"declared source code encoding). Any binary values over 127 must be entered "
"into bytes literals using the appropriate escape sequence."
msgstr ""
"Apenas caracteres ASCII são permitidos em literais de bytes "
"(independentemente da codificação declarada). Qualquer valor binário "
"superior a 127 deverá ser inserido em literais de bytes usando a sequência "
"de escape apropriada."

#: ../../library/stdtypes.rst:2565
msgid ""
"As with string literals, bytes literals may also use a ``r`` prefix to "
"disable processing of escape sequences. See :ref:`strings` for more about "
"the various forms of bytes literal, including supported escape sequences."
msgstr ""
"Assim como string literais, bytes literais também podem usar um prefixo "
"``r`` para desabilitar o processamento de sequências de escape. Veja :ref:"
"`strings` para mais sobre as várias formas de bytes literais, incluindo "
"suporte a sequências de escape."

#: ../../library/stdtypes.rst:2569
msgid ""
"While bytes literals and representations are based on ASCII text, bytes "
"objects actually behave like immutable sequences of integers, with each "
"value in the sequence restricted such that ``0 <= x < 256`` (attempts to "
"violate this restriction will trigger :exc:`ValueError`). This is done "
"deliberately to emphasise that while many binary formats include ASCII based "
"elements and can be usefully manipulated with some text-oriented algorithms, "
"this is not generally the case for arbitrary binary data (blindly applying "
"text processing algorithms to binary data formats that are not ASCII "
"compatible will usually lead to data corruption)."
msgstr ""
"Enquanto bytes literais e representações são baseados em texto ASCII, "
"objetos bytes na verdade se comportam como sequências imutáveis de inteiros, "
"com cada valor na sequência restrito aos limites ``0 <= x < 256`` "
"(tentativas de violar essa restrição irão disparar :exc:`ValueError`). Isto "
"é feito deliberadamente para enfatizar que enquanto muitos formatos binários "
"incluem elementos baseados em ASCII e podem ser utilmente manipulados com "
"alguns algoritmos orientados a texto, esse não é geralmente o caso para "
"dados binários arbitrários (aplicar algoritmos de processamento de texto "
"cegamente em formatos de dados binários que não são compatíveis com ASCII "
"irá usualmente resultar em dados corrompidos)."

#: ../../library/stdtypes.rst:2579
msgid ""
"In addition to the literal forms, bytes objects can be created in a number "
"of other ways:"
msgstr ""
"Além das formas literais, os objetos bytes podem ser criados de várias "
"outras maneiras:"

#: ../../library/stdtypes.rst:2582
msgid "A zero-filled bytes object of a specified length: ``bytes(10)``"
msgstr ""
"Um bytes preenchido com objetos zero com um comprimento especificado: "
"``bytes(10)``"

#: ../../library/stdtypes.rst:2583
msgid "From an iterable of integers: ``bytes(range(20))``"
msgstr "De um iterável de inteiros: ``bytes(range(20))``"

#: ../../library/stdtypes.rst:2584
msgid "Copying existing binary data via the buffer protocol:  ``bytes(obj)``"
msgstr ""
"Copiando dados binários existentes através do protocolo de Buffer: "
"``bytes(obj)``"

#: ../../library/stdtypes.rst:2586
msgid "Also see the :ref:`bytes <func-bytes>` built-in."
msgstr "Veja também os embutidos :ref:`bytes <func-bytes>`."

#: ../../library/stdtypes.rst:2588
msgid ""
"Since 2 hexadecimal digits correspond precisely to a single byte, "
"hexadecimal numbers are a commonly used format for describing binary data. "
"Accordingly, the bytes type has an additional class method to read data in "
"that format:"
msgstr ""
"Como 2 dígitos hexadecimais correspondem precisamente a apenas um byte, "
"números hexadecimais são um formato comumente usado para descrever dados "
"binários. Portanto, o tipo bytes tem um método de classe adicional para ler "
"dados nesse formato:"

#: ../../library/stdtypes.rst:2594
msgid ""
"This :class:`bytes` class method returns a bytes object, decoding the given "
"string object.  The string must contain two hexadecimal digits per byte, "
"with ASCII whitespace being ignored."
msgstr ""
"Este método de classe da classe :class:`bytes` retorna um objeto bytes, "
"decodificando o objeto string fornecido. A string deve conter dois dígitos "
"hexadecimais por byte, com espaço em branco ASCII sendo ignorado."

#: ../../library/stdtypes.rst:2601
msgid ""
":meth:`bytes.fromhex` now skips all ASCII whitespace in the string, not just "
"spaces."
msgstr ""
":meth:`bytes.fromhex` agora ignora todos os espaços em branco em ASCII na "
"string, não apenas espaços."

#: ../../library/stdtypes.rst:2605
msgid ""
"A reverse conversion function exists to transform a bytes object into its "
"hexadecimal representation."
msgstr ""
"Uma função de conversão reversa existe para transformar um objeto bytes na "
"sua representação hexadecimal."

#: ../../library/stdtypes.rst:2610 ../../library/stdtypes.rst:2695
msgid ""
"Return a string object containing two hexadecimal digits for each byte in "
"the instance."
msgstr ""
"Retorna um objeto string contendo dois dígitos hexadecimais para cada byte "
"na instância."

#: ../../library/stdtypes.rst:2616
msgid ""
"If you want to make the hex string easier to read, you can specify a single "
"character separator *sep* parameter to include in the output. By default, "
"this separator will be included between each byte. A second optional "
"*bytes_per_sep* parameter controls the spacing. Positive values calculate "
"the separator position from the right, negative values from the left."
msgstr ""
"Se você quiser tornar a string hexadecimal mais fácil de ler, você pode "
"especificar um caractere separador através do parâmetro *sep*, que será "
"incluído no resultado. Por padrão, este separador será incluído entre cada "
"byte. Um segundo parâmetro opcional *bytes_per_sep* controla o espaçamento. "
"Valores positivos calculam a posição do separador a partir da direita, "
"valores negativos calculam a partir da esquerda."

#: ../../library/stdtypes.rst:2633
msgid ""
":meth:`bytes.hex` now supports optional *sep* and *bytes_per_sep* parameters "
"to insert separators between bytes in the hex output."
msgstr ""
":meth:`bytes.hex` agora suporta os parâmetros opcionais *sep* e "
"*bytes_per_sep* para inserir separadores entre bytes na saída hexadecimal."

#: ../../library/stdtypes.rst:2637
msgid ""
"Since bytes objects are sequences of integers (akin to a tuple), for a bytes "
"object *b*, ``b[0]`` will be an integer, while ``b[0:1]`` will be a bytes "
"object of length 1.  (This contrasts with text strings, where both indexing "
"and slicing will produce a string of length 1)"
msgstr ""
"Como objetos bytes são sequências de inteiros (certo parentesco a uma "
"tupla), para um objeto bytes *b*, ``b[0]`` será um inteiro, enquanto "
"``b[0:1]`` será um objeto bytes de comprimento 1. (Isso contrasta com "
"strings de texto, onde tanto o uso por índice quanto por fatiamento irão "
"produzir uma string de comprimento 1)"

#: ../../library/stdtypes.rst:2642
msgid ""
"The representation of bytes objects uses the literal format (``b'...'``) "
"since it is often more useful than e.g. ``bytes([46, 46, 46])``.  You can "
"always convert a bytes object into a list of integers using ``list(b)``."
msgstr ""
"A representação de objetos bytes utiliza o formato literal (``b'...'``), uma "
"vez que ela é frequentemente mais útil do que, por exemplo, ``bytes([46, 46, "
"46])``. Você sempre pode converter um objeto bytes em uma lista de inteiros "
"usando ``list(b)``."

#: ../../library/stdtypes.rst:2650
msgid "Bytearray Objects"
msgstr "Objetos Bytearray"

#: ../../library/stdtypes.rst:2654
msgid ""
":class:`bytearray` objects are a mutable counterpart to :class:`bytes` "
"objects."
msgstr ""
"Objetos :class:`bytearray` são mutáveis, em contrapartida a objetos :class:"
"`bytes`."

#: ../../library/stdtypes.rst:2659
msgid ""
"There is no dedicated literal syntax for bytearray objects, instead they are "
"always created by calling the constructor:"
msgstr ""
"Não existe sintaxe literal dedicada para objetos de bytearray, ao invés "
"disso eles sempre são criados através da chamada do construtor:"

#: ../../library/stdtypes.rst:2662
msgid "Creating an empty instance: ``bytearray()``"
msgstr "Criando uma instância vazia: ``bytearray()``"

#: ../../library/stdtypes.rst:2663
msgid "Creating a zero-filled instance with a given length: ``bytearray(10)``"
msgstr ""
"Criando uma instância cheia de zero com um determinado comprimento: "
"``bytearray(10)``"

#: ../../library/stdtypes.rst:2664
msgid "From an iterable of integers: ``bytearray(range(20))``"
msgstr "A partir de inteiros iteráveis: ``bytearray(range(20))``"

#: ../../library/stdtypes.rst:2665
msgid ""
"Copying existing binary data via the buffer protocol:  ``bytearray(b'Hi!')``"
msgstr ""
"Copiando dados binários existentes através do protocolo de buffer: "
"``bytearray(b'Hi!')``"

#: ../../library/stdtypes.rst:2667
msgid ""
"As bytearray objects are mutable, they support the :ref:`mutable <typesseq-"
"mutable>` sequence operations in addition to the common bytes and bytearray "
"operations described in :ref:`bytes-methods`."
msgstr ""
"Como os objetos bytearray são mutáveis, os mesmos suportam as operações de "
"sequência :ref:`mutable <typesseq-mutable>` além das operações comuns de "
"bytes e bytearray descritas em :ref:`bytes-methods`."

#: ../../library/stdtypes.rst:2671
msgid "Also see the :ref:`bytearray <func-bytearray>` built-in."
msgstr "Veja também o tipo embutido :ref:`bytearray <func-bytearray>`."

#: ../../library/stdtypes.rst:2673
msgid ""
"Since 2 hexadecimal digits correspond precisely to a single byte, "
"hexadecimal numbers are a commonly used format for describing binary data. "
"Accordingly, the bytearray type has an additional class method to read data "
"in that format:"
msgstr ""
"Uma vez que 2 dígitos hexadecimais correspondem precisamente a um único "
"byte, os números hexadecimais são um formato comumente usado para descrever "
"dados binários. Consequentemente, o tipo de bytearray tem um método de "
"classe adicional para ler dados nesse formato:"

#: ../../library/stdtypes.rst:2679
msgid ""
"This :class:`bytearray` class method returns bytearray object, decoding the "
"given string object.  The string must contain two hexadecimal digits per "
"byte, with ASCII whitespace being ignored."
msgstr ""
"Este método de classe da classe :class:`bytearray` retorna um objeto "
"bytearray, decodificando o objeto string fornecido. A string deve conter "
"dois dígitos hexadecimais por byte, com espaços em branco ASCII sendo "
"ignorados."

#: ../../library/stdtypes.rst:2686
msgid ""
":meth:`bytearray.fromhex` now skips all ASCII whitespace in the string, not "
"just spaces."
msgstr ""
":meth:`bytearray.fromhex` agora ignora todos os espaços em branco em ASCII "
"na string, não apenas espaços."

#: ../../library/stdtypes.rst:2690
msgid ""
"A reverse conversion function exists to transform a bytearray object into "
"its hexadecimal representation."
msgstr ""
"Existe uma função de conversão reversa para transformar um objeto bytearray "
"em sua representação hexadecimal."

#: ../../library/stdtypes.rst:2703
msgid ""
"Similar to :meth:`bytes.hex`, :meth:`bytearray.hex` now supports optional "
"*sep* and *bytes_per_sep* parameters to insert separators between bytes in "
"the hex output."
msgstr ""
"Similar a :meth:`bytes.hex`, :meth:`bytearray.hex` agora suporta os "
"parâmetros opcionais *sep* e *bytes_per_sep* para inserir separadores entre "
"bytes na saída hexadecimal."

#: ../../library/stdtypes.rst:2708
msgid ""
"Since bytearray objects are sequences of integers (akin to a list), for a "
"bytearray object *b*, ``b[0]`` will be an integer, while ``b[0:1]`` will be "
"a bytearray object of length 1.  (This contrasts with text strings, where "
"both indexing and slicing will produce a string of length 1)"
msgstr ""
"Como os objetos bytearray são sequências de inteiros (semelhante a uma "
"lista), para um objeto bytearray *b*, ``b[0]`` será um inteiro, enquanto que "
"``b[0:1]`` será um objeto bytearray de comprimento 1. (Isso contrasta com as "
"Strings de texto, onde tanto a indexação como o fatiamento produzirão "
"sequências de comprimento 1)"

#: ../../library/stdtypes.rst:2713
msgid ""
"The representation of bytearray objects uses the bytes literal format "
"(``bytearray(b'...')``) since it is often more useful than e.g. "
"``bytearray([46, 46, 46])``.  You can always convert a bytearray object into "
"a list of integers using ``list(b)``."
msgstr ""
"A representação de objetos bytearray utiliza o formato literal bytes "
"(``bytearray(b'...')``), uma vez que muitas vezes é mais útil do que, por "
"exemplo, ``bytearray([46, 46, 46])``. Você sempre pode converter um objeto "
"bytearray em uma lista de inteiros usando ``list(b)``."

#: ../../library/stdtypes.rst:2722
msgid "Bytes and Bytearray Operations"
msgstr "Operações com Bytes e Bytearray"

#: ../../library/stdtypes.rst:2727
msgid ""
"Both bytes and bytearray objects support the :ref:`common <typesseq-common>` "
"sequence operations. They interoperate not just with operands of the same "
"type, but with any :term:`bytes-like object`. Due to this flexibility, they "
"can be freely mixed in operations without causing errors. However, the "
"return type of the result may depend on the order of operands."
msgstr ""
"Ambos os tipos, bytes e os objetos bytearray suportam as operações de "
"sequências :ref:`comuns <typesseq-common>`. Os mesmo interagem não apenas "
"com operandos do mesmo tipo, mas com qualquer :term:`objeto byte ou similar "
"<bytes-like object>`. Devido a esta flexibilidade, os mesmos podem ser "
"misturados livremente em operações sem causar erros. No entanto, o tipo de "
"retorno do resultado pode depender da ordem dos operandos."

#: ../../library/stdtypes.rst:2735
msgid ""
"The methods on bytes and bytearray objects don't accept strings as their "
"arguments, just as the methods on strings don't accept bytes as their "
"arguments.  For example, you have to write::"
msgstr ""
"Os métodos em bytes e objetos Bytearray não aceitam Strings como argumentos, "
"assim como os métodos de Strings não aceitam bytes como argumentos. Por "
"exemplo, devemos escrever::"

#: ../../library/stdtypes.rst:2739
msgid ""
"a = \"abc\"\n"
"b = a.replace(\"a\", \"f\")"
msgstr ""

#: ../../library/stdtypes.rst:2742
msgid "and::"
msgstr "e::"

#: ../../library/stdtypes.rst:2744
msgid ""
"a = b\"abc\"\n"
"b = a.replace(b\"a\", b\"f\")"
msgstr ""

#: ../../library/stdtypes.rst:2747
msgid ""
"Some bytes and bytearray operations assume the use of ASCII compatible "
"binary formats, and hence should be avoided when working with arbitrary "
"binary data. These restrictions are covered below."
msgstr ""
"Alguns operações com bytes e bytearray presumem o uso de formatos binários "
"compatíveis com ASCII e, portanto, devem ser evitados ao trabalhar com dados "
"binários arbitrários. Essas restrições são abordadas a seguir."

#: ../../library/stdtypes.rst:2752
msgid ""
"Using these ASCII based operations to manipulate binary data that is not "
"stored in an ASCII based format may lead to data corruption."
msgstr ""
"O uso dessas operações baseadas em ASCII para manipular dados binários que "
"não são armazenados num formato baseado em ASCII poderá resultar na "
"corrupção de dados."

#: ../../library/stdtypes.rst:2755
msgid ""
"The following methods on bytes and bytearray objects can be used with "
"arbitrary binary data."
msgstr ""
"Os métodos a seguir em Bytes e Bytearray podem ser usados com dados binários "
"arbitrários."

#: ../../library/stdtypes.rst:2761
msgid ""
"Return the number of non-overlapping occurrences of subsequence *sub* in the "
"range [*start*, *end*].  Optional arguments *start* and *end* are "
"interpreted as in slice notation."
msgstr ""
"Retorna o número de ocorrências não sobrepostas de subsequência *sub* no "
"intervalo [*start*, *end*]. Os argumentos opcionais *start* e *end* são "
"interpretados como na notação de fatiamento."

#: ../../library/stdtypes.rst:2765 ../../library/stdtypes.rst:2870
#: ../../library/stdtypes.rst:2892 ../../library/stdtypes.rst:2958
#: ../../library/stdtypes.rst:2971
msgid ""
"The subsequence to search for may be any :term:`bytes-like object` or an "
"integer in the range 0 to 255."
msgstr ""
"A subsequência a ser procurada poderá ser qualquer :term:`objeto byte ou "
"similar <bytes-like object>` ou um inteiro no intervalo de 0 a 255."

#: ../../library/stdtypes.rst:2768
msgid ""
"If *sub* is empty, returns the number of empty slices between characters "
"which is the length of the bytes object plus one."
msgstr ""
"Se *sub* estiver vazio, retorna o número de fatias vazias entre os "
"caracteres, que é o comprimento do objeto bytes mais um."

#: ../../library/stdtypes.rst:2771 ../../library/stdtypes.rst:2882
#: ../../library/stdtypes.rst:2895 ../../library/stdtypes.rst:2961
#: ../../library/stdtypes.rst:2974
msgid "Also accept an integer in the range 0 to 255 as the subsequence."
msgstr ""
"Também aceita um número inteiro no intervalo de 0 a 255 como subsequência."

#: ../../library/stdtypes.rst:2778
msgid ""
"If the binary data starts with the *prefix* string, return "
"``bytes[len(prefix):]``. Otherwise, return a copy of the original binary "
"data::"
msgstr ""
"Se os dados binários começarem com a string *prefix*, retorna "
"``bytes[len(prefix):]``. Caso contrário, retorna uma cópia dos dados "
"binários originais::"

#: ../../library/stdtypes.rst:2782
msgid ""
">>> b'TestHook'.removeprefix(b'Test')\n"
"b'Hook'\n"
">>> b'BaseTestCase'.removeprefix(b'Test')\n"
"b'BaseTestCase'"
msgstr ""

#: ../../library/stdtypes.rst:2787
msgid "The *prefix* may be any :term:`bytes-like object`."
msgstr ""
"O *prefix* pode ser qualquer :term:`objeto byte ou similar <bytes-like "
"object>`."

#: ../../library/stdtypes.rst:2791 ../../library/stdtypes.rst:2813
#: ../../library/stdtypes.rst:2946 ../../library/stdtypes.rst:3039
#: ../../library/stdtypes.rst:3053 ../../library/stdtypes.rst:3084
#: ../../library/stdtypes.rst:3098 ../../library/stdtypes.rst:3140
#: ../../library/stdtypes.rst:3211 ../../library/stdtypes.rst:3229
#: ../../library/stdtypes.rst:3257 ../../library/stdtypes.rst:3396
#: ../../library/stdtypes.rst:3451 ../../library/stdtypes.rst:3494
#: ../../library/stdtypes.rst:3515 ../../library/stdtypes.rst:3537
#: ../../library/stdtypes.rst:3739
msgid ""
"The bytearray version of this method does *not* operate in place - it always "
"produces a new object, even if no changes were made."
msgstr ""
"A versão Bytearray deste método *não* opera no local -- o mesmo sempre "
"produz um novo objeto, mesmo que não tenha sido feitas alterações."

#: ../../library/stdtypes.rst:2800
msgid ""
"If the binary data ends with the *suffix* string and that *suffix* is not "
"empty, return ``bytes[:-len(suffix)]``.  Otherwise, return a copy of the "
"original binary data::"
msgstr ""
"Se os dados binários terminarem com a string *suffix* e a *suffix* não "
"estiver vazia, retorna ``bytes[:-len(suffix)]``. Caso contrário, retorna uma "
"cópia dos dados binários originais::"

#: ../../library/stdtypes.rst:2804
msgid ""
">>> b'MiscTests'.removesuffix(b'Tests')\n"
"b'Misc'\n"
">>> b'TmpDirMixin'.removesuffix(b'Tests')\n"
"b'TmpDirMixin'"
msgstr ""

#: ../../library/stdtypes.rst:2809
msgid "The *suffix* may be any :term:`bytes-like object`."
msgstr ""
"O *suffix* pode ser qualquer :term:`objeto byte ou similar <bytes-like "
"object>`."

#: ../../library/stdtypes.rst:2822
msgid "Return the bytes decoded to a :class:`str`."
msgstr "Retorna os bytes decodificados para uma :class:`str`."

#: ../../library/stdtypes.rst:2827
msgid ""
"*errors* controls how decoding errors are handled. If ``'strict'`` (the "
"default), a :exc:`UnicodeError` exception is raised. Other possible values "
"are ``'ignore'``, ``'replace'``, and any other name registered via :func:"
"`codecs.register_error`. See :ref:`error-handlers` for details."
msgstr ""
"*errors* controla como os erros de decodificação são tratados. Se "
"``'strict'`` (o padrão), uma exceção :exc:`UnicodeError` é levantada. Outros "
"valores possíveis são ``'ignore'``, ``'replace'`` e qualquer outro nome "
"registrado via :func:`codecs.register_error`. Veja :ref:`error-handlers` "
"para detalhes."

#: ../../library/stdtypes.rst:2833
msgid ""
"For performance reasons, the value of *errors* is not checked for validity "
"unless a decoding error actually occurs, :ref:`devmode` is enabled or a :ref:"
"`debug build <debug-build>` is used."
msgstr ""
"Por motivos de desempenho, o valor de *errors* não é verificado quanto à "
"validade, a menos que um erro de decodificação realmente ocorra, :ref:"
"`devmode` esteja ativado ou uma :ref:`construção de depuração <debug-build>` "
"seja usada."

#: ../../library/stdtypes.rst:2839
msgid ""
"Passing the *encoding* argument to :class:`str` allows decoding any :term:"
"`bytes-like object` directly, without needing to make a temporary :class:`!"
"bytes` or :class:`!bytearray` object."
msgstr ""
"Passar o argumento *encoding* para :class:`str` permite decodificar qualquer "
"objeto :term:`objeto byte ou similar` diretamente, sem a necessidade de "
"criar um objeto :class:`!bytes` ou :class:`!bytearray` temporário."

#: ../../library/stdtypes.rst:2854
msgid ""
"Return ``True`` if the binary data ends with the specified *suffix*, "
"otherwise return ``False``.  *suffix* can also be a tuple of suffixes to "
"look for.  With optional *start*, test beginning at that position.  With "
"optional *end*, stop comparing at that position."
msgstr ""
"Retorna ``True`` se os dados binários encerra com o parâmetro *suffix* "
"especificado, caso contrário retorna ``False``. *suffix* também pode ser uma "
"tupla de sufixos para averiguar. Com o parâmetro opcional *start*, a procura "
"começa naquela posição. Com o parâmetro opcional *end*, o método encerra a "
"comparação na posição fornecida."

#: ../../library/stdtypes.rst:2859
msgid "The suffix(es) to search for may be any :term:`bytes-like object`."
msgstr ""
"O sufixo(es) para buscas pode ser qualquer termos :term:`objeto byte ou "
"similar <bytes-like object>`."

#: ../../library/stdtypes.rst:2865
msgid ""
"Return the lowest index in the data where the subsequence *sub* is found, "
"such that *sub* is contained in the slice ``s[start:end]``.  Optional "
"arguments *start* and *end* are interpreted as in slice notation.  Return "
"``-1`` if *sub* is not found."
msgstr ""
"Retorna o índice mais baixo nos dados onde a sub-sequência *sub* é "
"encontrada, tal que *sub* está contida na fatia ``s[start:end]``. Argumentos "
"opcionais *start* e *end* são interpretados como na notação de fatiamento. "
"Retorna ``-1`` se *sub* não for localizada."

#: ../../library/stdtypes.rst:2875
msgid ""
"The :meth:`~bytes.find` method should be used only if you need to know the "
"position of *sub*.  To check if *sub* is a substring or not, use the :"
"keyword:`in` operator::"
msgstr ""
"O método :meth:`~bytes.find` deve ser usado apenas se você precisa saber a "
"posição de *sub*. Para verificar se *sub* é uma substring ou não, use o "
"operador :keyword:`in`::"

#: ../../library/stdtypes.rst:2879
msgid ""
">>> b'Py' in b'Python'\n"
"True"
msgstr ""

#: ../../library/stdtypes.rst:2889
msgid ""
"Like :meth:`~bytes.find`, but raise :exc:`ValueError` when the subsequence "
"is not found."
msgstr ""
"Como :meth:`~bytes.find`, mas levanta a exceção :exc:`ValueError` quando a "
"subsequência não for encontrada."

#: ../../library/stdtypes.rst:2902
msgid ""
"Return a bytes or bytearray object which is the concatenation of the binary "
"data sequences in *iterable*.  A :exc:`TypeError` will be raised if there "
"are any values in *iterable* that are not :term:`bytes-like objects <bytes-"
"like object>`, including :class:`str` objects.  The separator between "
"elements is the contents of the bytes or bytearray object providing this "
"method."
msgstr ""
"Retorna um objeto bytes ou bytearray que é a concatenação das sequências de "
"dados binários no *iterável*. Um :exc:`TypeError` será levantado se "
"existirem quaisquer valores que não sejam :term:`objeto byte ou similar "
"<bytes-like object>`, no *iterável*, incluindo objetos :class:`str`. O "
"separador entre elementos é o conteúdo do objeto bytes ou bytearray que está "
"fornecendo este método."

#: ../../library/stdtypes.rst:2913
msgid ""
"This static method returns a translation table usable for :meth:`bytes."
"translate` that will map each character in *from* into the character at the "
"same position in *to*; *from* and *to* must both be :term:`bytes-like "
"objects <bytes-like object>` and have the same length."
msgstr ""
"Este método estático retorna uma tabela de tradução usável para :meth:`bytes."
"translate`, que irá mapear cada caractere em *from* no caractere na mesma "
"posição em *to*; *from* e *to* devem ambos ser :term:`objeto byte ou similar "
"<bytes-like object>` e ter o mesmo comprimento."

#: ../../library/stdtypes.rst:2924
msgid ""
"Split the sequence at the first occurrence of *sep*, and return a 3-tuple "
"containing the part before the separator, the separator itself or its "
"bytearray copy, and the part after the separator. If the separator is not "
"found, return a 3-tuple containing a copy of the original sequence, followed "
"by two empty bytes or bytearray objects."
msgstr ""
"Quebra a sequência na primeira ocorrência de *sep*, e retorna uma tupla com "
"3 elementos contendo a parte antes do separador, o próprio separador, e a "
"parte após o separador. Se o separador não for encontrado, retorna uma tupla "
"com 3 elementos contendo uma cópia da sequência original, seguido de dois "
"bytes ou objetos bytearray vazios."

#: ../../library/stdtypes.rst:2931 ../../library/stdtypes.rst:2988
msgid "The separator to search for may be any :term:`bytes-like object`."
msgstr ""
"O separador para buscar pode ser qualquer termos :term:`objeto byte ou "
"similar <bytes-like object>`."

#: ../../library/stdtypes.rst:2937
msgid ""
"Return a copy of the sequence with all occurrences of subsequence *old* "
"replaced by *new*.  If the optional argument *count* is given, only the "
"first *count* occurrences are replaced."
msgstr ""
"Retornar uma cópia da sequência com todas as ocorrências de subsequências "
"*antigas* substituídas por *novo*. Se o argumento opcional *count* for "
"fornecido, apenas as primeiras ocorrências de *count* serão substituídas."

#: ../../library/stdtypes.rst:2941
msgid ""
"The subsequence to search for and its replacement may be any :term:`bytes-"
"like object`."
msgstr ""
"A subsequência para buscar e substituição pode ser qualquer termos :term:"
"`objeto byte ou similar <bytes-like object>`."

#: ../../library/stdtypes.rst:2953
msgid ""
"Return the highest index in the sequence where the subsequence *sub* is "
"found, such that *sub* is contained within ``s[start:end]``.  Optional "
"arguments *start* and *end* are interpreted as in slice notation. Return "
"``-1`` on failure."
msgstr ""
"Retorna o índice mais alto na sequência onde a subsequência *sub* foi "
"encontrada, de modo que *sub* esteja contido dentro de ``s[start:end]``. Os "
"argumentos opcionais *start* e *end* são interpretados como na notação de "
"fatiamento. Caso ocorra algum problema será retornado ``-1``."

#: ../../library/stdtypes.rst:2968
msgid ""
"Like :meth:`~bytes.rfind` but raises :exc:`ValueError` when the subsequence "
"*sub* is not found."
msgstr ""
"Semelhante a :meth:`~bytes.rfind` mas levanta :exc:`ValueError` quando a "
"subsequência *sub* não é encontrada."

#: ../../library/stdtypes.rst:2981
msgid ""
"Split the sequence at the last occurrence of *sep*, and return a 3-tuple "
"containing the part before the separator, the separator itself or its "
"bytearray copy, and the part after the separator. If the separator is not "
"found, return a 3-tuple containing two empty bytes or bytearray objects, "
"followed by a copy of the original sequence."
msgstr ""
"Quebra a sequência na primeira ocorrência de *sep*, e retorna uma tupla com "
"3 elementos contendo a parte antes do separador, o próprio separador, e a "
"parte após o separador. Se o separador não for encontrado, retorna uma tupla "
"com 3 elementos contendo dois bytes ou objetos bytearray vazios, seguido por "
"uma cópia da sequência original."

#: ../../library/stdtypes.rst:2994
msgid ""
"Return ``True`` if the binary data starts with the specified *prefix*, "
"otherwise return ``False``.  *prefix* can also be a tuple of prefixes to "
"look for.  With optional *start*, test beginning at that position.  With "
"optional *end*, stop comparing at that position."
msgstr ""
"Retorna ``True`` se os dados binários começam com o *prefix* especificado, "
"caso contrário retorna ``False``. *prefix* também pode ser uma tupla de "
"prefixos para procurar. Com o parâmetro opcional *start*, começa a procura "
"na posição indicada. Com o parâmetro opcional *end*, encerra a procura na "
"posição indicada."

#: ../../library/stdtypes.rst:2999
msgid "The prefix(es) to search for may be any :term:`bytes-like object`."
msgstr ""
"Os prefixos para pesquisar podem ser qualquer :term:`objeto byte ou similar "
"<bytes-like object>`."

#: ../../library/stdtypes.rst:3005
msgid ""
"Return a copy of the bytes or bytearray object where all bytes occurring in "
"the optional argument *delete* are removed, and the remaining bytes have "
"been mapped through the given translation table, which must be a bytes "
"object of length 256."
msgstr ""
"Retorna uma cópia dos bytes ou objeto bytearray, onde todas as ocorrências "
"de bytes do argumento opcional *delete* são removidas, e os bytes restantes "
"foram mapeados através da tabela de tradução fornecida, a qual deve ser um "
"objeto bytes de comprimento 256."

#: ../../library/stdtypes.rst:3010
msgid ""
"You can use the :func:`bytes.maketrans` method to create a translation table."
msgstr ""
"Você pode usar o método :func:`bytes.maketrans` para criar uma tabela de "
"tradução."

#: ../../library/stdtypes.rst:3013
msgid ""
"Set the *table* argument to ``None`` for translations that only delete "
"characters::"
msgstr ""
"Define o argumento *table* como ``None`` para traduções que excluem apenas "
"caracteres::"

#: ../../library/stdtypes.rst:3016
msgid ""
">>> b'read this short text'.translate(None, b'aeiou')\n"
"b'rd ths shrt txt'"
msgstr ""

#: ../../library/stdtypes.rst:3019
msgid "*delete* is now supported as a keyword argument."
msgstr "*delete* agora é suportado como um argumento nomeado."

#: ../../library/stdtypes.rst:3023
msgid ""
"The following methods on bytes and bytearray objects have default behaviours "
"that assume the use of ASCII compatible binary formats, but can still be "
"used with arbitrary binary data by passing appropriate arguments. Note that "
"all of the bytearray methods in this section do *not* operate in place, and "
"instead produce new objects."
msgstr ""
"Os seguintes métodos de objetos bytes e bytearray tem comportamentos padrões "
"que presumem o uso de formatos binários compatíveis com ASCII, mas ainda "
"podem ser usados com dados binários arbitrários através da passagem "
"argumentos apropriados. Perceba que todos os métodos de bytearray nesta "
"seção *não* alteram os argumentos, e ao invés disso produzem novos objetos."

#: ../../library/stdtypes.rst:3032
msgid ""
"Return a copy of the object centered in a sequence of length *width*. "
"Padding is done using the specified *fillbyte* (default is an ASCII space). "
"For :class:`bytes` objects, the original sequence is returned if *width* is "
"less than or equal to ``len(s)``."
msgstr ""
"Retorna uma cópia do objeto centralizado em uma sequência de comprimento "
"*width*. Preenchimento é feito usando o *fillbyte* especificado (o padrão é "
"um espaço ASCII). Para objetos :class:`bytes`, a sequência original é "
"retornada se *width* é menor que ou igual a ``len(s)``."

#: ../../library/stdtypes.rst:3046
msgid ""
"Return a copy of the object left justified in a sequence of length *width*. "
"Padding is done using the specified *fillbyte* (default is an ASCII space). "
"For :class:`bytes` objects, the original sequence is returned if *width* is "
"less than or equal to ``len(s)``."
msgstr ""
"Retorna uma cópia do objeto alinhado a esquerda em uma sequência de "
"comprimento *width*. Preenchimento é feito usando o *fillbyte* especificado "
"(o padrão é um espaço ASCII). Para objetos :class:`bytes`, a sequência "
"original é retornada se *width* é menor que ou igual a ``len(s)``."

#: ../../library/stdtypes.rst:3060
msgid ""
"Return a copy of the sequence with specified leading bytes removed.  The "
"*chars* argument is a binary sequence specifying the set of byte values to "
"be removed - the name refers to the fact this method is usually used with "
"ASCII characters.  If omitted or ``None``, the *chars* argument defaults to "
"removing ASCII whitespace.  The *chars* argument is not a prefix; rather, "
"all combinations of its values are stripped::"
msgstr ""
"Retorna uma cópia da sequência com bytes especificados no início removidos. "
"O argumento *chars* é uma sequência binária que especifica o conjunto de "
"bytes a serem removidos - o nome refere-se ao fato de este método é "
"usualmente utilizado com caracteres ASCII. Se for omitido ou for ``None``, o "
"argumento *chars* irá remover por padrão os espaços em branco ASCII. O "
"argumento *chars* não é um prefixo; ao contrário disso, todas as combinações "
"dos seus seus valores são removidas::"

#: ../../library/stdtypes.rst:3067
msgid ""
">>> b'   spacious   '.lstrip()\n"
"b'spacious   '\n"
">>> b'www.example.com'.lstrip(b'cmowz.')\n"
"b'example.com'"
msgstr ""

#: ../../library/stdtypes.rst:3072
msgid ""
"The binary sequence of byte values to remove may be any :term:`bytes-like "
"object`. See :meth:`~bytes.removeprefix` for a method that will remove a "
"single prefix string rather than all of a set of characters.  For example::"
msgstr ""
"A sequência binária de valores de bytes a serem removidos pode ser :term:"
"`objeto byte ou similar <bytes-like object>`. Consulte :meth:`~bytes."
"removeprefix` para um método que removerá uma única string de prefixo em vez "
"de todo um conjunto de caracteres. Por exemplo::"

#: ../../library/stdtypes.rst:3077
msgid ""
">>> b'Arthur: three!'.lstrip(b'Arthur: ')\n"
"b'ee!'\n"
">>> b'Arthur: three!'.removeprefix(b'Arthur: ')\n"
"b'three!'"
msgstr ""

#: ../../library/stdtypes.rst:3091
msgid ""
"Return a copy of the object right justified in a sequence of length *width*. "
"Padding is done using the specified *fillbyte* (default is an ASCII space). "
"For :class:`bytes` objects, the original sequence is returned if *width* is "
"less than or equal to ``len(s)``."
msgstr ""
"Retorna uma cópia do objeto alinhado a direita em uma sequência de "
"comprimento *width*. Preenchimento é feito usando o *fillbyte* especificado "
"(o padrão é um espaço ASCII). Para objetos :class:`bytes`, a sequência "
"original é retornada se *width* é menor que ou igual a ``len(s)``."

#: ../../library/stdtypes.rst:3105
msgid ""
"Split the binary sequence into subsequences of the same type, using *sep* as "
"the delimiter string. If *maxsplit* is given, at most *maxsplit* splits are "
"done, the *rightmost* ones.  If *sep* is not specified or ``None``, any "
"subsequence consisting solely of ASCII whitespace is a separator. Except for "
"splitting from the right, :meth:`rsplit` behaves like :meth:`split` which is "
"described in detail below."
msgstr ""
"Divide a sequência binária em subsequência do mesmo tipo, usando *sep* como "
"um delimitador de string. Se *maxsplit* é fornecido, no máximo *maxsplit* "
"divisões são feitas, aquelas que estão *mais à direita*. Se *sep* não é "
"especificado ou é ``None``, qualquer subsequência consistindo unicamente de "
"espaço em branco ASCII é um separador. Exceto por dividir pela direita, :"
"meth:`rsplit` comporta-se como :meth:`split`, o qual é descrito em detalhes "
"abaixo."

#: ../../library/stdtypes.rst:3116
msgid ""
"Return a copy of the sequence with specified trailing bytes removed.  The "
"*chars* argument is a binary sequence specifying the set of byte values to "
"be removed - the name refers to the fact this method is usually used with "
"ASCII characters.  If omitted or ``None``, the *chars* argument defaults to "
"removing ASCII whitespace.  The *chars* argument is not a suffix; rather, "
"all combinations of its values are stripped::"
msgstr ""
"Retorna uma cópia da sequência com bytes especificados no final removidos. O "
"argumento *chars* é uma sequência binária que especifica o conjunto de bytes "
"a serem removidos - o nome refere-se ao fato de este método é usualmente "
"utilizado com caracteres ASCII. Se for omitido ou for ``None``, o argumento "
"*chars* irá remover por padrão os espaços em branco ASCII. O argumento "
"*chars* não é um sufixo; ao contrário disso, todas as combinações dos seus "
"seus valores são removidas::"

#: ../../library/stdtypes.rst:3123
msgid ""
">>> b'   spacious   '.rstrip()\n"
"b'   spacious'\n"
">>> b'mississippi'.rstrip(b'ipz')\n"
"b'mississ'"
msgstr ""

#: ../../library/stdtypes.rst:3128
msgid ""
"The binary sequence of byte values to remove may be any :term:`bytes-like "
"object`. See :meth:`~bytes.removesuffix` for a method that will remove a "
"single suffix string rather than all of a set of characters.  For example::"
msgstr ""
"A sequência binária de valores de bytes a serem removidos pode ser :term:"
"`objeto byte ou similar <bytes-like object>`. Consulte :meth:`~bytes."
"removesuffix` para um método que removerá uma única string de sufixo em vez "
"de todo um conjunto de caracteres. Por exemplo::"

#: ../../library/stdtypes.rst:3133
msgid ""
">>> b'Monty Python'.rstrip(b' Python')\n"
"b'M'\n"
">>> b'Monty Python'.removesuffix(b' Python')\n"
"b'Monty'"
msgstr ""

#: ../../library/stdtypes.rst:3147
msgid ""
"Split the binary sequence into subsequences of the same type, using *sep* as "
"the delimiter string. If *maxsplit* is given and non-negative, at most "
"*maxsplit* splits are done (thus, the list will have at most ``maxsplit+1`` "
"elements).  If *maxsplit* is not specified or is ``-1``, then there is no "
"limit on the number of splits (all possible splits are made)."
msgstr ""
"Divide a sequência binária em subsequências do mesmo tipo, usando *sep* como "
"o delimitador de string. Se *maxsplit* é fornecido e não-negativo, no máximo "
"*maxsplit* divisões são feitas (logo, a lista terá no máximo ``maxsplit+1`` "
"elementos). Se *maxsplit* não é especificado ou é ``-1``, então não existe "
"limite no número de divisões (todas as divisões possíveis são feitas)."

#: ../../library/stdtypes.rst:3153
msgid ""
"If *sep* is given, consecutive delimiters are not grouped together and are "
"deemed to delimit empty subsequences (for example, ``b'1,,2'.split(b',')`` "
"returns ``[b'1', b'', b'2']``).  The *sep* argument may consist of a "
"multibyte sequence as a single delimiter. Splitting an empty sequence with a "
"specified separator returns ``[b'']`` or ``[bytearray(b'')]`` depending on "
"the type of object being split.  The *sep* argument may be any :term:`bytes-"
"like object`."
msgstr ""
"Se *sep* é fornecido, delimitadores consecutivos não são agrupados juntos e "
"eles são destinados para delimitar strings vazias (por exemplo, ``b'1,,2'."
"split(b',')`` retorna ``[b'1', b'', b'2']``). O argumento *sep* pode "
"consistir de uma sequência de múltiplos bytes como um único delimitador. "
"Separar uma sequência vazia com um separador especificado retorna ``[b'']`` "
"ou ``[bytearray(b'')]`` dependendo do tipo do objeto que está sendo "
"separado. O argumento *sep* pode ser qualquer :term:`objeto byte ou similar "
"<bytes-like object>`."

#: ../../library/stdtypes.rst:3163
msgid ""
">>> b'1,2,3'.split(b',')\n"
"[b'1', b'2', b'3']\n"
">>> b'1,2,3'.split(b',', maxsplit=1)\n"
"[b'1', b'2,3']\n"
">>> b'1,2,,3,'.split(b',')\n"
"[b'1', b'2', b'', b'3', b'']\n"
">>> b'1<>2<>3<4'.split(b'<>')\n"
"[b'1', b'2', b'3<4']"
msgstr ""

#: ../../library/stdtypes.rst:3172
msgid ""
"If *sep* is not specified or is ``None``, a different splitting algorithm is "
"applied: runs of consecutive ASCII whitespace are regarded as a single "
"separator, and the result will contain no empty strings at the start or end "
"if the sequence has leading or trailing whitespace.  Consequently, splitting "
"an empty sequence or a sequence consisting solely of ASCII whitespace "
"without a specified separator returns ``[]``."
msgstr ""
"Se *sep* não for especificado ou for ``None``, um algoritmo diferente de "
"separação é aplicado: ocorrências consecutivas de espaços em branco ASCII "
"são consideradas como um separador único, e o resultado não conterá strings "
"vazias no início ou no final, se a sequência tiver espaços em branco no "
"início ou no final. Consequentemente, separar uma sequência vazia ou uma "
"sequência que consiste apenas de espaços em branco ASCII sem um separador "
"especificado, retorna ``[]``."

#: ../../library/stdtypes.rst:3182
msgid ""
">>> b'1 2 3'.split()\n"
"[b'1', b'2', b'3']\n"
">>> b'1 2 3'.split(maxsplit=1)\n"
"[b'1', b'2 3']\n"
">>> b'   1   2   3   '.split()\n"
"[b'1', b'2', b'3']"
msgstr ""

#: ../../library/stdtypes.rst:3193
msgid ""
"Return a copy of the sequence with specified leading and trailing bytes "
"removed. The *chars* argument is a binary sequence specifying the set of "
"byte values to be removed - the name refers to the fact this method is "
"usually used with ASCII characters.  If omitted or ``None``, the *chars* "
"argument defaults to removing ASCII whitespace. The *chars* argument is not "
"a prefix or suffix; rather, all combinations of its values are stripped::"
msgstr ""
"Retorna uma cópia da sequência com os bytes especificados no início e no "
"final removidos. O argumento *chars* é uma sequência binária que especifica "
"o conjunto de bytes a serem removidos - o nome refere-se ao fato que este "
"método é normalmente utilizado com caracteres ASCII. Se for omitido ou for "
"``None``, o argumento *chars* irá remover por padrão os espaços em branco "
"ASCII. O argumento *chars* não é um prefixo, nem um sufixo; ao contrário "
"disso, todas as combinações dos seus seus valores são removidas::"

#: ../../library/stdtypes.rst:3201
msgid ""
">>> b'   spacious   '.strip()\n"
"b'spacious'\n"
">>> b'www.example.com'.strip(b'cmowz.')\n"
"b'example'"
msgstr ""

#: ../../library/stdtypes.rst:3206
msgid ""
"The binary sequence of byte values to remove may be any :term:`bytes-like "
"object`."
msgstr ""
"A sequência binária de valores de bytes a serem removidos pode ser qualquer :"
"term:`objeto byte ou similar <bytes-like object>`."

#: ../../library/stdtypes.rst:3215
msgid ""
"The following methods on bytes and bytearray objects assume the use of ASCII "
"compatible binary formats and should not be applied to arbitrary binary "
"data. Note that all of the bytearray methods in this section do *not* "
"operate in place, and instead produce new objects."
msgstr ""
"O seguintes métodos de bytes e objetos bytearray presumem o uso de formatos "
"binários compatíveis com ASCII e não devem ser aplicados a dados binários "
"arbitrários. Perceba que todos os métodos de bytearray nesta seção *não* "
"alteram os argumentos, e ao invés disso produzem novos objetos."

#: ../../library/stdtypes.rst:3223
msgid ""
"Return a copy of the sequence with each byte interpreted as an ASCII "
"character, and the first byte capitalized and the rest lowercased. Non-ASCII "
"byte values are passed through unchanged."
msgstr ""
"Retorna uma cópia da sequência com cada byte interpretado como um caractere "
"ASCII, e o primeiro byte em letra maiúscula e o resto em letras minúsculas. "
"Valores de bytes que não são ASCII são passados adiante sem mudanças."

#: ../../library/stdtypes.rst:3236
msgid ""
"Return a copy of the sequence where all ASCII tab characters are replaced by "
"one or more ASCII spaces, depending on the current column and the given tab "
"size.  Tab positions occur every *tabsize* bytes (default is 8, giving tab "
"positions at columns 0, 8, 16 and so on).  To expand the sequence, the "
"current column is set to zero and the sequence is examined byte by byte.  If "
"the byte is an ASCII tab character (``b'\\t'``), one or more space "
"characters are inserted in the result until the current column is equal to "
"the next tab position. (The tab character itself is not copied.)  If the "
"current byte is an ASCII newline (``b'\\n'``) or carriage return "
"(``b'\\r'``), it is copied and the current column is reset to zero.  Any "
"other byte value is copied unchanged and the current column is incremented "
"by one regardless of how the byte value is represented when printed::"
msgstr ""
"Retorna uma cópia da sequência onde todos os caracteres de tabulação ASCII "
"são substituídos por um ou mais espaços ASCII, dependendo da coluna atual e "
"do tamanho fornecido para a tabulação. Posições de tabulação ocorrem a cada "
"*tabsize* bytes (o padrão é 8, dada as posições de tabulação nas colunas 0, "
"8, 16 e assim por diante). Para expandir a sequência, a coluna atual é "
"definida como zero e a sequência é examinada byte por byte. Se o byte é um "
"caractere ASCII de tabulação (``b'\\t'``), um ou mais caracteres de espaço "
"são inseridos no resultado até que a coluna atual seja igual a próxima "
"posição de tabulação. (O caractere de tabulação em si não é copiado.) Se o "
"byte atual é um caractere ASCII de nova linha (``b'\\n'``) ou de retorno "
"(``b'\\r'``), ele é copiado e a coluna atual é redefinida para zero. "
"Qualquer outro byte é copiado sem ser modificado e a coluna atual é "
"incrementada em uma unidade independentemente de como o byte é representado "
"quanto é impresso::"

#: ../../library/stdtypes.rst:3250
msgid ""
">>> b'01\\t012\\t0123\\t01234'.expandtabs()\n"
"b'01      012     0123    01234'\n"
">>> b'01\\t012\\t0123\\t01234'.expandtabs(4)\n"
"b'01  012 0123    01234'"
msgstr ""

#: ../../library/stdtypes.rst:3264
msgid ""
"Return ``True`` if all bytes in the sequence are alphabetical ASCII "
"characters or ASCII decimal digits and the sequence is not empty, ``False`` "
"otherwise. Alphabetic ASCII characters are those byte values in the sequence "
"``b'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'``. ASCII decimal "
"digits are those byte values in the sequence ``b'0123456789'``."
msgstr ""
"Retorna ``True`` se todos os bytes na sequência são caracteres alfabéticos "
"ASCII ou dígitos decimais ASCII e a sequência não é vazia, ``False`` caso "
"contrário. Caracteres alfabéticos ASCII são aqueles valores de byte na "
"sequência ``b'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'``. "
"Dígitos decimais ASCII são aqueles valores de byte na sequência "
"``b'0123456789'``."

#: ../../library/stdtypes.rst:3272
msgid ""
">>> b'ABCabc1'.isalnum()\n"
"True\n"
">>> b'ABC abc1'.isalnum()\n"
"False"
msgstr ""

#: ../../library/stdtypes.rst:3281
msgid ""
"Return ``True`` if all bytes in the sequence are alphabetic ASCII characters "
"and the sequence is not empty, ``False`` otherwise.  Alphabetic ASCII "
"characters are those byte values in the sequence "
"``b'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'``."
msgstr ""
"Retorna ``True`` se todos os bytes na sequência são caracteres alfabéticos "
"ASCII e a sequência não é vazia, ``False`` caso contrário. Caracteres "
"alfabéticos ASCII são aqueles cujo valor dos bytes estão na sequência "
"``b'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'``."

#: ../../library/stdtypes.rst:3288
msgid ""
">>> b'ABCabc'.isalpha()\n"
"True\n"
">>> b'ABCabc1'.isalpha()\n"
"False"
msgstr ""

#: ../../library/stdtypes.rst:3297
msgid ""
"Return ``True`` if the sequence is empty or all bytes in the sequence are "
"ASCII, ``False`` otherwise. ASCII bytes are in the range 0-0x7F."
msgstr ""
"Retorna ``True`` se a sequência é vazia ou todos os bytes na sequência são "
"ASCII, ``False`` caso contrário. Bytes ASCII estão no intervalo 0-0x7F."

#: ../../library/stdtypes.rst:3307
msgid ""
"Return ``True`` if all bytes in the sequence are ASCII decimal digits and "
"the sequence is not empty, ``False`` otherwise. ASCII decimal digits are "
"those byte values in the sequence ``b'0123456789'``."
msgstr ""
"Retorna ``True`` se todos os bytes na sequência são dígitos decimais ASCII e "
"a sequência não é vazia, ``False`` caso contrário. Dígitos decimais ASCII "
"são aqueles cujos valores dos bytes estão na sequência ``b'0123456789'``."

#: ../../library/stdtypes.rst:3313
msgid ""
">>> b'1234'.isdigit()\n"
"True\n"
">>> b'1.23'.isdigit()\n"
"False"
msgstr ""

#: ../../library/stdtypes.rst:3322
msgid ""
"Return ``True`` if there is at least one lowercase ASCII character in the "
"sequence and no uppercase ASCII characters, ``False`` otherwise."
msgstr ""
"Retorna ``True`` se existe pelo menos um caractere minúsculo ASCII na "
"sequência e nenhum caractere maiúsculo ASCII, ``False`` caso contrário."

#: ../../library/stdtypes.rst:3327
msgid ""
">>> b'hello world'.islower()\n"
"True\n"
">>> b'Hello world'.islower()\n"
"False"
msgstr ""

#: ../../library/stdtypes.rst:3332 ../../library/stdtypes.rst:3374
#: ../../library/stdtypes.rst:3390 ../../library/stdtypes.rst:3440
#: ../../library/stdtypes.rst:3509
msgid ""
"Lowercase ASCII characters are those byte values in the sequence "
"``b'abcdefghijklmnopqrstuvwxyz'``. Uppercase ASCII characters are those byte "
"values in the sequence ``b'ABCDEFGHIJKLMNOPQRSTUVWXYZ'``."
msgstr ""
"Caracteres minúsculos ASCII são aqueles cujos valores de bytes estão na "
"sequência ``b'abcdefghijklmnopqrstuvwxyz'``. Caracteres maiúsculos ASCII são "
"aqueles cujos valores de bytes estão na sequência "
"``b'ABCDEFGHIJKLMNOPQRSTUVWXYZ'``."

#: ../../library/stdtypes.rst:3340
msgid ""
"Return ``True`` if all bytes in the sequence are ASCII whitespace and the "
"sequence is not empty, ``False`` otherwise.  ASCII whitespace characters are "
"those byte values in the sequence ``b' \\t\\n\\r\\x0b\\f'`` (space, tab, "
"newline, carriage return, vertical tab, form feed)."
msgstr ""
"Retorna ``True`` se todos os bytes na sequência são espaço em branco ASCII e "
"a sequência não é vazia, ``False`` caso contrário. Caracteres de espaço em "
"branco ASCII são aqueles cujos valores de bytes estão na sequência ``b' "
"\\t\\n\\r\\x0b\\f'`` (espaço, tabulação, nova linha, retorno do cursor, "
"tabulação vertical, formulário de entrada)."

#: ../../library/stdtypes.rst:3349
msgid ""
"Return ``True`` if the sequence is ASCII titlecase and the sequence is not "
"empty, ``False`` otherwise. See :meth:`bytes.title` for more details on the "
"definition of \"titlecase\"."
msgstr ""
"Retorna ``True`` se a sequência é titlecased ASCII e a sequência não é "
"vazia, ``False`` caso contrário. Veja :meth:`bytes.title` para mais detalhes "
"sobre a definição de \"titlecased\"."

#: ../../library/stdtypes.rst:3355
msgid ""
">>> b'Hello World'.istitle()\n"
"True\n"
">>> b'Hello world'.istitle()\n"
"False"
msgstr ""

#: ../../library/stdtypes.rst:3364
msgid ""
"Return ``True`` if there is at least one uppercase alphabetic ASCII "
"character in the sequence and no lowercase ASCII characters, ``False`` "
"otherwise."
msgstr ""
"Retorna ``True`` se existe pelo menos um caractere maiúsculo alfabético "
"ASCII na sequência e nenhum caractere minúsculo ASCII, ``False`` caso "
"contrário."

#: ../../library/stdtypes.rst:3369
msgid ""
">>> b'HELLO WORLD'.isupper()\n"
"True\n"
">>> b'Hello world'.isupper()\n"
"False"
msgstr ""

#: ../../library/stdtypes.rst:3382
msgid ""
"Return a copy of the sequence with all the uppercase ASCII characters "
"converted to their corresponding lowercase counterpart."
msgstr ""
"Retorna uma cópia da sequência com todos os caracteres maiúsculos ASCII "
"convertidos para os seus correspondentes caracteres minúsculos."

#: ../../library/stdtypes.rst:3387
msgid ""
">>> b'Hello World'.lower()\n"
"b'hello world'"
msgstr ""

#: ../../library/stdtypes.rst:3407
msgid ""
"Return a list of the lines in the binary sequence, breaking at ASCII line "
"boundaries. This method uses the :term:`universal newlines` approach to "
"splitting lines. Line breaks are not included in the resulting list unless "
"*keepends* is given and true."
msgstr ""
"Retorna uma lista das linhas na sequência binária, quebrando nos limites "
"ASCII das linhas. Este método usa a abordagem de :term:`novas linhas "
"universais <universal newlines>` para separar as linhas. Quebras de linhas "
"não são incluídas na lista resultante a não ser que *keepends* seja "
"fornecido e verdadeiro."

#: ../../library/stdtypes.rst:3414
msgid ""
">>> b'ab c\\n\\nde fg\\rkl\\r\\n'.splitlines()\n"
"[b'ab c', b'', b'de fg', b'kl']\n"
">>> b'ab c\\n\\nde fg\\rkl\\r\\n'.splitlines(keepends=True)\n"
"[b'ab c\\n', b'\\n', b'de fg\\r', b'kl\\r\\n']"
msgstr ""

#: ../../library/stdtypes.rst:3419
msgid ""
"Unlike :meth:`~bytes.split` when a delimiter string *sep* is given, this "
"method returns an empty list for the empty string, and a terminal line break "
"does not result in an extra line::"
msgstr ""
"Ao contrário de :meth:`~bytes.split`, quando uma string delimitadora *sep* é "
"fornecida, este método retorna uma lista vazia para a string vazia, e uma "
"quebra de linha terminal não resulta em uma linha extra::"

#: ../../library/stdtypes.rst:3423
msgid ""
">>> b\"\".split(b'\\n'), b\"Two lines\\n\".split(b'\\n')\n"
"([b''], [b'Two lines', b''])\n"
">>> b\"\".splitlines(), b\"One line\\n\".splitlines()\n"
"([], [b'One line'])"
msgstr ""

#: ../../library/stdtypes.rst:3432
msgid ""
"Return a copy of the sequence with all the lowercase ASCII characters "
"converted to their corresponding uppercase counterpart and vice-versa."
msgstr ""
"Retorna uma cópia da sequência com todos os caracteres minúsculos ASCII "
"convertidos para caracteres maiúsculos correspondentes, e vice-versa."

#: ../../library/stdtypes.rst:3437
msgid ""
">>> b'Hello World'.swapcase()\n"
"b'hELLO wORLD'"
msgstr ""

#: ../../library/stdtypes.rst:3444
msgid ""
"Unlike :func:`str.swapcase`, it is always the case that ``bin.swapcase()."
"swapcase() == bin`` for the binary versions. Case conversions are "
"symmetrical in ASCII, even though that is not generally true for arbitrary "
"Unicode code points."
msgstr ""

#: ../../library/stdtypes.rst:3458
msgid ""
"Return a titlecased version of the binary sequence where words start with an "
"uppercase ASCII character and the remaining characters are lowercase. "
"Uncased byte values are left unmodified."
msgstr ""
"Retorna uma versão titlecased da sequência binária, onde palavras iniciam "
"com um caractere ASCII com letra maiúscula e os caracteres restantes são em "
"letras minúsculas. Bytes quem não possuem diferença entre maiúscula/"
"minúscula não são alterados."

#: ../../library/stdtypes.rst:3464
msgid ""
">>> b'Hello world'.title()\n"
"b'Hello World'"
msgstr ""

#: ../../library/stdtypes.rst:3467
msgid ""
"Lowercase ASCII characters are those byte values in the sequence "
"``b'abcdefghijklmnopqrstuvwxyz'``. Uppercase ASCII characters are those byte "
"values in the sequence ``b'ABCDEFGHIJKLMNOPQRSTUVWXYZ'``. All other byte "
"values are uncased."
msgstr ""
"Caracteres minúsculos ASCII são aqueles cujos valores de byte estão na "
"sequência ``b'abcdefghijklmnopqrstuvwxyz'``. Caracteres maiúsculos ASCII são "
"aqueles cujos valores de byte estão na sequência "
"``b'ABCDEFGHIJKLMNOPQRSTUVWXYZ'``. Todos os outros valores de bytes ignoram "
"maiúsculas/minúsculas."

#: ../../library/stdtypes.rst:3477
msgid ""
">>> b\"they're bill's friends from the UK\".title()\n"
"b\"They'Re Bill'S Friends From The Uk\""
msgstr ""

#: ../../library/stdtypes.rst:3480
msgid ""
"A workaround for apostrophes can be constructed using regular expressions::"
msgstr ""
"Uma solução alternativa para os apóstrofes pode ser construída usando "
"expressões regulares::"

#: ../../library/stdtypes.rst:3482
msgid ""
">>> import re\n"
">>> def titlecase(s):\n"
"...     return re.sub(rb\"[A-Za-z]+('[A-Za-z]+)?\",\n"
"...                   lambda mo: mo.group(0)[0:1].upper() +\n"
"...                              mo.group(0)[1:].lower(),\n"
"...                   s)\n"
"...\n"
">>> titlecase(b\"they're bill's friends.\")\n"
"b\"They're Bill's Friends.\""
msgstr ""

#: ../../library/stdtypes.rst:3501
msgid ""
"Return a copy of the sequence with all the lowercase ASCII characters "
"converted to their corresponding uppercase counterpart."
msgstr ""
"Retorna uma cópia da sequência com todos os caracteres minúsculos ASCII "
"convertidos para sua contraparte maiúscula correspondente."

#: ../../library/stdtypes.rst:3506
msgid ""
">>> b'Hello World'.upper()\n"
"b'HELLO WORLD'"
msgstr ""

#: ../../library/stdtypes.rst:3522
msgid ""
"Return a copy of the sequence left filled with ASCII ``b'0'`` digits to make "
"a sequence of length *width*. A leading sign prefix (``b'+'``/ ``b'-'``) is "
"handled by inserting the padding *after* the sign character rather than "
"before. For :class:`bytes` objects, the original sequence is returned if "
"*width* is less than or equal to ``len(seq)``."
msgstr ""
"Retorna uma cópia da sequência preenchida a esquerda com dígitos ``b'0'`` "
"ASCII para produzir uma sequência se comprimento *width*. Um sinal de "
"prefixo inicial (``b'+'``/ ``b'-'``) é controlado através da inserção de "
"preenchimento *depois* do caractere de sinal, ao invés de antes. Para "
"objetos :class:`bytes`, a sequência original é retornada se *width* é menor "
"que ou igual a ``len(seq)``."

#: ../../library/stdtypes.rst:3530
msgid ""
">>> b\"42\".zfill(5)\n"
"b'00042'\n"
">>> b\"-42\".zfill(5)\n"
"b'-0042'"
msgstr ""

#: ../../library/stdtypes.rst:3544
msgid "``printf``-style Bytes Formatting"
msgstr "Estilo de Formatação de bytes ``printf``-style"

#: ../../library/stdtypes.rst:3561
msgid ""
"The formatting operations described here exhibit a variety of quirks that "
"lead to a number of common errors (such as failing to display tuples and "
"dictionaries correctly).  If the value being printed may be a tuple or "
"dictionary, wrap it in a tuple."
msgstr ""
"As operações de formatação descritas aqui exibem uma variedade de "
"peculiaridades que levam a uma série de erros comuns (como a falha na "
"exibição de Tuplas e Dicionários corretamente). Se o valor que está sendo "
"impresso puder ser uma tupla ou dicionário, envolva-o numa tupla."

#: ../../library/stdtypes.rst:3566
msgid ""
"Bytes objects (``bytes``/``bytearray``) have one unique built-in operation: "
"the ``%`` operator (modulo). This is also known as the bytes *formatting* or "
"*interpolation* operator. Given ``format % values`` (where *format* is a "
"bytes object), ``%`` conversion specifications in *format* are replaced with "
"zero or more elements of *values*. The effect is similar to using the :c:"
"func:`sprintf` in the C language."
msgstr ""
"Objetos Bytes (``bytes``/``bytearray``) possuem uma operação integrada "
"exclusiva: o operador ``%`` (modulo). Isso também é conhecido como o bytes "
"de *formatação* ou o operador de *interpolação*. Dado ``format % values`` "
"(onde *format* é um objeto bytes), as especificações de conversão ``%`` em "
"*format* são substituídas por zero ou mais elementos de *values*. O efeito é "
"semelhante ao uso da função :c:func:`sprintf` na linguagem C."

#: ../../library/stdtypes.rst:3573
msgid ""
"If *format* requires a single argument, *values* may be a single non-tuple "
"object. [5]_  Otherwise, *values* must be a tuple with exactly the number of "
"items specified by the format bytes object, or a single mapping object (for "
"example, a dictionary)."
msgstr ""
"Se *format* requer um único argumento, *values* poderá ser um único objeto "
"não-tuple. [5]_ Caso contrário, *values* deverá ser uma tupla com exatamente "
"o número de itens especificados pelo objeto de formatação de Bytes, ou um "
"único objeto de mapeamento (por exemplo, um dicionário)."

#: ../../library/stdtypes.rst:3607
msgid ""
"When the right argument is a dictionary (or other mapping type), then the "
"formats in the bytes object *must* include a parenthesised mapping key into "
"that dictionary inserted immediately after the ``'%'`` character. The "
"mapping key selects the value to be formatted from the mapping.  For example:"
msgstr ""
"Quando o argumento a direita é um dicionário (ou outro tipo de mapeamento), "
"então o formato no objeto bytes *deve* incluir um mapeamento de chaves entre "
"parêntesis neste dicionário inserido imediatamente após o caractere ``'%'``. "
"O mapeamento de chaves seleciona o valor a ser formatado a partir do "
"mapeamento. Por exemplo:"

#: ../../library/stdtypes.rst:3681
msgid "Single byte (accepts integer or single byte objects)."
msgstr "Byte simples (aceita objetos inteiros ou de byte único)."

#: ../../library/stdtypes.rst:3684
msgid "``'b'``"
msgstr "``'b'``"

#: ../../library/stdtypes.rst:3684
msgid ""
"Bytes (any object that follows the :ref:`buffer protocol <bufferobjects>` or "
"has :meth:`~object.__bytes__`)."
msgstr ""
"Bytes (qualquer objeto que segue o :ref:`buffer protocol <bufferobjects>` o "
"que possui :meth:`~object.__bytes__`)."

#: ../../library/stdtypes.rst:3688
msgid ""
"``'s'`` is an alias for ``'b'`` and should only be used for Python2/3 code "
"bases."
msgstr ""
"``'s'`` é um alias para ``'b'`` e só deve ser usado para bases de código "
"Python2/3."

#: ../../library/stdtypes.rst:3691
msgid ""
"Bytes (converts any Python object using ``repr(obj).encode('ascii', "
"'backslashreplace')``)."
msgstr ""
"Bytes (converte qualquer objeto Python usando ``repr(obj).encode('ascii', "
"'backslashreplace')``)."

#: ../../library/stdtypes.rst:3694
msgid ""
"``'r'`` is an alias for ``'a'`` and should only be used for Python2/3 code "
"bases."
msgstr ""
"``'r'`` é um alias para ``'a'`` e só deve ser usado para bases de código "
"Python2/3."

#: ../../library/stdtypes.rst:3694
msgid "\\(7)"
msgstr "\\(7)"

#: ../../library/stdtypes.rst:3729
msgid "``b'%s'`` is deprecated, but will not be removed during the 3.x series."
msgstr ""
"``b'%s'`` está descontinuado, mas não será removido durante a versão 3.x."

#: ../../library/stdtypes.rst:3732
msgid "``b'%r'`` is deprecated, but will not be removed during the 3.x series."
msgstr "``b'%r'`` entrou em desuso, mas não serão removidos na versão 3.x."

#: ../../library/stdtypes.rst:3744
msgid ":pep:`461` - Adding % formatting to bytes and bytearray"
msgstr ":pep:`461` - Adicionar formatação % para to bytes e bytearray"

#: ../../library/stdtypes.rst:3751
msgid "Memory Views"
msgstr "Memory Views"

#: ../../library/stdtypes.rst:3753
msgid ""
":class:`memoryview` objects allow Python code to access the internal data of "
"an object that supports the :ref:`buffer protocol <bufferobjects>` without "
"copying."
msgstr ""
"O objeto :class:`memoryview` permite que o código Python acesse os dados "
"internos de um objeto que suporte o :ref:`buffer protocol <bufferobjects>` "
"sem copiá-lo."

#: ../../library/stdtypes.rst:3759
msgid ""
"Create a :class:`memoryview` that references *object*.  *object* must "
"support the buffer protocol.  Built-in objects that support the buffer "
"protocol include :class:`bytes` and :class:`bytearray`."
msgstr ""
"Cria uma :class:`memoryview` que referencia *object*. *object* deve ter "
"suporte ao protocolo de buffer. Objetos embutidos que suportam o protocolo "
"de buffer incluem :class:`bytes` e :class:`bytearray`."

#: ../../library/stdtypes.rst:3763
msgid ""
"A :class:`memoryview` has the notion of an *element*, which is the atomic "
"memory unit handled by the originating *object*.  For many simple types such "
"as :class:`bytes` and :class:`bytearray`, an element is a single byte, but "
"other types such as :class:`array.array` may have bigger elements."
msgstr ""
"Uma :class:`memoryview` tem a noção de um *elemento*, o qual é a unidade de "
"memória atômica manipulada pelo objeto de origem *object*. Para muitos tipos "
"simples tais como :class:`bytes` e :class:`bytearray`, um elemento é um byte "
"único, mas outros tipos tais como :class:`array.array` podem ter elementos "
"maiores."

#: ../../library/stdtypes.rst:3768
msgid ""
"``len(view)`` is equal to the length of :class:`~memoryview.tolist`, which "
"is the nested list representation of the view. If ``view.ndim = 1``, this is "
"equal to the number of elements in the view."
msgstr ""
"``len(view)`` é igual ao comprimento de :class:`~memoryview.tolist`, que é a "
"representação de lista aninhada da view. Se ``view.ndim = 1``, isso é igual "
"ao número de elementos na visualização."

#: ../../library/stdtypes.rst:3772
msgid ""
"If ``view.ndim == 0``, ``len(view)`` now raises :exc:`TypeError` instead of "
"returning 1."
msgstr ""
"Se ``view.ndim == 0``, ``len(view)`` agora levanta :exc:`TypeError` em vez "
"de retornar 1."

#: ../../library/stdtypes.rst:3775
msgid ""
"The :class:`~memoryview.itemsize` attribute will give you the number of "
"bytes in a single element."
msgstr ""
"O atributo :class:`~memoryview.itemsize` vai lhe dar um número de bytes em "
"um único elemento."

#: ../../library/stdtypes.rst:3778
msgid ""
"A :class:`memoryview` supports slicing and indexing to expose its data. One-"
"dimensional slicing will result in a subview::"
msgstr ""
"Um :class:`memoryview` suporta fatiamento e indexação para expor seus dados. "
"Fatiamento unidimensional irá resultar em uma subview::"

#: ../../library/stdtypes.rst:3781
msgid ""
">>> v = memoryview(b'abcefg')\n"
">>> v[1]\n"
"98\n"
">>> v[-1]\n"
"103\n"
">>> v[1:4]\n"
"<memory at 0x7f3ddc9f4350>\n"
">>> bytes(v[1:4])\n"
"b'bce'"
msgstr ""

#: ../../library/stdtypes.rst:3791
msgid ""
"If :class:`~memoryview.format` is one of the native format specifiers from "
"the :mod:`struct` module, indexing with an integer or a tuple of integers is "
"also supported and returns a single *element* with the correct type.  One-"
"dimensional memoryviews can be indexed with an integer or a one-integer "
"tuple.  Multi-dimensional memoryviews can be indexed with tuples of exactly "
"*ndim* integers where *ndim* is the number of dimensions.  Zero-dimensional "
"memoryviews can be indexed with the empty tuple."
msgstr ""
"Se :class:`~memoryview.format` é um dos especificadores de formatação "
"nativos do módulo :mod:`struct`, indexar com um inteiro ou uma tupla de "
"inteiros também é suportado, e retorna um *element* único com o tipo "
"correto. Memoryviews unidimensionais podem ser indexadas com um inteiro ou "
"uma tupla contendo um inteiro. Memoryviews multi-dimensionais podem ser "
"indexadas com tuplas de exatamente *ndim* inteiros, onde *ndim* é o número "
"de dimensões. Memoryviews zero-dimensionais podem ser indexadas com uma "
"tupla vazia."

#: ../../library/stdtypes.rst:3800
msgid "Here is an example with a non-byte format::"
msgstr "Aqui temos um exemplo usando um formato não-byte::"

#: ../../library/stdtypes.rst:3802
msgid ""
">>> import array\n"
">>> a = array.array('l', [-11111111, 22222222, -33333333, 44444444])\n"
">>> m = memoryview(a)\n"
">>> m[0]\n"
"-11111111\n"
">>> m[-1]\n"
"44444444\n"
">>> m[::2].tolist()\n"
"[-11111111, -33333333]"
msgstr ""

#: ../../library/stdtypes.rst:3812
msgid ""
"If the underlying object is writable, the memoryview supports one-"
"dimensional slice assignment. Resizing is not allowed::"
msgstr ""
"Se o objeto subjacente é gravável, a memoryview suporta atribuição de fatias "
"unidimensionais. Redimensionamento não é permitido::"

#: ../../library/stdtypes.rst:3815
msgid ""
">>> data = bytearray(b'abcefg')\n"
">>> v = memoryview(data)\n"
">>> v.readonly\n"
"False\n"
">>> v[0] = ord(b'z')\n"
">>> data\n"
"bytearray(b'zbcefg')\n"
">>> v[1:4] = b'123'\n"
">>> data\n"
"bytearray(b'z123fg')\n"
">>> v[2:3] = b'spam'\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"ValueError: memoryview assignment: lvalue and rvalue have different "
"structures\n"
">>> v[2:6] = b'spam'\n"
">>> data\n"
"bytearray(b'z1spam')"
msgstr ""

#: ../../library/stdtypes.rst:3833
msgid ""
"One-dimensional memoryviews of :term:`hashable` (read-only) types with "
"formats 'B', 'b' or 'c' are also hashable. The hash is defined as ``hash(m) "
"== hash(m.tobytes())``::"
msgstr ""
"Memoryviews unidimensionais de tipos :term:`hasheáveis <hasheável>` (somente "
"leitura) com formatos 'B', 'b' ou 'c' também são hasheáveis. O hash é "
"definido como ``hash(m) == hash(m.tobytes())``::"

#: ../../library/stdtypes.rst:3837
msgid ""
">>> v = memoryview(b'abcefg')\n"
">>> hash(v) == hash(b'abcefg')\n"
"True\n"
">>> hash(v[2:4]) == hash(b'ce')\n"
"True\n"
">>> hash(v[::-2]) == hash(b'abcefg'[::-2])\n"
"True"
msgstr ""

#: ../../library/stdtypes.rst:3845
msgid ""
"One-dimensional memoryviews can now be sliced. One-dimensional memoryviews "
"with formats 'B', 'b' or 'c' are now :term:`hashable`."
msgstr ""
"Memoryviews unidimensionais agora podem ser fatiadas. Memoryviews "
"unidimensionais com formatos 'B', 'b' ou 'c' agora são :term:`hasheáveis "
"<hasheável>`."

#: ../../library/stdtypes.rst:3849
msgid ""
"memoryview is now registered automatically with :class:`collections.abc."
"Sequence`"
msgstr ""
"O memoryview agora é registrado automaticamente como uma classe :class:"
"`collections.abc.Sequence`"

#: ../../library/stdtypes.rst:3853
msgid "memoryviews can now be indexed with tuple of integers."
msgstr ""
"Atualmente, os memoryvies podem ser indexadas com uma tupla de números "
"inteiros."

#: ../../library/stdtypes.rst:3856
msgid ":class:`memoryview` has several methods:"
msgstr ":class:`memoryview` possui vários métodos:"

#: ../../library/stdtypes.rst:3860
msgid ""
"A memoryview and a :pep:`3118` exporter are equal if their shapes are "
"equivalent and if all corresponding values are equal when the operands' "
"respective format codes are interpreted using :mod:`struct` syntax."
msgstr ""
"Uma memoryview e um exportador :pep:`3118` são iguais se as suas formas são "
"equivalentes e se todos os valores correspondentes são iguais quando os "
"códigos de formatação dos respectivos operadores são interpretados usando a "
"sintaxe :mod:`struct`."

#: ../../library/stdtypes.rst:3864
msgid ""
"For the subset of :mod:`struct` format strings currently supported by :meth:"
"`tolist`, ``v`` and ``w`` are equal if ``v.tolist() == w.tolist()``::"
msgstr ""
"Para o subconjunto :mod:`struct` a formatação de Strings atualmente "
"suportadas por :meth:`tolist`, ``v`` e ``w`` são iguais se ``v.tolist() == w."
"tolist()``::"

#: ../../library/stdtypes.rst:3867
msgid ""
">>> import array\n"
">>> a = array.array('I', [1, 2, 3, 4, 5])\n"
">>> b = array.array('d', [1.0, 2.0, 3.0, 4.0, 5.0])\n"
">>> c = array.array('b', [5, 3, 1])\n"
">>> x = memoryview(a)\n"
">>> y = memoryview(b)\n"
">>> x == a == y == b\n"
"True\n"
">>> x.tolist() == a.tolist() == y.tolist() == b.tolist()\n"
"True\n"
">>> z = y[::-2]\n"
">>> z == c\n"
"True\n"
">>> z.tolist() == c.tolist()\n"
"True"
msgstr ""

#: ../../library/stdtypes.rst:3883
msgid ""
"If either format string is not supported by the :mod:`struct` module, then "
"the objects will always compare as unequal (even if the format strings and "
"buffer contents are identical)::"
msgstr ""
"Se qualquer string de formatação não for suportada pelo módulo :mod:"
"`struct`, então os objetos irão sempre comparar como diferentes (mesmo se as "
"strings de formatação e o conteúdo do buffer são idênticos)::"

#: ../../library/stdtypes.rst:3887
msgid ""
">>> from ctypes import BigEndianStructure, c_long\n"
">>> class BEPoint(BigEndianStructure):\n"
"...     _fields_ = [(\"x\", c_long), (\"y\", c_long)]\n"
"...\n"
">>> point = BEPoint(100, 200)\n"
">>> a = memoryview(point)\n"
">>> b = memoryview(point)\n"
">>> a == point\n"
"False\n"
">>> a == b\n"
"False"
msgstr ""

#: ../../library/stdtypes.rst:3899
msgid ""
"Note that, as with floating-point numbers, ``v is w`` does *not* imply ``v "
"== w`` for memoryview objects."
msgstr ""
"Perceba que, assim como com números de ponto flutuante, ``v is w`` *não* "
"implica em ``v == w`` para objetos memoryview."

#: ../../library/stdtypes.rst:3902
msgid ""
"Previous versions compared the raw memory disregarding the item format and "
"the logical array structure."
msgstr ""
"Versões anteriores comparavam a memória bruta desconsiderando o formato do "
"item e estrutura lógica do array."

#: ../../library/stdtypes.rst:3908
msgid ""
"Return the data in the buffer as a bytestring.  This is equivalent to "
"calling the :class:`bytes` constructor on the memoryview. ::"
msgstr ""
"Retorna os dados no buffer como um bytestring. Isso é equivalente a chamar o "
"construtor de :class:`bytes` na memoryview. ::"

#: ../../library/stdtypes.rst:3911
msgid ""
">>> m = memoryview(b\"abc\")\n"
">>> m.tobytes()\n"
"b'abc'\n"
">>> bytes(m)\n"
"b'abc'"
msgstr ""

#: ../../library/stdtypes.rst:3917
msgid ""
"For non-contiguous arrays the result is equal to the flattened list "
"representation with all elements converted to bytes. :meth:`tobytes` "
"supports all format strings, including those that are not in :mod:`struct` "
"module syntax."
msgstr ""
"Para arrays não contíguos, o resultado é igual a representação de lista "
"achatada com todos os elementos convertidos para bytes. :meth:`tobytes` "
"suporta todos os formatos de strings, incluindo aqueles que não estão na "
"sintaxe do módulo :mod:`struct`."

#: ../../library/stdtypes.rst:3922
msgid ""
"*order* can be {'C', 'F', 'A'}.  When *order* is 'C' or 'F', the data of the "
"original array is converted to C or Fortran order. For contiguous views, 'A' "
"returns an exact copy of the physical memory. In particular, in-memory "
"Fortran order is preserved. For non-contiguous views, the data is converted "
"to C first. *order=None* is the same as *order='C'*."
msgstr ""
"*order* pode ser {'C', 'F', 'A'}. Quando *order* é 'C' ou 'F', os dados do "
"array original são convertidos para a ordem de C our Fortran. Para views "
"contígua, 'A' retorna uma cópia exata da memória física. Em particular, "
"ordem de Fortran em memória é preservada. Para views não contígua, os dados "
"são convertidos primeiro para C. *order=None* é o mesmo que *order='C'*."

#: ../../library/stdtypes.rst:3931
msgid ""
"Return a string object containing two hexadecimal digits for each byte in "
"the buffer. ::"
msgstr ""
"Retorna um objeto string contendo dois dígitos hexadecimais para cada byte "
"no buffer. ::"

#: ../../library/stdtypes.rst:3934
msgid ""
">>> m = memoryview(b\"abc\")\n"
">>> m.hex()\n"
"'616263'"
msgstr ""

#: ../../library/stdtypes.rst:3940
msgid ""
"Similar to :meth:`bytes.hex`, :meth:`memoryview.hex` now supports optional "
"*sep* and *bytes_per_sep* parameters to insert separators between bytes in "
"the hex output."
msgstr ""
"Similar a :meth:`bytes.hex`, :meth:`memoryview.hex` agora suporta os "
"parâmetros opcionais *sep* e *bytes_per_sep* para inserir separadores entre "
"bytes na saída hexadecimal."

#: ../../library/stdtypes.rst:3947
msgid "Return the data in the buffer as a list of elements. ::"
msgstr "Retorna os dados no buffer como uma lista de elementos. ::"

#: ../../library/stdtypes.rst:3949
msgid ""
">>> memoryview(b'abc').tolist()\n"
"[97, 98, 99]\n"
">>> import array\n"
">>> a = array.array('d', [1.1, 2.2, 3.3])\n"
">>> m = memoryview(a)\n"
">>> m.tolist()\n"
"[1.1, 2.2, 3.3]"
msgstr ""

#: ../../library/stdtypes.rst:3957
msgid ""
":meth:`tolist` now supports all single character native formats in :mod:"
"`struct` module syntax as well as multi-dimensional representations."
msgstr ""
":meth:`tolist` agora suporta todos os formatos nativos de caracteres únicos "
"na sintaxe do módulo :mod:`struct`, assim como representações multi-"
"dimensionais."

#: ../../library/stdtypes.rst:3964
msgid ""
"Return a readonly version of the memoryview object.  The original memoryview "
"object is unchanged. ::"
msgstr ""
"Retorna uma versão somente leitura do objeto memoryview. O objeto memoryview "
"original não é alterado. ::"

#: ../../library/stdtypes.rst:3967
msgid ""
">>> m = memoryview(bytearray(b'abc'))\n"
">>> mm = m.toreadonly()\n"
">>> mm.tolist()\n"
"[97, 98, 99]\n"
">>> mm[0] = 42\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"TypeError: cannot modify read-only memory\n"
">>> m[0] = 43\n"
">>> mm.tolist()\n"
"[43, 98, 99]"
msgstr ""

#: ../../library/stdtypes.rst:3983
msgid ""
"Release the underlying buffer exposed by the memoryview object.  Many "
"objects take special actions when a view is held on them (for example, a :"
"class:`bytearray` would temporarily forbid resizing); therefore, calling "
"release() is handy to remove these restrictions (and free any dangling "
"resources) as soon as possible."
msgstr ""
"Libera o buffer subjacente exposto pelo objeto memoryview. Muitos objetos "
"aceitam ações especiais quando a view é mantida com eles (por exemplo, um :"
"class:`bytearray` iria temporariamente proibir o redimensionamento); "
"portanto, chamar release() é útil para remover essas restrições (e liberar "
"quaisquer recursos pendurados) o mais breve possível."

#: ../../library/stdtypes.rst:3989
msgid ""
"After this method has been called, any further operation on the view raises "
"a :class:`ValueError` (except :meth:`release` itself which can be called "
"multiple times)::"
msgstr ""

#: ../../library/stdtypes.rst:3993
msgid ""
">>> m = memoryview(b'abc')\n"
">>> m.release()\n"
">>> m[0]\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"ValueError: operation forbidden on released memoryview object"
msgstr ""

#: ../../library/stdtypes.rst:4000
msgid ""
"The context management protocol can be used for a similar effect, using the "
"``with`` statement::"
msgstr ""
"O protocolo de gerenciamento de contexto pode ser usado para efeitos "
"similares, usando a instrução ``with``::"

#: ../../library/stdtypes.rst:4003
msgid ""
">>> with memoryview(b'abc') as m:\n"
"...     m[0]\n"
"...\n"
"97\n"
">>> m[0]\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"ValueError: operation forbidden on released memoryview object"
msgstr ""

#: ../../library/stdtypes.rst:4016
msgid ""
"Cast a memoryview to a new format or shape. *shape* defaults to "
"``[byte_length//new_itemsize]``, which means that the result view will be "
"one-dimensional. The return value is a new memoryview, but the buffer itself "
"is not copied. Supported casts are 1D -> C-:term:`contiguous` and C-"
"contiguous -> 1D."
msgstr ""
"Converte uma memoryview para um novo formato ou forma. *shape* por padrão é "
"``[byte_length//new_itemsize]``, o que significa que a visão resultante será "
"unidimensional. O valor de retorno é uma nova memoryview, mas o buffer por "
"si mesmo não é copiado. Conversões suportadas são 1D -> C-:term:`contíguo "
"<contiguous>` r C-contíguo -> 1D."

#: ../../library/stdtypes.rst:4022
msgid ""
"The destination format is restricted to a single element native format in :"
"mod:`struct` syntax. One of the formats must be a byte format ('B', 'b' or "
"'c'). The byte length of the result must be the same as the original length. "
"Note that all byte lengths may depend on the operating system."
msgstr ""
"O formato de destino é restrito a um elemento em formato nativo na sintaxe :"
"mod:`struct`. Um dos formatos deve ser um formato de byte ('B', 'b' ou 'c'). "
"O comprimento de bytes do resultado deve ser o mesmo que o comprimento "
"original. Observe que todos os comprimentos de bytes podem depender do "
"sistema operacional."

#: ../../library/stdtypes.rst:4028
msgid "Cast 1D/long to 1D/unsigned bytes::"
msgstr "Converte de 1D/long para 1D/unsigned bytes::"

#: ../../library/stdtypes.rst:4030
msgid ""
">>> import array\n"
">>> a = array.array('l', [1,2,3])\n"
">>> x = memoryview(a)\n"
">>> x.format\n"
"'l'\n"
">>> x.itemsize\n"
"8\n"
">>> len(x)\n"
"3\n"
">>> x.nbytes\n"
"24\n"
">>> y = x.cast('B')\n"
">>> y.format\n"
"'B'\n"
">>> y.itemsize\n"
"1\n"
">>> len(y)\n"
"24\n"
">>> y.nbytes\n"
"24"
msgstr ""

#: ../../library/stdtypes.rst:4051
msgid "Cast 1D/unsigned bytes to 1D/char::"
msgstr "Converte de 1D/unsigned bytes para 1D/char::"

#: ../../library/stdtypes.rst:4053
msgid ""
">>> b = bytearray(b'zyz')\n"
">>> x = memoryview(b)\n"
">>> x[0] = b'a'\n"
"Traceback (most recent call last):\n"
"  ...\n"
"TypeError: memoryview: invalid type for format 'B'\n"
">>> y = x.cast('c')\n"
">>> y[0] = b'a'\n"
">>> b\n"
"bytearray(b'ayz')"
msgstr ""

#: ../../library/stdtypes.rst:4064
msgid "Cast 1D/bytes to 3D/ints to 1D/signed char::"
msgstr "Converte de 1D/bytes para 3D/ints para 1D/signed char::"

#: ../../library/stdtypes.rst:4066
msgid ""
">>> import struct\n"
">>> buf = struct.pack(\"i\"*12, *list(range(12)))\n"
">>> x = memoryview(buf)\n"
">>> y = x.cast('i', shape=[2,2,3])\n"
">>> y.tolist()\n"
"[[[0, 1, 2], [3, 4, 5]], [[6, 7, 8], [9, 10, 11]]]\n"
">>> y.format\n"
"'i'\n"
">>> y.itemsize\n"
"4\n"
">>> len(y)\n"
"2\n"
">>> y.nbytes\n"
"48\n"
">>> z = y.cast('b')\n"
">>> z.format\n"
"'b'\n"
">>> z.itemsize\n"
"1\n"
">>> len(z)\n"
"48\n"
">>> z.nbytes\n"
"48"
msgstr ""

#: ../../library/stdtypes.rst:4090
msgid "Cast 1D/unsigned long to 2D/unsigned long::"
msgstr "Converte 1D/unsigned long para 2D/unsigned long::"

#: ../../library/stdtypes.rst:4092
msgid ""
">>> buf = struct.pack(\"L\"*6, *list(range(6)))\n"
">>> x = memoryview(buf)\n"
">>> y = x.cast('L', shape=[2,3])\n"
">>> len(y)\n"
"2\n"
">>> y.nbytes\n"
"48\n"
">>> y.tolist()\n"
"[[0, 1, 2], [3, 4, 5]]"
msgstr ""

#: ../../library/stdtypes.rst:4104
msgid "The source format is no longer restricted when casting to a byte view."
msgstr ""
"O formato fonte não é mais restrito ao converter para uma visão de byte."

#: ../../library/stdtypes.rst:4107
msgid "There are also several readonly attributes available:"
msgstr "Existem também diversos atributos somente leitura disponíveis:"

#: ../../library/stdtypes.rst:4111
msgid "The underlying object of the memoryview::"
msgstr "O objeto subjacente da memoryview::"

#: ../../library/stdtypes.rst:4113
msgid ""
">>> b  = bytearray(b'xyz')\n"
">>> m = memoryview(b)\n"
">>> m.obj is b\n"
"True"
msgstr ""

#: ../../library/stdtypes.rst:4122
msgid ""
"``nbytes == product(shape) * itemsize == len(m.tobytes())``. This is the "
"amount of space in bytes that the array would use in a contiguous "
"representation. It is not necessarily equal to ``len(m)``::"
msgstr ""
"``nbytes == product(shape) * itemsize == len(m.tobytes())``. Este é a "
"quantidade de espaço em bytes que o array deve usar em uma representação "
"contígua. Ela não é necessariamente igual a ``len(m)``::"

#: ../../library/stdtypes.rst:4126
msgid ""
">>> import array\n"
">>> a = array.array('i', [1,2,3,4,5])\n"
">>> m = memoryview(a)\n"
">>> len(m)\n"
"5\n"
">>> m.nbytes\n"
"20\n"
">>> y = m[::2]\n"
">>> len(y)\n"
"3\n"
">>> y.nbytes\n"
"12\n"
">>> len(y.tobytes())\n"
"12"
msgstr ""

#: ../../library/stdtypes.rst:4141
msgid "Multi-dimensional arrays::"
msgstr "Arrays Multi-dimensional::"

#: ../../library/stdtypes.rst:4143
msgid ""
">>> import struct\n"
">>> buf = struct.pack(\"d\"*12, *[1.5*x for x in range(12)])\n"
">>> x = memoryview(buf)\n"
">>> y = x.cast('d', shape=[3,4])\n"
">>> y.tolist()\n"
"[[0.0, 1.5, 3.0, 4.5], [6.0, 7.5, 9.0, 10.5], [12.0, 13.5, 15.0, 16.5]]\n"
">>> len(y)\n"
"3\n"
">>> y.nbytes\n"
"96"
msgstr ""

#: ../../library/stdtypes.rst:4158
msgid "A bool indicating whether the memory is read only."
msgstr "Um bool que indica se a memória é somente leitura."

#: ../../library/stdtypes.rst:4162
msgid ""
"A string containing the format (in :mod:`struct` module style) for each "
"element in the view. A memoryview can be created from exporters with "
"arbitrary format strings, but some methods (e.g. :meth:`tolist`) are "
"restricted to native single element formats."
msgstr ""
"Uma string contendo o formato (no estilo do módulo :mod:`struct`) para cada "
"elemento na visão. Uma memoryview pode ser criada a partir de exportadores "
"com strings de formato arbitrário, mas alguns métodos (ex: :meth:`tolist`) "
"são restritos a formatos de elementos nativos."

#: ../../library/stdtypes.rst:4167
msgid ""
"format ``'B'`` is now handled according to the struct module syntax. This "
"means that ``memoryview(b'abc')[0] == b'abc'[0] == 97``."
msgstr ""
"formato ``'B'`` agora é tratado de acordo com a sintaxe do módulo struct. "
"Isso significa que ``memoryview(b'abc')[0] == b'abc'[0] == 97``."

#: ../../library/stdtypes.rst:4173
msgid "The size in bytes of each element of the memoryview::"
msgstr "O tamanho em Bytes de cada elemento do memoryview::"

#: ../../library/stdtypes.rst:4175
msgid ""
">>> import array, struct\n"
">>> m = memoryview(array.array('H', [32000, 32001, 32002]))\n"
">>> m.itemsize\n"
"2\n"
">>> m[0]\n"
"32000\n"
">>> struct.calcsize('H') == m.itemsize\n"
"True"
msgstr ""

#: ../../library/stdtypes.rst:4186
msgid ""
"An integer indicating how many dimensions of a multi-dimensional array the "
"memory represents."
msgstr ""
"Um número inteiro que indica quantas dimensões de uma matriz "
"multidimensional a memória representa."

#: ../../library/stdtypes.rst:4191
msgid ""
"A tuple of integers the length of :attr:`ndim` giving the shape of the "
"memory as an N-dimensional array."
msgstr ""
"Uma tupla de inteiros de comprimento :attr:`ndim` dando a forma da memória "
"como uma matriz N-dimensional."

#: ../../library/stdtypes.rst:4194 ../../library/stdtypes.rst:4202
msgid "An empty tuple instead of ``None`` when ndim = 0."
msgstr "Uma tupla vazia ao invés de ``None`` quando ndim = 0."

#: ../../library/stdtypes.rst:4199
msgid ""
"A tuple of integers the length of :attr:`ndim` giving the size in bytes to "
"access each element for each dimension of the array."
msgstr ""
"Uma tupla de inteiros de comprimento de :attr:`ndim` dando o tamanho em "
"bytes para acessar cada elemento de cada dimensão da matriz."

#: ../../library/stdtypes.rst:4207
msgid "Used internally for PIL-style arrays. The value is informational only."
msgstr ""
"Usado internamente para estilos de Arrays PIL. O valor \\é apenas "
"informativo."

#: ../../library/stdtypes.rst:4211
msgid "A bool indicating whether the memory is C-:term:`contiguous`."
msgstr "Um bool que indica se a memória é :term:`contígua <contiguous>` C."

#: ../../library/stdtypes.rst:4217
msgid "A bool indicating whether the memory is Fortran :term:`contiguous`."
msgstr ""
"Um bool que indica se a memória é :term:`contígua <contiguous>` Fortran."

#: ../../library/stdtypes.rst:4223
msgid "A bool indicating whether the memory is :term:`contiguous`."
msgstr "Um bool que indica se a memória é :term:`contígua <contiguous>`."

#: ../../library/stdtypes.rst:4231
msgid "Set Types --- :class:`set`, :class:`frozenset`"
msgstr "Tipo conjuntos --- :class:`set`, :class:`frozenset`"

#: ../../library/stdtypes.rst:4235
msgid ""
"A :dfn:`set` object is an unordered collection of distinct :term:`hashable` "
"objects. Common uses include membership testing, removing duplicates from a "
"sequence, and computing mathematical operations such as intersection, union, "
"difference, and symmetric difference. (For other containers see the built-"
"in :class:`dict`, :class:`list`, and :class:`tuple` classes, and the :mod:"
"`collections` module.)"
msgstr ""
"Um objeto :dfn:`conjunto` é uma coleção não ordenada de objetos :term:"
"`hasheáveis <hashable>` distintos. Usos comuns incluem testes de associação, "
"remover duplicatas de uma sequência e computar operações matemáticas tais "
"como interseção, união, diferença e diferença simétrica. (Para outros tipos "
"de contêineres veja as classes embutidas :class:`dict`, :class:`list` e :"
"class:`tuple`, e o módulo :mod:`collections`.)"

#: ../../library/stdtypes.rst:4242
msgid ""
"Like other collections, sets support ``x in set``, ``len(set)``, and ``for x "
"in set``.  Being an unordered collection, sets do not record element "
"position or order of insertion.  Accordingly, sets do not support indexing, "
"slicing, or other sequence-like behavior."
msgstr ""
"Assim como outras coleções, conjuntos suportam ``x in set``, ``len(set)`` e "
"``for x in set``. Sendo uma coleção não ordenada, conjuntos não armazenam "
"posição de elementos ou ordem de inserção. Portanto, conjuntos não suportam "
"indexação, fatiamento ou outros comportamentos de sequências ou similares."

#: ../../library/stdtypes.rst:4247
msgid ""
"There are currently two built-in set types, :class:`set` and :class:"
"`frozenset`. The :class:`set` type is mutable --- the contents can be "
"changed using methods like :meth:`~set.add` and :meth:`~set.remove`.  Since "
"it is mutable, it has no hash value and cannot be used as either a "
"dictionary key or as an element of another set.  The :class:`frozenset` type "
"is immutable and :term:`hashable` --- its contents cannot be altered after "
"it is created; it can therefore be used as a dictionary key or as an element "
"of another set."
msgstr ""
"Existem atualmente dois tipos de conjuntos embutidos, :class:`set` e :class:"
"`frozenset`. O tipo :class:`set` é mutável -- o conteúdo pode ser alterado "
"usando métodos como :meth:`~set.add` e :meth:`~set.remove`. Como ele é "
"mutável, ele não tem valor hash e não pode ser usado como chave de "
"dicionário ou um elemento de um outro conjunto. O tipo :class:`frozenset` é "
"imutável e :term:`hasheável <hashable>` -- seu conteúdo não pode ser "
"alterado depois de ter sido criado; ele pode então ser usado como chave de "
"dicionário ou como um elemento de outro conjunto."

#: ../../library/stdtypes.rst:4255
msgid ""
"Non-empty sets (not frozensets) can be created by placing a comma-separated "
"list of elements within braces, for example: ``{'jack', 'sjoerd'}``, in "
"addition to the :class:`set` constructor."
msgstr ""
"Conjuntos não vazios (que não sejam frozensets) podem ser criados "
"posicionando uma lista de elementos separados por vírgula dentro de chaves, "
"por exemplo: ``{'jack', 'sjoerd'}``, além do construtor :class:`set`."

#: ../../library/stdtypes.rst:4259
msgid "The constructors for both classes work the same:"
msgstr "Os construtores de ambas as classes funcionam da mesma forma:"

#: ../../library/stdtypes.rst:4264
msgid ""
"Return a new set or frozenset object whose elements are taken from "
"*iterable*.  The elements of a set must be :term:`hashable`.  To represent "
"sets of sets, the inner sets must be :class:`frozenset` objects.  If "
"*iterable* is not specified, a new empty set is returned."
msgstr ""
"Retorna um novo objeto set ou frozenset, cujos elementos são obtidos a "
"partir de um *iterable*. Os elementos de um conjunto devem ser :term:"
"`hasheável <hashable>`. Para representar conjuntos de sets, os sets internos "
"devem ser objetos :class:`frozenset`. Se *iterable* não for especificado, um "
"novo conjunto vazio é retornado."

#: ../../library/stdtypes.rst:4270
msgid "Sets can be created by several means:"
msgstr "Conjuntos podem ser criados de várias formas:"

#: ../../library/stdtypes.rst:4272
msgid ""
"Use a comma-separated list of elements within braces: ``{'jack', 'sjoerd'}``"
msgstr ""
"Usar uma lista de elementos separados por vírgulas entre chaves: ``{'jack', "
"'sjoerd'}``"

#: ../../library/stdtypes.rst:4273
msgid ""
"Use a set comprehension: ``{c for c in 'abracadabra' if c not in 'abc'}``"
msgstr ""
"Usar uma compreensão de conjunto: ``{c for c in 'abracadabra' if c not in "
"'abc'}``"

#: ../../library/stdtypes.rst:4274
msgid ""
"Use the type constructor: ``set()``, ``set('foobar')``, ``set(['a', 'b', "
"'foo'])``"
msgstr ""
"Usar o construtor de tipo: ``set()``, ``set('foobar')``, ``set(['a', 'b', "
"'foo'])``"

#: ../../library/stdtypes.rst:4276
msgid ""
"Instances of :class:`set` and :class:`frozenset` provide the following "
"operations:"
msgstr ""
"Instâncias de :class:`set` e :class:`frozenset` fornecem as seguintes "
"operações:"

#: ../../library/stdtypes.rst:4281
msgid "Return the number of elements in set *s* (cardinality of *s*)."
msgstr "Retorna o número de elementos no set *s* (cardinalidade de *s*)."

#: ../../library/stdtypes.rst:4285
msgid "Test *x* for membership in *s*."
msgstr "Testa se *x* pertence a *s*."

#: ../../library/stdtypes.rst:4289
msgid "Test *x* for non-membership in *s*."
msgstr "Testa se *x* não pertence a *s*."

#: ../../library/stdtypes.rst:4293
msgid ""
"Return ``True`` if the set has no elements in common with *other*.  Sets are "
"disjoint if and only if their intersection is the empty set."
msgstr ""
"Retorna ``True`` se o conjunto não tem elementos em comum com *other*. "
"Conjuntos são disjuntos se e somente se a sua interseção é o conjunto vazio."

#: ../../library/stdtypes.rst:4299
msgid "Test whether every element in the set is in *other*."
msgstr "Testa se cada elemento do conjunto está contido em *other*."

#: ../../library/stdtypes.rst:4303
msgid ""
"Test whether the set is a proper subset of *other*, that is, ``set <= other "
"and set != other``."
msgstr ""
"Testa se o conjunto é um subconjunto próprio de *other*, isto é, ``set <= "
"other and set != other``."

#: ../../library/stdtypes.rst:4309
msgid "Test whether every element in *other* is in the set."
msgstr "Testa se cada elemento em *other* está contido no conjunto."

#: ../../library/stdtypes.rst:4313
msgid ""
"Test whether the set is a proper superset of *other*, that is, ``set >= "
"other and set != other``."
msgstr ""
"Testa se o conjunto é um superconjunto próprio de *other*, isto é, ``set >= "
"other and set != other``."

#: ../../library/stdtypes.rst:4319
msgid "Return a new set with elements from the set and all others."
msgstr ""
"Retorna um novo conjunto com elementos do conjunto e de todos os outros."

#: ../../library/stdtypes.rst:4324
msgid "Return a new set with elements common to the set and all others."
msgstr ""
"Retorna um novo conjunto com elementos comuns do conjunto e de todos os "
"outros."

#: ../../library/stdtypes.rst:4329
msgid "Return a new set with elements in the set that are not in the others."
msgstr ""
"Retorna um novo conjunto com elementos no conjunto que não estão nos outros."

#: ../../library/stdtypes.rst:4334
msgid ""
"Return a new set with elements in either the set or *other* but not both."
msgstr ""
"Retorna um novo conjunto com elementos estejam ou no conjunto ou em *other*, "
"mas não em ambos."

#: ../../library/stdtypes.rst:4338
msgid "Return a shallow copy of the set."
msgstr "Retorna uma cópia rasa do conjunto."

#: ../../library/stdtypes.rst:4341
msgid ""
"Note, the non-operator versions of :meth:`union`, :meth:`intersection`, :"
"meth:`difference`, :meth:`symmetric_difference`, :meth:`issubset`, and :meth:"
"`issuperset` methods will accept any iterable as an argument.  In contrast, "
"their operator based counterparts require their arguments to be sets.  This "
"precludes error-prone constructions like ``set('abc') & 'cbs'`` in favor of "
"the more readable ``set('abc').intersection('cbs')``."
msgstr ""
"Observe que, as versões não-operador dos métodos :meth:`union`, :meth:"
"`intersection`, :meth:`difference`, :meth:`symmetric_difference`, :meth:"
"`issubset`, e :meth:`issuperset` irão aceitar qualquer iterável como um "
"argumento. Em contraste, suas contrapartes baseadas em operadores exigem que "
"seus argumentos sejam conjuntos. Isso impede construções suscetíveis a erros "
"como ``set('abc') & 'cbs'`` e favorece a forma mais legível ``set('abc')."
"intersection('cbs')``."

#: ../../library/stdtypes.rst:4348
msgid ""
"Both :class:`set` and :class:`frozenset` support set to set comparisons. Two "
"sets are equal if and only if every element of each set is contained in the "
"other (each is a subset of the other). A set is less than another set if and "
"only if the first set is a proper subset of the second set (is a subset, but "
"is not equal). A set is greater than another set if and only if the first "
"set is a proper superset of the second set (is a superset, but is not equal)."
msgstr ""
"Tanto :class:`set` quanto :class:`frozenset` suportam comparar um conjunto "
"com outro. Dois conjuntos são iguais se, e somente se, cada elemento de cada "
"conjunto está contido no outro conjunto (cada um é um subconjunto do outro). "
"Um conjunto é menor que outro se, e somente se, o primeiro conjunto é um "
"subconjunto adequado do segundo (é um subconjunto, mas não é igual). Um "
"conjunto é maior que outro conjunto se, e somente se, o primeiro conjunto é "
"um superconjunto próprio do segundo conjunto (é um superconjunto, mas não é "
"igual)."

#: ../../library/stdtypes.rst:4355
msgid ""
"Instances of :class:`set` are compared to instances of :class:`frozenset` "
"based on their members.  For example, ``set('abc') == frozenset('abc')`` "
"returns ``True`` and so does ``set('abc') in set([frozenset('abc')])``."
msgstr ""
"Instâncias de :class:`set` são comparadas a instâncias de :class:`frozenset` "
"baseados nos seus membros. Por exemplo, ``set('abc') == frozenset('abc')`` "
"retorna ``True`` e assim como ``set('abc') in set([frozenset('abc')])``."

#: ../../library/stdtypes.rst:4359
msgid ""
"The subset and equality comparisons do not generalize to a total ordering "
"function.  For example, any two nonempty disjoint sets are not equal and are "
"not subsets of each other, so *all* of the following return ``False``: "
"``a<b``, ``a==b``, or ``a>b``."
msgstr ""
"O subconjunto e comparações de igualdade não generalizam para a função de "
"ordenamento total. Por exemplo, quaisquer dois conjuntos deslocados não "
"vazios, não são iguais e não são subconjuntos um do outro, então *todos* os "
"seguintes retornam ``False``: ``a<b``, ``a==b`` ou ``a>b``."

#: ../../library/stdtypes.rst:4364
msgid ""
"Since sets only define partial ordering (subset relationships), the output "
"of the :meth:`list.sort` method is undefined for lists of sets."
msgstr ""
"Como conjuntos apenas definem ordenamento parcial (subconjunto de "
"relacionamentos), a saída do método :meth:`list.sort` é indefinida para "
"listas e conjuntos."

#: ../../library/stdtypes.rst:4367
msgid "Set elements, like dictionary keys, must be :term:`hashable`."
msgstr ""
"Elementos de conjuntos, assim como chaves de dicionário, devem ser :term:"
"`hasheáveis <hashable>`."

#: ../../library/stdtypes.rst:4369
msgid ""
"Binary operations that mix :class:`set` instances with :class:`frozenset` "
"return the type of the first operand.  For example: ``frozenset('ab') | "
"set('bc')`` returns an instance of :class:`frozenset`."
msgstr ""
"Operações binárias que misturam instâncias de :class:`set` com :class:"
"`frozenset` retornam o tipo do primeiro operando. Por exemplo: "
"``frozenset('ab') | set('bc')`` retorna uma instância de :class:`frozenset`."

#: ../../library/stdtypes.rst:4373
msgid ""
"The following table lists operations available for :class:`set` that do not "
"apply to immutable instances of :class:`frozenset`:"
msgstr ""
"A seguinte tabela lista operações disponíveis para :class:`set` que não se "
"aplicam para instâncias imutáveis de :class:`frozenset`:"

#: ../../library/stdtypes.rst:4379
msgid "Update the set, adding elements from all others."
msgstr "Atualiza o conjunto, adicionando elementos dos outros."

#: ../../library/stdtypes.rst:4384
msgid "Update the set, keeping only elements found in it and all others."
msgstr ""
"Atualiza o conjunto, mantendo somente elementos encontrados nele e em outros."

#: ../../library/stdtypes.rst:4389
msgid "Update the set, removing elements found in others."
msgstr "Atualiza o conjunto, removendo elementos encontrados em outros."

#: ../../library/stdtypes.rst:4394
msgid ""
"Update the set, keeping only elements found in either set, but not in both."
msgstr ""
"Atualiza o conjunto, mantendo somente elementos encontrados em qualquer "
"conjunto, mas não em ambos."

#: ../../library/stdtypes.rst:4398
msgid "Add element *elem* to the set."
msgstr "Adiciona o elemento *elem* ao conjunto."

#: ../../library/stdtypes.rst:4402
msgid ""
"Remove element *elem* from the set.  Raises :exc:`KeyError` if *elem* is not "
"contained in the set."
msgstr ""
"Remove o elemento *elem* do conjunto. Levanta :exc:`KeyError` se *elem* não "
"estiver contido no conjunto."

#: ../../library/stdtypes.rst:4407
msgid "Remove element *elem* from the set if it is present."
msgstr "Remove o elemento *elem* do conjunto se ele estiver presente."

#: ../../library/stdtypes.rst:4411
msgid ""
"Remove and return an arbitrary element from the set.  Raises :exc:`KeyError` "
"if the set is empty."
msgstr ""
"Remove e retorna um elemento arbitrário do conjunto. Levanta :exc:`KeyError` "
"se o conjunto estiver vazio."

#: ../../library/stdtypes.rst:4416
msgid "Remove all elements from the set."
msgstr "Remove todos os elementos do conjunto."

#: ../../library/stdtypes.rst:4419
msgid ""
"Note, the non-operator versions of the :meth:`update`, :meth:"
"`intersection_update`, :meth:`difference_update`, and :meth:"
"`symmetric_difference_update` methods will accept any iterable as an "
"argument."
msgstr ""
"Perceba, as versões sem operador dos métodos :meth:`update`, :meth:"
"`intersection_update`, :meth:`difference_update` e :meth:"
"`symmetric_difference_update` irão aceitar qualquer iterável como um "
"argumento."

#: ../../library/stdtypes.rst:4424
msgid ""
"Note, the *elem* argument to the :meth:`~object.__contains__`, :meth:"
"`remove`, and :meth:`discard` methods may be a set.  To support searching "
"for an equivalent frozenset, a temporary one is created from *elem*."
msgstr ""
"Perceba, o argumento *elem* para os métodos :meth:`~object.__contains__`, :"
"meth:`remove` e :meth:`discard` pode ser um conjunto. Para suportar "
"pesquisas por um frozenset equivalente, um frozenset temporário é criado a "
"partir de *elem*."

#: ../../library/stdtypes.rst:4433
msgid "Mapping Types --- :class:`dict`"
msgstr "Tipo mapeamento --- :class:`dict`"

#: ../../library/stdtypes.rst:4443
msgid ""
"A :term:`mapping` object maps :term:`hashable` values to arbitrary objects. "
"Mappings are mutable objects.  There is currently only one standard mapping "
"type, the :dfn:`dictionary`.  (For other containers see the built-in :class:"
"`list`, :class:`set`, and :class:`tuple` classes, and the :mod:`collections` "
"module.)"
msgstr ""
"Um objeto :term:`mapeamento <mapping>` mapeia valores :term:`hasheáveis "
"<hashable>` para objetos arbitrários. Mapeamentos são objetos mutáveis. "
"Existe no momento apenas um tipo de mapeamento padrão, o :dfn:`dicionário`. "
"(Para outros contêineres, veja as classes embutidas :class:`list`, :class:"
"`set` e :class:`tuple`, e o módulo :mod:`collections`.)"

#: ../../library/stdtypes.rst:4449
msgid ""
"A dictionary's keys are *almost* arbitrary values.  Values that are not :"
"term:`hashable`, that is, values containing lists, dictionaries or other "
"mutable types (that are compared by value rather than by object identity) "
"may not be used as keys. Values that compare equal (such as ``1``, ``1.0``, "
"and ``True``) can be used interchangeably to index the same dictionary entry."
msgstr ""
"As chaves de um dicionário são *quase* valores arbitrários. Valores que não "
"são :term:`hasheáveis <hasheável>`, ou seja, valores contendo listas, "
"dicionários ou outros tipos mutáveis (que são comparados por valor e não por "
"identidade de objeto) não podem ser usados como chaves. Valores que comparam "
"iguais (como ``1``, ``1.0`` e ``True``) podem ser usados alternadamente para "
"indexar a mesma entrada do dicionário."

#: ../../library/stdtypes.rst:4460
msgid ""
"Return a new dictionary initialized from an optional positional argument and "
"a possibly empty set of keyword arguments."
msgstr ""
"Retorna um novo dicionário inicializado a partir de um argumento posicional "
"opcional, e um conjunto de argumentos nomeados possivelmente vazio."

#: ../../library/stdtypes.rst:4463
msgid "Dictionaries can be created by several means:"
msgstr "Os dicionários podem ser criados de várias formas:"

#: ../../library/stdtypes.rst:4465
msgid ""
"Use a comma-separated list of ``key: value`` pairs within braces: ``{'jack': "
"4098, 'sjoerd': 4127}`` or ``{4098: 'jack', 4127: 'sjoerd'}``"
msgstr ""
"Usar uma lista de pares ``key: value`` separados por vírgula com chaves: "
"``{'jack': 4098, 'sjoerd': 4127}`` ou ``{4098: 'jack', 4127: 'sjoerd'}``"

#: ../../library/stdtypes.rst:4467
msgid "Use a dict comprehension: ``{}``, ``{x: x ** 2 for x in range(10)}``"
msgstr ""
"Usar uma compreensão de dicionário: ``{}``, ``{x: x ** 2 for x in range(10)}"
"``"

#: ../../library/stdtypes.rst:4468
msgid ""
"Use the type constructor: ``dict()``, ``dict([('foo', 100), ('bar', "
"200)])``, ``dict(foo=100, bar=200)``"
msgstr ""
"Usar o construtor de tipo: ``dict()``, ``dict([('foo', 100), ('bar', "
"200)])``, ``dict(foo=100, bar=200)``"

#: ../../library/stdtypes.rst:4471
msgid ""
"If no positional argument is given, an empty dictionary is created. If a "
"positional argument is given and it defines a ``keys()`` method, a "
"dictionary is created by calling :meth:`~object.__getitem__` on the argument "
"with each returned key from the method.  Otherwise, the positional argument "
"must be an :term:`iterable` object.  Each item in the iterable must itself "
"be an iterable with exactly two elements.  The first element of each item "
"becomes a key in the new dictionary, and the second element the "
"corresponding value.  If a key occurs more than once, the last value for "
"that key becomes the corresponding value in the new dictionary."
msgstr ""

#: ../../library/stdtypes.rst:4481
msgid ""
"If keyword arguments are given, the keyword arguments and their values are "
"added to the dictionary created from the positional argument.  If a key "
"being added is already present, the value from the keyword argument replaces "
"the value from the positional argument."
msgstr ""
"Se argumentos nomeados são fornecidos, os argumentos nomeados e seus valores "
"são adicionados ao dicionário criado a partir do argumento posicional. Se "
"uma chave sendo adicionada já está presente, o valor do argumento nomeado "
"substitui o valor do argumento posicional."

#: ../../library/stdtypes.rst:4486
msgid ""
"To illustrate, the following examples all return a dictionary equal to "
"``{\"one\": 1, \"two\": 2, \"three\": 3}``::"
msgstr ""
"Para ilustrar, os seguintes exemplos todos retornam um dicionário igual a "
"``{\"one\": 1, \"two\": 2, \"three\": 3}``::"

#: ../../library/stdtypes.rst:4489
msgid ""
">>> a = dict(one=1, two=2, three=3)\n"
">>> b = {'one': 1, 'two': 2, 'three': 3}\n"
">>> c = dict(zip(['one', 'two', 'three'], [1, 2, 3]))\n"
">>> d = dict([('two', 2), ('one', 1), ('three', 3)])\n"
">>> e = dict({'three': 3, 'one': 1, 'two': 2})\n"
">>> f = dict({'one': 1, 'three': 3}, two=2)\n"
">>> a == b == c == d == e == f\n"
"True"
msgstr ""

#: ../../library/stdtypes.rst:4498
msgid ""
"Providing keyword arguments as in the first example only works for keys that "
"are valid Python identifiers.  Otherwise, any valid keys can be used."
msgstr ""
"Fornecer argumentos nomeados conforme no primeiro exemplo somente funciona "
"para chaves que são identificadores válidos no Python. Caso contrário, "
"quaisquer chaves válidas podem ser usadas."

#: ../../library/stdtypes.rst:4502
msgid ""
"These are the operations that dictionaries support (and therefore, custom "
"mapping types should support too):"
msgstr ""
"Estas são as operações que dicionários suportam (e portanto, tipos de "
"mapeamento personalizados devem suportar também):"

#: ../../library/stdtypes.rst:4507
msgid "Return a list of all the keys used in the dictionary *d*."
msgstr "Retorna uma lista de todas as chaves usadas no dicionário *d*."

#: ../../library/stdtypes.rst:4511
msgid "Return the number of items in the dictionary *d*."
msgstr "Retorna o número de itens no dicionário *d*."

#: ../../library/stdtypes.rst:4515
msgid ""
"Return the item of *d* with key *key*.  Raises a :exc:`KeyError` if *key* is "
"not in the map."
msgstr ""
"Retorna o item de *d* com a chave *key*. Levanta um :exc:`KeyError` se *key* "
"não estiver no mapeamento."

#: ../../library/stdtypes.rst:4520
msgid ""
"If a subclass of dict defines a method :meth:`__missing__` and *key* is not "
"present, the ``d[key]`` operation calls that method with the key *key* as "
"argument.  The ``d[key]`` operation then returns or raises whatever is "
"returned or raised by the ``__missing__(key)`` call. No other operations or "
"methods invoke :meth:`__missing__`. If :meth:`__missing__` is not defined, :"
"exc:`KeyError` is raised. :meth:`__missing__` must be a method; it cannot be "
"an instance variable::"
msgstr ""
"Se uma subclasse de um dict define um método :meth:`__missing__` e *key* não "
"estiver presente, a operação ``d[key]`` chama aquele método com a chave "
"*key* como argumento. A operação ``d[key]`` então retorna ou levanta o que é "
"retornado ou levantado pela chamada de ``__missing__(key)``. Nenhuma "
"operação ou métodos invocam :meth:`__missing__`. Se :meth:`__missing__` não "
"for definido, então :exc:`KeyError` é levantado. :meth:`__missing__` deve "
"ser um método; ele não pode ser uma variável de instância::"

#: ../../library/stdtypes.rst:4528
msgid ""
">>> class Counter(dict):\n"
"...     def __missing__(self, key):\n"
"...         return 0\n"
"...\n"
">>> c = Counter()\n"
">>> c['red']\n"
"0\n"
">>> c['red'] += 1\n"
">>> c['red']\n"
"1"
msgstr ""

#: ../../library/stdtypes.rst:4539
msgid ""
"The example above shows part of the implementation of :class:`collections."
"Counter`.  A different ``__missing__`` method is used by :class:`collections."
"defaultdict`."
msgstr ""
"O exemplo acima mostra parte da implementação de :class:`collections."
"Counter`. Um método ``__missing__`` diferente é usado para :class:"
"`collections.defaultdict`."

#: ../../library/stdtypes.rst:4545
msgid "Set ``d[key]`` to *value*."
msgstr "Define ``d[key]`` para *value*."

#: ../../library/stdtypes.rst:4549
msgid ""
"Remove ``d[key]`` from *d*.  Raises a :exc:`KeyError` if *key* is not in the "
"map."
msgstr ""
"Remove ``d[key]`` do *d*. Levanta uma exceção :exc:`KeyError` se *key* não "
"estiver no mapeamento."

#: ../../library/stdtypes.rst:4554
msgid "Return ``True`` if *d* has a key *key*, else ``False``."
msgstr ""
"Retorna ``True`` se *d* tiver uma chave *key*, caso contrário ``False``."

#: ../../library/stdtypes.rst:4558
msgid "Equivalent to ``not key in d``."
msgstr "Equivalente a ``not key in d``."

#: ../../library/stdtypes.rst:4562
msgid ""
"Return an iterator over the keys of the dictionary.  This is a shortcut for "
"``iter(d.keys())``."
msgstr ""
"Retorna um iterador para as chaves do dicionário. Isso é um atalho para "
"``iter(d.keys())``."

#: ../../library/stdtypes.rst:4567
msgid "Remove all items from the dictionary."
msgstr "Remove todos os itens do dicionário."

#: ../../library/stdtypes.rst:4571
msgid "Return a shallow copy of the dictionary."
msgstr "Retorna uma cópia superficial do dicionário."

#: ../../library/stdtypes.rst:4575
msgid ""
"Create a new dictionary with keys from *iterable* and values set to *value*."
msgstr ""
"Cria um novo dicionário com chaves provenientes de *iterable* e valores "
"definidos como *value*."

#: ../../library/stdtypes.rst:4577
msgid ""
":meth:`fromkeys` is a class method that returns a new dictionary. *value* "
"defaults to ``None``.  All of the values refer to just a single instance, so "
"it generally doesn't make sense for *value* to be a mutable object such as "
"an empty list.  To get distinct values, use a :ref:`dict comprehension "
"<dict>` instead."
msgstr ""
":meth:`fromkeys` é um método de classe que retorna um novo dicionário. "
"*value* tem como valor padrão ``None``. Todos os valores referem-se a apenas "
"uma única instância, então geralmente não faz sentido que *value* seja um "
"objeto mutável tal como uma lista vazia. Para obter valores distintos, use "
"uma :ref:`compreensão de dicionário <dict>` ao invés."

#: ../../library/stdtypes.rst:4585
msgid ""
"Return the value for *key* if *key* is in the dictionary, else *default*. If "
"*default* is not given, it defaults to ``None``, so that this method never "
"raises a :exc:`KeyError`."
msgstr ""
"Retorna o valor para *key* se *key* está no dicionário, caso contrário "
"*default*. Se *default* não é fornecido, será usado o valor padrão ``None``, "
"de tal forma que este método nunca levanta um :exc:`KeyError`."

#: ../../library/stdtypes.rst:4591
msgid ""
"Return a new view of the dictionary's items (``(key, value)`` pairs). See "
"the :ref:`documentation of view objects <dict-views>`."
msgstr ""
"Retorna uma nova visão dos itens do dicionário (pares de ``(key, value)``). "
"Veja a :ref:`documentação de objetos de visão de dicionário <dict-views>`."

#: ../../library/stdtypes.rst:4596
msgid ""
"Return a new view of the dictionary's keys.  See the :ref:`documentation of "
"view objects <dict-views>`."
msgstr ""
"Retorna uma nova visão das chaves do dicionário. Veja a :ref:`documentação "
"de objetos de visão de dicionário <dict-views>`."

#: ../../library/stdtypes.rst:4601
msgid ""
"If *key* is in the dictionary, remove it and return its value, else return "
"*default*.  If *default* is not given and *key* is not in the dictionary, a :"
"exc:`KeyError` is raised."
msgstr ""
"Se *key* está no dicionário, remove a mesma e retorna o seu valor, caso "
"contrário retorna *default*. Se *default* não foi fornecido e *key* não está "
"no dicionário, um :exc:`KeyError` é levantado."

#: ../../library/stdtypes.rst:4607
msgid ""
"Remove and return a ``(key, value)`` pair from the dictionary. Pairs are "
"returned in :abbr:`LIFO (last-in, first-out)` order."
msgstr ""
"Remove e retorna um par ``(key, value)`` do dicionário. Pares são retornados "
"como uma pilha, ou seja em ordem :abbr:`LIFO (last-in, first-out)`."

#: ../../library/stdtypes.rst:4610
msgid ""
":meth:`popitem` is useful to destructively iterate over a dictionary, as "
"often used in set algorithms.  If the dictionary is empty, calling :meth:"
"`popitem` raises a :exc:`KeyError`."
msgstr ""
":meth:`popitem` é útil para destrutivamente iterar sobre um dicionário, algo "
"comumente usado em algoritmos de conjunto. Se o dicionário estiver vazio, "
"chamar :meth:`popitem` levanta um :exc:`KeyError`."

#: ../../library/stdtypes.rst:4614
msgid ""
"LIFO order is now guaranteed. In prior versions, :meth:`popitem` would "
"return an arbitrary key/value pair."
msgstr ""
"Ordem LIFO agora é garantida. Em versões anteriores, :meth:`popitem` iria "
"retornar um par chave/valor arbitrário."

#: ../../library/stdtypes.rst:4620
msgid ""
"Return a reverse iterator over the keys of the dictionary. This is a "
"shortcut for ``reversed(d.keys())``."
msgstr ""
"Retorna um iterador revertido sobre as chaves do dicionário. Isso é um "
"atalho para ``reversed(d.keys())``."

#: ../../library/stdtypes.rst:4627
msgid ""
"If *key* is in the dictionary, return its value.  If not, insert *key* with "
"a value of *default* and return *default*.  *default* defaults to ``None``."
msgstr ""
"Se *key* está no dicionário, retorna o seu valor. Se não, insere *key* com o "
"valor *default* e retorna *default*. *default* por padrão usa o valor "
"``None``."

#: ../../library/stdtypes.rst:4633
msgid ""
"Update the dictionary with the key/value pairs from *other*, overwriting "
"existing keys.  Return ``None``."
msgstr ""
"Atualiza o dicionário com os pares chave/valor existente em *other*, "
"sobrescrevendo chaves existentes. Retorna ``None``."

#: ../../library/stdtypes.rst:4636
msgid ""
":meth:`update` accepts either another object with a ``keys()`` method (in "
"which case :meth:`~object.__getitem__` is called with every key returned "
"from the method). or an iterable of key/value pairs (as tuples or other "
"iterables of length two). If keyword arguments are specified, the dictionary "
"is then updated with those key/value pairs: ``d.update(red=1, blue=2)``."
msgstr ""

#: ../../library/stdtypes.rst:4644
msgid ""
"Return a new view of the dictionary's values.  See the :ref:`documentation "
"of view objects <dict-views>`."
msgstr ""
"Retorna uma nova visão dos valores do dicionário. Veja a :ref:`documentação "
"de objetos de visão de dicionário <dict-views>`."

#: ../../library/stdtypes.rst:4647
msgid ""
"An equality comparison between one ``dict.values()`` view and another will "
"always return ``False``. This also applies when comparing ``dict.values()`` "
"to itself::"
msgstr ""
"Uma comparação de igualdade entre uma visão de ``dict.values()`` e outra, "
"sempre irá retornar ``False``. Isso também se aplica ao comparar ``dict."
"values()`` entre si::"

#: ../../library/stdtypes.rst:4651
msgid ""
">>> d = {'a': 1}\n"
">>> d.values() == d.values()\n"
"False"
msgstr ""

#: ../../library/stdtypes.rst:4657
msgid ""
"Create a new dictionary with the merged keys and values of *d* and *other*, "
"which must both be dictionaries. The values of *other* take priority when "
"*d* and *other* share keys."
msgstr ""
"Cria um novo dicionário com as chaves e os valores mesclados de *d* e "
"*other*, que devem ser dicionários. Os valores de *other* têm prioridade "
"quando *d* e *other* compartilham chaves."

#: ../../library/stdtypes.rst:4665
msgid ""
"Update the dictionary *d* with keys and values from *other*, which may be "
"either a :term:`mapping` or an :term:`iterable` of key/value pairs. The "
"values of *other* take priority when *d* and *other* share keys."
msgstr ""
"Atualiza o dicionário *d* com chaves e valores de *other*, que podem ser a :"
"term:`mapeamento <mapping>` ou um :term:`iterável <iterable>` dos pares "
"chave/valor. Os valores de *other* têm prioridade quando *d* e *other* "
"compartilham chaves."

#: ../../library/stdtypes.rst:4671
msgid ""
"Dictionaries compare equal if and only if they have the same ``(key, "
"value)`` pairs (regardless of ordering). Order comparisons ('<', '<=', '>=', "
"'>') raise :exc:`TypeError`."
msgstr ""
"Dicionários são iguais se e somente se eles os mesmos pares ``(key, value)`` "
"(independente de ordem). Comparações de ordem ('<', '<=', '>=', '>') "
"levantam :exc:`TypeError`."

#: ../../library/stdtypes.rst:4675
msgid ""
"Dictionaries preserve insertion order.  Note that updating a key does not "
"affect the order.  Keys added after deletion are inserted at the end. ::"
msgstr ""
"Dicionários preservam a ordem de inserção. Perceba que atualizar a chave não "
"afeta a ordem. Chaves adicionadas após a deleção são inseridas no final. ::"

#: ../../library/stdtypes.rst:4678
msgid ""
">>> d = {\"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4}\n"
">>> d\n"
"{'one': 1, 'two': 2, 'three': 3, 'four': 4}\n"
">>> list(d)\n"
"['one', 'two', 'three', 'four']\n"
">>> list(d.values())\n"
"[1, 2, 3, 4]\n"
">>> d[\"one\"] = 42\n"
">>> d\n"
"{'one': 42, 'two': 2, 'three': 3, 'four': 4}\n"
">>> del d[\"two\"]\n"
">>> d[\"two\"] = None\n"
">>> d\n"
"{'one': 42, 'three': 3, 'four': 4, 'two': None}"
msgstr ""

#: ../../library/stdtypes.rst:4693
msgid ""
"Dictionary order is guaranteed to be insertion order.  This behavior was an "
"implementation detail of CPython from 3.6."
msgstr ""
"Ordem do dicionário é garantida conforme a ordem de inserção. Este "
"comportamento era um detalhe de implementação do CPython a partir da versão "
"3.6."

#: ../../library/stdtypes.rst:4697
msgid "Dictionaries and dictionary views are reversible. ::"
msgstr "Dicionários e visões de dicionários são reversíveis. ::"

#: ../../library/stdtypes.rst:4699
msgid ""
">>> d = {\"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4}\n"
">>> d\n"
"{'one': 1, 'two': 2, 'three': 3, 'four': 4}\n"
">>> list(reversed(d))\n"
"['four', 'three', 'two', 'one']\n"
">>> list(reversed(d.values()))\n"
"[4, 3, 2, 1]\n"
">>> list(reversed(d.items()))\n"
"[('four', 4), ('three', 3), ('two', 2), ('one', 1)]"
msgstr ""

#: ../../library/stdtypes.rst:4709
msgid "Dictionaries are now reversible."
msgstr "Dicionários agora são reversíveis."

#: ../../library/stdtypes.rst:4714
msgid ""
":class:`types.MappingProxyType` can be used to create a read-only view of a :"
"class:`dict`."
msgstr ""
":class:`types.MappingProxyType` podem ser usados para criar uma visão "
"somente leitura de um :class:`dict`."

#: ../../library/stdtypes.rst:4721
msgid "Dictionary view objects"
msgstr "Objetos de visão de dicionário"

#: ../../library/stdtypes.rst:4723
msgid ""
"The objects returned by :meth:`dict.keys`, :meth:`dict.values` and :meth:"
"`dict.items` are *view objects*.  They provide a dynamic view on the "
"dictionary's entries, which means that when the dictionary changes, the view "
"reflects these changes."
msgstr ""
"Os objetos retornados por :meth:`dict.keys`, :meth:`dict.values` e :meth:"
"`dict.items` são *objetos de visão*. Eles fornecem uma visão dinâmica das "
"entradas do dicionário, o que significa que quando o dicionário muda, a "
"visão reflete essas mudanças."

#: ../../library/stdtypes.rst:4728
msgid ""
"Dictionary views can be iterated over to yield their respective data, and "
"support membership tests:"
msgstr ""
"Visões de dicionários podem ser iteradas para apresentar seus respectivos "
"dados, e suportar testes de existência:"

#: ../../library/stdtypes.rst:4733
msgid "Return the number of entries in the dictionary."
msgstr "Retorna o número de entradas no dicionário."

#: ../../library/stdtypes.rst:4737
msgid ""
"Return an iterator over the keys, values or items (represented as tuples of "
"``(key, value)``) in the dictionary."
msgstr ""
"Retorna um iterador sobre as chaves, valores ou itens (representados como "
"tuplas de ``(key, value)``) no dicionário."

#: ../../library/stdtypes.rst:4740
msgid ""
"Keys and values are iterated over in insertion order. This allows the "
"creation of ``(value, key)`` pairs using :func:`zip`: ``pairs = zip(d."
"values(), d.keys())``.  Another way to create the same list is ``pairs = "
"[(v, k) for (k, v) in d.items()]``."
msgstr ""
"Chaves e valores são iterados em ordem de inserção. Isso permite a criação "
"de pares ``(value, key)`` usando :func:`zip`: ``pairs = zip(d.values(), d."
"keys())``. Outra maneira de criar a mesma lista é ``pairs = [(v, k) for (k, "
"v) in d.items()]``."

#: ../../library/stdtypes.rst:4745
msgid ""
"Iterating views while adding or deleting entries in the dictionary may raise "
"a :exc:`RuntimeError` or fail to iterate over all entries."
msgstr ""
"Iterar sobre visões enquanto adiciona ou deleta entradas no dicionário pode "
"levantar um :exc:`RuntimeError` ou falhar a iteração sobre todas as entradas."

#: ../../library/stdtypes.rst:4748
msgid "Dictionary order is guaranteed to be insertion order."
msgstr "Ordem do dicionário é garantida como a ordem de inserção."

#: ../../library/stdtypes.rst:4753
msgid ""
"Return ``True`` if *x* is in the underlying dictionary's keys, values or "
"items (in the latter case, *x* should be a ``(key, value)`` tuple)."
msgstr ""
"Retorna ``True`` se *x* está nas chaves, valores ou itens do dicionário "
"subjacente (no último caso, *x* deve ser uma tupla de ``(key, value)``)."

#: ../../library/stdtypes.rst:4758
msgid ""
"Return a reverse iterator over the keys, values or items of the dictionary. "
"The view will be iterated in reverse order of the insertion."
msgstr ""
"Retorna um iterador reverso sobre as chaves, valores ou itens do dicionário. "
"A visão será iterada na ordem reversa de inserção."

#: ../../library/stdtypes.rst:4761
msgid "Dictionary views are now reversible."
msgstr "Visões de dicionário agora são reversíveis."

#: ../../library/stdtypes.rst:4766
msgid ""
"Return a :class:`types.MappingProxyType` that wraps the original dictionary "
"to which the view refers."
msgstr ""
"Retorna um :class:`types.MappingProxyType` que envolve o dicionário original "
"ao qual a visão se refere."

#: ../../library/stdtypes.rst:4771
msgid ""
"Keys views are set-like since their entries are unique and :term:`hashable`. "
"Items views also have set-like operations since the (key, value) pairs are "
"unique and the keys are hashable. If all values in an items view are "
"hashable as well, then the items view can interoperate with other sets. "
"(Values views are not treated as set-like since the entries are generally "
"not unique.)  For set-like views, all of the operations defined for the "
"abstract base class :class:`collections.abc.Set` are available (for example, "
"``==``, ``<``, or ``^``).  While using set operators, set-like views accept "
"any iterable as the other operand, unlike sets which only accept sets as the "
"input."
msgstr ""
"Visões chave são similar a conjunto, como suas entradas são únicas e :term:"
"`hasheáveis <hasheável>`. As visões de itens também têm operações "
"semelhantes a conjuntos, uma vez que os pares (chave, valor) são únicos e as "
"chaves são hasheáveis. Se todos os valores em uma visão de itens também "
"forem hasheáveis, a visão de itens poderá interoperar com outros conjuntos. "
"(Visões de valores não são tratadas de como similar a conjunto, pois as "
"entradas geralmente não são únicas.) Para visões similares a conjunto, todas "
"as operações definidas para a classe base abstrata :class:`collections.abc."
"Set` estão disponíveis (por exemplo, ``==``, ``<`` ou ``^``). Ao usar "
"operadores de conjunto, visões de conjunto ou similares aceitam qualquer "
"iterável como outro operando, ao contrário de conjuntos que aceitam apenas "
"conjuntos como entrada."

#: ../../library/stdtypes.rst:4783
msgid "An example of dictionary view usage::"
msgstr "Um exemplo da utilização da visualização de dicionário::"

#: ../../library/stdtypes.rst:4785
msgid ""
">>> dishes = {'eggs': 2, 'sausage': 1, 'bacon': 1, 'spam': 500}\n"
">>> keys = dishes.keys()\n"
">>> values = dishes.values()\n"
"\n"
">>> # iteration\n"
">>> n = 0\n"
">>> for val in values:\n"
"...     n += val\n"
"...\n"
">>> print(n)\n"
"504\n"
"\n"
">>> # keys and values are iterated over in the same order (insertion order)\n"
">>> list(keys)\n"
"['eggs', 'sausage', 'bacon', 'spam']\n"
">>> list(values)\n"
"[2, 1, 1, 500]\n"
"\n"
">>> # view objects are dynamic and reflect dict changes\n"
">>> del dishes['eggs']\n"
">>> del dishes['sausage']\n"
">>> list(keys)\n"
"['bacon', 'spam']\n"
"\n"
">>> # set operations\n"
">>> keys & {'eggs', 'bacon', 'salad'}\n"
"{'bacon'}\n"
">>> keys ^ {'sausage', 'juice'} == {'juice', 'sausage', 'bacon', 'spam'}\n"
"True\n"
">>> keys | ['juice', 'juice', 'juice'] == {'bacon', 'spam', 'juice'}\n"
"True\n"
"\n"
">>> # get back a read-only proxy for the original dictionary\n"
">>> values.mapping\n"
"mappingproxy({'bacon': 1, 'spam': 500})\n"
">>> values.mapping['spam']\n"
"500"
msgstr ""

#: ../../library/stdtypes.rst:4827
msgid "Context Manager Types"
msgstr "Tipos de Gerenciador de Contexto"

#: ../../library/stdtypes.rst:4834
msgid ""
"Python's :keyword:`with` statement supports the concept of a runtime context "
"defined by a context manager.  This is implemented using a pair of methods "
"that allow user-defined classes to define a runtime context that is entered "
"before the statement body is executed and exited when the statement ends:"
msgstr ""
"A instrução :keyword:`with` do Python suporta o conceito de um contexto em "
"tempo de execução definido por um gerenciador de contexto. Isto é "
"implementado usando um par de métodos, que permitem que classes definidas "
"pelo usuário especifiquem um contexto em tempo de execução, o qual é "
"inicializado antes da execução das instruções, e encerrado quando as "
"instruções terminam:"

#: ../../library/stdtypes.rst:4842
msgid ""
"Enter the runtime context and return either this object or another object "
"related to the runtime context. The value returned by this method is bound "
"to the identifier in the :keyword:`!as` clause of :keyword:`with` statements "
"using this context manager."
msgstr ""
"Entra no contexto em tempo de execução e retorna este objeto ou outro objeto "
"relacionado ao contexto em tempo de execução. O valor retornado por este "
"método é ligado ao identificador na cláusula :keyword:`!as` das instruções :"
"keyword:`with` usando este gerenciador de contexto."

#: ../../library/stdtypes.rst:4847
msgid ""
"An example of a context manager that returns itself is a :term:`file "
"object`. File objects return themselves from __enter__() to allow :func:"
"`open` to be used as the context expression in a :keyword:`with` statement."
msgstr ""
"Um exemplo de gerenciador de contexto que retorna a si mesmo é um :term:"
"`objeto arquivo <file object>`. Objeto arquivos retornam a si mesmos do "
"método __enter__() para permitir que :func:`open` seja usado como a "
"expressão de contexto em uma instrução :keyword:`with`."

#: ../../library/stdtypes.rst:4851
msgid ""
"An example of a context manager that returns a related object is the one "
"returned by :func:`decimal.localcontext`. These managers set the active "
"decimal context to a copy of the original decimal context and then return "
"the copy. This allows changes to be made to the current decimal context in "
"the body of the :keyword:`with` statement without affecting code outside "
"the :keyword:`!with` statement."
msgstr ""
"Um exemplo de gerenciador de contexto que retorna um objeto relacionado é "
"aquele retornado por :func:`decimal.localcontext`. Esses gerenciadores "
"definem o contexto decimal ativo para uma cópia do contexto decimal "
"original, e então retornam a cópia. Isso permite que mudanças sejam feitas "
"no contexto decimal atual, no corpo contido na instrução :keyword:`with`, "
"sem afetar o código fora da instrução :keyword:`!with`."

#: ../../library/stdtypes.rst:4861
msgid ""
"Exit the runtime context and return a Boolean flag indicating if any "
"exception that occurred should be suppressed. If an exception occurred while "
"executing the body of the :keyword:`with` statement, the arguments contain "
"the exception type, value and traceback information. Otherwise, all three "
"arguments are ``None``."
msgstr ""
"Sai do contexto em tempo de execução e retorna um sinalizador booleano "
"indicando se qualquer exceção que ocorreu deve ser suprimida. Se uma exceção "
"ocorreu enquanto era executado o corpo da instrução :keyword:`with`, os "
"argumentos contêm o tipo da exceção, valor e informação da traceback "
"(situação da pilha de execução). Caso contrário, os três argumentos são "
"``None``."

#: ../../library/stdtypes.rst:4866
msgid ""
"Returning a true value from this method will cause the :keyword:`with` "
"statement to suppress the exception and continue execution with the "
"statement immediately following the :keyword:`!with` statement. Otherwise "
"the exception continues propagating after this method has finished "
"executing. Exceptions that occur during execution of this method will "
"replace any exception that occurred in the body of the :keyword:`!with` "
"statement."
msgstr ""
"Retornar um valor verdadeiro deste método fará com que a instrução :keyword:"
"`with` suprima a exceção e continue a execução com a instrução imediatamente "
"após a instrução :keyword:`!with`. Caso contrário a exceção continuará "
"propagando após este método ter encerrado sua execução. Exceções que "
"ocorrerem durante a execução deste método irão substituir qualquer exceção "
"que tenha ocorrido dentro do corpo da instrução :keyword:`!with`."

#: ../../library/stdtypes.rst:4873
msgid ""
"The exception passed in should never be reraised explicitly - instead, this "
"method should return a false value to indicate that the method completed "
"successfully and does not want to suppress the raised exception. This allows "
"context management code to easily detect whether or not an :meth:`~object."
"__exit__` method has actually failed."
msgstr ""
"A exceção passada nunca deve ser re-levantada explicitamente - ao invés "
"disso, este método deve retornar um valor falso para indicar que o método "
"completou sua execução com sucesso, e não quer suprimir a exceção levantada. "
"Isso permite ao código do gerenciador de contexto facilmente detectar se um "
"método :meth:`~object.__exit__` realmente falhou ou não."

#: ../../library/stdtypes.rst:4879
msgid ""
"Python defines several context managers to support easy thread "
"synchronisation, prompt closure of files or other objects, and simpler "
"manipulation of the active decimal arithmetic context. The specific types "
"are not treated specially beyond their implementation of the context "
"management protocol. See the :mod:`contextlib` module for some examples."
msgstr ""
"Python define diversos gerenciadores de contexto para suportar facilmente "
"sincronização de threads, solicita o fechamento de arquivos ou outros "
"objetos, e manipula de forma simples o contexto ativo de aritmética decimal. "
"Os tipos especificados não são tratados de forma especial além da sua "
"implementação e do protocolo do gerenciador de contexto. Veja o módulo :mod:"
"`contextlib` para alguns exemplos."

#: ../../library/stdtypes.rst:4885
msgid ""
"Python's :term:`generator`\\s and the :class:`contextlib.contextmanager` "
"decorator provide a convenient way to implement these protocols.  If a "
"generator function is decorated with the :class:`contextlib.contextmanager` "
"decorator, it will return a context manager implementing the necessary :meth:"
"`~contextmanager.__enter__` and :meth:`~contextmanager.__exit__` methods, "
"rather than the iterator produced by an undecorated generator function."
msgstr ""
"Os :term:`gerador`\\es do Python e o decorador :class:`contextlib."
"contextmanager` fornecem uma maneira conveniente de implementar esses "
"protocolos. Se uma função geradora for decorada com o decorador :class:"
"`contextlib.contextmanager`, ela retornará um gerenciador de contexto "
"implementando os métodos necessários :meth:`~contextmanager.__enter__` e :"
"meth:`~contextmanager.__exit__`, em vez de o iterador produzido por uma "
"função geradora não decorada."

#: ../../library/stdtypes.rst:4892
msgid ""
"Note that there is no specific slot for any of these methods in the type "
"structure for Python objects in the Python/C API. Extension types wanting to "
"define these methods must provide them as a normal Python accessible method. "
"Compared to the overhead of setting up the runtime context, the overhead of "
"a single class dictionary lookup is negligible."
msgstr ""
"Observe que não existe nenhum slot específico para qualquer um desses "
"métodos na estrutura de tipos para objetos Python na API Python/C. Tipos de "
"extensão que desejam definir estes métodos devem fornecê-los como um método "
"acessível normal do Python. Comparado com a sobrecarga de configurar o "
"contexto em tempo de execução, a sobrecarga na pesquisa de dicionário em uma "
"única classe é negligenciável."

#: ../../library/stdtypes.rst:4900
msgid ""
"Type Annotation Types --- :ref:`Generic Alias <types-genericalias>`, :ref:"
"`Union <types-union>`"
msgstr ""
"Tipos de anotação de tipo --- :ref:`Apelido genérico <types-genericalias>`, :"
"ref:`União <types-union>`"

#: ../../library/stdtypes.rst:4905
msgid ""
"The core built-in types for :term:`type annotations <annotation>` are :ref:"
"`Generic Alias <types-genericalias>` and :ref:`Union <types-union>`."
msgstr ""
"Os principais tipos embutidos para :term:`anotações de tipo <annotation>` "
"são :ref:`Apelido genérico <types-genericalias>` e :ref:`União <types-"
"union>`."

#: ../../library/stdtypes.rst:4912
msgid "Generic Alias Type"
msgstr "Tipo Generic Alias"

#: ../../library/stdtypes.rst:4918
msgid ""
"``GenericAlias`` objects are generally created by :ref:`subscripting "
"<subscriptions>` a class. They are most often used with :ref:`container "
"classes <sequence-types>`, such as :class:`list` or :class:`dict`. For "
"example, ``list[int]`` is a ``GenericAlias`` object created by subscripting "
"the ``list`` class with the argument :class:`int`. ``GenericAlias`` objects "
"are intended primarily for use with :term:`type annotations <annotation>`."
msgstr ""
"Objetos ``GenericAlias`` são geralmente criados :ref:`subscrevendo "
"<subscriptions>` uma classe. Eles são mais usados com :ref:`classes "
"contêineres <sequence-types>`, como :class:`list` ou :class:`dict`. Por "
"exemplo, ``list[int]`` é um objeto ``GenericAlias`` criado pela subscrição "
"da classe ``list`` com o argumento :class:`int`. Objetos ``GenericAlias`` "
"são destinados principalmente para uso com :term:`anotações de tipo "
"<annotation>`."

#: ../../library/stdtypes.rst:4928
msgid ""
"It is generally only possible to subscript a class if the class implements "
"the special method :meth:`~object.__class_getitem__`."
msgstr ""
"Geralmente só é possível subscrever uma classe se a classe implementar o "
"método especial :meth:`~object.__class_getitem__`."

#: ../../library/stdtypes.rst:4931
msgid ""
"A ``GenericAlias`` object acts as a proxy for a :term:`generic type`, "
"implementing *parameterized generics*."
msgstr ""
"Um objeto ``GenericAlias`` atua como um proxy para um :term:`tipo genérico`, "
"implementando *genéricos parametrizados*."

#: ../../library/stdtypes.rst:4934
msgid ""
"For a container class, the argument(s) supplied to a :ref:`subscription "
"<subscriptions>` of the class may indicate the type(s) of the elements an "
"object contains. For example, ``set[bytes]`` can be used in type annotations "
"to signify a :class:`set` in which all the elements are of type :class:"
"`bytes`."
msgstr ""
"Para uma classe contêiner, o(s) argumento(s) fornecido(s) para uma :ref:"
"`subscrição <subscriptions>` da classe pode indicar o(s) tipo(s) dos "
"elementos que um objeto contém. Por exemplo, ``set[bytes]`` pode ser usado "
"em anotações de tipo para significar um :class:`set` em que todos os "
"elementos são do tipo :class:`bytes`."

#: ../../library/stdtypes.rst:4940
msgid ""
"For a class which defines :meth:`~object.__class_getitem__` but is not a "
"container, the argument(s) supplied to a subscription of the class will "
"often indicate the return type(s) of one or more methods defined on an "
"object. For example, :mod:`regular expressions <re>` can be used on both "
"the :class:`str` data type and the :class:`bytes` data type:"
msgstr ""
"Para uma classe que define :meth:`~object.__class_getitem__`, mas não é um "
"contêiner, o(s) argumento(s) fornecido(s) para uma subscrição da classe "
"geralmente indicará o(s) tipo(s) de retorno de um ou mais métodos definidos "
"em um objeto. Por exemplo, :mod:`expressões regulares <re>` podem ser usadas "
"tanto no tipo de dados :class:`str` quanto no tipo de dados :class:`bytes`:"

#: ../../library/stdtypes.rst:4946
msgid ""
"If ``x = re.search('foo', 'foo')``, ``x`` will be a :ref:`re.Match <match-"
"objects>` object where the return values of ``x.group(0)`` and ``x[0]`` will "
"both be of type :class:`str`. We can represent this kind of object in type "
"annotations with the ``GenericAlias`` ``re.Match[str]``."
msgstr ""
"Se ``x = re.search('foo', 'foo')``, ``x`` será um objeto :ref:`re.Match "
"<match-objects>` onde os valores de retorno de ``x.group(0)`` e ``x[0]`` "
"serão ambos do tipo :class:`str`. Podemos representar este tipo de objeto em "
"anotações de tipo com o ``GenericAlias`` ``re.Match[str]``."

#: ../../library/stdtypes.rst:4952
msgid ""
"If ``y = re.search(b'bar', b'bar')``, (note the ``b`` for :class:`bytes`), "
"``y`` will also be an instance of ``re.Match``, but the return values of ``y."
"group(0)`` and ``y[0]`` will both be of type :class:`bytes`. In type "
"annotations, we would represent this variety of :ref:`re.Match <match-"
"objects>` objects with ``re.Match[bytes]``."
msgstr ""
"Se ``y = re.search(b'bar', b'bar')`` (observe o ``b`` para :class:`bytes`), "
"``y`` também será uma instância de ``re.Match``, mas os valores de retorno "
"de ``y.group(0)`` e ``y[0]`` serão ambos do tipo :class:`bytes`. Em "
"anotações de tipo, representaríamos esta variedade de objetos :ref:`re.Match "
"<match-objects>` com ``re.Match[bytes]``."

#: ../../library/stdtypes.rst:4958
msgid ""
"``GenericAlias`` objects are instances of the class :class:`types."
"GenericAlias`, which can also be used to create ``GenericAlias`` objects "
"directly."
msgstr ""
"Objetos ``GenericAlias`` são instâncias da classe :class:`types."
"GenericAlias`, que também podem ser usadas para criar objetos "
"``GenericAlias`` diretamente."

#: ../../library/stdtypes.rst:4964
msgid ""
"Creates a ``GenericAlias`` representing a type ``T`` parameterized by types "
"*X*, *Y*, and more depending on the ``T`` used. For example, a function "
"expecting a :class:`list` containing :class:`float` elements::"
msgstr ""
"Cria um ``GenericAlias`` representando um tipo ``T`` parametrizado por tipos "
"*X*, *Y* e mais, dependendo do ``T`` usados. Por exemplo, uma função "
"esperando uma :class:`list` contendo elementos :class:`float`::"

#: ../../library/stdtypes.rst:4969
msgid ""
"def average(values: list[float]) -> float:\n"
"    return sum(values) / len(values)"
msgstr ""

#: ../../library/stdtypes.rst:4972
msgid ""
"Another example for :term:`mapping` objects, using a :class:`dict`, which is "
"a generic type expecting two type parameters representing the key type and "
"the value type.  In this example, the function expects a ``dict`` with keys "
"of type :class:`str` and values of type :class:`int`::"
msgstr ""
"Outro exemplo para :term:`mapeamento <mapping>` de objetos, usando um :class:"
"`dict`, o qual é um tipo genérico esperando 2 tipos de parâmetros "
"representando o tipo da chave e o tipo do valor. Neste exemplo, a função "
"espera um ``dict`` com chaves do tipo :class:`str` e valores do tipo :class:"
"`int`::"

#: ../../library/stdtypes.rst:4977
msgid ""
"def send_post_request(url: str, body: dict[str, int]) -> None:\n"
"    ..."
msgstr ""

#: ../../library/stdtypes.rst:4980
msgid ""
"The builtin functions :func:`isinstance` and :func:`issubclass` do not "
"accept ``GenericAlias`` types for their second argument::"
msgstr ""
"As funções embutidas :func:`isinstance` e :func:`issubclass` não aceitam "
"tipos ``GenericAlias`` para o seu segundo argumento::"

#: ../../library/stdtypes.rst:4983
msgid ""
">>> isinstance([1, 2], list[str])\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"TypeError: isinstance() argument 2 cannot be a parameterized generic"
msgstr ""

#: ../../library/stdtypes.rst:4988
msgid ""
"The Python runtime does not enforce :term:`type annotations <annotation>`. "
"This extends to generic types and their type parameters. When creating a "
"container object from a ``GenericAlias``, the elements in the container are "
"not checked against their type. For example, the following code is "
"discouraged, but will run without errors::"
msgstr ""
"O runtime Python não obriga :term:`anotações de tipo <annotation>`. Isso se "
"aplica a tipos genéricos e seus parâmetros tipados. Ao criar um objeto "
"contêiner a partir de um ``GenericAlias``, os elementos no contêiner não são "
"verificados pelo seu tipo. Por exemplo, o seguinte código é desencorajado, "
"mas irá executar sem erros::"

#: ../../library/stdtypes.rst:4994
msgid ""
">>> t = list[str]\n"
">>> t([1, 2, 3])\n"
"[1, 2, 3]"
msgstr ""

#: ../../library/stdtypes.rst:4998
msgid ""
"Furthermore, parameterized generics erase type parameters during object "
"creation::"
msgstr ""
"Além disso, genéricos parametrizados removem parâmetros tipados durante a "
"criação do objeto::"

#: ../../library/stdtypes.rst:5001
msgid ""
">>> t = list[str]\n"
">>> type(t)\n"
"<class 'types.GenericAlias'>\n"
"\n"
">>> l = t()\n"
">>> type(l)\n"
"<class 'list'>"
msgstr ""

#: ../../library/stdtypes.rst:5009
msgid ""
"Calling :func:`repr` or :func:`str` on a generic shows the parameterized "
"type::"
msgstr ""
"Chamar :func:`repr` ou :func:`str` sobre um genérico mostra o tipo "
"parametrizado::"

#: ../../library/stdtypes.rst:5011
msgid ""
">>> repr(list[int])\n"
"'list[int]'\n"
"\n"
">>> str(list[int])\n"
"'list[int]'"
msgstr ""

#: ../../library/stdtypes.rst:5017
msgid ""
"The :meth:`~object.__getitem__` method of generic containers will raise an "
"exception to disallow mistakes like ``dict[str][str]``::"
msgstr ""
"O método :meth:`~object.__getitem__` de contêineres genéricos irá levantar "
"uma exceção para não permitir erros como ``dict[str][str]``::"

#: ../../library/stdtypes.rst:5020
msgid ""
">>> dict[str][str]\n"
"Traceback (most recent call last):\n"
"  ...\n"
"TypeError: dict[str] is not a generic class"
msgstr ""

#: ../../library/stdtypes.rst:5025
msgid ""
"However, such expressions are valid when :ref:`type variables <generics>` "
"are used.  The index must have as many elements as there are type variable "
"items in the ``GenericAlias`` object's :attr:`~genericalias.__args__`. ::"
msgstr ""
"Entretanto, tais expressões são válidas quando :ref:`type variáveis "
"<generics>` são usadas. O índice deve ter tantos elementos quantos forem os "
"itens de variável de tipo no objeto ``GenericAlias`` :attr:`~genericalias."
"__args__`. ::"

#: ../../library/stdtypes.rst:5029
msgid ""
">>> from typing import TypeVar\n"
">>> Y = TypeVar('Y')\n"
">>> dict[str, Y][int]\n"
"dict[str, int]"
msgstr ""

#: ../../library/stdtypes.rst:5036
msgid "Standard Generic Classes"
msgstr "Classes genéricas padrão"

#: ../../library/stdtypes.rst:5038
msgid ""
"The following standard library classes support parameterized generics. This "
"list is non-exhaustive."
msgstr ""
"As seguintes classes de biblioteca padrão oferecem suporte a genéricos "
"parametrizados. Esta lista não é exaustiva."

#: ../../library/stdtypes.rst:5041
msgid ":class:`tuple`"
msgstr ":class:`tuple`"

#: ../../library/stdtypes.rst:5042
msgid ":class:`list`"
msgstr ":class:`list`"

#: ../../library/stdtypes.rst:5043
msgid ":class:`dict`"
msgstr ":class:`dict`"

#: ../../library/stdtypes.rst:5044
msgid ":class:`set`"
msgstr ":class:`set`"

#: ../../library/stdtypes.rst:5045
msgid ":class:`frozenset`"
msgstr ":class:`frozenset`"

#: ../../library/stdtypes.rst:5046
msgid ":class:`type`"
msgstr ":class:`type`"

#: ../../library/stdtypes.rst:5047
msgid ":class:`collections.deque`"
msgstr ":class:`collections.deque`"

#: ../../library/stdtypes.rst:5048
msgid ":class:`collections.defaultdict`"
msgstr ":class:`collections.defaultdict`"

#: ../../library/stdtypes.rst:5049
msgid ":class:`collections.OrderedDict`"
msgstr ":class:`collections.OrderedDict`"

#: ../../library/stdtypes.rst:5050
msgid ":class:`collections.Counter`"
msgstr ":class:`collections.Counter`"

#: ../../library/stdtypes.rst:5051
msgid ":class:`collections.ChainMap`"
msgstr ":class:`collections.ChainMap`"

#: ../../library/stdtypes.rst:5052
msgid ":class:`collections.abc.Awaitable`"
msgstr ":class:`collections.abc.Awaitable`"

#: ../../library/stdtypes.rst:5053
msgid ":class:`collections.abc.Coroutine`"
msgstr ":class:`collections.abc.Coroutine`"

#: ../../library/stdtypes.rst:5054
msgid ":class:`collections.abc.AsyncIterable`"
msgstr ":class:`collections.abc.AsyncIterable`"

#: ../../library/stdtypes.rst:5055
msgid ":class:`collections.abc.AsyncIterator`"
msgstr ":class:`collections.abc.AsyncIterator`"

#: ../../library/stdtypes.rst:5056
msgid ":class:`collections.abc.AsyncGenerator`"
msgstr ":class:`collections.abc.AsyncGenerator`"

#: ../../library/stdtypes.rst:5057
msgid ":class:`collections.abc.Iterable`"
msgstr ":class:`collections.abc.Iterable`"

#: ../../library/stdtypes.rst:5058
msgid ":class:`collections.abc.Iterator`"
msgstr ":class:`collections.abc.Iterator`"

#: ../../library/stdtypes.rst:5059
msgid ":class:`collections.abc.Generator`"
msgstr ":class:`collections.abc.Generator`"

#: ../../library/stdtypes.rst:5060
msgid ":class:`collections.abc.Reversible`"
msgstr ":class:`collections.abc.Reversible`"

#: ../../library/stdtypes.rst:5061
msgid ":class:`collections.abc.Container`"
msgstr ":class:`collections.abc.Container`"

#: ../../library/stdtypes.rst:5062
msgid ":class:`collections.abc.Collection`"
msgstr ":class:`collections.abc.Collection`"

#: ../../library/stdtypes.rst:5063
msgid ":class:`collections.abc.Callable`"
msgstr ":class:`collections.abc.Callable`"

#: ../../library/stdtypes.rst:5064
msgid ":class:`collections.abc.Set`"
msgstr ":class:`collections.abc.Set`"

#: ../../library/stdtypes.rst:5065
msgid ":class:`collections.abc.MutableSet`"
msgstr ":class:`collections.abc.MutableSet`"

#: ../../library/stdtypes.rst:5066
msgid ":class:`collections.abc.Mapping`"
msgstr ":class:`collections.abc.Mapping`"

#: ../../library/stdtypes.rst:5067
msgid ":class:`collections.abc.MutableMapping`"
msgstr ":class:`collections.abc.MutableMapping`"

#: ../../library/stdtypes.rst:5068
msgid ":class:`collections.abc.Sequence`"
msgstr ":class:`collections.abc.Sequence`"

#: ../../library/stdtypes.rst:5069
msgid ":class:`collections.abc.MutableSequence`"
msgstr ":class:`collections.abc.MutableSequence`"

#: ../../library/stdtypes.rst:5070
msgid ":class:`collections.abc.ByteString`"
msgstr ":class:`collections.abc.ByteString`"

#: ../../library/stdtypes.rst:5071
msgid ":class:`collections.abc.MappingView`"
msgstr ":class:`collections.abc.MappingView`"

#: ../../library/stdtypes.rst:5072
msgid ":class:`collections.abc.KeysView`"
msgstr ":class:`collections.abc.KeysView`"

#: ../../library/stdtypes.rst:5073
msgid ":class:`collections.abc.ItemsView`"
msgstr ":class:`collections.abc.ItemsView`"

#: ../../library/stdtypes.rst:5074
msgid ":class:`collections.abc.ValuesView`"
msgstr ":class:`collections.abc.ValuesView`"

#: ../../library/stdtypes.rst:5075
msgid ":class:`contextlib.AbstractContextManager`"
msgstr ":class:`contextlib.AbstractContextManager`"

#: ../../library/stdtypes.rst:5076
msgid ":class:`contextlib.AbstractAsyncContextManager`"
msgstr ":class:`contextlib.AbstractAsyncContextManager`"

#: ../../library/stdtypes.rst:5077
msgid ":class:`dataclasses.Field`"
msgstr ":class:`dataclasses.Field`"

#: ../../library/stdtypes.rst:5078
msgid ":class:`functools.cached_property`"
msgstr ":class:`functools.cached_property`"

#: ../../library/stdtypes.rst:5079
msgid ":class:`functools.partialmethod`"
msgstr ":class:`functools.partialmethod`"

#: ../../library/stdtypes.rst:5080
msgid ":class:`os.PathLike`"
msgstr ":class:`os.PathLike`"

#: ../../library/stdtypes.rst:5081
msgid ":class:`queue.LifoQueue`"
msgstr ":class:`queue.LifoQueue`"

#: ../../library/stdtypes.rst:5082
msgid ":class:`queue.Queue`"
msgstr ":class:`queue.Queue`"

#: ../../library/stdtypes.rst:5083
msgid ":class:`queue.PriorityQueue`"
msgstr ":class:`queue.PriorityQueue`"

#: ../../library/stdtypes.rst:5084
msgid ":class:`queue.SimpleQueue`"
msgstr ":class:`queue.SimpleQueue`"

#: ../../library/stdtypes.rst:5085
msgid ":ref:`re.Pattern <re-objects>`"
msgstr ":ref:`re.Pattern <re-objects>`"

#: ../../library/stdtypes.rst:5086
msgid ":ref:`re.Match <match-objects>`"
msgstr ":ref:`re.Match <match-objects>`"

#: ../../library/stdtypes.rst:5087
msgid ":class:`shelve.BsdDbShelf`"
msgstr ":class:`shelve.BsdDbShelf`"

#: ../../library/stdtypes.rst:5088
msgid ":class:`shelve.DbfilenameShelf`"
msgstr ":class:`shelve.DbfilenameShelf`"

#: ../../library/stdtypes.rst:5089
msgid ":class:`shelve.Shelf`"
msgstr ":class:`shelve.Shelf`"

#: ../../library/stdtypes.rst:5090
msgid ":class:`types.MappingProxyType`"
msgstr ":class:`types.MappingProxyType`"

#: ../../library/stdtypes.rst:5091
msgid ":class:`weakref.WeakKeyDictionary`"
msgstr ":class:`weakref.WeakKeyDictionary`"

#: ../../library/stdtypes.rst:5092
msgid ":class:`weakref.WeakMethod`"
msgstr ":class:`weakref.WeakMethod`"

#: ../../library/stdtypes.rst:5093
msgid ":class:`weakref.WeakSet`"
msgstr ":class:`weakref.WeakSet`"

#: ../../library/stdtypes.rst:5094
msgid ":class:`weakref.WeakValueDictionary`"
msgstr ":class:`weakref.WeakValueDictionary`"

#: ../../library/stdtypes.rst:5099
msgid "Special Attributes of ``GenericAlias`` objects"
msgstr "Atributos especiais de objetos ``GenericAlias``"

#: ../../library/stdtypes.rst:5101
msgid "All parameterized generics implement special read-only attributes."
msgstr ""
"Todos os genéricos parametrizados implementam atributos especiais somente "
"leitura."

#: ../../library/stdtypes.rst:5105
msgid "This attribute points at the non-parameterized generic class::"
msgstr "Este atributo aponta para a classe genérica não parametrizada::"

#: ../../library/stdtypes.rst:5107
msgid ""
">>> list[int].__origin__\n"
"<class 'list'>"
msgstr ""

#: ../../library/stdtypes.rst:5113
msgid ""
"This attribute is a :class:`tuple` (possibly of length 1) of generic types "
"passed to the original :meth:`~object.__class_getitem__` of the generic "
"class::"
msgstr ""
"Este atributo é uma :class:`tuple` (possivelmente de comprimento 1) de tipos "
"genéricos passado para o método :meth:`~object.__class_getitem__` original "
"da classe genérica::"

#: ../../library/stdtypes.rst:5117
msgid ""
">>> dict[str, list[int]].__args__\n"
"(<class 'str'>, list[int])"
msgstr ""

#: ../../library/stdtypes.rst:5123
msgid ""
"This attribute is a lazily computed tuple (possibly empty) of unique type "
"variables found in ``__args__``::"
msgstr ""
"O atributo é uma tupla computada preguiçosamente (possivelmente vazia) de "
"variáveis de tipo único encontradas em ``__args__``::"

#: ../../library/stdtypes.rst:5126
msgid ""
">>> from typing import TypeVar\n"
"\n"
">>> T = TypeVar('T')\n"
">>> list[T].__parameters__\n"
"(~T,)"
msgstr ""

#: ../../library/stdtypes.rst:5134
msgid ""
"A ``GenericAlias`` object with :class:`typing.ParamSpec` parameters may not "
"have correct ``__parameters__`` after substitution because :class:`typing."
"ParamSpec` is intended primarily for static type checking."
msgstr ""
"Um objeto ``GenericAlias`` com os parâmetros :class:`typing.ParamSpec` pode "
"não ter ``__parameters__`` correto após a substituição porque :class:`typing."
"ParamSpec` se destina principalmente à verificação de tipo estático."

#: ../../library/stdtypes.rst:5141
msgid ""
"A boolean that is true if the alias has been unpacked using the ``*`` "
"operator (see :data:`~typing.TypeVarTuple`)."
msgstr ""
"Um booleano que é true se o apelido foi desempacotado usando o operador "
"``*`` (consulte :data:`~typing.TypeVarTuple`)."

#: ../../library/stdtypes.rst:5149
msgid ":pep:`484` - Type Hints"
msgstr ":pep:`484` - Dicas de tipo"

#: ../../library/stdtypes.rst:5150
msgid "Introducing Python's framework for type annotations."
msgstr "Apresentando a estrutura do Python para anotações de tipo."

#: ../../library/stdtypes.rst:5152
msgid ":pep:`585` - Type Hinting Generics In Standard Collections"
msgstr ":pep:`585` - Sugestão de tipo para Genéricos em coleções padrão"

#: ../../library/stdtypes.rst:5153
msgid ""
"Introducing the ability to natively parameterize standard-library classes, "
"provided they implement the special class method :meth:`~object."
"__class_getitem__`."
msgstr ""
"Apresentando a capacidade de parametrizar nativamente as classes da "
"biblioteca padrão, desde que implementem o método de classe especial :meth:"
"`~object.__class_getitem__`."

#: ../../library/stdtypes.rst:5157
msgid ""
":ref:`Generics`, :ref:`user-defined generics <user-defined-generics>` and :"
"class:`typing.Generic`"
msgstr ""
":ref:`Generics`, :ref:`genéricos definidos pelo usuário <user-defined-"
"generics>` e :class:`typing.Generic`"

#: ../../library/stdtypes.rst:5158
msgid ""
"Documentation on how to implement generic classes that can be parameterized "
"at runtime and understood by static type-checkers."
msgstr ""
"Documentação sobre como implementar classes genéricas que podem ser "
"parametrizadas em tempo de execução e compreendidas por verificadores de "
"tipo estático."

#: ../../library/stdtypes.rst:5167
msgid "Union Type"
msgstr "Tipo União"

#: ../../library/stdtypes.rst:5173
msgid ""
"A union object holds the value of the ``|`` (bitwise or) operation on "
"multiple :ref:`type objects <bltin-type-objects>`.  These types are intended "
"primarily for :term:`type annotations <annotation>`. The union type "
"expression enables cleaner type hinting syntax compared to :data:`typing."
"Union`."
msgstr ""
"Um objeto união contém o valor da operação ``|`` (bit a bit ou) em vários :"
"ref:`objetos tipo <bltin-type-objects>`. Esses tipos são destinados "
"principalmente para :term:`anotações de tipo <annotation>`. A expressão de "
"tipo de união habilita a sintaxe de sugestão de tipo mais limpo em "
"comparação com :data:`typing.Union`."

#: ../../library/stdtypes.rst:5180
msgid ""
"Defines a union object which holds types *X*, *Y*, and so forth. ``X | Y`` "
"means either X or Y.  It is equivalent to ``typing.Union[X, Y]``. For "
"example, the following function expects an argument of type :class:`int` or :"
"class:`float`::"
msgstr ""
"Define um objeto união que contém os tipos *X*, *Y* e assim por diante. ``X "
"| Y`` significa X ou Y. É equivalente a ``typing.Union[X, Y]``. Por exemplo, "
"a seguinte função espera um argumento do tipo :class:`int` ou :class:"
"`float`::"

#: ../../library/stdtypes.rst:5185
msgid ""
"def square(number: int | float) -> int | float:\n"
"    return number ** 2"
msgstr ""

#: ../../library/stdtypes.rst:5190
msgid ""
"The ``|`` operand cannot be used at runtime to define unions where one or "
"more members is a forward reference. For example, ``int | \"Foo\"``, where "
"``\"Foo\"`` is a reference to a class not yet defined, will fail at runtime. "
"For unions which include forward references, present the whole expression as "
"a string, e.g. ``\"int | Foo\"``."
msgstr ""
"O operando ``|`` não pode ser usado em tempo de execução para definir uniões "
"onde um ou mais membros são uma referência direta. Por exemplo, ``int | "
"\"Foo\"``, onde ``\"Foo\"`` é uma referência a uma classe ainda não "
"definida, falhará em tempo de execução. Para uniões que incluem referências "
"futuras, apresente a expressão inteira como uma string, por exemplo. ``\"int "
"| Foo\"``."

#: ../../library/stdtypes.rst:5198
msgid ""
"Union objects can be tested for equality with other union objects.  Details:"
msgstr ""
"Os objetos união podem ser testados quanto à igualdade com outros objetos "
"união. Detalhes:"

#: ../../library/stdtypes.rst:5200
msgid "Unions of unions are flattened::"
msgstr "Uniões de uniões são achatadas::"

#: ../../library/stdtypes.rst:5202
msgid "(int | str) | float == int | str | float"
msgstr ""

#: ../../library/stdtypes.rst:5204
msgid "Redundant types are removed::"
msgstr "Tipos redundantes são removidos::"

#: ../../library/stdtypes.rst:5206
msgid "int | str | int == int | str"
msgstr ""

#: ../../library/stdtypes.rst:5208
msgid "When comparing unions, the order is ignored::"
msgstr "Ao comparar uniões, a ordem é ignorada::"

#: ../../library/stdtypes.rst:5210
msgid "int | str == str | int"
msgstr ""

#: ../../library/stdtypes.rst:5212
msgid "It is compatible with :data:`typing.Union`::"
msgstr "É compatível com :data:`typing.Union`::"

#: ../../library/stdtypes.rst:5214
msgid "int | str == typing.Union[int, str]"
msgstr ""

#: ../../library/stdtypes.rst:5216
msgid "Optional types can be spelled as a union with ``None``::"
msgstr "Tipos opcionais podem ser escritos como uma união com ``None``::"

#: ../../library/stdtypes.rst:5218
msgid "str | None == typing.Optional[str]"
msgstr ""

#: ../../library/stdtypes.rst:5223
msgid ""
"Calls to :func:`isinstance` and :func:`issubclass` are also supported with a "
"union object::"
msgstr ""
"Chamadas para :func:`isinstance` e :func:`issubclass` também são suportados "
"com um objeto união::"

#: ../../library/stdtypes.rst:5226
msgid ""
">>> isinstance(\"\", int | str)\n"
"True"
msgstr ""

#: ../../library/stdtypes.rst:5229
msgid ""
"However, :ref:`parameterized generics <types-genericalias>` in union objects "
"cannot be checked::"
msgstr ""
"No entanto, :ref:`genéricos parametrizados <types-genericalias>` em objetos "
"de união não podem ser verificados::"

#: ../../library/stdtypes.rst:5232
msgid ""
">>> isinstance(1, int | list[int])  # short-circuit evaluation\n"
"True\n"
">>> isinstance([1], int | list[int])\n"
"Traceback (most recent call last):\n"
"  ...\n"
"TypeError: isinstance() argument 2 cannot be a parameterized generic"
msgstr ""

#: ../../library/stdtypes.rst:5239
msgid ""
"The user-exposed type for the union object can be accessed from :data:`types."
"UnionType` and used for :func:`isinstance` checks.  An object cannot be "
"instantiated from the type::"
msgstr ""
"O tipo exposto ao usuário para o objeto união pode ser acessado a partir de :"
"data:`types.UnionType` e usado por verificações de :func:`isinstance`. Um "
"objeto não pode ser instanciado a partir do tipo::"

#: ../../library/stdtypes.rst:5243
msgid ""
">>> import types\n"
">>> isinstance(int | str, types.UnionType)\n"
"True\n"
">>> types.UnionType()\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"TypeError: cannot create 'types.UnionType' instances"
msgstr ""

#: ../../library/stdtypes.rst:5252
msgid ""
"The :meth:`!__or__` method for type objects was added to support the syntax "
"``X | Y``.  If a metaclass implements :meth:`!__or__`, the Union may "
"override it:"
msgstr ""
"O método :meth:`!__or__` para objetos de tipo foi adicionado para suportar a "
"sintaxe ``X | Y``. Se uma metaclasse implementa :meth:`!__or__`, a União "
"pode substituí-la:"

#: ../../library/stdtypes.rst:5256
msgid ""
">>> class M(type):\n"
"...     def __or__(self, other):\n"
"...         return \"Hello\"\n"
"...\n"
">>> class C(metaclass=M):\n"
"...     pass\n"
"...\n"
">>> C | int\n"
"'Hello'\n"
">>> int | C\n"
"int | C"
msgstr ""

#: ../../library/stdtypes.rst:5272
msgid ":pep:`604` -- PEP proposing the ``X | Y`` syntax and the Union type."
msgstr ":pep:`604` -- PEP propondo a sintaxe ``X | Y`` e o tipo União."

#: ../../library/stdtypes.rst:5280
msgid "Other Built-in Types"
msgstr "Outros tipos embutidos"

#: ../../library/stdtypes.rst:5282
msgid ""
"The interpreter supports several other kinds of objects. Most of these "
"support only one or two operations."
msgstr ""
"O interpretador suporta diversos outros tipos de objetos. Maior parte "
"desses, suporta apenas uma ou duas operações."

#: ../../library/stdtypes.rst:5289
msgid "Modules"
msgstr "Módulos"

#: ../../library/stdtypes.rst:5291
msgid ""
"The only special operation on a module is attribute access: ``m.name``, "
"where *m* is a module and *name* accesses a name defined in *m*'s symbol "
"table. Module attributes can be assigned to.  (Note that the :keyword:"
"`import` statement is not, strictly speaking, an operation on a module "
"object; ``import foo`` does not require a module object named *foo* to "
"exist, rather it requires an (external) *definition* for a module named "
"*foo* somewhere.)"
msgstr ""
"A única operação especial em um módulo é o acesso a um atributo: ``m.name``, "
"onde *m* é um módulo e *name* acessa o nome defino na tabela de símbolos de "
"*m*. Atributos de módulo podem receber atribuição. (Perceba que a instrução :"
"keyword:`import` não é, estritamente falando, uma operação em um objeto do "
"módulo; ``import foo`` não requer que um objeto do módulo chamado *foo* "
"exista, ao invés disso requer uma *definição* (externa) de um módulo chamado "
"*foo* em algum lugar.)"

#: ../../library/stdtypes.rst:5298
msgid ""
"A special attribute of every module is :attr:`~object.__dict__`. This is the "
"dictionary containing the module's symbol table. Modifying this dictionary "
"will actually change the module's symbol table, but direct assignment to "
"the :attr:`~object.__dict__` attribute is not possible (you can write ``m."
"__dict__['a'] = 1``, which defines ``m.a`` to be ``1``, but you can't write "
"``m.__dict__ = {}``).  Modifying :attr:`~object.__dict__` directly is not "
"recommended."
msgstr ""
"Um atributo especial de cada módulo é :attr:`~object.__dict__`. Este é o "
"dicionário contendo a tabela de símbolos do modulo. Modificar este "
"dicionário vai na verdade modificar a tabela de símbolos do módulo, mas "
"atribuição direta para o atributo :attr:`~object.__dict__` não é possível "
"(você pode escrever ``m.__dict__['a'] = 1``, o qual define ``m.a`` para ser "
"``1``, mas você não consegue escrever ``m.__dict__ = {}``). Modificar :attr:"
"`~object.__dict__` diretamente não é recomendado."

#: ../../library/stdtypes.rst:5306
msgid ""
"Modules built into the interpreter are written like this: ``<module "
"'sys' (built-in)>``.  If loaded from a file, they are written as ``<module "
"'os' from '/usr/local/lib/pythonX.Y/os.pyc'>``."
msgstr ""
"Módulos embutidos no interpretador são escritos desta forma: ``<module "
"'sys' (built-in)>``. Se carregados a partir de um arquivo, eles são escritos "
"como ``<module 'os' from '/usr/local/lib/pythonX.Y/os.pyc'>``."

#: ../../library/stdtypes.rst:5314
msgid "Classes and Class Instances"
msgstr "Classes e Instâncias de Classes"

#: ../../library/stdtypes.rst:5316
msgid "See :ref:`objects` and :ref:`class` for these."
msgstr "Veja :ref:`objects` e :ref:`class` para estes."

#: ../../library/stdtypes.rst:5322
msgid "Functions"
msgstr "Funções"

#: ../../library/stdtypes.rst:5324
msgid ""
"Function objects are created by function definitions.  The only operation on "
"a function object is to call it: ``func(argument-list)``."
msgstr ""
"Objetos função são criados através da definição de funções. A única operação "
"que pode ser feita em um objeto função é chamá-la: ``func(lista-de-"
"argumentos)``."

#: ../../library/stdtypes.rst:5327
msgid ""
"There are really two flavors of function objects: built-in functions and "
"user-defined functions.  Both support the same operation (to call the "
"function), but the implementation is different, hence the different object "
"types."
msgstr ""
"Existem na verdade duas possibilidades de objetos função: funções embutidas "
"e funções definidas pelo usuário. Ambas suportam a mesma operação (chamar a "
"função), mas a implementação é diferente, portanto os diferentes tipos de "
"objetos."

#: ../../library/stdtypes.rst:5331
msgid "See :ref:`function` for more information."
msgstr "Veja a função :ref:`function` para mais informações."

#: ../../library/stdtypes.rst:5337
msgid "Methods"
msgstr "Métodos"

#: ../../library/stdtypes.rst:5341
msgid ""
"Methods are functions that are called using the attribute notation. There "
"are two flavors: :ref:`built-in methods <builtin-methods>` (such as :meth:"
"`append` on lists) and :ref:`class instance method <instance-methods>`. "
"Built-in methods are described with the types that support them."
msgstr ""
"Métodos são funções que são chamadas usando a notação de atributo. Existem "
"duas opções: :ref:`métodos embutidos <builtin-methods>` (tal como :meth:"
"`append` em listas) e :ref:`métodos de instância de classe <instance-"
"methods>`. Métodos embutidos são descritos com os tipos que suportam eles."

#: ../../library/stdtypes.rst:5346
msgid ""
"If you access a method (a function defined in a class namespace) through an "
"instance, you get a special object: a :dfn:`bound method` (also called :ref:"
"`instance method <instance-methods>`) object. When called, it will add the "
"``self`` argument to the argument list.  Bound methods have two special read-"
"only attributes: :attr:`m.__self__ <method.__self__>` is the object on which "
"the method operates, and :attr:`m.__func__ <method.__func__>` is the "
"function implementing the method.  Calling ``m(arg-1, arg-2, ..., arg-n)`` "
"is completely equivalent to calling ``m.__func__(m.__self__, arg-1, "
"arg-2, ..., arg-n)``."
msgstr ""
"Se você acessar um método (uma função definida em um espaço de nomes de uma "
"classe) através de uma instância, você obtém um objeto especial: um objeto "
"com :dfn:`método vinculado` (também chamado de :ref:`método de instância "
"<instance-methods>`). Quando chamado, ele irá adicionar o argumento ``self`` "
"para a lista de argumentos. Métodos vinculados tem dois atributos somente "
"leitura especiais: :attr:`m.__self__ <method.__self__>` é o objeto no qual o "
"método opera, e :attr:`m.__func__ <method.__func__>` é a função que "
"implementa o método. Chamar ``m(arg-1, arg-2, ..., arg-n)`` é completamente "
"equivalente a chamar ``m.__func__(m.__self__, arg-1, arg-2, ..., arg-n)``."

#: ../../library/stdtypes.rst:5357
msgid ""
"Like :ref:`function objects <user-defined-funcs>`, bound method objects "
"support getting arbitrary attributes.  However, since method attributes are "
"actually stored on the underlying function object (:attr:`method.__func__`), "
"setting method attributes on bound methods is disallowed.  Attempting to set "
"an attribute on a method results in an :exc:`AttributeError` being raised.  "
"In order to set a method attribute, you need to explicitly set it on the "
"underlying function object:"
msgstr ""
"Assim como :ref:`objetos função <user-defined-funcs>`, objetos de métodos "
"vinculados tem suporte para receber atributos arbitrários. Entretanto, como "
"atributos de método na verdade são armazenados no objeto função subjacente (:"
"attr:`method.__func__`), definir atributos de método em métodos vinculados "
"não é permitido. Tentar definir um atributo em um método resulta em um :exc:"
"`AttributeError` sendo levantado. A fim de definir um atributo de método, "
"você precisa definir explicitamente ele no objeto função subjacente::"

#: ../../library/stdtypes.rst:5365
msgid ""
">>> class C:\n"
"...     def method(self):\n"
"...         pass\n"
"...\n"
">>> c = C()\n"
">>> c.method.whoami = 'my name is method'  # can't set on the method\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"AttributeError: 'method' object has no attribute 'whoami'\n"
">>> c.method.__func__.whoami = 'my name is method'\n"
">>> c.method.whoami\n"
"'my name is method'"
msgstr ""

#: ../../library/stdtypes.rst:5380
msgid "See :ref:`instance-methods` for more information."
msgstr "Veja :ref:`instance-methods` para mais informações."

#: ../../library/stdtypes.rst:5388
msgid "Code Objects"
msgstr "Objetos código"

#: ../../library/stdtypes.rst:5394
msgid ""
"Code objects are used by the implementation to represent \"pseudo-compiled\" "
"executable Python code such as a function body. They differ from function "
"objects because they don't contain a reference to their global execution "
"environment.  Code objects are returned by the built-in :func:`compile` "
"function and can be extracted from function objects through their :attr:"
"`~function.__code__` attribute. See also the :mod:`code` module."
msgstr ""
"Objetos código são usados pela implementação para representar código Python "
"executável \"pseudo-compilado\", tal como corpo de uma função. Eles são "
"diferentes de objetos função porque eles não contém uma referência para os "
"seus ambientes de execução global. Objetos código são retornados pela função "
"embutida :func:`compile` e podem ser extraídos de objetos função através do "
"seu atributo :attr:`~function.__code__`. Veja também o módulo :mod:`code`."

#: ../../library/stdtypes.rst:5401
msgid ""
"Accessing :attr:`~function.__code__` raises an :ref:`auditing event "
"<auditing>` ``object.__getattr__`` with arguments ``obj`` and "
"``\"__code__\"``."
msgstr ""
"Acessar :attr:`~function.__code__` levanta um :ref:`evento de auditoria "
"<auditing>` ``object.__getattr__`` com os argumentos ``obj`` e "
"``\"__code__\"``."

#: ../../library/stdtypes.rst:5408
msgid ""
"A code object can be executed or evaluated by passing it (instead of a "
"source string) to the :func:`exec` or :func:`eval`  built-in functions."
msgstr ""
"Um objeto de código pode ser executado ou avaliado passando-o (ao invés da "
"string fonte) para as funções embutidas :func:`exec` ou :func:`eval`."

#: ../../library/stdtypes.rst:5411
msgid "See :ref:`types` for more information."
msgstr "Veja o tipo :ref:`types` para maiores informações."

#: ../../library/stdtypes.rst:5417
msgid "Type Objects"
msgstr "Objetos tipo"

#: ../../library/stdtypes.rst:5423
msgid ""
"Type objects represent the various object types.  An object's type is "
"accessed by the built-in function :func:`type`.  There are no special "
"operations on types.  The standard module :mod:`types` defines names for all "
"standard built-in types."
msgstr ""
"Objetos de tipos representam os vários tipos de objetos. Um tipo de um "
"objeto é acessado pela função embutida :func:`type`. Não existem operações "
"especiais sobre tipos. O módulo padrão :mod:`types` define nomes para todos "
"os tipos padrão embutidos."

#: ../../library/stdtypes.rst:5428
msgid "Types are written like this: ``<class 'int'>``."
msgstr "Tipos são escritos como isto: ``<class 'int'>``."

#: ../../library/stdtypes.rst:5434
msgid "The Null Object"
msgstr "O objeto nulo"

#: ../../library/stdtypes.rst:5436
msgid ""
"This object is returned by functions that don't explicitly return a value.  "
"It supports no special operations.  There is exactly one null object, named "
"``None`` (a built-in name).  ``type(None)()`` produces the same singleton."
msgstr ""
"Este objeto é retornado por funções que não retornam um valor "
"explicitamente. Ele não suporta operações especiais. Existe exatamente um "
"objeto nulo, chamado de ``None`` (um nome embutido). ``type(None)()`` produz "
"o mesmo singleton."

#: ../../library/stdtypes.rst:5440
msgid "It is written as ``None``."
msgstr "Ele é escrito como ``None``."

#: ../../library/stdtypes.rst:5447
msgid "The Ellipsis Object"
msgstr "O Objeto Ellipsis"

#: ../../library/stdtypes.rst:5449
msgid ""
"This object is commonly used by slicing (see :ref:`slicings`).  It supports "
"no special operations.  There is exactly one ellipsis object, named :const:"
"`Ellipsis` (a built-in name).  ``type(Ellipsis)()`` produces the :const:"
"`Ellipsis` singleton."
msgstr ""
"Este objeto é comumente usado através de fatiamento (veja :ref:`slicings`). "
"Ela não suporta operações especiais. Existe exatamente um objeto ellipsis, "
"nomeado :const:`Ellipsis` (um nome embutido). ``type(Ellipsis)()`` produz o "
"singleton :const:`Ellipsis`."

#: ../../library/stdtypes.rst:5454
msgid "It is written as ``Ellipsis`` or ``...``."
msgstr "Está escrito com ``Ellipsis`` ou ``...``."

#: ../../library/stdtypes.rst:5460
msgid "The NotImplemented Object"
msgstr "O Objeto NotImplemented"

#: ../../library/stdtypes.rst:5462
msgid ""
"This object is returned from comparisons and binary operations when they are "
"asked to operate on types they don't support. See :ref:`comparisons` for "
"more information.  There is exactly one :data:`NotImplemented` object. :code:"
"`type(NotImplemented)()` produces the singleton instance."
msgstr ""
"Este objeto é retornado a partir de comparações e operações binárias quando "
"elas são solicitadas para operar em tipos nos quais eles não suportam. Veja :"
"ref:`comparisons` para mais informações. Existe exatamente um objeto :data:"
"`NotImplemented`. :code:`type(NotImplemented)()` produz o mesmo valor."

#: ../../library/stdtypes.rst:5467
msgid "It is written as :code:`NotImplemented`."
msgstr "Está escrito como :code:`NotImplemented`."

#: ../../library/stdtypes.rst:5473
msgid "Internal Objects"
msgstr "Objetos Internos"

#: ../../library/stdtypes.rst:5475
msgid ""
"See :ref:`types` for this information.  It describes :ref:`stack frame "
"objects <frame-objects>`, :ref:`traceback objects <traceback-objects>`, and "
"slice objects."
msgstr ""
"Veja :ref:`types` para esta informação. Descreve :ref:`objetos de quadro de "
"pilha <frame-objects>`, :ref:`objetos traceback (situação da pilha de "
"execução) <traceback-objects>`, e objetos fatia."

#: ../../library/stdtypes.rst:5483
msgid "Special Attributes"
msgstr "Atributos Especiais"

#: ../../library/stdtypes.rst:5485
msgid ""
"The implementation adds a few special read-only attributes to several object "
"types, where they are relevant.  Some of these are not reported by the :func:"
"`dir` built-in function."
msgstr ""
"A implementação adiciona alguns atributos especiais somente leitura para "
"diversos tipos de objetos, onde eles são relevantes. Alguns desses não são "
"reportados pela função embutida :func:`dir`."

#: ../../library/stdtypes.rst:5492
msgid ""
"The name of the class, function, method, descriptor, or generator instance."
msgstr "O nome da classe, função, método, descritor, ou instância geradora."

#: ../../library/stdtypes.rst:5498
msgid ""
"The :term:`qualified name` of the class, function, method, descriptor, or "
"generator instance."
msgstr ""
"O :term:`nome qualificado <qualified name>` da classe, função, método, "
"descritor, ou instância geradora."

#: ../../library/stdtypes.rst:5506
msgid "The name of the module in which a class or function was defined."
msgstr ""

#: ../../library/stdtypes.rst:5511
msgid ""
"The documentation string of a class or function, or ``None`` if undefined."
msgstr ""

#: ../../library/stdtypes.rst:5516
msgid ""
"The :ref:`type parameters <type-params>` of generic classes, functions, and :"
"ref:`type aliases <type-aliases>`. For classes and functions that are not "
"generic, this will be an empty tuple."
msgstr ""

#: ../../library/stdtypes.rst:5526
msgid "Integer string conversion length limitation"
msgstr "Limitação de comprimento de string na conversão para inteiro"

#: ../../library/stdtypes.rst:5528
msgid ""
"CPython has a global limit for converting between :class:`int` and :class:"
"`str` to mitigate denial of service attacks. This limit *only* applies to "
"decimal or other non-power-of-two number bases. Hexadecimal, octal, and "
"binary conversions are unlimited. The limit can be configured."
msgstr ""
"CPython tem um limite global para conversão entre :class:`int` e :class:"
"`str` para mitigar ataques de negação de serviço. Esse limite *somente* se "
"aplica a bases numéricas decimais ou outras que não sejam potência de dois. "
"As conversões hexadecimais, octais e binárias são ilimitadas. O limite pode "
"ser configurado."

#: ../../library/stdtypes.rst:5533
msgid ""
"The :class:`int` type in CPython is an arbitrary length number stored in "
"binary form (commonly known as a \"bignum\"). There exists no algorithm that "
"can convert a string to a binary integer or a binary integer to a string in "
"linear time, *unless* the base is a power of 2. Even the best known "
"algorithms for base 10 have sub-quadratic complexity. Converting a large "
"value such as ``int('1' * 500_000)`` can take over a second on a fast CPU."
msgstr ""
"O tipo :class:`int` no CPython é um número de comprimento arbitrário "
"armazenado em formato binário (comumente conhecido como \"bignum\"). Não "
"existe nenhum algoritmo que possa converter uma string em um inteiro binário "
"ou um inteiro binário em uma string em tempo linear, *a menos que* a base "
"seja uma potência de 2. Mesmo os algoritmos mais conhecidos para a base 10 "
"têm complexidade subquadrática. Converter um valor grande como ``int('1' * "
"500_000)`` pode levar mais de um segundo em uma CPU rápida."

#: ../../library/stdtypes.rst:5540
msgid ""
"Limiting conversion size offers a practical way to avoid :cve:`2020-10735`."
msgstr ""
"Limitar o tamanho da conversão oferece uma maneira prática de evitar :cve:"
"`2020-10735`."

#: ../../library/stdtypes.rst:5542
msgid ""
"The limit is applied to the number of digit characters in the input or "
"output string when a non-linear conversion algorithm would be involved.  "
"Underscores and the sign are not counted towards the limit."
msgstr ""
"O limite é aplicado ao número de caracteres de dígitos na string de entrada "
"ou saída quando um algoritmo de conversão não linear estiver envolvido. "
"Sublinhados e o sinal não são contados para o limite."

#: ../../library/stdtypes.rst:5546
msgid ""
"When an operation would exceed the limit, a :exc:`ValueError` is raised:"
msgstr ""
"Quando uma operação excede o limite, uma exceção :exc:`ValueError` é "
"levantada:"

#: ../../library/stdtypes.rst:5548
msgid ""
">>> import sys\n"
">>> sys.set_int_max_str_digits(4300)  # Illustrative, this is the default.\n"
">>> _ = int('2' * 5432)\n"
"Traceback (most recent call last):\n"
"...\n"
"ValueError: Exceeds the limit (4300 digits) for integer string conversion: "
"value has 5432 digits; use sys.set_int_max_str_digits() to increase the "
"limit\n"
">>> i = int('2' * 4300)\n"
">>> len(str(i))\n"
"4300\n"
">>> i_squared = i*i\n"
">>> len(str(i_squared))\n"
"Traceback (most recent call last):\n"
"...\n"
"ValueError: Exceeds the limit (4300 digits) for integer string conversion; "
"use sys.set_int_max_str_digits() to increase the limit\n"
">>> len(hex(i_squared))\n"
"7144\n"
">>> assert int(hex(i_squared), base=16) == i*i  # Hexadecimal is unlimited."
msgstr ""

#: ../../library/stdtypes.rst:5568
msgid ""
"The default limit is 4300 digits as provided in :data:`sys.int_info."
"default_max_str_digits <sys.int_info>`. The lowest limit that can be "
"configured is 640 digits as provided in :data:`sys.int_info."
"str_digits_check_threshold <sys.int_info>`."
msgstr ""
"O limite padrão é de 4300 dígitos conforme fornecido em :data:`sys.int_info."
"default_max_str_digits <sys.int_info>`. O limite mínimo que pode ser "
"configurado é de 640 dígitos conforme fornecido em :data:`sys.int_info."
"str_digits_check_threshold <sys.int_info>`."

#: ../../library/stdtypes.rst:5573
msgid "Verification:"
msgstr "Verificação:"

#: ../../library/stdtypes.rst:5575
msgid ""
">>> import sys\n"
">>> assert sys.int_info.default_max_str_digits == 4300, sys.int_info\n"
">>> assert sys.int_info.str_digits_check_threshold == 640, sys.int_info\n"
">>> msg = int('578966293710682886880994035146873798396722250538762761564'\n"
"...           '9252925514383915483333812743580549779436104706260696366600'\n"
"...           '571186405732').to_bytes(53, 'big')\n"
"..."
msgstr ""

#: ../../library/stdtypes.rst:5588
msgid "Affected APIs"
msgstr "APIs afetadas"

#: ../../library/stdtypes.rst:5590
msgid ""
"The limitation only applies to potentially slow conversions between :class:"
"`int` and :class:`str` or :class:`bytes`:"
msgstr ""
"A limitação só se aplica a conversões potencialmente lentas entre :class:"
"`int` e :class:`str` ou :class:`bytes`:"

#: ../../library/stdtypes.rst:5593
msgid "``int(string)`` with default base 10."
msgstr "``int(string)`` com padrão sendo base 10."

#: ../../library/stdtypes.rst:5594
msgid "``int(string, base)`` for all bases that are not a power of 2."
msgstr ""
"``int(string, base)`` para todas as bases que não são uma potência de 2."

#: ../../library/stdtypes.rst:5595
msgid "``str(integer)``."
msgstr "``str(integer)``."

#: ../../library/stdtypes.rst:5596
msgid "``repr(integer)``."
msgstr "``repr(integer)``."

#: ../../library/stdtypes.rst:5597
msgid ""
"any other string conversion to base 10, for example ``f\"{integer}\"``, "
"``\"{}\".format(integer)``, or ``b\"%d\" % integer``."
msgstr ""
"qualquer outra conversão de string para base 10 como, por exemplo, "
"``f\"{integer}\"``, ``\"{}\".format(integer)`` ou ``b\"%d\" % integer``."

#: ../../library/stdtypes.rst:5600
msgid "The limitations do not apply to functions with a linear algorithm:"
msgstr "As limitações não se aplicam a funções com um algoritmo linear:"

#: ../../library/stdtypes.rst:5602
msgid "``int(string, base)`` with base 2, 4, 8, 16, or 32."
msgstr "``int(string, base)`` com base 2, 4, 8, 16 ou 32."

#: ../../library/stdtypes.rst:5603
msgid ":func:`int.from_bytes` and :func:`int.to_bytes`."
msgstr ":func:`int.from_bytes` e :func:`int.to_bytes`."

#: ../../library/stdtypes.rst:5604
msgid ":func:`hex`, :func:`oct`, :func:`bin`."
msgstr ":func:`hex`, :func:`oct`, :func:`bin`."

#: ../../library/stdtypes.rst:5605
msgid ":ref:`formatspec` for hex, octal, and binary numbers."
msgstr ":ref:`formatspec` para números hexa, octal e binários"

#: ../../library/stdtypes.rst:5606
msgid ":class:`str` to :class:`float`."
msgstr ":class:`str` para :class:`float`."

#: ../../library/stdtypes.rst:5607
msgid ":class:`str` to :class:`decimal.Decimal`."
msgstr ":class:`str` para :class:`decimal.Decimal`."

#: ../../library/stdtypes.rst:5610
msgid "Configuring the limit"
msgstr "Configurando o limiter"

#: ../../library/stdtypes.rst:5612
msgid ""
"Before Python starts up you can use an environment variable or an "
"interpreter command line flag to configure the limit:"
msgstr ""
"Antes de iniciar o Python, você pode usar uma variável de ambiente ou um "
"sinalizador de linha de comando do interpretador para configurar o limite:"

#: ../../library/stdtypes.rst:5615
msgid ""
":envvar:`PYTHONINTMAXSTRDIGITS`, e.g. ``PYTHONINTMAXSTRDIGITS=640 python3`` "
"to set the limit to 640 or ``PYTHONINTMAXSTRDIGITS=0 python3`` to disable "
"the limitation."
msgstr ""
":envvar:`PYTHONINTMAXSTRDIGITS`, por exemplo ``PYTHONINTMAXSTRDIGITS=640 "
"python3`` para definir o limite para 640 ou ``PYTHONINTMAXSTRDIGITS=0 "
"python3`` para desabilitar a limitação."

#: ../../library/stdtypes.rst:5618
msgid ""
":option:`-X int_max_str_digits <-X>`, e.g. ``python3 -X "
"int_max_str_digits=640``"
msgstr ""
":option:`-X int_max_str_digits <-X>`, por exemplo ``python3 -X "
"int_max_str_digits=640``"

#: ../../library/stdtypes.rst:5620
msgid ""
":data:`sys.flags.int_max_str_digits` contains the value of :envvar:"
"`PYTHONINTMAXSTRDIGITS` or :option:`-X int_max_str_digits <-X>`. If both the "
"env var and the ``-X`` option are set, the ``-X`` option takes precedence. A "
"value of *-1* indicates that both were unset, thus a value of :data:`sys."
"int_info.default_max_str_digits` was used during initialization."
msgstr ""
":data:`sys.flags.int_max_str_digits` contém o valor de :envvar:"
"`PYTHONINTMAXSTRDIGITS` ou :option:`-X int_max_str_digits <-X>`. Se a "
"variável env e a opção ``-X`` estiverem definidas, a opção ``-X`` terá "
"precedência. Um valor de *-1* indica que ambos não foram definidos, "
"portanto, um valor de :data:`sys.int_info.default_max_str_digits` foi usado "
"durante a inicialização."

#: ../../library/stdtypes.rst:5626
msgid ""
"From code, you can inspect the current limit and set a new one using these :"
"mod:`sys` APIs:"
msgstr ""
"A partir do código, você pode inspecionar o limite atual e definir um novo "
"usando estas APIs :mod:`sys`:"

#: ../../library/stdtypes.rst:5629
msgid ""
":func:`sys.get_int_max_str_digits` and :func:`sys.set_int_max_str_digits` "
"are a getter and setter for the interpreter-wide limit. Subinterpreters have "
"their own limit."
msgstr ""
":func:`sys.get_int_max_str_digits` e :func:`sys.set_int_max_str_digits` são "
"um getter e um setter para o limite de todo o interpretador. Os "
"subinterpretadores têm seu próprio limite."

#: ../../library/stdtypes.rst:5633
msgid ""
"Information about the default and minimum can be found in :data:`sys."
"int_info`:"
msgstr ""
"Informações sobre o padrão e o mínimo podem ser encontradas em :data:`sys."
"int_info`:"

#: ../../library/stdtypes.rst:5635
msgid ""
":data:`sys.int_info.default_max_str_digits <sys.int_info>` is the compiled-"
"in default limit."
msgstr ""
":data:`sys.int_info.default_max_str_digits <sys.int_info>` é o limite padrão "
"compilado."

#: ../../library/stdtypes.rst:5637
msgid ""
":data:`sys.int_info.str_digits_check_threshold <sys.int_info>` is the lowest "
"accepted value for the limit (other than 0 which disables it)."
msgstr ""
":data:`sys.int_info.str_digits_check_threshold <sys.int_info>` é o menor "
"valor aceito para o limite (diferente de 0 que o desabilita)."

#: ../../library/stdtypes.rst:5644
msgid ""
"Setting a low limit *can* lead to problems. While rare, code exists that "
"contains integer constants in decimal in their source that exceed the "
"minimum threshold. A consequence of setting the limit is that Python source "
"code containing decimal integer literals longer than the limit will "
"encounter an error during parsing, usually at startup time or import time or "
"even at installation time - anytime an up to date ``.pyc`` does not already "
"exist for the code. A workaround for source that contains such large "
"constants is to convert them to ``0x`` hexadecimal form as it has no limit."
msgstr ""
"Definir um limite baixo *pode* levar a problemas. Embora raro, existe um "
"código que contém constantes inteiras em decimal em sua origem que excedem o "
"limite mínimo. Uma consequência de definir o limite é que o código-fonte do "
"Python contendo literais inteiros decimais maiores que o limite encontrará "
"um erro durante a análise, geralmente no momento da inicialização ou no "
"momento da importação ou até mesmo no momento da instalação -- sempre que um "
"``.pyc`` atualizado ainda não existe para o código. Uma solução alternativa "
"para source que contém tais constantes grandes é convertê-las para a forma "
"hexadecimal ``0x``, pois não há limite."

#: ../../library/stdtypes.rst:5653
msgid ""
"Test your application thoroughly if you use a low limit. Ensure your tests "
"run with the limit set early via the environment or flag so that it applies "
"during startup and even during any installation step that may invoke Python "
"to precompile ``.py`` sources to ``.pyc`` files."
msgstr ""
"Teste sua aplicação completamente se você usar um limite baixo. Certifique-"
"se de que seus testes sejam executados com o limite definido anteriormente "
"por meio do ambiente ou sinalizador para que ele seja aplicado durante a "
"inicialização e até mesmo durante qualquer etapa de instalação que possa "
"invocar o Python para pré-compilar fontes ``.py`` para arquivos ``.pyc``."

#: ../../library/stdtypes.rst:5659
msgid "Recommended configuration"
msgstr "Configuração recomendada"

#: ../../library/stdtypes.rst:5661
msgid ""
"The default :data:`sys.int_info.default_max_str_digits` is expected to be "
"reasonable for most applications. If your application requires a different "
"limit, set it from your main entry point using Python version agnostic code "
"as these APIs were added in security patch releases in versions before 3.12."
msgstr ""
"Espera-se que o padrão :data:`sys.int_info.default_max_str_digits` seja "
"razoável para a maioria das aplicações. Se sua aplicação exigir um limite "
"diferente, defina-o em seu ponto de entrada principal usando código "
"agnóstico de versão Python, pois essas APIs foram adicionadas em lançamentos "
"de patch de segurança em versões anteriores a 3.12."

#: ../../library/stdtypes.rst:5666
msgid "Example::"
msgstr "Exemplo::"

#: ../../library/stdtypes.rst:5668
msgid ""
">>> import sys\n"
">>> if hasattr(sys, \"set_int_max_str_digits\"):\n"
"...     upper_bound = 68000\n"
"...     lower_bound = 4004\n"
"...     current_limit = sys.get_int_max_str_digits()\n"
"...     if current_limit == 0 or current_limit > upper_bound:\n"
"...         sys.set_int_max_str_digits(upper_bound)\n"
"...     elif current_limit < lower_bound:\n"
"...         sys.set_int_max_str_digits(lower_bound)"
msgstr ""

#: ../../library/stdtypes.rst:5678
msgid "If you need to disable it entirely, set it to ``0``."
msgstr "Se você precisar desativá-lo totalmente, defina-o como ``0``."

#: ../../library/stdtypes.rst:5682
msgid "Footnotes"
msgstr "Notas de rodapé"

#: ../../library/stdtypes.rst:5683
msgid ""
"Additional information on these special methods may be found in the Python "
"Reference Manual (:ref:`customization`)."
msgstr ""
"Informações adicionais sobre esses métodos especiais podem ser encontradas "
"no Manual de Referência do Python (:ref:`Customização básica "
"<customization>`)."

#: ../../library/stdtypes.rst:5686
msgid ""
"As a consequence, the list ``[1, 2]`` is considered equal to ``[1.0, 2.0]``, "
"and similarly for tuples."
msgstr ""
"Como uma consequência, a lista ``[1, 2]`` é considerada igual a ``[1.0, "
"2.0]``, e similarmente para tuplas."

#: ../../library/stdtypes.rst:5689
msgid "They must have since the parser can't tell the type of the operands."
msgstr ""
"Eles precisam ter, já que o analisador sintático não consegue dizer o tipo "
"dos operandos."

#: ../../library/stdtypes.rst:5691
msgid ""
"Cased characters are those with general category property being one of "
"\"Lu\" (Letter, uppercase), \"Ll\" (Letter, lowercase), or \"Lt\" (Letter, "
"titlecase)."
msgstr ""
"Caracteres que possuem maiúsculo e minúsculo são aqueles com a propriedade "
"de categoria geral igual a \"Lu\" (Letra, maiúscula), \"Ll\" (Letra, "
"minúscula), ou \"Lt\" (Letra, em formato de título)."

#: ../../library/stdtypes.rst:5694
msgid ""
"To format only a tuple you should therefore provide a singleton tuple whose "
"only element is the tuple to be formatted."
msgstr ""
"Para formatar apenas uma tupla, você deve portanto fornecer uma tupla com "
"apenas um elemento, que é a tupla a ser formatada."

#: ../../library/stdtypes.rst:13
msgid "built-in"
msgstr "embutido"

#: ../../library/stdtypes.rst:13 ../../library/stdtypes.rst:316
#: ../../library/stdtypes.rst:393 ../../library/stdtypes.rst:950
#: ../../library/stdtypes.rst:1117 ../../library/stdtypes.rst:1139
#: ../../library/stdtypes.rst:1154 ../../library/stdtypes.rst:4435
#: ../../library/stdtypes.rst:5419
msgid "types"
msgstr "tipos"

#: ../../library/stdtypes.rst:34 ../../library/stdtypes.rst:1154
#: ../../library/stdtypes.rst:4435
msgid "statement"
msgstr "instrução"

#: ../../library/stdtypes.rst:34
msgid "if"
msgstr "if"

#: ../../library/stdtypes.rst:34
msgid "while"
msgstr "while"

#: ../../library/stdtypes.rst:34
msgid "truth"
msgstr "verdade"

#: ../../library/stdtypes.rst:34
msgid "value"
msgstr "value"

#: ../../library/stdtypes.rst:34 ../../library/stdtypes.rst:81
#: ../../library/stdtypes.rst:208 ../../library/stdtypes.rst:817
msgid "Boolean"
msgstr "Booleano"

#: ../../library/stdtypes.rst:34 ../../library/stdtypes.rst:81
#: ../../library/stdtypes.rst:393
msgid "operations"
msgstr "operações"

#: ../../library/stdtypes.rst:34
msgid "false"
msgstr "false"

#: ../../library/stdtypes.rst:44
msgid "true"
msgstr "true"

#: ../../library/stdtypes.rst:52
msgid "None (Built-in object)"
msgstr "None (Objeto embutido)"

#: ../../library/stdtypes.rst:52
msgid "False (Built-in object)"
msgstr "False (objeto embutido)"

#: ../../library/stdtypes.rst:64 ../../library/stdtypes.rst:98
#: ../../library/stdtypes.rst:123 ../../library/stdtypes.rst:195
#: ../../library/stdtypes.rst:246 ../../library/stdtypes.rst:393
#: ../../library/stdtypes.rst:950
msgid "operator"
msgstr "operador"

#: ../../library/stdtypes.rst:64 ../../library/stdtypes.rst:98
msgid "or"
msgstr "or"

#: ../../library/stdtypes.rst:64 ../../library/stdtypes.rst:98
msgid "and"
msgstr "and"

#: ../../library/stdtypes.rst:64 ../../library/stdtypes.rst:817
msgid "False"
msgstr "False"

#: ../../library/stdtypes.rst:64 ../../library/stdtypes.rst:817
msgid "True"
msgstr "True"

#: ../../library/stdtypes.rst:98
msgid "not"
msgstr "not"

#: ../../library/stdtypes.rst:123
msgid "chaining"
msgstr "encadeamento"

#: ../../library/stdtypes.rst:123
msgid "comparisons"
msgstr "comparações"

#: ../../library/stdtypes.rst:123
msgid "comparison"
msgstr "comparação"

#: ../../library/stdtypes.rst:123
msgid "=="
msgstr "=="

#: ../../library/stdtypes.rst:123
msgid "< (less)"
msgstr "< (menor que)"

#: ../../library/stdtypes.rst:123
msgid "<="
msgstr "<="

#: ../../library/stdtypes.rst:123
msgid "> (greater)"
msgstr "> (maior que)"

#: ../../library/stdtypes.rst:123
msgid ">="
msgstr ">="

#: ../../library/stdtypes.rst:123
msgid "!="
msgstr "!="

#: ../../library/stdtypes.rst:123
msgid "is"
msgstr "is"

#: ../../library/stdtypes.rst:123
msgid "is not"
msgstr "is not"

#: ../../library/stdtypes.rst:163 ../../library/stdtypes.rst:208
#: ../../library/stdtypes.rst:934 ../../library/stdtypes.rst:1117
#: ../../library/stdtypes.rst:1139 ../../library/stdtypes.rst:1260
#: ../../library/stdtypes.rst:1339 ../../library/stdtypes.rst:1383
#: ../../library/stdtypes.rst:1504 ../../library/stdtypes.rst:1540
#: ../../library/stdtypes.rst:2526 ../../library/stdtypes.rst:2545
#: ../../library/stdtypes.rst:2652 ../../library/stdtypes.rst:4233
#: ../../library/stdtypes.rst:4435 ../../library/stdtypes.rst:4914
#: ../../library/stdtypes.rst:5169 ../../library/stdtypes.rst:5339
#: ../../library/stdtypes.rst:5383
msgid "object"
msgstr "objeto"

#: ../../library/stdtypes.rst:163 ../../library/stdtypes.rst:208
#: ../../library/stdtypes.rst:229 ../../library/stdtypes.rst:316
#: ../../library/stdtypes.rst:335
msgid "numeric"
msgstr "numérico"

#: ../../library/stdtypes.rst:163
msgid "objects"
msgstr "objetos"

#: ../../library/stdtypes.rst:163
msgid "comparing"
msgstr "comparando"

#: ../../library/stdtypes.rst:173
msgid "__eq__() (instance method)"
msgstr "__eq__() (método de instância)"

#: ../../library/stdtypes.rst:173
msgid "__ne__() (instance method)"
msgstr "__ne__() (método de instância)"

#: ../../library/stdtypes.rst:173
msgid "__lt__() (instance method)"
msgstr "__lt__() (método de instância)"

#: ../../library/stdtypes.rst:173
msgid "__le__() (instance method)"
msgstr "__le__() (método de instância)"

#: ../../library/stdtypes.rst:173
msgid "__gt__() (instance method)"
msgstr "__gt__() (método de instância)"

#: ../../library/stdtypes.rst:173
msgid "__ge__() (instance method)"
msgstr "__ge__() (método de instância)"

#: ../../library/stdtypes.rst:195 ../../library/stdtypes.rst:950
msgid "in"
msgstr "in"

#: ../../library/stdtypes.rst:195 ../../library/stdtypes.rst:950
msgid "not in"
msgstr "not in"

#: ../../library/stdtypes.rst:208 ../../library/stdtypes.rst:229
#: ../../library/stdtypes.rst:393
msgid "integer"
msgstr "inteiro"

#: ../../library/stdtypes.rst:208 ../../library/stdtypes.rst:229
msgid "floating-point"
msgstr "ponto flutuante"

#: ../../library/stdtypes.rst:208 ../../library/stdtypes.rst:229
msgid "complex number"
msgstr "número complexo"

#: ../../library/stdtypes.rst:208
msgid "C"
msgstr "C"

#: ../../library/stdtypes.rst:208
msgid "language"
msgstr "linguagem"

#: ../../library/stdtypes.rst:229
msgid "literals"
msgstr "literais"

#: ../../library/stdtypes.rst:229
msgid "hexadecimal"
msgstr "hexadecimal"

#: ../../library/stdtypes.rst:229
msgid "octal"
msgstr "octal"

#: ../../library/stdtypes.rst:229
msgid "binary"
msgstr "binário"

#: ../../library/stdtypes.rst:246
msgid "arithmetic"
msgstr "aritmética"

#: ../../library/stdtypes.rst:246 ../../library/stdtypes.rst:950
#: ../../library/stdtypes.rst:1117 ../../library/stdtypes.rst:4435
#: ../../library/stdtypes.rst:5390 ../../library/stdtypes.rst:5404
#: ../../library/stdtypes.rst:5419
msgid "built-in function"
msgstr "função embutida"

#: ../../library/stdtypes.rst:246
msgid "int"
msgstr "int"

#: ../../library/stdtypes.rst:246
msgid "float"
msgstr "ponto flutuante"

#: ../../library/stdtypes.rst:246
msgid "complex"
msgstr "complexo"

#: ../../library/stdtypes.rst:246 ../../library/stdtypes.rst:2402
#: ../../library/stdtypes.rst:3621
msgid "+ (plus)"
msgstr "+ (mais)"

#: ../../library/stdtypes.rst:246
msgid "unary operator"
msgstr "operador unário"

#: ../../library/stdtypes.rst:246
msgid "binary operator"
msgstr "operador binário"

#: ../../library/stdtypes.rst:246 ../../library/stdtypes.rst:2402
#: ../../library/stdtypes.rst:3621
msgid "- (minus)"
msgstr "- (menos)"

#: ../../library/stdtypes.rst:246 ../../library/stdtypes.rst:2359
#: ../../library/stdtypes.rst:3578
msgid "* (asterisk)"
msgstr "* (asterisco)"

#: ../../library/stdtypes.rst:246
msgid "/ (slash)"
msgstr "/ (barra)"

#: ../../library/stdtypes.rst:246
msgid "//"
msgstr "//"

#: ../../library/stdtypes.rst:246 ../../library/stdtypes.rst:2323
#: ../../library/stdtypes.rst:3546
msgid "% (percent)"
msgstr "% (porcentagem)"

#: ../../library/stdtypes.rst:246
msgid "**"
msgstr "**"

#: ../../library/stdtypes.rst:316 ../../library/stdtypes.rst:393
#: ../../library/stdtypes.rst:950 ../../library/stdtypes.rst:1154
#: ../../library/stdtypes.rst:4435
msgid "operations on"
msgstr "operações em"

#: ../../library/stdtypes.rst:316
msgid "conjugate() (complex number method)"
msgstr "conjugate() (método de número complexo)"

#: ../../library/stdtypes.rst:335 ../../library/stdtypes.rst:1606
#: ../../library/stdtypes.rst:2526 ../../library/stdtypes.rst:5419
msgid "module"
msgstr "módulo"

#: ../../library/stdtypes.rst:335
msgid "math"
msgstr "math"

#: ../../library/stdtypes.rst:335
msgid "floor() (in module math)"
msgstr "floor() (no módulo math)"

#: ../../library/stdtypes.rst:335
msgid "ceil() (in module math)"
msgstr "ceil() (no módulo math)"

#: ../../library/stdtypes.rst:335
msgid "trunc() (in module math)"
msgstr "trunc() (no módulo math)"

#: ../../library/stdtypes.rst:335
msgid "conversions"
msgstr "conversões"

#: ../../library/stdtypes.rst:393
msgid "bitwise"
msgstr "bit a bit"

#: ../../library/stdtypes.rst:393
msgid "shifting"
msgstr "deslocamento"

#: ../../library/stdtypes.rst:393
msgid "masking"
msgstr "mascaramento"

#: ../../library/stdtypes.rst:393
msgid "| (vertical bar)"
msgstr "| (barra vertical)"

#: ../../library/stdtypes.rst:393
msgid "^ (caret)"
msgstr "^ (circunflexo)"

#: ../../library/stdtypes.rst:393
msgid "& (ampersand)"
msgstr "& (e comercial)"

#: ../../library/stdtypes.rst:393
msgid "<<"
msgstr "<<"

#: ../../library/stdtypes.rst:393
msgid ">>"
msgstr ">>"

#: ../../library/stdtypes.rst:393
msgid "~ (tilde)"
msgstr "~ (til)"

#: ../../library/stdtypes.rst:817
msgid "values"
msgstr "valores"

#: ../../library/stdtypes.rst:847
msgid "iterator protocol"
msgstr "protocolo iterador"

#: ../../library/stdtypes.rst:847 ../../library/stdtypes.rst:4829
msgid "protocol"
msgstr "protocolo"

#: ../../library/stdtypes.rst:847
msgid "iterator"
msgstr "iterador"

#: ../../library/stdtypes.rst:847 ../../library/stdtypes.rst:934
#: ../../library/stdtypes.rst:950 ../../library/stdtypes.rst:1117
#: ../../library/stdtypes.rst:1139 ../../library/stdtypes.rst:1154
msgid "sequence"
msgstr "sequência"

#: ../../library/stdtypes.rst:847
msgid "iteration"
msgstr "iteração"

#: ../../library/stdtypes.rst:847
msgid "container"
msgstr "contêiner"

#: ../../library/stdtypes.rst:847
msgid "iteration over"
msgstr "iteração por"

#: ../../library/stdtypes.rst:950 ../../library/stdtypes.rst:4435
msgid "len"
msgstr "len"

#: ../../library/stdtypes.rst:950
msgid "min"
msgstr "min"

#: ../../library/stdtypes.rst:950
msgid "max"
msgstr "max"

#: ../../library/stdtypes.rst:950
msgid "concatenation"
msgstr "concatenação"

#: ../../library/stdtypes.rst:950
msgid "operation"
msgstr "operação"

#: ../../library/stdtypes.rst:950
msgid "repetition"
msgstr "repetição"

#: ../../library/stdtypes.rst:950 ../../library/stdtypes.rst:1154
msgid "subscript"
msgstr "subscrição"

#: ../../library/stdtypes.rst:950 ../../library/stdtypes.rst:1154
msgid "slice"
msgstr "fatia"

#: ../../library/stdtypes.rst:950
msgid "count() (sequence method)"
msgstr "count() (método de sequência)"

#: ../../library/stdtypes.rst:950
msgid "index() (sequence method)"
msgstr "index() (método de sequência)"

#: ../../library/stdtypes.rst:1006
msgid "loop"
msgstr "laço"

#: ../../library/stdtypes.rst:1006
msgid "over mutable sequence"
msgstr "sobre sequência mutável"

#: ../../library/stdtypes.rst:1006
msgid "mutable sequence"
msgstr "sequência mutável"

#: ../../library/stdtypes.rst:1006
msgid "loop over"
msgstr "laço sobre"

#: ../../library/stdtypes.rst:1117
msgid "immutable"
msgstr "imutável"

#: ../../library/stdtypes.rst:1117 ../../library/stdtypes.rst:1339
msgid "tuple"
msgstr "tupla"

#: ../../library/stdtypes.rst:1117
msgid "hash"
msgstr "hash"

#: ../../library/stdtypes.rst:1139
msgid "mutable"
msgstr "mutável"

#: ../../library/stdtypes.rst:1139 ../../library/stdtypes.rst:1154
#: ../../library/stdtypes.rst:1260
msgid "list"
msgstr "lista"

#: ../../library/stdtypes.rst:1139 ../../library/stdtypes.rst:2526
#: ../../library/stdtypes.rst:2652 ../../library/stdtypes.rst:2724
#: ../../library/stdtypes.rst:3546
msgid "bytearray"
msgstr "bytearray"

#: ../../library/stdtypes.rst:1154 ../../library/stdtypes.rst:4435
#: ../../library/stdtypes.rst:5169 ../../library/stdtypes.rst:5419
msgid "type"
msgstr "tipo"

#: ../../library/stdtypes.rst:1154
msgid "assignment"
msgstr "atribuição"

#: ../../library/stdtypes.rst:1154 ../../library/stdtypes.rst:4435
msgid "del"
msgstr "del"

#: ../../library/stdtypes.rst:1154
msgid "append() (sequence method)"
msgstr "append() (método de sequência)"

#: ../../library/stdtypes.rst:1154
msgid "clear() (sequence method)"
msgstr "clear() (método de sequência)"

#: ../../library/stdtypes.rst:1154
msgid "copy() (sequence method)"
msgstr "copy() (método de sequência)"

#: ../../library/stdtypes.rst:1154
msgid "extend() (sequence method)"
msgstr "extend() (método de sequência)"

#: ../../library/stdtypes.rst:1154
msgid "insert() (sequence method)"
msgstr "insert() (método de sequência)"

#: ../../library/stdtypes.rst:1154
msgid "pop() (sequence method)"
msgstr "pop() (método de sequência)"

#: ../../library/stdtypes.rst:1154
msgid "remove() (sequence method)"
msgstr "remove() (método de sequência)"

#: ../../library/stdtypes.rst:1154
msgid "reverse() (sequence method)"
msgstr "reverse() (método de sequência)"

#: ../../library/stdtypes.rst:1383
msgid "range"
msgstr "range"

#: ../../library/stdtypes.rst:1504 ../../library/stdtypes.rst:1553
#: ../../library/stdtypes.rst:1598 ../../library/stdtypes.rst:2323
msgid "string"
msgstr "string"

#: ../../library/stdtypes.rst:1504
msgid "text sequence type"
msgstr "tipo sequência de texto"

#: ../../library/stdtypes.rst:1504 ../../library/stdtypes.rst:1553
#: ../../library/stdtypes.rst:1571
msgid "str (built-in class)"
msgstr "str (classe embutida)"

#: ../../library/stdtypes.rst:1504
msgid "(see also string)"
msgstr "(veja também string)"

#: ../../library/stdtypes.rst:1540
msgid "io.StringIO"
msgstr "io.StringIO"

#: ../../library/stdtypes.rst:1571 ../../library/stdtypes.rst:2518
msgid "buffer protocol"
msgstr "protocolo de buffer"

#: ../../library/stdtypes.rst:1571 ../../library/stdtypes.rst:2526
#: ../../library/stdtypes.rst:2545 ../../library/stdtypes.rst:2724
#: ../../library/stdtypes.rst:3546
msgid "bytes"
msgstr "bytes"

#: ../../library/stdtypes.rst:1598 ../../library/stdtypes.rst:2724
msgid "methods"
msgstr "métodos"

#: ../../library/stdtypes.rst:1606
msgid "re"
msgstr "re"

#: ../../library/stdtypes.rst:2131 ../../library/stdtypes.rst:3400
msgid "universal newlines"
msgstr "novas linhas universais"

#: ../../library/stdtypes.rst:2131
msgid "str.splitlines method"
msgstr "método str.splitlines"

#: ../../library/stdtypes.rst:2323
msgid "formatting, string (%)"
msgstr "formatação, string (%)"

#: ../../library/stdtypes.rst:2323
msgid "interpolation, string (%)"
msgstr "interpolação, string (%)"

#: ../../library/stdtypes.rst:2323
msgid "formatting, printf"
msgstr "formatação, printf"

#: ../../library/stdtypes.rst:2323
msgid "interpolation, printf"
msgstr "interpolação, printf"

#: ../../library/stdtypes.rst:2323 ../../library/stdtypes.rst:3546
msgid "printf-style formatting"
msgstr "printf, estilo de formatação"

#: ../../library/stdtypes.rst:2323 ../../library/stdtypes.rst:3546
msgid "sprintf-style formatting"
msgstr "sprintf, estilo de formatação"

#: ../../library/stdtypes.rst:2359 ../../library/stdtypes.rst:3578
msgid "() (parentheses)"
msgstr "() (parênteses)"

#: ../../library/stdtypes.rst:2359 ../../library/stdtypes.rst:2402
#: ../../library/stdtypes.rst:3578 ../../library/stdtypes.rst:3621
msgid "in printf-style formatting"
msgstr "em formatação no estilo printf"

#: ../../library/stdtypes.rst:2359 ../../library/stdtypes.rst:3578
msgid ". (dot)"
msgstr ". (ponto)"

#: ../../library/stdtypes.rst:2402 ../../library/stdtypes.rst:3621
msgid "# (hash)"
msgstr "# (cerquilha)"

#: ../../library/stdtypes.rst:2402 ../../library/stdtypes.rst:3621
msgid "space"
msgstr "espaço"

#: ../../library/stdtypes.rst:2518
msgid "binary sequence types"
msgstr "tipos de sequência binária"

#: ../../library/stdtypes.rst:2526
msgid "memoryview"
msgstr "memoryview"

#: ../../library/stdtypes.rst:2526
msgid "array"
msgstr "array"

#: ../../library/stdtypes.rst:3400
msgid "bytes.splitlines method"
msgstr "método bytes.splitlines"

#: ../../library/stdtypes.rst:3400
msgid "bytearray.splitlines method"
msgstr "método bytearray.splitlines"

#: ../../library/stdtypes.rst:3546
msgid "formatting"
msgstr "formatação"

#: ../../library/stdtypes.rst:3546
msgid "bytes (%)"
msgstr "bytes (%)"

#: ../../library/stdtypes.rst:3546
msgid "bytearray (%)"
msgstr "bytearray (%)"

#: ../../library/stdtypes.rst:3546
msgid "interpolation"
msgstr "interpolação"

#: ../../library/stdtypes.rst:4233
msgid "set"
msgstr "set"

#: ../../library/stdtypes.rst:4435
msgid "mapping"
msgstr "mapeamento"

#: ../../library/stdtypes.rst:4435
msgid "dictionary"
msgstr "dicionário"

#: ../../library/stdtypes.rst:4518
msgid "__missing__()"
msgstr "__missing__()"

#: ../../library/stdtypes.rst:4829
msgid "context manager"
msgstr "gerenciador de contexto"

#: ../../library/stdtypes.rst:4829
msgid "context management protocol"
msgstr "protocolo de gerenciamento de contexto"

#: ../../library/stdtypes.rst:4829
msgid "context management"
msgstr "gerenciamento de contexto"

#: ../../library/stdtypes.rst:4902
msgid "annotation"
msgstr "anotação"

#: ../../library/stdtypes.rst:4902
msgid "type annotation; type hint"
msgstr "tipo, anotação de; tipo, dica de"

#: ../../library/stdtypes.rst:4914
msgid "GenericAlias"
msgstr "GenericAlias"

#: ../../library/stdtypes.rst:4914
msgid "Generic"
msgstr "Generic"

#: ../../library/stdtypes.rst:4914
msgid "Alias"
msgstr "Alias"

#: ../../library/stdtypes.rst:5169
msgid "Union"
msgstr "União"

#: ../../library/stdtypes.rst:5169
msgid "union"
msgstr "união"

#: ../../library/stdtypes.rst:5339
msgid "method"
msgstr "método"

#: ../../library/stdtypes.rst:5383
msgid "code"
msgstr "código"

#: ../../library/stdtypes.rst:5383
msgid "code object"
msgstr "objeto código"

#: ../../library/stdtypes.rst:5390
msgid "compile"
msgstr "compile"

#: ../../library/stdtypes.rst:5390
msgid "__code__ (function object attribute)"
msgstr "__code__ (atributo de objeto função)"

#: ../../library/stdtypes.rst:5404
msgid "exec"
msgstr "exec"

#: ../../library/stdtypes.rst:5404
msgid "eval"
msgstr "eval"

#: ../../library/stdtypes.rst:5443
msgid "..."
msgstr "..."

#: ../../library/stdtypes.rst:5443
msgid "ellipsis literal"
msgstr "reticências literais"
