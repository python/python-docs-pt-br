# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Italo Penaforte <italo.penaforte@gmail.com>, 2021
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 14:16+0000\n"
"PO-Revision-Date: 2021-06-28 01:12+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/rlcompleter.rst:2
msgid ":mod:`!rlcompleter` --- Completion function for GNU readline"
msgstr ":mod:`!rlcompleter` --- Função de autocomplemento para GNU readline"

#: ../../library/rlcompleter.rst:9
msgid "**Source code:** :source:`Lib/rlcompleter.py`"
msgstr "**Código-fonte:** :source:`Lib/rlcompleter.py`"

#: ../../library/rlcompleter.rst:13
msgid ""
"The :mod:`!rlcompleter` module defines a completion function suitable to be "
"passed to :func:`~readline.set_completer` in the :mod:`readline` module."
msgstr ""
"O módulo :mod:`!rlcompleter` define uma função de autocompletamento adequada "
"para ser passada para :func:`~readline.set_completer` no módulo :mod:"
"`readline`."

#: ../../library/rlcompleter.rst:16
msgid ""
"When this module is imported on a Unix platform with the :mod:`readline` "
"module available, an instance of the :class:`Completer` class is "
"automatically created and its :meth:`~Completer.complete` method is set as "
"the :ref:`readline completer <readline-completion>`. The method provides "
"completion of valid Python :ref:`identifiers and keywords <identifiers>`."
msgstr ""
"Quando este módulo é importado em uma plataforma Unix com o módulo :mod:"
"`readline` disponível, uma instância da classe :class:`Completer` é criada "
"automaticamente e seu método :meth:`~Completer.complete` é definido como o :"
"ref:`autocompletamento do readline <readline-completion>`. O método fornece "
"o autocompletamento de :ref:`identificadores e palavras-chaves "
"<identifiers>` válidas do Python."

#: ../../library/rlcompleter.rst:22
msgid "Example::"
msgstr "Exemplo::"

#: ../../library/rlcompleter.rst:24
msgid ""
">>> import rlcompleter\n"
">>> import readline\n"
">>> readline.parse_and_bind(\"tab: complete\")\n"
">>> readline. <TAB PRESSED>\n"
"readline.__doc__          readline.get_line_buffer(  readline."
"read_init_file(\n"
"readline.__file__         readline.insert_text(      readline."
"set_completer(\n"
"readline.__name__         readline.parse_and_bind(\n"
">>> readline."
msgstr ""
">>> import rlcompleter\n"
">>> import readline\n"
">>> readline.parse_and_bind(\"tab: complete\")\n"
">>> readline. <TAB PRESSED>\n"
"readline.__doc__          readline.get_line_buffer(  readline."
"read_init_file(\n"
"readline.__file__         readline.insert_text(      readline."
"set_completer(\n"
"readline.__name__         readline.parse_and_bind(\n"
">>> readline."

#: ../../library/rlcompleter.rst:33
msgid ""
"The :mod:`!rlcompleter` module is designed for use with Python's :ref:"
"`interactive mode <tut-interactive>`.  Unless Python is run with the :option:"
"`-S` option, the module is automatically imported and configured (see :ref:"
"`rlcompleter-config`)."
msgstr ""
"O módulo :mod:`!rlcompleter` é projetado para uso com o :ref:`modo "
"interativo <tut-interactive>` do Python. A menos que Python seja executado "
"com a opção :option:`-S`, o módulo é automaticamente importado e configurado "
"(veja :ref:`rlcompleter-config`)."

#: ../../library/rlcompleter.rst:38
msgid ""
"On platforms without :mod:`readline`, the :class:`Completer` class defined "
"by this module can still be used for custom purposes."
msgstr ""
"Em plataformas sem :mod:`readline`, a classe :class:`Completer` definida por "
"este módulo ainda pode ser usada para propósitos personalizados."

#: ../../library/rlcompleter.rst:46
msgid "Completer objects have the following method:"
msgstr "Os objetos Completer têm o seguinte método:"

#: ../../library/rlcompleter.rst:50
msgid "Return the next possible completion for *text*."
msgstr "Retorna o próximo completamento possível para *text*."

#: ../../library/rlcompleter.rst:52
msgid ""
"When called by the :mod:`readline` module, this method is called "
"successively with ``state == 0, 1, 2, ...`` until the method returns "
"``None``."
msgstr ""
"Quando chamado pelo módulo :mod:`readline`, este método é chamado "
"sucessivamente com ``state == 0, 1, 2, ...`` até que o método retorne "
"``None``."

#: ../../library/rlcompleter.rst:56
msgid ""
"If called for *text* that doesn't include a period character (``'.'``), it "
"will complete from names currently defined in :mod:`__main__`, :mod:"
"`builtins` and keywords (as defined by the :mod:`keyword` module)."
msgstr ""
"Se chamado para *text* que não inclui um caractere de ponto (``'.'``), ele "
"será completado a partir dos nomes atualmente definidos em :mod:`__main__`, :"
"mod:`builtins` e palavras reservadas (conforme definido pelo módulo :mod:"
"`keyword`)."

#: ../../library/rlcompleter.rst:60
msgid ""
"If called for a dotted name, it will try to evaluate anything without "
"obvious side-effects (functions will not be evaluated, but it can generate "
"calls to :meth:`~object.__getattr__`) up to the last part, and find matches "
"for the rest via the :func:`dir` function.  Any exception raised during the "
"evaluation of the expression is caught, silenced and :const:`None` is "
"returned."
msgstr ""
"Se chamado por um nome pontilhado, vai tentar avaliar qualquer coisa sem "
"efeitos colaterais óbvios (as funções não serão avaliadas, mas pode levantar "
"chamadas para :meth:`~object.__getattr__`) até a última parte e encontrar "
"correspondências para o resto por meio da função :func:`dir`. Qualquer "
"exceção levantada durante a avaliação da expressão é capturada, silenciada "
"e :const:`None` é retornado."
