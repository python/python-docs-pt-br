# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-02-28 14:17+0000\n"
"PO-Revision-Date: 2022-11-05 19:49+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/importlib.resources.abc.rst:2
msgid ":mod:`!importlib.resources.abc` -- Abstract base classes for resources"
msgstr ""
":mod:`!importlib.resources.abc` -- Classes base abstratas para recursos"

#: ../../library/importlib.resources.abc.rst:7
msgid "**Source code:** :source:`Lib/importlib/resources/abc.py`"
msgstr "**Código-fonte:** :source:`Lib/importlib/resources/abc.py`"

#: ../../library/importlib.resources.abc.rst:15
msgid "*Superseded by TraversableResources*"
msgstr "*Substituída por TraversableResources*"

#: ../../library/importlib.resources.abc.rst:17
msgid ""
"An :term:`abstract base class` to provide the ability to read *resources*."
msgstr ""
"Uma :term:`classe base abstrata` para fornecer a capacidade de ler "
"*recursos*."

#: ../../library/importlib.resources.abc.rst:20
msgid ""
"From the perspective of this ABC, a *resource* is a binary artifact that is "
"shipped within a package. Typically this is something like a data file that "
"lives next to the ``__init__.py`` file of the package. The purpose of this "
"class is to help abstract out the accessing of such data files so that it "
"does not matter if the package and its data file(s) are stored e.g. in a zip "
"file versus on the file system."
msgstr ""
"Da perspectiva deste ABC, um *recurso* é um artefato binário que é enviado "
"dentro de um pacote. Normalmente isso é algo como um arquivo de dados que "
"fica próximo ao arquivo ``__init__.py`` do pacote. O objetivo desta classe é "
"ajudar a abstrair o acesso a tais arquivos de dados para que não importe se "
"o pacote e seu(s) arquivo(s) de dados estão armazenados, por exemplo, em um "
"arquivo zip versus no sistema de arquivos."

#: ../../library/importlib.resources.abc.rst:28
msgid ""
"For any of methods of this class, a *resource* argument is expected to be a :"
"term:`path-like object` which represents conceptually just a file name. This "
"means that no subdirectory paths should be included in the *resource* "
"argument. This is because the location of the package the reader is for, "
"acts as the \"directory\". Hence the metaphor for directories and file names "
"is packages and resources, respectively. This is also why instances of this "
"class are expected to directly correlate to a specific package (instead of "
"potentially representing multiple packages or a module)."
msgstr ""
"Para qualquer um dos métodos desta classe, espera-se que o argumento "
"*resource* seja um :term:`objeto caminho ou similar` que representa "
"conceitualmente apenas um nome de arquivo. Isso significa que nenhum caminho "
"de subdiretório deve ser incluído no argumento *resource*. Isso ocorre "
"porque a localização do pacote para o qual o leitor se destina, atua como o "
"\"diretório\". Portanto, a metáfora para diretórios e nomes de arquivos são "
"pacotes e recursos, respectivamente. É também por isso que se espera que as "
"instâncias dessa classe se correlacionem diretamente a um pacote específico "
"(em vez de representar potencialmente vários pacotes ou um módulo)."

#: ../../library/importlib.resources.abc.rst:39
msgid ""
"Loaders that wish to support resource reading are expected to provide a "
"method called ``get_resource_reader(fullname)`` which returns an object "
"implementing this ABC's interface. If the module specified by fullname is "
"not a package, this method should return :const:`None`. An object compatible "
"with this ABC should only be returned when the specified module is a package."
msgstr ""
"Carregadores que desejam oferecer suporte à leitura de recursos devem "
"fornecer um método chamado ``get_resource_reader(nomecompleto)`` que retorna "
"um objeto implementando esta interface ABC. Se o módulo especificado por "
"nomecompleto não for um pacote, este método deve retornar :const:`None`. Um "
"objeto compatível com este ABC só deve ser retornado quando o módulo "
"especificado for um pacote."

#: ../../library/importlib.resources.abc.rst:46
msgid "Use :class:`importlib.resources.abc.TraversableResources` instead."
msgstr "Use :class:`importlib.resources.abc.TraversableResources`."

#: ../../library/importlib.resources.abc.rst:52
msgid ""
"Returns an opened, :term:`file-like object` for binary reading of the "
"*resource*."
msgstr ""
"Retorna um :term:`objeto arquivo ou similar` aberto para leitura binária de "
"*resource*."

#: ../../library/importlib.resources.abc.rst:55
msgid "If the resource cannot be found, :exc:`FileNotFoundError` is raised."
msgstr ""
"Se o recurso não puder ser encontrado, :exc:`FileNotFoundError` é levantada."

#: ../../library/importlib.resources.abc.rst:61
msgid "Returns the file system path to the *resource*."
msgstr "Retorna o caminho do sistema de arquivos para *resource*."

#: ../../library/importlib.resources.abc.rst:63
msgid ""
"If the resource does not concretely exist on the file system, raise :exc:"
"`FileNotFoundError`."
msgstr ""
"Se o recurso não existir concretamente no sistema de arquivos, levanta :exc:"
"`FileNotFoundError`."

#: ../../library/importlib.resources.abc.rst:69
msgid ""
"Returns ``True`` if the named *name* is considered a resource. :exc:"
"`FileNotFoundError` is raised if *name* does not exist."
msgstr ""
"Retorna ``True`` se o *name* nomeado for considerado um recurso. :exc:"
"`FileNotFoundError` é levantada se *name* não existir."

#: ../../library/importlib.resources.abc.rst:75
msgid ""
"Returns an :term:`iterable` of strings over the contents of the package. Do "
"note that it is not required that all names returned by the iterator be "
"actual resources, e.g. it is acceptable to return names for which :meth:"
"`is_resource` would be false."
msgstr ""
"Retorna um :term:`iterável` de strings sobre o conteúdo do pacote. Observe "
"que não é necessário que todos os nomes retornados pelo iterador sejam "
"recursos reais, por exemplo, é aceitável retornar nomes para os quais :meth:"
"`is_resource` seria falso."

#: ../../library/importlib.resources.abc.rst:81
msgid ""
"Allowing non-resource names to be returned is to allow for situations where "
"how a package and its resources are stored are known a priori and the non-"
"resource names would be useful. For instance, returning subdirectory names "
"is allowed so that when it is known that the package and resources are "
"stored on the file system then those subdirectory names can be used directly."
msgstr ""
"Permitir que nomes que não são recursos sejam retornados é permitir "
"situações em que a forma como um pacote e seus recursos são armazenados é "
"conhecida a priori e os nomes que não são recursos seriam úteis. Por "
"exemplo, o retorno de nomes de subdiretórios é permitido para que, quando se "
"souber que o pacote e os recursos estão armazenados no sistema de arquivos, "
"esses nomes de subdiretórios possam ser usados diretamente."

#: ../../library/importlib.resources.abc.rst:89
msgid "The abstract method returns an iterable of no items."
msgstr "O método abstrato retorna um iterável sem itens."

#: ../../library/importlib.resources.abc.rst:94
msgid ""
"An object with a subset of :class:`pathlib.Path` methods suitable for "
"traversing directories and opening files."
msgstr ""
"Um objeto com um subconjunto de métodos de :class:`pathlib.Path` adequados "
"para percorrer diretórios e abrir arquivos."

#: ../../library/importlib.resources.abc.rst:97
msgid ""
"For a representation of the object on the file-system, use :meth:`importlib."
"resources.as_file`."
msgstr ""
"Para uma representação do objeto no sistema de arquivos, use :meth:"
"`importlib.resources.as_file`."

#: ../../library/importlib.resources.abc.rst:102
msgid "Abstract. The base name of this object without any parent references."
msgstr "Abstrato. O nome base deste objeto sem nenhuma referência pai."

#: ../../library/importlib.resources.abc.rst:107
msgid "Yield Traversable objects in self."
msgstr "Produz objetos Traversable em self."

#: ../../library/importlib.resources.abc.rst:112
msgid "Return ``True`` if self is a directory."
msgstr "Retorna ``True`` se self for um diretório."

#: ../../library/importlib.resources.abc.rst:117
msgid "Return ``True`` if self is a file."
msgstr "Retorna ``True`` se self for um arquivo."

#: ../../library/importlib.resources.abc.rst:122
msgid ""
"Traverse directories according to *pathsegments* and return the result as :"
"class:`!Traversable`."
msgstr ""
"Percorre os diretórios de acordo com *pathsegments* e retorna o resultado "
"como :class:`!Traversable`."

#: ../../library/importlib.resources.abc.rst:125
msgid ""
"Each *pathsegments* argument may contain multiple names separated by forward "
"slashes (``/``, ``posixpath.sep`` ). For example, the following are "
"equivalent::"
msgstr ""
"Cada argumento *pathsegments* pode conter vários nomes separados por barras "
"(``/``, ``posixpath.sep``). Por exemplo, os seguintes são equivalentes::"

#: ../../library/importlib.resources.abc.rst:129
msgid ""
"files.joinpath('subdir', 'subsuddir', 'file.txt')\n"
"files.joinpath('subdir/subsuddir/file.txt')"
msgstr ""
"files.joinpath('subdir', 'subsuddir', 'arquivo.txt')\n"
"files.joinpath('subdir/subsuddir/arquivo.txt')"

#: ../../library/importlib.resources.abc.rst:132
msgid ""
"Note that some :class:`!Traversable` implementations might not be updated to "
"the latest version of the protocol. For compatibility with such "
"implementations, provide a single argument without path separators to each "
"call to ``joinpath``. For example::"
msgstr ""
"Observe que algumas implementações de :class:`!Traversable` podem não ser "
"atualizadas para a versão mais recente do protocolo. Para compatibilidade "
"com tais implementações, forneça um único argumento sem separadores de "
"caminho para cada chamada para ``joinpath``. Por exemplo::"

#: ../../library/importlib.resources.abc.rst:137
msgid "files.joinpath('subdir').joinpath('subsubdir').joinpath('file.txt')"
msgstr "files.joinpath('subdir').joinpath('subsubdir').joinpath('arquivo.txt')"

#: ../../library/importlib.resources.abc.rst:141
msgid ""
"``joinpath`` accepts multiple *pathsegments*, and these segments may contain "
"forward slashes as path separators. Previously, only a single *child* "
"argument was accepted."
msgstr ""
"``joinpath`` aceita múltiplos *pathsegments*, e estes segmentos podem conter "
"barras como separadores de caminho. Anteriormente, apenas um único argumento "
"*child* era aceito."

#: ../../library/importlib.resources.abc.rst:148
msgid "Return Traversable child in self. Equivalent to ``joinpath(child)``."
msgstr ""
"Retorna um filho Traversable em si mesmo. Equivalente a ``joinpath(child)``."

#: ../../library/importlib.resources.abc.rst:154
msgid ""
"*mode* may be 'r' or 'rb' to open as text or binary. Return a handle "
"suitable for reading (same as :attr:`pathlib.Path.open`)."
msgstr ""
"*mode* pode ser 'r' ou 'rb' para abrir como texto ou binário. Retorna um "
"manipulador adequado para leitura (o mesmo que :attr:`pathlib.Path.open`)."

#: ../../library/importlib.resources.abc.rst:157
msgid ""
"When opening as text, accepts encoding parameters such as those accepted by :"
"class:`io.TextIOWrapper`."
msgstr ""
"Ao abrir como texto, aceita parâmetros de codificação como os aceitos por :"
"class:`io.TextIOWrapper`."

#: ../../library/importlib.resources.abc.rst:162
msgid "Read contents of self as bytes."
msgstr "Lê o conteúdo de self como bytes."

#: ../../library/importlib.resources.abc.rst:166
msgid "Read contents of self as text."
msgstr "Lê o conteúdo de self como texto."

#: ../../library/importlib.resources.abc.rst:171
msgid ""
"An abstract base class for resource readers capable of serving the :meth:"
"`importlib.resources.files` interface. Subclasses :class:`ResourceReader` "
"and provides concrete implementations of the :class:`!ResourceReader`'s "
"abstract methods. Therefore, any loader supplying :class:`!"
"TraversableResources` also supplies :class:`!ResourceReader`."
msgstr ""
"Uma classe base abstrata para leitores de recursos capaz de servir a "
"interface :meth:`importlib.resources.files`. É uma subclasse de :class:"
"`ResourceReader` e fornece implementações concretas dos métodos abstratos "
"de :class:`!ResourceReader`. Portanto, qualquer carregador que forneça :"
"class:`!TraversableResources` também fornece :class:`!ResourceReader`."

#: ../../library/importlib.resources.abc.rst:178
msgid ""
"Loaders that wish to support resource reading are expected to implement this "
"interface."
msgstr ""
"Espera-se que os carregadores que desejam oferecer suporte à leitura de "
"recursos implementem essa interface."

#: ../../library/importlib.resources.abc.rst:184
msgid ""
"Returns a :class:`importlib.resources.abc.Traversable` object for the loaded "
"package."
msgstr ""
"Retorna um objeto :class:`importlib.resources.abc.Traversable` para o pacote "
"carregado."
