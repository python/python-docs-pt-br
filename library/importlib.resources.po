# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rodrigo Cândido, 2022
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# Pedro Fonini, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-17 14:16+0000\n"
"PO-Revision-Date: 2022-11-05 19:49+0000\n"
"Last-Translator: Pedro Fonini, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/importlib.resources.rst:2
msgid ""
":mod:`!importlib.resources` -- Package resource reading, opening and access"
msgstr ""
":mod:`!importlib.resources` -- Leitura, abertura e acesso a recursos de "
"pacotes"

#: ../../library/importlib.resources.rst:7
msgid "**Source code:** :source:`Lib/importlib/resources/__init__.py`"
msgstr "**Código-fonte:** :source:`Lib/importlib/resources/__init__.py`"

#: ../../library/importlib.resources.rst:13
msgid ""
"This module leverages Python's import system to provide access to "
"*resources* within *packages*."
msgstr ""
"Esse módulo aproveita o sistema de importação do Python para fornecer acesso "
"a *recursos* dentro de *pacotes*."

#: ../../library/importlib.resources.rst:16
msgid ""
"\"Resources\" are file-like resources associated with a module or package in "
"Python. The resources may be contained directly in a package, within a "
"subdirectory contained in that package, or adjacent to modules outside a "
"package. Resources may be text or binary. As a result, Python module sources "
"(.py) of a package and compilation artifacts (pycache) are technically de-"
"facto resources of that package. In practice, however, resources are "
"primarily those non-Python artifacts exposed specifically by the package "
"author."
msgstr ""
"\"Recursos\" são recursos de arquivos ou similares associados a um módulo ou "
"pacote em Python. Os recursos podem estar contidos diretamente em um pacote, "
"em um subdiretório contido nesse pacote ou adjacentes a módulos fora de um "
"pacote. Os recursos podem ser de texto ou binários. Como resultado, os "
"códigos-fonte do módulo Python (.py) de um pacote e os artefatos de "
"compilação (pycache) são tecnicamente recursos de fato desse pacote. Na "
"prática, entretanto, os recursos são principalmente os artefatos não-Python "
"expostos especificamente pelo autor do pacote."

#: ../../library/importlib.resources.rst:25
msgid "Resources can be opened or read in either binary or text mode."
msgstr "Os recursos podem ser abertos ou lidos no modo binário ou de texto."

#: ../../library/importlib.resources.rst:27
msgid ""
"Resources are roughly akin to files inside directories, though it's "
"important to keep in mind that this is just a metaphor.  Resources and "
"packages **do not** have to exist as physical files and directories on the "
"file system: for example, a package and its resources can be imported from a "
"zip file using :py:mod:`zipimport`."
msgstr ""
"Os recursos são mais ou menos semelhantes a arquivos dentro de diretórios, "
"embora seja importante ter em mente que isso é apenas uma metáfora.  "
"Recursos e pacotes **não** precisam existir como arquivos e diretórios "
"físicos no sistema de arquivos: por exemplo, um pacote e seus recursos podem "
"ser importados de um arquivo zip usando :py:mod:`zipimport`."

#: ../../library/importlib.resources.rst:35
msgid ""
"This module provides functionality similar to `pkg_resources <https://"
"setuptools.readthedocs.io/en/latest/pkg_resources.html>`_ `Basic Resource "
"Access <https://setuptools.readthedocs.io/en/latest/pkg_resources.html#basic-"
"resource-access>`_ without the performance overhead of that package.  This "
"makes reading resources included in packages easier, with more stable and "
"consistent semantics."
msgstr ""
"Esse módulo fornece funcionalidade semelhante ao `Basic Resource Access "
"<https://setuptools.readthedocs.io/en/latest/pkg_resources.html#basic-"
"resource-access>`_ do `pkg_resources <https://setuptools.readthedocs.io/en/"
"latest/pkg_resources.html>`_ sem a sobrecarga de desempenho desse pacote.  "
"Isso facilita a leitura de recursos incluídos em pacotes, com uma semântica "
"mais estável e consistente."

#: ../../library/importlib.resources.rst:43
msgid ""
"The standalone backport of this module provides more information on `using "
"importlib.resources <https://importlib-resources.readthedocs.io/en/latest/"
"using.html>`_ and `migrating from pkg_resources to importlib.resources "
"<https://importlib-resources.readthedocs.io/en/latest/migration.html>`_."
msgstr ""
"O backport autônomo desse módulo fornece mais informações sobre `uso do "
"importlib.resources <https://importlib-resources.readthedocs.io/en/latest/"
"using.html>`_ e `migração do pkg_resources para o importlib.resources "
"<https://importlib-resources.readthedocs.io/en/latest/migration.html>`_."

#: ../../library/importlib.resources.rst:49
msgid ""
":class:`Loaders <importlib.abc.Loader>` that wish to support resource "
"reading should implement a ``get_resource_reader(fullname)`` method as "
"specified by :class:`importlib.resources.abc.ResourceReader`."
msgstr ""
":class:`Loaders <importlib.abc.Loader>` que desejam oferecer suporte à "
"leitura de recursos devem implementar um método "
"``get_resource_reader(fullname)`` conforme especificado por :class:"
"`importlib.resources.abc.ResourceReader`."

#: ../../library/importlib.resources.rst:55
msgid ""
"Represents an anchor for resources, either a :class:`module object <types."
"ModuleType>` or a module name as a string. Defined as ``Union[str, "
"ModuleType]``."
msgstr ""
"Representa uma âncora para recursos, seja um :class:`objeto módulo <types."
"ModuleType>` ou um nome de módulo como uma string. Definido como "
"``Union[str, ModuleType]``."

#: ../../library/importlib.resources.rst:61
msgid ""
"Returns a :class:`~importlib.resources.abc.Traversable` object representing "
"the resource container (think directory) and its resources (think files). A "
"Traversable may contain other containers (think subdirectories)."
msgstr ""
"Retorna um objeto :class:`~importlib.resources.abc.Traversable` que "
"representa o contêiner de recursos (pense em diretório) e seus recursos "
"(pense em arquivos). Um Traversable pode conter outros contêineres (pense em "
"subdiretórios)."

#: ../../library/importlib.resources.rst:66
msgid ""
"*anchor* is an optional :class:`Anchor`. If the anchor is a package, "
"resources are resolved from that package. If a module, resources are "
"resolved adjacent to that module (in the same package or the package root). "
"If the anchor is omitted, the caller's module is used."
msgstr ""
"*anchor* é um :class:`Anchor` opcional. Se a âncora for um pacote, os "
"recursos são resolvidos a partir desse pacote. Se for um módulo, os recursos "
"são resolvidos ao lado desse módulo (no mesmo pacote ou na raiz do pacote). "
"Se a âncora for omitida, o módulo do chamador é usado."

#: ../../library/importlib.resources.rst:74
msgid ""
"*package* parameter was renamed to *anchor*. *anchor* can now be a non-"
"package module and if omitted will default to the caller's module. *package* "
"is still accepted for compatibility but will raise a :exc:"
"`DeprecationWarning`. Consider passing the anchor positionally or using "
"``importlib_resources >= 5.10`` for a compatible interface on older Pythons."
msgstr ""
"O parâmetro *package* foi renomeado para *anchor*. *anchor* agora pode ser "
"um módulo sem ser pacote e, se omitido, será o módulo do chamador por "
"padrão. *package* ainda é aceito por compatibilidade, mas irá levantar um :"
"exc:`DeprecationWarning`. Considere passar a posição da âncora de forma "
"posicional ou usar ``importlib_resources >= 5.10`` para uma interface "
"compatível em versões mais antigas do Python."

#: ../../library/importlib.resources.rst:84
msgid ""
"Given a :class:`~importlib.resources.abc.Traversable` object representing a "
"file or directory, typically from :func:`importlib.resources.files`, return "
"a context manager for use in a :keyword:`with` statement. The context "
"manager provides a :class:`pathlib.Path` object."
msgstr ""
"Dado um objeto :class:`~importlib.resources.abc.Traversable` que representa "
"um arquivo ou diretório, normalmente de :func:`importlib.resources.files`, "
"retorna um gerenciador de contexto para uso em uma instrução :keyword:"
"`with`. O gerenciador de contexto fornece um objeto :class:`pathlib.Path`."

#: ../../library/importlib.resources.rst:89
msgid ""
"Exiting the context manager cleans up any temporary file or directory "
"created when the resource was extracted from e.g. a zip file."
msgstr ""
"Sair do gerenciador de contexto limpa qualquer arquivo ou diretório "
"temporário criado quando o recurso foi extraído, por exemplo, de um arquivo "
"zip."

#: ../../library/importlib.resources.rst:92
msgid ""
"Use ``as_file`` when the Traversable methods (``read_text``, etc) are "
"insufficient and an actual file or directory on the file system is required."
msgstr ""
"Use ``as_file`` quando os métodos de Traversable (``read_text``, etc.) forem "
"insuficientes e for necessário um arquivo ou diretório real no sistema de "
"arquivos."

#: ../../library/importlib.resources.rst:98
msgid "Added support for *traversable* representing a directory."
msgstr "Adicionado suporte para *traversable* representando um diretório."

#: ../../library/importlib.resources.rst:105
msgid "Functional API"
msgstr "API funcional"

#: ../../library/importlib.resources.rst:107
msgid ""
"A set of simplified, backwards-compatible helpers is available. These allow "
"common operations in a single function call."
msgstr ""
"Um conjunto de auxiliares simplificados e compatíveis com versões anteriores "
"está disponível. Estes permitem operações comuns em uma única chamada de "
"função."

#: ../../library/importlib.resources.rst:110
msgid "For all the following functions:"
msgstr "Para todas as funções a seguir:"

#: ../../library/importlib.resources.rst:112
msgid ""
"*anchor* is an :class:`~importlib.resources.Anchor`, as in :func:`~importlib."
"resources.files`. Unlike in ``files``, it may not be omitted."
msgstr ""
"*anchor* é um :class:`~importlib.resources.Anchor`, assim como em :func:"
"`~importlib.resources.files`. Ao contrário do comportamento em ``files``, "
"*anchor* aqui não pode ser omitido."

#: ../../library/importlib.resources.rst:116
msgid ""
"*path_names* are components of a resource's path name, relative to the "
"anchor. For example, to get the text of resource named ``info.txt``, use::"
msgstr ""
"*path_names* são componentes do nome do caminho de um recurso, relativo à "
"âncora. Por exemplo, para obter o texto de um recurso chamado ``info.txt``, "
"use::"

#: ../../library/importlib.resources.rst:120
msgid "importlib.resources.read_text(my_module, \"info.txt\")"
msgstr ""

#: ../../library/importlib.resources.rst:122
msgid ""
"Like :meth:`Traversable.joinpath <importlib.resources.abc.Traversable>`, The "
"individual components should use forward slashes (``/``) as path separators. "
"For example, the following are equivalent::"
msgstr ""
"Assim como em :meth:`Traversable.joinpath <importlib.resources.abc."
"Traversable>`, os componentes individuais devem usar barras ordinárias (``/"
"``) como separadores do caminho. Por exemplo, as seguintes chamadas são "
"equivalentes::"

#: ../../library/importlib.resources.rst:127
msgid ""
"importlib.resources.read_binary(my_module, \"pics/painting.png\")\n"
"importlib.resources.read_binary(my_module, \"pics\", \"painting.png\")"
msgstr ""

#: ../../library/importlib.resources.rst:130
msgid ""
"For backward compatibility reasons, functions that read text require an "
"explicit *encoding* argument if multiple *path_names* are given. For "
"example, to get the text of ``info/chapter1.txt``, use::"
msgstr ""
"Por motivos de compatibilidade com versões anteriores, funções que lêem "
"texto requerem um argumento *encoding* explícito se múltiplos *path_names* "
"forem fornecidos. Por exemplo, para obter o texto de ``info/chapter1.txt``, "
"use::"

#: ../../library/importlib.resources.rst:134
msgid ""
"importlib.resources.read_text(my_module, \"info\", \"chapter1.txt\",\n"
"                              encoding='utf-8')"
msgstr ""

#: ../../library/importlib.resources.rst:139
msgid "Open the named resource for binary reading."
msgstr "Abre o recurso nomeado para leitura binária."

#: ../../library/importlib.resources.rst:141
#: ../../library/importlib.resources.rst:184
#: ../../library/importlib.resources.rst:232
#: ../../library/importlib.resources.rst:249
#: ../../library/importlib.resources.rst:267
msgid ""
"See :ref:`the introduction <importlib_resources_functional>` for details on "
"*anchor* and *path_names*."
msgstr ""
"Veja :ref:`a introdução <importlib_resources_functional>` para detalhes "
"sobre *anchor* e *path_names*."

#: ../../library/importlib.resources.rst:144
msgid ""
"This function returns a :class:`~typing.BinaryIO` object, that is, a binary "
"stream open for reading."
msgstr ""
"Esta função retorna um objeto :class:`~typing.BinaryIO`, isto é, um fluxo "
"binário aberto para leitura."

#: ../../library/importlib.resources.rst:147
#: ../../library/importlib.resources.rst:171
#: ../../library/importlib.resources.rst:187
#: ../../library/importlib.resources.rst:208
#: ../../library/importlib.resources.rst:235
#: ../../library/importlib.resources.rst:252
#: ../../library/importlib.resources.rst:270
msgid "This function is roughly equivalent to::"
msgstr "Esta função é mais ou menos equivalente a::"

#: ../../library/importlib.resources.rst:149
msgid "files(anchor).joinpath(*path_names).open('rb')"
msgstr ""

#: ../../library/importlib.resources.rst:151
#: ../../library/importlib.resources.rst:191
#: ../../library/importlib.resources.rst:256
msgid "Multiple *path_names* are accepted."
msgstr "Múltiplos *path_names* são aceitos."

#: ../../library/importlib.resources.rst:157
msgid ""
"Open the named resource for text reading. By default, the contents are read "
"as strict UTF-8."
msgstr ""
"Abre o recurso nomeado para leitura de texto. Por padrão, o conteúdo é lido "
"como UTF-8 estrito."

#: ../../library/importlib.resources.rst:160
#: ../../library/importlib.resources.rst:200
msgid ""
"See :ref:`the introduction <importlib_resources_functional>` for details on "
"*anchor* and *path_names*. *encoding* and *errors* have the same meaning as "
"in built-in :func:`open`."
msgstr ""
"Veja :ref:`a introdução <importlib_resources_functional>` para detalhes "
"sobre *anchor* e *path_names*. *encoding* e *errors* têm o mesmo significado "
"que na embutida :func:`open`."

#: ../../library/importlib.resources.rst:164
#: ../../library/importlib.resources.rst:204
msgid ""
"For backward compatibility reasons, the *encoding* argument must be given "
"explicitly if there are multiple *path_names*. This limitation is scheduled "
"to be removed in Python 3.15."
msgstr ""
"Por motivos de compatibilidade com versões anteriores, o argumento "
"*encoding* precisa ser passado explicitamente se houver múltiplos "
"*path_names*. Essa limitação está agendada para ser removida no Python 3.15."

#: ../../library/importlib.resources.rst:168
msgid ""
"This function returns a :class:`~typing.TextIO` object, that is, a text "
"stream open for reading."
msgstr ""
"Esta função retorna um objeto :class:`~typing.TextIO`, isto é, um fluxo de "
"texto aberto para leitura."

#: ../../library/importlib.resources.rst:173
msgid "files(anchor).joinpath(*path_names).open('r', encoding=encoding)"
msgstr ""

#: ../../library/importlib.resources.rst:175
#: ../../library/importlib.resources.rst:212
#: ../../library/importlib.resources.rst:239
msgid ""
"Multiple *path_names* are accepted. *encoding* and *errors* must be given as "
"keyword arguments."
msgstr ""
"Múltiplos *path_names* são aceitos. *encoding* e *errors* precisam ser "
"fornecidos como argumentos nomeados."

#: ../../library/importlib.resources.rst:182
msgid "Read and return the contents of the named resource as :class:`bytes`."
msgstr "Lê e retorna o conteúdo do recurso nomeado como :class:`bytes`."

#: ../../library/importlib.resources.rst:189
msgid "files(anchor).joinpath(*path_names).read_bytes()"
msgstr ""

#: ../../library/importlib.resources.rst:197
msgid ""
"Read and return the contents of the named resource as :class:`str`. By "
"default, the contents are read as strict UTF-8."
msgstr ""
"Lê e retorna o conteúdo do recurso nomeado como :class:`str`. Por padrão, o "
"conteúdo é lido como UTF-8 estrito."

#: ../../library/importlib.resources.rst:210
msgid "files(anchor).joinpath(*path_names).read_text(encoding=encoding)"
msgstr ""

#: ../../library/importlib.resources.rst:219
msgid ""
"Provides the path to the *resource* as an actual file system path.  This "
"function returns a context manager for use in a :keyword:`with` statement. "
"The context manager provides a :class:`pathlib.Path` object."
msgstr ""
"Fornece o caminho para o *resource* como um caminho real do sistema de "
"arquivos.  Essa função retorna um gerenciador de contexto para uso em uma "
"instrução :keyword:`with`. O gerenciador de contexto fornece um objeto :"
"class:`pathlib.Path`."

#: ../../library/importlib.resources.rst:223
msgid ""
"Exiting the context manager cleans up any temporary files created, e.g. when "
"the resource needs to be extracted from a zip file."
msgstr ""
"Sair do gerenciador de contexto limpa qualquer arquivo temporário criado, "
"por exemplo quando o recurso precisa ser extraído de um arquivo zip."

#: ../../library/importlib.resources.rst:226
msgid ""
"For example, the :meth:`~pathlib.Path.stat` method requires an actual file "
"system path; it can be used like this::"
msgstr ""
"Por exemplo, o método :meth:`~pathlib.Path.stat` requer um caminho real em "
"um sistema de arquivos; ele pode ser usado assim::"

#: ../../library/importlib.resources.rst:229
msgid ""
"with importlib.resources.path(anchor, \"resource.txt\") as fspath:\n"
"    result = fspath.stat()"
msgstr ""

#: ../../library/importlib.resources.rst:237
msgid "as_file(files(anchor).joinpath(*path_names))"
msgstr ""

#: ../../library/importlib.resources.rst:246
msgid ""
"Return ``True`` if the named resource exists, otherwise ``False``. This "
"function does not consider directories to be resources."
msgstr ""
"Retorna ``True`` se o recurso nomeado existe, senão ``False``. Esta função "
"não considera diretórios como sendo recursos."

#: ../../library/importlib.resources.rst:254
msgid "files(anchor).joinpath(*path_names).is_file()"
msgstr ""

#: ../../library/importlib.resources.rst:262
msgid ""
"Return an iterable over the named items within the package or path. The "
"iterable returns names of resources (e.g. files) and non-resources (e.g. "
"directories) as :class:`str`. The iterable does not recurse into "
"subdirectories."
msgstr ""
"Retorna um iterável sobre os itens nomeados no pacote ou caminho. O iterável "
"retorna nomes de recursos (por exemplo, arquivos) e outros itens que não "
"recursos (por exemplo, diretórios) como :class:`str`. O iterável não recorre "
"em subdiretórios."

#: ../../library/importlib.resources.rst:272
msgid ""
"for resource in files(anchor).joinpath(*path_names).iterdir():\n"
"    yield resource.name"
msgstr ""

#: ../../library/importlib.resources.rst:275
msgid ""
"Prefer ``iterdir()`` as above, which offers more control over the results "
"and richer functionality."
msgstr ""
"Prefira ``iterdir()`` como acima, que oferece mais controle sobre os "
"resultados e funcionalidade mais rica."
