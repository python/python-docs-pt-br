# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-11 17:17+0000\n"
"PO-Revision-Date: 2022-11-05 17:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/fcntl.rst:2
msgid ":mod:`fcntl` --- The ``fcntl`` and ``ioctl`` system calls"
msgstr ":mod:`fcntl` --- as chamadas de sistema ``fcntl`` e ``ioctl``"

#: ../../library/fcntl.rst:16
msgid ""
"This module performs file control and I/O control on file descriptors. It is "
"an interface to the :c:func:`fcntl` and :c:func:`ioctl` Unix routines.  For "
"a complete description of these calls, see :manpage:`fcntl(2)` and :manpage:"
"`ioctl(2)` Unix manual pages."
msgstr ""
"Este módulo executa o controle de arquivos e o controle de I/O em "
"descritores de arquivos. É uma interface para as rotinas :c:func:`fcntl` "
"and :c:func:`ioctl` do Unix. Para obter uma descrição completa dessas "
"chamadas, consulte :manpage:`fcntl(2)` e :manpage:`ioctl(2)` Páginas do "
"Manual do Unix."

#: ../../library/fcntl.rst:21
msgid ""
"All functions in this module take a file descriptor *fd* as their first "
"argument.  This can be an integer file descriptor, such as returned by ``sys."
"stdin.fileno()``, or an :class:`io.IOBase` object, such as ``sys.stdin`` "
"itself, which provides a :meth:`~io.IOBase.fileno` that returns a genuine "
"file descriptor."
msgstr ""
"Todas as funções neste módulo recebem um descritor de arquivo *fd* como seu "
"primeiro argumento. Este pode ser um descritor de arquivo inteiro, como "
"retornado por ``sys.stdin.fileno()``, ou um objeto :class:`io.IOBase`, como "
"o próprio ``sys.stdin``, que fornece um :meth:`~io.IOBase.fileno` que "
"retorna um descritor de arquivo genuíno."

#: ../../library/fcntl.rst:27
msgid ""
"Operations in this module used to raise an :exc:`IOError` where they now "
"raise an :exc:`OSError`."
msgstr ""
"As operações neste módulo costumavam levantar um :exc:`IOError`, mas agora "
"levantam um :exc:`OSError`."

#: ../../library/fcntl.rst:31
msgid ""
"The fcntl module now contains ``F_ADD_SEALS``, ``F_GET_SEALS``, and "
"``F_SEAL_*`` constants for sealing of :func:`os.memfd_create` file "
"descriptors."
msgstr ""
"Модуль fcntl тепер містить константи ``F_ADD_SEALS``, ``F_GET_SEALS`` і "
"``F_SEAL_*`` для запечатування дескрипторів файлів :func:`os.memfd_create`."

#: ../../library/fcntl.rst:36
msgid ""
"On macOS, the fcntl module exposes the ``F_GETPATH`` constant, which obtains "
"the path of a file from a file descriptor. On Linux(>=3.15), the fcntl "
"module exposes the ``F_OFD_GETLK``, ``F_OFD_SETLK`` and ``F_OFD_SETLKW`` "
"constants, which are used when working with open file description locks."
msgstr ""
"У macOS модуль fcntl надає константу ``F_GETPATH``, яка отримує шлях до "
"файлу з дескриптора файлу. У Linux (>=3.15) модуль fcntl надає константи "
"``F_OFD_GETLK``, ``F_OFD_SETLK`` і ``F_OFD_SETLKW``, які використовуються "
"під час роботи з відкритими блокуваннями опису файлу."

#: ../../library/fcntl.rst:43
msgid ""
"On Linux >= 2.6.11, the fcntl module exposes the ``F_GETPIPE_SZ`` and "
"``F_SETPIPE_SZ`` constants, which allow to check and modify a pipe's size "
"respectively."
msgstr ""
"У Linux >= 2.6.11 модуль fcntl надає константи ``F_GETPIPE_SZ`` і "
"``F_SETPIPE_SZ``, які дозволяють перевіряти та змінювати розмір каналу "
"відповідно."

#: ../../library/fcntl.rst:48
msgid "The module defines the following functions:"
msgstr "O módulo define as seguintes funções:"

#: ../../library/fcntl.rst:53
msgid ""
"Perform the operation *cmd* on file descriptor *fd* (file objects providing "
"a :meth:`~io.IOBase.fileno` method are accepted as well).  The values used "
"for *cmd* are operating system dependent, and are available as constants in "
"the :mod:`fcntl` module, using the same names as used in the relevant C "
"header files. The argument *arg* can either be an integer value, or a :class:"
"`bytes` object. With an integer value, the return value of this function is "
"the integer return value of the C :c:func:`fcntl` call.  When the argument "
"is bytes it represents a binary structure, e.g. created by :func:`struct."
"pack`. The binary data is copied to a buffer whose address is passed to the "
"C :c:func:`fcntl` call.  The return value after a successful call is the "
"contents of the buffer, converted to a :class:`bytes` object. The length of "
"the returned object will be the same as the length of the *arg* argument. "
"This is limited to 1024 bytes. If the information returned in the buffer by "
"the operating system is larger than 1024 bytes, this is most likely to "
"result in a segmentation violation or a more subtle data corruption."
msgstr ""
"Executa a operação *cmd* no descritor de arquivo *fd* (objetos arquivo que "
"fornecem um método :meth:`~io.IOBase.fileno` também são aceitos). Os valores "
"usados para *cmd* dependem do sistema operacional e estão disponíveis como "
"constantes no módulo :mod:`fcntl`, usando os mesmos nomes usados nos "
"arquivos de cabeçalho C relevantes. O argumento *arg* pode ser um valor "
"inteiro ou um objeto :class:`bytes`. Com um valor inteiro, o valor de "
"retorno desta função é o valor de retorno inteiro da chamada C :c:func:"
"`fcntl`. Quando o argumento é bytes, ele representa uma estrutura binária, "
"por exemplo, criada por :func:`struct.pack`. Os dados binários são copiados "
"para um buffer cujo endereço é passado para a chamada C :c:func:`fcntl`. O "
"valor de retorno após uma chamada bem-sucedida é o conteúdo do buffer, "
"convertido em um objeto :class:`bytes`. O comprimento do objeto retornado "
"será o mesmo que o comprimento do argumento *arg*. Isso é limitado a 1024 "
"bytes. Se as informações retornadas no buffer pelo sistema operacional forem "
"maiores que 1024 bytes, isso provavelmente resultará em uma violação de "
"segmentação ou uma corrupção de dados mais sutil."

#: ../../library/fcntl.rst:70
msgid "If the :c:func:`fcntl` fails, an :exc:`OSError` is raised."
msgstr ""
"Se o :c:func:`fcntl` vier a falhar, um exceção :exc:`OSError` é levantada."

#: ../../library/fcntl.rst:72
msgid ""
"Raises an :ref:`auditing event <auditing>` ``fcntl.fcntl`` with arguments "
"``fd``, ``cmd``, ``arg``."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``fcntl.fcntl`` com os "
"argumentos ``fd``, ``cmd``, ``arg``."

#: ../../library/fcntl.rst:77
msgid ""
"This function is identical to the :func:`~fcntl.fcntl` function, except that "
"the argument handling is even more complicated."
msgstr ""
"Esta função é idêntica à função :func:`~fcntl.fcntl`, exceto que o "
"tratamento de argumentos é ainda mais complicado."

#: ../../library/fcntl.rst:80
msgid ""
"The *request* parameter is limited to values that can fit in 32-bits. "
"Additional constants of interest for use as the *request* argument can be "
"found in the :mod:`termios` module, under the same names as used in the "
"relevant C header files."
msgstr ""
"Параметр *request* обмежується значеннями, які можуть вміститися в 32-бітах. "
"Додаткові цікаві константи для використання як аргументу *request* можна "
"знайти в модулі :mod:`termios` під тими самими назвами, які використовуються "
"у відповідних файлах заголовків C."

#: ../../library/fcntl.rst:85
msgid ""
"The parameter *arg* can be one of an integer, an object supporting the read-"
"only buffer interface (like :class:`bytes`) or an object supporting the read-"
"write buffer interface (like :class:`bytearray`)."
msgstr ""
"Параметр *arg* може бути цілим числом, об’єктом, що підтримує інтерфейс "
"буфера лише для читання (наприклад, :class:`bytes`), або об’єктом, що "
"підтримує інтерфейс буфера для читання та запису (наприклад, :class:"
"`bytearray`)."

#: ../../library/fcntl.rst:89
msgid ""
"In all but the last case, behaviour is as for the :func:`~fcntl.fcntl` "
"function."
msgstr ""
"У всіх випадках, крім останнього, поведінка така ж, як у функції :func:"
"`~fcntl.fcntl`."

#: ../../library/fcntl.rst:92
msgid ""
"If a mutable buffer is passed, then the behaviour is determined by the value "
"of the *mutate_flag* parameter."
msgstr ""
"Якщо передається змінний буфер, поведінка визначається значенням параметра "
"*mutate_flag*."

#: ../../library/fcntl.rst:95
msgid ""
"If it is false, the buffer's mutability is ignored and behaviour is as for a "
"read-only buffer, except that the 1024 byte limit mentioned above is avoided "
"-- so long as the buffer you pass is at least as long as what the operating "
"system wants to put there, things should work."
msgstr ""
"Якщо значення false, мінливість буфера ігнорується, а поведінка така ж, як і "
"для буфера лише для читання, за винятком того, що обмеження у 1024 байти, "
"згадане вище, уникає — доки переданий буфер має принаймні таку довжину, як і "
"операційна система. хоче поставити туди, речі повинні працювати."

#: ../../library/fcntl.rst:100
msgid ""
"If *mutate_flag* is true (the default), then the buffer is (in effect) "
"passed to the underlying :func:`ioctl` system call, the latter's return code "
"is passed back to the calling Python, and the buffer's new contents reflect "
"the action of the :func:`ioctl`.  This is a slight simplification, because "
"if the supplied buffer is less than 1024 bytes long it is first copied into "
"a static buffer 1024 bytes long which is then passed to :func:`ioctl` and "
"copied back into the supplied buffer."
msgstr ""
"Якщо *mutate_flag* має значення true (за замовчуванням), тоді буфер "
"(фактично) передається базовому системному виклику :func:`ioctl`, код "
"повернення останнього передається назад викликаючому Python, а новий вміст "
"буфера відображає дія :func:`ioctl`. Це невелике спрощення, тому що якщо "
"довжина наданого буфера менша за 1024 байти, він спочатку копіюється в "
"статичний буфер довжиною 1024 байти, який потім передається до :func:`ioctl` "
"і копіюється назад у наданий буфер."

#: ../../library/fcntl.rst:108
msgid "If the :c:func:`ioctl` fails, an :exc:`OSError` exception is raised."
msgstr ""

#: ../../library/fcntl.rst:110
msgid "An example::"
msgstr "Um exemplo::"

#: ../../library/fcntl.rst:123
msgid ""
"Raises an :ref:`auditing event <auditing>` ``fcntl.ioctl`` with arguments "
"``fd``, ``request``, ``arg``."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``fcntl.ioctl`` com os "
"argumentos ``fd``, ``request``, ``arg``."

#: ../../library/fcntl.rst:128
msgid ""
"Perform the lock operation *operation* on file descriptor *fd* (file objects "
"providing a :meth:`~io.IOBase.fileno` method are accepted as well). See the "
"Unix manual :manpage:`flock(2)` for details.  (On some systems, this "
"function is emulated using :c:func:`fcntl`.)"
msgstr ""
"Executa a operação de trava *operation* no descritor de arquivo *fd* "
"(objetos arquivo que fornecem um método :meth:`~io.IOBase.fileno` também são "
"aceitos). Consulte o manual do Unix :manpage:`flock(2)` para obter detalhes. "
"(Em alguns sistemas, esta função é emulada usando :c:func:`fcntl`.)"

#: ../../library/fcntl.rst:133
msgid "If the :c:func:`flock` fails, an :exc:`OSError` exception is raised."
msgstr ""

#: ../../library/fcntl.rst:135
msgid ""
"Raises an :ref:`auditing event <auditing>` ``fcntl.flock`` with arguments "
"``fd``, ``operation``."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``fcntl.flock`` com os "
"argumentos ``fd`` e ``operation``."

#: ../../library/fcntl.rst:140
msgid ""
"This is essentially a wrapper around the :func:`~fcntl.fcntl` locking calls. "
"*fd* is the file descriptor (file objects providing a :meth:`~io.IOBase."
"fileno` method are accepted as well) of the file to lock or unlock, and "
"*cmd* is one of the following values:"
msgstr ""
"Este é essencialmente um invólucro em torno das chamadas de trava :func:"
"`~fcntl.fcntl`. *fd* é o descritor de arquivo (objetos arquivo que fornecem "
"um método :meth:`~io.IOBase.fileno` também são aceitos) do arquivo para "
"travar ou destravar, e *cmd* é um dos seguintes valores:"

#: ../../library/fcntl.rst:145
msgid ":const:`LOCK_UN` -- unlock"
msgstr ":const:`LOCK_UN` -- desbloquear"

#: ../../library/fcntl.rst:146
msgid ":const:`LOCK_SH` -- acquire a shared lock"
msgstr ""

#: ../../library/fcntl.rst:147
msgid ":const:`LOCK_EX` -- acquire an exclusive lock"
msgstr ""

#: ../../library/fcntl.rst:149
msgid ""
"When *cmd* is :const:`LOCK_SH` or :const:`LOCK_EX`, it can also be bitwise "
"ORed with :const:`LOCK_NB` to avoid blocking on lock acquisition. If :const:"
"`LOCK_NB` is used and the lock cannot be acquired, an :exc:`OSError` will be "
"raised and the exception will have an *errno* attribute set to :const:"
"`EACCES` or :const:`EAGAIN` (depending on the operating system; for "
"portability, check for both values).  On at least some systems, :const:"
"`LOCK_EX` can only be used if the file descriptor refers to a file opened "
"for writing."
msgstr ""

#: ../../library/fcntl.rst:158
msgid ""
"*len* is the number of bytes to lock, *start* is the byte offset at which "
"the lock starts, relative to *whence*, and *whence* is as with :func:`io."
"IOBase.seek`, specifically:"
msgstr ""
"*len* é o número de bytes para travar, *start* é o deslocamento de bytes em "
"que a trava começa, em relação a *whence*, e *whence* é como em :func:`io."
"IOBase.seek`, especificamente:"

#: ../../library/fcntl.rst:162
msgid ":const:`0` -- relative to the start of the file (:data:`os.SEEK_SET`)"
msgstr ""

#: ../../library/fcntl.rst:163
msgid ""
":const:`1` -- relative to the current buffer position (:data:`os.SEEK_CUR`)"
msgstr ""

#: ../../library/fcntl.rst:164
msgid ":const:`2` -- relative to the end of the file (:data:`os.SEEK_END`)"
msgstr ""

#: ../../library/fcntl.rst:166
msgid ""
"The default for *start* is 0, which means to start at the beginning of the "
"file. The default for *len* is 0 which means to lock to the end of the "
"file.  The default for *whence* is also 0."
msgstr ""
"O padrão para *start* é 0, o que significa iniciar no início do arquivo. O "
"padrão para *len* é 0, o que significa travar no final do arquivo. O padrão "
"para *whence* também é 0."

#: ../../library/fcntl.rst:170
msgid ""
"Raises an :ref:`auditing event <auditing>` ``fcntl.lockf`` with arguments "
"``fd``, ``cmd``, ``len``, ``start``, ``whence``."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``fcntl.lockf`` com os "
"argumentos ``fd``, ``cmd``, ``len``, ``start``, ``whence``."

#: ../../library/fcntl.rst:172
msgid "Examples (all on a SVR4 compliant system)::"
msgstr "Exemplos (todos em um sistema compatível com SVR4)::"

#: ../../library/fcntl.rst:182
msgid ""
"Note that in the first example the return value variable *rv* will hold an "
"integer value; in the second example it will hold a :class:`bytes` object.  "
"The structure lay-out for the *lockdata* variable is system dependent --- "
"therefore using the :func:`flock` call may be better."
msgstr ""
"Observe que, no primeiro exemplo, a variável de valor de retorno *rv* "
"conterá um valor inteiro; no segundo exemplo, ela conterá um objeto :class:"
"`bytes`. O layout da estrutura da variável *lockdata* depende do sistema --- "
"portanto, usar a chamada :func:`flock` pode ser melhor."

#: ../../library/fcntl.rst:193
msgid "Module :mod:`os`"
msgstr "Módulo :mod:`os`"

#: ../../library/fcntl.rst:191
msgid ""
"If the locking flags :data:`~os.O_SHLOCK` and :data:`~os.O_EXLOCK` are "
"present in the :mod:`os` module (on BSD only), the :func:`os.open` function "
"provides an alternative to the :func:`lockf` and :func:`flock` functions."
msgstr ""
