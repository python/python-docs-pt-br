# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2017
# i17obot <i17obot@rougeth.com>, 2020
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-11 17:51+0000\n"
"PO-Revision-Date: 2017-02-16 23:12+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/hashlib.rst:2
msgid ":mod:`hashlib` --- Secure hashes and message digests"
msgstr ":mod:`hashlib` --- Захищені хеші та дайджести повідомлень"

#: ../../library/hashlib.rst:10
msgid "**Source code:** :source:`Lib/hashlib.py`"
msgstr "**Código-fonte:** :source:`Lib/hashlib.py`"

#: ../../library/hashlib.rst:23
msgid ""
"This module implements a common interface to many different secure hash and "
"message digest algorithms.  Included are the FIPS secure hash algorithms "
"SHA1, SHA224, SHA256, SHA384, and SHA512 (defined in FIPS 180-2) as well as "
"RSA's MD5 algorithm (defined in Internet :rfc:`1321`).  The terms \"secure "
"hash\" and \"message digest\" are interchangeable.  Older algorithms were "
"called message digests.  The modern term is secure hash."
msgstr ""

#: ../../library/hashlib.rst:32
msgid ""
"If you want the adler32 or crc32 hash functions, they are available in the :"
"mod:`zlib` module."
msgstr ""
"Se você quiser as funções de hash adler32 ou crc32, elas estão disponíveis "
"no módulo :mod:`zlib`."

#: ../../library/hashlib.rst:37
msgid ""
"Some algorithms have known hash collision weaknesses, refer to the \"See "
"also\" section at the end."
msgstr ""

#: ../../library/hashlib.rst:44
msgid "Hash algorithms"
msgstr "Algoritmos de hash"

#: ../../library/hashlib.rst:46
msgid ""
"There is one constructor method named for each type of :dfn:`hash`.  All "
"return a hash object with the same simple interface. For example: use :func:"
"`sha256` to create a SHA-256 hash object. You can now feed this object with :"
"term:`bytes-like objects <bytes-like object>` (normally :class:`bytes`) "
"using the :meth:`update` method. At any point you can ask it for the :dfn:"
"`digest` of the concatenation of the data fed to it so far using the :meth:"
"`digest` or :meth:`hexdigest` methods."
msgstr ""

#: ../../library/hashlib.rst:56
msgid ""
"For better multithreading performance, the Python :term:`GIL` is released "
"for data larger than 2047 bytes at object creation or on update."
msgstr ""

#: ../../library/hashlib.rst:61
msgid ""
"Feeding string objects into :meth:`update` is not supported, as hashes work "
"on bytes, not on characters."
msgstr ""

#: ../../library/hashlib.rst:66
msgid ""
"Constructors for hash algorithms that are always present in this module are :"
"func:`sha1`, :func:`sha224`, :func:`sha256`, :func:`sha384`, :func:"
"`sha512`, :func:`blake2b`, and :func:`blake2s`. :func:`md5` is normally "
"available as well, though it may be missing or blocked if you are using a "
"rare \"FIPS compliant\" build of Python. Additional algorithms may also be "
"available depending upon the OpenSSL library that Python uses on your "
"platform. On most platforms the :func:`sha3_224`, :func:`sha3_256`, :func:"
"`sha3_384`, :func:`sha3_512`, :func:`shake_128`, :func:`shake_256` are also "
"available."
msgstr ""

#: ../../library/hashlib.rst:76
msgid ""
"SHA3 (Keccak) and SHAKE constructors :func:`sha3_224`, :func:`sha3_256`, :"
"func:`sha3_384`, :func:`sha3_512`, :func:`shake_128`, :func:`shake_256`."
msgstr ""

#: ../../library/hashlib.rst:80
msgid ":func:`blake2b` and :func:`blake2s` were added."
msgstr ""

#: ../../library/hashlib.rst:85
msgid ""
"All hashlib constructors take a keyword-only argument *usedforsecurity* with "
"default value ``True``. A false value allows the use of insecure and blocked "
"hashing algorithms in restricted environments. ``False`` indicates that the "
"hashing algorithm is not used in a security context, e.g. as a non-"
"cryptographic one-way compression function."
msgstr ""
"Todos os construtores de hashlib aceitam um argumento somente-nomeado "
"*usedforsecurity* com o valor padrão ``True``. Um valor falso permite o uso "
"de algoritmos de hash inseguros e bloqueados em ambientes restritos. "
"``False`` indica que o algoritmo de hash não é usado em um contexto de "
"segurança, por exemplo, como uma função de compressão unidirecional não "
"criptográfica."

#: ../../library/hashlib.rst:92
msgid "Hashlib now uses SHA3 and SHAKE from OpenSSL 1.1.1 and newer."
msgstr ""

#: ../../library/hashlib.rst:94
msgid ""
"For example, to obtain the digest of the byte string ``b'Nobody inspects the "
"spammish repetition'``::"
msgstr ""

#: ../../library/hashlib.rst:108
msgid "More condensed:"
msgstr "Mais condensado:"

#: ../../library/hashlib.rst:115
msgid ""
"Is a generic constructor that takes the string *name* of the desired "
"algorithm as its first parameter.  It also exists to allow access to the "
"above listed hashes as well as any other algorithms that your OpenSSL "
"library may offer.  The named constructors are much faster than :func:`new` "
"and should be preferred."
msgstr ""

#: ../../library/hashlib.rst:121
msgid "Using :func:`new` with an algorithm provided by OpenSSL:"
msgstr ""

#: ../../library/hashlib.rst:128
msgid "Hashlib provides the following constant attributes:"
msgstr ""

#: ../../library/hashlib.rst:132
msgid ""
"A set containing the names of the hash algorithms guaranteed to be supported "
"by this module on all platforms.  Note that 'md5' is in this list despite "
"some upstream vendors offering an odd \"FIPS compliant\" Python build that "
"excludes it."
msgstr ""
"Um conjunto contendo os nomes dos algoritmos de hash com suporte garantido "
"por este módulo em todas as plataformas. Observe que \"md5\" está nesta "
"lista, apesar de alguns fornecedores originais oferecerem uma estranha "
"construção Python \"compatível com FIPS\" que o exclui."

#: ../../library/hashlib.rst:141
msgid ""
"A set containing the names of the hash algorithms that are available in the "
"running Python interpreter.  These names will be recognized when passed to :"
"func:`new`.  :attr:`algorithms_guaranteed` will always be a subset.  The "
"same algorithm may appear multiple times in this set under different names "
"(thanks to OpenSSL)."
msgstr ""
"Um conjunto contendo os nomes dos algoritmos de hash disponíveis no "
"interpretador Python em execução. Esses nomes serão reconhecidos quando "
"passados para :func:`new`. :attr:`algorithms_guaranteed` sempre será um "
"subconjunto. O mesmo algoritmo pode aparecer várias vezes neste conjunto com "
"nomes diferentes (graças ao OpenSSL)."

#: ../../library/hashlib.rst:149
msgid ""
"The following values are provided as constant attributes of the hash objects "
"returned by the constructors:"
msgstr ""
"Os seguintes valores são fornecidos como atributos constantes dos objetos "
"hash retornados pelos construtores:"

#: ../../library/hashlib.rst:155
msgid "The size of the resulting hash in bytes."
msgstr "O tamanho do hash resultante em bytes."

#: ../../library/hashlib.rst:159
msgid "The internal block size of the hash algorithm in bytes."
msgstr "O tamanho do bloco interna do algoritmo de hash em bytes."

#: ../../library/hashlib.rst:161
msgid "A hash object has the following attributes:"
msgstr "Um objeto hash tem os seguintes atributos:"

#: ../../library/hashlib.rst:165
msgid ""
"The canonical name of this hash, always lowercase and always suitable as a "
"parameter to :func:`new` to create another hash of this type."
msgstr ""
"O nome canônico deste hash, sempre em minúsculas e sempre adequado como "
"parâmetro para :func:`new` para criar outro hash deste tipo."

#: ../../library/hashlib.rst:168
msgid ""
"The name attribute has been present in CPython since its inception, but "
"until Python 3.4 was not formally specified, so may not exist on some "
"platforms."
msgstr ""
"O atributo name está presente no CPython desde o seu início, mas até o "
"Python 3.4 não era especificado formalmente, então pode não existir em "
"algumas plataformas."

#: ../../library/hashlib.rst:173
msgid "A hash object has the following methods:"
msgstr "Um objeto hash tem os seguintes métodos:"

#: ../../library/hashlib.rst:178
msgid ""
"Update the hash object with the :term:`bytes-like object`. Repeated calls "
"are equivalent to a single call with the concatenation of all the arguments: "
"``m.update(a); m.update(b)`` is equivalent to ``m.update(a+b)``."
msgstr ""
"Atualiza o objeto hash com o :term:`objeto bytes ou similar`. Chamadas "
"repetidas são equivalentes a uma única chamada com a concatenação de todos "
"os argumentos: ``m.update(a); m.update(b)`` é equivalente a ``m."
"update(a+b)``."

#: ../../library/hashlib.rst:183
msgid ""
"The Python GIL is released to allow other threads to run while hash updates "
"on data larger than 2047 bytes is taking place when using hash algorithms "
"supplied by OpenSSL."
msgstr ""
"Python GIL випущено, щоб дозволити іншим потокам працювати під час оновлення "
"хешів даних, розмір яких перевищує 2047 байт, за допомогою хеш-алгоритмів, "
"наданих OpenSSL."

#: ../../library/hashlib.rst:191
msgid ""
"Return the digest of the data passed to the :meth:`update` method so far. "
"This is a bytes object of size :attr:`digest_size` which may contain bytes "
"in the whole range from 0 to 255."
msgstr ""
"Retorna o resumo dos dados passados ao método :meth:`update` até o momento. "
"Este é um objeto bytes de tamanho :attr:`digest_size` que pode conter bytes "
"em todo o intervalo de 0 a 255."

#: ../../library/hashlib.rst:198 ../../library/hashlib.rst:226
msgid ""
"Like :meth:`digest` except the digest is returned as a string object of "
"double length, containing only hexadecimal digits.  This may be used to "
"exchange the value safely in email or other non-binary environments."
msgstr ""
"Similar a :meth:`digest`, exceto que o resumo é retornado como um objeto "
"string de comprimento duplo, contendo apenas dígitos hexadecimais. Isso pode "
"ser usado para trocar o valor com segurança em e-mails ou outros ambientes "
"não binários."

#: ../../library/hashlib.rst:205
msgid ""
"Return a copy (\"clone\") of the hash object.  This can be used to "
"efficiently compute the digests of data sharing a common initial substring."
msgstr ""
"Retorna uma cópia (\"clone\") do objeto hash. Isso pode ser usado para "
"calcular com eficiência os resumos de dados que compartilham uma substring "
"inicial comum."

#: ../../library/hashlib.rst:210
msgid "SHAKE variable length digests"
msgstr "Resumos de comprimento variável de SHAKE"

#: ../../library/hashlib.rst:212
msgid ""
"The :func:`shake_128` and :func:`shake_256` algorithms provide variable "
"length digests with length_in_bits//2 up to 128 or 256 bits of security. As "
"such, their digest methods require a length. Maximum length is not limited "
"by the SHAKE algorithm."
msgstr ""
"Os algoritmos :func:`shake_128` e :func:`shake_256` fornecem resumos de "
"comprimento variável com length_in_bits//2 de até 128 ou 256 bits de "
"segurança. Portanto, seus métodos de resumo exigem um comprimento. O "
"comprimento máximo não é limitado pelo algoritmo SHAKE."

#: ../../library/hashlib.rst:219
msgid ""
"Return the digest of the data passed to the :meth:`update` method so far. "
"This is a bytes object of size *length* which may contain bytes in the whole "
"range from 0 to 255."
msgstr ""

#: ../../library/hashlib.rst:232
msgid "Key derivation"
msgstr "Derivação de chave"

#: ../../library/hashlib.rst:234
msgid ""
"Key derivation and key stretching algorithms are designed for secure "
"password hashing. Naive algorithms such as ``sha1(password)`` are not "
"resistant against brute-force attacks. A good password hashing function must "
"be tunable, slow, and include a `salt <https://en.wikipedia.org/wiki/"
"Salt_%28cryptography%29>`_."
msgstr ""
"Algoritmos de alongamento de chave e derivação de chave são projetados para "
"criar hashes de senhas seguros. Algoritmos ingênuos como ``sha1(password)`` "
"não são resistentes a ataques de força bruta. Uma boa função de hashing de "
"senhas deve ser ajustável, lenta e incluir um `salt <https://pt.wikipedia."
"org/wiki/Sal_(criptografia)>`_."

#: ../../library/hashlib.rst:242
msgid ""
"The function provides PKCS#5 password-based key derivation function 2. It "
"uses HMAC as pseudorandom function."
msgstr ""
"A função fornece a função 2 de derivação de chave baseada em senha PKCS#5. "
"Ela usa HMAC como função pseudoaleatória."

#: ../../library/hashlib.rst:245
msgid ""
"The string *hash_name* is the desired name of the hash digest algorithm for "
"HMAC, e.g. 'sha1' or 'sha256'. *password* and *salt* are interpreted as "
"buffers of bytes. Applications and libraries should limit *password* to a "
"sensible length (e.g. 1024). *salt* should be about 16 or more bytes from a "
"proper source, e.g. :func:`os.urandom`."
msgstr ""
"A string *hash_name* é o nome desejado do algoritmo de resumo de hash para "
"HMAC, por exemplo, 'sha1' ou 'sha256'. *password* e *salt* são interpretados "
"como buffers de bytes. Aplicações e bibliotecas devem limitar *password* a "
"um comprimento razoável (por exemplo, 1024). *salt* deve ter cerca de 16 "
"bytes ou mais de uma fonte adequada, por exemplo, :func:`os.urandom`."

#: ../../library/hashlib.rst:251
msgid ""
"The number of *iterations* should be chosen based on the hash algorithm and "
"computing power. As of 2013, at least 100,000 iterations of SHA-256 are "
"suggested."
msgstr ""

#: ../../library/hashlib.rst:255
msgid ""
"*dklen* is the length of the derived key. If *dklen* is ``None`` then the "
"digest size of the hash algorithm *hash_name* is used, e.g. 64 for SHA-512."
msgstr ""
"*dklen* — довжина похідного ключа. Якщо *dklen* має значення ``None``, тоді "
"використовується розмір дайджесту геш-алгоритму *hash_name*, наприклад. 64 "
"для SHA-512."

#: ../../library/hashlib.rst:267
msgid ""
"A fast implementation of *pbkdf2_hmac* is available with OpenSSL.  The "
"Python implementation uses an inline version of :mod:`hmac`. It is about "
"three times slower and doesn't release the GIL."
msgstr ""

#: ../../library/hashlib.rst:273
msgid ""
"The function provides scrypt password-based key derivation function as "
"defined in :rfc:`7914`."
msgstr ""
"A função fornece a função de derivação de chave baseada em senha scrypt, "
"conforme definido em :rfc:`7914`."

#: ../../library/hashlib.rst:276
msgid ""
"*password* and *salt* must be :term:`bytes-like objects <bytes-like "
"object>`.  Applications and libraries should limit *password* to a sensible "
"length (e.g. 1024).  *salt* should be about 16 or more bytes from a proper "
"source, e.g. :func:`os.urandom`."
msgstr ""
"*password* e *salt* devem ser :term:`objetos bytes ou similares <bytes-like "
"object>`. Aplicações e bibliotecas devem limitar *password* a um tamanho "
"razoável (por exemplo, 1024). *salt* deve ter cerca de 16 bytes ou mais de "
"uma fonte adequada, por exemplo, :func:`os.urandom`."

#: ../../library/hashlib.rst:281
msgid ""
"*n* is the CPU/Memory cost factor, *r* the block size, *p* parallelization "
"factor and *maxmem* limits memory (OpenSSL 1.1.0 defaults to 32 MiB). "
"*dklen* is the length of the derived key."
msgstr ""
"*n* — це коефіцієнт вартості ЦП/пам’яті, *r* — розмір блоку, *p* — "
"коефіцієнт розпаралелювання, а *maxmem* обмежує пам’ять (OpenSSL 1.1.0 за "
"замовчуванням становить 32 МБ). *dklen* — довжина похідного ключа."

#: ../../library/hashlib.rst:286
msgid ":ref:`Availability <availability>`: OpenSSL 1.1+."
msgstr ""

#: ../../library/hashlib.rst:291
msgid "BLAKE2"
msgstr "BLAKE2"

#: ../../library/hashlib.rst:298
msgid ""
"BLAKE2_ is a cryptographic hash function defined in :rfc:`7693` that comes "
"in two flavors:"
msgstr ""
"BLAKE2_ é uma função hash criptográfica definida em :rfc:`7693` que vem em "
"dois sabores:"

#: ../../library/hashlib.rst:301
msgid ""
"**BLAKE2b**, optimized for 64-bit platforms and produces digests of any size "
"between 1 and 64 bytes,"
msgstr ""
"**BLAKE2b**, otimizado para plataformas de 64 bits e produz resumos de "
"qualquer tamanho entre 1 e 64 bytes,"

#: ../../library/hashlib.rst:304
msgid ""
"**BLAKE2s**, optimized for 8- to 32-bit platforms and produces digests of "
"any size between 1 and 32 bytes."
msgstr ""
"**BLAKE2s**, otimizado para plataformas de 8 a 32 bits e produz resumos de "
"qualquer tamanho entre 1 e 32 bytes."

#: ../../library/hashlib.rst:307
msgid ""
"BLAKE2 supports **keyed mode** (a faster and simpler replacement for HMAC_), "
"**salted hashing**, **personalization**, and **tree hashing**."
msgstr ""
"BLAKE2 підтримує **ключовий режим** (швидша та простіша заміна HMAC_), "
"**солі хешування**, **персоналізацію** та **хешування дерева**."

#: ../../library/hashlib.rst:310
msgid ""
"Hash objects from this module follow the API of standard library's :mod:"
"`hashlib` objects."
msgstr ""
"Хеш-об’єкти з цього модуля відповідають API об’єктів :mod:`hashlib` "
"стандартної бібліотеки."

#: ../../library/hashlib.rst:315
msgid "Creating hash objects"
msgstr "Створення хеш-об'єктів"

#: ../../library/hashlib.rst:317
msgid "New hash objects are created by calling constructor functions:"
msgstr "Нові хеш-об’єкти створюються шляхом виклику функцій конструктора:"

#: ../../library/hashlib.rst:331
msgid ""
"These functions return the corresponding hash objects for calculating "
"BLAKE2b or BLAKE2s. They optionally take these general parameters:"
msgstr ""
"Ці функції повертають відповідні хеш-об’єкти для обчислення BLAKE2b або "
"BLAKE2s. Вони необов'язково приймають такі загальні параметри:"

#: ../../library/hashlib.rst:334
msgid ""
"*data*: initial chunk of data to hash, which must be :term:`bytes-like "
"object`.  It can be passed only as positional argument."
msgstr ""
"*data*: початкова частина даних для хешування, яка має бути :term:`bytes-"
"like object`. Його можна передати лише як позиційний аргумент."

#: ../../library/hashlib.rst:337
msgid "*digest_size*: size of output digest in bytes."
msgstr "*digest_size*: розмір вихідного дайджесту в байтах."

#: ../../library/hashlib.rst:339
msgid ""
"*key*: key for keyed hashing (up to 64 bytes for BLAKE2b, up to 32 bytes for "
"BLAKE2s)."
msgstr ""
"*key*: ключ для хешування з ключем (до 64 байтів для BLAKE2b, до 32 байтів "
"для BLAKE2s)."

#: ../../library/hashlib.rst:342
msgid ""
"*salt*: salt for randomized hashing (up to 16 bytes for BLAKE2b, up to 8 "
"bytes for BLAKE2s)."
msgstr ""
"*salt*: сіль для рандомізованого хешування (до 16 байт для BLAKE2b, до 8 "
"байт для BLAKE2s)."

#: ../../library/hashlib.rst:345
msgid ""
"*person*: personalization string (up to 16 bytes for BLAKE2b, up to 8 bytes "
"for BLAKE2s)."
msgstr ""
"*особа*: рядок персоналізації (до 16 байт для BLAKE2b, до 8 байт для "
"BLAKE2s)."

#: ../../library/hashlib.rst:348
msgid "The following table shows limits for general parameters (in bytes):"
msgstr ""
"У наступній таблиці показано обмеження для загальних параметрів (у байтах):"

#: ../../library/hashlib.rst:351
msgid "Hash"
msgstr "Хеш"

#: ../../library/hashlib.rst:351
msgid "digest_size"
msgstr "digest_size"

#: ../../library/hashlib.rst:351
msgid "len(key)"
msgstr "len(key)"

#: ../../library/hashlib.rst:351
msgid "len(salt)"
msgstr "len(salt)"

#: ../../library/hashlib.rst:351
msgid "len(person)"
msgstr "len(person)"

#: ../../library/hashlib.rst:353
msgid "BLAKE2b"
msgstr "BLAKE2b"

#: ../../library/hashlib.rst:353
msgid "64"
msgstr "64"

#: ../../library/hashlib.rst:353
msgid "16"
msgstr "16"

#: ../../library/hashlib.rst:354
msgid "BLAKE2s"
msgstr "BLAKE2s"

#: ../../library/hashlib.rst:354
msgid "32"
msgstr "32"

#: ../../library/hashlib.rst:354
msgid "8"
msgstr "8"

#: ../../library/hashlib.rst:359
msgid ""
"BLAKE2 specification defines constant lengths for salt and personalization "
"parameters, however, for convenience, this implementation accepts byte "
"strings of any size up to the specified length. If the length of the "
"parameter is less than specified, it is padded with zeros, thus, for "
"example, ``b'salt'`` and ``b'salt\\x00'`` is the same value. (This is not "
"the case for *key*.)"
msgstr ""
"Специфікація BLAKE2 визначає постійну довжину параметрів солі та "
"персоналізації, однак для зручності ця реалізація приймає рядки байтів будь-"
"якого розміру до вказаної довжини. Якщо довжина параметра менша за вказану, "
"вона доповнюється нулями, таким чином, наприклад, ``b'salt`` і "
"``b'salt\\x00`` є однаковими значеннями. (Це не стосується *ключа*.)"

#: ../../library/hashlib.rst:366
msgid "These sizes are available as module `constants`_ described below."
msgstr "Ці розміри доступні як `constants`_ модуля, описані нижче."

#: ../../library/hashlib.rst:368
msgid ""
"Constructor functions also accept the following tree hashing parameters:"
msgstr "Функції конструктора також приймають такі параметри хешування дерева:"

#: ../../library/hashlib.rst:370
msgid "*fanout*: fanout (0 to 255, 0 if unlimited, 1 in sequential mode)."
msgstr ""
"*fanout*: розхід (від 0 до 255, 0, якщо необмежений, 1 у послідовному "
"режимі)."

#: ../../library/hashlib.rst:372
msgid ""
"*depth*: maximal depth of tree (1 to 255, 255 if unlimited, 1 in sequential "
"mode)."
msgstr ""
"*depth*: максимальна глибина дерева (від 1 до 255, 255, якщо необмежено, 1 у "
"послідовному режимі)."

#: ../../library/hashlib.rst:375
msgid ""
"*leaf_size*: maximal byte length of leaf (0 to ``2**32-1``, 0 if unlimited "
"or in sequential mode)."
msgstr ""
"*leaf_size*: максимальна довжина листа в байтах (від 0 до ``2**32-1``, 0, "
"якщо необмежений або в послідовному режимі)."

#: ../../library/hashlib.rst:378
msgid ""
"*node_offset*: node offset (0 to ``2**64-1`` for BLAKE2b, 0 to ``2**48-1`` "
"for BLAKE2s, 0 for the first, leftmost, leaf, or in sequential mode)."
msgstr ""
"*node_offset*: зміщення вузла (від 0 до ``2**64-1`` для BLAKE2b, від 0 до "
"``2**48-1`` для BLAKE2s, 0 для першого, крайнього лівого листа, або в "
"послідовному режимі )."

#: ../../library/hashlib.rst:381
msgid ""
"*node_depth*: node depth (0 to 255, 0 for leaves, or in sequential mode)."
msgstr ""
"*node_depth*: глибина вузла (від 0 до 255, 0 для листів або в послідовному "
"режимі)."

#: ../../library/hashlib.rst:383
msgid ""
"*inner_size*: inner digest size (0 to 64 for BLAKE2b, 0 to 32 for BLAKE2s, 0 "
"in sequential mode)."
msgstr ""
"*inner_size*: розмір внутрішнього дайджесту (від 0 до 64 для BLAKE2b, від 0 "
"до 32 для BLAKE2s, 0 у послідовному режимі)."

#: ../../library/hashlib.rst:386
msgid ""
"*last_node*: boolean indicating whether the processed node is the last one "
"(`False` for sequential mode)."
msgstr ""

#: ../../library/hashlib.rst:392
msgid ""
"See section 2.10 in `BLAKE2 specification <https://blake2.net/"
"blake2_20130129.pdf>`_ for comprehensive review of tree hashing."
msgstr ""

#: ../../library/hashlib.rst:398
msgid "Constants"
msgstr "Constantes"

#: ../../library/hashlib.rst:403
msgid "Salt length (maximum length accepted by constructors)."
msgstr "Довжина солі (максимальна довжина, прийнята конструкторами)."

#: ../../library/hashlib.rst:409
msgid ""
"Personalization string length (maximum length accepted by constructors)."
msgstr ""
"Довжина рядка персоналізації (максимальна довжина, прийнята конструкторами)."

#: ../../library/hashlib.rst:415
msgid "Maximum key size."
msgstr "Максимальний розмір ключа."

#: ../../library/hashlib.rst:421
msgid "Maximum digest size that the hash function can output."
msgstr "Максимальний розмір дайджесту, який може вивести хеш-функція."

#: ../../library/hashlib.rst:425
msgid "Examples"
msgstr "Exemplos"

#: ../../library/hashlib.rst:428
msgid "Simple hashing"
msgstr "Просте хешування"

#: ../../library/hashlib.rst:430
msgid ""
"To calculate hash of some data, you should first construct a hash object by "
"calling the appropriate constructor function (:func:`blake2b` or :func:"
"`blake2s`), then update it with the data by calling :meth:`update` on the "
"object, and, finally, get the digest out of the object by calling :meth:"
"`digest` (or :meth:`hexdigest` for hex-encoded string)."
msgstr ""

#: ../../library/hashlib.rst:443
msgid ""
"As a shortcut, you can pass the first chunk of data to update directly to "
"the constructor as the positional argument:"
msgstr ""
"Як ярлик, ви можете передати перший фрагмент даних для оновлення "
"безпосередньо в конструктор як позиційний аргумент:"

#: ../../library/hashlib.rst:450
msgid ""
"You can call :meth:`hash.update` as many times as you need to iteratively "
"update the hash:"
msgstr ""
"Ви можете викликати :meth:`hash.update` стільки разів, скільки потрібно для "
"повторного оновлення хешу:"

#: ../../library/hashlib.rst:463
msgid "Using different digest sizes"
msgstr "Використання різних розмірів дайджесту"

#: ../../library/hashlib.rst:465
msgid ""
"BLAKE2 has configurable size of digests up to 64 bytes for BLAKE2b and up to "
"32 bytes for BLAKE2s. For example, to replace SHA-1 with BLAKE2b without "
"changing the size of output, we can tell BLAKE2b to produce 20-byte digests:"
msgstr ""
"BLAKE2 має настроюваний розмір дайджестів до 64 байтів для BLAKE2b і до 32 "
"байтів для BLAKE2s. Наприклад, щоб замінити SHA-1 на BLAKE2b без зміни "
"розміру виведення, ми можемо наказати BLAKE2b створювати 20-байтові "
"дайджести:"

#: ../../library/hashlib.rst:479
msgid ""
"Hash objects with different digest sizes have completely different outputs "
"(shorter hashes are *not* prefixes of longer hashes); BLAKE2b and BLAKE2s "
"produce different outputs even if the output length is the same:"
msgstr ""
"Хеш-об’єкти з різними розмірами дайджестів мають абсолютно різні результати "
"(коротші хеші *не* є префіксами більш довгих хешів); BLAKE2b і BLAKE2s "
"створюють різні результати, навіть якщо довжина виводу однакова:"

#: ../../library/hashlib.rst:495
msgid "Keyed hashing"
msgstr "Ключове хешування"

#: ../../library/hashlib.rst:497
msgid ""
"Keyed hashing can be used for authentication as a faster and simpler "
"replacement for `Hash-based message authentication code <https://en."
"wikipedia.org/wiki/HMAC>`_ (HMAC). BLAKE2 can be securely used in prefix-MAC "
"mode thanks to the indifferentiability property inherited from BLAKE."
msgstr ""
"Хешування з ключем можна використовувати для автентифікації як швидшу та "
"простішу заміну `коду автентифікації повідомлення на основі хешу <https://en."
"wikipedia.org/wiki/HMAC>`_ (HMAC). BLAKE2 можна безпечно використовувати в "
"режимі prefix-MAC завдяки властивості індиференційованості, успадкованій від "
"BLAKE."

#: ../../library/hashlib.rst:503
msgid ""
"This example shows how to get a (hex-encoded) 128-bit authentication code "
"for message ``b'message data'`` with key ``b'pseudorandom key'``::"
msgstr ""
"У цьому прикладі показано, як отримати (в шістнадцятковому кодуванні) 128-"
"бітний код автентифікації для повідомлення ``b'message data`` з ключем "
"``b'pseudorandom key``::"

#: ../../library/hashlib.rst:513
msgid ""
"As a practical example, a web application can symmetrically sign cookies "
"sent to users and later verify them to make sure they weren't tampered with::"
msgstr ""
"Як практичний приклад, веб-додаток може симетрично підписувати файли cookie, "
"надіслані користувачам, а потім перевіряти їх, щоб переконатися, що вони не "
"були змінені:"

#: ../../library/hashlib.rst:542
msgid ""
"Even though there's a native keyed hashing mode, BLAKE2 can, of course, be "
"used in HMAC construction with :mod:`hmac` module::"
msgstr ""
"Незважаючи на те, що існує режим хешування з рідним ключем, BLAKE2, "
"звичайно, можна використовувати в конструкції HMAC за допомогою модуля :mod:"
"`hmac`::"

#: ../../library/hashlib.rst:553
msgid "Randomized hashing"
msgstr "Рандомізоване хешування"

#: ../../library/hashlib.rst:555
msgid ""
"By setting *salt* parameter users can introduce randomization to the hash "
"function. Randomized hashing is useful for protecting against collision "
"attacks on the hash function used in digital signatures."
msgstr ""
"Установивши параметр *salt*, користувачі можуть запровадити рандомізацію хеш-"
"функції. Рандомізоване хешування корисне для захисту від колізійних атак на "
"хеш-функцію, яка використовується в цифрових підписах."

#: ../../library/hashlib.rst:559
msgid ""
"Randomized hashing is designed for situations where one party, the message "
"preparer, generates all or part of a message to be signed by a second party, "
"the message signer. If the message preparer is able to find cryptographic "
"hash function collisions (i.e., two messages producing the same hash value), "
"then they might prepare meaningful versions of the message that would "
"produce the same hash value and digital signature, but with different "
"results (e.g., transferring $1,000,000 to an account, rather than $10). "
"Cryptographic hash functions have been designed with collision resistance as "
"a major goal, but the current concentration on attacking cryptographic hash "
"functions may result in a given cryptographic hash function providing less "
"collision resistance than expected. Randomized hashing offers the signer "
"additional protection by reducing the likelihood that a preparer can "
"generate two or more messages that ultimately yield the same hash value "
"during the digital signature generation process --- even if it is practical "
"to find collisions for the hash function. However, the use of randomized "
"hashing may reduce the amount of security provided by a digital signature "
"when all portions of the message are prepared by the signer."
msgstr ""
"Рандомізоване хешування призначене для ситуацій, коли одна сторона, яка "
"готує повідомлення, створює все або частину повідомлення для підпису другою "
"стороною, особою, яка підписує повідомлення. Якщо готувач повідомлення може "
"знайти колізії криптографічної хеш-функції (тобто два повідомлення, що "
"створюють однакове хеш-значення), тоді він може підготувати значущі версії "
"повідомлення, які створять те саме хеш-значення та цифровий підпис, але з "
"різними результатами (наприклад, , переказуючи на рахунок 1 000 000 доларів "
"США, а не 10 доларів США). Основною метою криптографічних хеш-функцій було "
"розроблено стійкість до зіткнень, але поточна концентрація на атакуючих "
"криптографічних хеш-функціях може призвести до того, що дана криптографічна "
"хеш-функція забезпечить меншу стійкість до зіткнень, ніж очікувалося. "
"Рандомізоване хешування пропонує підписувачу додатковий захист, зменшуючи "
"ймовірність того, що підготовник зможе згенерувати два або більше "
"повідомлень, які в кінцевому підсумку дають однакове хеш-значення під час "
"процесу генерації цифрового підпису --- навіть якщо практично знайти колізії "
"для хеш-функції. Однак використання рандомізованого хешування може знизити "
"рівень безпеки, який забезпечує цифровий підпис, коли всі частини "
"повідомлення готуються підписувачем."

#: ../../library/hashlib.rst:578
msgid ""
"(`NIST SP-800-106 \"Randomized Hashing for Digital Signatures\" <https://"
"csrc.nist.gov/publications/detail/sp/800-106/final>`_)"
msgstr ""

#: ../../library/hashlib.rst:581
msgid ""
"In BLAKE2 the salt is processed as a one-time input to the hash function "
"during initialization, rather than as an input to each compression function."
msgstr ""
"У BLAKE2 сіль обробляється як одноразовий вхід до хеш-функції під час "
"ініціалізації, а не як вхід для кожної функції стиснення."

#: ../../library/hashlib.rst:586
msgid ""
"*Salted hashing* (or just hashing) with BLAKE2 or any other general-purpose "
"cryptographic hash function, such as SHA-256, is not suitable for hashing "
"passwords.  See `BLAKE2 FAQ <https://blake2.net/#qa>`_ for more information."
msgstr ""

#: ../../library/hashlib.rst:609
msgid "Personalization"
msgstr "Персоналізація"

#: ../../library/hashlib.rst:611
msgid ""
"Sometimes it is useful to force hash function to produce different digests "
"for the same input for different purposes. Quoting the authors of the Skein "
"hash function:"
msgstr ""
"Іноді корисно змусити хеш-функцію виробляти різні дайджести для одного "
"введення для різних цілей. Цитую авторів хеш-функції Skein:"

#: ../../library/hashlib.rst:615
msgid ""
"We recommend that all application designers seriously consider doing this; "
"we have seen many protocols where a hash that is computed in one part of the "
"protocol can be used in an entirely different part because two hash "
"computations were done on similar or related data, and the attacker can "
"force the application to make the hash inputs the same. Personalizing each "
"hash function used in the protocol summarily stops this type of attack."
msgstr ""
"Ми рекомендуємо всім розробникам додатків серйозно подумати про це; ми "
"бачили багато протоколів, де хеш, який обчислюється в одній частині "
"протоколу, може використовуватися в зовсім іншій частині, оскільки два хеш-"
"обчислення були виконані на подібних або пов’язаних даних, і зловмисник може "
"змусити програму зробити вхідні дані хешу те саме. Персоналізація кожної хеш-"
"функції, яка використовується в протоколі, швидко зупиняє цей тип атаки."

#: ../../library/hashlib.rst:622
msgid ""
"(`The Skein Hash Function Family <http://www.skein-hash.info/sites/default/"
"files/skein1.3.pdf>`_, p. 21)"
msgstr ""

#: ../../library/hashlib.rst:626
msgid "BLAKE2 can be personalized by passing bytes to the *person* argument::"
msgstr "BLAKE2 можна персоналізувати, передаючи байти в аргумент *person*::"

#: ../../library/hashlib.rst:640
msgid ""
"Personalization together with the keyed mode can also be used to derive "
"different keys from a single one."
msgstr ""
"Персоналізацію разом із режимом ключа також можна використовувати для "
"отримання різних ключів з одного."

#: ../../library/hashlib.rst:654
msgid "Tree mode"
msgstr "Modo árvore"

#: ../../library/hashlib.rst:656
msgid "Here's an example of hashing a minimal tree with two leaf nodes::"
msgstr "Ось приклад хешування мінімального дерева з двома листовими вузлами:"

#: ../../library/hashlib.rst:662
msgid ""
"This example uses 64-byte internal digests, and returns the 32-byte final "
"digest::"
msgstr ""
"У цьому прикладі використовуються 64-байтові внутрішні дайджести та "
"повертається 32-байтовий остаточний дайджест:"

#: ../../library/hashlib.rst:692
msgid "Credits"
msgstr "Кредити"

#: ../../library/hashlib.rst:694
msgid ""
"BLAKE2_ was designed by *Jean-Philippe Aumasson*, *Samuel Neves*, *Zooko "
"Wilcox-O'Hearn*, and *Christian Winnerlein* based on SHA-3_ finalist BLAKE_ "
"created by *Jean-Philippe Aumasson*, *Luca Henzen*, *Willi Meier*, and "
"*Raphael C.-W. Phan*."
msgstr ""
"BLAKE2_ був розроблений *Jean-Philippe Aumasson*, *Samuel Neves*, *Zooko "
"Wilcox-O'Hearn* і *Christian Winnerlein* на основі фіналіста SHA-3_ BLAKE_, "
"створеного *Jean-Philippe Aumasson*, *Luca Henzen*, *Willi Meier* і*Raphael "
"C.-W. Phan*."

#: ../../library/hashlib.rst:699
msgid ""
"It uses core algorithm from ChaCha_ cipher designed by *Daniel J.  "
"Bernstein*."
msgstr ""
"Він використовує основний алгоритм із шифру ChaCha_, розробленого *Daniel J. "
"Bernstein*."

#: ../../library/hashlib.rst:701
msgid ""
"The stdlib implementation is based on pyblake2_ module. It was written by "
"*Dmitry Chestnykh* based on C implementation written by *Samuel Neves*. The "
"documentation was copied from pyblake2_ and written by *Dmitry Chestnykh*."
msgstr ""
"Реалізація stdlib базується на модулі pyblake2_. Його написав *Dmitry "
"Chestnykh* на основі реалізації C, написаної *Samuel Neves*. Документація "
"була скопійована з pyblake2_ і написана *Дмитром Честних*."

#: ../../library/hashlib.rst:705
msgid "The C code was partly rewritten for Python by *Christian Heimes*."
msgstr "Код C був частково переписаний для Python *Christian Heimes*."

#: ../../library/hashlib.rst:707
msgid ""
"The following public domain dedication applies for both C hash function "
"implementation, extension code, and this documentation:"
msgstr ""
"Наведені нижче правила загальнодоступного домену застосовуються до "
"реалізації хеш-функції C, коду розширення та цієї документації:"

#: ../../library/hashlib.rst:710
msgid ""
"To the extent possible under law, the author(s) have dedicated all copyright "
"and related and neighboring rights to this software to the public domain "
"worldwide. This software is distributed without any warranty."
msgstr ""
"Наскільки це можливо згідно із законодавством, автор(и) передали всі "
"авторські права, суміжні та суміжні права на це програмне забезпечення у "
"суспільне надбання в усьому світі. Це програмне забезпечення "
"розповсюджується без будь-яких гарантій."

#: ../../library/hashlib.rst:714
msgid ""
"You should have received a copy of the CC0 Public Domain Dedication along "
"with this software. If not, see https://creativecommons.org/publicdomain/"
"zero/1.0/."
msgstr ""
"Ви повинні були отримати копію CC0 Public Domain Dedication разом із цим "
"програмним забезпеченням. Якщо ні, перегляньте https://creativecommons.org/"
"publicdomain/zero/1.0/."

#: ../../library/hashlib.rst:718
msgid ""
"The following people have helped with development or contributed their "
"changes to the project and the public domain according to the Creative "
"Commons Public Domain Dedication 1.0 Universal:"
msgstr ""
"Наступні люди допомогли з розробкою або внесли свої зміни до проекту та "
"суспільного надбання відповідно до Creative Commons Public Domain Dedication "
"1.0 Universal:"

#: ../../library/hashlib.rst:722
msgid "*Alexandr Sokolovskiy*"
msgstr "*Олександр Соколовський*"

#: ../../library/hashlib.rst:736
msgid "Module :mod:`hmac`"
msgstr "Модуль :mod:`hmac`"

#: ../../library/hashlib.rst:736
msgid "A module to generate message authentication codes using hashes."
msgstr ""
"Модуль для створення кодів автентифікації повідомлень за допомогою хешів."

#: ../../library/hashlib.rst:739
msgid "Module :mod:`base64`"
msgstr "Módulo :mod:`base64`"

#: ../../library/hashlib.rst:739
msgid "Another way to encode binary hashes for non-binary environments."
msgstr "Інший спосіб кодування двійкових хешів для небінарних середовищ."

#: ../../library/hashlib.rst:742
msgid "https://blake2.net"
msgstr ""

#: ../../library/hashlib.rst:742
msgid "Official BLAKE2 website."
msgstr "Офіційний сайт BLAKE2."

#: ../../library/hashlib.rst:745
msgid ""
"https://csrc.nist.gov/csrc/media/publications/fips/180/2/archive/2002-08-01/"
"documents/fips180-2.pdf"
msgstr ""

#: ../../library/hashlib.rst:745
msgid "The FIPS 180-2 publication on Secure Hash Algorithms."
msgstr ""

#: ../../library/hashlib.rst:749
msgid ""
"https://en.wikipedia.org/wiki/"
"Cryptographic_hash_function#Cryptographic_hash_algorithms"
msgstr ""

#: ../../library/hashlib.rst:748
msgid ""
"Wikipedia article with information on which algorithms have known issues and "
"what that means regarding their use."
msgstr ""
"Стаття у Вікіпедії з інформацією про те, які алгоритми мають відомі проблеми "
"та що це означає щодо їх використання."

#: ../../library/hashlib.rst:751
msgid "https://www.ietf.org/rfc/rfc2898.txt"
msgstr ""

#: ../../library/hashlib.rst:752
msgid "PKCS #5: Password-Based Cryptography Specification Version 2.0"
msgstr ""
