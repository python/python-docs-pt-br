# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Victor Matheus Castro <victormatheuscastro@gmail.com>, 2021
# Adorilson Bezerra <adorilson@gmail.com>, 2024
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-18 14:18+0000\n"
"PO-Revision-Date: 2021-06-28 01:06+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/gettext.rst:2
msgid ":mod:`!gettext` --- Multilingual internationalization services"
msgstr ":mod:`!gettext` --- Serviços de internacionalização multilíngues"

#: ../../library/gettext.rst:10
msgid "**Source code:** :source:`Lib/gettext.py`"
msgstr "**Código-fonte:** :source:`Lib/gettext.py`"

#: ../../library/gettext.rst:14
msgid ""
"The :mod:`gettext` module provides internationalization (I18N) and "
"localization (L10N) services for your Python modules and applications. It "
"supports both the GNU :program:`gettext` message catalog API and a higher "
"level, class-based API that may be more appropriate for Python files.  The "
"interface described below allows you to write your module and application "
"messages in one natural language, and provide a catalog of translated "
"messages for running under different natural languages."
msgstr ""
"O módulo :mod:`gettext` fornece serviços de internacionalização (I18N) e "
"localização (L10N) para seus módulos e aplicativos Python. Ele suporta a API "
"do catálogo de mensagens GNU :program:`gettext` e uma API baseada em classes "
"de nível mais alto que podem ser mais apropriadas para arquivos Python. A "
"interface descrita abaixo permite gravar o módulo e as mensagens do "
"aplicativo em um idioma natural e fornecer um catálogo de mensagens "
"traduzidas para execução em diferentes idiomas naturais."

#: ../../library/gettext.rst:22
msgid ""
"Some hints on localizing your Python modules and applications are also given."
msgstr ""
"Algumas dicas sobre localização de seus módulos e aplicativos Python também "
"são fornecidas."

#: ../../library/gettext.rst:26
msgid "GNU :program:`gettext` API"
msgstr "API do GNU :program:`gettext`"

#: ../../library/gettext.rst:28
msgid ""
"The :mod:`gettext` module defines the following API, which is very similar "
"to the GNU :program:`gettext` API.  If you use this API you will affect the "
"translation of your entire application globally.  Often this is what you "
"want if your application is monolingual, with the choice of language "
"dependent on the locale of your user.  If you are localizing a Python "
"module, or if your application needs to switch languages on the fly, you "
"probably want to use the class-based API instead."
msgstr ""
"O módulo :mod:`gettext` define a API a seguir, que é muito semelhante à API "
"do GNU :program:`gettext`. Se você usar esta API, você afetará a tradução de "
"todo o seu aplicativo globalmente. Geralmente, é isso que você deseja se o "
"seu aplicativo for monolíngue, com a escolha do idioma dependente da "
"localidade do seu usuário. Se você estiver localizando um módulo Python, ou "
"se seu aplicativo precisar alternar idiomas rapidamente, provavelmente "
"desejará usar a API baseada em classe."

#: ../../library/gettext.rst:39
msgid ""
"Bind the *domain* to the locale directory *localedir*.  More concretely, :"
"mod:`gettext` will look for binary :file:`.mo` files for the given domain "
"using the path (on Unix): :file:`{localedir}/{language}/LC_MESSAGES/{domain}."
"mo`, where *language* is searched for in the environment variables :envvar:"
"`LANGUAGE`, :envvar:`LC_ALL`, :envvar:`LC_MESSAGES`, and :envvar:`LANG` "
"respectively."
msgstr ""
"Liga o *domain* ao diretório de localidade *localedir*. Mais concretamente, :"
"mod:`gettext` procurará arquivos binários :file:`.mo` para o domínio "
"especificado usando o caminho (no Unix): :file:`{localedir}/{language}/"
"LC_MESSAGES/{domain}.mo`, sendo *language* pesquisado nas variáveis de "
"ambiente :envvar:`LANGUAGE`, :envvar:`LC_ALL`, :envvar:`LC_MESSAGES` e :"
"envvar:`LANG` respectivamente."

#: ../../library/gettext.rst:45
msgid ""
"If *localedir* is omitted or ``None``, then the current binding for *domain* "
"is returned. [#]_"
msgstr ""
"Se *localedir* for omitido ou ``None``, a ligação atual para *domain* será "
"retornada. [#]_"

#: ../../library/gettext.rst:51
msgid ""
"Change or query the current global domain.  If *domain* is ``None``, then "
"the current global domain is returned, otherwise the global domain is set to "
"*domain*, which is returned."
msgstr ""
"Altera ou consulta o domínio global atual. Se *domain* for ``None``, o "
"domínio global atual será retornado; caso contrário, o domínio global será "
"definido como *domain*, o qual será retornado."

#: ../../library/gettext.rst:59
msgid ""
"Return the localized translation of *message*, based on the current global "
"domain, language, and locale directory.  This function is usually aliased "
"as :func:`!_` in the local namespace (see examples below)."
msgstr ""
"Retorna a tradução localizada de *message*, com base no diretório global "
"atual de domínio, idioma e localidade. Essa função geralmente é apelidada "
"como :func:`!_` no espaço de nomes local (veja exemplos abaixo)."

#: ../../library/gettext.rst:66
msgid ""
"Like :func:`.gettext`, but look the message up in the specified *domain*."
msgstr ""
"Semelhante a :func:`.gettext`, mas procura a mensagem no *domain* "
"especificado."

#: ../../library/gettext.rst:71
msgid ""
"Like :func:`.gettext`, but consider plural forms. If a translation is found, "
"apply the plural formula to *n*, and return the resulting message (some "
"languages have more than two plural forms). If no translation is found, "
"return *singular* if *n* is 1; return *plural* otherwise."
msgstr ""
"Semelhante a :func:`.gettext`, mas considera formas plurais. Se uma tradução "
"for encontrada, aplica a fórmula do plural a *n* e retorne a mensagem "
"resultante (alguns idiomas têm mais de duas formas no plural). Se nenhuma "
"tradução for encontrada, retorna *singular* se *n* for 1; retorna *plural* "
"caso contrário."

#: ../../library/gettext.rst:76
msgid ""
"The Plural formula is taken from the catalog header. It is a C or Python "
"expression that has a free variable *n*; the expression evaluates to the "
"index of the plural in the catalog. See `the GNU gettext documentation "
"<https://www.gnu.org/software/gettext/manual/gettext.html>`__ for the "
"precise syntax to be used in :file:`.po` files and the formulas for a "
"variety of languages."
msgstr ""
"A fórmula de Plural é retirada do cabeçalho do catálogo. É uma expressão C "
"ou Python que possui uma variável livre *n*; a expressão é avaliada para o "
"índice do plural no catálogo. Veja `a documentação do gettext GNU <https://"
"www.gnu.org/software/gettext/manual/gettext.html>`__ para obter a sintaxe "
"precisa a ser usada em arquivos :file:`.po` e as fórmulas para um variedade "
"de idiomas."

#: ../../library/gettext.rst:86
msgid ""
"Like :func:`ngettext`, but look the message up in the specified *domain*."
msgstr ""
"Semelhante a :func:`ngettext`, mas procura a mensagem no *domain* "
"especificado."

#: ../../library/gettext.rst:94
msgid ""
"Similar to the corresponding functions without the ``p`` in the prefix (that "
"is, :func:`gettext`, :func:`dgettext`, :func:`ngettext`, :func:`dngettext`), "
"but the translation is restricted to the given message *context*."
msgstr ""
"Semelhante às funções correspondentes sem o ``p`` no prefixo (ou seja, :func:"
"`gettext`, :func:`dgettext`, :func:`ngettext`, :func:`dngettext`), mas a "
"tradução é restrita ao *context* de mensagem fornecido."

#: ../../library/gettext.rst:101
msgid ""
"Note that GNU :program:`gettext` also defines a :func:`!dcgettext` method, "
"but this was deemed not useful and so it is currently unimplemented."
msgstr ""
"Note que GNU :program:`gettext` também define um método :func:`!dcgettext`, "
"mas isso não foi considerado útil e, portanto, atualmente não está "
"implementado."

#: ../../library/gettext.rst:104
msgid "Here's an example of typical usage for this API::"
msgstr "Aqui está um exemplo de uso típico para esta API::"

#: ../../library/gettext.rst:106
msgid ""
"import gettext\n"
"gettext.bindtextdomain('myapplication', '/path/to/my/language/directory')\n"
"gettext.textdomain('myapplication')\n"
"_ = gettext.gettext\n"
"# ...\n"
"print(_('This is a translatable string.'))"
msgstr ""
"import gettext\n"
"gettext.bindtextdomain('minhaaplicacao', '/caminho/para/diretório/do/meu/"
"idioma')\n"
"gettext.textdomain('minhaaplicacao')\n"
"_ = gettext.gettext\n"
"# ...\n"
"print(_('Esta é uma string traduzível.'))"

#: ../../library/gettext.rst:115
msgid "Class-based API"
msgstr "API baseada em classe"

#: ../../library/gettext.rst:117
msgid ""
"The class-based API of the :mod:`gettext` module gives you more flexibility "
"and greater convenience than the GNU :program:`gettext` API.  It is the "
"recommended way of localizing your Python applications and modules.  :mod:`!"
"gettext` defines a :class:`GNUTranslations` class which implements the "
"parsing of GNU :file:`.mo` format files, and has methods for returning "
"strings. Instances of this class can also install themselves in the built-in "
"namespace as the function :func:`!_`."
msgstr ""
"A API baseada em classe do módulo :mod:`gettext` oferece mais flexibilidade "
"e maior conveniência do que a API do GNU :program:`gettext`. É a maneira "
"recomendada de localizar seus aplicativos e módulos Python. :mod:`!gettext` "
"define uma classe :class:`GNUTranslations` que implementa a análise de "
"arquivos no formato GNU :file:`.mo` e possui métodos para retornar strings. "
"Instâncias dessa classe também podem se instalar no espaço de nomes embutido "
"como a função :func:`!_`."

#: ../../library/gettext.rst:127
msgid ""
"This function implements the standard :file:`.mo` file search algorithm.  It "
"takes a *domain*, identical to what :func:`textdomain` takes.  Optional "
"*localedir* is as in :func:`bindtextdomain`. Optional *languages* is a list "
"of strings, where each string is a language code."
msgstr ""
"Esta função implementa o algoritmo de busca de arquivos :file:`.mo` padrão. "
"É necessário um *domain*, idêntico ao que :func:`textdomain` leva. "
"*localedir* opcional é como em :func:`bindtextdomain`. *languages* opcional "
"é uma lista de strings, em que cada string é um código de idioma."

#: ../../library/gettext.rst:132
msgid ""
"If *localedir* is not given, then the default system locale directory is "
"used. [#]_  If *languages* is not given, then the following environment "
"variables are searched: :envvar:`LANGUAGE`, :envvar:`LC_ALL`, :envvar:"
"`LC_MESSAGES`, and :envvar:`LANG`.  The first one returning a non-empty "
"value is used for the *languages* variable. The environment variables should "
"contain a colon separated list of languages, which will be split on the "
"colon to produce the expected list of language code strings."
msgstr ""
"Se *localedir* não for fornecido, o diretório local do sistema padrão será "
"usado. [#]_ Se *languages* não for fornecido, as seguintes variáveis de "
"ambiente serão pesquisadas: :envvar:`LANGUAGE`, :envvar:`LC_ALL`, :envvar:"
"`LC_MESSAGES` e :envvar:`LANG`. O primeiro retornando um valor não vazio é "
"usado para a variável *languages*. As variáveis de ambiente devem conter uma "
"lista de idiomas separada por dois pontos, que será dividida nos dois pontos "
"para produzir a lista esperada de strings de código de idioma."

#: ../../library/gettext.rst:140
msgid ""
":func:`find` then expands and normalizes the languages, and then iterates "
"through them, searching for an existing file built of these components:"
msgstr ""
":func:`find` expande e normaliza os idiomas e itera através deles, "
"procurando por um arquivo existente construído com esses componentes:"

#: ../../library/gettext.rst:143
msgid ":file:`{localedir}/{language}/LC_MESSAGES/{domain}.mo`"
msgstr ":file:`{localedir}/{language}/LC_MESSAGES/{domain}.mo`"

#: ../../library/gettext.rst:145
msgid ""
"The first such file name that exists is returned by :func:`find`. If no such "
"file is found, then ``None`` is returned. If *all* is given, it returns a "
"list of all file names, in the order in which they appear in the languages "
"list or the environment variables."
msgstr ""
"O primeiro nome de arquivo existente é retornado por :func:`find`. Se nenhum "
"desses arquivos for encontrado, será retornado ``None``. Se *all* for "
"fornecido, ele retornará uma lista de todos os nomes de arquivos, na ordem "
"em que aparecem na lista de idiomas ou nas variáveis de ambiente."

#: ../../library/gettext.rst:153
msgid ""
"Return a ``*Translations`` instance based on the *domain*, *localedir*, and "
"*languages*, which are first passed to :func:`find` to get a list of the "
"associated :file:`.mo` file paths.  Instances with identical :file:`.mo` "
"file names are cached.  The actual class instantiated is *class_* if "
"provided, otherwise :class:`GNUTranslations`.  The class's constructor must "
"take a single :term:`file object` argument."
msgstr ""
"Retorna uma instância de ``*Translations`` com base nos *domain*, "
"*localedir* e *languages*, que são passados primeiro para :func:`find` para "
"obter uma lista dos caminhos de arquivos :file:`.mo` associados. Instâncias "
"com nomes de arquivo idênticos :file:`.mo` são armazenados em cache. A "
"classe atual instanciada é *class_* se fornecida, caso contrário :class:"
"`GNUTranslations`. O construtor da classe deve usar um único argumento :term:"
"`objeto arquivo`."

#: ../../library/gettext.rst:160
msgid ""
"If multiple files are found, later files are used as fallbacks for earlier "
"ones. To allow setting the fallback, :func:`copy.copy` is used to clone each "
"translation object from the cache; the actual instance data is still shared "
"with the cache."
msgstr ""
"Se vários arquivos forem encontrados, os arquivos posteriores serão usados "
"como fallbacks para os anteriores. Para permitir a configuração do "
"fallback, :func:`copy.copy` é usado para clonar cada objeto de conversão do "
"cache; os dados reais da instância ainda são compartilhados com o cache."

#: ../../library/gettext.rst:165
msgid ""
"If no :file:`.mo` file is found, this function raises :exc:`OSError` if "
"*fallback* is false (which is the default), and returns a :class:"
"`NullTranslations` instance if *fallback* is true."
msgstr ""
"Se nenhum arquivo :file:`.mo` for encontrado, essa função levanta :exc:"
"`OSError` se *fallback* for falso (que é o padrão) e retorna uma instância :"
"class:`NullTranslations` se *fallback* for verdadeiro."

#: ../../library/gettext.rst:169
msgid ":exc:`IOError` used to be raised, it is now an alias of :exc:`OSError`."
msgstr ""
":exc:`IOError` costumava ser levantada, agora ele é um apelido para :exc:"
"`OSError`."

#: ../../library/gettext.rst:172
msgid "*codeset* parameter is removed."
msgstr "O parâmetro *codeset* foi removido."

#: ../../library/gettext.rst:177
msgid ""
"This installs the function :func:`!_` in Python's builtins namespace, based "
"on *domain* and *localedir* which are passed to the function :func:"
"`translation`."
msgstr ""
"Isso instala a função :func:`!_` no espaço de nomes interno do Python, com "
"base em *domain* e *localedir* que são passados para a função :func:"
"`translation`."

#: ../../library/gettext.rst:180
msgid ""
"For the *names* parameter, please see the description of the translation "
"object's :meth:`~NullTranslations.install` method."
msgstr ""
"Para o parâmetro *names*, por favor, veja a descrição do método :meth:"
"`~NullTranslations.install` do objeto de tradução."

#: ../../library/gettext.rst:183
msgid ""
"As seen below, you usually mark the strings in your application that are "
"candidates for translation, by wrapping them in a call to the :func:`!_` "
"function, like this::"
msgstr ""
"Como visto abaixo, você normalmente marca as strings candidatas à tradução "
"em sua aplicação, envolvendo-as em uma chamada para a função :func:`!_`, "
"assim::"

#: ../../library/gettext.rst:187
msgid "print(_('This string will be translated.'))"
msgstr "print(_('Esta string será traduzida.'))"

#: ../../library/gettext.rst:189
msgid ""
"For convenience, you want the :func:`!_` function to be installed in "
"Python's builtins namespace, so it is easily accessible in all modules of "
"your application."
msgstr ""
"Por conveniência, você deseja que a função :func:`!_` seja instalada no "
"espaço de nomes interno do Python, para que seja facilmente acessível em "
"todos os módulos do sua aplicação."

#: ../../library/gettext.rst:193
msgid "*names* is now a keyword-only parameter."
msgstr "*names* é agora um parâmetro somente-nomeado."

#: ../../library/gettext.rst:197
msgid "The :class:`NullTranslations` class"
msgstr "A classe :class:`NullTranslations`"

#: ../../library/gettext.rst:199
msgid ""
"Translation classes are what actually implement the translation of original "
"source file message strings to translated message strings. The base class "
"used by all translation classes is :class:`NullTranslations`; this provides "
"the basic interface you can use to write your own specialized translation "
"classes.  Here are the methods of :class:`!NullTranslations`:"
msgstr ""
"As classes de tradução são o que realmente implementa a tradução de strings "
"de mensagens do arquivo-fonte original para strings de mensagens traduzidas. "
"A classe base usada por todas as classes de tradução é :class:"
"`NullTranslations`; isso fornece a interface básica que você pode usar para "
"escrever suas próprias classes de tradução especializadas. Aqui estão os "
"métodos de :class:`!NullTranslations`:"

#: ../../library/gettext.rst:208
msgid ""
"Takes an optional :term:`file object` *fp*, which is ignored by the base "
"class. Initializes \"protected\" instance variables *_info* and *_charset* "
"which are set by derived classes, as well as *_fallback*, which is set "
"through :meth:`add_fallback`.  It then calls ``self._parse(fp)`` if *fp* is "
"not ``None``."
msgstr ""
"Recebe um :term:`objeto arquivo <file object>` opcional *fp*, que é ignorado "
"pela classe base. Inicializa as variáveis de instância \"protegidas\" "
"*_info* e *_charset*, que são definidas por classes derivadas, bem como "
"*_fallback*, que é definido através de :meth:`add_fallback`. Ele então chama "
"``self._parse(fp)`` se *fp* não for ``None``."

#: ../../library/gettext.rst:216
msgid ""
"No-op in the base class, this method takes file object *fp*, and reads the "
"data from the file, initializing its message catalog.  If you have an "
"unsupported message catalog file format, you should override this method to "
"parse your format."
msgstr ""
"No-op na classe base, esse método pega o objeto arquivo *fp* e lê os dados "
"do arquivo, inicializando seu catálogo de mensagens. Se você tiver um "
"formato de arquivo de catálogo de mensagens não suportado, substitua esse "
"método para analisar seu formato."

#: ../../library/gettext.rst:224
msgid ""
"Add *fallback* as the fallback object for the current translation object. A "
"translation object should consult the fallback if it cannot provide a "
"translation for a given message."
msgstr ""
"Adiciona *fallback* como o objeto reserva para o objeto de tradução atual. "
"Um objeto de tradução deve consultar o fallback se não puder fornecer uma "
"tradução para uma determinada mensagem."

#: ../../library/gettext.rst:231
msgid ""
"If a fallback has been set, forward :meth:`!gettext` to the fallback. "
"Otherwise, return *message*.  Overridden in derived classes."
msgstr ""
"Se um fallback tiver sido definido, encaminha :meth:`!gettext` para o "
"fallback. Caso contrário, retorna *message*. Substituído em classes "
"derivadas."

#: ../../library/gettext.rst:237
msgid ""
"If a fallback has been set, forward :meth:`!ngettext` to the fallback. "
"Otherwise, return *singular* if *n* is 1; return *plural* otherwise. "
"Overridden in derived classes."
msgstr ""
"Se um fallback tiver sido definido, encaminha :meth:`!ngettext` para o "
"fallback. Caso contrário, retorna *singular* se *n* for 1; do contrário, "
"retorna *plural*. Substituído em classes derivadas."

#: ../../library/gettext.rst:244
msgid ""
"If a fallback has been set, forward :meth:`pgettext` to the fallback. "
"Otherwise, return the translated message.  Overridden in derived classes."
msgstr ""
"Se um fallback tiver sido definido, encaminha :meth:`pgettext` para o "
"fallback. Caso contrário, retorna a mensagem traduzida. Substituído em "
"classes derivadas."

#: ../../library/gettext.rst:252
msgid ""
"If a fallback has been set, forward :meth:`npgettext` to the fallback. "
"Otherwise, return the translated message.  Overridden in derived classes."
msgstr ""
"Se um fallback tiver sido definido, encaminha :meth:`npgettext` para o "
"fallback. Caso contrário, retorna a mensagem traduzida. Substituído em "
"classes derivadas."

#: ../../library/gettext.rst:260
msgid ""
"Return a dictionary containing the metadata found in the message catalog "
"file."
msgstr ""
"Retorna um dicionário que contém os metadados encontrados no arquivo de "
"catálogo de mensagens."

#: ../../library/gettext.rst:266
msgid "Return the encoding of the message catalog file."
msgstr "Retorna a codificação do arquivo de catálogo de mensagens."

#: ../../library/gettext.rst:271
msgid ""
"This method installs :meth:`.gettext` into the built-in namespace, binding "
"it to ``_``."
msgstr ""
"Este método instala :meth:`.gettext` no espaço de nomes embutido, ligando-o "
"a ``_``."

#: ../../library/gettext.rst:274
msgid ""
"If the *names* parameter is given, it must be a sequence containing the "
"names of functions you want to install in the builtins namespace in addition "
"to :func:`!_`.  Supported names are ``'gettext'``, ``'ngettext'``, "
"``'pgettext'``, and ``'npgettext'``."
msgstr ""
"Se o parâmetro *names* for fornecido, deve ser uma sequência contendo os "
"nomes das funções que você deseja instalar no espaço de nomes embutidos, "
"além de :func:`!_`. Há suporte aos nomes ``'gettext'``, ``'ngettext'``, "
"``'pgettext'`` e ``'npgettext'``"

#: ../../library/gettext.rst:279
msgid ""
"Note that this is only one way, albeit the most convenient way, to make the :"
"func:`!_` function available to your application.  Because it affects the "
"entire application globally, and specifically the built-in namespace, "
"localized modules should never install :func:`!_`. Instead, they should use "
"this code to make :func:`!_` available to their module::"
msgstr ""
"Observe que esta é apenas uma maneira, embora a maneira mais conveniente, de "
"disponibilizar a função :func:`!_` para sua aplicação. Como afeta a "
"aplicação inteira globalmente, e especificamente o espaço de nomes embutido, "
"os módulos localizados nunca devem instalar :func:`!_`. Em vez disso, eles "
"devem usar este código para disponibilizar :func:`!_` para seu módulo::"

#: ../../library/gettext.rst:285
msgid ""
"import gettext\n"
"t = gettext.translation('mymodule', ...)\n"
"_ = t.gettext"
msgstr ""
"import gettext\n"
"t = gettext.translation('meumódulo', ...)\n"
"_ = t.gettext"

#: ../../library/gettext.rst:289
msgid ""
"This puts :func:`!_` only in the module's global namespace and so only "
"affects calls within this module."
msgstr ""
"Isso coloca :func:`!_` apenas no espaço de nomes global do módulo e, "
"portanto, afeta apenas as chamadas dentro deste módulo."

#: ../../library/gettext.rst:292
msgid "Added ``'pgettext'`` and ``'npgettext'``."
msgstr "Adicionado ``'pgettext'`` e ``'npgettext'``."

#: ../../library/gettext.rst:297
msgid "The :class:`GNUTranslations` class"
msgstr "A classe :class:`GNUTranslations`"

#: ../../library/gettext.rst:299
msgid ""
"The :mod:`!gettext` module provides one additional class derived from :class:"
"`NullTranslations`: :class:`GNUTranslations`.  This class overrides :meth:`!"
"_parse` to enable reading GNU :program:`gettext` format :file:`.mo` files in "
"both big-endian and little-endian format."
msgstr ""
"O módulo :mod:`!gettext` fornece uma classe adicional derivada de :class:"
"`NullTranslations`: :class:`GNUTranslations`. Esta classe substitui :meth:`!"
"_parse` para permitir a leitura de arquivos :file:`.mo` do formato GNU :"
"program:`gettext` nos formatos big-endian e little-endian."

#: ../../library/gettext.rst:304
msgid ""
":class:`GNUTranslations` parses optional metadata out of the translation "
"catalog. It is convention with GNU :program:`gettext` to include metadata as "
"the translation for the empty string. This metadata is in :rfc:`822`\\ -"
"style ``key: value`` pairs, and should contain the ``Project-Id-Version`` "
"key.  If the key ``Content-Type`` is found, then the ``charset`` property is "
"used to initialize the \"protected\" :attr:`!_charset` instance variable, "
"defaulting to ``None`` if not found.  If the charset encoding is specified, "
"then all message ids and message strings read from the catalog are converted "
"to Unicode using this encoding, else ASCII is assumed."
msgstr ""
":class:`GNUTranslations` analisa metadados opcionais do catálogo de "
"tradução. É uma convenção com o GNU :program:`gettext` incluir metadados "
"como tradução para a string vazia. Esses metadados estão nos pares ``key: "
"value`` no estilo :rfc:`822` e devem conter a chave ``Project-Id-Version``. "
"Se a chave ``Content-Type`` for encontrada, a propriedade ``charset`` será "
"usada para inicializar a variável de instância :attr:`!_charset` "
"\"protegida\", com o padrão ``None`` se não for encontrada. Se a codificação "
"de \"charset\" for especificada, todos os IDs e strings de mensagens lidos "
"no catálogo serão convertidos em Unicode usando essa codificação, caso "
"contrário, o ASCII será presumido."

#: ../../library/gettext.rst:314
msgid ""
"Since message ids are read as Unicode strings too, all ``*gettext()`` "
"methods will assume message ids as Unicode strings, not byte strings."
msgstr ""
"Como os IDs de mensagens também são lidos como strings Unicode, todos os "
"métodos ``*gettext()`` presumem os IDs de mensagens como sendo strings "
"Unicode, não como strings de bytes."

#: ../../library/gettext.rst:317
msgid ""
"The entire set of key/value pairs are placed into a dictionary and set as "
"the \"protected\" :attr:`!_info` instance variable."
msgstr ""
"Todo o conjunto de pares chave/valor é colocado em um dicionário e definido "
"como a variável de instância :attr:`!_info` \"protegida\"."

#: ../../library/gettext.rst:320
msgid ""
"If the :file:`.mo` file's magic number is invalid, the major version number "
"is unexpected, or if other problems occur while reading the file, "
"instantiating a :class:`GNUTranslations` class can raise :exc:`OSError`."
msgstr ""
"Se o número mágico do arquivo :file:`.mo` for inválido, o número principal "
"da versão é inesperado ou se ocorrerem outros problemas durante a leitura do "
"arquivo, instanciando uma classe :class:`GNUTranslations` pode levantar :exc:"
"`OSError`."

#: ../../library/gettext.rst:326
msgid ""
"The following methods are overridden from the base class implementation:"
msgstr ""
"Os seguintes métodos são substituídos a partir da implementação da classe "
"base:"

#: ../../library/gettext.rst:330
msgid ""
"Look up the *message* id in the catalog and return the corresponding message "
"string, as a Unicode string.  If there is no entry in the catalog for the "
"*message* id, and a fallback has been set, the look up is forwarded to the "
"fallback's :meth:`~NullTranslations.gettext` method.  Otherwise, the "
"*message* id is returned."
msgstr ""
"Procura o ID da *message* no catálogo e retorna a string de mensagens "
"correspondente, como uma string Unicode. Se não houver entrada no catálogo "
"para o ID da *message* e um fallback tiver sido definido, a pesquisa será "
"encaminhada para o método :meth:`~NullTranslations.gettext` do fallback. "
"Caso contrário, o ID da *message* é retornado."

#: ../../library/gettext.rst:339
msgid ""
"Do a plural-forms lookup of a message id.  *singular* is used as the message "
"id for purposes of lookup in the catalog, while *n* is used to determine "
"which plural form to use.  The returned message string is a Unicode string."
msgstr ""
"Faz uma pesquisa de plural-forms de um ID de mensagem. *singular* é usado "
"como o ID da mensagem para fins de pesquisa no catálogo, enquanto *n* é "
"usado para determinar qual forma plural usar. A string de mensagens "
"retornada é uma string Unicode."

#: ../../library/gettext.rst:343
msgid ""
"If the message id is not found in the catalog, and a fallback is specified, "
"the request is forwarded to the fallback's :meth:`~NullTranslations."
"ngettext` method.  Otherwise, when *n* is 1 *singular* is returned, and "
"*plural* is returned in all other cases."
msgstr ""
"Se o ID da mensagem não for encontrado no catálogo e um fallback for "
"especificado, a solicitação será encaminhada para o método do fallback :meth:"
"`~NullTranslations.ngettext`. Caso contrário, quando *n* for 1, *singular* "
"será retornado e *plural* será retornado em todos os outros casos."

#: ../../library/gettext.rst:348
msgid "Here is an example::"
msgstr "Aqui está um exemplo::"

#: ../../library/gettext.rst:350
msgid ""
"n = len(os.listdir('.'))\n"
"cat = GNUTranslations(somefile)\n"
"message = cat.ngettext(\n"
"    'There is %(num)d file in this directory',\n"
"    'There are %(num)d files in this directory',\n"
"    n) % {'num': n}"
msgstr ""
"n = len(os.listdir('.'))\n"
"cat = GNUTranslations(somefile)\n"
"message = cat.ngettext(\n"
"    'There is %(num)d file in this directory',\n"
"    'There are %(num)d files in this directory',\n"
"    n) % {'num': n}"

#: ../../library/gettext.rst:360
msgid ""
"Look up the *context* and *message* id in the catalog and return the "
"corresponding message string, as a Unicode string.  If there is no entry in "
"the catalog for the *message* id and *context*, and a fallback has been set, "
"the look up is forwarded to the fallback's :meth:`pgettext` method.  "
"Otherwise, the *message* id is returned."
msgstr ""
"Procura o ID do *context* e da *message* no catálogo e retorna a string de "
"mensagens correspondente, como uma string Unicode. Se não houver entrada no "
"catálogo para o ID do *context* e da *message*, e um fallback tiver sido "
"definido, a pesquisa será encaminhada para o método :meth:`pgettext` do "
"fallback. Caso contrário, o ID da *message* é retornado."

#: ../../library/gettext.rst:371
msgid ""
"Do a plural-forms lookup of a message id.  *singular* is used as the message "
"id for purposes of lookup in the catalog, while *n* is used to determine "
"which plural form to use."
msgstr ""
"Faz uma pesquisa de plural-forms de um ID de mensagem. *singular* é usado "
"como o ID da mensagem para fins de pesquisa no catálogo, enquanto *n* é "
"usado para determinar qual forma plural usar."

#: ../../library/gettext.rst:375
msgid ""
"If the message id for *context* is not found in the catalog, and a fallback "
"is specified, the request is forwarded to the fallback's :meth:`npgettext` "
"method.  Otherwise, when *n* is 1 *singular* is returned, and *plural* is "
"returned in all other cases."
msgstr ""
"Se o ID da mensagem para *context* não for encontrado no catálogo e um "
"fallback for especificado, a solicitação será encaminhada para o método :"
"meth:`npgettext` do fallback. Caso contrário, quando *n* for 1, *singular* "
"será retornado e *plural* será retornado em todos os outros casos."

#: ../../library/gettext.rst:384
msgid "Solaris message catalog support"
msgstr "Suporte a catálogo de mensagens do Solaris"

#: ../../library/gettext.rst:386
msgid ""
"The Solaris operating system defines its own binary :file:`.mo` file format, "
"but since no documentation can be found on this format, it is not supported "
"at this time."
msgstr ""
"O sistema operacional Solaris define seu próprio formato de arquivo binário :"
"file:`.mo`, mas como nenhuma documentação pode ser encontrada nesse formato, "
"ela não é suportada no momento."

#: ../../library/gettext.rst:392
msgid "The Catalog constructor"
msgstr "O construtor Catalog"

#: ../../library/gettext.rst:396
msgid ""
"GNOME uses a version of the :mod:`gettext` module by James Henstridge, but "
"this version has a slightly different API.  Its documented usage was::"
msgstr ""
"O GNOME usa uma versão do módulo :mod:`gettext` de James Henstridge, mas "
"esta versão tem uma API um pouco diferente. Seu uso documentado foi::"

#: ../../library/gettext.rst:399
msgid ""
"import gettext\n"
"cat = gettext.Catalog(domain, localedir)\n"
"_ = cat.gettext\n"
"print(_('hello world'))"
msgstr ""
"import gettext\n"
"cat = gettext.Catalog(domain, localedir)\n"
"_ = cat.gettext\n"
"print(_('hello world'))"

#: ../../library/gettext.rst:404
msgid ""
"For compatibility with this older module, the function :func:`!Catalog` is "
"an alias for the :func:`translation` function described above."
msgstr ""
"Para compatibilidade com este módulo mais antigo, a função :func:`!Catalog` "
"é um apelido para a função :func:`translation` descrita acima."

#: ../../library/gettext.rst:407
msgid ""
"One difference between this module and Henstridge's: his catalog objects "
"supported access through a mapping API, but this appears to be unused and so "
"is not currently supported."
msgstr ""
"Uma diferença entre este módulo e o de Henstridge: seus objetos de catálogo "
"suportavam o acesso por meio de uma API de mapeamento, mas isso parece não "
"ser utilizado e, portanto, não é atualmente suportado."

#: ../../library/gettext.rst:414
msgid "Internationalizing your programs and modules"
msgstr "Internacionalizando seus programas e módulos"

#: ../../library/gettext.rst:416
msgid ""
"Internationalization (I18N) refers to the operation by which a program is "
"made aware of multiple languages.  Localization (L10N) refers to the "
"adaptation of your program, once internationalized, to the local language "
"and cultural habits. In order to provide multilingual messages for your "
"Python programs, you need to take the following steps:"
msgstr ""
"Internationalization (I18N), ou internacionalização (I17O) em português, "
"refere-se à operação pela qual um programa é informado sobre vários idiomas. "
"Localization (L10N), ou localização em português, refere-se à adaptação do "
"seu programa, uma vez internacionalizado, aos hábitos culturais e de idioma "
"local. Para fornecer mensagens multilíngues para seus programas Python, você "
"precisa executar as seguintes etapas:"

#: ../../library/gettext.rst:422
msgid ""
"prepare your program or module by specially marking translatable strings"
msgstr ""
"preparar seu programa ou módulo especialmente marcando strings traduzíveis"

#: ../../library/gettext.rst:424
msgid ""
"run a suite of tools over your marked files to generate raw messages catalogs"
msgstr ""
"executar um conjunto de ferramentas nos arquivos marcados para gerar "
"catálogos de mensagens não tratadas"

#: ../../library/gettext.rst:426
msgid "create language-specific translations of the message catalogs"
msgstr "criar traduções específicas do idioma dos catálogos de mensagens"

#: ../../library/gettext.rst:428
msgid ""
"use the :mod:`gettext` module so that message strings are properly translated"
msgstr ""
"usar o módulo :mod:`gettext` para que as strings das mensagens sejam "
"traduzidas corretamente"

#: ../../library/gettext.rst:430
msgid ""
"In order to prepare your code for I18N, you need to look at all the strings "
"in your files.  Any string that needs to be translated should be marked by "
"wrapping it in ``_('...')`` --- that is, a call to the function :func:`_ "
"<gettext>`.  For example::"
msgstr ""
"Para preparar seu código para I18N, você precisa examinar todas as strings "
"em seus arquivos. Qualquer string que precise ser traduzida deve ser marcada "
"envolvendo-a em ``_('...')`` --- isto é, uma chamada para a função :func:`_ "
"<gettext>`. Por exemplo::"

#: ../../library/gettext.rst:434
msgid ""
"filename = 'mylog.txt'\n"
"message = _('writing a log message')\n"
"with open(filename, 'w') as fp:\n"
"    fp.write(message)"
msgstr ""
"filename = 'meulog.txt'\n"
"message = _('escrevendo uma mensagem de log')\n"
"with open(filename, 'w') as fp:\n"
"    fp.write(message)"

#: ../../library/gettext.rst:439
msgid ""
"In this example, the string ``'writing a log message'`` is marked as a "
"candidate for translation, while the strings ``'mylog.txt'`` and ``'w'`` are "
"not."
msgstr ""
"Neste exemplo, a string ``'escrevendo uma mensagem de log'`` está marcada "
"como um candidato para tradução, enquanto as strings ``'meulog.txt'`` e "
"``'w'`` não estão."

#: ../../library/gettext.rst:442
msgid ""
"There are a few tools to extract the strings meant for translation. The "
"original GNU :program:`gettext` only supported C or C++ source code but its "
"extended version :program:`xgettext` scans code written in a number of "
"languages, including Python, to find strings marked as translatable.  `Babel "
"<https://babel.pocoo.org/>`__ is a Python internationalization library that "
"includes a :file:`pybabel` script to extract and compile message catalogs.  "
"François Pinard's program called :program:`xpot` does a similar job and is "
"available as part of his `po-utils package <https://github.com/pinard/po-"
"utils>`__."
msgstr ""
"Existem algumas ferramentas para extrair as strings destinadas à tradução. O "
"GNU :program:`gettext` original tem suporte apenas ao código-fonte C ou C++, "
"mas sua versão estendida :program:`xgettext` varre o código escrito em "
"várias linguagens, incluindo Python, para encontrar strings marcadas como "
"traduzíveis. `Babel <https://babel.pocoo.org/>`__ é uma biblioteca de "
"internacionalização do Python que inclui um script :file:`pybabel` para "
"extrair e compilar catálogos de mensagens. O programa de François Pinard "
"chamado :program:`xpot` faz um trabalho semelhante e está disponível como "
"parte de seu pacote `po-utils <https://github.com/pinard/po-utils>`__."

#: ../../library/gettext.rst:452
msgid ""
"(Python also includes pure-Python versions of these programs, called :"
"program:`pygettext.py` and :program:`msgfmt.py`; some Python distributions "
"will install them for you.  :program:`pygettext.py` is similar to :program:"
"`xgettext`, but only understands Python source code and cannot handle other "
"programming languages such as C or C++. :program:`pygettext.py` supports a "
"command-line interface similar to :program:`xgettext`; for details on its "
"use, run ``pygettext.py --help``.  :program:`msgfmt.py` is binary compatible "
"with GNU :program:`msgfmt`.  With these two programs, you may not need the "
"GNU :program:`gettext` package to internationalize your Python applications.)"
msgstr ""
"(O Python também inclui versões em Python puro desses programas, chamadas :"
"program:`pygettext.py` e :program:`msgfmt.py`; algumas distribuições do "
"Python as instalam para você. O :program:`pygettext.py` é semelhante ao :"
"program:`xgettext`, mas apenas entende o código-fonte do Python e não "
"consegue lidar com outras linguagens de programação como C ou C++. O :"
"program:`pygettext.py` possui suporte a uma interface de linha de comando "
"semelhante à do :program:`xgettext`; para detalhes sobre seu uso, execute "
"``pygettext.py --help``. O :program:`msgfmt.py` é compatível com binários "
"com GNU :program:`msgfmt`. Com esses dois programas, você pode não precisar "
"do pacote GNU :program:`gettext` para internacionalizar suas aplicações "
"Python.)"

#: ../../library/gettext.rst:464
msgid ""
":program:`xgettext`, :program:`pygettext`, and similar tools generate :file:"
"`.po` files that are message catalogs.  They are structured human-readable "
"files that contain every marked string in the source code, along with a "
"placeholder for the translated versions of these strings."
msgstr ""
":program:`xgettext`, :program:`pygettext` e ferramentas similares geram :"
"file:`.po` que são catálogos de mensagens. Eles são arquivos legíveis por "
"humanos estruturados que contêm todas as strings marcadas no código-fonte, "
"junto com um espaço reservado para as versões traduzidas dessas strings."

#: ../../library/gettext.rst:470
msgid ""
"Copies of these :file:`.po` files are then handed over to the individual "
"human translators who write translations for every supported natural "
"language.  They send back the completed language-specific versions as a :"
"file:`<language-name>.po` file that's compiled into a machine-readable :file:"
"`.mo` binary catalog file using the :program:`msgfmt` program.  The :file:`."
"mo` files are used by the :mod:`gettext` module for the actual translation "
"processing at run-time."
msgstr ""
"Cópias destes arquivos :file:`.po` são entregues aos tradutores humanos "
"individuais que escrevem traduções para todos os idiomas naturais "
"suportados. Eles enviam de volta as versões completas específicas do idioma "
"como um arquivo :file:`<nome-do-idioma>.po` que é compilado em um arquivo de "
"catálogo binário legível por máquina :file:`.mo` usando o programa :program:"
"`msgfmt`. Os arquivos :file:`.mo` são usados pelo módulo :mod:`gettext` para "
"o processamento de tradução real em tempo de execução."

#: ../../library/gettext.rst:479
msgid ""
"How you use the :mod:`gettext` module in your code depends on whether you "
"are internationalizing a single module or your entire application. The next "
"two sections will discuss each case."
msgstr ""
"Como você usa o módulo :mod:`gettext` no seu código depende se você está "
"internacionalizando um único módulo ou sua aplicação inteira. As próximas "
"duas seções discutirão cada caso."

#: ../../library/gettext.rst:485
msgid "Localizing your module"
msgstr "Localizando seu módulo"

#: ../../library/gettext.rst:487
msgid ""
"If you are localizing your module, you must take care not to make global "
"changes, e.g. to the built-in namespace. You should not use the GNU :program:"
"`gettext` API but instead the class-based API."
msgstr ""
"Se você estiver localizando seu módulo, tome cuidado para não fazer "
"alterações globais, por exemplo para o espaço de nomes embutidos. Você não "
"deve usar a API GNU :program:`gettext`, mas a API baseada em classe."

#: ../../library/gettext.rst:491
msgid ""
"Let's say your module is called \"spam\" and the module's various natural "
"language translation :file:`.mo` files reside in :file:`/usr/share/locale` "
"in GNU :program:`gettext` format.  Here's what you would put at the top of "
"your module::"
msgstr ""
"Digamos que seu módulo seja chamado \"spam\" e as várias traduções do idioma "
"natural do arquivo :file:`.mo` residam em :file:`/usr/share/locale` no "
"formato GNU :program:`gettext`. Aqui está o que você colocaria sobre o seu "
"módulo::"

#: ../../library/gettext.rst:496
msgid ""
"import gettext\n"
"t = gettext.translation('spam', '/usr/share/locale')\n"
"_ = t.gettext"
msgstr ""
"import gettext\n"
"t = gettext.translation('spam', '/usr/share/locale')\n"
"_ = t.gettext"

#: ../../library/gettext.rst:502
msgid "Localizing your application"
msgstr "Localizando sua aplicação"

#: ../../library/gettext.rst:504
msgid ""
"If you are localizing your application, you can install the :func:`!_` "
"function globally into the built-in namespace, usually in the main driver "
"file of your application.  This will let all your application-specific files "
"just use ``_('...')`` without having to explicitly install it in each file."
msgstr ""
"Se você estiver localizando sua aplicação, poderá instalar a função :func:`!"
"_` globalmente no espaço de nomes embutidos, geralmente no arquivo principal "
"do driver do sua aplicação. Isso permitirá que todos os arquivos específicos "
"de sua aplicação usem ``_('...')`` sem precisar instalá-la explicitamente em "
"cada arquivo."

#: ../../library/gettext.rst:509
msgid ""
"In the simple case then, you need only add the following bit of code to the "
"main driver file of your application::"
msgstr ""
"No caso simples, você precisa adicionar apenas o seguinte código ao arquivo "
"do driver principal da sua aplicação::"

#: ../../library/gettext.rst:512
msgid ""
"import gettext\n"
"gettext.install('myapplication')"
msgstr ""
"import gettext\n"
"gettext.install('minhaaplicacao')"

#: ../../library/gettext.rst:515
msgid ""
"If you need to set the locale directory, you can pass it into the :func:"
"`install` function::"
msgstr ""
"Se você precisar definir o diretório da localidade, poderá passá-lo para a "
"função :func:`install`::"

#: ../../library/gettext.rst:518
msgid ""
"import gettext\n"
"gettext.install('myapplication', '/usr/share/locale')"
msgstr ""
"import gettext\n"
"gettext.install('minhaaplicacao', '/usr/share/locale')"

#: ../../library/gettext.rst:523
msgid "Changing languages on the fly"
msgstr "Alterando os idiomas durante o uso"

#: ../../library/gettext.rst:525
msgid ""
"If your program needs to support many languages at the same time, you may "
"want to create multiple translation instances and then switch between them "
"explicitly, like so::"
msgstr ""
"Se o seu programa precisar oferecer suporte a vários idiomas ao mesmo tempo, "
"convém criar várias instâncias de tradução e alternar entre elas "
"explicitamente, assim::"

#: ../../library/gettext.rst:529
msgid ""
"import gettext\n"
"\n"
"lang1 = gettext.translation('myapplication', languages=['en'])\n"
"lang2 = gettext.translation('myapplication', languages=['fr'])\n"
"lang3 = gettext.translation('myapplication', languages=['de'])\n"
"\n"
"# start by using language1\n"
"lang1.install()\n"
"\n"
"# ... time goes by, user selects language 2\n"
"lang2.install()\n"
"\n"
"# ... more time goes by, user selects language 3\n"
"lang3.install()"
msgstr ""
"import gettext\n"
"\n"
"lang1 = gettext.translation('minhaaplicacao', languages=['en'])\n"
"lang2 = gettext.translation('minhaaplicacao', languages=['fr'])\n"
"lang3 = gettext.translation('minhaaplicacao', languages=['de'])\n"
"\n"
"# começa usando o idioma 1\n"
"lang1.install()\n"
"\n"
"# ... o tempo passa, o usuário seleciona o idioma 2\n"
"lang2.install()\n"
"\n"
"# ... mais tempo passa, o usuário seleciona o idioma 3\n"
"lang3.install()"

#: ../../library/gettext.rst:546
msgid "Deferred translations"
msgstr "Traduções adiadas"

#: ../../library/gettext.rst:548
msgid ""
"In most coding situations, strings are translated where they are coded. "
"Occasionally however, you need to mark strings for translation, but defer "
"actual translation until later.  A classic example is::"
msgstr ""
"Na maioria das situações de codificação, as strings são traduzidas onde são "
"codificadas. Ocasionalmente, no entanto, é necessário marcar strings para "
"tradução, mas adiar a tradução real até mais tarde. Um exemplo clássico é::"

#: ../../library/gettext.rst:552
msgid ""
"animals = ['mollusk',\n"
"           'albatross',\n"
"           'rat',\n"
"           'penguin',\n"
"           'python', ]\n"
"# ...\n"
"for a in animals:\n"
"    print(a)"
msgstr ""
"animals = ['mollusk',\n"
"           'albatross',\n"
"           'rat',\n"
"           'penguin',\n"
"           'python', ]\n"
"# ...\n"
"for a in animals:\n"
"    print(a)"

#: ../../library/gettext.rst:561
msgid ""
"Here, you want to mark the strings in the ``animals`` list as being "
"translatable, but you don't actually want to translate them until they are "
"printed."
msgstr ""
"Aqui, você deseja marcar as strings na lista ``animals`` como traduzíveis, "
"mas na verdade não deseja traduzi-las até que sejam impressas."

#: ../../library/gettext.rst:565
msgid "Here is one way you can handle this situation::"
msgstr "Aqui está uma maneira de lidar com esta situação::"

#: ../../library/gettext.rst:567
msgid ""
"def _(message): return message\n"
"\n"
"animals = [_('mollusk'),\n"
"           _('albatross'),\n"
"           _('rat'),\n"
"           _('penguin'),\n"
"           _('python'), ]\n"
"\n"
"del _\n"
"\n"
"# ...\n"
"for a in animals:\n"
"    print(_(a))"
msgstr ""
"def _(message): return message\n"
"\n"
"animals = [_('mollusk'),\n"
"           _('albatross'),\n"
"           _('rat'),\n"
"           _('penguin'),\n"
"           _('python'), ]\n"
"\n"
"del _\n"
"\n"
"# ...\n"
"for a in animals:\n"
"    print(_(a))"

#: ../../library/gettext.rst:581
msgid ""
"This works because the dummy definition of :func:`!_` simply returns the "
"string unchanged.  And this dummy definition will temporarily override any "
"definition of :func:`!_` in the built-in namespace (until the :keyword:`del` "
"command). Take care, though if you have a previous definition of :func:`!_` "
"in the local namespace."
msgstr ""
"Isso funciona porque a definição fictícia de :func:`!_` simplesmente retorna "
"a string inalterada. E essa definição fictícia vai substituir "
"temporariamente qualquer definição de :func:`!_` no espaço de nomes embutido "
"(até o comando :keyword:`del`). Tome cuidado, se você tiver uma definição "
"anterior de :func:`!_` no espaço de nomes local."

#: ../../library/gettext.rst:587
msgid ""
"Note that the second use of :func:`!_` will not identify \"a\" as being "
"translatable to the :program:`gettext` program, because the parameter is not "
"a string literal."
msgstr ""
"Observe que o segundo uso de :func:`!_` não identificará \"a\" como "
"traduzível para o programa :program:`gettext`, porque o parâmetro não é uma "
"string literal."

#: ../../library/gettext.rst:591
msgid "Another way to handle this is with the following example::"
msgstr "Outra maneira de lidar com isso é com o seguinte exemplo::"

#: ../../library/gettext.rst:593
msgid ""
"def N_(message): return message\n"
"\n"
"animals = [N_('mollusk'),\n"
"           N_('albatross'),\n"
"           N_('rat'),\n"
"           N_('penguin'),\n"
"           N_('python'), ]\n"
"\n"
"# ...\n"
"for a in animals:\n"
"    print(_(a))"
msgstr ""
"def N_(message): return message\n"
"\n"
"animals = [N_('mollusk'),\n"
"           N_('albatross'),\n"
"           N_('rat'),\n"
"           N_('penguin'),\n"
"           N_('python'), ]\n"
"\n"
"# ...\n"
"for a in animals:\n"
"    print(_(a))"

#: ../../library/gettext.rst:605
msgid ""
"In this case, you are marking translatable strings with the function :func:`!"
"N_`, which won't conflict with any definition of :func:`!_`. However, you "
"will need to teach your message extraction program to look for translatable "
"strings marked with :func:`!N_`. :program:`xgettext`, :program:`pygettext`, "
"``pybabel extract``, and :program:`xpot` all support this through the use of "
"the :option:`!-k` command-line switch. The choice of :func:`!N_` here is "
"totally arbitrary; it could have just as easily been :func:`!"
"MarkThisStringForTranslation`."
msgstr ""
"Nesse caso, você está marcando strings traduzíveis com a função :func:`!N_`, "
"que não entra em conflito com nenhuma definição de :func:`!_`. No entanto, "
"você precisará ensinar seu programa de extração de mensagens a procurar "
"strings traduzíveis marcadas com :func:`!N_`. :program:`xgettext`, :program:"
"`pygettext`, ``pybabel extract`` e :program:`xpot` possuem suporte a isso "
"através do uso da opção de linha de comando :option:`!-k`. A escolha de :"
"func:`!N_` aqui é totalmente arbitrária; poderia facilmente ter sido :func:`!"
"MarkThisStringForTranslation`."

#: ../../library/gettext.rst:616
msgid "Acknowledgements"
msgstr "Reconhecimentos"

#: ../../library/gettext.rst:618
msgid ""
"The following people contributed code, feedback, design suggestions, "
"previous implementations, and valuable experience to the creation of this "
"module:"
msgstr ""
"As seguintes pessoas contribuíram com código, feedback, sugestões de design, "
"implementações anteriores e experiência valiosa para a criação deste módulo:"

#: ../../library/gettext.rst:621
msgid "Peter Funk"
msgstr "Peter Funk"

#: ../../library/gettext.rst:623
msgid "James Henstridge"
msgstr "James Henstridge"

#: ../../library/gettext.rst:625
msgid "Juan David Ibáñez Palomar"
msgstr "Juan David Ibáñez Palomar"

#: ../../library/gettext.rst:627
msgid "Marc-André Lemburg"
msgstr "Marc-André Lemburg"

#: ../../library/gettext.rst:629
msgid "Martin von Löwis"
msgstr "Martin von Löwis"

#: ../../library/gettext.rst:631
msgid "François Pinard"
msgstr "François Pinard"

#: ../../library/gettext.rst:633
msgid "Barry Warsaw"
msgstr "Barry Warsaw"

#: ../../library/gettext.rst:635
msgid "Gustavo Niemeyer"
msgstr "Gustavo Niemeyer"

#: ../../library/gettext.rst:638
msgid "Footnotes"
msgstr "Notas de rodapé"

#: ../../library/gettext.rst:639
msgid ""
"The default locale directory is system dependent; for example, on Red Hat "
"Linux it is :file:`/usr/share/locale`, but on Solaris it is :file:`/usr/lib/"
"locale`. The :mod:`!gettext` module does not try to support these system "
"dependent defaults; instead its default is :file:`{sys.base_prefix}/share/"
"locale` (see :data:`sys.base_prefix`). For this reason, it is always best to "
"call :func:`bindtextdomain` with an explicit absolute path at the start of "
"your application."
msgstr ""
"O diretório de localidade padrão depende do sistema; por exemplo, no Red Hat "
"Linux é :file:`/usr/share/locale`, mas no Solaris é :file:`/usr/lib/locale`. "
"O módulo :mod:`!gettext` não tenta dar suporte a esses padrões dependentes "
"do sistema; em vez disso, seu padrão é :file:`{sys.base_prefix}/share/"
"locale` (consulte :data:`sys.base_prefix`). Por esse motivo, é sempre melhor "
"chamar :func:`bindtextdomain` com um caminho absoluto explícito no início da "
"sua aplicação."

#: ../../library/gettext.rst:647
msgid "See the footnote for :func:`bindtextdomain` above."
msgstr "Consulte a nota de rodapé para a :func:`bindtextdomain` acima."

#: ../../library/gettext.rst:56
msgid "_ (underscore)"
msgstr "_ (sublinhado)"

#: ../../library/gettext.rst:56
msgid "gettext"
msgstr "gettext"

#: ../../library/gettext.rst:394
msgid "GNOME"
msgstr "GNOME"
