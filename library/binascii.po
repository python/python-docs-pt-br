# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Vitor Buxbaum Orlandi, 2024
# i17obot <i17obot@rougeth.com>, 2024
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2024
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-25 14:19+0000\n"
"PO-Revision-Date: 2021-06-28 00:56+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/binascii.rst:2
msgid ":mod:`!binascii` --- Convert between binary and ASCII"
msgstr ":mod:`!binascii` --- Converte entre binário e ASCII"

#: ../../library/binascii.rst:13
msgid ""
"The :mod:`binascii` module contains a number of methods to convert between "
"binary and various ASCII-encoded binary representations. Normally, you will "
"not use these functions directly but use wrapper modules like :mod:`base64` "
"instead. The :mod:`binascii` module contains low-level functions written in "
"C for greater speed that are used by the higher-level modules."
msgstr ""
"O módulo :mod:`binascii` contém vários métodos para converter entre binário "
"e várias representações binárias codificadas em ASCII. Normalmente, você não "
"usará essas funções diretamente, mas usará módulos invólucros como :mod:"
"`base64` em vez disso. O módulo :mod:`binascii` contém funções de baixo "
"nível escritas em C para maior velocidade que são usadas pelos módulos de "
"nível mais alto."

#: ../../library/binascii.rst:22
msgid ""
"``a2b_*`` functions accept Unicode strings containing only ASCII characters. "
"Other functions only accept :term:`bytes-like objects <bytes-like object>` "
"(such as :class:`bytes`, :class:`bytearray` and other objects that support "
"the buffer protocol)."
msgstr ""
"Funções ``a2b_*`` aceitam strings Unicode contendo apenas caracteres ASCII. "
"Outras funções aceitam apenas :term:`objetos bytes ou similar <bytes-like "
"object>` (como :class:`bytes`, :class:`bytearray` e outros objetos que "
"suportam o protocolo buffer)."

#: ../../library/binascii.rst:27
msgid "ASCII-only unicode strings are now accepted by the ``a2b_*`` functions."
msgstr ""
"Strings unicode exclusivamente ASCII agora são aceitas pelas funções "
"``a2b_*``."

#: ../../library/binascii.rst:31
msgid "The :mod:`binascii` module defines the following functions:"
msgstr "O módulo :mod:`binascii` define as seguintes funções:"

#: ../../library/binascii.rst:36
msgid ""
"Convert a single line of uuencoded data back to binary and return the binary "
"data. Lines normally contain 45 (binary) bytes, except for the last line. "
"Line data may be followed by whitespace."
msgstr ""
"Converte uma única linha de dados uuencoded de volta para binário e retorna "
"os dados binários. As linhas normalmente contêm 45 bytes (binários), exceto "
"a última linha. Os dados da linha podem ser seguidos por espaços em branco."

#: ../../library/binascii.rst:43
msgid ""
"Convert binary data to a line of ASCII characters, the return value is the "
"converted line, including a newline char. The length of *data* should be at "
"most 45. If *backtick* is true, zeros are represented by ``'`'`` instead of "
"spaces."
msgstr ""
"Converte dados binários para uma linha de caracteres ASCII, o valor de "
"retorno é a linha convertida, incluindo um caractere de nova linha. O "
"comprimento de *data* deve ser no máximo 45. Se *backtick* for true, zeros "
"são representados por ``'`'`` em vez de espaços."

#: ../../library/binascii.rst:47
msgid "Added the *backtick* parameter."
msgstr "Adicionado o parâmetro *backtick*."

#: ../../library/binascii.rst:53
msgid ""
"Convert a block of base64 data back to binary and return the binary data. "
"More than one line may be passed at a time."
msgstr ""
"Converte um bloco de dados base64 de volta para binário e retorna os dados "
"binários. Mais de uma linha pode ser passada por vez."

#: ../../library/binascii.rst:56
msgid ""
"If *strict_mode* is true, only valid base64 data will be converted. Invalid "
"base64 data will raise :exc:`binascii.Error`."
msgstr ""
"Se *strict_mode* for true, somente dados base64 válidos serão convertidos. "
"Dados base64 inválidos levantarão :exc:`binascii.Error`."

#: ../../library/binascii.rst:59
msgid "Valid base64:"
msgstr "base64 válido:"

#: ../../library/binascii.rst:61
msgid "Conforms to :rfc:`3548`."
msgstr "Em conformidade com :rfc:`3548`."

#: ../../library/binascii.rst:62
msgid "Contains only characters from the base64 alphabet."
msgstr "Contém apenas caracteres do alfabeto base64."

#: ../../library/binascii.rst:63
msgid ""
"Contains no excess data after padding (including excess padding, newlines, "
"etc.)."
msgstr ""
"Não contém dados excedentes após o preenchimento (incluindo excesso de "
"preenchimento, novas linhas, etc.)."

#: ../../library/binascii.rst:64
msgid "Does not start with a padding."
msgstr "Não começa com um preenchimento."

#: ../../library/binascii.rst:66
msgid "Added the *strict_mode* parameter."
msgstr "Adicionado o parâmetro *strict_mode*."

#: ../../library/binascii.rst:72
msgid ""
"Convert binary data to a line of ASCII characters in base64 coding. The "
"return value is the converted line, including a newline char if *newline* is "
"true.  The output of this function conforms to :rfc:`3548`."
msgstr ""
"Converte dados binários para uma linha de caracteres ASCII em codificação "
"base64. O valor de retorno é a linha convertida, incluindo um caractere de "
"nova linha se *newline* for verdadeiro. A saída desta função está em "
"conformidade com :rfc:`3548`."

#: ../../library/binascii.rst:76
msgid "Added the *newline* parameter."
msgstr "Adicionado o parâmetro *newline*."

#: ../../library/binascii.rst:82
msgid ""
"Convert a block of quoted-printable data back to binary and return the "
"binary data. More than one line may be passed at a time. If the optional "
"argument *header* is present and true, underscores will be decoded as spaces."
msgstr ""

#: ../../library/binascii.rst:89
msgid ""
"Convert binary data to a line(s) of ASCII characters in quoted-printable "
"encoding.  The return value is the converted line(s). If the optional "
"argument *quotetabs* is present and true, all tabs and spaces will be "
"encoded.   If the optional argument *istext* is present and true, newlines "
"are not encoded but trailing whitespace will be encoded. If the optional "
"argument *header* is present and true, spaces will be encoded as underscores "
"per :rfc:`1522`. If the optional argument *header* is present and false, "
"newline characters will be encoded as well; otherwise linefeed conversion "
"might corrupt the binary data stream."
msgstr ""

#: ../../library/binascii.rst:102
msgid ""
"Compute a 16-bit CRC value of *data*, starting with *value* as the initial "
"CRC, and return the result.  This uses the CRC-CCITT polynomial *x*:sup:`16` "
"+ *x*:sup:`12` + *x*:sup:`5` + 1, often represented as 0x1021.  This CRC is "
"used in the binhex4 format."
msgstr ""

#: ../../library/binascii.rst:110
msgid ""
"Compute CRC-32, the unsigned 32-bit checksum of *data*, starting with an "
"initial CRC of *value*.  The default initial CRC is zero.  The algorithm is "
"consistent with the ZIP file checksum.  Since the algorithm is designed for "
"use as a checksum algorithm, it is not suitable for use as a general hash "
"algorithm.  Use as follows::"
msgstr ""

#: ../../library/binascii.rst:116
msgid ""
"print(binascii.crc32(b\"hello world\"))\n"
"# Or, in two pieces:\n"
"crc = binascii.crc32(b\"hello\")\n"
"crc = binascii.crc32(b\" world\", crc)\n"
"print('crc32 = {:#010x}'.format(crc))"
msgstr ""

#: ../../library/binascii.rst:122
msgid "The result is always unsigned."
msgstr "O resultado é sempre sem sinal."

#: ../../library/binascii.rst:128
msgid ""
"Return the hexadecimal representation of the binary *data*.  Every byte of "
"*data* is converted into the corresponding 2-digit hex representation.  The "
"returned bytes object is therefore twice as long as the length of *data*."
msgstr ""

#: ../../library/binascii.rst:132
msgid ""
"Similar functionality (but returning a text string) is also conveniently "
"accessible using the :meth:`bytes.hex` method."
msgstr ""

#: ../../library/binascii.rst:135
msgid ""
"If *sep* is specified, it must be a single character str or bytes object. It "
"will be inserted in the output after every *bytes_per_sep* input bytes. "
"Separator placement is counted from the right end of the output by default, "
"if you wish to count from the left, supply a negative *bytes_per_sep* value."
msgstr ""

#: ../../library/binascii.rst:150
msgid "The *sep* and *bytes_per_sep* parameters were added."
msgstr ""

#: ../../library/binascii.rst:156
msgid ""
"Return the binary data represented by the hexadecimal string *hexstr*.  This "
"function is the inverse of :func:`b2a_hex`. *hexstr* must contain an even "
"number of hexadecimal digits (which can be upper or lower case), otherwise "
"an :exc:`Error` exception is raised."
msgstr ""

#: ../../library/binascii.rst:161
msgid ""
"Similar functionality (accepting only text string arguments, but more "
"liberal towards whitespace) is also accessible using the :meth:`bytes."
"fromhex` class method."
msgstr ""

#: ../../library/binascii.rst:167
msgid "Exception raised on errors. These are usually programming errors."
msgstr ""

#: ../../library/binascii.rst:172
msgid ""
"Exception raised on incomplete data. These are usually not programming "
"errors, but may be handled by reading a little more data and trying again."
msgstr ""

#: ../../library/binascii.rst:178
msgid "Module :mod:`base64`"
msgstr "Módulo :mod:`base64`"

#: ../../library/binascii.rst:179
msgid ""
"Support for RFC compliant base64-style encoding in base 16, 32, 64, and 85."
msgstr ""

#: ../../library/binascii.rst:182
msgid "Module :mod:`quopri`"
msgstr "Módulo :mod:`quopri`"

#: ../../library/binascii.rst:183
msgid "Support for quoted-printable encoding used in MIME email messages."
msgstr ""

#: ../../library/binascii.rst:8
msgid "module"
msgstr "módulo"

#: ../../library/binascii.rst:8
msgid "base64"
msgstr "base64"
