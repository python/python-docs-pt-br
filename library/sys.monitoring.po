# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-08 14:49-0300\n"
"PO-Revision-Date: 2025-08-15 19:01+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/sys.monitoring.rst:2
msgid ":mod:`!sys.monitoring` --- Execution event monitoring"
msgstr ":mod:`!sys.monitoring` --- Monitoramento de eventos de execução"

#: ../../library/sys.monitoring.rst:13
msgid ""
":mod:`sys.monitoring` is a namespace within the :mod:`sys` module, not an "
"independent module, so there is no need to ``import sys.monitoring``, simply "
"``import sys`` and then use ``sys.monitoring``."
msgstr ""
":mod:`sys.monitoring` é um espaço de nomes dentro do módulo :mod:`sys`, não "
"um módulo independente, então não há necessidade de importá-lo com ``import "
"sys.monitoring``, bastando usar ``import sys`` e então usar ``sys."
"monitoring``."

#: ../../library/sys.monitoring.rst:19
msgid ""
"This namespace provides access to the functions and constants necessary to "
"activate and control event monitoring."
msgstr ""
"Esse espaço de nomes fornece acesso às funções e constantes necessárias para "
"ativar e controlar o monitoramento de eventos."

#: ../../library/sys.monitoring.rst:22
msgid ""
"As programs execute, events occur that might be of interest to tools that "
"monitor execution. The :mod:`sys.monitoring` namespace provides means to "
"receive callbacks when events of interest occur."
msgstr ""
"À medida que os programas são executados, ocorrem eventos que podem ser de "
"interesse para as ferramentas que monitoram a execução. O espaço de nomes :"
"mod:`sys.monitoring` fornece meios para receber retornos de chamada quando "
"ocorrem eventos de interesse."

#: ../../library/sys.monitoring.rst:26
msgid "The monitoring API consists of three components:"
msgstr "A API de monitoramento consiste em três componentes:"

#: ../../library/sys.monitoring.rst:28
msgid "`Tool identifiers`_"
msgstr "`Identificadores de ferramenta`_"

#: ../../library/sys.monitoring.rst:29
msgid "`Events`_"
msgstr "`Eventos`_"

#: ../../library/sys.monitoring.rst:30
msgid ":ref:`Callbacks <callbacks>`"
msgstr ":ref:`Funções de retorno de chamadas <callbacks>`"

#: ../../library/sys.monitoring.rst:33
msgid "Tool identifiers"
msgstr "Identificadores de ferramenta"

#: ../../library/sys.monitoring.rst:35
msgid ""
"A tool identifier is an integer and the associated name. Tool identifiers "
"are used to discourage tools from interfering with each other and to allow "
"multiple tools to operate at the same time. Currently tools are completely "
"independent and cannot be used to monitor each other. This restriction may "
"be lifted in the future."
msgstr ""
"Um identificador de ferramenta é um número inteiro e o nome associado. Os "
"identificadores de ferramenta são usados para evitar que as ferramentas "
"interfiram umas nas outras e para permitir que várias ferramentas operem ao "
"mesmo tempo. Atualmente, as ferramentas são totalmente independentes e não "
"podem ser usadas para monitorar umas às outras. Essa restrição poderá ser "
"suspensa no futuro."

#: ../../library/sys.monitoring.rst:41
msgid ""
"Before registering or activating events, a tool should choose an identifier. "
"Identifiers are integers in the range 0 to 5 inclusive."
msgstr ""
"Antes de registrar ou ativar eventos, uma ferramenta deve escolher um "
"identificador. Os identificadores são números inteiros no intervalo de 0 a "
"5, inclusive."

#: ../../library/sys.monitoring.rst:45
msgid "Registering and using tools"
msgstr "Registro e uso de ferramentas"

#: ../../library/sys.monitoring.rst:49
msgid ""
"Must be called before *tool_id* can be used. *tool_id* must be in the range "
"0 to 5 inclusive. Raises a :exc:`ValueError` if *tool_id* is in use."
msgstr ""
"Deve ser chamado antes que *tool_id* possa ser usado. *tool_id* deve estar "
"no intervalo de 0 a 5, inclusive. Levanta um :exc:`ValueError` se *tool_id* "
"estiver em uso."

#: ../../library/sys.monitoring.rst:55
msgid "Unregister all events and callback functions associated with *tool_id*."
msgstr ""
"Cancela o registro de todos os eventos e funções de retorno de chamada "
"associados a *tool_id*."

#: ../../library/sys.monitoring.rst:59
msgid ""
"Should be called once a tool no longer requires *tool_id*. Will call :func:"
"`clear_tool_id` before releasing *tool_id*."
msgstr ""
"Deve ser chamado quando uma ferramenta não precisar mais de *tool_id*. "
"Chamará :func:`clear_tool_id` antes de liberar *tool_id*."

#: ../../library/sys.monitoring.rst:64
msgid ""
"Returns the name of the tool if *tool_id* is in use, otherwise it returns "
"``None``. *tool_id* must be in the range 0 to 5 inclusive."
msgstr ""
"Retorna o nome da ferramenta se *tool_id* estiver em uso; caso contrário, "
"retorna ``None``. *tool_id* deve estar no intervalo de 0 a 5, inclusive."

#: ../../library/sys.monitoring.rst:68
msgid ""
"All IDs are treated the same by the VM with regard to events, but the "
"following IDs are pre-defined to make co-operation of tools easier::"
msgstr ""
"Todas as IDs são tratadas da mesma forma pela VM com relação aos eventos, "
"mas as seguintes IDs são predefinidas para facilitar a cooperação entre as "
"ferramentas::"

#: ../../library/sys.monitoring.rst:71
msgid ""
"sys.monitoring.DEBUGGER_ID = 0\n"
"sys.monitoring.COVERAGE_ID = 1\n"
"sys.monitoring.PROFILER_ID = 2\n"
"sys.monitoring.OPTIMIZER_ID = 5"
msgstr ""
"sys.monitoring.DEBUGGER_ID = 0\n"
"sys.monitoring.COVERAGE_ID = 1\n"
"sys.monitoring.PROFILER_ID = 2\n"
"sys.monitoring.OPTIMIZER_ID = 5"

#: ../../library/sys.monitoring.rst:78
msgid "Events"
msgstr "Eventos"

#: ../../library/sys.monitoring.rst:80
msgid "The following events are supported:"
msgstr "Os seguintes eventos são suportados:"

#: ../../library/sys.monitoring.rst:84
msgid "A conditional branch goes left."
msgstr "Uma ramificação condicional vai para a esquerda."

#: ../../library/sys.monitoring.rst:86
msgid ""
"It is up to the tool to determine how to present \"left\" and \"right\" "
"branches. There is no guarantee which branch is \"left\" and which is "
"\"right\", except that it will be consistent for the duration of the program."
msgstr ""
"Cabe à ferramenta determinar como apresentar os ramos \"esquerdo\" e "
"\"direito\". Não há garantia de qual ramo é \"esquerdo\" e qual é "
"\"direito\", exceto que será consistente durante toda a duração do programa."

#: ../../library/sys.monitoring.rst:92
msgid "A conditional branch goes right."
msgstr "Uma ramificação condicional vai para a direita."

#: ../../library/sys.monitoring.rst:96
msgid "A call in Python code (event occurs before the call)."
msgstr "Uma chamada no código Python (o evento ocorre antes da chamada)."

#: ../../library/sys.monitoring.rst:100
msgid ""
"An exception raised from any callable, except for Python functions (event "
"occurs after the exit)."
msgstr ""
"Uma exceção levantada por qualquer chamável, exceto funções Python (o evento "
"ocorre após a saída)."

#: ../../library/sys.monitoring.rst:104
msgid ""
"Return from any callable, except for Python functions (event occurs after "
"the return)."
msgstr ""
"Retorno de qualquer chamável, exceto por funções Python (o evento ocorre "
"após o retorno)."

#: ../../library/sys.monitoring.rst:108
msgid "An exception is handled."
msgstr "Uma exceção é tratada."

#: ../../library/sys.monitoring.rst:112
msgid "A VM instruction is about to be executed."
msgstr "Uma instrução VM está prestes a ser executada."

#: ../../library/sys.monitoring.rst:116
msgid "An unconditional jump in the control flow graph is made."
msgstr "É feito um salto incondicional no gráfico do fluxo de controle."

#: ../../library/sys.monitoring.rst:120
msgid ""
"An instruction is about to be executed that has a different line number from "
"the preceding instruction."
msgstr ""
"Está prestes a ser executada uma instrução que tem um número de linha "
"diferente da instrução anterior."

#: ../../library/sys.monitoring.rst:124
msgid ""
"Resumption of a Python function (for generator and coroutine functions), "
"except for ``throw()`` calls."
msgstr ""
"Retomada de uma função Python (para funções geradoras e de corrotina), "
"exceto para chamadas ``throw()``."

#: ../../library/sys.monitoring.rst:128
msgid ""
"Return from a Python function (occurs immediately before the return, the "
"callee's frame will be on the stack)."
msgstr ""
"Retorno de uma função Python (ocorre imediatamente antes do retorno, o "
"quadro do receptor estará na pilha)."

#: ../../library/sys.monitoring.rst:132
msgid ""
"Start of a Python function (occurs immediately after the call, the callee's "
"frame will be on the stack)"
msgstr ""
"Início de uma função Python (ocorre imediatamente após a chamada, o quadro "
"do receptor da chamada estará na pilha)"

#: ../../library/sys.monitoring.rst:136
msgid "A Python function is resumed by a ``throw()`` call."
msgstr "Uma função Python é retomada por uma chamada ``throw()``."

#: ../../library/sys.monitoring.rst:140
msgid ""
"Exit from a Python function during exception unwinding. This includes "
"exceptions raised directly within the function and that are allowed to "
"continue to propagate."
msgstr ""
"Saída de uma função Python durante o desenrolamento de uma exceção. Isso "
"inclui exceções levantadas diretamente na função e que podem continuar a se "
"propagar."

#: ../../library/sys.monitoring.rst:145
msgid ""
"Yield from a Python function (occurs immediately before the yield, the "
"callee's frame will be on the stack)."
msgstr ""
"Produz de uma função Python (ocorre imediatamente antes do yield, o quadro "
"do receptor estará na pilha)."

#: ../../library/sys.monitoring.rst:149
msgid ""
"An exception is raised, except those that cause a :monitoring-event:"
"`STOP_ITERATION` event."
msgstr ""
"Uma exceção é levantada, exceto aquelas que causam um evento :monitoring-"
"event:`STOP_ITERATION`."

#: ../../library/sys.monitoring.rst:153
msgid ""
"An exception is re-raised, for example at the end of a :keyword:`finally` "
"block."
msgstr ""
"Uma exceção é levantada novamente, por exemplo, no final de um bloco :"
"keyword:`finally`."

#: ../../library/sys.monitoring.rst:157
msgid ""
"An artificial :exc:`StopIteration` is raised; see `the STOP_ITERATION "
"event`_."
msgstr ""
"Uma exceção artificial :exc:`StopIteration` é levantada; consulte `o evento "
"STOP_ITERATION`_."

#: ../../library/sys.monitoring.rst:160
msgid "More events may be added in the future."
msgstr "Mais eventos poderão ser adicionados no futuro."

#: ../../library/sys.monitoring.rst:162
msgid ""
"These events are attributes of the :mod:`!sys.monitoring.events` namespace. "
"Each event is represented as a power-of-2 integer constant. To define a set "
"of events, simply bitwise OR the individual events together. For example, to "
"specify both :monitoring-event:`PY_RETURN` and :monitoring-event:`PY_START` "
"events, use the expression ``PY_RETURN | PY_START``."
msgstr ""
"Esses eventos são atributos do espaço de nomes :mod:`!sys.monitoring."
"events`. Cada evento é representado como uma constante de potência de 2 "
"inteiros. Para definir um conjunto de eventos, basta aplicar OU (OR) bit a "
"bit nos eventos individuais juntos. Por exemplo, para especificar os "
"eventos :monitoring-event:`PY_RETURN` e :monitoring-event:`PY_START`, use a "
"expressão ``PY_RETURN | PY_START``."

#: ../../library/sys.monitoring.rst:170
msgid "An alias for ``0`` so users can do explicit comparisons like::"
msgstr ""
"Um apelido para ``0`` para que os usuários possam fazer comparações "
"explícitas como::"

#: ../../library/sys.monitoring.rst:172
msgid ""
"if get_events(DEBUGGER_ID) == NO_EVENTS:\n"
"    ..."
msgstr ""
"if get_events(DEBUGGER_ID) == NO_EVENTS:\n"
"    ..."

#: ../../library/sys.monitoring.rst:175
msgid "Setting this event deactivates all events."
msgstr "Definir este evento desativa todos os eventos."

#: ../../library/sys.monitoring.rst:180
msgid "Local events"
msgstr "Eventos locais"

#: ../../library/sys.monitoring.rst:182
msgid ""
"Local events are associated with normal execution of the program and happen "
"at clearly defined locations. All local events can be disabled. The local "
"events are:"
msgstr ""
"Os eventos locais estão associados à execução normal do programa e ocorrem "
"em locais claramente definidos. Todos os eventos locais podem ser "
"desativados. Os eventos locais são:"

#: ../../library/sys.monitoring.rst:186
msgid ":monitoring-event:`PY_START`"
msgstr ":monitoring-event:`PY_START`"

#: ../../library/sys.monitoring.rst:187
msgid ":monitoring-event:`PY_RESUME`"
msgstr ":monitoring-event:`PY_RESUME`"

#: ../../library/sys.monitoring.rst:188
msgid ":monitoring-event:`PY_RETURN`"
msgstr ":monitoring-event:`PY_RETURN`"

#: ../../library/sys.monitoring.rst:189
msgid ":monitoring-event:`PY_YIELD`"
msgstr ":monitoring-event:`PY_YIELD`"

#: ../../library/sys.monitoring.rst:190
msgid ":monitoring-event:`CALL`"
msgstr ":monitoring-event:`CALL`"

#: ../../library/sys.monitoring.rst:191
msgid ":monitoring-event:`LINE`"
msgstr ":monitoring-event:`LINE`"

#: ../../library/sys.monitoring.rst:192
msgid ":monitoring-event:`INSTRUCTION`"
msgstr ":monitoring-event:`INSTRUCTION`"

#: ../../library/sys.monitoring.rst:193
msgid ":monitoring-event:`JUMP`"
msgstr ":monitoring-event:`JUMP`"

#: ../../library/sys.monitoring.rst:194
msgid ":monitoring-event:`BRANCH_LEFT`"
msgstr ":monitoring-event:`BRANCH_LEFT`"

#: ../../library/sys.monitoring.rst:195
msgid ":monitoring-event:`BRANCH_RIGHT`"
msgstr ":monitoring-event:`BRANCH_RIGHT`"

#: ../../library/sys.monitoring.rst:196
msgid ":monitoring-event:`STOP_ITERATION`"
msgstr ":monitoring-event:`STOP_ITERATION`"

#: ../../library/sys.monitoring.rst:199
msgid "Deprecated event"
msgstr "Evento descontinuado"

#: ../../library/sys.monitoring.rst:201
msgid "``BRANCH``"
msgstr "``BRANCH``"

#: ../../library/sys.monitoring.rst:203
msgid ""
"The ``BRANCH`` event is deprecated in 3.14. Using :monitoring-event:"
"`BRANCH_LEFT` and :monitoring-event:`BRANCH_RIGHT` events will give much "
"better performance as they can be disabled independently."
msgstr ""
"O evento ``BRANCH`` foi descontinuado na versão 3.14. Usar os eventos :"
"monitoring-event:`BRANCH_LEFT` e :monitoring-event:`BRANCH_RIGHT` "
"proporcionará um desempenho muito melhor, pois podem ser desabilitados "
"independentemente."

#: ../../library/sys.monitoring.rst:209
msgid "Ancillary events"
msgstr "Eventos auxiliares"

#: ../../library/sys.monitoring.rst:211
msgid ""
"Ancillary events can be monitored like other events, but are controlled by "
"another event:"
msgstr ""
"Os eventos auxiliares podem ser monitorados como outros eventos, mas são "
"controlados por outro evento:"

#: ../../library/sys.monitoring.rst:214
msgid ":monitoring-event:`C_RAISE`"
msgstr ":monitoring-event:`C_RAISE`"

#: ../../library/sys.monitoring.rst:215
msgid ":monitoring-event:`C_RETURN`"
msgstr ":monitoring-event:`C_RETURN`"

#: ../../library/sys.monitoring.rst:217
msgid ""
"The :monitoring-event:`C_RETURN` and :monitoring-event:`C_RAISE` events are "
"controlled by the :monitoring-event:`CALL` event. :monitoring-event:"
"`C_RETURN` and :monitoring-event:`C_RAISE` events will only be seen if the "
"corresponding :monitoring-event:`CALL` event is being monitored."
msgstr ""
"Os eventos :monitoring-event:`C_RETURN` e :monitoring-event:`C_RAISE` são "
"controlados pelo evento :monitoring-event:`CALL`. Os eventos :monitoring-"
"event:`C_RETURN` e :monitoring-event:`C_RAISE` só serão vistos se o evento :"
"monitoring-event:`CALL` correspondente estiver sendo monitorado."

#: ../../library/sys.monitoring.rst:223
msgid "Other events"
msgstr "Outros eventos"

#: ../../library/sys.monitoring.rst:225
msgid ""
"Other events are not necessarily tied to a specific location in the program "
"and cannot be individually disabled."
msgstr ""
"Outros eventos não estão necessariamente vinculados a um local específico no "
"programa e não podem ser desativados individualmente."

#: ../../library/sys.monitoring.rst:228
msgid "The other events that can be monitored are:"
msgstr "Os outros eventos que podem ser monitorados são:"

#: ../../library/sys.monitoring.rst:230
msgid ":monitoring-event:`PY_THROW`"
msgstr ":monitoring-event:`PY_THROW`"

#: ../../library/sys.monitoring.rst:231
msgid ":monitoring-event:`PY_UNWIND`"
msgstr ":monitoring-event:`PY_UNWIND`"

#: ../../library/sys.monitoring.rst:232
msgid ":monitoring-event:`RAISE`"
msgstr ":monitoring-event:`RAISE`"

#: ../../library/sys.monitoring.rst:233
msgid ":monitoring-event:`EXCEPTION_HANDLED`"
msgstr ":monitoring-event:`EXCEPTION_HANDLED`"

#: ../../library/sys.monitoring.rst:237
msgid "The STOP_ITERATION event"
msgstr "O evento STOP_ITERATION"

#: ../../library/sys.monitoring.rst:239
msgid ""
":pep:`PEP 380 <380#use-of-stopiteration-to-return-values>` specifies that a :"
"exc:`StopIteration` exception is raised when returning a value from a "
"generator or coroutine. However, this is a very inefficient way to return a "
"value, so some Python implementations, notably CPython 3.12+, do not raise "
"an exception unless it would be visible to other code."
msgstr ""
":pep:`PEP 380 <380#use-of-stopiteration-to-return-values>` especifica que "
"uma exceção :exc:`StopIteration` é levantada ao retornar um valor de um "
"gerador ou corrotina. No entanto, essa é uma maneira muito ineficiente de "
"retornar um valor, portanto, algumas implementações do Python, especialmente "
"o CPython 3.12+, não levantam uma exceção, a menos que ela seja visível para "
"outro código."

#: ../../library/sys.monitoring.rst:245
msgid ""
"To allow tools to monitor for real exceptions without slowing down "
"generators and coroutines, the :monitoring-event:`STOP_ITERATION` event is "
"provided. :monitoring-event:`STOP_ITERATION` can be locally disabled, "
"unlike :monitoring-event:`RAISE`."
msgstr ""
"Para permitir que as ferramentas monitorem exceções reais sem reduzir a "
"velocidade dos geradores e das corrotinas, o evento :monitoring-event:"
"`STOP_ITERATION` é fornecido. O :monitoring-event:`STOP_ITERATION` pode ser "
"desativado localmente, ao contrário do :monitoring-event:`RAISE`."

#: ../../library/sys.monitoring.rst:250
msgid ""
"Note that the :monitoring-event:`STOP_ITERATION` event and the :monitoring-"
"event:`RAISE` event for a :exc:`StopIteration` exception are equivalent, and "
"are treated as interchangeable when generating events. Implementations will "
"favor :monitoring-event:`STOP_ITERATION` for performance reasons, but may "
"generate a :monitoring-event:`RAISE` event with a :exc:`StopIteration`."
msgstr ""
"Observe que o evento :monitoring-event:`STOP_ITERATION` e o evento :"
"monitoring-event:`RAISE` para uma exceção :exc:`StopIteration` são "
"equivalentes e tratados como intercambiáveis ao gerar eventos. As "
"implementações favorecerão :monitoring-event:`STOP_ITERATION` por questões "
"de desempenho, mas podem gerar um evento :monitoring-event:`RAISE` com uma :"
"exc:`StopIteration`."

#: ../../library/sys.monitoring.rst:258
msgid "Turning events on and off"
msgstr "Ativação e desativação de eventos"

#: ../../library/sys.monitoring.rst:260
msgid ""
"In order to monitor an event, it must be turned on and a corresponding "
"callback must be registered. Events can be turned on or off by setting the "
"events either globally and/or for a particular code object. An event will "
"trigger only once, even if it is turned on both globally and locally."
msgstr ""
"Para monitorar um evento, ele deve ser ativado e uma função de retorno "
"correspondente deve ser registrada. Os eventos podem ser ativados ou "
"desativados definindo-os globalmente e/ou para um objeto código específico. "
"Um evento vai acionar apenas uma vez, mesmo se ele for ligado globalmente e "
"localmente."

#: ../../library/sys.monitoring.rst:267
msgid "Setting events globally"
msgstr "Definir eventos globalmente"

#: ../../library/sys.monitoring.rst:269
msgid ""
"Events can be controlled globally by modifying the set of events being "
"monitored."
msgstr ""
"Os eventos podem ser controlados globalmente, modificando o conjunto de "
"eventos que estão sendo monitorados."

#: ../../library/sys.monitoring.rst:273
msgid "Returns the ``int`` representing all the active events."
msgstr "Retorna o endereço ``int`` que representa todos os eventos ativos."

#: ../../library/sys.monitoring.rst:277
msgid ""
"Activates all events which are set in *event_set*. Raises a :exc:"
"`ValueError` if *tool_id* is not in use."
msgstr ""
"Ativa todos os eventos definidos em *event_set*. Levanta um :exc:"
"`ValueError` se *tool_id* não estiver em uso."

#: ../../library/sys.monitoring.rst:280
msgid "No events are active by default."
msgstr "Nenhum evento está ativo por padrão."

#: ../../library/sys.monitoring.rst:283
msgid "Per code object events"
msgstr "Eventos por objeto código"

#: ../../library/sys.monitoring.rst:285
msgid ""
"Events can also be controlled on a per code object basis. The functions "
"defined below which accept a :class:`types.CodeType` should be prepared to "
"accept a look-alike object from functions which are not defined in Python "
"(see :ref:`c-api-monitoring`)."
msgstr ""
"Os eventos também podem ser controlados por objeto código. As funções "
"definidas abaixo que aceitam um :class:`types.CodeType` devem estar "
"preparadas para aceitar um objeto semelhante de funções que não são "
"definidas no Python (veja :ref:`c-api-monitoring`)."

#: ../../library/sys.monitoring.rst:292
msgid "Returns all the local events for *code*"
msgstr "Retorna todos os eventos locais para *code*"

#: ../../library/sys.monitoring.rst:296
msgid ""
"Activates all the local events for *code* which are set in *event_set*. "
"Raises a :exc:`ValueError` if *tool_id* is not in use."
msgstr ""
"Ativa todos os eventos locais para *code* que estão definidos em "
"*event_set*. Levanta a :exc:`ValueError` se *tool_id* não estiver em uso."

#: ../../library/sys.monitoring.rst:301
msgid "Disabling events"
msgstr "Desativação de eventos"

#: ../../library/sys.monitoring.rst:305
msgid ""
"A special value that can be returned from a callback function to disable "
"events for the current code location."
msgstr ""
"Um valor especial que pode ser retornado de um função de retorno função para "
"desativar eventos para o local do código atual."

#: ../../library/sys.monitoring.rst:308
msgid ""
"Local events can be disabled for a specific code location by returning :data:"
"`sys.monitoring.DISABLE` from a callback function. This does not change "
"which events are set, or any other code locations for the same event."
msgstr ""
"Os eventos locais podem ser desativados para um local de código específico, "
"retornando :data:`sys.monitoring.DISABLE` de uma função de retorno de "
"chamada. Isso não altera quais eventos são definidos ou quaisquer outros "
"locais de código para o mesmo evento."

#: ../../library/sys.monitoring.rst:312
msgid ""
"Disabling events for specific locations is very important for high "
"performance monitoring. For example, a program can be run under a debugger "
"with no overhead if the debugger disables all monitoring except for a few "
"breakpoints."
msgstr ""
"A desativação de eventos para locais específicos é muito importante para o "
"monitoramento de alto desempenho. Por exemplo, um programa pode ser "
"executado em um depurador sem sobrecarga se o depurador desativar todo o "
"monitoramento, exceto alguns pontos de interrupção."

#: ../../library/sys.monitoring.rst:319
msgid ""
"Enable all the events that were disabled by :data:`sys.monitoring.DISABLE` "
"for all tools."
msgstr ""
"Habilita todos os eventos que foram desabilitados por :data:`sys.monitoring."
"DISABLE` para todas as ferramentas."

#: ../../library/sys.monitoring.rst:326
msgid "Registering callback functions"
msgstr "Registro de funções de retorno de chamada"

#: ../../library/sys.monitoring.rst:330
msgid "Registers the callable *func* for the *event* with the given *tool_id*"
msgstr "Registra o chamável *func* para o *event* com o *tool_id* fornecido"

#: ../../library/sys.monitoring.rst:332
msgid ""
"If another callback was registered for the given *tool_id* and *event*, it "
"is unregistered and returned. Otherwise :func:`register_callback` returns "
"``None``."
msgstr ""
"Se outra função de retorno tiver sido registrada para o *tool_id* e o "
"*event* fornecidos, ela será cancelada e retornada. Caso contrário, :func:"
"`register_callback` retorna ``None``."

#: ../../library/sys.monitoring.rst:336
msgid ""
"Raises an :ref:`auditing event <auditing>` ``sys.monitoring."
"register_callback`` with argument ``func``."
msgstr ""

#: ../../library/sys.monitoring.rst:338
msgid ""
"Functions can be unregistered by calling ``sys.monitoring."
"register_callback(tool_id, event, None)``."
msgstr ""
"As funções podem ser canceladas chamando ``sys.monitoring."
"register_callback(tool_id, event, None)``."

#: ../../library/sys.monitoring.rst:341
msgid "Callback functions can be registered and unregistered at any time."
msgstr ""
"As funções de retorno de chamada podem ser registradas e canceladas a "
"qualquer momento."

#: ../../library/sys.monitoring.rst:343
msgid ""
"Callbacks are called only once regardless if the event is turned on both "
"globally and locally. As such, if an event could be turned on for both "
"global and local events by your code then the callback needs to be written "
"to handle either trigger."
msgstr ""
"Os retornos de chamada são chamados apenas uma vez, independentemente de o "
"evento estar ativado global e localmente. Portanto, se um evento puder ser "
"ativado tanto para eventos globais quanto locais pelo seu código, o retorno "
"de chamada precisa ser escrito para lidar com qualquer um dos gatilhos."

#: ../../library/sys.monitoring.rst:350
msgid "Callback function arguments"
msgstr "Argumentos da função de retorno de chamada"

#: ../../library/sys.monitoring.rst:354
msgid ""
"A special value that is passed to a callback function to indicate that there "
"are no arguments to the call."
msgstr ""
"Um valor especial que é passado para uma função de retorno para indicar que "
"não há argumento para a chamada."

#: ../../library/sys.monitoring.rst:357
msgid ""
"When an active event occurs, the registered callback function is called. "
"Callback functions returning an object other than :data:`DISABLE` will have "
"no effect. Different events will provide the callback function with "
"different arguments, as follows:"
msgstr ""
"Quando ocorre um evento ativo, a função de retorno de chamada registrada é "
"chamada. Funções de retorno retornando um objeto diferente de :data:"
"`DISABLE` vai ter nenhum efeito. Eventos diferentes fornecerão à função de "
"retorno de chamada argumentos diferentes, como segue:"

#: ../../library/sys.monitoring.rst:361
msgid ":monitoring-event:`PY_START` and :monitoring-event:`PY_RESUME`::"
msgstr ":monitoring-event:`PY_START` e :monitoring-event:`PY_RESUME`::"

#: ../../library/sys.monitoring.rst:363 ../../library/sys.monitoring.rst:400
msgid "func(code: CodeType, instruction_offset: int) -> object"
msgstr "func(code: CodeType, instruction_offset: int) -> object"

#: ../../library/sys.monitoring.rst:365
msgid ":monitoring-event:`PY_RETURN` and :monitoring-event:`PY_YIELD`::"
msgstr ":monitoring-event:`PY_RETURN` e :monitoring-event:`PY_YIELD`::"

#: ../../library/sys.monitoring.rst:367
msgid "func(code: CodeType, instruction_offset: int, retval: object) -> object"
msgstr ""
"func(code: CodeType, instruction_offset: int, retval: object) -> object"

#: ../../library/sys.monitoring.rst:369
msgid ""
":monitoring-event:`CALL`, :monitoring-event:`C_RAISE` and :monitoring-event:"
"`C_RETURN` (*arg0* can be :data:`MISSING` specifically)::"
msgstr ""
":monitoring-event:`CALL`, :monitoring-event:`C_RAISE` e :monitoring-event:"
"`C_RETURN` (*arg0* pode ser :data:`MISSING` especificamente)::"

#: ../../library/sys.monitoring.rst:372
msgid ""
"func(code: CodeType, instruction_offset: int, callable: object, arg0: "
"object) -> object"
msgstr ""
"func(code: CodeType, instruction_offset: int, callable: object, arg0: "
"object) -> object"

#: ../../library/sys.monitoring.rst:374
msgid ""
"*code* represents the code object where the call is being made, while "
"*callable* is the object that is about to be called (and thus triggered the "
"event). If there are no arguments, *arg0* is set to :data:`sys.monitoring."
"MISSING`."
msgstr ""
"*code* representa o objeto de código onde a chamada está sendo feita, "
"enquanto *callable* é o objeto que está prestes a ser chamado (e, portanto, "
"acionou o evento). Se não houver argumentos, *arg0* é definido como :data:"
"`sys.monitoring.MISSING`."

#: ../../library/sys.monitoring.rst:379
msgid ""
"For instance methods, *callable* will be the function object as found on the "
"class with *arg0* set to the instance (i.e. the ``self`` argument to the "
"method)."
msgstr ""
"Para métodos de instância, *callable* será o objeto função encontrado na "
"classe com *arg0* definido para a instância (ou seja, o argumento ``self`` "
"para o método)."

#: ../../library/sys.monitoring.rst:383
msgid ""
":monitoring-event:`RAISE`, :monitoring-event:`RERAISE`, :monitoring-event:"
"`EXCEPTION_HANDLED`, :monitoring-event:`PY_UNWIND`, :monitoring-event:"
"`PY_THROW` and :monitoring-event:`STOP_ITERATION`::"
msgstr ""
":monitoring-event:`RAISE`, :monitoring-event:`RERAISE`, :monitoring-event:"
"`EXCEPTION_HANDLED`, :monitoring-event:`PY_UNWIND`, :monitoring-event:"
"`PY_THROW` e :monitoring-event:`STOP_ITERATION`::"

#: ../../library/sys.monitoring.rst:386
msgid ""
"func(code: CodeType, instruction_offset: int, exception: BaseException) -> "
"object"
msgstr ""
"func(code: CodeType, instruction_offset: int, exception: BaseException) -> "
"object"

#: ../../library/sys.monitoring.rst:388
msgid ":monitoring-event:`LINE`::"
msgstr ":monitoring-event:`LINE`::"

#: ../../library/sys.monitoring.rst:390
msgid "func(code: CodeType, line_number: int) -> object"
msgstr "func(code: CodeType, line_number: int) -> object"

#: ../../library/sys.monitoring.rst:392
msgid ""
":monitoring-event:`BRANCH_LEFT`, :monitoring-event:`BRANCH_RIGHT` and :"
"monitoring-event:`JUMP`::"
msgstr ""
":monitoring-event:`BRANCH_LEFT`, :monitoring-event:`BRANCH_RIGHT` e :"
"monitoring-event:`JUMP`::"

#: ../../library/sys.monitoring.rst:394
msgid ""
"func(code: CodeType, instruction_offset: int, destination_offset: int) -> "
"object"
msgstr ""
"func(code: CodeType, instruction_offset: int, destination_offset: int) -> "
"object"

#: ../../library/sys.monitoring.rst:396
msgid "Note that the *destination_offset* is where the code will next execute."
msgstr ""
"Observe que o *destination_offset* é onde o código será executado em seguida."

#: ../../library/sys.monitoring.rst:398
msgid ":monitoring-event:`INSTRUCTION`::"
msgstr ":monitoring-event:`INSTRUCTION`::"
