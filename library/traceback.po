# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-11 16:41+0000\n"
"PO-Revision-Date: 2023-05-24 02:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/traceback.rst:2
msgid ":mod:`traceback` --- Print or retrieve a stack traceback"
msgstr ""

#: ../../library/traceback.rst:7
msgid "**Source code:** :source:`Lib/traceback.py`"
msgstr "**Código-fonte:** :source:`Lib/traceback.py`"

#: ../../library/traceback.rst:11
msgid ""
"This module provides a standard interface to extract, format and print stack "
"traces of Python programs.  It exactly mimics the behavior of the Python "
"interpreter when it prints a stack trace.  This is useful when you want to "
"print stack traces under program control, such as in a \"wrapper\" around "
"the interpreter."
msgstr ""

#: ../../library/traceback.rst:19
msgid ""
"The module uses :ref:`traceback objects <traceback-objects>` --- these are "
"objects of type :class:`types.TracebackType`, which are assigned to the :"
"attr:`~BaseException.__traceback__` field of :class:`BaseException` "
"instances."
msgstr ""
"Модуль использует :ref:`объекты трассировки <traceback-objects>` --- это "
"объекты типа :class:`types.TracebackType`, которые присваиваются полю :attr:"
"`~BaseException.__traceback__` :class Экземпляры :`BaseException`."

#: ../../library/traceback.rst:27
msgid "Module :mod:`faulthandler`"
msgstr "Módulo :mod:`faulthandler`"

#: ../../library/traceback.rst:27
msgid ""
"Used to dump Python tracebacks explicitly, on a fault, after a timeout, or "
"on a user signal."
msgstr ""
"Usado para despejar tracebacks (situação da pilha de execução) do Python "
"explicitamente, em uma falha, após um tempo limite ou em um sinal do usuário."

#: ../../library/traceback.rst:29
msgid "Module :mod:`pdb`"
msgstr "Модуль :mod:`pdb`"

#: ../../library/traceback.rst:30
msgid "Interactive source code debugger for Python programs."
msgstr "Интерактивный отладчик исходного кода программ Python."

#: ../../library/traceback.rst:32
msgid "The module defines the following functions:"
msgstr "O módulo define as seguintes funções:"

#: ../../library/traceback.rst:36
msgid ""
"Print up to *limit* stack trace entries from :ref:`traceback object "
"<traceback-objects>` *tb* (starting from the caller's frame) if *limit* is "
"positive.  Otherwise, print the last ``abs(limit)`` entries.  If *limit* is "
"omitted or ``None``, all entries are printed.  If *file* is omitted or "
"``None``, the output goes to :data:`sys.stderr`; otherwise it should be an "
"open :term:`file <file object>` or :term:`file-like object` to receive the "
"output."
msgstr ""
"Выведите до *limit* записей трассировки стека из :ref:`traceback object "
"<traceback-objects>` *tb* (начиная с кадра вызывающего объекта), если "
"*limit* положителен. В противном случае выведите последние записи "
"``abs(limit)``. Если *limit* опущен или ``None``, печатаются все записи. "
"Если *file* опущен или ``None``, выходные данные передаются в :data:`sys."
"stderr`; в противном случае это должен быть открытый :term:`file <файловый "
"объект>` или :term:`файлоподобный объект` для получения выходных данных."

#: ../../library/traceback.rst:45 ../../library/traceback.rst:111
msgid "Added negative *limit* support."
msgstr "Додано підтримку негативного *ліміту*."

#: ../../library/traceback.rst:52
msgid ""
"Print exception information and stack trace entries from :ref:`traceback "
"object <traceback-objects>` *tb* to *file*. This differs from :func:"
"`print_tb` in the following ways:"
msgstr ""
"Распечатать информацию об исключениях и сложить записи трассировки из :ref:"
"`traceback object <traceback-objects>` *tb* в *file*. Это отличается от :"
"func:`print_tb` следующим образом:"

#: ../../library/traceback.rst:57
msgid ""
"if *tb* is not ``None``, it prints a header ``Traceback (most recent call "
"last):``"
msgstr ""
"якщо *tb* не є ``None``, він друкує заголовок ``Traceback (останній останній "
"виклик):``"

#: ../../library/traceback.rst:60
msgid "it prints the exception type and *value* after the stack trace"
msgstr "він друкує тип винятку та *значення* після трасування стека"

#: ../../library/traceback.rst:64
msgid ""
"if *type(value)* is :exc:`SyntaxError` and *value* has the appropriate "
"format, it prints the line where the syntax error occurred with a caret "
"indicating the approximate position of the error."
msgstr ""
"якщо *type(value)* дорівнює :exc:`SyntaxError` і *value* має відповідний "
"формат, він друкує рядок, у якому сталася синтаксична помилка, із кареткою, "
"що вказує на приблизну позицію помилки."

#: ../../library/traceback.rst:68
msgid ""
"Since Python 3.10, instead of passing *value* and *tb*, an exception object "
"can be passed as the first argument. If *value* and *tb* are provided, the "
"first argument is ignored in order to provide backwards compatibility."
msgstr ""
"Починаючи з Python 3.10, замість передачі *value* і *tb* об’єкт винятку "
"можна передати як перший аргумент. Якщо надано *value* і *tb*, перший "
"аргумент ігнорується, щоб забезпечити зворотну сумісність."

#: ../../library/traceback.rst:72
msgid ""
"The optional *limit* argument has the same meaning as for :func:`print_tb`. "
"If *chain* is true (the default), then chained exceptions (the :attr:"
"`~BaseException.__cause__` or :attr:`~BaseException.__context__` attributes "
"of the exception) will be printed as well, like the interpreter itself does "
"when printing an unhandled exception."
msgstr ""
"Необязательный аргумент *limit* имеет то же значение, что и :func:"
"`print_tb`. Если *chain* имеет значение true (по умолчанию), то связанные "
"исключения (атрибуты исключения :attr:`~BaseException.__cause__` или :attr:"
"`~BaseException.__context__`) также будут напечатаны, как и сам "
"интерпретатор. делает при печати необработанного исключения."

#: ../../library/traceback.rst:79 ../../library/traceback.rst:177
msgid "The *etype* argument is ignored and inferred from the type of *value*."
msgstr "Аргумент *etype* ігнорується та виводиться з типу *value*."

#: ../../library/traceback.rst:82 ../../library/traceback.rst:160
msgid ""
"The *etype* parameter has been renamed to *exc* and is now positional-only."
msgstr ""
"Параметр *etype* було перейменовано на *exc* і тепер є лише позиційним."

#: ../../library/traceback.rst:89
msgid ""
"This is a shorthand for ``print_exception(sys.exception(), limit, file, "
"chain)``."
msgstr ""

#: ../../library/traceback.rst:95
msgid ""
"This is a shorthand for ``print_exception(sys.last_type, sys.last_value, sys."
"last_traceback, limit, file, chain)``.  In general it will work only after "
"an exception has reached an interactive prompt (see :data:`sys.last_type`)."
msgstr ""

#: ../../library/traceback.rst:103
msgid ""
"Print up to *limit* stack trace entries (starting from the invocation point) "
"if *limit* is positive.  Otherwise, print the last ``abs(limit)`` entries.  "
"If *limit* is omitted or ``None``, all entries are printed. The optional *f* "
"argument can be used to specify an alternate :ref:`stack frame <frame-"
"objects>` to start.  The optional *file* argument has the same meaning as "
"for :func:`print_tb`."
msgstr ""
"Выведите до *limit* записей трассировки стека (начиная с точки вызова), если "
"*limit* положителен. В противном случае выведите последние записи "
"``abs(limit)``. Если *limit* опущен или ``None``, печатаются все записи. "
"Необязательный аргумент *f* можно использовать для указания альтернативного :"
"ref:`фрейма стека <frame-objects>` для запуска. Необязательный аргумент "
"*file* имеет то же значение, что и :func:`print_tb`."

#: ../../library/traceback.rst:117
msgid ""
"Return a :class:`StackSummary` object representing a list of \"pre-"
"processed\" stack trace entries extracted from the :ref:`traceback object "
"<traceback-objects>` *tb*.  It is useful for alternate formatting of stack "
"traces.  The optional *limit* argument has the same meaning as for :func:"
"`print_tb`.  A \"pre-processed\" stack trace entry is a :class:"
"`FrameSummary` object containing attributes :attr:`~FrameSummary.filename`, :"
"attr:`~FrameSummary.lineno`, :attr:`~FrameSummary.name`, and :attr:"
"`~FrameSummary.line` representing the information that is usually printed "
"for a stack trace."
msgstr ""
"Возвращает объект :class:`StackSummary`, представляющий список "
"«предварительно обработанных» записей трассировки стека, извлеченных из :ref:"
"`traceback-объекта <traceback-objects>` *tb*. Это полезно для "
"альтернативного форматирования трассировок стека. Необязательный аргумент "
"*limit* имеет то же значение, что и :func:`print_tb`. «Предварительно "
"обработанная» запись трассировки стека — это объект :class:`FrameSummary`, "
"содержащий атрибуты :attr:`~FrameSummary.filename`, :attr:`~FrameSummary."
"lineno`, :attr:`~FrameSummary.name`, и :attr:`~FrameSummary.line`, "
"представляющий информацию, которая обычно выводится для трассировки стека."

#: ../../library/traceback.rst:130
msgid ""
"Extract the raw traceback from the current :ref:`stack frame <frame-"
"objects>`.  The return value has the same format as for :func:`extract_tb`.  "
"The optional *f* and *limit* arguments have the same meaning as for :func:"
"`print_stack`."
msgstr ""
"Извлеките необработанную обратную трассировку из текущего :ref:`фрейма стека "
"<frame-objects>`. Возвращаемое значение имеет тот же формат, что и для :func:"
"`extract_tb`. Необязательные аргументы *f* и *limit* имеют то же значение, "
"что и :func:`print_stack`."

#: ../../library/traceback.rst:138
msgid ""
"Given a list of tuples or :class:`FrameSummary` objects as returned by :func:"
"`extract_tb` or :func:`extract_stack`, return a list of strings ready for "
"printing.  Each string in the resulting list corresponds to the item with "
"the same index in the argument list.  Each string ends in a newline; the "
"strings may contain internal newlines as well, for those items whose source "
"text line is not ``None``."
msgstr ""
"За наявності списку кортежів або об’єктів :class:`FrameSummary`, які "
"повертає :func:`extract_tb` або :func:`extract_stack`, повертає список "
"рядків, готових до друку. Кожен рядок у результуючому списку відповідає "
"елементу з таким же індексом у списку аргументів. Кожен рядок закінчується "
"символом нового рядка; рядки також можуть містити внутрішні символи нового "
"рядка для тих елементів, вихідний текстовий рядок яких не ``None``."

#: ../../library/traceback.rst:148
msgid ""
"Format the exception part of a traceback using an exception value such as "
"given by :data:`sys.last_value`.  The return value is a list of strings, "
"each ending in a newline.  The list contains the exception's message, which "
"is normally a single string; however, for :exc:`SyntaxError` exceptions, it "
"contains several lines that (when printed) display detailed information "
"about where the syntax error occurred. Following the message, the list "
"contains the exception's :attr:`notes <BaseException.__notes__>`."
msgstr ""
"Отформатируйте часть исключения в обратной трассировке, используя значение "
"исключения, например, заданное :data:`sys.last_value`. Возвращаемое значение "
"представляет собой список строк, каждая из которых заканчивается новой "
"строкой. Список содержит сообщение об исключении, которое обычно "
"представляет собой одну строку; однако, для исключений :exc:`SyntaxError`, "
"он содержит несколько строк, которые (при печати) отображают подробную "
"информацию о том, где произошла синтаксическая ошибка. После сообщения "
"список содержит :attr:`notes <BaseException.__notes__>` исключения."

#: ../../library/traceback.rst:156
msgid ""
"Since Python 3.10, instead of passing *value*, an exception object can be "
"passed as the first argument.  If *value* is provided, the first argument is "
"ignored in order to provide backwards compatibility."
msgstr ""
"Починаючи з Python 3.10, замість передачі *значення* як перший аргумент "
"можна передати об’єкт винятку. Якщо вказано *значення*, перший аргумент "
"ігнорується, щоб забезпечити зворотну сумісність."

#: ../../library/traceback.rst:164
msgid ""
"The returned list now includes any :attr:`notes <BaseException.__notes__>` "
"attached to the exception."
msgstr ""
"Возвращаемый список теперь включает все :attr:`notes <BaseException."
"__notes__>`, прикрепленные к исключению."

#: ../../library/traceback.rst:171
msgid ""
"Format a stack trace and the exception information.  The arguments  have the "
"same meaning as the corresponding arguments to :func:`print_exception`.  The "
"return value is a list of strings, each ending in a newline and some "
"containing internal newlines.  When these lines are concatenated and "
"printed, exactly the same text is printed as does :func:`print_exception`."
msgstr ""
"Відформатуйте трасування стека та інформацію про винятки. Аргументи мають те "
"саме значення, що й відповідні аргументи :func:`print_exception`. Повернене "
"значення — це список рядків, кожен із яких закінчується знаком нового рядка, "
"а деякі містять внутрішні нові рядки. Коли ці рядки об’єднуються та "
"друкуються, друкується точно такий же текст, як і :func:`print_exception`."

#: ../../library/traceback.rst:180
msgid ""
"This function's behavior and signature were modified to match :func:"
"`print_exception`."
msgstr ""
"Поведінку та підпис цієї функції було змінено відповідно до :func:"
"`print_exception`."

#: ../../library/traceback.rst:187
msgid ""
"This is like ``print_exc(limit)`` but returns a string instead of printing "
"to a file."
msgstr ""
"Це схоже на ``print_exc(limit)``, але повертає рядок замість друку у файл."

#: ../../library/traceback.rst:193
msgid "A shorthand for ``format_list(extract_tb(tb, limit))``."
msgstr "Скорочення для ``format_list(extract_tb(tb, limit))``."

#: ../../library/traceback.rst:198
msgid "A shorthand for ``format_list(extract_stack(f, limit))``."
msgstr "Скорочення для ``format_list(extract_stack(f, limit))``."

#: ../../library/traceback.rst:202
msgid ""
"Clears the local variables of all the stack frames in a :ref:`traceback "
"<traceback-objects>` *tb* by calling the :meth:`~frame.clear` method of "
"each :ref:`frame object <frame-objects>`."
msgstr ""
"Очищает локальные переменные всех кадров стека в :ref:`traceback <traceback-"
"objects>` *tb* путем вызова метода :meth:`~frame.clear` каждого :ref:`frame "
"объекта <frame-objects >`."

#: ../../library/traceback.rst:211
msgid ""
"Walk a stack following :attr:`f.f_back <frame.f_back>` from the given frame, "
"yielding the frame and line number for each frame. If *f* is ``None``, the "
"current stack is used. This helper is used with :meth:`StackSummary.extract`."
msgstr ""
"Пройдите по стеку после :attr:`f.f_back <frame.f_back>` из заданного кадра, "
"получив номер кадра и номер строки для каждого кадра. Если *f* равно "
"``None``, используется текущий стек. Этот помощник используется с :meth:"
"`StackSummary.extract`."

#: ../../library/traceback.rst:220
msgid ""
"Walk a traceback following :attr:`~traceback.tb_next` yielding the frame and "
"line number for each frame. This helper is used with :meth:`StackSummary."
"extract`."
msgstr ""
"Выполните обратную трассировку по :attr:`~traceback.tb_next`, получив номер "
"кадра и строки для каждого кадра. Этот помощник используется с :meth:"
"`StackSummary.extract`."

#: ../../library/traceback.rst:226
msgid "The module also defines the following classes:"
msgstr ""

#: ../../library/traceback.rst:229
msgid ":class:`!TracebackException` Objects"
msgstr ":class:`!TracebackException` Объекты"

#: ../../library/traceback.rst:233
msgid ""
":class:`!TracebackException` objects are created from actual exceptions to "
"capture data for later printing in a lightweight fashion."
msgstr ""

#: ../../library/traceback.rst:238 ../../library/traceback.rst:337
msgid ""
"Capture an exception for later rendering. *limit*, *lookup_lines* and "
"*capture_locals* are as for the :class:`StackSummary` class."
msgstr ""
"Зафіксуйте виняток для подальшого рендерингу. *limit*, *lookup_lines* і "
"*capture_locals* такі ж, як і для класу :class:`StackSummary`."

#: ../../library/traceback.rst:241
msgid ""
"If *compact* is true, only data that is required by :class:`!"
"TracebackException`'s :meth:`format` method is saved in the class "
"attributes. In particular, the :attr:`__context__` field is calculated only "
"if :attr:`__cause__` is ``None`` and :attr:`__suppress_context__` is false."
msgstr ""
"Если *compact* имеет значение true, в атрибутах класса сохраняются только "
"данные, необходимые для метода :meth:`format` :class:`!TracebackException`. "
"В частности, поле :attr:`__context__` вычисляется только в том случае, если :"
"attr:`__cause__` имеет значение ``None`` и :attr:`__suppress_context__` "
"имеет значение false."

#: ../../library/traceback.rst:247 ../../library/traceback.rst:340
msgid ""
"Note that when locals are captured, they are also shown in the traceback."
msgstr ""
"Зауважте, що коли місцеві жителі захоплені, вони також відображаються в "
"трасуванні."

#: ../../library/traceback.rst:249
msgid ""
"*max_group_width* and *max_group_depth* control the formatting of exception "
"groups (see :exc:`BaseExceptionGroup`). The depth refers to the nesting "
"level of the group, and the width refers to the size of a single exception "
"group's exceptions array. The formatted output is truncated when either "
"limit is exceeded."
msgstr ""
"*max_group_width* и *max_group_eep* управляют форматированием групп "
"исключений (см. :exc:`BaseExceptionGroup`). Глубина относится к уровню "
"вложенности группы, а ширина относится к размеру массива исключений "
"отдельной группы исключений. Форматированный вывод обрезается при превышении "
"любого предела."

#: ../../library/traceback.rst:255
msgid "Added the *compact* parameter."
msgstr "Adicionado o parâmetro *compact*."

#: ../../library/traceback.rst:258
msgid "Added the *max_group_width* and *max_group_depth* parameters."
msgstr "Добавлены параметры *max_group_width* и *max_group_length*."

#: ../../library/traceback.rst:263
msgid ""
"A :class:`!TracebackException` of the original :attr:`~BaseException."
"__cause__`."
msgstr ""
":class:`!TracebackException` исходного :attr:`~BaseException.__cause__`."

#: ../../library/traceback.rst:268
msgid ""
"A :class:`!TracebackException` of the original :attr:`~BaseException."
"__context__`."
msgstr ""
":class:`!TracebackException` исходного :attr:`~BaseException.__context__`."

#: ../../library/traceback.rst:273
msgid ""
"If ``self`` represents an :exc:`ExceptionGroup`, this field holds a list of :"
"class:`!TracebackException` instances representing the nested exceptions. "
"Otherwise it is ``None``."
msgstr ""
"Если ``self`` представляет собой :exc:`ExceptionGroup`, это поле содержит "
"список экземпляров :class:`!TracebackException`, представляющих вложенные "
"исключения. В противном случае это ``Нет``."

#: ../../library/traceback.rst:281
msgid ""
"The :attr:`~BaseException.__suppress_context__` value from the original "
"exception."
msgstr ""
"Значение :attr:`~BaseException.__suppress_context__` из исходного исключения."

#: ../../library/traceback.rst:286
msgid ""
"The :attr:`~BaseException.__notes__` value from the original exception, or "
"``None`` if the exception does not have any notes. If it is not ``None`` is "
"it formatted in the traceback after the exception string."
msgstr ""
"Значение :attr:`~BaseException.__notes__` из исходного исключения или "
"``None``, если исключение не имеет примечаний. Если это не ``None``, оно "
"форматируется в обратной трассировке после строки исключения."

#: ../../library/traceback.rst:295
msgid "A :class:`StackSummary` representing the traceback."
msgstr ":class:`StackSummary`, що представляє відстеження."

#: ../../library/traceback.rst:299
msgid "The class of the original traceback."
msgstr "Клас оригінального трасування."

#: ../../library/traceback.rst:303
msgid "For syntax errors - the file name where the error occurred."
msgstr "Для синтаксичних помилок - ім'я файлу, де сталася помилка."

#: ../../library/traceback.rst:307
msgid "For syntax errors - the line number where the error occurred."
msgstr "Для синтаксичних помилок - номер рядка, де сталася помилка."

#: ../../library/traceback.rst:311
msgid ""
"For syntax errors - the end line number where the error occurred. Can be "
"``None`` if not present."
msgstr ""
"Для синтаксических ошибок — номер конечной строки, в которой произошла "
"ошибка. Может быть «Нет», если отсутствует."

#: ../../library/traceback.rst:318
msgid "For syntax errors - the text where the error occurred."
msgstr "Для синтаксичних помилок - текст, де сталася помилка."

#: ../../library/traceback.rst:322
msgid "For syntax errors - the offset into the text where the error occurred."
msgstr "Для синтаксичних помилок - зміщення в тексті, де сталася помилка."

#: ../../library/traceback.rst:326
msgid ""
"For syntax errors - the end offset into the text where the error occurred. "
"Can be ``None`` if not present."
msgstr ""
"Для синтаксических ошибок — конечное смещение в тексте, где произошла "
"ошибка. Может быть «Нет», если отсутствует."

#: ../../library/traceback.rst:333
msgid "For syntax errors - the compiler error message."
msgstr "Для синтаксичних помилок - повідомлення про помилку компілятора."

#: ../../library/traceback.rst:344
msgid ""
"Print to *file* (default ``sys.stderr``) the exception information returned "
"by :meth:`format`."
msgstr ""
"Распечатать в *файл* (по умолчанию ``sys.stderr``) информацию об исключении, "
"возвращаемую :meth:`format`."

#: ../../library/traceback.rst:351
msgid "Format the exception."
msgstr "Відформатувати виняток."

#: ../../library/traceback.rst:353
msgid ""
"If *chain* is not ``True``, :attr:`__cause__` and :attr:`__context__` will "
"not be formatted."
msgstr ""
"Если *chain* не имеет значения True, :attr:`__cause__` и :attr:`__context__` "
"не будут отформатированы."

#: ../../library/traceback.rst:356
msgid ""
"The return value is a generator of strings, each ending in a newline and "
"some containing internal newlines. :func:`~traceback.print_exception` is a "
"wrapper around this method which just prints the lines to a file."
msgstr ""
"Повернене значення є генератором рядків, кожен із яких закінчується символом "
"нового рядка, а деякі містять внутрішні нові рядки. :func:`~traceback."
"print_exception` є обгорткою цього методу, яка просто друкує рядки у файл."

#: ../../library/traceback.rst:362
msgid "Format the exception part of the traceback."
msgstr "Відформатуйте частину винятку зворотного відстеження."

#: ../../library/traceback.rst:364
msgid "The return value is a generator of strings, each ending in a newline."
msgstr ""
"Повернене значення є генератором рядків, кожен із яких закінчується символом "
"нового рядка."

#: ../../library/traceback.rst:366
msgid ""
"The generator emits the exception's message followed by its notes (if it has "
"any). The exception message is normally a single string; however, for :exc:"
"`SyntaxError` exceptions, it consists of several lines that (when printed) "
"display detailed information about where the syntax error occurred."
msgstr ""
"Генератор выдает сообщение об исключении, за которым следуют его примечания "
"(если они есть). Сообщение об исключении обычно представляет собой одну "
"строку; однако, для исключений :exc:`SyntaxError`, он состоит из нескольких "
"строк, которые (при печати) отображают подробную информацию о том, где "
"произошла синтаксическая ошибка."

#: ../../library/traceback.rst:372
msgid ""
"The exception's :attr:`notes <BaseException.__notes__>` are now included in "
"the output."
msgstr ""
":attr:`notes <BaseException.__notes__>` исключения теперь включается в "
"выходные данные."

#: ../../library/traceback.rst:378
msgid ":class:`!StackSummary` Objects"
msgstr ":class:`!StackSummary` Объекты"

#: ../../library/traceback.rst:382
msgid ""
":class:`!StackSummary` objects represent a call stack ready for formatting."
msgstr ""
"Объекты :class:`!StackSummary` представляют собой стек вызовов, готовый к "
"форматированию."

#: ../../library/traceback.rst:388
msgid ""
"Construct a :class:`!StackSummary` object from a frame generator (such as is "
"returned by :func:`~traceback.walk_stack` or :func:`~traceback.walk_tb`)."
msgstr ""
"Создайте объект :class:`!StackSummary` из генератора кадров (например, "
"возвращаемый :func:`~traceback.walk_stack` или :func:`~traceback.walk_tb`)."

#: ../../library/traceback.rst:392
msgid ""
"If *limit* is supplied, only this many frames are taken from *frame_gen*. If "
"*lookup_lines* is ``False``, the returned :class:`FrameSummary` objects will "
"not have read their lines in yet, making the cost of creating the :class:`!"
"StackSummary` cheaper (which may be valuable if it may not actually get "
"formatted). If *capture_locals* is ``True`` the local variables in each :"
"class:`!FrameSummary` are captured as object representations."
msgstr ""
"Если указан *limit*, из *frame_gen* берется только это количество кадров. "
"Если *lookup_lines* имеет значение False, возвращаемые объекты :class:"
"`FrameSummary` еще не прочитают свои строки, что удешевляет стоимость "
"создания :class:`!StackSummary` (что может быть полезно, если на самом деле "
"может не отформатироваться). Если *capture_locals* имеет значение True, "
"локальные переменные в каждом :class:`!FrameSummary` захватываются как "
"представления объектов."

#: ../../library/traceback.rst:402
msgid ""
"Construct a :class:`!StackSummary` object from a supplied list of :class:"
"`FrameSummary` objects or old-style list of tuples.  Each tuple should be a "
"4-tuple with *filename*, *lineno*, *name*, *line* as the elements."
msgstr ""
"Создайте объект :class:`!StackSummary` из предоставленного списка объектов :"
"class:`FrameSummary` или списка кортежей старого стиля. Каждый кортеж должен "
"состоять из четырех кортежей с элементами *filename*, *lineno*, *name*, "
"*line*."

#: ../../library/traceback.rst:409
msgid ""
"Returns a list of strings ready for printing.  Each string in the resulting "
"list corresponds to a single :ref:`frame <frame-objects>` from the stack. "
"Each string ends in a newline; the strings may contain internal newlines as "
"well, for those items with source text lines."
msgstr ""
"Возвращает список строк, готовых к печати. Каждая строка в результирующем "
"списке соответствует одному :ref:`frame <frame-objects>` из стека. Каждая "
"строка заканчивается новой строкой; строки также могут содержать внутренние "
"символы новой строки для элементов со строками исходного текста."

#: ../../library/traceback.rst:415
msgid ""
"For long sequences of the same frame and line, the first few repetitions are "
"shown, followed by a summary line stating the exact number of further "
"repetitions."
msgstr ""
"Для довгих послідовностей того самого кадру та рядка відображаються перші "
"кілька повторів, за якими йде підсумковий рядок із зазначенням точної "
"кількості подальших повторень."

#: ../../library/traceback.rst:419
msgid "Long sequences of repeated frames are now abbreviated."
msgstr "Довгі послідовності повторюваних кадрів тепер скорочуються."

#: ../../library/traceback.rst:424
msgid ""
"Returns a string for printing one of the :ref:`frames <frame-objects>` "
"involved in the stack. This method is called for each :class:`FrameSummary` "
"object to be printed by :meth:`StackSummary.format`. If it returns ``None``, "
"the frame is omitted from the output."
msgstr ""
"Возвращает строку для печати одного из :ref:`frames <frame-objects>`, "
"включенного в стек. Этот метод вызывается для каждого объекта :class:"
"`FrameSummary`, который должен быть напечатан с помощью :meth:`StackSummary."
"format`. Если он возвращает None, кадр исключается из вывода."

#: ../../library/traceback.rst:434
msgid ":class:`!FrameSummary` Objects"
msgstr ":class:`!FrameSummary` Объекты"

#: ../../library/traceback.rst:438
msgid ""
"A :class:`!FrameSummary` object represents a single :ref:`frame <frame-"
"objects>` in a :ref:`traceback <traceback-objects>`."
msgstr ""
"Объект :class:`!FrameSummary` представляет один :ref:`frame <frame-objects>` "
"в :ref:`traceback <traceback-objects>`."

#: ../../library/traceback.rst:443
msgid ""
"Represents a single :ref:`frame <frame-objects>` in the :ref:`traceback "
"<traceback-objects>` or stack that is being formatted or printed. It may "
"optionally have a stringified version of the frame's locals included in it. "
"If *lookup_line* is ``False``, the source code is not looked up until the :"
"class:`!FrameSummary` has the :attr:`~FrameSummary.line` attribute accessed "
"(which also happens when casting it to a :class:`tuple`). :attr:"
"`~FrameSummary.line` may be directly provided, and will prevent line lookups "
"happening at all. *locals* is an optional local variable dictionary, and if "
"supplied the variable representations are stored in the summary for later "
"display."
msgstr ""
"Представляет один :ref:`frame <frame-objects>` в :ref:`traceback <traceback-"
"objects>` или стеке, который форматируется или печатается. При желании в "
"него может быть включена строковая версия локальных переменных фрейма. Если "
"*lookup_line* имеет значение ``False``, исходный код не ищется до тех пор, "
"пока :class:`!FrameSummary` не получит доступ к атрибуту :attr:"
"`~FrameSummary.line` (что также происходит при приведении его к : класс:"
"`кортеж`). :attr:`~FrameSummary.line` может быть предоставлен напрямую и "
"вообще предотвратит поиск строк. *locals* — это необязательный словарь "
"локальных переменных, и если он указан, представления переменных сохраняются "
"в сводке для последующего отображения."

#: ../../library/traceback.rst:454
msgid ":class:`!FrameSummary` instances have the following attributes:"
msgstr "Экземпляры :class:`!FrameSummary` имеют следующие атрибуты:"

#: ../../library/traceback.rst:458
msgid ""
"The filename of the source code for this frame. Equivalent to accessing :"
"attr:`f.f_code.co_filename <codeobject.co_filename>` on a :ref:`frame object "
"<frame-objects>` *f*."
msgstr ""
"Имя файла исходного кода для этого кадра. Эквивалентно доступу к :attr:`f."
"f_code.co_filename <codeobject.co_filename>` в :ref:`frame object <frame-"
"objects>` *f*."

#: ../../library/traceback.rst:464
msgid "The line number of the source code for this frame."
msgstr "Номер строки исходного кода для этого кадра."

#: ../../library/traceback.rst:468
msgid ""
"Equivalent to accessing :attr:`f.f_code.co_name <codeobject.co_name>` on a :"
"ref:`frame object <frame-objects>` *f*."
msgstr ""
"Эквивалентно доступу к :attr:`f.f_code.co_name <codeobject.co_name>` в :ref:"
"`frame-объекте <frame-objects>` *f*."

#: ../../library/traceback.rst:473
msgid ""
"A string representing the source code for this frame, with leading and "
"trailing whitespace stripped. If the source is not available, it is ``None``."
msgstr ""
"Строка, представляющая исходный код для этого кадра, с удаленными начальными "
"и конечными пробелами. Если источник недоступен, это «Нет»."

#: ../../library/traceback.rst:480
msgid "Traceback Examples"
msgstr "Exemplos de Traceback"

#: ../../library/traceback.rst:482
msgid ""
"This simple example implements a basic read-eval-print loop, similar to (but "
"less useful than) the standard Python interactive interpreter loop.  For a "
"more complete implementation of the interpreter loop, refer to the :mod:"
"`code` module. ::"
msgstr ""
"Цей простий приклад реалізує базовий цикл читання-оцінки-друку, подібний "
"(але менш корисний, ніж) стандартний інтерактивний цикл інтерпретатора "
"Python. Для більш повної реалізації циклу інтерпретатора зверніться до "
"модуля :mod:`code`. ::"

#: ../../library/traceback.rst:504
msgid ""
"The following example demonstrates the different ways to print and format "
"the exception and traceback:"
msgstr ""
"У наступному прикладі демонструються різні способи друку та форматування "
"винятку та зворотного відстеження:"

#: ../../library/traceback.rst:539
msgid "The output for the example would look similar to this:"
msgstr "Вихід для прикладу виглядатиме приблизно так:"

#: ../../library/traceback.rst:581
msgid ""
"The following example shows the different ways to print and format the "
"stack::"
msgstr ""
"У наступному прикладі показано різні способи друку та форматування стосу:"

#: ../../library/traceback.rst:607
msgid "This last example demonstrates the final few formatting functions:"
msgstr "Цей останній приклад демонструє кілька останніх функцій форматування:"

#: ../../library/traceback.rst:17
msgid "object"
msgstr "objeto"

#: ../../library/traceback.rst:17
msgid "traceback"
msgstr "traceback"

#: ../../library/traceback.rst:62
msgid "^ (caret)"
msgstr "^ (circunflexo)"

#: ../../library/traceback.rst:62
msgid "marker"
msgstr "маркер"
