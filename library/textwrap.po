# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Adorilson Bezerra <adorilson@gmail.com>, 2024
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2024
# i17obot <i17obot@rougeth.com>, 2024
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-02 14:19+0000\n"
"PO-Revision-Date: 2021-06-28 01:15+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/textwrap.rst:2
msgid ":mod:`!textwrap` --- Text wrapping and filling"
msgstr ":mod:`!textwrap` --- Quebra automática e preenchimento de texto"

#: ../../library/textwrap.rst:10
msgid "**Source code:** :source:`Lib/textwrap.py`"
msgstr "**Código-fonte:** :source:`Lib/textwrap.py`"

#: ../../library/textwrap.rst:14
msgid ""
"The :mod:`textwrap` module provides some convenience functions, as well as :"
"class:`TextWrapper`, the class that does all the work. If you're just "
"wrapping or filling one or two text strings, the convenience functions "
"should be good enough; otherwise, you should use an instance of :class:"
"`TextWrapper` for efficiency."
msgstr ""
"O módulo :mod:`textwrap` fornece algumas funções convenientes, assim como :"
"class:`TextWrapper`, a classe que faz todo o trabalho. Se você estiver "
"apenas preenchendo ou fazendo quebra de linha de uma ou duas strings, as "
"funções de conveniência deverão ser boas o suficiente; caso contrário, você "
"deve usar uma instância de :class:`TextWrapper` para eficiência."

#: ../../library/textwrap.rst:27
msgid ""
"Wraps the single paragraph in *text* (a string) so every line is at most "
"*width* characters long.  Returns a list of output lines, without final "
"newlines."
msgstr ""
"Quebra do parágrafo único em *text* (uma string) para que cada linha tenha "
"no máximo *width* caracteres. Retorna uma lista de linhas de saída, sem "
"novas linhas ao final."

#: ../../library/textwrap.rst:31
msgid ""
"Optional keyword arguments correspond to the instance attributes of :class:"
"`TextWrapper`, documented below."
msgstr ""
"Argumentos nomeados opcionais correspondem aos atributos de instância de :"
"class:`TextWrapper`, documentados abaixo."

#: ../../library/textwrap.rst:34
msgid ""
"See the :meth:`TextWrapper.wrap` method for additional details on how :func:"
"`wrap` behaves."
msgstr ""
"Veja o método :meth:`TextWrapper.wrap` para detalhes adicionais sobre como :"
"func:`wrap` se comporta."

#: ../../library/textwrap.rst:45
msgid ""
"Wraps the single paragraph in *text*, and returns a single string containing "
"the wrapped paragraph.  :func:`fill` is shorthand for  ::"
msgstr ""
"Quebra o parágrafo único em *text* e retorna uma única string contendo o "
"parágrafo quebrado. :func:`fill` é uma abreviação de ::"

#: ../../library/textwrap.rst:48
msgid "\"\\n\".join(wrap(text, ...))"
msgstr "\"\\n\".join(wrap(text, ...))"

#: ../../library/textwrap.rst:50
msgid ""
"In particular, :func:`fill` accepts exactly the same keyword arguments as :"
"func:`wrap`."
msgstr ""
"Em particular, :func:`fill` aceita exatamente os mesmos argumentos nomeados "
"que :func:`wrap`."

#: ../../library/textwrap.rst:58
msgid "Collapse and truncate the given *text* to fit in the given *width*."
msgstr ""
"Recolhe e trunca o texto *text* fornecido para caber na largura *width* "
"fornecida."

#: ../../library/textwrap.rst:60
msgid ""
"First the whitespace in *text* is collapsed (all whitespace is replaced by "
"single spaces).  If the result fits in the *width*, it is returned. "
"Otherwise, enough words are dropped from the end so that the remaining words "
"plus the *placeholder* fit within *width*::"
msgstr ""
"Primeiro, o espaço em branco em *text* é recolhido (todos os espaços em "
"branco são substituídos por espaços simples). Se o resultado couber em "
"*width*, ele será retornado. Caso contrário, palavras suficientes serão "
"eliminadas do final para que as palavras restantes mais o *placeholder* "
"caibam em *largura*::"

#: ../../library/textwrap.rst:65
msgid ""
">>> textwrap.shorten(\"Hello  world!\", width=12)\n"
"'Hello world!'\n"
">>> textwrap.shorten(\"Hello  world!\", width=11)\n"
"'Hello [...]'\n"
">>> textwrap.shorten(\"Hello world\", width=10, placeholder=\"...\")\n"
"'Hello...'"
msgstr ""
">>> textwrap.shorten(\"Olá  mundo!\", width=12)\n"
"'Olá mundo!'\n"
">>> textwrap.shorten(\"Olá  mundo!\", width=11)\n"
"'Olá [...]'\n"
">>> textwrap.shorten(\"Olá mundo\", width=10, placeholder=\"...\")\n"
"'Olá...'"

#: ../../library/textwrap.rst:72
msgid ""
"Optional keyword arguments correspond to the instance attributes of :class:"
"`TextWrapper`, documented below.  Note that the whitespace is collapsed "
"before the text is passed to the :class:`TextWrapper` :meth:`fill` function, "
"so changing the value of :attr:`.tabsize`, :attr:`.expand_tabs`, :attr:`."
"drop_whitespace`, and :attr:`.replace_whitespace` will have no effect."
msgstr ""
"Argumentos nomeados opcionais correspondem aos atributos de instância de :"
"class:`TextWrapper`, documentados abaixo. Observe que o espaço em branco é "
"recolhido antes do texto ser passado para a função :class:`TextWrapper` :"
"meth:`fill`, alterando assim o valor de :attr:`.tabsize`, :attr:`."
"expand_tabs`, :attr:`.drop_whitespace` e :attr:`.replace_whitespace` não "
"terão efeito."

#: ../../library/textwrap.rst:82
msgid "Remove any common leading whitespace from every line in *text*."
msgstr ""
"Remove qualquer espaço em branco inicial em comum de toda linha em *text*."

#: ../../library/textwrap.rst:84
msgid ""
"This can be used to make triple-quoted strings line up with the left edge of "
"the display, while still presenting them in the source code in indented form."
msgstr ""
"Isso pode ser usado para alinhar strings entre aspas triplas com a borda "
"esquerda da tela, enquanto ainda as apresenta no código-fonte em formato com "
"indentação."

#: ../../library/textwrap.rst:87
msgid ""
"Note that tabs and spaces are both treated as whitespace, but they are not "
"equal: the lines ``\"  hello\"`` and ``\"\\thello\"`` are considered to have "
"no common leading whitespace."
msgstr ""
"Observe que tabulações e espaços são tratados como espaços em branco, mas "
"não são iguais: as linhas ``\"  hello\"`` e ``\"\\thello\"`` são "
"consideradas como não tendo espaços em branco iniciais comuns."

#: ../../library/textwrap.rst:91
msgid ""
"Lines containing only whitespace are ignored in the input and normalized to "
"a single newline character in the output."
msgstr ""
"Linhas contendo apenas espaços em branco são ignoradas na entrada e "
"normalizadas para um único caractere de nova linha na saída."

#: ../../library/textwrap.rst:94 ../../library/textwrap.rst:115
msgid "For example::"
msgstr "Por exemplo::"

#: ../../library/textwrap.rst:96
msgid ""
"def test():\n"
"    # end first line with \\ to avoid the empty line!\n"
"    s = '''\\\n"
"    hello\n"
"      world\n"
"    '''\n"
"    print(repr(s))          # prints '    hello\\n      world\\n    '\n"
"    print(repr(dedent(s)))  # prints 'hello\\n  world\\n'"
msgstr ""
"def test():\n"
"    # fim da primeira linha com \\ para evitar uma linha vazia!\n"
"    s = '''\\\n"
"    olá\n"
"      mundo\n"
"    '''\n"
"    print(repr(s))          # exibe '    olá\\n      mundo\\n    '\n"
"    print(repr(dedent(s)))  # exibe 'olá\\n  mundo\\n'"

#: ../../library/textwrap.rst:108
msgid "Add *prefix* to the beginning of selected lines in *text*."
msgstr "Adiciona *prefix* ao início das linhas selecionadas em *text*."

#: ../../library/textwrap.rst:110
msgid "Lines are separated by calling ``text.splitlines(True)``."
msgstr "As linhas são separadas chamando ``text.splitlines(True)``."

#: ../../library/textwrap.rst:112
msgid ""
"By default, *prefix* is added to all lines that do not consist solely of "
"whitespace (including any line endings)."
msgstr ""
"Por padrão, *prefix* é adicionado a todas as linhas que não consistem apenas "
"em espaços em branco (incluindo quaisquer finais de linha)."

#: ../../library/textwrap.rst:117
msgid ""
">>> s = 'hello\\n\\n \\nworld'\n"
">>> indent(s, '  ')\n"
"'  hello\\n\\n \\n  world'"
msgstr ""
">>> s = 'olá\\n\\n \\nmundo'\n"
">>> indent(s, '  ')\n"
"'  olá\\n\\n \\n  mundo'"

#: ../../library/textwrap.rst:121
msgid ""
"The optional *predicate* argument can be used to control which lines are "
"indented. For example, it is easy to add *prefix* to even empty and "
"whitespace-only lines::"
msgstr ""
"O argumento opcional *predicate* pode ser usado para controlar quais linhas "
"têm indentação. Por exemplo, é fácil adicionar *prefix* até mesmo em linhas "
"vazias e apenas com espaços em branco::"

#: ../../library/textwrap.rst:125
msgid ""
">>> print(indent(s, '+ ', lambda line: True))\n"
"+ hello\n"
"+\n"
"+\n"
"+ world"
msgstr ""
">>> print(indent(s, '+ ', lambda line: True))\n"
"+ olá\n"
"+\n"
"+\n"
"+ mundo"

#: ../../library/textwrap.rst:134
msgid ""
":func:`wrap`, :func:`fill` and :func:`shorten` work by creating a :class:"
"`TextWrapper` instance and calling a single method on it.  That instance is "
"not reused, so for applications that process many text strings using :func:"
"`wrap` and/or :func:`fill`, it may be more efficient to create your own :"
"class:`TextWrapper` object."
msgstr ""
":func:`wrap`, :func:`fill` e :func:`shorten` funcionam criando uma "
"instância :class:`TextWrapper` e chamando um único método nela. Essa "
"instância não é reutilizada, então para aplicações que processam muitas "
"strings de texto usando :func:`wrap` e/ou :func:`fill`, pode ser mais "
"eficiente criar seu próprio objeto :class:`TextWrapper`."

#: ../../library/textwrap.rst:140
msgid ""
"Text is preferably wrapped on whitespaces and right after the hyphens in "
"hyphenated words; only then will long words be broken if necessary, unless :"
"attr:`TextWrapper.break_long_words` is set to false."
msgstr ""
"O texto é preferencialmente colocado em espaços em branco e logo após os "
"hífens nas palavras hifenizadas; somente então palavras longas serão "
"quebradas se necessário, a menos que :attr:`TextWrapper.break_long_words` "
"seja definido como falso."

#: ../../library/textwrap.rst:146
msgid ""
"The :class:`TextWrapper` constructor accepts a number of optional keyword "
"arguments.  Each keyword argument corresponds to an instance attribute, so "
"for example ::"
msgstr ""
"O construtor :class:`TextWrapper` aceita vários argumentos nomeados "
"opcionais. Cada argumento nomeado corresponde a um atributo de instância, "
"por exemplo::"

#: ../../library/textwrap.rst:150
msgid "wrapper = TextWrapper(initial_indent=\"* \")"
msgstr "wrapper = TextWrapper(initial_indent=\"* \")"

#: ../../library/textwrap.rst:152
msgid "is the same as  ::"
msgstr "é o mesmo que ::"

#: ../../library/textwrap.rst:154
msgid ""
"wrapper = TextWrapper()\n"
"wrapper.initial_indent = \"* \""
msgstr ""
"wrapper = TextWrapper()\n"
"wrapper.initial_indent = \"* \""

#: ../../library/textwrap.rst:157
msgid ""
"You can reuse the same :class:`TextWrapper` object many times, and you can "
"change any of its options through direct assignment to instance attributes "
"between uses."
msgstr ""
"Você pode reutilizar o mesmo objeto :class:`TextWrapper` muitas vezes e pode "
"alterar qualquer uma de suas opções através de atribuição direta a atributos "
"de instância entre os usos."

#: ../../library/textwrap.rst:161
msgid ""
"The :class:`TextWrapper` instance attributes (and keyword arguments to the "
"constructor) are as follows:"
msgstr ""
"Os atributos de instância :class:`TextWrapper` (e argumentos nomeados para o "
"construtor) são os seguintes:"

#: ../../library/textwrap.rst:167
msgid ""
"(default: ``70``) The maximum length of wrapped lines.  As long as there are "
"no individual words in the input text longer than :attr:`width`, :class:"
"`TextWrapper` guarantees that no output line will be longer than :attr:"
"`width` characters."
msgstr ""
"(padrão: ``70``) O comprimento máximo das linhas quebradas. Contanto que não "
"existam palavras individuais no texto de entrada maiores que :attr:`width`, :"
"class:`TextWrapper` garante que nenhuma linha de saída será maior que :attr:"
"`width` caracteres."

#: ../../library/textwrap.rst:175
msgid ""
"(default: ``True``) If true, then all tab characters in *text* will be "
"expanded to spaces using the :meth:`~str.expandtabs` method of *text*."
msgstr ""
"(padrão: ``True``) Se verdadeiro, então todos os caracteres de tabulação em "
"*text* serão expandidos para espaços usando o método :meth:`~str.expandtabs` "
"de *text*."

#: ../../library/textwrap.rst:181
msgid ""
"(default: ``8``) If :attr:`expand_tabs` is true, then all tab characters in "
"*text* will be expanded to zero or more spaces, depending on the current "
"column and the given tab size."
msgstr ""
"(padrão: ``8``) Se :attr:`expand_tabs` for verdadeiro, então todos os "
"caracteres de tabulação em *text* serão expandidos para zero ou mais "
"espaços, dependendo da coluna atual e do tamanho da tabulação fornecido."

#: ../../library/textwrap.rst:190
msgid ""
"(default: ``True``) If true, after tab expansion but before wrapping, the :"
"meth:`wrap` method will replace each whitespace character with a single "
"space.  The whitespace characters replaced are as follows: tab, newline, "
"vertical tab, formfeed, and carriage return (``'\\t\\n\\v\\f\\r'``)."
msgstr ""
"(padrão: ``True``) Se verdadeiro, após a expansão da tabulação, mas antes da "
"quebra, o método :meth:`wrap` substituirá cada caractere de espaço em branco "
"por um único espaço. Os caracteres de espaço em branco substituídos são os "
"seguintes: tabulação, nova linha, tabulação vertical, feed de formulário e "
"retorno de carro (``'\\t\\n\\v\\f\\r'``)."

#: ../../library/textwrap.rst:198
msgid ""
"If :attr:`expand_tabs` is false and :attr:`replace_whitespace` is true, each "
"tab character will be replaced by a single space, which is *not* the same as "
"tab expansion."
msgstr ""
"Se :attr:`expand_tabs` for falso e :attr:`replace_whitespace` for "
"verdadeiro, cada caractere de tabulação será substituído por um único "
"espaço, que *não* é o mesmo que expansão de tabulação."

#: ../../library/textwrap.rst:204
msgid ""
"If :attr:`replace_whitespace` is false, newlines may appear in the middle of "
"a line and cause strange output. For this reason, text should be split into "
"paragraphs (using :meth:`str.splitlines` or similar) which are wrapped "
"separately."
msgstr ""
"Se :attr:`replace_whitespace` for falso, novas linhas podem aparecer no meio "
"de uma linha e causar uma saída estranha. Por esta razão, o texto deve ser "
"dividido em parágrafos (usando :meth:`str.splitlines` ou similar) que são "
"agrupados separadamente."

#: ../../library/textwrap.rst:212
msgid ""
"(default: ``True``) If true, whitespace at the beginning and ending of every "
"line (after wrapping but before indenting) is dropped. Whitespace at the "
"beginning of the paragraph, however, is not dropped if non-whitespace "
"follows it.  If whitespace being dropped takes up an entire line, the whole "
"line is dropped."
msgstr ""
"(padrão: ``True``) Se verdadeiro, os espaços em branco no início e no final "
"de cada linha (após quebra automática, mas antes do recuo) são eliminados. O "
"espaço em branco no início do parágrafo, entretanto, não será eliminado se "
"não houver espaço em branco após ele. Se o espaço em branco eliminado ocupar "
"uma linha inteira, a linha inteira será eliminada."

#: ../../library/textwrap.rst:221
msgid ""
"(default: ``''``) String that will be prepended to the first line of wrapped "
"output.  Counts towards the length of the first line.  The empty string is "
"not indented."
msgstr ""
"(padrão: ``''``) String que será anexada à primeira linha da saída com "
"quebra de linha. Conta para o comprimento da primeira linha. A string vazia "
"não recebe indentação."

#: ../../library/textwrap.rst:228
msgid ""
"(default: ``''``) String that will be prepended to all lines of wrapped "
"output except the first.  Counts towards the length of each line except the "
"first."
msgstr ""
"(padrão: ``''``) String que será anexada a todas as linhas da saída com "
"quebra de linha, exceto a primeira. Conta para o comprimento de cada linha, "
"exceto a primeira."

#: ../../library/textwrap.rst:235
msgid ""
"(default: ``False``) If true, :class:`TextWrapper` attempts to detect "
"sentence endings and ensure that sentences are always separated by exactly "
"two spaces.  This is generally desired for text in a monospaced font. "
"However, the sentence detection algorithm is imperfect: it assumes that a "
"sentence ending consists of a lowercase letter followed by one of ``'.'``, "
"``'!'``, or ``'?'``, possibly followed by one of ``'\"'`` or ``\"'\"``, "
"followed by a space.  One problem with this algorithm is that it is unable "
"to detect the difference between \"Dr.\" in ::"
msgstr ""
"(padrão: ``False``) Se verdadeiro, :class:`TextWrapper` tenta detectar "
"finais de sentenças e garantir que as sentenças sejam sempre separadas por "
"exatamente dois espaços. Isso geralmente é desejado para texto em fonte "
"monoespaçada. No entanto, o algoritmo de detecção de frase é imperfeito: ele "
"presume que o final de uma frase consiste em uma letra minúscula seguida por "
"uma de ``'.'``, ``'!'`` ou ``'?'``, possivelmente seguido por um de ``'\"'`` "
"ou ``\"'\"``, seguido por um espaço. Um problema com este algoritmo é que "
"ele é incapaz de detectar a diferença entre \"Dr.\" em ::"

#: ../../library/textwrap.rst:244
msgid "[...] Dr. Frankenstein's monster [...]"
msgstr "[...] Dr. Frankenstein's monster [...]"

#: ../../library/textwrap.rst:246
msgid "and \"Spot.\" in ::"
msgstr "e \"Spot.\" em ::"

#: ../../library/textwrap.rst:248
msgid "[...] See Spot. See Spot run [...]"
msgstr "[...] See Spot. See Spot run [...]"

#: ../../library/textwrap.rst:250
msgid ":attr:`fix_sentence_endings` is false by default."
msgstr ":attr:`fix_sentence_endings` é falso por padrão"

#: ../../library/textwrap.rst:252
msgid ""
"Since the sentence detection algorithm relies on ``string.lowercase`` for "
"the definition of \"lowercase letter\", and a convention of using two spaces "
"after a period to separate sentences on the same line, it is specific to "
"English-language texts."
msgstr ""
"Como o algoritmo de detecção de frase depende de ``string.lowercase`` para a "
"definição de \"letra minúscula\" e de uma convenção de usar dois espaços "
"após um ponto final para separar frases na mesma linha, ele é específico "
"para textos em inglês."

#: ../../library/textwrap.rst:260
msgid ""
"(default: ``True``) If true, then words longer than :attr:`width` will be "
"broken in order to ensure that no lines are longer than :attr:`width`.  If "
"it is false, long words will not be broken, and some lines may be longer "
"than :attr:`width`.  (Long words will be put on a line by themselves, in "
"order to minimize the amount by which :attr:`width` is exceeded.)"
msgstr ""
"(padrão: ``True``) Se verdadeiro, palavras maiores que :attr:`width` serão "
"quebradas para garantir que nenhuma linha seja maior que :attr:`width`. Se "
"for falso, palavras longas não serão quebradas e algumas linhas poderão ser "
"maiores que :attr:`width`. (Palavras longas serão colocadas sozinhas em uma "
"linha, a fim de minimizar o valor pelo qual :attr:`width` é excedido.)"

#: ../../library/textwrap.rst:269
msgid ""
"(default: ``True``) If true, wrapping will occur preferably on whitespaces "
"and right after hyphens in compound words, as it is customary in English. If "
"false, only whitespaces will be considered as potentially good places for "
"line breaks, but you need to set :attr:`break_long_words` to false if you "
"want truly insecable words.  Default behaviour in previous versions was to "
"always allow breaking hyphenated words."
msgstr ""
"(padrão: ``True``) Se verdadeiro, a quebra ocorrerá preferencialmente em "
"espaços em branco e logo após hífens em palavras compostas, como é habitual "
"em inglês. Se for falso, apenas os espaços em branco serão considerados "
"locais potencialmente bons para quebras de linha, mas você precisa definir :"
"attr:`break_long_words` como falso se quiser palavras verdadeiramente "
"inseparáveis. O comportamento padrão nas versões anteriores era sempre "
"permitir a quebra de palavras hifenizadas."

#: ../../library/textwrap.rst:279
msgid ""
"(default: ``None``) If not ``None``, then the output will contain at most "
"*max_lines* lines, with *placeholder* appearing at the end of the output."
msgstr ""
"(padrão: ``None``) Se não for ``None``, então a saída conterá no máximo "
"*max_lines* linhas, com *placeholder* aparecendo no final da saída."

#: ../../library/textwrap.rst:289
msgid ""
"(default: ``' [...]'``) String that will appear at the end of the output "
"text if it has been truncated."
msgstr ""
"(padrão: ``' [...]'``) String que aparecerá no final do texto de saída se "
"ele tiver sido truncado."

#: ../../library/textwrap.rst:295
msgid ""
":class:`TextWrapper` also provides some public methods, analogous to the "
"module-level convenience functions:"
msgstr ""
":class:`TextWrapper` também fornece alguns métodos públicos, análogos às "
"funções de conveniência em nível de módulo:"

#: ../../library/textwrap.rst:300
msgid ""
"Wraps the single paragraph in *text* (a string) so every line is at most :"
"attr:`width` characters long.  All wrapping options are taken from instance "
"attributes of the :class:`TextWrapper` instance.  Returns a list of output "
"lines, without final newlines.  If the wrapped output has no content, the "
"returned list is empty."
msgstr ""
"Quebra o parágrafo único em *text* (uma string) para que cada linha tenha no "
"máximo :attr:`width` caracteres. Todas as opções de quebra de linha são "
"obtidas dos atributos da instância :class:`TextWrapper`. Retorna uma lista "
"de linhas de saída, sem novas linhas finais. Se a saída agrupada não tiver "
"conteúdo, a lista retornada estará vazia."

#: ../../library/textwrap.rst:309
msgid ""
"Wraps the single paragraph in *text*, and returns a single string containing "
"the wrapped paragraph."
msgstr ""
"Quebra o parágrafo único em *text* e retorna uma única string contendo o "
"parágrafo quebrado."

#: ../../library/textwrap.rst:285
msgid "..."
msgstr "..."

#: ../../library/textwrap.rst:285
msgid "placeholder"
msgstr "espaço reservado"
