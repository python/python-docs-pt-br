# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Raphael Mendonça, 2020
# Misael borges <misael@planosassessoria.com.br>, 2020
# Welington Carlos <wcarlos3@gmail.com>, 2020
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2020
# (Douglas da Silva) <dementikovalev@yandex.ru>, 2020
# VERUSKA RODRIGUES DA SILVA <veruskasilva@gmail.com>, 2020
# Katyanna Moura <amelie.kn@gmail.com>, 2020
# Adorilson Bezerra <adorilson@gmail.com>, 2020
# felipe caridade fernandes <caridade500@gmail.com>, 2020
# Vinicius Gubiani Ferreira <vini.g.fer@gmail.com>, 2020
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-06 22:14+0000\n"
"PO-Revision-Date: 2020-05-30 12:02+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/functions.rst:5 ../../library/functions.rst:11
msgid "Built-in Functions"
msgstr "Funções embutidas"

#: ../../library/functions.rst:7
msgid ""
"The Python interpreter has a number of functions and types built into it "
"that are always available.  They are listed here in alphabetical order."
msgstr ""
"O interpretador do Python possui várias funções e tipos embutidos que sempre "
"estão disponíveis. A seguir listamos todas as funções em ordem alfabética."

#: ../../library/functions.rst:13
msgid ":func:`abs`"
msgstr ":func:`abs`"

#: ../../library/functions.rst:13
msgid ":func:`delattr`"
msgstr ":func:`delattr`"

#: ../../library/functions.rst:13
msgid ":func:`hash`"
msgstr ":func:`hash`"

#: ../../library/functions.rst:13
msgid "|func-memoryview|_"
msgstr "|func-memoryview|_"

#: ../../library/functions.rst:13
msgid "|func-set|_"
msgstr "|func-set|_"

#: ../../library/functions.rst:14
msgid ":func:`all`"
msgstr ":func:`all`"

#: ../../library/functions.rst:14
msgid "|func-dict|_"
msgstr "|func-dict|_"

#: ../../library/functions.rst:14
msgid ":func:`help`"
msgstr ":func:`help`"

#: ../../library/functions.rst:14
msgid ":func:`min`"
msgstr ":func:`min`"

#: ../../library/functions.rst:14
msgid ":func:`setattr`"
msgstr ":func:`setattr`"

#: ../../library/functions.rst:15
msgid ":func:`any`"
msgstr ":func:`any`"

#: ../../library/functions.rst:15
msgid ":func:`dir`"
msgstr ":func:`dir`"

#: ../../library/functions.rst:15
msgid ":func:`hex`"
msgstr ":func:`hex`"

#: ../../library/functions.rst:15
msgid ":func:`next`"
msgstr ":func:`next`"

#: ../../library/functions.rst:15
msgid ":func:`slice`"
msgstr ":func:`slice`"

#: ../../library/functions.rst:16
msgid ":func:`ascii`"
msgstr ":func:`ascii`"

#: ../../library/functions.rst:16
msgid ":func:`divmod`"
msgstr ":func:`divmod`"

#: ../../library/functions.rst:16
msgid ":func:`id`"
msgstr ":func:`id`"

#: ../../library/functions.rst:16
msgid ":func:`object`"
msgstr ":func:`object`"

#: ../../library/functions.rst:16
msgid ":func:`sorted`"
msgstr ":func:`sorted`"

#: ../../library/functions.rst:17
msgid ":func:`bin`"
msgstr ":func:`bin`"

#: ../../library/functions.rst:17
msgid ":func:`enumerate`"
msgstr ":func:`enumerate`"

#: ../../library/functions.rst:17
msgid ":func:`input`"
msgstr ":func:`input`"

#: ../../library/functions.rst:17
msgid ":func:`oct`"
msgstr ":func:`oct`"

#: ../../library/functions.rst:17
msgid ":func:`staticmethod`"
msgstr ":func:`staticmethod`"

#: ../../library/functions.rst:18
msgid ":func:`bool`"
msgstr ":func:`bool`"

#: ../../library/functions.rst:18
msgid ":func:`eval`"
msgstr ":func:`eval`"

#: ../../library/functions.rst:18
msgid ":func:`int`"
msgstr ":func:`int`"

#: ../../library/functions.rst:18
msgid ":func:`open`"
msgstr ":func:`open`"

#: ../../library/functions.rst:18
msgid "|func-str|_"
msgstr "|func-str|_"

#: ../../library/functions.rst:19
msgid ":func:`breakpoint`"
msgstr ":func:`breakpoint`"

#: ../../library/functions.rst:19
msgid ":func:`exec`"
msgstr ":func:`exec`"

#: ../../library/functions.rst:19
msgid ":func:`isinstance`"
msgstr ":func:`isinstance`"

#: ../../library/functions.rst:19
msgid ":func:`ord`"
msgstr ":func:`ord`"

#: ../../library/functions.rst:19
msgid ":func:`sum`"
msgstr ":func:`sum`"

#: ../../library/functions.rst:20
msgid "|func-bytearray|_"
msgstr "|func-bytearray|_"

#: ../../library/functions.rst:20
msgid ":func:`filter`"
msgstr ":func:`filter`"

#: ../../library/functions.rst:20
msgid ":func:`issubclass`"
msgstr ":func:`issubclass`"

#: ../../library/functions.rst:20
msgid ":func:`pow`"
msgstr ":func:`pow`"

#: ../../library/functions.rst:20
msgid ":func:`super`"
msgstr ":func:`super`"

#: ../../library/functions.rst:21
msgid "|func-bytes|_"
msgstr "|func-bytes|_"

#: ../../library/functions.rst:21
msgid ":func:`float`"
msgstr ":func:`float`"

#: ../../library/functions.rst:21
msgid ":func:`iter`"
msgstr ":func:`iter`"

#: ../../library/functions.rst:21
msgid ":func:`print`"
msgstr ":func:`print`"

#: ../../library/functions.rst:21
msgid "|func-tuple|_"
msgstr "|func-tuple|_"

#: ../../library/functions.rst:22
msgid ":func:`callable`"
msgstr ":func:`callable`"

#: ../../library/functions.rst:22
msgid ":func:`format`"
msgstr ":func:`format`"

#: ../../library/functions.rst:22
msgid ":func:`len`"
msgstr ":func:`len`"

#: ../../library/functions.rst:22
msgid ":func:`property`"
msgstr ":func:`property`"

#: ../../library/functions.rst:22
msgid ":func:`type`"
msgstr ":func:`type`"

#: ../../library/functions.rst:23
msgid ":func:`chr`"
msgstr ":func:`chr`"

#: ../../library/functions.rst:23
msgid "|func-frozenset|_"
msgstr "|func-frozenset|_"

#: ../../library/functions.rst:23
msgid "|func-list|_"
msgstr "|func-list|_"

#: ../../library/functions.rst:23
msgid "|func-range|_"
msgstr "|func-range|_"

#: ../../library/functions.rst:23
msgid ":func:`vars`"
msgstr ":func:`vars`"

#: ../../library/functions.rst:24
msgid ":func:`classmethod`"
msgstr ":func:`classmethod`"

#: ../../library/functions.rst:24
msgid ":func:`getattr`"
msgstr ":func:`getattr`"

#: ../../library/functions.rst:24
msgid ":func:`locals`"
msgstr ":func:`locals`"

#: ../../library/functions.rst:24
msgid ":func:`repr`"
msgstr ":func:`repr`"

#: ../../library/functions.rst:24
msgid ":func:`zip`"
msgstr ":func:`zip`"

#: ../../library/functions.rst:25
msgid ":func:`compile`"
msgstr ":func:`compile`"

#: ../../library/functions.rst:25
msgid ":func:`globals`"
msgstr ":func:`globals`"

#: ../../library/functions.rst:25
msgid ":func:`map`"
msgstr ":func:`map`"

#: ../../library/functions.rst:25
msgid ":func:`reversed`"
msgstr ":func:`reversed`"

#: ../../library/functions.rst:25
msgid ":func:`__import__`"
msgstr ":func:`__import__`"

#: ../../library/functions.rst:26
msgid ":func:`complex`"
msgstr ":func:`complex`"

#: ../../library/functions.rst:26
msgid ":func:`hasattr`"
msgstr ":func:`hasattr`"

#: ../../library/functions.rst:26
msgid ":func:`max`"
msgstr ":func:`max`"

#: ../../library/functions.rst:26
msgid ":func:`round`"
msgstr ":func:`round`"

#: ../../library/functions.rst:45
msgid ""
"Return the absolute value of a number.  The argument may be an integer or a "
"floating point number.  If the argument is a complex number, its magnitude "
"is returned. If *x* defines :meth:`__abs__`, ``abs(x)`` returns ``x."
"__abs__()``."
msgstr ""
"Retorna o valor absoluto de um número. O argumento pode ser um inteiro ou um "
"número de ponto flutuante. Se o argumento é um número complexo, sua "
"magnitude é retornada. Se *x* define :meth:`__abs__`, ``abs(x)`` retorna ``x."
"__abs__()``."

#: ../../library/functions.rst:53
msgid ""
"Return ``True`` if all elements of the *iterable* are true (or if the "
"iterable is empty).  Equivalent to::"
msgstr ""
"Retorna ``True`` se todos os elementos de *iterable* são verdadeiros (ou se "
"*iterable* estiver vazio). Equivalente a::"

#: ../../library/functions.rst:65
msgid ""
"Return ``True`` if any element of the *iterable* is true.  If the iterable "
"is empty, return ``False``.  Equivalent to::"
msgstr ""
"Retorna ``True`` se algum elemento de *iterable* for verdadeiro. Se "
"*iterable* estiver vazio, retorna ``False``. Equivalente a::"

#: ../../library/functions.rst:77
msgid ""
"As :func:`repr`, return a string containing a printable representation of an "
"object, but escape the non-ASCII characters in the string returned by :func:"
"`repr` using ``\\x``, ``\\u`` or ``\\U`` escapes.  This generates a string "
"similar to that returned by :func:`repr` in Python 2."
msgstr ""
"Como :func:`repr`, retorna uma string contendo uma representação imprimível "
"de um objeto, mas faz escape de caracteres não-ASCII na string retornada "
"por :func:`repr` usando sequências de escapes ``\\x``, ``\\u`` or ``\\U``. "
"Isto gera uma string similar ao que é retornado por :func:`repr` no Python 2."

#: ../../library/functions.rst:85
msgid ""
"Convert an integer number to a binary string prefixed with \"0b\". The "
"result is a valid Python expression. If *x* is not a Python :class:`int` "
"object, it has to define an :meth:`__index__` method that returns an "
"integer. Some examples:"
msgstr ""
"Converte um número inteiro para uma string de binários prefixada com \"0b\". "
"O resultado é uma expressão Python válida. Se *x* não é um objeto Python :"
"class:`int`, ele tem que definir um método :meth:`__index__` que devolve um "
"inteiro. Alguns exemplos:"

#: ../../library/functions.rst:95
msgid ""
"If prefix \"0b\" is desired or not, you can use either of the following ways."
msgstr ""
"Se o prefixo \"0b\" é desejado ou não, você pode usar uma das seguintes "
"maneiras."

#: ../../library/functions.rst:102 ../../library/functions.rst:751
#: ../../library/functions.rst:1041
msgid "See also :func:`format` for more information."
msgstr "Veja também :func:`format` para mais informações."

#: ../../library/functions.rst:107
msgid ""
"Return a Boolean value, i.e. one of ``True`` or ``False``.  *x* is converted "
"using the standard :ref:`truth testing procedure <truth>`.  If *x* is false "
"or omitted, this returns ``False``; otherwise it returns ``True``.  The :"
"class:`bool` class is a subclass of :class:`int` (see :ref:`typesnumeric`). "
"It cannot be subclassed further.  Its only instances are ``False`` and "
"``True`` (see :ref:`bltin-boolean-values`)."
msgstr ""
"Devolve um valor Booleano, isto é, ``True`` ou ``False``. *x* é convertida "
"usando o :ref:`procedimento de teste de verdade <truth>` padrão. Se *x* é "
"falso ou foi omitido, isso devolve ``False``; senão ``True``. A classe :"
"class:`bool` é uma subclasse de :class:`int` (veja :ref:`typesnumeric`). Ela "
"não pode ser usada para criar outra subclasse. Suas únicas instâncias são "
"``False`` e ``True`` (veja :ref:`bltin-boolean-values`)."

#: ../../library/functions.rst:116 ../../library/functions.rst:626
#: ../../library/functions.rst:835
msgid "*x* is now a positional-only parameter."
msgstr "*x* é agora um parâmetro somente posicional."

#: ../../library/functions.rst:121
msgid ""
"This function drops you into the debugger at the call site.  Specifically, "
"it calls :func:`sys.breakpointhook`, passing ``args`` and ``kws`` straight "
"through.  By default, ``sys.breakpointhook()`` calls :func:`pdb.set_trace()` "
"expecting no arguments.  In this case, it is purely a convenience function "
"so you don't have to explicitly import :mod:`pdb` or type as much code to "
"enter the debugger.  However, :func:`sys.breakpointhook` can be set to some "
"other function and :func:`breakpoint` will automatically call that, allowing "
"you to drop into the debugger of choice."
msgstr ""
"Esta função coloca você no depurador no local da chamada. Especificamente, "
"ela chama :func:`sys.breakpointhook`, passando ``args`` e ``kws`` "
"diretamente. Por padrão, ``sys.breakpointhook()`` chama :func:`pdb."
"set_trace()` não esperando nenhum argumento. Neste caso, isso é puramente "
"uma função de conveniência para você não precisar importar :mod:`pdb` "
"explicitamente ou digitar mais código para entrar no depurador. Contudo, :"
"func:`sys.breakpointhook` pode ser configurado para alguma outra função e :"
"func:`breakpoint` irá automaticamente chamá-la, permitindo você ir para o "
"depurador de sua escolha."

#: ../../library/functions.rst:132
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.breakpoint`` with "
"argument ``breakpointhook``."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``builtins.breakpoint`` com "
"o argumento ``breakpointhook``."

#: ../../library/functions.rst:139
msgid ""
"Return a new array of bytes.  The :class:`bytearray` class is a mutable "
"sequence of integers in the range 0 <= x < 256.  It has most of the usual "
"methods of mutable sequences, described in :ref:`typesseq-mutable`, as well "
"as most methods that the :class:`bytes` type has, see :ref:`bytes-methods`."
msgstr ""
"Retorna um novo vetor de bytes. A classe :class:`bytearray` é uma sequência "
"mutável de inteiros no intervalo 0 <= x < 256. Ela tem a maior parte dos "
"métodos mais comuns de sequências mutáveis, descritas em :ref:`typesseq-"
"mutable`, assim como a maior parte dos métodos que o tipo :class:`bytes` "
"tem, veja :ref:`bytes-methods`."

#: ../../library/functions.rst:144
msgid ""
"The optional *source* parameter can be used to initialize the array in a few "
"different ways:"
msgstr ""
"O parâmetro opcional *source* pode ser usado para inicializar o vetor de "
"algumas maneiras diferentes:"

#: ../../library/functions.rst:147
msgid ""
"If it is a *string*, you must also give the *encoding* (and optionally, "
"*errors*) parameters; :func:`bytearray` then converts the string to bytes "
"using :meth:`str.encode`."
msgstr ""
"Se é uma *string*, você deve informar o parâmetro *encoding* (e "
"opcionalmente, *errors*); :func:`bytearray` então converte a string para "
"bytes usando :meth:`str.encode`."

#: ../../library/functions.rst:151
msgid ""
"If it is an *integer*, the array will have that size and will be initialized "
"with null bytes."
msgstr ""
"Se é um *inteiro*, o vetor terá esse tamanho e será inicializado com bytes "
"nulos."

#: ../../library/functions.rst:154
msgid ""
"If it is an object conforming to the :ref:`buffer interface "
"<bufferobjects>`, a read-only buffer of the object will be used to "
"initialize the bytes array."
msgstr ""
"Se é um objeto em conformidade com a :ref:`interface de buffer "
"<bufferobjects>`, um buffer somente leitura do objeto será usado para "
"inicializar o vetor de bytes."

#: ../../library/functions.rst:157
msgid ""
"If it is an *iterable*, it must be an iterable of integers in the range ``0 "
"<= x < 256``, which are used as the initial contents of the array."
msgstr ""
"Se é um *iterável*, deve ser um iterável de inteiros no intervalo ``0 <= x < "
"256``, que serão usados como o conteúdo inicial do vetor."

#: ../../library/functions.rst:160
msgid "Without an argument, an array of size 0 is created."
msgstr "Sem nenhum argumento, um vetor de tamanho 0 é criado."

#: ../../library/functions.rst:162
msgid "See also :ref:`binaryseq` and :ref:`typebytearray`."
msgstr "Veja também :ref:`binaryseq` e :ref:`typebytearray`."

#: ../../library/functions.rst:169
msgid ""
"Return a new \"bytes\" object, which is an immutable sequence of integers in "
"the range ``0 <= x < 256``.  :class:`bytes` is an immutable version of :"
"class:`bytearray` -- it has the same non-mutating methods and the same "
"indexing and slicing behavior."
msgstr ""
"Retorna um novo objeto \"bytes\", que é uma sequência imutável de inteiros "
"no intervalo ``0 <= x < 256``. :class:`bytes` é uma versão imutável de :"
"class:`bytearray` -- tem os mesmos métodos de objetos imutáveis e o mesmo "
"comportamento de índices e fatiamento."

#: ../../library/functions.rst:174
msgid ""
"Accordingly, constructor arguments are interpreted as for :func:`bytearray`."
msgstr ""
"Consequentemente, argumentos do construtor são interpretados como os de :"
"func:`bytearray`."

#: ../../library/functions.rst:176
msgid "Bytes objects can also be created with literals, see :ref:`strings`."
msgstr ""
"Objetos bytes também podem ser criados com literais, veja :ref:`strings`."

#: ../../library/functions.rst:178
msgid "See also :ref:`binaryseq`, :ref:`typebytes`, and :ref:`bytes-methods`."
msgstr ""
"Veja também :ref:`binaryseq`, :ref:`typebytes`, e :ref:`bytes-methods`."

#: ../../library/functions.rst:183
msgid ""
"Return :const:`True` if the *object* argument appears callable, :const:"
"`False` if not.  If this returns ``True``, it is still possible that a call "
"fails, but if it is ``False``, calling *object* will never succeed. Note "
"that classes are callable (calling a class returns a new instance); "
"instances are callable if their class has a :meth:`__call__` method."
msgstr ""
"Devolve :const:`True` se o argumento *object* parece ser chamável, :const:"
"`False` caso contrário. Se devolve ``True``, ainda é possível que a chamada "
"falhe, mas se é ``False``, chamar *object* nunca será bem sucedido. Note que "
"classes são chamáveis (chamar uma classe devolve uma nova instância); "
"instâncias são chamáveis se suas classes possuem um método :meth:`__call__`."

#: ../../library/functions.rst:189
msgid ""
"This function was first removed in Python 3.0 and then brought back in "
"Python 3.2."
msgstr "Esta função foi removida na versão 3.0, mas retornou no Python 3.2."

#: ../../library/functions.rst:196
msgid ""
"Return the string representing a character whose Unicode code point is the "
"integer *i*.  For example, ``chr(97)`` returns the string ``'a'``, while "
"``chr(8364)`` returns the string ``'€'``. This is the inverse of :func:`ord`."
msgstr ""
"Retorna o caractere que é apontado pelo inteiro *i* no código Unicode. Por "
"exemplo, ``chr(97)`` retorna a string ``'a'``, enquanto ``chr(8364)`` "
"retorna a string ``'€'``. É o inverso de :func:`ord`."

#: ../../library/functions.rst:200
msgid ""
"The valid range for the argument is from 0 through 1,114,111 (0x10FFFF in "
"base 16).  :exc:`ValueError` will be raised if *i* is outside that range."
msgstr ""
"O intervalo válido para o argumento vai de 0 até 1.114.111 (0x10FFFF na base "
"16). Será lançada uma exceção :exc:`ValueError` se *i* estiver fora desse "
"intervalo."

#: ../../library/functions.rst:206
msgid "Transform a method into a class method."
msgstr "Transforma um método em um método de classe."

#: ../../library/functions.rst:208
msgid ""
"A class method receives the class as implicit first argument, just like an "
"instance method receives the instance. To declare a class method, use this "
"idiom::"
msgstr ""
"Um método de classe recebe a classe como primeiro argumento implícito, "
"exatamente como uma método de instância recebe a instância. Para declarar um "
"método de classe, faça dessa forma::"

#: ../../library/functions.rst:216
msgid ""
"The ``@classmethod`` form is a function :term:`decorator` -- see :ref:"
"`function` for details."
msgstr ""
"O termo ``@classmethod`` é uma função :term:`decoradora <decorator>` -- "
"veja :ref:`function` para detalhes."

#: ../../library/functions.rst:219
msgid ""
"A class method can be called either on the class (such as ``C.f()``) or on "
"an instance (such as ``C().f()``).  The instance is ignored except for its "
"class. If a class method is called for a derived class, the derived class "
"object is passed as the implied first argument."
msgstr ""
"Um método de classe pode ser chamado tanto da classe (como em ``C.f()``) "
"quanto da instância (como em ``C().f()``). A instância é ignorada, exceto "
"por sua classe. Se um método de classe é chamado por uma classe derivada, o "
"objeto da classe derivada é passado como primeiro argumento implícito."

#: ../../library/functions.rst:224
msgid ""
"Class methods are different than C++ or Java static methods. If you want "
"those, see :func:`staticmethod`."
msgstr ""
"Métodos de classe são diferentes de métodos estáticos em C++ ou Java. Se "
"você quer saber desses, veja :func:`staticmethod`."

#: ../../library/functions.rst:227
msgid "For more information on class methods, see :ref:`types`."
msgstr "Para mais informações sobre métodos de classe, veja :ref:`types`."

#: ../../library/functions.rst:232
msgid ""
"Compile the *source* into a code or AST object.  Code objects can be "
"executed by :func:`exec` or :func:`eval`.  *source* can either be a normal "
"string, a byte string, or an AST object.  Refer to the :mod:`ast` module "
"documentation for information on how to work with AST objects."
msgstr ""
"Compila o argumento *source* em código ou objeto AST. Objetos código podem "
"ser executados por :func:`exec` ou :func:`eval`. *source* pode ser uma "
"string normal, uma string byte, ou um objeto AST. Consulte a documentação do "
"módulo :mod:`ast` para saber como trabalhar com objetos AST."

#: ../../library/functions.rst:237
msgid ""
"The *filename* argument should give the file from which the code was read; "
"pass some recognizable value if it wasn't read from a file (``'<string>'`` "
"is commonly used)."
msgstr ""
"O argumento *filename* deve ser o arquivo de onde o código será lido; passe "
"algum valor reconhecível se isso não foi lido de um arquivo (``'<string>'`` "
"é comumente usado)."

#: ../../library/functions.rst:241
msgid ""
"The *mode* argument specifies what kind of code must be compiled; it can be "
"``'exec'`` if *source* consists of a sequence of statements, ``'eval'`` if "
"it consists of a single expression, or ``'single'`` if it consists of a "
"single interactive statement (in the latter case, expression statements that "
"evaluate to something other than ``None`` will be printed)."
msgstr ""
"O argumento *mode* especifica qual o tipo de código deve ser compilado; pode "
"ser ``'exec'`` se *source* consiste em uma sequência de instruções, "
"``'eval'`` se consiste de uma única expressão, ou ``'single'`` se consiste "
"de uma única instrução interativa (neste último caso, instruções que são "
"avaliadas para alguma coisa diferente de ``None`` serão exibidas)."

#: ../../library/functions.rst:247
msgid ""
"The optional arguments *flags* and *dont_inherit* control which :ref:`future "
"statements <future>` affect the compilation of *source*.  If neither is "
"present (or both are zero) the code is compiled with those future statements "
"that are in effect in the code that is calling :func:`compile`.  If the "
"*flags* argument is given and *dont_inherit* is not (or is zero) then the "
"future statements specified by the *flags* argument are used in addition to "
"those that would be used anyway. If *dont_inherit* is a non-zero integer "
"then the *flags* argument is it -- the future statements in effect around "
"the call to compile are ignored."
msgstr ""
"Os argumentos opcionais *flags* e *dont_inherit* controlam qual :ref:"
"`instrução futura <future>` afeta a compilação de *source*. Se nenhum está "
"presente (ou ambos são zero) o código é compilado com as instruções futuras "
"que estão agindo no código que está chamando :func:`compile`. Se o argumento "
"*flags* é fornecido, mas *dont_inherit* não é (ou é zero) então a instrução "
"futura especificada por *flags* são usada em adição àquelas que seriam usada "
"de qualquer forma. Se *dont_inherit* é um inteiro diferente de zero então o "
"argumento *flags* define as instruções futuras que serão utilizadas -- as "
"instruções futuras atuando sobre o código que chama \"compile\" são "
"ignoradas."

#: ../../library/functions.rst:257
msgid ""
"Future statements are specified by bits which can be bitwise ORed together "
"to specify multiple statements.  The bitfield required to specify a given "
"feature can be found as the :attr:`~__future__._Feature.compiler_flag` "
"attribute on the :class:`~__future__._Feature` instance in the :mod:"
"`__future__` module."
msgstr ""
"Instruções futuras são especificadas por bits, assim pode ocorrer uma "
"operação *OU* bit a bit para especificar múltiplas instruções.  O "
"sinalizador necessário para especificar um dado recurso pode ser encontrada "
"no atributo :attr:`~__future__._Feature.compiler_flag` na instância :class:"
"`~__future__._Feature` do módulo :mod:`__future__`."

#: ../../library/functions.rst:262
msgid ""
"The optional argument *flags* also controls whether the compiled source is "
"allowed to contain top-level ``await``, ``async for`` and ``async with``. "
"When the bit ``ast.PyCF_ALLOW_TOP_LEVEL_AWAIT`` is set, the return code "
"object has ``CO_COROUTINE`` set in ``co_code``, and can be interactively "
"executed via ``await eval(code_object)``."
msgstr ""
"O argumento opcional *flags* também controla se é o código para compilar "
"pode conter em nível superior ``await``, ``async for`` e ``async with``. "
"Quando o bit ``ast.PyCF_ALLOW_TOP_LEVEL_AWAIT`` é definido, o código-objeto "
"devolvido tem ``CO_COROUTINE`` definido em ``co_code``, e pode ser "
"interativamente executado via ``await eval(code_object)``."

#: ../../library/functions.rst:268
msgid ""
"The argument *optimize* specifies the optimization level of the compiler; "
"the default value of ``-1`` selects the optimization level of the "
"interpreter as given by :option:`-O` options.  Explicit levels are ``0`` (no "
"optimization; ``__debug__`` is true), ``1`` (asserts are removed, "
"``__debug__`` is false) or ``2`` (docstrings are removed too)."
msgstr ""
"O argumento *optimize* especifica o nível de otimização do compilador; o "
"valor padrão de ``-1`` seleciona o nível de otimização do interpretador dado "
"pela opção :option:`-O`. Níveis explícitos são ``0`` (nenhuma otimização; "
"``__debug__`` é verdadeiro), ``1`` (instruções ``assert`` são removidas, "
"``__debug__`` é falso) ou ``2`` (strings de documentação também são "
"removidas)."

#: ../../library/functions.rst:274
msgid ""
"This function raises :exc:`SyntaxError` if the compiled source is invalid, "
"and :exc:`ValueError` if the source contains null bytes."
msgstr ""
"Essa função levanta :exc:`SyntaxError` se o código para compilar é inválido, "
"e :exc:`ValueError` se o código contém bytes nulos."

#: ../../library/functions.rst:277
msgid ""
"If you want to parse Python code into its AST representation, see :func:`ast."
"parse`."
msgstr ""
"Se você quer analisar código Python em sua representação AST, veja :func:"
"`ast.parse`."

#: ../../library/functions.rstNone
msgid ""
"Raises an :ref:`auditing event <auditing>` ``compile`` with arguments "
"``source``, ``filename``."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``compile`` com argumentos "
"``source``, ``filename``."

#: ../../library/functions.rst:282
msgid ""
"Raises an :ref:`auditing event <auditing>` ``compile`` with arguments "
"``source`` and ``filename``. This event may also be raised by implicit "
"compilation."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``compile`` com os "
"argumentos ``source``, ``filename``. Esse evento pode também ser levantando "
"por uma compilação implícita."

#: ../../library/functions.rst:288
msgid ""
"When compiling a string with multi-line code in ``'single'`` or ``'eval'`` "
"mode, input must be terminated by at least one newline character.  This is "
"to facilitate detection of incomplete and complete statements in the :mod:"
"`code` module."
msgstr ""
"Quando compilando uma string com código multi-linhas em modo ``'single'`` ou "
"``'eval'``, entrada deve ser terminada por ao menos um caractere de nova "
"linhas. Isso é para facilitar a detecção de instruções completas e "
"incompletas no módulo :mod:`code`."

#: ../../library/functions.rst:295
msgid ""
"It is possible to crash the Python interpreter with a sufficiently large/"
"complex string when compiling to an AST object due to stack depth "
"limitations in Python's AST compiler."
msgstr ""
"É possível quebrar o interpretador Python com uma string suficientemente "
"grande/complexa ao compilar para um objeto AST, devido limitações do tamanho "
"da pilha no compilador AST do Python."

#: ../../library/functions.rst:299
msgid ""
"Allowed use of Windows and Mac newlines.  Also input in ``'exec'`` mode does "
"not have to end in a newline anymore.  Added the *optimize* parameter."
msgstr ""
"Permitido uso de marcadores de novas linhas no estilo Windows e Mac. Além "
"disso, em modo ``'exec'`` a entrada não precisa mais terminar com uma nova "
"linha. Também foi adicionado o parâmetro *optimize*."

#: ../../library/functions.rst:303
msgid ""
"Previously, :exc:`TypeError` was raised when null bytes were encountered in "
"*source*."
msgstr ""
"Anteriormente, :exc:`TypeError` era levantada quando havia bytes nulos em "
"*source*."

#: ../../library/functions.rst:307
msgid ""
"``ast.PyCF_ALLOW_TOP_LEVEL_AWAIT`` can now be passed in flags to enable "
"support for top-level ``await``, ``async for``, and ``async with``."
msgstr ""
"``ast.PyCF_ALLOW_TOP_LEVEL_AWAIT`` agora pode ser passado em *flags* para "
"habilitar o suporte em nível superior a ``await``, ``async for``, e ``async "
"with``."

#: ../../library/functions.rst:314
msgid ""
"Return a complex number with the value *real* + *imag*\\*1j or convert a "
"string or number to a complex number.  If the first parameter is a string, "
"it will be interpreted as a complex number and the function must be called "
"without a second parameter.  The second parameter can never be a string. "
"Each argument may be any numeric type (including complex).  If *imag* is "
"omitted, it defaults to zero and the constructor serves as a numeric "
"conversion like :class:`int` and :class:`float`.  If both arguments are "
"omitted, returns ``0j``."
msgstr ""
"Retorna um número completo com o valor *real* + *imag*\\*1j ou converte uma "
"string ou número para um número complexo. Se o primeiro parâmetro é uma "
"string, ele será interpretado como um número complexo e a função deve ser "
"chamada sem um segundo parâmetro. O segundo parâmetro nunca deve ser uma "
"string. Cada argumento pode ser qualquer tipo numérico (incluindo complexo). "
"Se *imag* é omitido, seu valor padrão é zero e a construção funciona como "
"uma conversão numérica, similar a :class:`int` e :class:`float`. Se os dois "
"argumentos são omitidos, retorna ``0j``."

#: ../../library/functions.rst:323
msgid ""
"For a general Python object ``x``, ``complex(x)`` delegates to ``x."
"__complex__()``.  If ``__complex__()`` is not defined then it falls back to :"
"meth:`__float__`.  If ``__float__()`` is not defined then it falls back to :"
"meth:`__index__`."
msgstr ""
"Para um objeto Python ``x`` qualquer, ``complex(x)`` delega para ``x."
"__complex__()``. Se ``__complex__()`` não está definido então a chamada é "
"repassada para :meth:`__float__`. Se ``__float__()`` não está definido então "
"a chamada é, novamente, repassada para :meth:`__index__`."

#: ../../library/functions.rst:330
msgid ""
"When converting from a string, the string must not contain whitespace around "
"the central ``+`` or ``-`` operator.  For example, ``complex('1+2j')`` is "
"fine, but ``complex('1 + 2j')`` raises :exc:`ValueError`."
msgstr ""
"Quando convertendo a partir de uma string, a string não pode conter espaços "
"em branco em torno ``+`` central ou do operador ``-``. Por exemplo, "
"``complex('1+2j')`` funciona, mas ``complex('1 + 2j')`` levanta :exc:"
"`ValueError`."

#: ../../library/functions.rst:335
msgid "The complex type is described in :ref:`typesnumeric`."
msgstr "O tipo complexo está descrito em :ref:`typesnumeric`."

#: ../../library/functions.rst:337 ../../library/functions.rst:623
#: ../../library/functions.rst:832
msgid "Grouping digits with underscores as in code literals is allowed."
msgstr ""
"Agrupar dígitos com sublinhados como em literais de código é permitido."

#: ../../library/functions.rst:340
msgid ""
"Falls back to :meth:`__index__` if :meth:`__complex__` and :meth:`__float__` "
"are not defined."
msgstr ""
"Chamadas para :meth:`__index__` se :meth:`__complex__` e :meth:`__float__` "
"não estão definidas."

#: ../../library/functions.rst:347
msgid ""
"This is a relative of :func:`setattr`.  The arguments are an object and a "
"string.  The string must be the name of one of the object's attributes.  The "
"function deletes the named attribute, provided the object allows it.  For "
"example, ``delattr(x, 'foobar')`` is equivalent to ``del x.foobar``."
msgstr ""
"Essa função está relacionada com :func:`setattr`. Os argumentos são um "
"objeto e uma string. A string deve ser o nome de um dos atributos do objeto. "
"A função remove o atributo indicado, desde que o objeto permita. Por "
"exemplo, ``delattr(x, 'foobar')`` é equivalente a ``del x.foobar``."

#: ../../library/functions.rst:359
msgid ""
"Create a new dictionary.  The :class:`dict` object is the dictionary class. "
"See :class:`dict` and :ref:`typesmapping` for documentation about this class."
msgstr ""
"Cria um novo dicionário. O objeto :class:`dict` é a classe do dicionário. "
"Veja :class:`dict` e :ref:`typesmapping` para documentação sobre esta classe."

#: ../../library/functions.rst:362
msgid ""
"For other containers see the built-in :class:`list`, :class:`set`, and :"
"class:`tuple` classes, as well as the :mod:`collections` module."
msgstr ""
"Para outros contêineres, consulte as classes embutidas :class:`list`, :class:"
"`set` e :class:`tuple`, bem como o módulo :mod:`collections`."

#: ../../library/functions.rst:368
msgid ""
"Without arguments, return the list of names in the current local scope.  "
"With an argument, attempt to return a list of valid attributes for that "
"object."
msgstr ""
"Sem argumentos, devolve a lista de nomes no escopo local atual. Com um "
"argumento, tentará devolver uma lista de atributos válidos para esse objeto."

#: ../../library/functions.rst:371
msgid ""
"If the object has a method named :meth:`__dir__`, this method will be called "
"and must return the list of attributes. This allows objects that implement a "
"custom :func:`__getattr__` or :func:`__getattribute__` function to customize "
"the way :func:`dir` reports their attributes."
msgstr ""
"Se o objeto tiver um método chamado :meth:`__dir__`, esse método será "
"chamado e deve devolver a lista de atributos. Isso permite que objetos que "
"implementam uma função personalizada :func:`__getattr__` ou :func:"
"`__getattribute__` personalizem a maneira como :func:`dir` relata seus "
"atributos."

#: ../../library/functions.rst:376
msgid ""
"If the object does not provide :meth:`__dir__`, the function tries its best "
"to gather information from the object's :attr:`~object.__dict__` attribute, "
"if defined, and from its type object.  The resulting list is not necessarily "
"complete, and may be inaccurate when the object has a custom :func:"
"`__getattr__`."
msgstr ""
"Se o objeto não fornecer :meth:`__dir__`, a função tentará o melhor possível "
"para coletar informações do atributo :attr:`~object.__dict__` do objeto, se "
"definido, e do seu objeto de tipo. A lista resultante não está "
"necessariamente completa e pode ser imprecisa quando o objeto possui um :"
"func:`__getattr__` personalizado."

#: ../../library/functions.rst:381
msgid ""
"The default :func:`dir` mechanism behaves differently with different types "
"of objects, as it attempts to produce the most relevant, rather than "
"complete, information:"
msgstr ""
"O mecanismo padrão :func:`dir` se comporta de maneira diferente com "
"diferentes tipos de objetos, pois tenta produzir as informações mais "
"relevantes e não completas:"

#: ../../library/functions.rst:385
msgid ""
"If the object is a module object, the list contains the names of the "
"module's attributes."
msgstr ""
"Se o objeto for um objeto de módulo, a lista conterá os nomes dos atributos "
"do módulo."

#: ../../library/functions.rst:388
msgid ""
"If the object is a type or class object, the list contains the names of its "
"attributes, and recursively of the attributes of its bases."
msgstr ""
"Se o objeto for um objeto de tipo ou classe, a lista conterá os nomes de "
"seus atributos e recursivamente os atributos de suas bases."

#: ../../library/functions.rst:391
msgid ""
"Otherwise, the list contains the object's attributes' names, the names of "
"its class's attributes, and recursively of the attributes of its class's "
"base classes."
msgstr ""
"Caso contrário, a lista conterá os nomes dos atributos do objeto, os nomes "
"dos atributos da classe e recursivamente os atributos das classes base da "
"classe."

#: ../../library/functions.rst:395
msgid "The resulting list is sorted alphabetically.  For example:"
msgstr "A lista resultante é alfabeticamente ordenada. Por exemplo:"

#: ../../library/functions.rst:414
msgid ""
"Because :func:`dir` is supplied primarily as a convenience for use at an "
"interactive prompt, it tries to supply an interesting set of names more than "
"it tries to supply a rigorously or consistently defined set of names, and "
"its detailed behavior may change across releases.  For example, metaclass "
"attributes are not in the result list when the argument is a class."
msgstr ""
"Como :func:`dir` é fornecido principalmente como uma conveniência para uso "
"em um prompt interativo, ele tenta fornecer um conjunto interessante de "
"nomes mais do que tenta fornecer um conjunto de nomes definido de forma "
"rigorosa ou consistente, e seu comportamento detalhado pode mudar nos "
"lançamentos. Por exemplo, os atributos de metaclasse não estão na lista de "
"resultados quando o argumento é uma classe."

#: ../../library/functions.rst:424
msgid ""
"Take two (non complex) numbers as arguments and return a pair of numbers "
"consisting of their quotient and remainder when using integer division.  "
"With mixed operand types, the rules for binary arithmetic operators apply.  "
"For integers, the result is the same as ``(a // b, a % b)``. For floating "
"point numbers the result is ``(q, a % b)``, where *q* is usually ``math."
"floor(a / b)`` but may be 1 less than that.  In any case ``q * b + a % b`` "
"is very close to *a*, if ``a % b`` is non-zero it has the same sign as *b*, "
"and ``0 <= abs(a % b) < abs(b)``."
msgstr ""
"Toma dois números (não complexos) como argumentos e devolve um par de "
"números que consiste em seu quociente e restante ao usar a divisão inteira. "
"Com tipos de operandos mistos, as regras para operadores aritméticos "
"binários se aplicam. Para números inteiros, o resultado é o mesmo que "
"``(a // b, a % b)``. Para números de ponto flutuante, o resultado é ``(q, a "
"% b)``, onde *q* geralmente é ``math.floor(a / b)``, mas pode ser 1 a menos "
"que isso. Em qualquer caso, ``q * b + a % b`` está muito próximo de *a*, se "
"``a % b`` é diferente de zero, tem o mesmo sinal que *b* e ``0 <= abs(a % b) "
"< abs(b)``."

#: ../../library/functions.rst:436
msgid ""
"Return an enumerate object. *iterable* must be a sequence, an :term:"
"`iterator`, or some other object which supports iteration. The :meth:"
"`~iterator.__next__` method of the iterator returned by :func:`enumerate` "
"returns a tuple containing a count (from *start* which defaults to 0) and "
"the values obtained from iterating over *iterable*."
msgstr ""
"Devolve um objeto enumerado. *iterable* deve ser uma sequência, um :term:"
"`iterador` ou algum outro objeto que suporte a iteração. O método :meth:"
"`~iterator.__next__` do iterador retornado por :func:`enumerate` devolve uma "
"tupla contendo uma contagem (a partir de *start*, cujo padrão é 0) e os "
"valores obtidos na iteração sobre *iterable*."

#: ../../library/functions.rst:448
msgid "Equivalent to::"
msgstr "Equivalente a::"

#: ../../library/functions.rst:459
msgid ""
"The arguments are a string and optional globals and locals.  If provided, "
"*globals* must be a dictionary.  If provided, *locals* can be any mapping "
"object."
msgstr ""
"Os argumentos são uma sequência de caracteres e globais e locais opcionais. "
"Se fornecido, *globals* deve ser um dicionário. Se fornecido, *locals* pode "
"ser qualquer objeto de mapeamento."

#: ../../library/functions.rst:463
msgid ""
"The *expression* argument is parsed and evaluated as a Python expression "
"(technically speaking, a condition list) using the *globals* and *locals* "
"dictionaries as global and local namespace.  If the *globals* dictionary is "
"present and does not contain a value for the key ``__builtins__``, a "
"reference to the dictionary of the built-in module :mod:`builtins` is "
"inserted under that key before *expression* is parsed.  This means that "
"*expression* normally has full access to the standard :mod:`builtins` module "
"and restricted environments are propagated.  If the *locals* dictionary is "
"omitted it defaults to the *globals* dictionary.  If both dictionaries are "
"omitted, the expression is executed with the *globals* and *locals* in the "
"environment where :func:`eval` is called.  Note, *eval()* does not have "
"access to the :term:`nested scopes <nested scope>` (non-locals) in the "
"enclosing environment."
msgstr ""
"O argumento *expression* é analisado e avaliado como uma expressão Python "
"(tecnicamente falando, uma lista de condições) usando os dicionários "
"*globals* e *locals* como espaços de nomes globais e locais. Se o dicionário "
"*globals* estiver presente e não contiver um valor para a chave "
"``__builtins__``, uma referência ao dicionário do módulo embutido :mod:"
"`builtins` será inserida sob essa chave antes de *expression* ser analisado. "
"Isso significa que *expression* normalmente tem acesso total ao módulo "
"padrão :mod:`builtins` e ambientes restritos são propagados. Se o dicionário "
"*locals* for omitido, o padrão será o dicionário *globals*. Se os dois "
"dicionários forem omitidos, a expressão será executada com os *globals* e "
"*locals* no ambiente em que :func:`eval` é chamado. Observe que *eval()* não "
"tem acesso a :term:`escopos aninhados <nested scope>` (não locais) no "
"ambiente anexo."

#: ../../library/functions.rst:477
msgid ""
"The return value is the result of the evaluated expression. Syntax errors "
"are reported as exceptions.  Example:"
msgstr ""
"O valor de retorno é o resultado da expressão avaliada. Erros de sintaxe são "
"relatados como exceções. Exemplo:"

#: ../../library/functions.rst:484
msgid ""
"This function can also be used to execute arbitrary code objects (such as "
"those created by :func:`compile`).  In this case pass a code object instead "
"of a string.  If the code object has been compiled with ``'exec'`` as the "
"*mode* argument, :func:`eval`\\'s return value will be ``None``."
msgstr ""
"Esta função também pode ser usada para executar objetos de código "
"arbitrários (como os criados por :func:`compile`). Nesse caso, passe um "
"objeto de código em vez de uma string. Se o objeto de código foi compilado "
"com ``'exec'`` como o argumento *mode*, o valor de retorno de :func:`eval` "
"será ``None``."

#: ../../library/functions.rst:489
msgid ""
"Hints: dynamic execution of statements is supported by the :func:`exec` "
"function.  The :func:`globals` and :func:`locals` functions returns the "
"current global and local dictionary, respectively, which may be useful to "
"pass around for use by :func:`eval` or :func:`exec`."
msgstr ""
"Dicas: a execução dinâmica de instruções é suportada pela função :func:"
"`exec`. As funções :func:`globals` e :func:`locals` retornam o dicionário "
"global e local atual, respectivamente, o que pode ser útil para ser usado "
"por :func:`eval` ou :func:`exec`."

#: ../../library/functions.rst:494
msgid ""
"See :func:`ast.literal_eval` for a function that can safely evaluate strings "
"with expressions containing only literals."
msgstr ""
"Veja :func:`ast.literal_eval` para uma função que pode avaliar com segurança "
"strings com expressões contendo apenas literais."

#: ../../library/functions.rstNone
msgid ""
"Raises an :ref:`auditing event <auditing>` ``exec`` with argument "
"``code_object``."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``exec`` com argumento "
"``code_object``."

#: ../../library/functions.rst:499 ../../library/functions.rst:535
msgid ""
"Raises an :ref:`auditing event <auditing>` ``exec`` with the code object as "
"the argument. Code compilation events may also be raised."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``exec`` com o código "
"objeto como argumento. Eventos de compilação de código também podem ser "
"levantados."

#: ../../library/functions.rst:506
msgid ""
"This function supports dynamic execution of Python code. *object* must be "
"either a string or a code object.  If it is a string, the string is parsed "
"as a suite of Python statements which is then executed (unless a syntax "
"error occurs). [#]_ If it is a code object, it is simply executed.  In all "
"cases, the code that's executed is expected to be valid as file input (see "
"the section \"File input\" in the Reference Manual). Be aware that the :"
"keyword:`nonlocal`, :keyword:`yield`,  and :keyword:`return` statements may "
"not be used outside of function definitions even within the context of code "
"passed to the :func:`exec` function. The return value is ``None``."
msgstr ""
"Esta função tem suporte a execução dinâmica de código Python. O parâmetro "
"*object* deve ser ou uma string ou um objeto contendo código. Se for uma "
"string, a mesma é analisada como um conjunto de instruções Python, o qual é "
"então executado (exceto caso um erro de sintaxe ocorra). [#]_ Se for um "
"objeto com código, ele é simplesmente executado. Em todos os casos, espera-"
"se que o código a ser executado seja válido como um arquivo de entrada (veja "
"a seção \"Arquivo de Entrada\" no Manual de Referência). Tenha cuidado que "
"as instruções :keyword:`nonlocal`, :keyword:`yield`, and :keyword:`return` "
"não podem ser usadas fora das definições de funções mesmo dentro do contexto "
"do código passado para a função :func:`exec` . O valor de retorno é sempre "
"``None``."

#: ../../library/functions.rst:517
msgid ""
"In all cases, if the optional parts are omitted, the code is executed in the "
"current scope.  If only *globals* is provided, it must be a dictionary (and "
"not a subclass of dictionary), which will be used for both the global and "
"the local variables.  If *globals* and *locals* are given, they are used for "
"the global and local variables, respectively.  If provided, *locals* can be "
"any mapping object.  Remember that at module level, globals and locals are "
"the same dictionary. If exec gets two separate objects as *globals* and "
"*locals*, the code will be executed as if it were embedded in a class "
"definition."
msgstr ""
"Em todos os casos, se os parâmetros opcionais são omitidos, o código é "
"executado no escopo atual. Se somente *globals* é fornecido, deve ser um "
"dicionário (e não uma subclasse de dicionário), que será usado tanto para as "
"variáveis globais quanto para locais. Se *globals* e *locals* são "
"fornecidos, eles são usados para as variáveis globais e locais, "
"respectivamente. Se fornecido, *locals* pode ser qualquer objeto de "
"mapeamento. Lembre que no nível de módulo, globais e locais são o mesmo "
"dicionário. Se o exec recebe dois objetos separados como *globals* and "
"*locals*, o código será executado como se estivesse embutido em uma "
"definição de classe."

#: ../../library/functions.rst:527
msgid ""
"If the *globals* dictionary does not contain a value for the key "
"``__builtins__``, a reference to the dictionary of the built-in module :mod:"
"`builtins` is inserted under that key.  That way you can control what "
"builtins are available to the executed code by inserting your own "
"``__builtins__`` dictionary into *globals* before passing it to :func:`exec`."
msgstr ""
"Se o dicionário *globals* não contém um valor para a chave ``__builtins__``, "
"a referência para o dicionário do módulo embutido :mod:`builtins` é inserido "
"com essa chave. A maneira que você pode controlar quais embutidos estão "
"disponíveis para o código executado é inserindo seu próprio ``__builtins__`` "
"dicionário em *globals* antes de passar para :func:`exec`."

#: ../../library/functions.rst:540
msgid ""
"The built-in functions :func:`globals` and :func:`locals` return the current "
"global and local dictionary, respectively, which may be useful to pass "
"around for use as the second and third argument to :func:`exec`."
msgstr ""
"As funções embutidas :func:`globals` e :func:`locals` devolvem o dicionário "
"global e local, respectivamente, o que pode ser útil para passar adiante e "
"usar como segundo ou terceiro argumento para :func:`exec`."

#: ../../library/functions.rst:546
msgid ""
"The default *locals* act as described for function :func:`locals` below: "
"modifications to the default *locals* dictionary should not be attempted. "
"Pass an explicit *locals* dictionary if you need to see effects of the code "
"on *locals* after function :func:`exec` returns."
msgstr ""
"*locals* padrão atua como descrito pela função :func:`locals` abaixo: "
"modificações para o dicionário *locals* padrão não deveriam ser feitas. Se "
"você precisa ver efeitos do código em *locals* depois da função :func:`exec` "
"retornar passe um dicionário *locals* explícito."

#: ../../library/functions.rst:554
msgid ""
"Construct an iterator from those elements of *iterable* for which *function* "
"returns true.  *iterable* may be either a sequence, a container which "
"supports iteration, or an iterator.  If *function* is ``None``, the identity "
"function is assumed, that is, all elements of *iterable* that are false are "
"removed."
msgstr ""
"Constrói um iterador a partir dos elementos de *iterable* para os quais "
"*function* retorna verdadeiro. *iterable* pode ser uma sequência, um "
"contêiner que com suporte a iteração, ou um iterador. Se *function* for "
"``None``, a função identidade será usada, isto é, todos os elementos de "
"*iterable* que são falsos são removidos."

#: ../../library/functions.rst:560
msgid ""
"Note that ``filter(function, iterable)`` is equivalent to the generator "
"expression ``(item for item in iterable if function(item))`` if function is "
"not ``None`` and ``(item for item in iterable if item)`` if function is "
"``None``."
msgstr ""
"Note que ``filter(function, iterable)`` é equivalente a expressão geradora "
"``(item for item in iterable if function(item))`` se *function* não for "
"``None`` e ``(item for item in iterable if item)`` se *function* for "
"``None``."

#: ../../library/functions.rst:565
msgid ""
"See :func:`itertools.filterfalse` for the complementary function that "
"returns elements of *iterable* for which *function* returns false."
msgstr ""
"Veja :func:`itertools.filterfalse` para a função complementar que devolve "
"elementos de *iterable* para os quais *function* devolve falso."

#: ../../library/functions.rst:575
msgid "Return a floating point number constructed from a number or string *x*."
msgstr ""
"Devolve um número de ponto flutuante construído a partir de um número ou "
"string *x*."

#: ../../library/functions.rst:577
msgid ""
"If the argument is a string, it should contain a decimal number, optionally "
"preceded by a sign, and optionally embedded in whitespace.  The optional "
"sign may be ``'+'`` or ``'-'``; a ``'+'`` sign has no effect on the value "
"produced.  The argument may also be a string representing a NaN (not-a-"
"number), or a positive or negative infinity.  More precisely, the input must "
"conform to the following grammar after leading and trailing whitespace "
"characters are removed:"
msgstr ""
"Se o argumento é uma string, ele deve conter um número decimal, "
"opcionalmente precedido por um sinal, e opcionalmente possuir espaço em "
"branco. O sinal opcional pode ser ``'+'`` ou ``'-'``; um sinal de ``'+'`` "
"não tem efeito no valor produzido. O argumento também pode ser uma string "
"representando um NaN (indica que não é numero), ou infinito positivo/"
"negativo. Mais precisamente, a entrada deve estar em conformidade com a "
"seguinte gramática depois que caracteres em branco são removidos do início e "
"do final da mesma:"

#: ../../library/functions.rst:592
msgid ""
"Here ``floatnumber`` is the form of a Python floating-point literal, "
"described in :ref:`floating`.  Case is not significant, so, for example, "
"\"inf\", \"Inf\", \"INFINITY\" and \"iNfINity\" are all acceptable spellings "
"for positive infinity."
msgstr ""
"Aqui ``floatnumber`` é a forma literal de um ponto flutuante Python, "
"descrito em :ref:`floating`. Caso isso não seja significativo, então, por "
"exemplo, \"inf\", \"Inf\", \"INFINITY\" e \"iNfINity\" são todas formas "
"escritas válidas para infinito positivo."

#: ../../library/functions.rst:597
msgid ""
"Otherwise, if the argument is an integer or a floating point number, a "
"floating point number with the same value (within Python's floating point "
"precision) is returned.  If the argument is outside the range of a Python "
"float, an :exc:`OverflowError` will be raised."
msgstr ""
"Caso contrário, se o argumento é um inteiro ou um número de ponto flutuante, "
"um número de ponto flutuante com o mesmo valor (com a precisão de ponto "
"flutuante de Python) é devolvido. Se o argumento está fora do intervalo de "
"um ponto flutuante Python, uma exceção :exc:`OverflowError` será lançada."

#: ../../library/functions.rst:602
msgid ""
"For a general Python object ``x``, ``float(x)`` delegates to ``x."
"__float__()``.  If ``__float__()`` is not defined then it falls back to :"
"meth:`__index__`."
msgstr ""
"Para um objeto Python genérico ``x``, ``float(x)`` delega para o método ``x."
"__float__()``. Se ``__float__()`` não estiver definido, então ele delega "
"para o método :meth:`__index__`."

#: ../../library/functions.rst:606
msgid "If no argument is given, ``0.0`` is returned."
msgstr "Se nenhum argumento for fornecido, será retornado ``0.0``."

#: ../../library/functions.rst:608
msgid "Examples::"
msgstr "Exemplos::"

#: ../../library/functions.rst:621
msgid "The float type is described in :ref:`typesnumeric`."
msgstr "O tipo float é descrito em :ref:`typesnumeric`."

#: ../../library/functions.rst:629
msgid "Falls back to :meth:`__index__` if :meth:`__float__` is not defined."
msgstr "Chamada para :meth:`__index__` se :meth:`__float__` não está definido."

#: ../../library/functions.rst:639
msgid ""
"Convert a *value* to a \"formatted\" representation, as controlled by "
"*format_spec*.  The interpretation of *format_spec* will depend on the type "
"of the *value* argument, however there is a standard formatting syntax that "
"is used by most built-in types: :ref:`formatspec`."
msgstr ""
"Converte um valor *value* em uma representação \"formatada\", controlado por "
"*format_spec*. A interpretação de *format_spec* dependerá do tipo do "
"argumento *value*, no entanto, há uma sintaxe de formatação padrão usada "
"pela maioria dos tipos embutidos: :ref:`formatspec`."

#: ../../library/functions.rst:644
msgid ""
"The default *format_spec* is an empty string which usually gives the same "
"effect as calling :func:`str(value) <str>`."
msgstr ""
"O *format_spec* padrão é uma string vazia que geralmente produz o mesmo "
"efeito que chamar :func:`str(value) <str>`."

#: ../../library/functions.rst:647
msgid ""
"A call to ``format(value, format_spec)`` is translated to ``type(value)."
"__format__(value, format_spec)`` which bypasses the instance dictionary when "
"searching for the value's :meth:`__format__` method.  A :exc:`TypeError` "
"exception is raised if the method search reaches :mod:`object` and the "
"*format_spec* is non-empty, or if either the *format_spec* or the return "
"value are not strings."
msgstr ""
"Uma chamada de ``format(value, format_spec)`` é convertida em ``type(value)."
"__format__(value, format_spec)``, que ignora o dicionário da instância ao "
"pesquisar o método :meth:`__format__` de ``value``. Uma exceção :exc:"
"`TypeError` é levantada se a pesquisa do método atingir :mod:`object` e o "
"*format_spec* não estiver vazio, ou se o *format_spec* ou o valor de retorno "
"não forem strings."

#: ../../library/functions.rst:654
msgid ""
"``object().__format__(format_spec)`` raises :exc:`TypeError` if "
"*format_spec* is not an empty string."
msgstr ""
"``object().__format__(format_spec)`` levanta um :exc:`TypeError` se "
"*format_spec* não for uma string vazia."

#: ../../library/functions.rst:663
msgid ""
"Return a new :class:`frozenset` object, optionally with elements taken from "
"*iterable*.  ``frozenset`` is a built-in class.  See :class:`frozenset` and :"
"ref:`types-set` for documentation about this class."
msgstr ""
"Devolve um novo objeto :class:`frozenset`, opcionalmente com elementos "
"obtidos de *iterable*. ``frozenset`` é uma classe embutida. Veja :class:"
"`frozenset` e :ref:`types-set` para documentação sobre essas classes."

#: ../../library/functions.rst:667
msgid ""
"For other containers see the built-in :class:`set`, :class:`list`, :class:"
"`tuple`, and :class:`dict` classes, as well as the :mod:`collections` module."
msgstr ""
"Para outros contêineres veja as classes embutidas :class:`set`, :class:"
"`list`, :class:`tuple`, e :class:`dict`, assim como o módulo :mod:"
"`collections`."

#: ../../library/functions.rst:674
msgid ""
"Return the value of the named attribute of *object*.  *name* must be a "
"string. If the string is the name of one of the object's attributes, the "
"result is the value of that attribute.  For example, ``getattr(x, "
"'foobar')`` is equivalent to ``x.foobar``.  If the named attribute does not "
"exist, *default* is returned if provided, otherwise :exc:`AttributeError` is "
"raised."
msgstr ""
"Devolve o valor do atributo *name* de *object*. *name* deve ser uma string. "
"Se a string é o nome de um dos atributos do objeto, o resultado é o valor de "
"tal atributo. Por exemplo, ``getattr(x, 'foobar')`` é equivalente a ``x."
"foobar``. Se o atributo não existir, *default* é devolvido se tiver sido "
"fornecido, caso contrário a exceção :exc:`AttributeError` é levantada."

#: ../../library/functions.rst:683
msgid ""
"Return a dictionary representing the current global symbol table. This is "
"always the dictionary of the current module (inside a function or method, "
"this is the module where it is defined, not the module from which it is "
"called)."
msgstr ""
"Devolve um dicionário representando a tabela de símbolos global atual. É "
"sempre o dicionário do módulo atual (dentro de uma função ou método, é o "
"módulo onde está definido, não o módulo do qual é chamado)."

#: ../../library/functions.rst:690
msgid ""
"The arguments are an object and a string.  The result is ``True`` if the "
"string is the name of one of the object's attributes, ``False`` if not. "
"(This is implemented by calling ``getattr(object, name)`` and seeing whether "
"it raises an :exc:`AttributeError` or not.)"
msgstr ""
"Os argumentos são um objeto e uma string. O resultado é ``True`` se a string "
"é o nome de um dos atributos do objeto, e ``False`` se ela não for. (Isto é "
"implementado chamando ``getattr(object, name)`` e vendo se levanta um :exc:"
"`AttributeError` ou não.)"

#: ../../library/functions.rst:698
msgid ""
"Return the hash value of the object (if it has one).  Hash values are "
"integers.  They are used to quickly compare dictionary keys during a "
"dictionary lookup.  Numeric values that compare equal have the same hash "
"value (even if they are of different types, as is the case for 1 and 1.0)."
msgstr ""
"Retorna o valor hash de um objeto (se houver um). Valores hash são números "
"inteiros. Eles são usados para rapidamente comparar chaves de dicionários "
"durante uma pesquisa em um dicionário. Valores numéricos que ao serem "
"comparados são iguais, possuem o mesmo valor hash (mesmo que eles sejam de "
"tipos diferentes, como é o caso de 1 e 1.0)."

#: ../../library/functions.rst:705
msgid ""
"For objects with custom :meth:`__hash__` methods, note that :func:`hash` "
"truncates the return value based on the bit width of the host machine. See :"
"meth:`__hash__` for details."
msgstr ""
"Para objetos com métodos :meth:`__hash__` personalizados, fique atento que :"
"func:`hash` trunca o valor devolvido baseado no comprimento de bits da "
"máquina hospedeira. Veja :meth:`__hash__` para mais detalhes."

#: ../../library/functions.rst:711
msgid ""
"Invoke the built-in help system.  (This function is intended for interactive "
"use.)  If no argument is given, the interactive help system starts on the "
"interpreter console.  If the argument is a string, then the string is looked "
"up as the name of a module, function, class, method, keyword, or "
"documentation topic, and a help page is printed on the console.  If the "
"argument is any other kind of object, a help page on the object is generated."
msgstr ""
"Invoca o sistema de ajuda embutido. (Esta função é destinada para uso "
"interativo.) Se nenhum argumento é passado, o sistema interativo de ajuda "
"inicia no interpretador do console. Se o argumento é uma string, então a "
"string é pesquisada como o nome de um módulo, função, classe, método, "
"palavra-chave, ou tópico de documentação, e a página de ajuda é exibida no "
"console. Se o argumento é qualquer outro tipo de objeto, uma página de ajuda "
"para o objeto é gerada."

#: ../../library/functions.rst:718
msgid ""
"Note that if a slash(/) appears in the parameter list of a function, when "
"invoking :func:`help`, it means that the parameters prior to the slash are "
"positional-only. For more info, see :ref:`the FAQ entry on positional-only "
"parameters <faq-positional-only-arguments>`."
msgstr ""
"Note que se uma barra(/) aparecer na lista de parâmetros de uma função, "
"quando invocando :func:`help`, significa que os parâmetros anteriores a "
"barra são apenas posicionais. Para mais informações, veja :ref:`the FAQ "
"entry on positional-only parameters <faq-positional-only-arguments>`."

#: ../../library/functions.rst:723
msgid ""
"This function is added to the built-in namespace by the :mod:`site` module."
msgstr ""
"Esta função é adicionada ao espaço de nomes embutido pelo módulo :mod:`site`."

#: ../../library/functions.rst:725
msgid ""
"Changes to :mod:`pydoc` and :mod:`inspect` mean that the reported signatures "
"for callables are now more comprehensive and consistent."
msgstr ""
"Mudanças em :mod:`pydoc` e :mod:`inspect` significam que as assinaturas "
"reportadas para chamáveis agora são mais compreensíveis e consistentes."

#: ../../library/functions.rst:732
msgid ""
"Convert an integer number to a lowercase hexadecimal string prefixed with "
"\"0x\". If *x* is not a Python :class:`int` object, it has to define an :"
"meth:`__index__` method that returns an integer. Some examples:"
msgstr ""
"Converte um número inteiro para uma string hexadecimal em letras minúsculas "
"pré-fixada com \"0x\". Se *x* não é um objeto :class:`int` do Python, ele "
"tem que definir um método :meth:`__index__` que retorne um inteiro. Alguns "
"exemplos:"

#: ../../library/functions.rst:741
msgid ""
"If you want to convert an integer number to an uppercase or lower "
"hexadecimal string with prefix or not, you can use either of the following "
"ways:"
msgstr ""
"Se você quer converter um número inteiro para uma string hexadecimal em "
"letras maiúsculas ou minúsculas, com prefixo ou sem, você pode usar qualquer "
"uma das seguintes maneiras:"

#: ../../library/functions.rst:753
msgid ""
"See also :func:`int` for converting a hexadecimal string to an integer using "
"a base of 16."
msgstr ""
"Veja também :func:`int` para converter uma string hexadecimal para um "
"inteiro usando a base 16."

#: ../../library/functions.rst:758
msgid ""
"To obtain a hexadecimal string representation for a float, use the :meth:"
"`float.hex` method."
msgstr ""
"Para obter uma string hexadecimal de um ponto flutuante, use o método :meth:"
"`float.hex`."

#: ../../library/functions.rst:764
msgid ""
"Return the \"identity\" of an object.  This is an integer which is "
"guaranteed to be unique and constant for this object during its lifetime. "
"Two objects with non-overlapping lifetimes may have the same :func:`id` "
"value."
msgstr ""
"Devolve a \"identidade\" de um objeto. Ele é um inteiro, o qual é garantido "
"que será único e constante para este objeto durante todo o seu ciclo de "
"vida. Dois objetos com ciclos de vida não sobrepostos podem ter o mesmo "
"valor para :func:`id`."

#: ../../library/functions.rst:771
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.id`` with argument "
"``id``."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``builtins.id`` com o "
"argumento ``id``."

#: ../../library/functions.rst:776
msgid ""
"If the *prompt* argument is present, it is written to standard output "
"without a trailing newline.  The function then reads a line from input, "
"converts it to a string (stripping a trailing newline), and returns that.  "
"When EOF is read, :exc:`EOFError` is raised.  Example::"
msgstr ""
"Se o argumento *prompt* estiver presente, escreve na saída padrão sem uma "
"nova linha ao final. A função então lê uma linha da fonte de entrada, "
"converte a mesma para uma string (removendo o caractere de nova linha ao "
"final), e devolve isso. Quando o final do arquivo (EOF / end-of-file) é "
"encontrado, um erro :exc:`EOFError` é levantado. Exemplo::"

#: ../../library/functions.rst:786
msgid ""
"If the :mod:`readline` module was loaded, then :func:`input` will use it to "
"provide elaborate line editing and history features."
msgstr ""
"Se o módulo :mod:`readline` foi carregado, então :func:`input` usará ele "
"para prover edição de linhas elaboradas e funcionalidades de histórico."

#: ../../library/functions.rstNone
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.input`` with argument "
"``prompt``."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``builtins.input`` com "
"argumento ``prompt``."

#: ../../library/functions.rst:791
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.input`` with argument "
"``prompt`` before reading input"
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``builtins.input`` com "
"argumento ``prompt`` antes de ler a entrada."

#: ../../library/functions.rstNone
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.input/result`` with "
"argument ``result``."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``builtins.input/result`` "
"com argumento ``result``."

#: ../../library/functions.rst:796
msgid ""
"Raises an auditing event ``builtins.input/result`` with the result after "
"successfully reading input."
msgstr ""
"Levanta um evento de auditoria ``builtins.input/result`` com o resultado "
"depois de ler a entrada com sucesso."

#: ../../library/functions.rst:803
msgid ""
"Return an integer object constructed from a number or string *x*, or return "
"``0`` if no arguments are given.  If *x* defines :meth:`__int__`, ``int(x)`` "
"returns ``x.__int__()``.  If *x* defines :meth:`__index__`, it returns ``x."
"__index__()``.  If *x* defines :meth:`__trunc__`, it returns ``x."
"__trunc__()``. For floating point numbers, this truncates towards zero."
msgstr ""
"Devolve um objeto inteiro construído a partir de um número ou string *x*, ou "
"devolve ``0`` se nenhum argumento foi fornecido. Se *x* definir um método :"
"meth:`__int__`, então ``int(x)`` retorna ``x.__int__()``. Se *x* definir um "
"método :meth:`__index__`, então ele retorna ``x.__index__()``. Se *x* "
"definir um método :meth:`__trunc__`, então ele retorna ``x.__trunc__()``. "
"Para números de ponto flutuante, isto trunca o número na direção do zero."

#: ../../library/functions.rst:810
msgid ""
"If *x* is not a number or if *base* is given, then *x* must be a string, :"
"class:`bytes`, or :class:`bytearray` instance representing an :ref:`integer "
"literal <integers>` in radix *base*.  Optionally, the literal can be "
"preceded by ``+`` or ``-`` (with no space in between) and surrounded by "
"whitespace.  A base-n literal consists of the digits 0 to n-1, with ``a`` to "
"``z`` (or ``A`` to ``Z``) having values 10 to 35.  The default *base* is 10. "
"The allowed values are 0 and 2--36. Base-2, -8, and -16 literals can be "
"optionally prefixed with ``0b``/``0B``, ``0o``/``0O``, or ``0x``/``0X``, as "
"with integer literals in code.  Base 0 means to interpret exactly as a code "
"literal, so that the actual base is 2, 8, 10, or 16, and so that "
"``int('010', 0)`` is not legal, while ``int('010')`` is, as well as "
"``int('010', 8)``."
msgstr ""
"Se *x* não é um número ou se *base* é fornecida, então *x* deve ser uma "
"string, instância de :class:`bytes` ou :class:`bytearray` representando um :"
"ref:`inteiro literal <integers>` em base *base*. Opcionalmente, o literal "
"pode ser precedido por ``+`` ou ``-`` (sem espaço entre eles) e cercado por "
"espaços em branco. Um literal base-n consiste de dígitos de 0 até n-1, com "
"``a`` até ``z`` (ou ``A`` até ``Z``) com valores de 10 até 35. A *base* "
"padrão é 10. Os valores permitidos são 0 e 2--36. Literais em base-2, -8, e "
"-16 podem ser opcionalmente prefixado com ``0b``/``0B``, ``0o``/``0O``, ou "
"``0x``/``0X``, assim como literais inteiros. Base 0 significa que será "
"interpretado exatamente como um literal, ou seja, as bases são, na verdade, "
"2, 8, 10, ou 16, e que ``int('010', 0)`` não é legal, enquanto "
"``int('010')`` é, assim como ``int('010', 8)``."

#: ../../library/functions.rst:823
msgid "The integer type is described in :ref:`typesnumeric`."
msgstr "O tipo inteiro está descrito em :ref:`typesnumeric`."

#: ../../library/functions.rst:825
msgid ""
"If *base* is not an instance of :class:`int` and the *base* object has a :"
"meth:`base.__index__ <object.__index__>` method, that method is called to "
"obtain an integer for the base.  Previous versions used :meth:`base.__int__ "
"<object.__int__>` instead of :meth:`base.__index__ <object.__index__>`."
msgstr ""
"Se *base* não é uma instância de :class:`int` e o objeto *base* tem um "
"método :meth:`base.__index__ <object.__index__>`, então esse método é "
"chamado para obter um inteiro para a base. Versões anteriores usavam :meth:"
"`base.__int__ <object.__int__>` ao invés de :meth:`base.__index__ <object."
"__index__>`."

#: ../../library/functions.rst:838
msgid "Falls back to :meth:`__index__` if :meth:`__int__` is not defined."
msgstr "Utiliza :meth:`__index__` caso :meth:`__int__` não seja definido."

#: ../../library/functions.rst:841
msgid ""
":class:`int` string inputs and string representations can be limited to help "
"avoid denial of service attacks. A :exc:`ValueError` is raised when the "
"limit is exceeded while converting a string *x* to an :class:`int` or when "
"converting an :class:`int` into a string would exceed the limit. See the :"
"ref:`integer string conversion length limitation <int_max_str_digits>` "
"documentation."
msgstr ""
"Entradas de strings :class:`int` e representações de strings podem ser "
"limitadas para ajudar a evitar ataques de negação de serviço. Uma exceção :"
"exc:`ValueError` é levantada quando o limite é excedido durante a conversão "
"de uma string *x* em um :class:`int` ou quando a conversão de um :class:"
"`int` em uma string excede o limite. Consulte a documentação sobre :ref:"
"`limitação de comprimento de conversão de string em inteiro "
"<int_max_str_digits>`."

#: ../../library/functions.rst:852
msgid ""
"Return ``True`` if the *object* argument is an instance of the *classinfo* "
"argument, or of a (direct, indirect or :term:`virtual <abstract base "
"class>`) subclass thereof.  If *object* is not an object of the given type, "
"the function always returns ``False``. If *classinfo* is a tuple of type "
"objects (or recursively, other such tuples), return ``True`` if *object* is "
"an instance of any of the types. If *classinfo* is not a type or tuple of "
"types and such tuples, a :exc:`TypeError` exception is raised."
msgstr ""
"Devolve ``True`` se o argumento *object* é uma instância do argumento "
"*classinfo*, ou de uma subclasse dele (direta, indireta ou :term:`virtual "
"<abstract base class>`). Se *object* não é um objeto do tipo dado, a função "
"sempre devolve ``False``. Se *classinfo* é uma tupla de tipos de objetos (ou "
"recursivamente, como outras tuplas), devolve ``True`` se *object* é uma "
"instância de qualquer um dos tipos. Se *classinfo* não é um tipo ou tupla de "
"tipos ou outras tuplas, é lançada uma exceção :exc:`TypeError`."

#: ../../library/functions.rst:864
msgid ""
"Return ``True`` if *class* is a subclass (direct, indirect or :term:`virtual "
"<abstract base class>`) of *classinfo*.  A class is considered a subclass of "
"itself. *classinfo* may be a tuple of class objects, in which case every "
"entry in *classinfo* will be checked. In any other case, a :exc:`TypeError` "
"exception is raised."
msgstr ""
"Devolve ``True`` se *class* é uma subclasse (direta, indireta ou :term:"
"`virtual <abstract base class>`) de *classinfo*. Uma classe é considerada "
"uma subclasse dela mesma. *classinfo* pode ser uma tupla de objetos de "
"classes, e neste caso cada entrada em *classinfo* será verificada. Em "
"qualquer outro caso, uma exceção do tipo :exc:`TypeError` é levantada."

#: ../../library/functions.rst:873
msgid ""
"Return an :term:`iterator` object.  The first argument is interpreted very "
"differently depending on the presence of the second argument. Without a "
"second argument, *object* must be a collection object which supports the "
"iteration protocol (the :meth:`__iter__` method), or it must support the "
"sequence protocol (the :meth:`__getitem__` method with integer arguments "
"starting at ``0``).  If it does not support either of those protocols, :exc:"
"`TypeError` is raised. If the second argument, *sentinel*, is given, then "
"*object* must be a callable object.  The iterator created in this case will "
"call *object* with no arguments for each call to its :meth:`~iterator."
"__next__` method; if the value returned is equal to *sentinel*, :exc:"
"`StopIteration` will be raised, otherwise the value will be returned."
msgstr ""
"Devolve um objeto :term:`iterador`. O primeiro argumento é interpretado "
"muito diferentemente dependendo da presença do segundo argumento. Sem um "
"segundo argumento, *object* deve ser uma coleção de objetos com suporte ao "
"protocolo de iteração (o método :meth:`__iter__`), ou ele deve ter suporte "
"ao protocolo de sequência (o método :meth:`__getitem__` com argumentos "
"inteiros começando em ``0``). Se ele não tem suporte nenhum desses "
"protocolos, um :exc:`TypeError` é levantado. Se o segundo argumento, "
"*sentinel*, é fornecido, então *object* deve ser um objeto chamável. O "
"iterador criado neste caso irá chamar *object* sem nenhum argumento para "
"cada chamada para o seu método :meth:`~iterator.__next__`; se o valor "
"devolvido é igual a *sentinel*, então :exc:`StopIteration` será levantado, "
"caso contrário o valor será devolvido."

#: ../../library/functions.rst:886
msgid "See also :ref:`typeiter`."
msgstr "Veja também :ref:`typeiter`."

#: ../../library/functions.rst:888
msgid ""
"One useful application of the second form of :func:`iter` is to build a "
"block-reader. For example, reading fixed-width blocks from a binary database "
"file until the end of file is reached::"
msgstr ""
"Uma aplicação útil da segunda forma de :func:`iter` é para construir um "
"bloco de leitura. Por exemplo, ler blocos de comprimento fixo de um arquivo "
"binário de banco de dados até que o final do arquivo seja atingido::"

#: ../../library/functions.rst:900
msgid ""
"Return the length (the number of items) of an object.  The argument may be a "
"sequence (such as a string, bytes, tuple, list, or range) or a collection "
"(such as a dictionary, set, or frozen set)."
msgstr ""
"Devolve o comprimento (o número de itens) de um objeto. O argumento pode ser "
"uma sequência (tal como uma string, bytes, tupla, lista, ou um intervalo) ou "
"uma coleção (tal como um dicionário, conjunto, ou conjunto imutável)."

#: ../../library/functions.rst:909
msgid ""
"Rather than being a function, :class:`list` is actually a mutable sequence "
"type, as documented in :ref:`typesseq-list` and :ref:`typesseq`."
msgstr ""
"Ao invés de ser uma função, :class:`list` é na verdade um tipo de sequência "
"mutável, conforme documentado em :ref:`typesseq-list` e :ref:`typesseq`."

#: ../../library/functions.rst:915
msgid ""
"Update and return a dictionary representing the current local symbol table. "
"Free variables are returned by :func:`locals` when it is called in function "
"blocks, but not in class blocks. Note that at the module level, :func:"
"`locals` and :func:`globals` are the same dictionary."
msgstr ""
"Atualiza e devolve um dicionário representando a tabela de símbolos locais "
"atual. Variáveis livres são devolvidas por :func:`locals` quando ele é "
"chamado em blocos de função, mas não em blocos de classes. Perceba que no "
"nível dos módulos, :func:`locals` e :func:`globals` são o mesmo dicionário."

#: ../../library/functions.rst:921
msgid ""
"The contents of this dictionary should not be modified; changes may not "
"affect the values of local and free variables used by the interpreter."
msgstr ""
"O conteúdo deste dicionário não deve ser modificado; as alterações podem não "
"afetar os valores das variáveis ​​locais e livres usadas pelo interpretador."

#: ../../library/functions.rst:926
msgid ""
"Return an iterator that applies *function* to every item of *iterable*, "
"yielding the results.  If additional *iterable* arguments are passed, "
"*function* must take that many arguments and is applied to the items from "
"all iterables in parallel.  With multiple iterables, the iterator stops when "
"the shortest iterable is exhausted.  For cases where the function inputs are "
"already arranged into argument tuples, see :func:`itertools.starmap`\\."
msgstr ""
"Devolve um iterador que aplica *function* para cada item de *iterable*, "
"gerando os resultados. Se argumentos *iterable* adicionais são passados, "
"*function* deve ter a mesma quantidade de argumentos e ela é aplicada aos "
"itens de todos os iteráveis em paralelo. Com múltiplos iteráveis, o iterador "
"para quando o iterador mais curto é encontrado. Para casos onde os "
"parâmetros de entrada da função já estão organizados em tuplas, veja :func:"
"`itertools.starmap`\\."

#: ../../library/functions.rst:937
msgid ""
"Return the largest item in an iterable or the largest of two or more "
"arguments."
msgstr ""
"Devolve o maior item em um iterável ou o maior de dois ou mais argumentos."

#: ../../library/functions.rst:940
msgid ""
"If one positional argument is provided, it should be an :term:`iterable`. "
"The largest item in the iterable is returned.  If two or more positional "
"arguments are provided, the largest of the positional arguments is returned."
msgstr ""
"Se um argumento posicional é fornecido, ele deve ser um :term:`iterável`. O "
"maior item no iterável é retornado. Se dois ou mais argumentos posicionais "
"são fornecidos, o maior dos argumentos posicionais é devolvido."

#: ../../library/functions.rst:945 ../../library/functions.rst:982
msgid ""
"There are two optional keyword-only arguments. The *key* argument specifies "
"a one-argument ordering function like that used for :meth:`list.sort`. The "
"*default* argument specifies an object to return if the provided iterable is "
"empty. If the iterable is empty and *default* is not provided, a :exc:"
"`ValueError` is raised."
msgstr ""
"Existem dois parâmetros somente-nomeados opcionais. O parâmetro *key* "
"especifica uma função de ordenamento de um argumento, como aquelas usadas "
"por :meth:`list.sort`. O parâmetro *default* especifica um objeto a ser "
"devolvido se o iterável fornecido estiver vazio. Se o iterável estiver "
"vazio, e *default* não foi fornecido, uma exceção :exc:`ValueError` é "
"levantada."

#: ../../library/functions.rst:951
msgid ""
"If multiple items are maximal, the function returns the first one "
"encountered.  This is consistent with other sort-stability preserving tools "
"such as ``sorted(iterable, key=keyfunc, reverse=True)[0]`` and ``heapq."
"nlargest(1, iterable, key=keyfunc)``."
msgstr ""
"Se múltiplos itens são máximos, a função devolve o primeiro encontrado. Isto "
"é consistente com outras ferramentas de ordenamento que preservam a "
"estabilidade, tais como ``sorted(iterable, key=keyfunc, reverse=True)[0]`` e "
"``heapq.nlargest(1, iterable, key=keyfunc)``."

#: ../../library/functions.rst:956 ../../library/functions.rst:993
msgid "The *default* keyword-only argument."
msgstr "O parâmetro somente-nomeado *default*."

#: ../../library/functions.rst:959 ../../library/functions.rst:996
msgid "The *key* can be ``None``."
msgstr "O valor de *key* pode ser ``None``."

#: ../../library/functions.rst:967
msgid ""
"Return a \"memory view\" object created from the given argument.  See :ref:"
"`typememoryview` for more information."
msgstr ""
"Devolve um objeto de \"visão da memória\" criado a partir do argumento "
"fornecido. Veja :ref:`typememoryview` para mais informações."

#: ../../library/functions.rst:974
msgid ""
"Return the smallest item in an iterable or the smallest of two or more "
"arguments."
msgstr ""
"Devolve o menor item de um iterável ou o menor de dois ou mais argumentos."

#: ../../library/functions.rst:977
msgid ""
"If one positional argument is provided, it should be an :term:`iterable`. "
"The smallest item in the iterable is returned.  If two or more positional "
"arguments are provided, the smallest of the positional arguments is returned."
msgstr ""
"Se um argumento posicional é fornecido, ele deve ser um :term:`iterável`. O "
"menor item no iterável é devolvido. Se dois ou mais argumentos posicionais "
"são fornecidos, o menor dos argumentos posicionais é devolvido."

#: ../../library/functions.rst:988
msgid ""
"If multiple items are minimal, the function returns the first one "
"encountered.  This is consistent with other sort-stability preserving tools "
"such as ``sorted(iterable, key=keyfunc)[0]`` and ``heapq.nsmallest(1, "
"iterable, key=keyfunc)``."
msgstr ""
"Se múltiplos itens são mínimos, a função devolve o primeiro encontrado. Isto "
"é consistente com outras ferramentas de ordenamento que preservam a "
"estabilidade, tais como ``sorted(iterable, key=keyfunc)[0]`` e ``heapq."
"nsmallest(1, iterable, key=keyfunc)``."

#: ../../library/functions.rst:1002
msgid ""
"Retrieve the next item from the *iterator* by calling its :meth:`~iterator."
"__next__` method.  If *default* is given, it is returned if the iterator is "
"exhausted, otherwise :exc:`StopIteration` is raised."
msgstr ""
"Recupera o próximo item do *iterator* chamando o seu método :meth:`~iterator."
"__next__`. Se *default* foi fornecido, ele é devolvido caso o iterável tenha "
"sido percorrido por completo, caso contrário :exc:`StopIteration` é "
"levantada."

#: ../../library/functions.rst:1009
msgid ""
"Return a new featureless object.  :class:`object` is a base for all classes. "
"It has the methods that are common to all instances of Python classes.  This "
"function does not accept any arguments."
msgstr ""
"Devolve um novo objeto sem funcionalidades. :class:`object` é a classe base "
"para todas as classes. Ela tem os métodos que são comuns para todas as "
"instâncias de classes Python. Esta função não aceita nenhum argumento."

#: ../../library/functions.rst:1015
msgid ""
":class:`object` does *not* have a :attr:`~object.__dict__`, so you can't "
"assign arbitrary attributes to an instance of the :class:`object` class."
msgstr ""
":class:`object` *não* tem um atributo :attr:`~object.__dict__`, então você "
"não consegue definir atributos arbitrários para uma instância da classe :"
"class:`object`."

#: ../../library/functions.rst:1021
msgid ""
"Convert an integer number to an octal string prefixed with \"0o\".  The "
"result is a valid Python expression. If *x* is not a Python :class:`int` "
"object, it has to define an :meth:`__index__` method that returns an "
"integer. For example:"
msgstr ""
"Converte um número inteiro para uma string em base octal, pré-fixada com "
"\"0o\". O resultado é uma expressão Python válida. Se *x* não for um objeto :"
"class:`int` Python, ele tem que definir um método :meth:`__index__` que "
"devolve um inteiro. Por exemplo:"

#: ../../library/functions.rst:1031
msgid ""
"If you want to convert an integer number to octal string either with prefix "
"\"0o\" or not, you can use either of the following ways."
msgstr ""
"Se você quiser converter um número inteiro para uma string octal, com o "
"prefixo \"0o\" ou não, você pode usar qualquer uma das formas a seguir."

#: ../../library/functions.rst:1048
msgid ""
"Open *file* and return a corresponding :term:`file object`.  If the file "
"cannot be opened, an :exc:`OSError` is raised. See :ref:`tut-files` for more "
"examples of how to use this function."
msgstr ""
"Abre *file* e retorna um :term:`objeto arquivo` correspondente. Se o arquivo "
"não puder ser aberto, uma :exc:`OSError` é levantada. Veja :ref:`tut-files` "
"para mais exemplos de como usar esta função."

#: ../../library/functions.rst:1052
msgid ""
"*file* is a :term:`path-like object` giving the pathname (absolute or "
"relative to the current working directory) of the file to be opened or an "
"integer file descriptor of the file to be wrapped.  (If a file descriptor is "
"given, it is closed when the returned I/O object is closed, unless *closefd* "
"is set to ``False``.)"
msgstr ""
"*file* é um :term:`objeto caminho ou similar` fornecendo o caminho (absoluto "
"ou relativo ao diretório de trabalho atual) do arquivo que será aberto, ou "
"de um inteiro descritor de arquivo a ser manipulado (Se um descritor de "
"arquivo é fornecido, ele é fechado quando o objeto de I/O retornado é "
"fechado, a não ser que *closefd* esteja marcado como ``False``)."

#: ../../library/functions.rst:1058
msgid ""
"*mode* is an optional string that specifies the mode in which the file is "
"opened.  It defaults to ``'r'`` which means open for reading in text mode. "
"Other common values are ``'w'`` for writing (truncating the file if it "
"already exists), ``'x'`` for exclusive creation and ``'a'`` for appending "
"(which on *some* Unix systems, means that *all* writes append to the end of "
"the file regardless of the current seek position).  In text mode, if "
"*encoding* is not specified the encoding used is platform dependent: "
"``locale.getpreferredencoding(False)`` is called to get the current locale "
"encoding. (For reading and writing raw bytes use binary mode and leave "
"*encoding* unspecified.)  The available modes are:"
msgstr ""
"*mode* é uma string opcional que especifica o modo no qual o arquivo é "
"aberto. O valor padrão é ``'r'``, o qual significa abrir para leitura em "
"modo texto. Outros valores comuns são ``'w'`` para escrever (truncando o "
"arquivo se ele já existe), ``'x'`` para criação exclusiva e ``'a'`` para "
"anexar (o qual em *alguns* sistemas Unix, significa que *todas* as escritas "
"anexam ao final do arquivo independentemente da posição de busca atual). No "
"modo texto, se *encoding* não for especificada, a codificação usada é "
"independente de plataforma: ``locale.getpreferredencoding(False)`` é chamada "
"para obter a codificação da localidade atual (Para ler e escrever bytes "
"diretamente, use o modo binário e não especifique *encoding*). Os modos "
"disponíveis são:"

#: ../../library/functions.rst:1075
msgid "Character"
msgstr "Caractere"

#: ../../library/functions.rst:1075
msgid "Meaning"
msgstr "Significado"

#: ../../library/functions.rst:1077
msgid "``'r'``"
msgstr "``'r'``"

#: ../../library/functions.rst:1077
msgid "open for reading (default)"
msgstr "abre para leitura (padrão)"

#: ../../library/functions.rst:1078
msgid "``'w'``"
msgstr "``'w'``"

#: ../../library/functions.rst:1078
msgid "open for writing, truncating the file first"
msgstr ""
"abre para escrita, truncando o arquivo primeiro (removendo tudo o que "
"estiver contido no mesmo)"

#: ../../library/functions.rst:1079
msgid "``'x'``"
msgstr "``'x'``"

#: ../../library/functions.rst:1079
msgid "open for exclusive creation, failing if the file already exists"
msgstr "abre para criação exclusiva, falhando caso o arquivo exista"

#: ../../library/functions.rst:1080
msgid "``'a'``"
msgstr "``'a'``"

#: ../../library/functions.rst:1080
msgid "open for writing, appending to the end of the file if it exists"
msgstr "abre para escrita, anexando ao final do arquivo caso o mesmo exista"

#: ../../library/functions.rst:1081
msgid "``'b'``"
msgstr "``'b'``"

#: ../../library/functions.rst:1081
msgid "binary mode"
msgstr "modo binário"

#: ../../library/functions.rst:1082
msgid "``'t'``"
msgstr "``'t'``"

#: ../../library/functions.rst:1082
msgid "text mode (default)"
msgstr "modo texto (padrão)"

#: ../../library/functions.rst:1083
msgid "``'+'``"
msgstr "``'+'``"

#: ../../library/functions.rst:1083
msgid "open for updating (reading and writing)"
msgstr "aberto para atualização (leitura e escrita)"

#: ../../library/functions.rst:1086
msgid ""
"The default mode is ``'r'`` (open for reading text, synonym of ``'rt'``). "
"Modes ``'w+'`` and ``'w+b'`` open and truncate the file.  Modes ``'r+'`` and "
"``'r+b'`` open the file with no truncation."
msgstr ""
"O modo padrão é ``'r'`` (abre para leitura de texto, sinônimo de ``'rt'``). "
"Modos ``'w+'`` e ``'w+b'`` abrem e truncam o arquivo. Modos ``'r+'`` e "
"``'r+b'`` abrem o arquivo sem truncar o mesmo."

#: ../../library/functions.rst:1090
msgid ""
"As mentioned in the :ref:`io-overview`, Python distinguishes between binary "
"and text I/O.  Files opened in binary mode (including ``'b'`` in the *mode* "
"argument) return contents as :class:`bytes` objects without any decoding.  "
"In text mode (the default, or when ``'t'`` is included in the *mode* "
"argument), the contents of the file are returned as :class:`str`, the bytes "
"having been first decoded using a platform-dependent encoding or using the "
"specified *encoding* if given."
msgstr ""
"Conforme mencionado em :ref:`io-overview`, Python diferencia entre entrada/"
"saída binária e de texto. Arquivos abertos em modo binário (incluindo "
"``'b'`` no parâmetro *mode*) retornam o conteúdo como objetos :class:`bytes` "
"sem usar nenhuma decodificação. No modo texto (o padrão, ou quando ``'t'`` é "
"incluído no parâmetro *mode*), o conteúdo do arquivo é retornado como :class:"
"`str`, sendo os bytes primeiramente decodificados usando uma codificação "
"dependente da plataforma, ou usando a codificação definida em *encoding* se "
"fornecida."

#: ../../library/functions.rst:1098
msgid ""
"There is an additional mode character permitted, ``'U'``, which no longer "
"has any effect, and is considered deprecated. It previously enabled :term:"
"`universal newlines` in text mode, which became the default behaviour in "
"Python 3.0. Refer to the documentation of the :ref:`newline <open-newline-"
"parameter>` parameter for further details."
msgstr ""
"Existe um modo de caractere adicional permitido, ``'U'``, o qual não tem "
"mais nenhum efeito, e é considerado como descontinuado. Ele anteriormente "
"habilitava :term:`novas linhas universais` no modo texto, o que se tornou o "
"comportamento padrão no Python 3.0. Consulte a documentação do parâmetro :"
"ref:`newline <open-newline-parameter>` para maiores detalhes."

#: ../../library/functions.rst:1106
msgid ""
"Python doesn't depend on the underlying operating system's notion of text "
"files; all the processing is done by Python itself, and is therefore "
"platform-independent."
msgstr ""
"Python não depende da noção básica do sistema operacional sobre arquivos de "
"texto; todo processamento é feito pelo próprio Python, e é então "
"independente de plataforma."

#: ../../library/functions.rst:1110
msgid ""
"*buffering* is an optional integer used to set the buffering policy.  Pass 0 "
"to switch buffering off (only allowed in binary mode), 1 to select line "
"buffering (only usable in text mode), and an integer > 1 to indicate the "
"size in bytes of a fixed-size chunk buffer.  When no *buffering* argument is "
"given, the default buffering policy works as follows:"
msgstr ""
"*buffering* é um inteiro opcional usado para definir a política de "
"buffering. Passe o valor 0 para desativar o buffering (permitido somente em "
"modo binário), passe 1 para selecionar buffering de linha (permitido somente "
"em modo texto), e um inteiro > 1 para indicar o tamanho em bytes de um "
"buffer com tamanho fixo. Quando nenhum valor é fornecido no argumento "
"*buffering*, a política de buffering padrão funciona conforme as seguintes "
"regras:"

#: ../../library/functions.rst:1116
msgid ""
"Binary files are buffered in fixed-size chunks; the size of the buffer is "
"chosen using a heuristic trying to determine the underlying device's \"block "
"size\" and falling back on :attr:`io.DEFAULT_BUFFER_SIZE`.  On many systems, "
"the buffer will typically be 4096 or 8192 bytes long."
msgstr ""
"Arquivos binários são armazenados em pedaços de tamanho fixo; o tamanho do "
"buffer é escolhido usando uma heurística que tenta determinar o \"tamanho de "
"bloco\" subjacente do dispositivo, e usa :attr:`io.DEFAULT_BUFFER_SIZE` caso "
"não consiga. Em muitos sistemas, o buffer possuirá tipicamente 4096 ou 8192 "
"bytes de comprimento."

#: ../../library/functions.rst:1121
msgid ""
"\"Interactive\" text files (files for which :meth:`~io.IOBase.isatty` "
"returns ``True``) use line buffering.  Other text files use the policy "
"described above for binary files."
msgstr ""
"Arquivos de texto \"interativos\" (arquivos para os quais :meth:`~io.IOBase."
"isatty` retornam ``True``) usam buffering de linha. Outros arquivos de texto "
"usam a política descrita acima para arquivos binários."

#: ../../library/functions.rst:1125
msgid ""
"*encoding* is the name of the encoding used to decode or encode the file. "
"This should only be used in text mode.  The default encoding is platform "
"dependent (whatever :func:`locale.getpreferredencoding` returns), but any :"
"term:`text encoding` supported by Python can be used.  See the :mod:`codecs` "
"module for the list of supported encodings."
msgstr ""
"*encoding* é o nome da codificação usada para codificar ou decodificar o "
"arquivo. Isto deve ser usado apenas no modo texto. A codificação padrão "
"depende da plataforma (seja qual valor :func:`locale.getpreferredencoding` "
"retornar), mas qualquer :term:`codificador de texto` suportado pelo Python "
"pode ser usada. Veja o módulo :mod:`codecs` para a lista de codificações "
"suportadas."

#: ../../library/functions.rst:1132
msgid ""
"*errors* is an optional string that specifies how encoding and decoding "
"errors are to be handled—this cannot be used in binary mode. A variety of "
"standard error handlers are available (listed under :ref:`error-handlers`), "
"though any error handling name that has been registered with :func:`codecs."
"register_error` is also valid.  The standard names include:"
msgstr ""
"*errors* é uma string opcional que especifica como erros de codificação e de "
"decodificação devem ser tratados — isso não pode ser utilizado no modo "
"binário. Uma variedade de tratadores de erro padrão estão disponíveis "
"(listados em :ref:`error-handlers`), apesar que qualquer nome para "
"tratamento de erro registrado com :func:`codecs.register_error` também é "
"válido. Os nomes padrões incluem:"

#: ../../library/functions.rst:1140
msgid ""
"``'strict'`` to raise a :exc:`ValueError` exception if there is an encoding "
"error.  The default value of ``None`` has the same effect."
msgstr ""
"``'strict'`` para levantar uma exceção :exc:`ValueError` se existir um erro "
"de codificação. O valor padrão ``None`` tem o mesmo efeito."

#: ../../library/functions.rst:1144
msgid ""
"``'ignore'`` ignores errors.  Note that ignoring encoding errors can lead to "
"data loss."
msgstr ""
"``'ignore'`` ignora erros. Note que ignorar erros de código pode levar à "
"perda de dados."

#: ../../library/functions.rst:1147
msgid ""
"``'replace'`` causes a replacement marker (such as ``'?'``) to be inserted "
"where there is malformed data."
msgstr ""
"``'replace'`` faz um marcador de substituição (tal como ``'?'``) ser "
"inserido onde existem dados malformados."

#: ../../library/functions.rst:1150
msgid ""
"``'surrogateescape'`` will represent any incorrect bytes as code points in "
"the Unicode Private Use Area ranging from U+DC80 to U+DCFF.  These private "
"code points will then be turned back into the same bytes when the "
"``surrogateescape`` error handler is used when writing data.  This is useful "
"for processing files in an unknown encoding."
msgstr ""
"``'surrogateescape'`` representará quaisquer bytes incorretos, conforme "
"códigos apontados na área privada de uso da tabela Unicode, indo desde "
"U+DC80 até U+DCFF. Esses códigos privados serão então convertidos de volta "
"para os mesmos bytes quando o tratamento de erro para ``surrogateescape`` é "
"usado ao escrever dados. Isto é útil para processar arquivos com uma "
"codificação desconhecida."

#: ../../library/functions.rst:1157
msgid ""
"``'xmlcharrefreplace'`` is only supported when writing to a file. Characters "
"not supported by the encoding are replaced with the appropriate XML "
"character reference ``&#nnn;``."
msgstr ""
"``'xmlcharrefreplace'`` é suportado apenas ao gravar em um arquivo. Os "
"caracteres não suportados pela codificação são substituídos pela referência "
"de caracteres XML apropriada ``&#nnn;``."

#: ../../library/functions.rst:1161
msgid ""
"``'backslashreplace'`` replaces malformed data by Python's backslashed "
"escape sequences."
msgstr ""
"``'backslashreplace'`` substitui dados malformados pela sequência de escape "
"utilizando contrabarra do Python."

#: ../../library/functions.rst:1164
msgid ""
"``'namereplace'`` (also only supported when writing) replaces unsupported "
"characters with ``\\N{...}`` escape sequences."
msgstr ""
"``'namereplace'`` (também é suportado somente quando estiver escrevendo) "
"substitui caractere não suportados com sequências de escape ``\\N{...}``."

#: ../../library/functions.rst:1172
msgid ""
"*newline* controls how :term:`universal newlines` mode works (it only "
"applies to text mode).  It can be ``None``, ``''``, ``'\\n'``, ``'\\r'``, "
"and ``'\\r\\n'``.  It works as follows:"
msgstr ""
"*newline* controla como o modo de :term:`novas linhas universais <universal "
"newlines>` funciona (se aplica apenas ao modo texto). Ele pode ser ``None``, "
"``''``, ``'\\n'``, ``'\\r'`` e ``'\\r\\n'``. Ele funciona da seguinte forma:"

#: ../../library/functions.rst:1176
msgid ""
"When reading input from the stream, if *newline* is ``None``, universal "
"newlines mode is enabled.  Lines in the input can end in ``'\\n'``, "
"``'\\r'``, or ``'\\r\\n'``, and these are translated into ``'\\n'`` before "
"being returned to the caller.  If it is ``''``, universal newlines mode is "
"enabled, but line endings are returned to the caller untranslated.  If it "
"has any of the other legal values, input lines are only terminated by the "
"given string, and the line ending is returned to the caller untranslated."
msgstr ""
"Ao ler a entrada do fluxo, se *newline* for ``None``, o modo universal de "
"novas linhas será ativado. As linhas na entrada podem terminar em ``'\\n'``, "
"``'\\r'`` ou ``'\\r\\n'``, e são traduzidas para ``'\\n'`` antes de retornar "
"ao chamador. Se for ``''``, o modo de novas linhas universais será ativado, "
"mas as terminações de linha serão retornadas ao chamador sem tradução. Se "
"houver algum dos outros valores legais, as linhas de entrada são finalizadas "
"apenas pela string especificada e a finalização da linha é retornada ao "
"chamador sem tradução."

#: ../../library/functions.rst:1184
msgid ""
"When writing output to the stream, if *newline* is ``None``, any ``'\\n'`` "
"characters written are translated to the system default line separator, :"
"data:`os.linesep`.  If *newline* is ``''`` or ``'\\n'``, no translation "
"takes place.  If *newline* is any of the other legal values, any ``'\\n'`` "
"characters written are translated to the given string."
msgstr ""
"Ao gravar a saída no fluxo, se *newline* for ``None``, quaisquer caracteres "
"``'\\n'`` gravados serão traduzidos para o separador de linhas padrão do "
"sistema, :data:`os.linesep`. Se *newline* for ``''`` ou ``'\\n'``, nenhuma "
"tradução ocorrerá. Se *newline* for um dos outros valores legais, qualquer "
"caractere ``'\\n'`` escrito será traduzido para a string especificada."

#: ../../library/functions.rst:1190
msgid ""
"If *closefd* is ``False`` and a file descriptor rather than a filename was "
"given, the underlying file descriptor will be kept open when the file is "
"closed.  If a filename is given *closefd* must be ``True`` (the default) "
"otherwise an error will be raised."
msgstr ""
"Se *closefd* for ``False`` e um descritor de arquivo em vez de um nome de "
"arquivo for fornecido, o descritor de arquivo subjacente será mantido aberto "
"quando o arquivo for fechado. Se um nome de arquivo for fornecido *closefd* "
"deve ser ``True`` (o padrão), caso contrário, um erro será levantado."

#: ../../library/functions.rst:1195
msgid ""
"A custom opener can be used by passing a callable as *opener*. The "
"underlying file descriptor for the file object is then obtained by calling "
"*opener* with (*file*, *flags*). *opener* must return an open file "
"descriptor (passing :mod:`os.open` as *opener* results in functionality "
"similar to passing ``None``)."
msgstr ""
"Um abridor personalizado pode ser usado passando um chamável como *opener*. "
"O descritor de arquivo subjacente para o objeto arquivo é obtido chamando "
"*opener* com (*file*, *flags*). *opener* deve retornar um descritor de "
"arquivo aberto (passando :mod:`os.open` como *opener* resulta em "
"funcionalidade semelhante à passagem de ``None``)."

#: ../../library/functions.rst:1201
msgid "The newly created file is :ref:`non-inheritable <fd_inheritance>`."
msgstr "O arquivo recém-criado é :ref:`non-inheritable <fd_inheritance>`."

#: ../../library/functions.rst:1203
msgid ""
"The following example uses the :ref:`dir_fd <dir_fd>` parameter of the :func:"
"`os.open` function to open a file relative to a given directory::"
msgstr ""
"O exemplo a seguir usa o parâmetro :ref:`dir_fd <dir_fd>` da função :func:"
"`os.open` para abrir um arquivo relativo a um determinado diretório::"

#: ../../library/functions.rst:1216
msgid ""
"The type of :term:`file object` returned by the :func:`open` function "
"depends on the mode.  When :func:`open` is used to open a file in a text "
"mode (``'w'``, ``'r'``, ``'wt'``, ``'rt'``, etc.), it returns a subclass of :"
"class:`io.TextIOBase` (specifically :class:`io.TextIOWrapper`).  When used "
"to open a file in a binary mode with buffering, the returned class is a "
"subclass of :class:`io.BufferedIOBase`.  The exact class varies: in read "
"binary mode, it returns an :class:`io.BufferedReader`; in write binary and "
"append binary modes, it returns an :class:`io.BufferedWriter`, and in read/"
"write mode, it returns an :class:`io.BufferedRandom`.  When buffering is "
"disabled, the raw stream, a subclass of :class:`io.RawIOBase`, :class:`io."
"FileIO`, is returned."
msgstr ""
"O tipo de :term:`objeto arquivo <file object>` retornado pela função :func:"
"`open` depende do modo. Quando :func:`open` é usado para abrir um arquivo no "
"modo texto (``'w'``, ``'r'``, ``'wt'``, ``'rt'``, etc.), retorna uma "
"subclasse de :class:`io.TextIOBase` (especificamente :class:`io."
"TextIOWrapper`). Quando usada para abrir um arquivo em modo binário com "
"buffer, a classe retornada é uma subclasse de :class:`io.BufferedIOBase`. A "
"classe exata varia: no modo binário de leitura, ele retorna uma :class:`io."
"BufferedReader`; nos modos binário de gravação e binário anexado, ele "
"retorna um :class:`io.BufferedWriter` e, no modo leitura/gravação, retorna "
"um :class:`io.BufferedRandom`. Quando o buffer está desativado, o fluxo "
"bruto, uma subclasse de :class:`io.RawIOBase`, :class:`io.FileIO`, é "
"retornado."

#: ../../library/functions.rst:1237
msgid ""
"See also the file handling modules, such as, :mod:`fileinput`, :mod:`io` "
"(where :func:`open` is declared), :mod:`os`, :mod:`os.path`, :mod:"
"`tempfile`, and :mod:`shutil`."
msgstr ""
"Veja também os módulos de para lidar com arquivos, tais como, :mod:"
"`fileinput`, :mod:`io` (onde :func:`open` é declarado), :mod:`os`, :mod:`os."
"path`, :mod:`tempfile`, e :mod:`shutil`."

#: ../../library/functions.rst:1242
msgid ""
"Raises an :ref:`auditing event <auditing>` ``open`` with arguments ``file``, "
"``mode``, ``flags``."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``open`` com os argumentos "
"``file``, ``mode``, ``flags``."

#: ../../library/functions.rst:1243
msgid ""
"The ``mode`` and ``flags`` arguments may have been modified or inferred from "
"the original call."
msgstr ""
"Os argumentos ``mode`` e ``flags`` podem ter sido modificados ou inferidos a "
"partir da chamada original."

#: ../../library/functions.rst:1249
msgid "The *opener* parameter was added."
msgstr "O parâmetro *opener* foi adicionado."

#: ../../library/functions.rst:1250
msgid "The ``'x'`` mode was added."
msgstr "O modo ``'x'`` foi adicionado."

#: ../../library/functions.rst:1251
msgid ":exc:`IOError` used to be raised, it is now an alias of :exc:`OSError`."
msgstr ""
":exc:`IOError` costumava ser levantado, agora ele é um codinome para :exc:"
"`OSError`."

#: ../../library/functions.rst:1252
msgid ""
":exc:`FileExistsError` is now raised if the file opened in exclusive "
"creation mode (``'x'``) already exists."
msgstr ""
":exc:`FileExistsError` agora é levantado se o arquivo aberto no modo de "
"criação exclusivo (``'x'``) já existir."

#: ../../library/functions.rst:1258
msgid "The file is now non-inheritable."
msgstr "O arquivo agora é não herdável."

#: ../../library/functions.rst:1262
msgid "The ``'U'`` mode."
msgstr "O modo ``'U'``."

#: ../../library/functions.rst:1267
msgid ""
"If the system call is interrupted and the signal handler does not raise an "
"exception, the function now retries the system call instead of raising an :"
"exc:`InterruptedError` exception (see :pep:`475` for the rationale)."
msgstr ""
"Se a chamada de sistema é interrompida e o tratador de sinal não levanta uma "
"exceção, a função agora tenta novamente a chamada de sistema em vez de "
"levantar uma exceção :exc:`InterruptedError` (consulte :pep:`475` para "
"entender a justificativa)."

#: ../../library/functions.rst:1270
msgid "The ``'namereplace'`` error handler was added."
msgstr "O tratador de erros ``'namereplace'`` foi adicionado."

#: ../../library/functions.rst:1275
msgid "Support added to accept objects implementing :class:`os.PathLike`."
msgstr ""
"Suporte adicionado para aceitar objetos implementados :class:`os.PathLike`."

#: ../../library/functions.rst:1276
msgid ""
"On Windows, opening a console buffer may return a subclass of :class:`io."
"RawIOBase` other than :class:`io.FileIO`."
msgstr ""
"No Windows, a abertura de um buffer do console pode retornar uma subclasse "
"de :class:`io.RawIOBase` que não seja :class:`io.FileIO`."

#: ../../library/functions.rst:1281
msgid ""
"Given a string representing one Unicode character, return an integer "
"representing the Unicode code point of that character.  For example, "
"``ord('a')`` returns the integer ``97`` and ``ord('€')`` (Euro sign) returns "
"``8364``.  This is the inverse of :func:`chr`."
msgstr ""
"Dada uma string que representa um caractere Unicode, retorna um número "
"inteiro representando o ponto de código Unicode desse caractere. Por "
"exemplo, ``ord('a')`` retorna o número inteiro ``97`` e ``ord('€')`` (sinal "
"do Euro) retorna ``8364``. Este é o inverso de :func:`chr`."

#: ../../library/functions.rst:1289
msgid ""
"Return *base* to the power *exp*; if *mod* is present, return *base* to the "
"power *exp*, modulo *mod* (computed more efficiently than ``pow(base, exp) % "
"mod``). The two-argument form ``pow(base, exp)`` is equivalent to using the "
"power operator: ``base**exp``."
msgstr ""
"Retorna *base* à potência de *exp*; se *mod* estiver presente, retorna "
"*base* à potência *exp*, módulo *mod* (calculado com mais eficiência do que "
"``pow(base, exp) % mod``). A forma de dois argumentos ``pow(base, exp)`` é "
"equivalente a usar o operador de potência: ``base**exp``."

#: ../../library/functions.rst:1294
msgid ""
"The arguments must have numeric types.  With mixed operand types, the "
"coercion rules for binary arithmetic operators apply.  For :class:`int` "
"operands, the result has the same type as the operands (after coercion) "
"unless the second argument is negative; in that case, all arguments are "
"converted to float and a float result is delivered.  For example, ``10**2`` "
"returns ``100``, but ``10**-2`` returns ``0.01``."
msgstr ""
"Os argumentos devem ter tipos numéricos. Com tipos de operandos mistos, "
"aplicam-se as regras de coerção para operadores aritméticos binários. Para "
"operandos :class:`int`, o resultado tem o mesmo tipo que os operandos (após "
"coerção), a menos que o segundo argumento seja negativo; nesse caso, todos "
"os argumentos são convertidos em ponto flutuante e um resultado ponto "
"flutuante é entregue. Por exemplo, ``10**2`` retorna ``100``, mas ``10**-2`` "
"retorna ``0.01``."

#: ../../library/functions.rst:1301
msgid ""
"For :class:`int` operands *base* and *exp*, if *mod* is present, *mod* must "
"also be of integer type and *mod* must be nonzero. If *mod* is present and "
"*exp* is negative, *base* must be relatively prime to *mod*. In that case, "
"``pow(inv_base, -exp, mod)`` is returned, where *inv_base* is an inverse to "
"*base* modulo *mod*."
msgstr ""
"Para operandos :class:`int` *base* e *exp*, se *mod* estiver presente, *mod* "
"também deve ser do tipo inteiro e *mod* deve ser diferente de zero. Se *mod* "
"estiver presente e *exp* for negativo, *base* deve ser relativamente primo "
"para *mod*. Nesse caso, ``pow(inv_base, -exp, mod)`` é retornado, onde "
"*inv_base* é um inverso ao *base* módulo *mod*."

#: ../../library/functions.rst:1307
msgid "Here's an example of computing an inverse for ``38`` modulo ``97``::"
msgstr ""
"Aqui está um exemplo de computação de um inverso para ``38`` módulo ``97``::"

#: ../../library/functions.rst:1314
msgid ""
"For :class:`int` operands, the three-argument form of ``pow`` now allows the "
"second argument to be negative, permitting computation of modular inverses."
msgstr ""
"Para operandos :class:`int`, a forma de três argumentos de ``pow`` agora "
"permite que o segundo argumento seja negativo, permitindo o cálculo de "
"inversos modulares."

#: ../../library/functions.rst:1319
msgid ""
"Allow keyword arguments.  Formerly, only positional arguments were supported."
msgstr ""
"Permite argumentos de palavra reservada. Anteriormente, apenas argumentos "
"posicionais eram suportados."

#: ../../library/functions.rst:1326
msgid ""
"Print *objects* to the text stream *file*, separated by *sep* and followed "
"by *end*.  *sep*, *end*, *file* and *flush*, if present, must be given as "
"keyword arguments."
msgstr ""
"Exibe *objects* no fluxo de texto *arquivo*, separado por *sep* e seguido "
"por *end*. *sep*, *end*, *file* e *flush*, se houver, devem ser fornecidos "
"como argumentos nomeados."

#: ../../library/functions.rst:1330
msgid ""
"All non-keyword arguments are converted to strings like :func:`str` does and "
"written to the stream, separated by *sep* and followed by *end*.  Both *sep* "
"and *end* must be strings; they can also be ``None``, which means to use the "
"default values.  If no *objects* are given, :func:`print` will just write "
"*end*."
msgstr ""
"Todos os argumentos que não são nomeados são convertidos em strings como :"
"func:`str` faz e gravados no fluxo, separados por *sep* e seguidos por "
"*end*. *sep* e *end* devem ser strings; eles também podem ser ``None``, o "
"que significa usar os valores padrão. Se nenhum *object* for fornecido, :"
"func:`print` escreverá apenas *end*."

#: ../../library/functions.rst:1336
msgid ""
"The *file* argument must be an object with a ``write(string)`` method; if it "
"is not present or ``None``, :data:`sys.stdout` will be used.  Since printed "
"arguments are converted to text strings, :func:`print` cannot be used with "
"binary mode file objects.  For these, use ``file.write(...)`` instead."
msgstr ""
"O argumento *file* deve ser um objeto com um método ``write(string)``; se "
"ele não estiver presente ou ``None``, então :data:`sys.stdout` será usado. "
"Como argumentos exibidos no console são convertidos para strings de texto, :"
"func:`print` não pode ser usado com objetos de arquivo em modo binário. Para "
"esses casos, use ``file.write(...)`` ao invés."

#: ../../library/functions.rst:1341
msgid ""
"Whether output is buffered is usually determined by *file*, but if the "
"*flush* keyword argument is true, the stream is forcibly flushed."
msgstr ""
"Se a saída é armazenada em um buffer é usualmente determinado por *file*, "
"mas se o argumento nomeado *flush* é verdadeiro, o fluxo de saída é "
"forçosamente descarregado."

#: ../../library/functions.rst:1344
msgid "Added the *flush* keyword argument."
msgstr "Adicionado o argumento nomeado *flush*."

#: ../../library/functions.rst:1350
msgid "Return a property attribute."
msgstr "Retorna um atributo de propriedade."

#: ../../library/functions.rst:1352
msgid ""
"*fget* is a function for getting an attribute value.  *fset* is a function "
"for setting an attribute value. *fdel* is a function for deleting an "
"attribute value.  And *doc* creates a docstring for the attribute."
msgstr ""
"*fget* é uma função para obter o valor de um atributo. *fset* é uma função "
"para definir um valor para um atributo. *fdel* é uma função para deletar um "
"valor de um atributo. E *doc* cria um docstring para um atributo."

#: ../../library/functions.rst:1356
msgid "A typical use is to define a managed attribute ``x``::"
msgstr "Um uso comum é para definir um atributo gerenciável ``x``::"

#: ../../library/functions.rst:1373
msgid ""
"If *c* is an instance of *C*, ``c.x`` will invoke the getter, ``c.x = "
"value`` will invoke the setter and ``del c.x`` the deleter."
msgstr ""
"Se *c* é uma instância de *C*, ``c.x`` irá invocar o método getter, ``c.x = "
"value`` irá invocar o método setter, e ``del c.x`` o método deleter."

#: ../../library/functions.rst:1376
msgid ""
"If given, *doc* will be the docstring of the property attribute. Otherwise, "
"the property will copy *fget*'s docstring (if it exists).  This makes it "
"possible to create read-only properties easily using :func:`property` as a :"
"term:`decorator`::"
msgstr ""
"Se fornecido, *doc* será a docstring do atributo definido por property. Caso "
"contrário, a property copiará a docstring de *fget* (se ela existir). Isso "
"torna possível criar facilmente propriedades apenas para leitura usando :"
"func:`property` como um :term:`decorador`::"

#: ../../library/functions.rst:1389
msgid ""
"The ``@property`` decorator turns the :meth:`voltage` method into a "
"\"getter\" for a read-only attribute with the same name, and it sets the "
"docstring for *voltage* to \"Get the current voltage.\""
msgstr ""
"O decorador ``@property`` transforma o método :meth:`voltage` em um "
"\"getter\" para um atributo somente leitura com o mesmo nome, e define a "
"docstring de *voltage* para \"Get the current voltage.\""

#: ../../library/functions.rst:1393
msgid ""
"A property object has :attr:`~property.getter`, :attr:`~property.setter`, "
"and :attr:`~property.deleter` methods usable as decorators that create a "
"copy of the property with the corresponding accessor function set to the "
"decorated function.  This is best explained with an example::"
msgstr ""
"Um objeto property possui métodos :attr:`~property.getter`, :attr:`~property."
"setter`, e :attr:`~property.deleter` usáveis como decoradores, que criam uma "
"cópia da property com o assessor correspondente a função definida para a "
"função com decorador. Isso é explicado melhor com um exemplo::"

#: ../../library/functions.rst:1415
msgid ""
"This code is exactly equivalent to the first example.  Be sure to give the "
"additional functions the same name as the original property (``x`` in this "
"case.)"
msgstr ""
"Esse código é exatamente equivalente ao primeiro exemplo. Tenha certeza de "
"nas funções adicionais usar o mesmo nome que a property original (``x`` "
"neste caso)."

#: ../../library/functions.rst:1419
msgid ""
"The returned property object also has the attributes ``fget``, ``fset``, and "
"``fdel`` corresponding to the constructor arguments."
msgstr ""
"O objeto property retornado também tem os atributos ``fget``, ``fset``, e "
"``fdel`` correspondendo aos argumentos do construtor."

#: ../../library/functions.rst:1422
msgid "The docstrings of property objects are now writeable."
msgstr "Agora é possível escrever nas docstrings de objetos property."

#: ../../library/functions.rst:1431
msgid ""
"Rather than being a function, :class:`range` is actually an immutable "
"sequence type, as documented in :ref:`typesseq-range` and :ref:`typesseq`."
msgstr ""
"Em vez de ser uma função, :class:`range` é realmente um tipo de sequência "
"imutável, conforme documentado em :ref:`typesseq-range` e :ref:`typesseq`."

#: ../../library/functions.rst:1437
msgid ""
"Return a string containing a printable representation of an object.  For "
"many types, this function makes an attempt to return a string that would "
"yield an object with the same value when passed to :func:`eval`, otherwise "
"the representation is a string enclosed in angle brackets that contains the "
"name of the type of the object together with additional information often "
"including the name and address of the object.  A class can control what this "
"function returns for its instances by defining a :meth:`__repr__` method."
msgstr ""
"Retorna uma string contendo uma representação imprimível de um objeto. Para "
"muitos tipos, essa função tenta retornar uma string que produziria um objeto "
"com o mesmo valor quando passado para :func:`eval`, caso contrário, a "
"representação é uma string entre colchetes angulares que contém o nome do "
"tipo do objeto juntamente com informações adicionais, geralmente incluindo o "
"nome e o endereço do objeto. Uma classe pode controlar o que essa função "
"retorna para suas instâncias, definindo um método :meth:`__repr__`."

#: ../../library/functions.rst:1448
msgid ""
"Return a reverse :term:`iterator`.  *seq* must be an object which has a :"
"meth:`__reversed__` method or supports the sequence protocol (the :meth:"
"`__len__` method and the :meth:`__getitem__` method with integer arguments "
"starting at ``0``)."
msgstr ""
"Retorna um :term:`iterador <iterator>` reverso. *seq* deve ser um objeto que "
"possui o método :meth:`__reversed__` ou suporta o protocolo de sequência (o "
"método :meth:`__len__` e o método :meth:`__getitem__` com argumentos "
"inteiros começando em ``0``)."

#: ../../library/functions.rst:1456
msgid ""
"Return *number* rounded to *ndigits* precision after the decimal point.  If "
"*ndigits* is omitted or is ``None``, it returns the nearest integer to its "
"input."
msgstr ""
"Retorna *number* arredondado para *ndigits* precisão após o ponto decimal. "
"Se *ndigits* for omitido ou for ``None``, ele retornará o número inteiro "
"mais próximo de sua entrada."

#: ../../library/functions.rst:1460
msgid ""
"For the built-in types supporting :func:`round`, values are rounded to the "
"closest multiple of 10 to the power minus *ndigits*; if two multiples are "
"equally close, rounding is done toward the even choice (so, for example, "
"both ``round(0.5)`` and ``round(-0.5)`` are ``0``, and ``round(1.5)`` is "
"``2``).  Any integer value is valid for *ndigits* (positive, zero, or "
"negative).  The return value is an integer if *ndigits* is omitted or "
"``None``. Otherwise the return value has the same type as *number*."
msgstr ""
"Para os tipos embutidos com suporte a :func:`round`, os valores são "
"arredondados para o múltiplo mais próximo de 10 para a potência de menos "
"*ndigit*; se dois múltiplos são igualmente próximos, o arredondamento é "
"feito para a opção par (por exemplo, ``round(0.5)`` e ``round(-0.5)`` são "
"``0`` e ``round(1.5)`` é ``2``). Qualquer valor inteiro é válido para "
"*ndigits* (positivo, zero ou negativo). O valor de retorno é um número "
"inteiro se *ndigits* for omitido ou ``None``. Caso contrário, o valor de "
"retorno tem o mesmo tipo que *number*."

#: ../../library/functions.rst:1469
msgid ""
"For a general Python object ``number``, ``round`` delegates to ``number."
"__round__``."
msgstr ""
"Para um objeto Python geral ``number``, ``round`` delega para ``number."
"__round__``."

#: ../../library/functions.rst:1474
msgid ""
"The behavior of :func:`round` for floats can be surprising: for example, "
"``round(2.675, 2)`` gives ``2.67`` instead of the expected ``2.68``. This is "
"not a bug: it's a result of the fact that most decimal fractions can't be "
"represented exactly as a float.  See :ref:`tut-fp-issues` for more "
"information."
msgstr ""
"O comportamento de :func:`round` para pontos flutuantes pode ser "
"surpreendente: por exemplo, ``round(2.675, 2)`` fornece ``2.67`` em vez do "
"esperado ``2.68``. Isso não é um bug: é resultado do fato de que a maioria "
"das frações decimais não pode ser representada exatamente como um ponto "
"flutuante. Veja :ref:`tut-fp-issues` para mais informações."

#: ../../library/functions.rst:1485
msgid ""
"Return a new :class:`set` object, optionally with elements taken from "
"*iterable*.  ``set`` is a built-in class.  See :class:`set` and :ref:`types-"
"set` for documentation about this class."
msgstr ""
"Retorna um novo objeto :class:`set`, opcionalmente com elementos retirados "
"de *iterable*. ``set`` é uma classe embutida. Veja :class:`set` e :ref:"
"`types-set` para documentação sobre esta classe."

#: ../../library/functions.rst:1489
msgid ""
"For other containers see the built-in :class:`frozenset`, :class:`list`, :"
"class:`tuple`, and :class:`dict` classes, as well as the :mod:`collections` "
"module."
msgstr ""
"Para outros contêineres, consulte as classes embutidas :class:`frozenset`, :"
"class:`list`, :class:`tuple` e :class:`dict`, bem como o módulo :mod:"
"`collections`."

#: ../../library/functions.rst:1496
msgid ""
"This is the counterpart of :func:`getattr`.  The arguments are an object, a "
"string and an arbitrary value.  The string may name an existing attribute or "
"a new attribute.  The function assigns the value to the attribute, provided "
"the object allows it.  For example, ``setattr(x, 'foobar', 123)`` is "
"equivalent to ``x.foobar = 123``."
msgstr ""
"Esta é a contrapartida de :func:`getattr`. Os argumentos são um objeto, uma "
"string e um valor arbitrário. A string pode nomear um atributo existente ou "
"um novo atributo. A função atribui o valor ao atributo, desde que o objeto "
"permita. Por exemplo, ``setattr(x, 'foobar', 123)`` é equivalente a ``x."
"foobar = 123``."

#: ../../library/functions.rst:1508
msgid ""
"Return a :term:`slice` object representing the set of indices specified by "
"``range(start, stop, step)``.  The *start* and *step* arguments default to "
"``None``.  Slice objects have read-only data attributes :attr:`~slice."
"start`, :attr:`~slice.stop` and :attr:`~slice.step` which merely return the "
"argument values (or their default).  They have no other explicit "
"functionality; however they are used by Numerical Python and other third "
"party extensions. Slice objects are also generated when extended indexing "
"syntax is used.  For example: ``a[start:stop:step]`` or ``a[start:stop, "
"i]``.  See :func:`itertools.islice` for an alternate version that returns an "
"iterator."
msgstr ""
"Retorna um objeto :term:`slice` representando o conjunto de índices "
"especificado por ``range(start, stop, step)``. Os argumentos *start* e "
"*step* são padronizados como ``None``. Os objetos fatia têm atributos de "
"dados somente leitura :attr:`~slice.start`, :attr:`~slice.stop` e :attr:"
"`~slice.step`, que meramente retornam os valores do argumento (ou o padrão). "
"Eles não têm outra funcionalidade explícita; no entanto, eles são usados "
"pelo Python numérico e outras extensões de terceiros. Os objetos slice "
"também são gerados quando a sintaxe de indexação estendida é usada. Por "
"exemplo: ``a[start:stop:step]`` ou ``a[start:stop, i]``. Veja :func:"
"`itertools.islice` para uma versão alternativa que retorna um iterador."

#: ../../library/functions.rst:1521
msgid "Return a new sorted list from the items in *iterable*."
msgstr "Retorna uma nova lista classificada dos itens em *iterable*."

#: ../../library/functions.rst:1523
msgid ""
"Has two optional arguments which must be specified as keyword arguments."
msgstr ""
"Possui dois argumentos opcionais que devem ser especificados como argumentos "
"nomeados."

#: ../../library/functions.rst:1525
msgid ""
"*key* specifies a function of one argument that is used to extract a "
"comparison key from each element in *iterable* (for example, ``key=str."
"lower``).  The default value is ``None`` (compare the elements directly)."
msgstr ""
"*key* especifica a função de um argumento usado para extrair uma chave de "
"comparação de cada elemento em *iterable* (por exemplo, ``key=str.lower``). "
"O valor padrão é ``None`` (compara os elementos diretamente)."

#: ../../library/functions.rst:1529
msgid ""
"*reverse* is a boolean value.  If set to ``True``, then the list elements "
"are sorted as if each comparison were reversed."
msgstr ""
"*reverse* é um valor booleano. Se definido igual a ``True``, então os "
"elementos da lista são classificados como se cada comparação estivesse "
"invertida."

#: ../../library/functions.rst:1532
msgid ""
"Use :func:`functools.cmp_to_key` to convert an old-style *cmp* function to a "
"*key* function."
msgstr ""
"Usa :func:`functools.cmp_to_key` para converter a função das antigas *cmp* "
"para uma função *key*."

#: ../../library/functions.rst:1535
msgid ""
"The built-in :func:`sorted` function is guaranteed to be stable. A sort is "
"stable if it guarantees not to change the relative order of elements that "
"compare equal --- this is helpful for sorting in multiple passes (for "
"example, sort by department, then by salary grade)."
msgstr ""
"A função embutida :func:`sorted` é garantida como estável. Uma ordenação é "
"estável se garantir não alterar a ordem relativa dos elementos que se "
"comparam da mesma forma --- isso é útil para ordenar em várias passagens "
"(por exemplo, ordenar por departamento e depois por nível de salário)."

#: ../../library/functions.rst:1540
msgid ""
"For sorting examples and a brief sorting tutorial, see :ref:`sortinghowto`."
msgstr ""
"Para exemplos de classificação e um breve tutorial de classificação, veja :"
"ref:`sortinghowto`."

#: ../../library/functions.rst:1544
msgid "Transform a method into a static method."
msgstr "Transforma um método em método estático."

#: ../../library/functions.rst:1546
msgid ""
"A static method does not receive an implicit first argument. To declare a "
"static method, use this idiom::"
msgstr ""
"Um método estático não recebe um primeiro argumento implícito. Para declarar "
"um método estático, use este idioma::"

#: ../../library/functions.rst:1553
msgid ""
"The ``@staticmethod`` form is a function :term:`decorator` -- see :ref:"
"`function` for details."
msgstr ""
"A forma ``@staticmethod`` é uma função de :term:`decorador` -- veja :ref:"
"`function` para detalhes."

#: ../../library/functions.rst:1556
msgid ""
"A static method can be called either on the class (such as ``C.f()``) or on "
"an instance (such as ``C().f()``)."
msgstr ""
"Um método estático pode ser chamado na classe (tal como ``C.f()``) ou em uma "
"instância (tal como ``C().f()``)."

#: ../../library/functions.rst:1559
msgid ""
"Static methods in Python are similar to those found in Java or C++. Also "
"see :func:`classmethod` for a variant that is useful for creating alternate "
"class constructors."
msgstr ""
"Métodos estáticos em Python são similares àqueles encontrados em Java ou C+"
"+. Veja também :func:`classmethod` para uma variante útil na criação de "
"construtores de classe alternativos."

#: ../../library/functions.rst:1563
msgid ""
"Like all decorators, it is also possible to call ``staticmethod`` as a "
"regular function and do something with its result.  This is needed in some "
"cases where you need a reference to a function from a class body and you "
"want to avoid the automatic transformation to instance method.  For these "
"cases, use this idiom::"
msgstr ""
"Como todos os decoradores, também é possível chamar ``staticmethod`` como "
"uma função regular e fazer algo com seu resultado. Isso é necessário em "
"alguns casos em que você precisa de uma referência para uma função de um "
"corpo de classe e deseja evitar a transformação automática em método de "
"instância. Para esses casos, use este idioma::"

#: ../../library/functions.rst:1572
msgid "For more information on static methods, see :ref:`types`."
msgstr "Para mais informações sobre métodos estáticos, consulte :ref:`types`."

#: ../../library/functions.rst:1583
msgid ""
"Return a :class:`str` version of *object*.  See :func:`str` for details."
msgstr ""
"Retorna uma versão :class:`str` de *object*. Consulte :func:`str` para "
"detalhes."

#: ../../library/functions.rst:1585
msgid ""
"``str`` is the built-in string :term:`class`.  For general information about "
"strings, see :ref:`textseq`."
msgstr ""
"``str`` é uma :term:`classe` de string embutida. Para informações gerais "
"sobre strings, consulte :ref:`textseq`."

#: ../../library/functions.rst:1591
msgid ""
"Sums *start* and the items of an *iterable* from left to right and returns "
"the total.  The *iterable*'s items are normally numbers, and the start value "
"is not allowed to be a string."
msgstr ""
"Soma *start* e os itens de um *iterable* da esquerda para a direita e "
"retornam o total. Os itens do *iterable* são normalmente números e o valor "
"inicial não pode ser uma string."

#: ../../library/functions.rst:1595
msgid ""
"For some use cases, there are good alternatives to :func:`sum`. The "
"preferred, fast way to concatenate a sequence of strings is by calling ``''."
"join(sequence)``.  To add floating point values with extended precision, "
"see :func:`math.fsum`\\.  To concatenate a series of iterables, consider "
"using :func:`itertools.chain`."
msgstr ""
"Para alguns casos de uso, existem boas alternativas para :func:`sum`. A "
"maneira rápida e preferida de concatenar uma sequência de strings é chamando "
"``''.join(sequence)``. Para adicionar valores de ponto flutuante com "
"precisão estendida, consulte :func:`math.fsum`. Para concatenar uma série de "
"iteráveis, considere usar :func:`itertools.chain`."

#: ../../library/functions.rst:1601
msgid "The *start* parameter can be specified as a keyword argument."
msgstr "O parâmetro *start* pode ser especificado como um argumento nomeado."

#: ../../library/functions.rst:1606
msgid ""
"Return a proxy object that delegates method calls to a parent or sibling "
"class of *type*.  This is useful for accessing inherited methods that have "
"been overridden in a class."
msgstr ""
"Retorna um objeto proxy que delega chamadas de método a uma classe pai ou "
"irmão do *type*. Isso é útil para acessar métodos herdados que foram "
"substituídos em uma classe."

#: ../../library/functions.rst:1610
msgid ""
"The *object-or-type* determines the :term:`method resolution order` to be "
"searched.  The search starts from the class right after the *type*."
msgstr ""
"O *object-or-type* determina a :term:`ordem de resolução de métodos` a ser "
"pesquisada. A pesquisa inicia a partir da classe logo após o *type*."

#: ../../library/functions.rst:1614
msgid ""
"For example, if :attr:`~class.__mro__` of *object-or-type* is ``D -> B -> C -"
"> A -> object`` and the value of *type* is ``B``, then :func:`super` "
"searches ``C -> A -> object``."
msgstr ""
"Por exemplo, se :attr:`~class.__mro__` de *object-or-type* é ``D -> B -> C -"
"> A -> object`` e o valor de *type* é ``B``, então :func:`super` procura por "
"``C -> A -> object``."

#: ../../library/functions.rst:1618
msgid ""
"The :attr:`~class.__mro__` attribute of the *object-or-type* lists the "
"method resolution search order used by both :func:`getattr` and :func:"
"`super`.  The attribute is dynamic and can change whenever the inheritance "
"hierarchy is updated."
msgstr ""
"O atributo :attr:`~class.__mro__` do *object-or-type* lista a ordem de "
"pesquisa de resolução de método usada por :func:`getattr` e :func:`super`. O "
"atributo é dinâmico e pode mudar sempre que a hierarquia da herança é "
"atualizada."

#: ../../library/functions.rst:1623
msgid ""
"If the second argument is omitted, the super object returned is unbound.  If "
"the second argument is an object, ``isinstance(obj, type)`` must be true.  "
"If the second argument is a type, ``issubclass(type2, type)`` must be true "
"(this is useful for classmethods)."
msgstr ""
"Se o segundo argumento for omitido, o objeto super retornado é desacoplado. "
"Se o segundo argumento é um objeto, ``isinstance(obj, type)`` deve ser "
"verdadeiro. Se o segundo argumento é um tipo, ``issubclass(type2, type)`` "
"deve ser verdadeiro (isto é útil para classmethods)."

#: ../../library/functions.rst:1628
msgid ""
"There are two typical use cases for *super*.  In a class hierarchy with "
"single inheritance, *super* can be used to refer to parent classes without "
"naming them explicitly, thus making the code more maintainable.  This use "
"closely parallels the use of *super* in other programming languages."
msgstr ""
"Existem dois casos de uso típicos para *super*. Em uma hierarquia de classes "
"com herança única, *super* pode ser usado para se referir a classes-pai sem "
"nomeá-las explicitamente, tornando o código mais sustentável. Esse uso é "
"paralelo ao uso de *super* em outras linguagens de programação."

#: ../../library/functions.rst:1633
msgid ""
"The second use case is to support cooperative multiple inheritance in a "
"dynamic execution environment.  This use case is unique to Python and is not "
"found in statically compiled languages or languages that only support single "
"inheritance.  This makes it possible to implement \"diamond diagrams\" where "
"multiple base classes implement the same method.  Good design dictates that "
"such implementations have the same calling signature in every case (because "
"the order of calls is determined at runtime, because that order adapts to "
"changes in the class hierarchy, and because that order can include sibling "
"classes that are unknown prior to runtime)."
msgstr ""
"O segundo caso de uso é oferecer suporte à herança múltipla cooperativa em "
"um ambiente de execução dinâmica. Esse caso de uso é exclusivo do Python e "
"não é encontrado em idiomas ou linguagens compiladas estaticamente que "
"suportam apenas herança única. Isso torna possível implementar \"diagramas "
"em losango\", onde várias classes base implementam o mesmo método. Um bom "
"design exige que tais implementações tenham a mesma assinatura de chamada em "
"todos os casos (porque a ordem das chamadas é determinada em tempo de "
"execução, porque essa ordem se adapta às alterações na hierarquia de classes "
"e porque essa ordem pode incluir classes de irmãos desconhecidas antes do "
"tempo de execução)."

#: ../../library/functions.rst:1643
msgid "For both use cases, a typical superclass call looks like this::"
msgstr ""
"Nos dois casos de uso, uma chamada típica de superclasse se parece com isso::"

#: ../../library/functions.rst:1650
msgid ""
"In addition to method lookups, :func:`super` also works for attribute "
"lookups.  One possible use case for this is calling :term:`descriptors "
"<descriptor>` in a parent or sibling class."
msgstr ""
"Além das pesquisas de método, :func:`super` também funciona para pesquisas "
"de atributo. Um possível caso de uso para isso é chamar :term:`descritores "
"<descriptor>` em uma classe pai ou irmã."

#: ../../library/functions.rst:1654
msgid ""
"Note that :func:`super` is implemented as part of the binding process for "
"explicit dotted attribute lookups such as ``super().__getitem__(name)``. It "
"does so by implementing its own :meth:`__getattribute__` method for "
"searching classes in a predictable order that supports cooperative multiple "
"inheritance. Accordingly, :func:`super` is undefined for implicit lookups "
"using statements or operators such as ``super()[name]``."
msgstr ""
"Observe que :func:`super` é implementada como parte do processo de "
"vinculação para procura explícita de atributos com ponto, tal como ``super()."
"__getitem__(nome)``. Ela faz isso implementando seu próprio método :meth:"
"`__getattribute__` para pesquisar classes em uma ordem predizível que possui "
"suporte a herança múltipla cooperativa. Logo, :func:`super` não é definida "
"para procuras implícitas usando instruções ou operadores como ``super()"
"[name]``."

#: ../../library/functions.rst:1661
msgid ""
"Also note that, aside from the zero argument form, :func:`super` is not "
"limited to use inside methods.  The two argument form specifies the "
"arguments exactly and makes the appropriate references.  The zero argument "
"form only works inside a class definition, as the compiler fills in the "
"necessary details to correctly retrieve the class being defined, as well as "
"accessing the current instance for ordinary methods."
msgstr ""
"Observe também que, além da forma de argumento zero, :func:`super` não se "
"limita ao uso de métodos internos. O formulário de dois argumentos "
"especifica exatamente os argumentos e faz as referências apropriadas. O "
"formulário de argumento zero funciona apenas dentro de uma definição de "
"classe, pois o compilador preenche os detalhes necessários para recuperar "
"corretamente a classe que está sendo definida, além de acessar a instância "
"atual para métodos comuns."

#: ../../library/functions.rst:1668
msgid ""
"For practical suggestions on how to design cooperative classes using :func:"
"`super`, see `guide to using super() <https://rhettinger.wordpress."
"com/2011/05/26/super-considered-super/>`_."
msgstr ""
"Para sugestões práticas sobre como projetar classes cooperativas usando :"
"func:`super`, consulte o `guia para uso de super() <https://rhettinger."
"wordpress.com/2011/05/26/super-considered-super/>`_."

#: ../../library/functions.rst:1677
msgid ""
"Rather than being a function, :class:`tuple` is actually an immutable "
"sequence type, as documented in :ref:`typesseq-tuple` and :ref:`typesseq`."
msgstr ""
"Ao invés de ser uma função, :class:`tuple` é na verdade um tipo de sequência "
"imutável, conforme documentado em :ref:`typesseq-tuple` e :ref:`typesseq`."

#: ../../library/functions.rst:1686
msgid ""
"With one argument, return the type of an *object*.  The return value is a "
"type object and generally the same object as returned by :attr:`object."
"__class__ <instance.__class__>`."
msgstr ""
"Com um argumento, retorna o tipo de um *object*. O valor de retorno é um "
"tipo de objeto e geralmente o mesmo objeto retornado por :attr:`object."
"__class__ <instance.__class__>`."

#: ../../library/functions.rst:1690
msgid ""
"The :func:`isinstance` built-in function is recommended for testing the type "
"of an object, because it takes subclasses into account."
msgstr ""
"A função embutida :func:`isinstance` é recomendada para testar o tipo de um "
"objeto, porque ela leva sub-classes em consideração."

#: ../../library/functions.rst:1694
msgid ""
"With three arguments, return a new type object.  This is essentially a "
"dynamic form of the :keyword:`class` statement. The *name* string is the "
"class name and becomes the :attr:`~definition.__name__` attribute. The "
"*bases* tuple contains the base classes and becomes the :attr:`~class."
"__bases__` attribute; if empty, :class:`object`, the ultimate base of all "
"classes, is added.  The *dict* dictionary contains attribute and method "
"definitions for the class body; it may be copied or wrapped before becoming "
"the :attr:`~object.__dict__` attribute. The following two statements create "
"identical :class:`type` objects:"
msgstr ""
"Com três argumentos, retorna um novo objeto type. Esta é essencialmente a "
"forma dinâmica da instrução :keyword:`class`. A string *name* é o nome da "
"classe e se torna o atributo :attr:`~definition.__name__`. A tupla *bases* "
"contém as classes bases e se torna o atributo :attr:`~class.__bases__`; se "
"vazio, :class:`object`, a base final de todas as classes é adicionada. O "
"dicionário *dict* contém definições de atributo e método para o corpo da "
"classe; ele pode ser copiado ou envolto antes de se tornar o atributo :attr:"
"`~object.__dict__`. As duas instruções a seguir criam objetos :class:`type` "
"idênticos:"

#: ../../library/functions.rst:1709
msgid "See also :ref:`bltin-type-objects`."
msgstr "Veja também :ref:`bltin-type-objects`."

#: ../../library/functions.rst:1711
msgid ""
"Keyword arguments provided to the three argument form are passed to the "
"appropriate metaclass machinery (usually :meth:`~object.__init_subclass__`) "
"in the same way that keywords in a class definition (besides *metaclass*) "
"would."
msgstr ""
"Argumentos nomeados fornecidos para a forma de três argumentos são passados "
"para a máquina metaclasse apropriada (geralmente :meth:`~object."
"__init_subclass__`) da mesma forma que palavras-chave em uma definição de "
"classe (além de *metaclasse*) fariam."

#: ../../library/functions.rst:1716
msgid "See also :ref:`class-customization`."
msgstr "Veja também :ref:`class-customization`."

#: ../../library/functions.rst:1718
msgid ""
"Subclasses of :class:`type` which don't override ``type.__new__`` may no "
"longer use the one-argument form to get the type of an object."
msgstr ""
"Subclasses de :class:`type` que não substituem ``type.__new__`` não podem "
"mais usar a forma com apenas um argumento para obter o tipo de um objeto."

#: ../../library/functions.rst:1724
msgid ""
"Return the :attr:`~object.__dict__` attribute for a module, class, instance, "
"or any other object with a :attr:`~object.__dict__` attribute."
msgstr ""
"Retorna o atributo :attr:`~object.__dict__` para um módulo, classe, "
"instância, or qualquer outro objeto com um atributo :attr:`~object.__dict__`."

#: ../../library/functions.rst:1727
msgid ""
"Objects such as modules and instances have an updateable :attr:`~object."
"__dict__` attribute; however, other objects may have write restrictions on "
"their :attr:`~object.__dict__` attributes (for example, classes use a :class:"
"`types.MappingProxyType` to prevent direct dictionary updates)."
msgstr ""
"Objetos como modelos e instâncias têm um atributo atualizável :attr:`~object."
"__dict__`; porém, outros projetos podem ter restrições de escrita em seus "
"atributos :attr:`~object.__dict__` (por exemplo, classes usam um :class:"
"`types.MappingProxyType` para prevenir atualizações diretas a dicionário)."

#: ../../library/functions.rst:1732
msgid ""
"Without an argument, :func:`vars` acts like :func:`locals`.  Note, the "
"locals dictionary is only useful for reads since updates to the locals "
"dictionary are ignored."
msgstr ""
"Sem um argumento, :func:`vars` funciona como :func:`locals`. Perceba que, o "
"dicionário locals é apenas útil para leitura, pelo fato de alterações no "
"dicionário locals serem ignoradas."

#: ../../library/functions.rst:1736
msgid ""
"A :exc:`TypeError` exception is raised if an object is specified but it "
"doesn't have a :attr:`~object.__dict__` attribute (for example, if its class "
"defines the :attr:`~object.__slots__` attribute)."
msgstr ""
"Uma exceção :exc:`TypeError` é levantada se um objeto é especificado, mas "
"ela não tem um atributo :attr:`~object.__dict__` (por exemplo, se sua classe "
"define o atributo :attr:`~object.__slots__`)."

#: ../../library/functions.rst:1742
msgid "Make an iterator that aggregates elements from each of the iterables."
msgstr "Produz um iterador que agrega elementos de cada um dos iteráveis."

#: ../../library/functions.rst:1744
msgid ""
"Returns an iterator of tuples, where the *i*-th tuple contains the *i*-th "
"element from each of the argument sequences or iterables.  The iterator "
"stops when the shortest input iterable is exhausted. With a single iterable "
"argument, it returns an iterator of 1-tuples.  With no arguments, it returns "
"an empty iterator.  Equivalent to::"
msgstr ""
"Retorna um iterador de tuplas, onde a *i*\\ª tupla contém o *i*\\º elemento "
"de cada uma das sequências de argumentos ou iteráveis. O iterador é parado "
"quando a menor entrada iterável é esgotada. Com um único argumento iterável, "
"ele retorna um iterador de 1 tupla. Sem argumentos, ele retorna um iterador "
"vazio. Equivalente a::"

#: ../../library/functions.rst:1763
msgid ""
"The left-to-right evaluation order of the iterables is guaranteed. This "
"makes possible an idiom for clustering a data series into n-length groups "
"using ``zip(*[iter(s)]*n)``.  This repeats the *same* iterator ``n`` times "
"so that each output tuple has the result of ``n`` calls to the iterator. "
"This has the effect of dividing the input into n-length chunks."
msgstr ""
"A ordem de avaliação da esquerda para a direita dos iteráveis é garantida. "
"Isso possibilita um idioma para agrupar uma série de dados em grupos de "
"comprimento n usando ``zip(*[iter(s)]*n)``. Isso repete o *mesmo* iterador "
"``n`` vezes, para que cada tupla de saída tenha o resultado de ``n`` "
"chamadas ao iterador. Isso tem o efeito de dividir a entrada em pedaços de "
"comprimento n."

#: ../../library/functions.rst:1769
msgid ""
":func:`zip` should only be used with unequal length inputs when you don't "
"care about trailing, unmatched values from the longer iterables.  If those "
"values are important, use :func:`itertools.zip_longest` instead."
msgstr ""
":func:`zip` deve ser usado apenas com entradas de comprimento diferente "
"quando você não se importa com valores inigualáveis à direita de iteráveis "
"mais longos. Se esses valores forem importantes, use :func:`itertools."
"zip_longest`."

#: ../../library/functions.rst:1773
msgid ""
":func:`zip` in conjunction with the ``*`` operator can be used to unzip a "
"list::"
msgstr ""
":func:`zip` em conjunto com o operador ``*`` pode ser usado para "
"descompactar uma lista::"

#: ../../library/functions.rst:1794
msgid ""
"This is an advanced function that is not needed in everyday Python "
"programming, unlike :func:`importlib.import_module`."
msgstr ""
"Esta é uma função avançada que não é necessária na programação diária do "
"Python, ao contrário de :func:`importlib.import_module`."

#: ../../library/functions.rst:1797
msgid ""
"This function is invoked by the :keyword:`import` statement.  It can be "
"replaced (by importing the :mod:`builtins` module and assigning to "
"``builtins.__import__``) in order to change semantics of the :keyword:`!"
"import` statement, but doing so is **strongly** discouraged as it is usually "
"simpler to use import hooks (see :pep:`302`) to attain the same goals and "
"does not cause issues with code which assumes the default import "
"implementation is in use.  Direct use of :func:`__import__` is also "
"discouraged in favor of :func:`importlib.import_module`."
msgstr ""
"Esta função é chamada pela instrução :keyword:`import`. Ela pode ser "
"substituída (importando o módulo :mod:`builtins` e atribuindo a ``builtins."
"__import__``) para alterar a semântica da instrução :keyword:`!import`, mas "
"isso é **fortemente** desencorajado, pois geralmente é mais simples usar "
"ganchos de importação (consulte :pep:`302`) para atingir os mesmos objetivos "
"e não causa problemas com o código que pressupõe que a implementação de "
"importação padrão esteja em uso. O uso direto de :func:`__import__` também é "
"desencorajado em favor de :func:`importlib.import_module`."

#: ../../library/functions.rst:1806
msgid ""
"The function imports the module *name*, potentially using the given "
"*globals* and *locals* to determine how to interpret the name in a package "
"context. The *fromlist* gives the names of objects or submodules that should "
"be imported from the module given by *name*.  The standard implementation "
"does not use its *locals* argument at all, and uses its *globals* only to "
"determine the package context of the :keyword:`import` statement."
msgstr ""
"A função importa o módulo *name*, potencialmente usando os dados *globals* e "
"*locals* para determinar como interpretar o nome em um contexto de pacote. O "
"*fromlist* fornece os nomes de objetos ou submódulos que devem ser "
"importados do módulo, fornecidos por *name*. A implementação padrão não usa "
"seu argumento *locals* e usa seus *globals* apenas para determinar o "
"contexto do pacote da instrução :keyword:`import`."

#: ../../library/functions.rst:1813
msgid ""
"*level* specifies whether to use absolute or relative imports. ``0`` (the "
"default) means only perform absolute imports.  Positive values for *level* "
"indicate the number of parent directories to search relative to the "
"directory of the module calling :func:`__import__` (see :pep:`328` for the "
"details)."
msgstr ""
"*level* especifica se é necessário usar importações absolutas ou relativas. "
"``0`` (o padrão) significa apenas realizar importações absolutas. Valores "
"positivos para *level* indicam o número de diretórios pai a serem "
"pesquisados em relação ao diretório do módulo que chama :func:`__import__` "
"(consulte :pep:`328` para obter detalhes)."

#: ../../library/functions.rst:1819
msgid ""
"When the *name* variable is of the form ``package.module``, normally, the "
"top-level package (the name up till the first dot) is returned, *not* the "
"module named by *name*.  However, when a non-empty *fromlist* argument is "
"given, the module named by *name* is returned."
msgstr ""
"Quando a variável *name* está no formato ``package.module``, normalmente, o "
"pacote de nível superior (o nome até o primeiro ponto) é retornado, *não* o "
"módulo nomeado por *name*. No entanto, quando um argumento *fromlist* não "
"vazio é fornecido, o módulo nomeado por *name* é retornado."

#: ../../library/functions.rst:1824
msgid ""
"For example, the statement ``import spam`` results in bytecode resembling "
"the following code::"
msgstr ""
"Por exemplo, a instrução ``importar spam`` resulta em bytecode semelhante ao "
"seguinte código::"

#: ../../library/functions.rst:1829
msgid "The statement ``import spam.ham`` results in this call::"
msgstr "A instrução ``import spam.ham`` resulta nesta chamada::"

#: ../../library/functions.rst:1833
msgid ""
"Note how :func:`__import__` returns the toplevel module here because this is "
"the object that is bound to a name by the :keyword:`import` statement."
msgstr ""
"Observe como :func:`__import__` retorna o módulo de nível superior aqui, "
"porque este é o objeto vinculado a um nome pela instrução :keyword:`import`."

#: ../../library/functions.rst:1836
msgid ""
"On the other hand, the statement ``from spam.ham import eggs, sausage as "
"saus`` results in ::"
msgstr ""
"Por outro lado, a instrução ``from spam.ham import eggs, sausage as saus`` "
"resulta em ::"

#: ../../library/functions.rst:1843
msgid ""
"Here, the ``spam.ham`` module is returned from :func:`__import__`.  From "
"this object, the names to import are retrieved and assigned to their "
"respective names."
msgstr ""
"Aqui, o módulo ``spam.ham`` é retornado de :func:`__import__`. A partir "
"desse objeto, os nomes a serem importados são recuperados e atribuídos aos "
"seus respectivos nomes."

#: ../../library/functions.rst:1847
msgid ""
"If you simply want to import a module (potentially within a package) by "
"name, use :func:`importlib.import_module`."
msgstr ""
"Se você simplesmente deseja importar um módulo (potencialmente dentro de um "
"pacote) pelo nome, use :func:`importlib.import_module`."

#: ../../library/functions.rst:1850
msgid ""
"Negative values for *level* are no longer supported (which also changes the "
"default value to 0)."
msgstr ""
"Valores negativos para *level* não são mais suportados (o que também altera "
"o valor padrão para 0)."

#: ../../library/functions.rst:1856
msgid "Footnotes"
msgstr "Notas de rodapé"

#: ../../library/functions.rst:1857
msgid ""
"Note that the parser only accepts the Unix-style end of line convention. If "
"you are reading the code from a file, make sure to use newline conversion "
"mode to convert Windows or Mac-style newlines."
msgstr ""
"Observe que o analisador sintático aceita apenas a convenção de fim de linha "
"no estilo Unix. Se você estiver lendo o código de um arquivo, use o modo de "
"conversão de nova linha para converter novas linhas no estilo Windows ou Mac."
