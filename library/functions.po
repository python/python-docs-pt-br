# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Misael borges <misael@planosassessoria.com.br>, 2021
# Welington Carlos <wcarlos3@gmail.com>, 2021
# Italo Penaforte <italo.penaforte@gmail.com>, 2021
# VERUSKA RODRIGUES DA SILVA <veruskasilva@gmail.com>, 2021
# felipe caridade fernandes <caridade500@gmail.com>, 2021
# (Douglas da Silva) <dementikovalev@yandex.ru>, 2021
# Katyanna Moura <amelie.kn@gmail.com>, 2021
# João Porfirio, 2021
# Vinicius Gubiani Ferreira <vini.g.fer@gmail.com>, 2023
# i17obot <i17obot@rougeth.com>, 2024
# Marco Rougeth <marco@rougeth.com>, 2024
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2024
# Pedro Fonini, 2024
# Adorilson Bezerra <adorilson@gmail.com>, 2024
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-02-21 14:16+0000\n"
"PO-Revision-Date: 2021-06-28 01:06+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/functions.rst:5 ../../library/functions.rst:11
msgid "Built-in Functions"
msgstr "Funções embutidas"

#: ../../library/functions.rst:7
msgid ""
"The Python interpreter has a number of functions and types built into it "
"that are always available.  They are listed here in alphabetical order."
msgstr ""
"O interpretador do Python possui várias funções e tipos embutidos que sempre "
"estão disponíveis. A seguir listamos todas as funções em ordem alfabética."

#: ../../library/functions.rst:0
msgid "**A**"
msgstr "**A**"

#: ../../library/functions.rst:0
msgid ":func:`abs`"
msgstr ":func:`abs`"

#: ../../library/functions.rst:0
msgid ":func:`aiter`"
msgstr ":func:`aiter`"

#: ../../library/functions.rst:0
msgid ":func:`all`"
msgstr ":func:`all`"

#: ../../library/functions.rst:0
msgid ":func:`anext`"
msgstr ":func:`anext`"

#: ../../library/functions.rst:0
msgid ":func:`any`"
msgstr ":func:`any`"

#: ../../library/functions.rst:0
msgid ":func:`ascii`"
msgstr ":func:`ascii`"

#: ../../library/functions.rst:0
msgid "**B**"
msgstr "**B**"

#: ../../library/functions.rst:0
msgid ":func:`bin`"
msgstr ":func:`bin`"

#: ../../library/functions.rst:0
msgid ":func:`bool`"
msgstr ":func:`bool`"

#: ../../library/functions.rst:0
msgid ":func:`breakpoint`"
msgstr ":func:`breakpoint`"

#: ../../library/functions.rst:0
msgid "|func-bytearray|_"
msgstr "|func-bytearray|_"

#: ../../library/functions.rst:0
msgid "|func-bytes|_"
msgstr "|func-bytes|_"

#: ../../library/functions.rst:0
msgid "**C**"
msgstr "**C**"

#: ../../library/functions.rst:0
msgid ":func:`callable`"
msgstr ":func:`callable`"

#: ../../library/functions.rst:0
msgid ":func:`chr`"
msgstr ":func:`chr`"

#: ../../library/functions.rst:0
msgid ":func:`classmethod`"
msgstr ":func:`classmethod`"

#: ../../library/functions.rst:0
msgid ":func:`compile`"
msgstr ":func:`compile`"

#: ../../library/functions.rst:0
msgid ":func:`complex`"
msgstr ":func:`complex`"

#: ../../library/functions.rst:0
msgid "**D**"
msgstr "**D**"

#: ../../library/functions.rst:0
msgid ":func:`delattr`"
msgstr ":func:`delattr`"

#: ../../library/functions.rst:0
msgid "|func-dict|_"
msgstr "|func-dict|_"

#: ../../library/functions.rst:0
msgid ":func:`dir`"
msgstr ":func:`dir`"

#: ../../library/functions.rst:0
msgid ":func:`divmod`"
msgstr ":func:`divmod`"

#: ../../library/functions.rst:0
msgid "**E**"
msgstr "**E**"

#: ../../library/functions.rst:0
msgid ":func:`enumerate`"
msgstr ":func:`enumerate`"

#: ../../library/functions.rst:0
msgid ":func:`eval`"
msgstr ":func:`eval`"

#: ../../library/functions.rst:0
msgid ":func:`exec`"
msgstr ":func:`exec`"

#: ../../library/functions.rst:0
msgid "**F**"
msgstr "**F**"

#: ../../library/functions.rst:0
msgid ":func:`filter`"
msgstr ":func:`filter`"

#: ../../library/functions.rst:0
msgid ":func:`float`"
msgstr ":func:`float`"

#: ../../library/functions.rst:0
msgid ":func:`format`"
msgstr ":func:`format`"

#: ../../library/functions.rst:0
msgid "|func-frozenset|_"
msgstr "|func-frozenset|_"

#: ../../library/functions.rst:0
msgid "**G**"
msgstr "**G**"

#: ../../library/functions.rst:0
msgid ":func:`getattr`"
msgstr ":func:`getattr`"

#: ../../library/functions.rst:0
msgid ":func:`globals`"
msgstr ":func:`globals`"

#: ../../library/functions.rst:0
msgid "**H**"
msgstr "**H**"

#: ../../library/functions.rst:0
msgid ":func:`hasattr`"
msgstr ":func:`hasattr`"

#: ../../library/functions.rst:0
msgid ":func:`hash`"
msgstr ":func:`hash`"

#: ../../library/functions.rst:0
msgid ":func:`help`"
msgstr ":func:`help`"

#: ../../library/functions.rst:0
msgid ":func:`hex`"
msgstr ":func:`hex`"

#: ../../library/functions.rst:0
msgid "**I**"
msgstr "**I**"

#: ../../library/functions.rst:0
msgid ":func:`id`"
msgstr ":func:`id`"

#: ../../library/functions.rst:0
msgid ":func:`input`"
msgstr ":func:`input`"

#: ../../library/functions.rst:0
msgid ":func:`int`"
msgstr ":func:`int`"

#: ../../library/functions.rst:0
msgid ":func:`isinstance`"
msgstr ":func:`isinstance`"

#: ../../library/functions.rst:0
msgid ":func:`issubclass`"
msgstr ":func:`issubclass`"

#: ../../library/functions.rst:0
msgid ":func:`iter`"
msgstr ":func:`iter`"

#: ../../library/functions.rst:0
msgid "**L**"
msgstr "**L**"

#: ../../library/functions.rst:0
msgid ":func:`len`"
msgstr ":func:`len`"

#: ../../library/functions.rst:0
msgid "|func-list|_"
msgstr "|func-list|_"

#: ../../library/functions.rst:0
msgid ":func:`locals`"
msgstr ":func:`locals`"

#: ../../library/functions.rst:0
msgid "**M**"
msgstr "**M**"

#: ../../library/functions.rst:0
msgid ":func:`map`"
msgstr ":func:`map`"

#: ../../library/functions.rst:0
msgid ":func:`max`"
msgstr ":func:`max`"

#: ../../library/functions.rst:0
msgid "|func-memoryview|_"
msgstr "|func-memoryview|_"

#: ../../library/functions.rst:0
msgid ":func:`min`"
msgstr ":func:`min`"

#: ../../library/functions.rst:0
msgid "**N**"
msgstr "**N**"

#: ../../library/functions.rst:0
msgid ":func:`next`"
msgstr ":func:`next`"

#: ../../library/functions.rst:0
msgid "**O**"
msgstr "**O**"

#: ../../library/functions.rst:0
msgid ":func:`object`"
msgstr ":func:`object`"

#: ../../library/functions.rst:0
msgid ":func:`oct`"
msgstr ":func:`oct`"

#: ../../library/functions.rst:0
msgid ":func:`open`"
msgstr ":func:`open`"

#: ../../library/functions.rst:0
msgid ":func:`ord`"
msgstr ":func:`ord`"

#: ../../library/functions.rst:0
msgid "**P**"
msgstr "**P**"

#: ../../library/functions.rst:0
msgid ":func:`pow`"
msgstr ":func:`pow`"

#: ../../library/functions.rst:0
msgid ":func:`print`"
msgstr ":func:`print`"

#: ../../library/functions.rst:0
msgid ":func:`property`"
msgstr ":func:`property`"

#: ../../library/functions.rst:0
msgid "**R**"
msgstr "**R**"

#: ../../library/functions.rst:0
msgid "|func-range|_"
msgstr "|func-range|_"

#: ../../library/functions.rst:0
msgid ":func:`repr`"
msgstr ":func:`repr`"

#: ../../library/functions.rst:0
msgid ":func:`reversed`"
msgstr ":func:`reversed`"

#: ../../library/functions.rst:0
msgid ":func:`round`"
msgstr ":func:`round`"

#: ../../library/functions.rst:0
msgid "**S**"
msgstr "**S**"

#: ../../library/functions.rst:0
msgid "|func-set|_"
msgstr "|func-set|_"

#: ../../library/functions.rst:0
msgid ":func:`setattr`"
msgstr ":func:`setattr`"

#: ../../library/functions.rst:0
msgid ":func:`slice`"
msgstr ":func:`slice`"

#: ../../library/functions.rst:0
msgid ":func:`sorted`"
msgstr ":func:`sorted`"

#: ../../library/functions.rst:0
msgid ":func:`staticmethod`"
msgstr ":func:`staticmethod`"

#: ../../library/functions.rst:0
msgid "|func-str|_"
msgstr "|func-str|_"

#: ../../library/functions.rst:0
msgid ":func:`sum`"
msgstr ":func:`sum`"

#: ../../library/functions.rst:0
msgid ":func:`super`"
msgstr ":func:`super`"

#: ../../library/functions.rst:0
msgid "**T**"
msgstr "**T**"

#: ../../library/functions.rst:0
msgid "|func-tuple|_"
msgstr "|func-tuple|_"

#: ../../library/functions.rst:0
msgid ":func:`type`"
msgstr ":func:`type`"

#: ../../library/functions.rst:0
msgid "**V**"
msgstr "**V**"

#: ../../library/functions.rst:0
msgid ":func:`vars`"
msgstr ":func:`vars`"

#: ../../library/functions.rst:0
msgid "**Z**"
msgstr "**Z**"

#: ../../library/functions.rst:0
msgid ":func:`zip`"
msgstr ":func:`zip`"

#: ../../library/functions.rst:0
msgid "**_**"
msgstr "**_**"

#: ../../library/functions.rst:0
msgid ":func:`__import__`"
msgstr ":func:`__import__`"

#: ../../library/functions.rst:59
msgid ""
"Return the absolute value of a number.  The argument may be an integer, a "
"floating-point number, or an object implementing :meth:`~object.__abs__`. If "
"the argument is a complex number, its magnitude is returned."
msgstr ""
"Retorna o valor absoluto de um número. O argumento pode ser um inteiro, um "
"número de ponto flutuante ou um objeto implementando :meth:`~object."
"__abs__`. Se o argumento é um número complexo, sua magnitude é retornada."

#: ../../library/functions.rst:67
msgid ""
"Return an :term:`asynchronous iterator` for an :term:`asynchronous "
"iterable`. Equivalent to calling ``x.__aiter__()``."
msgstr ""
"Retorna um :term:`iterador assíncrono <asynchronous iterator>` para um :term:"
"`iterável assíncrono <asynchronous iterable>`. Equivalente a chamar ``x."
"__aiter__()``."

#: ../../library/functions.rst:70
msgid "Note: Unlike :func:`iter`, :func:`aiter` has no 2-argument variant."
msgstr ""
"Nota: Ao contrário de :func:`iter`, :func:`aiter` não tem uma variante de 2 "
"argumentos."

#: ../../library/functions.rst:76
msgid ""
"Return ``True`` if all elements of the *iterable* are true (or if the "
"iterable is empty).  Equivalent to::"
msgstr ""
"Retorna ``True`` se todos os elementos de *iterable* são verdadeiros (ou se "
"*iterable* estiver vazio). Equivalente a::"

#: ../../library/functions.rst:79
msgid ""
"def all(iterable):\n"
"    for element in iterable:\n"
"        if not element:\n"
"            return False\n"
"    return True"
msgstr ""
"def all(iterable):\n"
"    for elemento in iterable:\n"
"        if not elemento:\n"
"            return False\n"
"    return True"

#: ../../library/functions.rst:89
msgid ""
"When awaited, return the next item from the given :term:`asynchronous "
"iterator`, or *default* if given and the iterator is exhausted."
msgstr ""
"Quando aguardado, retorna o próximo item do :term:`iterador assíncrono` "
"fornecido, ou *default* se fornecido e o iterador for esgotado."

#: ../../library/functions.rst:92
msgid ""
"This is the async variant of the :func:`next` builtin, and behaves similarly."
msgstr ""
"Esta é a variante assíncrona do :func:`next` embutido, e se comporta de "
"forma semelhante."

#: ../../library/functions.rst:95
msgid ""
"This calls the :meth:`~object.__anext__` method of *async_iterator*, "
"returning an :term:`awaitable`. Awaiting this returns the next value of the "
"iterator. If *default* is given, it is returned if the iterator is "
"exhausted, otherwise :exc:`StopAsyncIteration` is raised."
msgstr ""
"Isso chama o método :meth:`~object.__anext__` de *async_iterator*, "
"retornando um :term:`aguardável`. Ao aguardar isso, retorna o próximo valor "
"do iterador. Se *default* for fornecido, ele será retornado se o iterador "
"for esgotado, caso contrário, a exceção :exc:`StopAsyncIteration` será "
"levantada."

#: ../../library/functions.rst:104
msgid ""
"Return ``True`` if any element of the *iterable* is true.  If the iterable "
"is empty, return ``False``.  Equivalent to::"
msgstr ""
"Retorna ``True`` se algum elemento de *iterable* for verdadeiro. Se "
"*iterable* estiver vazio, retorna ``False``. Equivalente a::"

#: ../../library/functions.rst:107
msgid ""
"def any(iterable):\n"
"    for element in iterable:\n"
"        if element:\n"
"            return True\n"
"    return False"
msgstr ""
"def any(iterable):\n"
"    for elemento in iterable:\n"
"        if elemento:\n"
"            return True\n"
"    return False"

#: ../../library/functions.rst:116
msgid ""
"As :func:`repr`, return a string containing a printable representation of an "
"object, but escape the non-ASCII characters in the string returned by :func:"
"`repr` using ``\\x``, ``\\u``, or ``\\U`` escapes.  This generates a string "
"similar to that returned by :func:`repr` in Python 2."
msgstr ""
"Como :func:`repr`, retorna uma string contendo uma representação imprimível "
"de um objeto, mas faz escape de caracteres não-ASCII na string retornada "
"por :func:`repr` usando sequências de escapes ``\\x``, ``\\u`` ou ``\\U``. "
"Isto gera uma string similar ao que é retornado por :func:`repr` no Python 2."

#: ../../library/functions.rst:124
msgid ""
"Convert an integer number to a binary string prefixed with \"0b\". The "
"result is a valid Python expression. If *x* is not a Python :class:`int` "
"object, it has to define an :meth:`~object.__index__` method that returns an "
"integer. Some examples:"
msgstr ""
"Converte um número inteiro para uma string de binários prefixada com \"0b\". "
"O resultado é uma expressão Python válida. Se *x* não é um objeto Python :"
"class:`int`, ele tem que definir um método :meth:`~object.__index__` que "
"devolve um inteiro. Alguns exemplos:"

#: ../../library/functions.rst:134
msgid ""
"If the prefix \"0b\" is desired or not, you can use either of the following "
"ways."
msgstr ""
"Se o prefixo \"0b\" é desejado ou não, você pode usar uma das seguintes "
"maneiras."

#: ../../library/functions.rst:141 ../../library/functions.rst:942
#: ../../library/functions.rst:1323
msgid "See also :func:`format` for more information."
msgstr "Veja também :func:`format` para mais informações."

#: ../../library/functions.rst:146
msgid ""
"Return a Boolean value, i.e. one of ``True`` or ``False``.  The argument is "
"converted using the standard :ref:`truth testing procedure <truth>`. If the "
"argument is false or omitted, this returns ``False``; otherwise, it returns "
"``True``.  The :class:`bool` class is a subclass of :class:`int` (see :ref:"
"`typesnumeric`). It cannot be subclassed further.  Its only instances are "
"``False`` and ``True`` (see :ref:`typebool`)."
msgstr ""
"Retorna um valor Booleano, isto é, ``True`` ou ``False``. O argumento é "
"convertido usando o :ref:`procedimento de teste de verdade <truth>` padrão. "
"Se o argumento for falso ou foi omitido, isso retorna ``False``; senão "
"``True``. A classe :class:`bool` é uma subclasse de :class:`int` (veja :ref:"
"`typesnumeric`). Ela não pode ser usada para criar outra subclasse. Suas "
"únicas instâncias são ``False`` e ``True`` (veja :ref:`typebool`)."

#: ../../library/functions.rst:156 ../../library/functions.rst:807
msgid "The parameter is now positional-only."
msgstr "O parâmetro agora é somente-posicional"

#: ../../library/functions.rst:161
msgid ""
"This function drops you into the debugger at the call site.  Specifically, "
"it calls :func:`sys.breakpointhook`, passing ``args`` and ``kws`` straight "
"through.  By default, ``sys.breakpointhook()`` calls :func:`pdb.set_trace` "
"expecting no arguments.  In this case, it is purely a convenience function "
"so you don't have to explicitly import :mod:`pdb` or type as much code to "
"enter the debugger.  However, :func:`sys.breakpointhook` can be set to some "
"other function and :func:`breakpoint` will automatically call that, allowing "
"you to drop into the debugger of choice. If :func:`sys.breakpointhook` is "
"not accessible, this function will raise :exc:`RuntimeError`."
msgstr ""
"Esta função coloca você no depurador no local da chamada. Especificamente, "
"ela chama :func:`sys.breakpointhook`, passando ``args`` e ``kws`` "
"diretamente. Por padrão, ``sys.breakpointhook()`` chama :func:`pdb."
"set_trace` não esperando nenhum argumento. Neste caso, isso é puramente uma "
"função de conveniência para você não precisar importar :mod:`pdb` "
"explicitamente ou digitar mais código para entrar no depurador. Contudo, :"
"func:`sys.breakpointhook` pode ser configurado para alguma outra função e :"
"func:`breakpoint` irá automaticamente chamá-la, permitindo você ir para o "
"depurador de sua escolha. Se :func:`sys.breakpointhook` não estiver "
"acessível, esta função vai levantar :exc:`RuntimeError`."

#: ../../library/functions.rst:173
msgid ""
"By default, the behavior of :func:`breakpoint` can be changed with the :"
"envvar:`PYTHONBREAKPOINT` environment variable. See :func:`sys."
"breakpointhook` for usage details."
msgstr ""
"Por padrão, o comportamento de :func:`breakpoint` pode ser alterado com a "
"variável de ambiente :envvar:`PYTHONBREAKPOINT`. Veja :func:`sys."
"breakpointhook` para detalhes de uso."

#: ../../library/functions.rst:177
msgid ""
"Note that this is not guaranteed if :func:`sys.breakpointhook` has been "
"replaced."
msgstr ""
"Observe que isso não é garantido se :func:`sys.breakpointhook` tiver sido "
"substituído."

#: ../../library/functions.rst:180
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.breakpoint`` with "
"argument ``breakpointhook``."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``builtins.breakpoint`` com "
"o argumento ``breakpointhook``."

#: ../../library/functions.rst:190
msgid ""
"Return a new array of bytes.  The :class:`bytearray` class is a mutable "
"sequence of integers in the range 0 <= x < 256.  It has most of the usual "
"methods of mutable sequences, described in :ref:`typesseq-mutable`, as well "
"as most methods that the :class:`bytes` type has, see :ref:`bytes-methods`."
msgstr ""
"Retorna um novo vetor de bytes. A classe :class:`bytearray` é uma sequência "
"mutável de inteiros no intervalo 0 <= x < 256. Ela tem a maior parte dos "
"métodos mais comuns de sequências mutáveis, descritas em :ref:`typesseq-"
"mutable`, assim como a maior parte dos métodos que o tipo :class:`bytes` "
"tem, veja :ref:`bytes-methods`."

#: ../../library/functions.rst:195
msgid ""
"The optional *source* parameter can be used to initialize the array in a few "
"different ways:"
msgstr ""
"O parâmetro opcional *source* pode ser usado para inicializar o vetor de "
"algumas maneiras diferentes:"

#: ../../library/functions.rst:198
msgid ""
"If it is a *string*, you must also give the *encoding* (and optionally, "
"*errors*) parameters; :func:`bytearray` then converts the string to bytes "
"using :meth:`str.encode`."
msgstr ""
"Se é uma *string*, você deve informar o parâmetro *encoding* (e "
"opcionalmente, *errors*); :func:`bytearray` então converte a string para "
"bytes usando :meth:`str.encode`."

#: ../../library/functions.rst:202
msgid ""
"If it is an *integer*, the array will have that size and will be initialized "
"with null bytes."
msgstr ""
"Se é um *inteiro*, o vetor terá esse tamanho e será inicializado com bytes "
"nulos."

#: ../../library/functions.rst:205
msgid ""
"If it is an object conforming to the :ref:`buffer interface "
"<bufferobjects>`, a read-only buffer of the object will be used to "
"initialize the bytes array."
msgstr ""
"Se é um objeto em conformidade com a :ref:`interface de buffer "
"<bufferobjects>`, um buffer somente leitura do objeto será usado para "
"inicializar o vetor de bytes."

#: ../../library/functions.rst:208
msgid ""
"If it is an *iterable*, it must be an iterable of integers in the range ``0 "
"<= x < 256``, which are used as the initial contents of the array."
msgstr ""
"Se é um *iterável*, deve ser um iterável de inteiros no intervalo ``0 <= x < "
"256``, que serão usados como o conteúdo inicial do vetor."

#: ../../library/functions.rst:211
msgid "Without an argument, an array of size 0 is created."
msgstr "Sem nenhum argumento, um vetor de tamanho 0 é criado."

#: ../../library/functions.rst:213
msgid "See also :ref:`binaryseq` and :ref:`typebytearray`."
msgstr "Veja também :ref:`binaryseq` e :ref:`typebytearray`."

#: ../../library/functions.rst:222
msgid ""
"Return a new \"bytes\" object which is an immutable sequence of integers in "
"the range ``0 <= x < 256``.  :class:`bytes` is an immutable version of :"
"class:`bytearray` -- it has the same non-mutating methods and the same "
"indexing and slicing behavior."
msgstr ""
"Retorna um novo objeto \"bytes\" que é uma sequência imutável de inteiros no "
"intervalo ``0 <= x < 256``. :class:`bytes` é uma versão imutável de :class:"
"`bytearray` -- tem os mesmos métodos de objetos imutáveis e o mesmo "
"comportamento de índices e fatiamento."

#: ../../library/functions.rst:227
msgid ""
"Accordingly, constructor arguments are interpreted as for :func:`bytearray`."
msgstr ""
"Consequentemente, argumentos do construtor são interpretados como os de :"
"func:`bytearray`."

#: ../../library/functions.rst:229
msgid "Bytes objects can also be created with literals, see :ref:`strings`."
msgstr ""
"Objetos bytes também podem ser criados com literais, veja :ref:`strings`."

#: ../../library/functions.rst:231
msgid "See also :ref:`binaryseq`, :ref:`typebytes`, and :ref:`bytes-methods`."
msgstr ""
"Veja também :ref:`binaryseq`, :ref:`typebytes`, e :ref:`bytes-methods`."

#: ../../library/functions.rst:236
msgid ""
"Return :const:`True` if the *object* argument appears callable, :const:"
"`False` if not.  If this returns ``True``, it is still possible that a call "
"fails, but if it is ``False``, calling *object* will never succeed. Note "
"that classes are callable (calling a class returns a new instance); "
"instances are callable if their class has a :meth:`~object.__call__` method."
msgstr ""
"Retorna :const:`True` se o argumento *object* parece ser chamável, :const:"
"`False` caso contrário. Se retorna ``True``, ainda é possível que a chamada "
"falhe, mas se é ``False``, chamar *object* nunca será bem sucedido. Note que "
"classes são chamáveis (chamar uma classe devolve uma nova instância); "
"instâncias são chamáveis se suas classes possuem um método :meth:`~object."
"__call__`."

#: ../../library/functions.rst:242
msgid ""
"This function was first removed in Python 3.0 and then brought back in "
"Python 3.2."
msgstr "Esta função foi removida na versão 3.0, mas retornou no Python 3.2."

#: ../../library/functions.rst:249
msgid ""
"Return the string representing a character whose Unicode code point is the "
"integer *i*.  For example, ``chr(97)`` returns the string ``'a'``, while "
"``chr(8364)`` returns the string ``'€'``. This is the inverse of :func:`ord`."
msgstr ""
"Retorna o caractere que é apontado pelo inteiro *i* no código Unicode. Por "
"exemplo, ``chr(97)`` retorna a string ``'a'``, enquanto ``chr(8364)`` "
"retorna a string ``'€'``. É o inverso de :func:`ord`."

#: ../../library/functions.rst:253
msgid ""
"The valid range for the argument is from 0 through 1,114,111 (0x10FFFF in "
"base 16).  :exc:`ValueError` will be raised if *i* is outside that range."
msgstr ""
"O intervalo válido para o argumento vai de 0 até 1.114.111 (0x10FFFF na base "
"16). Será lançada uma exceção :exc:`ValueError` se *i* estiver fora desse "
"intervalo."

#: ../../library/functions.rst:259
msgid "Transform a method into a class method."
msgstr "Transforma um método em um método de classe."

#: ../../library/functions.rst:261
msgid ""
"A class method receives the class as an implicit first argument, just like "
"an instance method receives the instance. To declare a class method, use "
"this idiom::"
msgstr ""
"Um método de classe recebe a classe como um primeiro argumento implícito, "
"exatamente como um método de instância recebe a instância. Para declarar um "
"método de classe, faça dessa forma::"

#: ../../library/functions.rst:265
msgid ""
"class C:\n"
"    @classmethod\n"
"    def f(cls, arg1, arg2): ..."
msgstr ""
"class C:\n"
"    @classmethod\n"
"    def f(cls, arg1, arg2): ..."

#: ../../library/functions.rst:269
msgid ""
"The ``@classmethod`` form is a function :term:`decorator` -- see :ref:"
"`function` for details."
msgstr ""
"O termo ``@classmethod`` é uma função :term:`decoradora <decorator>` -- "
"veja :ref:`function` para detalhes."

#: ../../library/functions.rst:272
msgid ""
"A class method can be called either on the class (such as ``C.f()``) or on "
"an instance (such as ``C().f()``).  The instance is ignored except for its "
"class. If a class method is called for a derived class, the derived class "
"object is passed as the implied first argument."
msgstr ""
"Um método de classe pode ser chamado tanto da classe (como em ``C.f()``) "
"quanto da instância (como em ``C().f()``). A instância é ignorada, exceto "
"por sua classe. Se um método de classe é chamado por uma classe derivada, o "
"objeto da classe derivada é passado como primeiro argumento implícito."

#: ../../library/functions.rst:277
msgid ""
"Class methods are different than C++ or Java static methods. If you want "
"those, see :func:`staticmethod` in this section. For more information on "
"class methods, see :ref:`types`."
msgstr ""
"Métodos de classe são diferentes de métodos estáticos em C++ ou Java. Se "
"você quer saber desses, veja :func:`staticmethod` nesta seção. Para mais "
"informações sobre métodos de classe, consulte :ref:`types`."

#: ../../library/functions.rst:281
msgid ""
"Class methods can now wrap other :term:`descriptors <descriptor>` such as :"
"func:`property`."
msgstr ""
"Métodos de classe agora podem envolver outros :term:`descritores "
"<descriptor>` tal como :func:`property`."

#: ../../library/functions.rst:285
msgid ""
"Class methods now inherit the method attributes (:attr:`~function."
"__module__`, :attr:`~function.__name__`, :attr:`~function.__qualname__`, :"
"attr:`~function.__doc__` and :attr:`~function.__annotations__`) and have a "
"new ``__wrapped__`` attribute."
msgstr ""
"Métodos de classe agora herdam os atributos do método (:attr:`~function."
"__module__`, :attr:`~function.__name__`, :attr:`~function.__qualname__`, :"
"attr:`~function.__doc__` e :attr:`~function.__annotations__`) e têm um novo "
"atributo ``__wrapped__``."

#: ../../library/functions.rst:292
msgid ""
"Class methods can no longer wrap other :term:`descriptors <descriptor>` such "
"as :func:`property`."
msgstr ""
"Métodos de classe não podem mais envolver outros :term:`descritores "
"<descriptor>` tal como :func:`property`."

#: ../../library/functions.rst:299
msgid ""
"Compile the *source* into a code or AST object.  Code objects can be "
"executed by :func:`exec` or :func:`eval`.  *source* can either be a normal "
"string, a byte string, or an AST object.  Refer to the :mod:`ast` module "
"documentation for information on how to work with AST objects."
msgstr ""
"Compila o argumento *source* em código ou objeto AST. Objetos código podem "
"ser executados por :func:`exec` ou :func:`eval`. *source* pode ser uma "
"string normal, uma string byte, ou um objeto AST. Consulte a documentação do "
"módulo :mod:`ast` para saber como trabalhar com objetos AST."

#: ../../library/functions.rst:304
msgid ""
"The *filename* argument should give the file from which the code was read; "
"pass some recognizable value if it wasn't read from a file (``'<string>'`` "
"is commonly used)."
msgstr ""
"O argumento *filename* deve ser o arquivo de onde o código será lido; passe "
"algum valor reconhecível se isso não foi lido de um arquivo (``'<string>'`` "
"é comumente usado)."

#: ../../library/functions.rst:308
msgid ""
"The *mode* argument specifies what kind of code must be compiled; it can be "
"``'exec'`` if *source* consists of a sequence of statements, ``'eval'`` if "
"it consists of a single expression, or ``'single'`` if it consists of a "
"single interactive statement (in the latter case, expression statements that "
"evaluate to something other than ``None`` will be printed)."
msgstr ""
"O argumento *mode* especifica qual o tipo de código deve ser compilado; pode "
"ser ``'exec'`` se *source* consiste em uma sequência de instruções, "
"``'eval'`` se consiste de uma única expressão, ou ``'single'`` se consiste "
"de uma única instrução interativa (neste último caso, instruções que são "
"avaliadas para alguma coisa diferente de ``None`` serão exibidas)."

#: ../../library/functions.rst:314
msgid ""
"The optional arguments *flags* and *dont_inherit* control which :ref:"
"`compiler options <ast-compiler-flags>` should be activated and which :ref:"
"`future features <future>` should be allowed. If neither is present (or both "
"are zero) the code is compiled with the same flags that affect the code that "
"is calling :func:`compile`. If the *flags* argument is given and "
"*dont_inherit* is not (or is zero) then the compiler options and the future "
"statements specified by the *flags* argument are used in addition to those "
"that would be used anyway. If *dont_inherit* is a non-zero integer then the "
"*flags* argument is it -- the flags (future features and compiler options) "
"in the surrounding code are ignored."
msgstr ""
"Os argumentos opcionais *flags* e *dont_inherit* controlam quais :ref:"
"`opções do compilador <ast-compiler-flags>` devem ser ativadas e quais :ref:"
"`recursos futuros <future>` devem ser permitidos. Se nenhum estiver presente "
"(ou ambos forem zero), o código é compilado com os mesmos sinalizadores que "
"afetam o código que está chamando :func:`compile`. Se o argumento *flags* "
"for fornecido e *dont_inherit* não for (ou for zero), as opções do "
"compilador e as instruções futuras especificadas pelo argumento *flags* são "
"usadas além daquelas que seriam usadas de qualquer maneira. Se "
"*dont_inherit* for um inteiro diferente de zero, então o argumento *flags* é "
"-- os sinalizadores (recursos futuros e opções do compilador) no código "
"circundante são ignorados."

#: ../../library/functions.rst:325
msgid ""
"Compiler options and future statements are specified by bits which can be "
"bitwise ORed together to specify multiple options. The bitfield required to "
"specify a given future feature can be found as the :attr:`~__future__."
"_Feature.compiler_flag` attribute on the :class:`~__future__._Feature` "
"instance in the :mod:`__future__` module. :ref:`Compiler flags <ast-compiler-"
"flags>` can be found in :mod:`ast` module, with ``PyCF_`` prefix."
msgstr ""
"Opções de compilador e instruções futuras são especificadas por bits, assim "
"pode ocorrer uma operação *OU* bit a bit para especificar múltiplas "
"instruções. O sinalizador necessário para especificar um dado recurso futuro "
"pode ser encontrado no atributo :attr:`~__future__._Feature.compiler_flag` "
"na instância :class:`~__future__._Feature` do módulo :mod:`__future__`. :ref:"
"`Sinalizadores de compilador <ast-compiler-flags>` podem ser encontrados no "
"módulo :mod:`ast`, com o prefixo ``PyCF_``."

#: ../../library/functions.rst:333
msgid ""
"The argument *optimize* specifies the optimization level of the compiler; "
"the default value of ``-1`` selects the optimization level of the "
"interpreter as given by :option:`-O` options.  Explicit levels are ``0`` (no "
"optimization; ``__debug__`` is true), ``1`` (asserts are removed, "
"``__debug__`` is false) or ``2`` (docstrings are removed too)."
msgstr ""
"O argumento *optimize* especifica o nível de otimização do compilador; o "
"valor padrão de ``-1`` seleciona o nível de otimização do interpretador dado "
"pela opção :option:`-O`. Níveis explícitos são ``0`` (nenhuma otimização; "
"``__debug__`` é verdadeiro), ``1`` (instruções ``assert`` são removidas, "
"``__debug__`` é falso) ou ``2`` (strings de documentação também são "
"removidas)."

#: ../../library/functions.rst:339
msgid ""
"This function raises :exc:`SyntaxError` if the compiled source is invalid, "
"and :exc:`ValueError` if the source contains null bytes."
msgstr ""
"Essa função levanta :exc:`SyntaxError` se o código para compilar é inválido, "
"e :exc:`ValueError` se o código contém bytes nulos."

#: ../../library/functions.rst:342
msgid ""
"If you want to parse Python code into its AST representation, see :func:`ast."
"parse`."
msgstr ""
"Se você quer analisar código Python em sua representação AST, veja :func:"
"`ast.parse`."

#: ../../library/functions.rst:345 ../../library/functions.rst:347
msgid ""
"Raises an :ref:`auditing event <auditing>` ``compile`` with arguments "
"``source`` and ``filename``. This event may also be raised by implicit "
"compilation."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``compile`` com os "
"argumentos ``source``, ``filename``. Esse evento pode também ser levantando "
"por uma compilação implícita."

#: ../../library/functions.rst:353
msgid ""
"When compiling a string with multi-line code in ``'single'`` or ``'eval'`` "
"mode, input must be terminated by at least one newline character.  This is "
"to facilitate detection of incomplete and complete statements in the :mod:"
"`code` module."
msgstr ""
"Quando compilando uma string com código multi-linhas em modo ``'single'`` ou "
"``'eval'``, entrada deve ser terminada por ao menos um caractere de nova "
"linhas. Isso é para facilitar a detecção de instruções completas e "
"incompletas no módulo :mod:`code`."

#: ../../library/functions.rst:360
msgid ""
"It is possible to crash the Python interpreter with a sufficiently large/"
"complex string when compiling to an AST object due to stack depth "
"limitations in Python's AST compiler."
msgstr ""
"É possível quebrar o interpretador Python com uma string suficientemente "
"grande/complexa ao compilar para um objeto AST, devido limitações do tamanho "
"da pilha no compilador AST do Python."

#: ../../library/functions.rst:364
msgid ""
"Allowed use of Windows and Mac newlines.  Also, input in ``'exec'`` mode "
"does not have to end in a newline anymore.  Added the *optimize* parameter."
msgstr ""
"Permitido o uso de marcadores de novas linhas no estilo Windows e Mac. Além "
"disso, em modo ``'exec'`` a entrada não precisa mais terminar com uma nova "
"linha. Também foi adicionado o parâmetro *optimize*."

#: ../../library/functions.rst:368
msgid ""
"Previously, :exc:`TypeError` was raised when null bytes were encountered in "
"*source*."
msgstr ""
"Anteriormente, :exc:`TypeError` era levantada quando havia bytes nulos em "
"*source*."

#: ../../library/functions.rst:372
msgid ""
"``ast.PyCF_ALLOW_TOP_LEVEL_AWAIT`` can now be passed in flags to enable "
"support for top-level ``await``, ``async for``, and ``async with``."
msgstr ""
"``ast.PyCF_ALLOW_TOP_LEVEL_AWAIT`` agora pode ser passado em *flags* para "
"habilitar o suporte em nível superior a ``await``, ``async for``, e ``async "
"with``."

#: ../../library/functions.rst:381
msgid ""
"Convert a single string or number to a complex number, or create a complex "
"number from real and imaginary parts."
msgstr ""
"Converte uma única string ou número para um número complexo, ou cria um "
"número complexo a partir de partes real e imaginária."

#: ../../library/functions.rst:384 ../../library/functions.rst:752
#: ../../library/functions.rst:998
msgid "Examples:"
msgstr "Exemplos:"

#: ../../library/functions.rst:386
msgid ""
">>> complex('+1.23')\n"
"(1.23+0j)\n"
">>> complex('-4.5j')\n"
"-4.5j\n"
">>> complex('-1.23+4.5j')\n"
"(-1.23+4.5j)\n"
">>> complex('\\t( -1.23+4.5J )\\n')\n"
"(-1.23+4.5j)\n"
">>> complex('-Infinity+NaNj')\n"
"(-inf+nanj)\n"
">>> complex(1.23)\n"
"(1.23+0j)\n"
">>> complex(imag=-4.5)\n"
"-4.5j\n"
">>> complex(-1.23, 4.5)\n"
"(-1.23+4.5j)"
msgstr ""
">>> complex('+1.23')\n"
"(1.23+0j)\n"
">>> complex('-4.5j')\n"
"-4.5j\n"
">>> complex('-1.23+4.5j')\n"
"(-1.23+4.5j)\n"
">>> complex('\\t( -1.23+4.5J )\\n')\n"
"(-1.23+4.5j)\n"
">>> complex('-Infinity+NaNj')\n"
"(-inf+nanj)\n"
">>> complex(1.23)\n"
"(1.23+0j)\n"
">>> complex(imag=-4.5)\n"
"-4.5j\n"
">>> complex(-1.23, 4.5)\n"
"(-1.23+4.5j)"

#: ../../library/functions.rst:405
msgid ""
"If the argument is a string, it must contain either a real part (in the same "
"format as for :func:`float`) or an imaginary part (in the same format but "
"with a ``'j'`` or ``'J'`` suffix), or both real and imaginary parts (the "
"sign of the imaginary part is mandatory in this case). The string can "
"optionally be surrounded by whitespaces and the round parentheses ``'('`` "
"and ``')'``, which are ignored. The string must not contain whitespace "
"between ``'+'``, ``'-'``, the ``'j'`` or ``'J'`` suffix, and the decimal "
"number. For example, ``complex('1+2j')`` is fine, but ``complex('1 + 2j')`` "
"raises :exc:`ValueError`. More precisely, the input must conform to the :"
"token:`~float:complexvalue` production rule in the following grammar, after "
"parentheses and leading and trailing whitespace characters are removed:"
msgstr ""
"Se o argumento for uma string, ele deve conter ou a parte real (com o mesmo "
"formato usado em :func:`float`) ou uma parte imaginária (com o mesmo "
"formato, mas com um sufixo ``'j'`` ou ``'J'``), ou então ambas as partes "
"real e imaginária (caso no qual o sinal da parte imaginária é obrigatório). "
"A string pode opcionalmente ser cercada por espaços em branco e parênteses "
"``'('`` e ``')'``, que são ignorados. A string não deve conter espaços em "
"branco entre os símbolos ``'+'``, ``'-'``, o sufixo ``'j'`` ou ``'J'``, e o "
"número decimal. Por examplo, ``complex('1+2j')`` é ok, mas ``complex('1 + "
"2j')`` levanta :exc:`ValueError`. Mais precisamente, após descartar os "
"parênteses e os espaços em branco do início e do final, a entrada deve ser "
"conforme a regra de produção :token:`~float:complexvalue` da gramática a "
"seguir:"

#: ../../library/functions.rst:424
msgid ""
"If the argument is a number, the constructor serves as a numeric conversion "
"like :class:`int` and :class:`float`. For a general Python object ``x``, "
"``complex(x)`` delegates to ``x.__complex__()``. If :meth:`~object."
"__complex__` is not defined then it falls back to :meth:`~object.__float__`. "
"If :meth:`!__float__` is not defined then it falls back to :meth:`~object."
"__index__`."
msgstr ""
"Se o argumento for um número, o construtor serve como uma conversão numérica "
"tal qual :class:`int` e :class:`float`. Para um objeto Python ``x`` "
"qualquer, ``complex(x)`` delega para ``x.__complex__()``. Se :meth:`~object."
"__complex__` não está definido então a chamada é repassada para :meth:"
"`~object.__float__`. Se :meth:`!__float__` não está definido então a chamada "
"é, novamente, repassada para :meth:`~object.__index__`."

#: ../../library/functions.rst:433
msgid ""
"If two arguments are provided or keyword arguments are used, each argument "
"may be any numeric type (including complex). If both arguments are real "
"numbers, return a complex number with the real component *real* and the "
"imaginary component *imag*. If both arguments are complex numbers, return a "
"complex number with the real component ``real.real-imag.imag`` and the "
"imaginary component ``real.imag+imag.real``. If one of arguments is a real "
"number, only its real component is used in the above expressions."
msgstr ""
"Se dois argumentos forem passados ou argumentos nomeados forem usados, cada "
"argumento pode ser de qualquer tipo numérico (incluindo complexo). Se ambos "
"argumentos forem números reais, é retornado um número complexo com *real* "
"como parte real e *imag* como parte imaginária. Se ambos os argumentos forem "
"números complexos, é retornado um número complexo com parte real ``real.real-"
"imag.imag`` e parte imaginária ``real.imag+imag.real``. Se um dos argumentos "
"for um número real, somente a sua parte real é usada nas expressões "
"anteriores."

#: ../../library/functions.rst:443
msgid "If all arguments are omitted, returns ``0j``."
msgstr "Se todos os argumentos forem omitidos, retorna ``0j``."

#: ../../library/functions.rst:445
msgid "The complex type is described in :ref:`typesnumeric`."
msgstr "O tipo complexo está descrito em :ref:`typesnumeric`."

#: ../../library/functions.rst:447 ../../library/functions.rst:804
#: ../../library/functions.rst:1047
msgid "Grouping digits with underscores as in code literals is allowed."
msgstr ""
"Agrupar dígitos com sublinhados como em literais de código é permitido."

#: ../../library/functions.rst:450
msgid ""
"Falls back to :meth:`~object.__index__` if :meth:`~object.__complex__` and :"
"meth:`~object.__float__` are not defined."
msgstr ""
"Chamadas para :meth:`~object.__index__` se :meth:`~object.__complex__` e :"
"meth:`~object.__float__` não estão definidas."

#: ../../library/functions.rst:457
msgid ""
"This is a relative of :func:`setattr`.  The arguments are an object and a "
"string.  The string must be the name of one of the object's attributes.  The "
"function deletes the named attribute, provided the object allows it.  For "
"example, ``delattr(x, 'foobar')`` is equivalent to ``del x.foobar``. *name* "
"need not be a Python identifier (see :func:`setattr`)."
msgstr ""
"Essa função está relacionada com :func:`setattr`. Os argumentos são um "
"objeto e uma string. A string deve ser o nome de um dos atributos do objeto. "
"A função remove o atributo indicado, desde que o objeto permita. Por "
"exemplo, ``delattr(x, 'foobar')`` é equivalente a ``del x.foobar``. *name* "
"não precisa ser um identificador Python  (veja :func:`setattr`)."

#: ../../library/functions.rst:470
msgid ""
"Create a new dictionary.  The :class:`dict` object is the dictionary class. "
"See :class:`dict` and :ref:`typesmapping` for documentation about this class."
msgstr ""
"Cria um novo dicionário. O objeto :class:`dict` é a classe do dicionário. "
"Veja :class:`dict` e :ref:`typesmapping` para documentação sobre esta classe."

#: ../../library/functions.rst:473
msgid ""
"For other containers see the built-in :class:`list`, :class:`set`, and :"
"class:`tuple` classes, as well as the :mod:`collections` module."
msgstr ""
"Para outros contêineres, consulte as classes embutidas :class:`list`, :class:"
"`set` e :class:`tuple`, bem como o módulo :mod:`collections`."

#: ../../library/functions.rst:480
msgid ""
"Without arguments, return the list of names in the current local scope.  "
"With an argument, attempt to return a list of valid attributes for that "
"object."
msgstr ""
"Sem argumentos, devolve a lista de nomes no escopo local atual. Com um "
"argumento, tentará devolver uma lista de atributos válidos para esse objeto."

#: ../../library/functions.rst:483
msgid ""
"If the object has a method named :meth:`~object.__dir__`, this method will "
"be called and must return the list of attributes. This allows objects that "
"implement a custom :func:`~object.__getattr__` or :func:`~object."
"__getattribute__` function to customize the way :func:`dir` reports their "
"attributes."
msgstr ""
"Se o objeto tiver um método chamado :meth:`~object.__dir__`, esse método "
"será chamado e deve devolver a lista de atributos. Isso permite que objetos "
"que implementam uma função personalizada :func:`~object.__getattr__` ou :"
"func:`~object.__getattribute__` personalizem a maneira como :func:`dir` "
"relata seus atributos."

#: ../../library/functions.rst:490
msgid ""
"If the object does not provide :meth:`~object.__dir__`, the function tries "
"its best to gather information from the object's :attr:`~object.__dict__` "
"attribute, if defined, and from its type object.  The resulting list is not "
"necessarily complete and may be inaccurate when the object has a custom :"
"func:`~object.__getattr__`."
msgstr ""
"Se o objeto não fornecer :meth:`__dir__`, a função tentará o melhor possível "
"para coletar informações do atributo :attr:`~object.__dict__` do objeto, se "
"definido, e do seu objeto de tipo. A lista resultante não está "
"necessariamente completa e pode ser imprecisa quando o objeto possui um :"
"func:`~object.__getattr__` personalizado."

#: ../../library/functions.rst:496
msgid ""
"The default :func:`dir` mechanism behaves differently with different types "
"of objects, as it attempts to produce the most relevant, rather than "
"complete, information:"
msgstr ""
"O mecanismo padrão :func:`dir` se comporta de maneira diferente com "
"diferentes tipos de objetos, pois tenta produzir as informações mais "
"relevantes e não completas:"

#: ../../library/functions.rst:500
msgid ""
"If the object is a module object, the list contains the names of the "
"module's attributes."
msgstr ""
"Se o objeto for um objeto de módulo, a lista conterá os nomes dos atributos "
"do módulo."

#: ../../library/functions.rst:503
msgid ""
"If the object is a type or class object, the list contains the names of its "
"attributes, and recursively of the attributes of its bases."
msgstr ""
"Se o objeto for um objeto de tipo ou classe, a lista conterá os nomes de "
"seus atributos e recursivamente os atributos de suas bases."

#: ../../library/functions.rst:506
msgid ""
"Otherwise, the list contains the object's attributes' names, the names of "
"its class's attributes, and recursively of the attributes of its class's "
"base classes."
msgstr ""
"Caso contrário, a lista conterá os nomes dos atributos do objeto, os nomes "
"dos atributos da classe e recursivamente os atributos das classes base da "
"classe."

#: ../../library/functions.rst:510
msgid "The resulting list is sorted alphabetically.  For example:"
msgstr "A lista resultante é alfabeticamente ordenada. Por exemplo:"

#: ../../library/functions.rst:530
msgid ""
"Because :func:`dir` is supplied primarily as a convenience for use at an "
"interactive prompt, it tries to supply an interesting set of names more than "
"it tries to supply a rigorously or consistently defined set of names, and "
"its detailed behavior may change across releases.  For example, metaclass "
"attributes are not in the result list when the argument is a class."
msgstr ""
"Como :func:`dir` é fornecido principalmente como uma conveniência para uso "
"em um prompt interativo, ele tenta fornecer um conjunto interessante de "
"nomes mais do que tenta fornecer um conjunto de nomes definido de forma "
"rigorosa ou consistente, e seu comportamento detalhado pode mudar nos "
"lançamentos. Por exemplo, os atributos de metaclasse não estão na lista de "
"resultados quando o argumento é uma classe."

#: ../../library/functions.rst:540
msgid ""
"Take two (non-complex) numbers as arguments and return a pair of numbers "
"consisting of their quotient and remainder when using integer division.  "
"With mixed operand types, the rules for binary arithmetic operators apply.  "
"For integers, the result is the same as ``(a // b, a % b)``. For floating-"
"point numbers the result is ``(q, a % b)``, where *q* is usually ``math."
"floor(a / b)`` but may be 1 less than that.  In any case ``q * b + a % b`` "
"is very close to *a*, if ``a % b`` is non-zero it has the same sign as *b*, "
"and ``0 <= abs(a % b) < abs(b)``."
msgstr ""
"Recebe dois números (não complexos) como argumentos e retorna um par de "
"números que consiste em seu quociente e resto ao usar a divisão inteira. Com "
"tipos de operandos mistos, as regras para operadores aritméticos binários se "
"aplicam. Para números inteiros, o resultado é o mesmo que ``(a // b, a % "
"b)``. Para números de ponto flutuante, o resultado é ``(q, a % b)``, onde "
"*q* geralmente é ``math.floor(a / b)``, mas pode ser 1 a menos que isso. Em "
"qualquer caso, ``q * b + a % b`` está muito próximo de *a*, se ``a % b`` é "
"diferente de zero, tem o mesmo sinal que *b* e ``0 <= abs(a % b) < abs(b)``."

#: ../../library/functions.rst:552
msgid ""
"Return an enumerate object. *iterable* must be a sequence, an :term:"
"`iterator`, or some other object which supports iteration. The :meth:"
"`~iterator.__next__` method of the iterator returned by :func:`enumerate` "
"returns a tuple containing a count (from *start* which defaults to 0) and "
"the values obtained from iterating over *iterable*."
msgstr ""
"Devolve um objeto enumerado. *iterable* deve ser uma sequência, um :term:"
"`iterador` ou algum outro objeto que suporte a iteração. O método :meth:"
"`~iterator.__next__` do iterador retornado por :func:`enumerate` devolve uma "
"tupla contendo uma contagem (a partir de *start*, cujo padrão é 0) e os "
"valores obtidos na iteração sobre *iterable*."

#: ../../library/functions.rst:564
msgid "Equivalent to::"
msgstr "Equivalente a::"

#: ../../library/functions.rst:566
msgid ""
"def enumerate(iterable, start=0):\n"
"    n = start\n"
"    for elem in iterable:\n"
"        yield n, elem\n"
"        n += 1"
msgstr ""
"def enumerate(iterable, start=0):\n"
"    n = start\n"
"    for elem in iterable:\n"
"        yield n, elem\n"
"        n += 1"

#: ../../library/functions.rst:0
msgid "Parameters"
msgstr "Parâmetros"

#: ../../library/functions.rst:576
msgid "A Python expression."
msgstr "Uma expressão Python."

#: ../../library/functions.rst:580
msgid "The global namespace (default: ``None``)."
msgstr "O espaço de nomes global (por padrão, ``None``)."

#: ../../library/functions.rst:584
msgid "The local namespace (default: ``None``)."
msgstr "O espaço de nomes local (por padrão, ``None``)."

#: ../../library/functions.rst:0
msgid "Returns"
msgstr "Retorna"

#: ../../library/functions.rst:588
msgid "The result of the evaluated expression."
msgstr "O resultado da expressão avaliada."

#: ../../library/functions.rst:0
msgid "raises"
msgstr "levanta"

#: ../../library/functions.rst:589
msgid "Syntax errors are reported as exceptions."
msgstr "Erros de sintaxe são reportados como exceções."

#: ../../library/functions.rst:593 ../../library/functions.rst:654
msgid ""
"This function executes arbitrary code. Calling it with user-supplied input "
"may lead to security vulnerabilities."
msgstr ""
"Esta função executa código arbitrário. Chamá-la com entrada fornecida pelo "
"usuário pode levar a vulnerabilidades de segurança."

#: ../../library/functions.rst:596
msgid ""
"The *expression* argument is parsed and evaluated as a Python expression "
"(technically speaking, a condition list) using the *globals* and *locals* "
"mappings as global and local namespace.  If the *globals* dictionary is "
"present and does not contain a value for the key ``__builtins__``, a "
"reference to the dictionary of the built-in module :mod:`builtins` is "
"inserted under that key before *expression* is parsed.  That way you can "
"control what builtins are available to the executed code by inserting your "
"own ``__builtins__`` dictionary into *globals* before passing it to :func:"
"`eval`.  If the *locals* mapping is omitted it defaults to the *globals* "
"dictionary.  If both mappings are omitted, the expression is executed with "
"the *globals* and *locals* in the environment where :func:`eval` is called.  "
"Note, *eval()* will only have access to the :term:`nested scopes <nested "
"scope>` (non-locals) in the enclosing environment if they are already "
"referenced in the scope that is calling :func:`eval` (e.g. via a :keyword:"
"`nonlocal` statement)."
msgstr ""
"O argumento *expression* é analisado e avaliado como uma expressão Python "
"(tecnicamente falando, uma lista de condições) usando os mapeamentos "
"*globals* e *locals* como espaços de nomes globais e locais. Se o dicionário "
"*globals* estiver presente e não contiver um valor para a chave "
"``__builtins__``, uma referência ao dicionário do módulo embutido :mod:"
"`builtins` será inserida sob essa chave antes de *expression* ser analisado. "
"Dessa forma, você pode controlar quais funções embutidas estão disponíveis "
"para o código executado inserindo seu próprio dicionário ``__builtins__`` em "
"*globals* antes de passá-lo para :func:`eval`. Se o mapeamento *locals* for "
"omitido, o padrão será o dicionário *globals*. Se os dois mapeamentos forem "
"omitidos, a expressão será executada com os *globals* e *locals* no ambiente "
"em que :func:`eval` é chamado. Observe que *eval()* terá acesso a :term:"
"`escopos aninhados <nested scope>` (não locais) no ambiente anexo somente se "
"eles já forem referenciados pelo escopo que está chamando :func:`eval` (por "
"exemplo, via uma instrução :keyword:`nonlocal`)."

#: ../../library/functions.rst:612
msgid "Example:"
msgstr "Exemplo:"

#: ../../library/functions.rst:618
msgid ""
"This function can also be used to execute arbitrary code objects (such as "
"those created by :func:`compile`).  In this case, pass a code object instead "
"of a string.  If the code object has been compiled with ``'exec'`` as the "
"*mode* argument, :func:`eval`\\'s return value will be ``None``."
msgstr ""
"Esta função também pode ser usada para executar objetos código arbitrários "
"(como os criados por :func:`compile`). Nesse caso, passe um objeto código em "
"vez de uma string. Se o objeto código foi compilado com ``'exec'`` como o "
"argumento *mode*, o valor de retorno de :func:`eval` será ``None``."

#: ../../library/functions.rst:623
msgid ""
"Hints: dynamic execution of statements is supported by the :func:`exec` "
"function.  The :func:`globals` and :func:`locals` functions return the "
"current global and local dictionary, respectively, which may be useful to "
"pass around for use by :func:`eval` or :func:`exec`."
msgstr ""
"Dicas: a execução dinâmica de instruções é suportada pela função :func:"
"`exec`. As funções :func:`globals` e :func:`locals` retornam o dicionário "
"global e local atual, respectivamente, o que pode ser útil para ser usado "
"por :func:`eval` ou :func:`exec`."

#: ../../library/functions.rst:628
msgid ""
"If the given source is a string, then leading and trailing spaces and tabs "
"are stripped."
msgstr ""
"Se a fonte fornecida for uma string, os espaços e tabulações à esquerda ou à "
"direita serão removidos."

#: ../../library/functions.rst:631
msgid ""
"See :func:`ast.literal_eval` for a function that can safely evaluate strings "
"with expressions containing only literals."
msgstr ""
"Veja :func:`ast.literal_eval` para uma função que pode avaliar com segurança "
"strings com expressões contendo apenas literais."

#: ../../library/functions.rst:634 ../../library/functions.rst:636
#: ../../library/functions.rst:696 ../../library/functions.rst:698
msgid ""
"Raises an :ref:`auditing event <auditing>` ``exec`` with the code object as "
"the argument. Code compilation events may also be raised."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``exec`` com o código "
"objeto como argumento. Eventos de compilação de código também podem ser "
"levantados."

#: ../../library/functions.rst:641 ../../library/functions.rst:718
msgid "The *globals* and *locals* arguments can now be passed as keywords."
msgstr ""
"Os argumentos *globals* e *locals* podem agora ser passados como argumentos "
"nomeados."

#: ../../library/functions.rst:645 ../../library/functions.rst:722
msgid ""
"The semantics of the default *locals* namespace have been adjusted as "
"described for the :func:`locals` builtin."
msgstr ""
"A forma de uso do espaço de nomes *locals* padrão foi ajustado conforme "
"descrito na função embutida :func:`locals`."

#: ../../library/functions.rst:657
msgid ""
"This function supports dynamic execution of Python code. *source* must be "
"either a string or a code object.  If it is a string, the string is parsed "
"as a suite of Python statements which is then executed (unless a syntax "
"error occurs). [#]_ If it is a code object, it is simply executed.  In all "
"cases, the code that's executed is expected to be valid as file input (see "
"the section :ref:`file-input` in the Reference Manual). Be aware that the :"
"keyword:`nonlocal`, :keyword:`yield`,  and :keyword:`return` statements may "
"not be used outside of function definitions even within the context of code "
"passed to the :func:`exec` function. The return value is ``None``."
msgstr ""
"Esta função suporta a execução dinâmica de código Python. O parâmetro "
"*source* deve ser ou uma string ou um objeto código. Se for uma string, a "
"mesma é analisada como um conjunto de instruções Python, o qual é então "
"executado (exceto caso um erro de sintaxe ocorra). [#]_ Se for um objeto "
"código, ele é simplesmente executado. Em todos os casos, espera-se que o "
"código a ser executado seja válido como um arquivo de entrada (veja a seção :"
"ref:`file-input` no Manual de Referência). Tenha cuidado, pois as "
"instruções :keyword:`nonlocal`, :keyword:`yield` e :keyword:`return` não "
"podem ser usadas fora das definições de funções mesmo dentro do contexto do "
"código passado para a função :func:`exec` . O valor de retorno é sempre "
"``None``."

#: ../../library/functions.rst:668
msgid ""
"In all cases, if the optional parts are omitted, the code is executed in the "
"current scope.  If only *globals* is provided, it must be a dictionary (and "
"not a subclass of dictionary), which will be used for both the global and "
"the local variables.  If *globals* and *locals* are given, they are used for "
"the global and local variables, respectively.  If provided, *locals* can be "
"any mapping object.  Remember that at the module level, globals and locals "
"are the same dictionary."
msgstr ""
"Em todos os casos, se os parâmetros opcionais são omitidos, o código é "
"executado no escopo atual. Se somente *globals* é fornecido, deve ser um "
"dicionário (e não uma subclasse de dicionário), que será usado tanto para as "
"variáveis globais quanto para locais. Se *globals* e *locals* são "
"fornecidos, eles são usados para as variáveis globais e locais, "
"respectivamente. Se fornecido, *locals* pode ser qualquer objeto de "
"mapeamento. Lembre que no nível de módulo, globais e locais são o mesmo "
"dicionário."

#: ../../library/functions.rst:678
msgid ""
"When ``exec`` gets two separate objects as *globals* and *locals*, the code "
"will be executed as if it were embedded in a class definition. This means "
"functions and classes defined in the executed code will not be able to "
"access variables assigned at the top level (as the \"top level\" variables "
"are treated as class variables in a class definition)."
msgstr ""
"Quando or ``exec`` recebe dois objetos separados como *globals* and "
"*locals*, o código será executado como se estivesse embutido em uma "
"definição de classe. Isso significa que funções e classes definidas no "
"código executado não poderão acessar variáveis que sofreram atribuições no "
"escopo mais externo (pois, em uma definição de classe, tais variáveis seriam "
"tratadas como variáveis de classe)."

#: ../../library/functions.rst:684
msgid ""
"If the *globals* dictionary does not contain a value for the key "
"``__builtins__``, a reference to the dictionary of the built-in module :mod:"
"`builtins` is inserted under that key.  That way you can control what "
"builtins are available to the executed code by inserting your own "
"``__builtins__`` dictionary into *globals* before passing it to :func:`exec`."
msgstr ""
"Se o dicionário *globals* não contém um valor para a chave ``__builtins__``, "
"a referência para o dicionário do módulo embutido :mod:`builtins` é inserido "
"com essa chave. A maneira que você pode controlar quais embutidos estão "
"disponíveis para o código executado é inserindo seu próprio ``__builtins__`` "
"dicionário em *globals* antes de passar para :func:`exec`."

#: ../../library/functions.rst:690
msgid ""
"The *closure* argument specifies a closure--a tuple of cellvars. It's only "
"valid when the *object* is a code object containing :term:`free (closure) "
"variables <closure variable>`. The length of the tuple must exactly match "
"the length of the code object's :attr:`~codeobject.co_freevars` attribute."
msgstr ""
"O argumento *closure* especifica uma clausura -- uma tupla de cellvars. Só é "
"válido quando o *objeto* é um objeto código contendo :term:`variáveis livres "
"(de clausura) <closure variable>`. O comprimento da tupla deve corresponder "
"exatamente ao comprimento do atributo :attr:`~codeobject.co_freevars` do "
"objeto código."

#: ../../library/functions.rst:703
msgid ""
"The built-in functions :func:`globals` and :func:`locals` return the current "
"global and local namespace, respectively, which may be useful to pass around "
"for use as the second and third argument to :func:`exec`."
msgstr ""
"As funções embutidas :func:`globals` e :func:`locals` devolvem o espaço de "
"nomes global e local, respectivamente, o que pode ser útil para passar "
"adiante e usar como segundo ou terceiro argumento para :func:`exec`."

#: ../../library/functions.rst:709
msgid ""
"The default *locals* act as described for function :func:`locals` below. "
"Pass an explicit *locals* dictionary if you need to see effects of the code "
"on *locals* after function :func:`exec` returns."
msgstr ""
"*locals* padrão atua como descrito pela função :func:`locals` abaixo. Se "
"você precisa ver efeitos do código em *locals* depois da função :func:`exec` "
"retornar passe um dicionário *locals* explícito."

#: ../../library/functions.rst:713
msgid "Added the *closure* parameter."
msgstr "Adicionado o parâmetro *closure*."

#: ../../library/functions.rst:728
msgid ""
"Construct an iterator from those elements of *iterable* for which *function* "
"is true.  *iterable* may be either a sequence, a container which supports "
"iteration, or an iterator.  If *function* is ``None``, the identity function "
"is assumed, that is, all elements of *iterable* that are false are removed."
msgstr ""
"Constrói um iterador a partir dos elementos de *iterable* para os quais "
"*function* é verdadeiro. *iterable* pode ser uma sequência, um contêiner que "
"com suporte a iteração, ou um iterador. Se *function* for ``None``, a função "
"identidade será usada, isto é, todos os elementos de *iterable* que são "
"falsos são removidos."

#: ../../library/functions.rst:734
msgid ""
"Note that ``filter(function, iterable)`` is equivalent to the generator "
"expression ``(item for item in iterable if function(item))`` if function is "
"not ``None`` and ``(item for item in iterable if item)`` if function is "
"``None``."
msgstr ""
"Note que ``filter(function, iterable)`` é equivalente a expressão geradora "
"``(item for item in iterable if function(item))`` se *function* não for "
"``None`` e ``(item for item in iterable if item)`` se *function* for "
"``None``."

#: ../../library/functions.rst:739
msgid ""
"See :func:`itertools.filterfalse` for the complementary function that "
"returns elements of *iterable* for which *function* is false."
msgstr ""
"Veja :func:`itertools.filterfalse` para a função complementar que devolve "
"elementos de *iterable* para os quais *function* é falso."

#: ../../library/functions.rst:750
msgid "Return a floating-point number constructed from a number or a string."
msgstr ""
"Retorna um número de ponto flutuante construído a partir de um número ou "
"string."

#: ../../library/functions.rst:754
msgid ""
">>> float('+1.23')\n"
"1.23\n"
">>> float('   -12345\\n')\n"
"-12345.0\n"
">>> float('1e-003')\n"
"0.001\n"
">>> float('+1E6')\n"
"1000000.0\n"
">>> float('-Infinity')\n"
"-inf"
msgstr ""
">>> float('+1.23')\n"
"1.23\n"
">>> float('   -12345\\n')\n"
"-12345.0\n"
">>> float('1e-003')\n"
"0.001\n"
">>> float('+1E6')\n"
"1000000.0\n"
">>> float('-Infinity')\n"
"-inf"

#: ../../library/functions.rst:767
msgid ""
"If the argument is a string, it should contain a decimal number, optionally "
"preceded by a sign, and optionally embedded in whitespace.  The optional "
"sign may be ``'+'`` or ``'-'``; a ``'+'`` sign has no effect on the value "
"produced.  The argument may also be a string representing a NaN (not-a-"
"number), or positive or negative infinity. More precisely, the input must "
"conform to the :token:`~float:floatvalue` production rule in the following "
"grammar, after leading and trailing whitespace characters are removed:"
msgstr ""
"Se o argumento for uma string, ele deve conter um número decimal, "
"opcionalmente precedido por um sinal e opcionalmente embutido em um espaço "
"em branco. O sinal opcional pode ser ``'+'`` ou ``'-'``; um sinal ``'+'`` "
"não tem efeito no valor produzido. O argumento também pode ser uma string "
"representando um NaN (não um número) ou infinito positivo ou negativo. Mais "
"precisamente, a entrada deve estar de acordo com a regra de produção :token:"
"`~float:floatvalue` na seguinte gramática, depois que os espaços em branco "
"iniciais e finais forem removidos:"

#: ../../library/functions.rst:788
msgid ""
"Case is not significant, so, for example, \"inf\", \"Inf\", \"INFINITY\", "
"and \"iNfINity\" are all acceptable spellings for positive infinity."
msgstr ""
"O caso não é significativo, então, por exemplo, \"inf\", \"Inf\", "
"\"INFINITY\" e \"iNfINity\" são todas grafias aceitáveis para o infinito "
"positivo."

#: ../../library/functions.rst:791
msgid ""
"Otherwise, if the argument is an integer or a floating-point number, a "
"floating-point number with the same value (within Python's floating-point "
"precision) is returned.  If the argument is outside the range of a Python "
"float, an :exc:`OverflowError` will be raised."
msgstr ""
"Caso contrário, se o argumento é um inteiro ou um número de ponto flutuante, "
"um número de ponto flutuante com o mesmo valor (com a precisão de ponto "
"flutuante de Python) é retornado. Se o argumento está fora do intervalo de "
"um ponto flutuante Python, uma exceção :exc:`OverflowError` será lançada."

#: ../../library/functions.rst:796
msgid ""
"For a general Python object ``x``, ``float(x)`` delegates to ``x."
"__float__()``.  If :meth:`~object.__float__` is not defined then it falls "
"back to :meth:`~object.__index__`."
msgstr ""
"Para um objeto Python genérico ``x``, ``float(x)`` delega para o método ``x."
"__float__()``. Se :meth:`~object.__float__` não estiver definido, então ele "
"delega para o método :meth:`~object.__index__`."

#: ../../library/functions.rst:800
msgid "If no argument is given, ``0.0`` is returned."
msgstr "Se nenhum argumento for fornecido, será retornado ``0.0``."

#: ../../library/functions.rst:802
msgid "The float type is described in :ref:`typesnumeric`."
msgstr "O tipo float é descrito em :ref:`typesnumeric`."

#: ../../library/functions.rst:810
msgid ""
"Falls back to :meth:`~object.__index__` if :meth:`~object.__float__` is not "
"defined."
msgstr ""
"Chamada para :meth:`~object.__index__` se :meth:`~object.__float__` não está "
"definido."

#: ../../library/functions.rst:820
msgid ""
"Convert a *value* to a \"formatted\" representation, as controlled by "
"*format_spec*.  The interpretation of *format_spec* will depend on the type "
"of the *value* argument; however, there is a standard formatting syntax that "
"is used by most built-in types: :ref:`formatspec`."
msgstr ""
"Converte um valor *value* em uma representação \"formatada\", controlado por "
"*format_spec*. A interpretação de *format_spec* dependerá do tipo do "
"argumento *value*; no entanto há uma sintaxe de formatação padrão usada pela "
"maioria dos tipos embutidos: :ref:`formatspec`."

#: ../../library/functions.rst:825
msgid ""
"The default *format_spec* is an empty string which usually gives the same "
"effect as calling :func:`str(value) <str>`."
msgstr ""
"O *format_spec* padrão é uma string vazia que geralmente produz o mesmo "
"efeito que chamar :func:`str(value) <str>`."

#: ../../library/functions.rst:828
msgid ""
"A call to ``format(value, format_spec)`` is translated to ``type(value)."
"__format__(value, format_spec)`` which bypasses the instance dictionary when "
"searching for the value's :meth:`~object.__format__` method. A :exc:"
"`TypeError` exception is raised if the method search reaches :mod:`object` "
"and the *format_spec* is non-empty, or if either the *format_spec* or the "
"return value are not strings."
msgstr ""
"Uma chamada de ``format(value, format_spec)`` é convertida em ``type(value)."
"__format__(value, format_spec)``, que ignora o dicionário da instância ao "
"pesquisar o método :meth:`~object.__format__` de ``value``. Uma exceção :exc:"
"`TypeError` é levantada se a pesquisa do método atingir :mod:`object` e o "
"*format_spec* não estiver vazio, ou se o *format_spec* ou o valor de retorno "
"não forem strings."

#: ../../library/functions.rst:835
msgid ""
"``object().__format__(format_spec)`` raises :exc:`TypeError` if "
"*format_spec* is not an empty string."
msgstr ""
"``object().__format__(format_spec)`` levanta um :exc:`TypeError` se "
"*format_spec* não for uma string vazia."

#: ../../library/functions.rst:844
msgid ""
"Return a new :class:`frozenset` object, optionally with elements taken from "
"*iterable*.  ``frozenset`` is a built-in class.  See :class:`frozenset` and :"
"ref:`types-set` for documentation about this class."
msgstr ""
"Devolve um novo objeto :class:`frozenset`, opcionalmente com elementos "
"obtidos de *iterable*. ``frozenset`` é uma classe embutida. Veja :class:"
"`frozenset` e :ref:`types-set` para documentação sobre essas classes."

#: ../../library/functions.rst:848
msgid ""
"For other containers see the built-in :class:`set`, :class:`list`, :class:"
"`tuple`, and :class:`dict` classes, as well as the :mod:`collections` module."
msgstr ""
"Para outros contêineres veja as classes embutidas :class:`set`, :class:"
"`list`, :class:`tuple`, e :class:`dict`, assim como o módulo :mod:"
"`collections`."

#: ../../library/functions.rst:856
msgid ""
"Return the value of the named attribute of *object*.  *name* must be a "
"string. If the string is the name of one of the object's attributes, the "
"result is the value of that attribute.  For example, ``getattr(x, "
"'foobar')`` is equivalent to ``x.foobar``.  If the named attribute does not "
"exist, *default* is returned if provided, otherwise :exc:`AttributeError` is "
"raised. *name* need not be a Python identifier (see :func:`setattr`)."
msgstr ""
"Devolve o valor do atributo *name* de *object*. *name* deve ser uma string. "
"Se a string é o nome de um dos atributos do objeto, o resultado é o valor de "
"tal atributo. Por exemplo, ``getattr(x, 'foobar')`` é equivalente a ``x."
"foobar``. Se o atributo não existir, *default* é devolvido se tiver sido "
"fornecido, caso contrário a exceção :exc:`AttributeError` é levantada. "
"*name* não precisa ser um identificador Python (veja :func:`setattr`)."

#: ../../library/functions.rst:865
msgid ""
"Since :ref:`private name mangling <private-name-mangling>` happens at "
"compilation time, one must manually mangle a private attribute's (attributes "
"with two leading underscores) name in order to retrieve it with :func:"
"`getattr`."
msgstr ""
"Uma vez que :ref:`desfiguração de nome privado <private-name-mangling>` "
"acontece em tempo de compilação, deve-se manualmente mutilar o nome de um "
"atributo privado (atributos com dois sublinhados à esquerda) para recuperá-"
"lo com :func:`getattr`."

#: ../../library/functions.rst:873
msgid ""
"Return the dictionary implementing the current module namespace. For code "
"within functions, this is set when the function is defined and remains the "
"same regardless of where the function is called."
msgstr ""
"Retorna o dicionário implementando o espaço de nomes do módulo atual. Para "
"código dentro de funções, isso é definido quando a função é definida e "
"permanece o mesmo, independentemente de onde a função é chamada."

#: ../../library/functions.rst:880
msgid ""
"The arguments are an object and a string.  The result is ``True`` if the "
"string is the name of one of the object's attributes, ``False`` if not. "
"(This is implemented by calling ``getattr(object, name)`` and seeing whether "
"it raises an :exc:`AttributeError` or not.)"
msgstr ""
"Os argumentos são um objeto e uma string. O resultado é ``True`` se a string "
"é o nome de um dos atributos do objeto, e ``False`` se ela não for. (Isto é "
"implementado chamando ``getattr(object, name)`` e vendo se levanta um :exc:"
"`AttributeError` ou não.)"

#: ../../library/functions.rst:888
msgid ""
"Return the hash value of the object (if it has one).  Hash values are "
"integers.  They are used to quickly compare dictionary keys during a "
"dictionary lookup.  Numeric values that compare equal have the same hash "
"value (even if they are of different types, as is the case for 1 and 1.0)."
msgstr ""
"Retorna o valor hash de um objeto (se houver um). Valores hash são números "
"inteiros. Eles são usados para rapidamente comparar chaves de dicionários "
"durante uma pesquisa em um dicionário. Valores numéricos que ao serem "
"comparados são iguais, possuem o mesmo valor hash (mesmo que eles sejam de "
"tipos diferentes, como é o caso de 1 e 1.0)."

#: ../../library/functions.rst:895
msgid ""
"For objects with custom :meth:`~object.__hash__` methods, note that :func:"
"`hash` truncates the return value based on the bit width of the host machine."
msgstr ""
"Para objetos com métodos :meth:`~object.__hash__` personalizados, fique "
"atento que :func:`hash` trunca o valor devolvido baseado no comprimento de "
"bits da máquina hospedeira."

#: ../../library/functions.rst:902
msgid ""
"Invoke the built-in help system.  (This function is intended for interactive "
"use.)  If no argument is given, the interactive help system starts on the "
"interpreter console.  If the argument is a string, then the string is looked "
"up as the name of a module, function, class, method, keyword, or "
"documentation topic, and a help page is printed on the console.  If the "
"argument is any other kind of object, a help page on the object is generated."
msgstr ""
"Invoca o sistema de ajuda embutido. (Esta função é destinada para uso "
"interativo.) Se nenhum argumento é passado, o sistema interativo de ajuda "
"inicia no interpretador do console. Se o argumento é uma string, então a "
"string é pesquisada como o nome de um módulo, função, classe, método, "
"palavra-chave, ou tópico de documentação, e a página de ajuda é exibida no "
"console. Se o argumento é qualquer outro tipo de objeto, uma página de ajuda "
"para o objeto é gerada."

#: ../../library/functions.rst:909
msgid ""
"Note that if a slash(/) appears in the parameter list of a function when "
"invoking :func:`help`, it means that the parameters prior to the slash are "
"positional-only. For more info, see :ref:`the FAQ entry on positional-only "
"parameters <faq-positional-only-arguments>`."
msgstr ""
"Note que se uma barra(/) aparecer na lista de parâmetros de uma função, "
"quando invocando :func:`help`, significa que os parâmetros anteriores a "
"barra são apenas posicionais. Para mais informações, veja :ref:`a entrada no "
"FAQ sobre parâmetros somente-posicionais <faq-positional-only-arguments>`."

#: ../../library/functions.rst:914
msgid ""
"This function is added to the built-in namespace by the :mod:`site` module."
msgstr ""
"Esta função é adicionada ao espaço de nomes embutido pelo módulo :mod:`site`."

#: ../../library/functions.rst:916
msgid ""
"Changes to :mod:`pydoc` and :mod:`inspect` mean that the reported signatures "
"for callables are now more comprehensive and consistent."
msgstr ""
"Mudanças em :mod:`pydoc` e :mod:`inspect` significam que as assinaturas "
"reportadas para chamáveis agora são mais compreensíveis e consistentes."

#: ../../library/functions.rst:923
msgid ""
"Convert an integer number to a lowercase hexadecimal string prefixed with "
"\"0x\". If *x* is not a Python :class:`int` object, it has to define an :"
"meth:`~object.__index__` method that returns an integer. Some examples:"
msgstr ""
"Converte um número inteiro para uma string hexadecimal em letras minúsculas "
"pré-fixada com \"0x\". Se *x* não é um objeto :class:`int` do Python, ele "
"tem que definir um método :meth:`~object.__index__` que retorne um inteiro. "
"Alguns exemplos:"

#: ../../library/functions.rst:932
msgid ""
"If you want to convert an integer number to an uppercase or lower "
"hexadecimal string with prefix or not, you can use either of the following "
"ways:"
msgstr ""
"Se você quer converter um número inteiro para uma string hexadecimal em "
"letras maiúsculas ou minúsculas, com prefixo ou sem, você pode usar qualquer "
"uma das seguintes maneiras:"

#: ../../library/functions.rst:944
msgid ""
"See also :func:`int` for converting a hexadecimal string to an integer using "
"a base of 16."
msgstr ""
"Veja também :func:`int` para converter uma string hexadecimal para um "
"inteiro usando a base 16."

#: ../../library/functions.rst:949
msgid ""
"To obtain a hexadecimal string representation for a float, use the :meth:"
"`float.hex` method."
msgstr ""
"Para obter uma string hexadecimal de um ponto flutuante, use o método :meth:"
"`float.hex`."

#: ../../library/functions.rst:955
msgid ""
"Return the \"identity\" of an object.  This is an integer which is "
"guaranteed to be unique and constant for this object during its lifetime. "
"Two objects with non-overlapping lifetimes may have the same :func:`id` "
"value."
msgstr ""
"Devolve a \"identidade\" de um objeto. Ele é um inteiro, o qual é garantido "
"que será único e constante para este objeto durante todo o seu ciclo de "
"vida. Dois objetos com ciclos de vida não sobrepostos podem ter o mesmo "
"valor para :func:`id`."

#: ../../library/functions.rst:960
msgid "This is the address of the object in memory."
msgstr "Este é o endereço do objeto na memória."

#: ../../library/functions.rst:962
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.id`` with argument "
"``id``."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``builtins.id`` com o "
"argumento ``id``."

#: ../../library/functions.rst:968
msgid ""
"If the *prompt* argument is present, it is written to standard output "
"without a trailing newline.  The function then reads a line from input, "
"converts it to a string (stripping a trailing newline), and returns that.  "
"When EOF is read, :exc:`EOFError` is raised.  Example::"
msgstr ""
"Se o argumento *prompt* estiver presente, escreve na saída padrão sem uma "
"nova linha ao final. A função então lê uma linha da fonte de entrada, "
"converte a mesma para uma string (removendo o caractere de nova linha ao "
"final), e devolve isso. Quando o final do arquivo (EOF / end-of-file) é "
"encontrado, um erro :exc:`EOFError` é levantado. Exemplo::"

#: ../../library/functions.rst:973
msgid ""
">>> s = input('--> ')\n"
"--> Monty Python's Flying Circus\n"
">>> s\n"
"\"Monty Python's Flying Circus\""
msgstr ""
">>> s = input('--> ')\n"
"--> Monty Python's Flying Circus\n"
">>> s\n"
"\"Monty Python's Flying Circus\""

#: ../../library/functions.rst:978
msgid ""
"If the :mod:`readline` module was loaded, then :func:`input` will use it to "
"provide elaborate line editing and history features."
msgstr ""
"Se o módulo :mod:`readline` foi carregado, então :func:`input` usará ele "
"para prover edição de linhas elaboradas e funcionalidades de histórico."

#: ../../library/functions.rst:981 ../../library/functions.rst:983
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.input`` with argument "
"``prompt`` before reading input"
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``builtins.input`` com "
"argumento ``prompt`` antes de ler a entrada."

#: ../../library/functions.rst:986 ../../library/functions.rst:988
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.input/result`` with "
"the result after successfully reading input."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``builtins.input/result`` "
"com o resultado depois de ler a entrada com sucesso."

#: ../../library/functions.rst:995
msgid ""
"Return an integer object constructed from a number or a string, or return "
"``0`` if no arguments are given."
msgstr ""
"Retorna um objeto do tipo inteiro construído a partir de um número ou "
"string, ou retorna ``0`` caso nenhum argumento seja passado."

#: ../../library/functions.rst:1000
msgid ""
">>> int(123.45)\n"
"123\n"
">>> int('123')\n"
"123\n"
">>> int('   -12_345\\n')\n"
"-12345\n"
">>> int('FACE', 16)\n"
"64206\n"
">>> int('0xface', 0)\n"
"64206\n"
">>> int('01110011', base=2)\n"
"115"
msgstr ""
">>> int(123.45)\n"
"123\n"
">>> int('123')\n"
"123\n"
">>> int('   -12_345\\n')\n"
"-12345\n"
">>> int('FACE', 16)\n"
"64206\n"
">>> int('0xface', 0)\n"
"64206\n"
">>> int('01110011', base=2)\n"
"115"

#: ../../library/functions.rst:1015
msgid ""
"If the argument defines :meth:`~object.__int__`, ``int(x)`` returns ``x."
"__int__()``.  If the argument defines :meth:`~object.__index__`, it returns "
"``x.__index__()``.  If the argument defines :meth:`~object.__trunc__`, it "
"returns ``x.__trunc__()``. For floating-point numbers, this truncates "
"towards zero."
msgstr ""
"Se o argumento definir um método :meth:`~object.__int__`, então ``int(x)`` "
"retorna ``x.__int__()``. Se *x* definir um método :meth:`~object.__index__`, "
"então ele retorna ``x.__index__()``. Se o argumento definir um método :meth:"
"`~object.__trunc__`, então ele retorna ``x.__trunc__()``. Para números de "
"ponto flutuante, isto trunca o número na direção do zero."

#: ../../library/functions.rst:1021
msgid ""
"If the argument is not a number or if *base* is given, then it must be a "
"string, :class:`bytes`, or :class:`bytearray` instance representing an "
"integer in radix *base*.  Optionally, the string can be preceded by ``+`` or "
"``-`` (with no space in between), have leading zeros, be surrounded by "
"whitespace, and have single underscores interspersed between digits."
msgstr ""
"Se o argumento não for um número ou se *base* for fornecido, então o "
"argumento deve ser uma instância de string, :class:`bytes` ou :class:"
"`bytearray` representando um inteiro na base *base*. Opcionalmente, a string "
"pode ser precedida por ``+`` ou ``-`` (sem espaço entre eles), ter zeros à "
"esquerda, estar entre espaços em branco e ter sublinhados simples "
"intercalados entre os dígitos."

#: ../../library/functions.rst:1027
msgid ""
"A base-n integer string contains digits, each representing a value from 0 to "
"n-1. The values 0--9 can be represented by any Unicode decimal digit. The "
"values 10--35 can be represented by ``a`` to ``z`` (or ``A`` to ``Z``). The "
"default *base* is 10. The allowed bases are 0 and 2--36. Base-2, -8, and -16 "
"strings can be optionally prefixed with ``0b``/``0B``, ``0o``/``0O``, or "
"``0x``/``0X``, as with integer literals in code.  For base 0, the string is "
"interpreted in a similar way to an :ref:`integer literal in code "
"<integers>`, in that the actual base is 2, 8, 10, or 16 as determined by the "
"prefix. Base 0 also disallows leading zeros: ``int('010', 0)`` is not legal, "
"while ``int('010')`` and ``int('010', 8)`` are."
msgstr ""
"Uma string de inteiro de base n contém dígitos, cada um representando um "
"valor de 0 a n-1. Os valores 0--9 podem ser representados por qualquer "
"dígito decimal Unicode. Os valores 10--35 podem ser representados por ``a`` "
"a ``z`` (ou ``A`` a ``Z``). A *base* padrão é 10. As bases permitidas são 0 "
"e 2--36. As strings base-2, -8 e -16 podem ser opcionalmente prefixadas com "
"``0b``/``0B``, ``0o``/``0O`` ou ``0x``/``0X``, como acontece com literais "
"inteiros no código. Para a base 0, a string é interpretada de maneira "
"semelhante a um :ref:`literal inteiro no código <integers>`, em que a base "
"real é 2, 8, 10 ou 16 conforme determinado pelo prefixo. A base 0 também não "
"permite zeros à esquerda: ``int('010', 0)`` não é válido, enquanto "
"``int('010')`` e ``int('010', 8)`` são."

#: ../../library/functions.rst:1038
msgid "The integer type is described in :ref:`typesnumeric`."
msgstr "O tipo inteiro está descrito em :ref:`typesnumeric`."

#: ../../library/functions.rst:1040
msgid ""
"If *base* is not an instance of :class:`int` and the *base* object has a :"
"meth:`base.__index__ <object.__index__>` method, that method is called to "
"obtain an integer for the base.  Previous versions used :meth:`base.__int__ "
"<object.__int__>` instead of :meth:`base.__index__ <object.__index__>`."
msgstr ""
"Se *base* não é uma instância de :class:`int` e o objeto *base* tem um "
"método :meth:`base.__index__ <object.__index__>`, então esse método é "
"chamado para obter um inteiro para a base. Versões anteriores usavam :meth:"
"`base.__int__ <object.__int__>` ao invés de :meth:`base.__index__ <object."
"__index__>`."

#: ../../library/functions.rst:1050
msgid "The first parameter is now positional-only."
msgstr "O primeiro parâmetro agora é somente-posicional."

#: ../../library/functions.rst:1053
msgid ""
"Falls back to :meth:`~object.__index__` if :meth:`~object.__int__` is not "
"defined."
msgstr ""
"Chamada para :meth:`~object.__index__` se :meth:`~object.__int__` não está "
"definido."

#: ../../library/functions.rst:1056
msgid "The delegation to :meth:`~object.__trunc__` is deprecated."
msgstr "A delegação de :meth:`~object.__trunc__` foi descontinuada."

#: ../../library/functions.rst:1059
msgid ""
":class:`int` string inputs and string representations can be limited to help "
"avoid denial of service attacks. A :exc:`ValueError` is raised when the "
"limit is exceeded while converting a string to an :class:`int` or when "
"converting an :class:`int` into a string would exceed the limit. See the :"
"ref:`integer string conversion length limitation <int_max_str_digits>` "
"documentation."
msgstr ""
"Entradas de strings para :class:`int` e representações em strings podem ser "
"limitadas para ajudar a evitar ataques de negação de serviço. Uma exceção :"
"exc:`ValueError` é levantada quando o limite é excedido durante a conversão "
"de uma string em um :class:`int` ou quando a conversão de um :class:`int` em "
"uma string excede o limite. Consulte a documentação sobre :ref:`limitação de "
"comprimento de conversão de string em inteiro <int_max_str_digits>`."

#: ../../library/functions.rst:1069
msgid ""
"Return ``True`` if the *object* argument is an instance of the *classinfo* "
"argument, or of a (direct, indirect, or :term:`virtual <abstract base "
"class>`) subclass thereof.  If *object* is not an object of the given type, "
"the function always returns ``False``. If *classinfo* is a tuple of type "
"objects (or recursively, other such tuples) or a :ref:`types-union` of "
"multiple types, return ``True`` if *object* is an instance of any of the "
"types. If *classinfo* is not a type or tuple of types and such tuples, a :"
"exc:`TypeError` exception is raised. :exc:`TypeError` may not be raised for "
"an invalid type if an earlier check succeeds."
msgstr ""
"Retorna ``True`` se o argumento *object* é uma instância do argumento "
"*classinfo*, ou de uma subclasse dele (direta, indireta ou :term:`virtual "
"<abstract base class>`). Se *object* não é um objeto do tipo dado, a função "
"sempre devolve ``False``. Se *classinfo* é uma tupla de tipos de objetos (ou "
"recursivamente, como outras tuplas) ou um :ref:`types-union` de vários "
"tipos, retorna ``True`` se *object* é uma instância de qualquer um dos "
"tipos. Se *classinfo* não é um tipo ou tupla de tipos ou outras tuplas, é "
"levantada uma exceção :exc:`TypeError`. :exc:`TypeError` pode não ser "
"levantada por um tipo inválido se uma verificação anterior for bem-sucedida."

#: ../../library/functions.rst:1080 ../../library/functions.rst:1094
msgid "*classinfo* can be a :ref:`types-union`."
msgstr "*classinfo* pode ser um :ref:`types-union`."

#: ../../library/functions.rst:1086
msgid ""
"Return ``True`` if *class* is a subclass (direct, indirect, or :term:"
"`virtual <abstract base class>`) of *classinfo*.  A class is considered a "
"subclass of itself. *classinfo* may be a tuple of class objects (or "
"recursively, other such tuples) or a :ref:`types-union`, in which case "
"return ``True`` if *class* is a subclass of any entry in *classinfo*.  In "
"any other case, a :exc:`TypeError` exception is raised."
msgstr ""
"Retorna ``True`` se *class* for uma subclasse (direta, indireta ou :term:"
"`virtual <abstract base class>`) de *classinfo*. Uma classe é considerada "
"uma subclasse de si mesma. *classinfo* pode ser uma tupla de objetos de "
"classe (ou recursivamente, outras tuplas) ou um :ref:`types-union`, caso em "
"que retorna ``True`` se *class* for uma subclasse de qualquer entrada em "
"*classinfo*. Em qualquer outro caso, é levantada uma exceção :exc:"
"`TypeError`."

#: ../../library/functions.rst:1101
msgid ""
"Return an :term:`iterator` object.  The first argument is interpreted very "
"differently depending on the presence of the second argument. Without a "
"second argument, *object* must be a collection object which supports the :"
"term:`iterable` protocol (the :meth:`~object.__iter__` method), or it must "
"support the sequence protocol (the :meth:`~object.__getitem__` method with "
"integer arguments starting at ``0``).  If it does not support either of "
"those protocols, :exc:`TypeError` is raised. If the second argument, "
"*sentinel*, is given, then *object* must be a callable object.  The iterator "
"created in this case will call *object* with no arguments for each call to "
"its :meth:`~iterator.__next__` method; if the value returned is equal to "
"*sentinel*, :exc:`StopIteration` will be raised, otherwise the value will be "
"returned."
msgstr ""
"Retorna um objeto :term:`iterador`. O primeiro argumento é interpretado "
"muito diferentemente dependendo da presença do segundo argumento. Sem um "
"segundo argumento, *object* deve ser uma coleção de objetos com suporte ao "
"protocolo :term:`iterável` (o método :meth:`~object.__iter__`), ou ele deve "
"ter suporte ao protocolo de sequência (o método :meth:`~object.__getitem__` "
"com argumentos inteiros começando em ``0``). Se ele não tem suporte nenhum "
"desses protocolos, uma :exc:`TypeError` é levantada. Se o segundo argumento, "
"*sentinel*, é fornecido, então *object* deve ser um objeto chamável. O "
"iterador criado neste caso irá chamar *object* sem nenhum argumento para "
"cada chamada para o seu método :meth:`~iterator.__next__`; se o valor "
"devolvido é igual a *sentinel*, então :exc:`StopIteration` será levantado, "
"caso contrário o valor será devolvido."

#: ../../library/functions.rst:1115
msgid "See also :ref:`typeiter`."
msgstr "Veja também :ref:`typeiter`."

#: ../../library/functions.rst:1117
msgid ""
"One useful application of the second form of :func:`iter` is to build a "
"block-reader. For example, reading fixed-width blocks from a binary database "
"file until the end of file is reached::"
msgstr ""
"Uma aplicação útil da segunda forma de :func:`iter` é para construir um "
"bloco de leitura. Por exemplo, ler blocos de comprimento fixo de um arquivo "
"binário de banco de dados até que o final do arquivo seja atingido::"

#: ../../library/functions.rst:1121
msgid ""
"from functools import partial\n"
"with open('mydata.db', 'rb') as f:\n"
"    for block in iter(partial(f.read, 64), b''):\n"
"        process_block(block)"
msgstr ""
"from functools import partial\n"
"with open('meusdados.db', 'rb') as f:\n"
"    for bloco in iter(partial(f.read, 64), b''):\n"
"        process_block(bloco)"

#: ../../library/functions.rst:1129
msgid ""
"Return the length (the number of items) of an object.  The argument may be a "
"sequence (such as a string, bytes, tuple, list, or range) or a collection "
"(such as a dictionary, set, or frozen set)."
msgstr ""
"Devolve o comprimento (o número de itens) de um objeto. O argumento pode ser "
"uma sequência (tal como uma string, bytes, tupla, lista, ou um intervalo) ou "
"uma coleção (tal como um dicionário, conjunto, ou conjunto imutável)."

#: ../../library/functions.rst:1135
msgid ""
"``len`` raises :exc:`OverflowError` on lengths larger than :data:`sys."
"maxsize`, such as :class:`range(2 ** 100) <range>`."
msgstr ""
"``len`` levanta :exc:`OverflowError` em tamanhos maiores que :data:`sys."
"maxsize`, tal como :class:`range(2 ** 100) <range>`."

#: ../../library/functions.rst:1144
msgid ""
"Rather than being a function, :class:`list` is actually a mutable sequence "
"type, as documented in :ref:`typesseq-list` and :ref:`typesseq`."
msgstr ""
"Ao invés de ser uma função, :class:`list` é na verdade um tipo de sequência "
"mutável, conforme documentado em :ref:`typesseq-list` e :ref:`typesseq`."

#: ../../library/functions.rst:1150
msgid ""
"Return a mapping object representing the current local symbol table, with "
"variable names as the keys, and their currently bound references as the "
"values."
msgstr ""
"Retorna um objeto de mapeamento representando a tabela de símbolos atual, "
"com nomes de variáveis como as chaves, e as referências às quais cada "
"variável está atrelada no momento como os valores."

#: ../../library/functions.rst:1154
msgid ""
"At module scope, as well as when using :func:`exec` or :func:`eval` with a "
"single namespace, this function returns the same namespace as :func:"
"`globals`."
msgstr ""
"Em um escopo de módulo, assim como quando usando :func:`exec` ou :func:"
"`eval` com um único espaço de nomes, esta função retorna o mesmo espaço de "
"nomes que :func:`globals`."

#: ../../library/functions.rst:1158
msgid ""
"At class scope, it returns the namespace that will be passed to the "
"metaclass constructor."
msgstr ""
"Em um escopo de classe, ela retorna o espaço de nomes que será passado para "
"o construtor da metaclasse."

#: ../../library/functions.rst:1161
msgid ""
"When using ``exec()`` or ``eval()`` with separate local and global "
"arguments, it returns the local namespace passed in to the function call."
msgstr ""
"Quando usando ``exec()`` ou ``eval()`` com argumentos de espaço local e "
"global distintos, ela retorna o espaço de nomes local passado na chamada."

#: ../../library/functions.rst:1164
msgid ""
"In all of the above cases, each call to ``locals()`` in a given frame of "
"execution will return the *same* mapping object. Changes made through the "
"mapping object returned from ``locals()`` will be visible as assigned, "
"reassigned, or deleted local variables, and assigning, reassigning, or "
"deleting local variables will immediately affect the contents of the "
"returned mapping object."
msgstr ""
"Em todos os casos acima, cada chamada a ``locals()`` em um dado quadro de "
"execução vai retornar o *mesmo* objeto de mapeamento. Mudanças feitas "
"através do objeto de mapeamento retornado por ``locals()`` serão visíveis "
"tal qual variáveis locais atribuídas, reatribuídas ou deletadas, e atribuir, "
"reatribuir ou deletar variáveis locais afetará imediatamente o conteúdo do "
"objeto de mapeamento retornado."

#: ../../library/functions.rst:1171
msgid ""
"In an :term:`optimized scope` (including functions, generators, and "
"coroutines), each call to ``locals()`` instead returns a fresh dictionary "
"containing the current bindings of the function's local variables and any "
"nonlocal cell references. In this case, name binding changes made via the "
"returned dict are *not* written back to the corresponding local variables or "
"nonlocal cell references, and assigning, reassigning, or deleting local "
"variables and nonlocal cell references does *not* affect the contents of "
"previously returned dictionaries."
msgstr ""
"Em contraste aos casos acima, em um :term:`escopo otimizado` (incluindo "
"funções, geradores e corrotinas), cada chamada a ``locals()`` retorna um "
"dicionário novo contendo as ligações atuais das variáveis locais da função e "
"de quaisquer células com referências não-locais. Nesse caso, mudanças em "
"ligações de nomes feitas através do dicionário retornado *não* são escritas "
"de volta nas variáveis locais correspondentes nem nas células com "
"referências não-locais, e atribuir, reatribuir ou deletar variáveis locais e "
"células com referências não-locais *não* afeta o conteúdo dos dicionários "
"que já foram retornados."

#: ../../library/functions.rst:1180
msgid ""
"Calling ``locals()`` as part of a comprehension in a function, generator, or "
"coroutine is equivalent to calling it in the containing scope, except that "
"the comprehension's initialised iteration variables will be included. In "
"other scopes, it behaves as if the comprehension were running as a nested "
"function."
msgstr ""
"Chamar a função ``locals()`` como parte de uma compreensão em uma função, "
"gerador ou corrotina é equivalente a chamá-la no escopo que contém a "
"compreensão, exceto que as variáveis de iteração inicializadas da "
"compreensão serão incluídas. Em outros escopos, essa função se comporta como "
"se a compreensão estivesse executando como uma função aninhada."

#: ../../library/functions.rst:1186
msgid ""
"Calling ``locals()`` as part of a generator expression is equivalent to "
"calling it in a nested generator function."
msgstr ""
"Chamar a função ``locals()`` como parte de uma expressão geradora é "
"equivalente a chamá-la em uma função geradora aninhada."

#: ../../library/functions.rst:1189
msgid ""
"The behaviour of ``locals()`` in a comprehension has been updated as "
"described in :pep:`709`."
msgstr ""
"O comportamento de ``locals()`` em uma compreensão foi atualizado conforme "
"descrito na :pep:`709`."

#: ../../library/functions.rst:1193
msgid ""
"As part of :pep:`667`, the semantics of mutating the mapping objects "
"returned from this function are now defined. The behavior in :term:"
"`optimized scopes <optimized scope>` is now as described above. Aside from "
"being defined, the behaviour in other scopes remains unchanged from previous "
"versions."
msgstr ""
"Como parte da :pep:`667`, o que acontece após a mutação de objetos de "
"mapeamento retornados desta função está agora definido. O comportamento em :"
"term:`escopos otimizados <escopo otimizado>` agora é o descrito acima. Além "
"de estar definido, o comportamento em outros escopos não foi modificado em "
"relação aos comportamentos em versões passadas."

#: ../../library/functions.rst:1203
msgid ""
"Return an iterator that applies *function* to every item of *iterable*, "
"yielding the results.  If additional *iterables* arguments are passed, "
"*function* must take that many arguments and is applied to the items from "
"all iterables in parallel.  With multiple iterables, the iterator stops when "
"the shortest iterable is exhausted.  For cases where the function inputs are "
"already arranged into argument tuples, see :func:`itertools.starmap`\\."
msgstr ""
"Devolve um iterador que aplica *function* para cada item de *iterable*, "
"gerando os resultados. Se argumentos *iterables* adicionais são passados, "
"*function* deve ter a mesma quantidade de argumentos e ela é aplicada aos "
"itens de todos os iteráveis em paralelo. Com múltiplos iteráveis, o iterador "
"para quando o iterador mais curto é encontrado. Para casos onde os "
"parâmetros de entrada da função já estão organizados em tuplas, veja :func:"
"`itertools.starmap`\\."

#: ../../library/functions.rst:1215
msgid ""
"Return the largest item in an iterable or the largest of two or more "
"arguments."
msgstr ""
"Devolve o maior item em um iterável ou o maior de dois ou mais argumentos."

#: ../../library/functions.rst:1218
msgid ""
"If one positional argument is provided, it should be an :term:`iterable`. "
"The largest item in the iterable is returned.  If two or more positional "
"arguments are provided, the largest of the positional arguments is returned."
msgstr ""
"Se um argumento posicional é fornecido, ele deve ser um :term:`iterável`. O "
"maior item no iterável é retornado. Se dois ou mais argumentos posicionais "
"são fornecidos, o maior dos argumentos posicionais é devolvido."

#: ../../library/functions.rst:1223 ../../library/functions.rst:1261
msgid ""
"There are two optional keyword-only arguments. The *key* argument specifies "
"a one-argument ordering function like that used for :meth:`list.sort`. The "
"*default* argument specifies an object to return if the provided iterable is "
"empty. If the iterable is empty and *default* is not provided, a :exc:"
"`ValueError` is raised."
msgstr ""
"Existem dois parâmetros somente-nomeados opcionais. O parâmetro *key* "
"especifica uma função de ordenamento de um argumento, como aquelas usadas "
"por :meth:`list.sort`. O parâmetro *default* especifica um objeto a ser "
"devolvido se o iterável fornecido estiver vazio. Se o iterável estiver "
"vazio, e *default* não foi fornecido, uma exceção :exc:`ValueError` é "
"levantada."

#: ../../library/functions.rst:1229
msgid ""
"If multiple items are maximal, the function returns the first one "
"encountered.  This is consistent with other sort-stability preserving tools "
"such as ``sorted(iterable, key=keyfunc, reverse=True)[0]`` and ``heapq."
"nlargest(1, iterable, key=keyfunc)``."
msgstr ""
"Se múltiplos itens são máximos, a função devolve o primeiro encontrado. Isto "
"é consistente com outras ferramentas de ordenamento que preservam a "
"estabilidade, tais como ``sorted(iterable, key=keyfunc, reverse=True)[0]`` e "
"``heapq.nlargest(1, iterable, key=keyfunc)``."

#: ../../library/functions.rst:1234 ../../library/functions.rst:1272
msgid "Added the *default* keyword-only parameter."
msgstr "Adicionado o parâmetro *default* somente-nomeado."

#: ../../library/functions.rst:1237 ../../library/functions.rst:1275
msgid "The *key* can be ``None``."
msgstr "O valor de *key* pode ser ``None``."

#: ../../library/functions.rst:1245
msgid ""
"Return a \"memory view\" object created from the given argument.  See :ref:"
"`typememoryview` for more information."
msgstr ""
"Devolve um objeto de \"visão da memória\" criado a partir do argumento "
"fornecido. Veja :ref:`typememoryview` para mais informações."

#: ../../library/functions.rst:1253
msgid ""
"Return the smallest item in an iterable or the smallest of two or more "
"arguments."
msgstr ""
"Devolve o menor item de um iterável ou o menor de dois ou mais argumentos."

#: ../../library/functions.rst:1256
msgid ""
"If one positional argument is provided, it should be an :term:`iterable`. "
"The smallest item in the iterable is returned.  If two or more positional "
"arguments are provided, the smallest of the positional arguments is returned."
msgstr ""
"Se um argumento posicional é fornecido, ele deve ser um :term:`iterável`. O "
"menor item no iterável é devolvido. Se dois ou mais argumentos posicionais "
"são fornecidos, o menor dos argumentos posicionais é devolvido."

#: ../../library/functions.rst:1267
msgid ""
"If multiple items are minimal, the function returns the first one "
"encountered.  This is consistent with other sort-stability preserving tools "
"such as ``sorted(iterable, key=keyfunc)[0]`` and ``heapq.nsmallest(1, "
"iterable, key=keyfunc)``."
msgstr ""
"Se múltiplos itens são mínimos, a função devolve o primeiro encontrado. Isto "
"é consistente com outras ferramentas de ordenamento que preservam a "
"estabilidade, tais como ``sorted(iterable, key=keyfunc)[0]`` e ``heapq."
"nsmallest(1, iterable, key=keyfunc)``."

#: ../../library/functions.rst:1282
msgid ""
"Retrieve the next item from the :term:`iterator` by calling its :meth:"
"`~iterator.__next__` method.  If *default* is given, it is returned if the "
"iterator is exhausted, otherwise :exc:`StopIteration` is raised."
msgstr ""
"Recupera o próximo item do :term:`iterador` chamando o seu método :meth:"
"`~iterator.__next__`. Se *default* foi fornecido, ele é devolvido caso o "
"iterável tenha sido percorrido por completo, caso contrário :exc:"
"`StopIteration` é levantada."

#: ../../library/functions.rst:1289
msgid ""
"This is the ultimate base class of all other classes. It has methods that "
"are common to all instances of Python classes. When the constructor is "
"called, it returns a new featureless object. The constructor does not accept "
"any arguments."
msgstr ""
"Esta é a classe base definitiva de todas as outras classes. Ela tem métodos "
"que são comuns a todas as instâncias de classes Python. Quando o construtor "
"é chamado, ele retorna um novo objeto sem características. O construtor não "
"aceita nenhum argumento."

#: ../../library/functions.rst:1296
msgid ""
":class:`object` instances do *not* have :attr:`~object.__dict__` attributes, "
"so you can't assign arbitrary attributes to an instance of :class:`object`."
msgstr ""
"Instâncias de :class:`object` *não* têm atributos :attr:`~object.__dict__`, "
"então você não pode atribuir atributos arbitrários a uma instância de :class:"
"`object`."

#: ../../library/functions.rst:1303
msgid ""
"Convert an integer number to an octal string prefixed with \"0o\".  The "
"result is a valid Python expression. If *x* is not a Python :class:`int` "
"object, it has to define an :meth:`~object.__index__` method that returns an "
"integer. For example:"
msgstr ""
"Converte um número inteiro para uma string em base octal, pré-fixada com "
"\"0o\". O resultado é uma expressão Python válida. Se *x* não for um objeto :"
"class:`int` Python, ele tem que definir um método :meth:`~object.__index__` "
"que devolve um inteiro. Por exemplo:"

#: ../../library/functions.rst:1313
msgid ""
"If you want to convert an integer number to an octal string either with the "
"prefix \"0o\" or not, you can use either of the following ways."
msgstr ""
"Se você quiser converter um número inteiro para uma string octal, com o "
"prefixo \"0o\" ou não, você pode usar qualquer uma das formas a seguir."

#: ../../library/functions.rst:1330
msgid ""
"Open *file* and return a corresponding :term:`file object`.  If the file "
"cannot be opened, an :exc:`OSError` is raised. See :ref:`tut-files` for more "
"examples of how to use this function."
msgstr ""
"Abre *file* e retorna um :term:`objeto arquivo` correspondente. Se o arquivo "
"não puder ser aberto, uma :exc:`OSError` é levantada. Veja :ref:`tut-files` "
"para mais exemplos de como usar esta função."

#: ../../library/functions.rst:1334
msgid ""
"*file* is a :term:`path-like object` giving the pathname (absolute or "
"relative to the current working directory) of the file to be opened or an "
"integer file descriptor of the file to be wrapped.  (If a file descriptor is "
"given, it is closed when the returned I/O object is closed unless *closefd* "
"is set to ``False``.)"
msgstr ""
"*file* é um :term:`objeto caminho ou similar` fornecendo o caminho (absoluto "
"ou relativo ao diretório de trabalho atual) do arquivo que será aberto, ou "
"de um inteiro descritor de arquivo a ser manipulado (Se um descritor de "
"arquivo é fornecido, ele é fechado quando o objeto de I/O retornado é "
"fechado, a não ser que *closefd* esteja marcado como ``False``)."

#: ../../library/functions.rst:1340
msgid ""
"*mode* is an optional string that specifies the mode in which the file is "
"opened.  It defaults to ``'r'`` which means open for reading in text mode. "
"Other common values are ``'w'`` for writing (truncating the file if it "
"already exists), ``'x'`` for exclusive creation, and ``'a'`` for appending "
"(which on *some* Unix systems, means that *all* writes append to the end of "
"the file regardless of the current seek position).  In text mode, if "
"*encoding* is not specified the encoding used is platform-dependent: :func:"
"`locale.getencoding` is called to get the current locale encoding. (For "
"reading and writing raw bytes use binary mode and leave *encoding* "
"unspecified.)  The available modes are:"
msgstr ""
"*mode* é uma string opcional que especifica o modo no qual o arquivo é "
"aberto. O valor padrão é ``'r'``, o qual significa abrir para leitura em "
"modo texto. Outros valores comuns são ``'w'`` para escrever (truncando o "
"arquivo se ele já existe), ``'x'`` para criação exclusiva e ``'a'`` para "
"anexar (o qual em *alguns* sistemas Unix, significa que *todas* as escritas "
"anexam ao final do arquivo independentemente da posição de busca atual). No "
"modo texto, se *encoding* não for especificada, a codificação usada depende "
"da plataforma: :func:`locale.getencoding` é chamada para obter a codificação "
"da localidade atual (Para ler e escrever bytes diretamente, use o modo "
"binário e não especifique *encoding*). Os modos disponíveis são:"

#: ../../library/functions.rst:1357
msgid "Character"
msgstr "Caractere"

#: ../../library/functions.rst:1357
msgid "Meaning"
msgstr "Significado"

#: ../../library/functions.rst:1359
msgid "``'r'``"
msgstr "``'r'``"

#: ../../library/functions.rst:1359
msgid "open for reading (default)"
msgstr "abre para leitura (padrão)"

#: ../../library/functions.rst:1360
msgid "``'w'``"
msgstr "``'w'``"

#: ../../library/functions.rst:1360
msgid "open for writing, truncating the file first"
msgstr ""
"abre para escrita, truncando o arquivo primeiro (removendo tudo o que "
"estiver contido no mesmo)"

#: ../../library/functions.rst:1361
msgid "``'x'``"
msgstr "``'x'``"

#: ../../library/functions.rst:1361
msgid "open for exclusive creation, failing if the file already exists"
msgstr "abre para criação exclusiva, falhando caso o arquivo exista"

#: ../../library/functions.rst:1362
msgid "``'a'``"
msgstr "``'a'``"

#: ../../library/functions.rst:1362
msgid "open for writing, appending to the end of file if it exists"
msgstr "abre para escrita, anexando ao final do arquivo caso o mesmo exista"

#: ../../library/functions.rst:1363
msgid "``'b'``"
msgstr "``'b'``"

#: ../../library/functions.rst:1363 ../../library/functions.rst:1507
msgid "binary mode"
msgstr "modo binário"

#: ../../library/functions.rst:1364
msgid "``'t'``"
msgstr "``'t'``"

#: ../../library/functions.rst:1364
msgid "text mode (default)"
msgstr "modo texto (padrão)"

#: ../../library/functions.rst:1365
msgid "``'+'``"
msgstr "``'+'``"

#: ../../library/functions.rst:1365
msgid "open for updating (reading and writing)"
msgstr "aberto para atualização (leitura e escrita)"

#: ../../library/functions.rst:1368
msgid ""
"The default mode is ``'r'`` (open for reading text, a synonym of ``'rt'``). "
"Modes ``'w+'`` and ``'w+b'`` open and truncate the file.  Modes ``'r+'`` and "
"``'r+b'`` open the file with no truncation."
msgstr ""
"O modo padrão é ``'r'`` (abre para leitura de texto, um sinônimo de "
"``'rt'``). Modos ``'w+'`` e ``'w+b'`` abrem e truncam o arquivo. Modos "
"``'r+'`` e ``'r+b'`` abrem o arquivo sem truncar o mesmo."

#: ../../library/functions.rst:1372
msgid ""
"As mentioned in the :ref:`io-overview`, Python distinguishes between binary "
"and text I/O.  Files opened in binary mode (including ``'b'`` in the *mode* "
"argument) return contents as :class:`bytes` objects without any decoding.  "
"In text mode (the default, or when ``'t'`` is included in the *mode* "
"argument), the contents of the file are returned as :class:`str`, the bytes "
"having been first decoded using a platform-dependent encoding or using the "
"specified *encoding* if given."
msgstr ""
"Conforme mencionado em :ref:`io-overview`, Python diferencia entre entrada/"
"saída binária e de texto. Arquivos abertos em modo binário (incluindo "
"``'b'`` no parâmetro *mode*) retornam o conteúdo como objetos :class:`bytes` "
"sem usar nenhuma decodificação. No modo texto (o padrão, ou quando ``'t'`` é "
"incluído no parâmetro *mode*), o conteúdo do arquivo é retornado como :class:"
"`str`, sendo os bytes primeiramente decodificados usando uma codificação "
"dependente da plataforma, ou usando a codificação definida em *encoding* se "
"fornecida."

#: ../../library/functions.rst:1382
msgid ""
"Python doesn't depend on the underlying operating system's notion of text "
"files; all the processing is done by Python itself, and is therefore "
"platform-independent."
msgstr ""
"Python não depende da noção básica do sistema operacional sobre arquivos de "
"texto; todo processamento é feito pelo próprio Python, e é então "
"independente de plataforma."

#: ../../library/functions.rst:1386
msgid ""
"*buffering* is an optional integer used to set the buffering policy.  Pass 0 "
"to switch buffering off (only allowed in binary mode), 1 to select line "
"buffering (only usable when writing in text mode), and an integer > 1 to "
"indicate the size in bytes of a fixed-size chunk buffer. Note that "
"specifying a buffer size this way applies for binary buffered I/O, but "
"``TextIOWrapper`` (i.e., files opened with ``mode='r+'``) would have another "
"buffering. To disable buffering in ``TextIOWrapper``, consider using the "
"``write_through`` flag for :func:`io.TextIOWrapper.reconfigure`. When no "
"*buffering* argument is given, the default buffering policy works as follows:"
msgstr ""
"*buffering* é um número inteiro opcional usado para definir a política de "
"buffering. Passe 0 para desativar o buffer (permitido apenas no modo "
"binário), 1 para selecionar o buffer de linha (usável apenas ao gravar no "
"modo de texto) e um inteiro > 1 para indicar o tamanho em bytes de um buffer "
"de bloco de tamanho fixo. Observe que especificar um tamanho de buffer dessa "
"maneira se aplica a E/S com buffer binário, mas ``TextIOWrapper`` (ou seja, "
"arquivos abertos com ``mode='r+'``) teriam outro buffer. Para desabilitar o "
"buffer em ``TextIOWrapper``, considere usar o sinalizador ``write_through`` "
"para :func:`io.TextIOWrapper.reconfigure`. Quando nenhum argumento "
"*buffering* é fornecido, a política de buffering padrão funciona da seguinte "
"forma:"

#: ../../library/functions.rst:1396
msgid ""
"Binary files are buffered in fixed-size chunks; the size of the buffer is "
"chosen using a heuristic trying to determine the underlying device's \"block "
"size\" and falling back on :const:`io.DEFAULT_BUFFER_SIZE`.  On many "
"systems, the buffer will typically be 4096 or 8192 bytes long."
msgstr ""
"Arquivos binários são armazenados em pedaços de tamanho fixo; o tamanho do "
"buffer é escolhido usando uma heurística que tenta determinar o \"tamanho de "
"bloco\" subjacente do dispositivo, e usa :const:`io.DEFAULT_BUFFER_SIZE` "
"caso não consiga. Em muitos sistemas, o buffer possuirá tipicamente 4096 ou "
"8192 bytes de comprimento."

#: ../../library/functions.rst:1401
msgid ""
"\"Interactive\" text files (files for which :meth:`~io.IOBase.isatty` "
"returns ``True``) use line buffering.  Other text files use the policy "
"described above for binary files."
msgstr ""
"Arquivos de texto \"interativos\" (arquivos para os quais :meth:`~io.IOBase."
"isatty` retornam ``True``) usam buffering de linha. Outros arquivos de texto "
"usam a política descrita acima para arquivos binários."

#: ../../library/functions.rst:1405
msgid ""
"*encoding* is the name of the encoding used to decode or encode the file. "
"This should only be used in text mode.  The default encoding is platform "
"dependent (whatever :func:`locale.getencoding` returns), but any :term:`text "
"encoding` supported by Python can be used. See the :mod:`codecs` module for "
"the list of supported encodings."
msgstr ""
"*encoding* é o nome da codificação usada para codificar ou decodificar o "
"arquivo. Isto deve ser usado apenas no modo texto. A codificação padrão "
"depende da plataforma (seja qual valor :func:`locale.getencoding` retornar), "
"mas qualquer :term:`codificador de texto` suportado pelo Python pode ser "
"usada. Veja o módulo :mod:`codecs` para a lista de codificações suportadas."

#: ../../library/functions.rst:1411
msgid ""
"*errors* is an optional string that specifies how encoding and decoding "
"errors are to be handled—this cannot be used in binary mode. A variety of "
"standard error handlers are available (listed under :ref:`error-handlers`), "
"though any error handling name that has been registered with :func:`codecs."
"register_error` is also valid.  The standard names include:"
msgstr ""
"*errors* é uma string opcional que especifica como erros de codificação e de "
"decodificação devem ser tratados — isso não pode ser utilizado no modo "
"binário. Uma variedade de tratadores de erro padrão estão disponíveis "
"(listados em :ref:`error-handlers`), apesar que qualquer nome para "
"tratamento de erro registrado com :func:`codecs.register_error` também é "
"válido. Os nomes padrões incluem:"

#: ../../library/functions.rst:1419
msgid ""
"``'strict'`` to raise a :exc:`ValueError` exception if there is an encoding "
"error.  The default value of ``None`` has the same effect."
msgstr ""
"``'strict'`` para levantar uma exceção :exc:`ValueError` se existir um erro "
"de codificação. O valor padrão ``None`` tem o mesmo efeito."

#: ../../library/functions.rst:1423
msgid ""
"``'ignore'`` ignores errors.  Note that ignoring encoding errors can lead to "
"data loss."
msgstr ""
"``'ignore'`` ignora erros. Note que ignorar erros de código pode levar à "
"perda de dados."

#: ../../library/functions.rst:1426
msgid ""
"``'replace'`` causes a replacement marker (such as ``'?'``) to be inserted "
"where there is malformed data."
msgstr ""
"``'replace'`` faz um marcador de substituição (tal como ``'?'``) ser "
"inserido onde existem dados malformados."

#: ../../library/functions.rst:1429
msgid ""
"``'surrogateescape'`` will represent any incorrect bytes as low surrogate "
"code units ranging from U+DC80 to U+DCFF. These surrogate code units will "
"then be turned back into the same bytes when the ``surrogateescape`` error "
"handler is used when writing data.  This is useful for processing files in "
"an unknown encoding."
msgstr ""
"representará quaisquer bytes incorretos como unidades de código substituto "
"baixo variando de U + DC80 a U + DCFF. Essas unidades de código substituto "
"serão então transformadas de volta nos mesmos bytes quando o manipulador de "
"erros for usado ao gravar dados. Isso é útil para processar arquivos em uma "
"codificação desconhecida."

#: ../../library/functions.rst:1436
msgid ""
"``'xmlcharrefreplace'`` is only supported when writing to a file. Characters "
"not supported by the encoding are replaced with the appropriate XML "
"character reference :samp:`&#{nnn};`."
msgstr ""
"``'xmlcharrefreplace'`` é suportado apenas ao gravar em um arquivo. Os "
"caracteres não suportados pela codificação são substituídos pela referência "
"de caracteres XML apropriada :samp:`&#{nnn};`."

#: ../../library/functions.rst:1440
msgid ""
"``'backslashreplace'`` replaces malformed data by Python's backslashed "
"escape sequences."
msgstr ""
"``'backslashreplace'`` substitui dados malformados pela sequência de escape "
"utilizando contrabarra do Python."

#: ../../library/functions.rst:1443
msgid ""
"``'namereplace'`` (also only supported when writing) replaces unsupported "
"characters with ``\\N{...}`` escape sequences."
msgstr ""
"``'namereplace'`` (também é suportado somente quando estiver escrevendo) "
"substitui caractere não suportados com sequências de escape ``\\N{...}``."

#: ../../library/functions.rst:1451
msgid ""
"*newline* determines how to parse newline characters from the stream. It can "
"be ``None``, ``''``, ``'\\n'``, ``'\\r'``, and ``'\\r\\n'``.  It works as "
"follows:"
msgstr ""
"*newline* determina como analisar caracteres de nova linha do fluxo. Ele "
"pode ser ``None``, ``''``, ``'\\n'``, ``'\\r'`` e ``'\\r\\n'``. Ele funciona "
"da seguinte forma:"

#: ../../library/functions.rst:1455
msgid ""
"When reading input from the stream, if *newline* is ``None``, universal "
"newlines mode is enabled.  Lines in the input can end in ``'\\n'``, "
"``'\\r'``, or ``'\\r\\n'``, and these are translated into ``'\\n'`` before "
"being returned to the caller.  If it is ``''``, universal newlines mode is "
"enabled, but line endings are returned to the caller untranslated.  If it "
"has any of the other legal values, input lines are only terminated by the "
"given string, and the line ending is returned to the caller untranslated."
msgstr ""
"Ao ler a entrada do fluxo, se *newline* for ``None``, o modo universal de "
"novas linhas será ativado. As linhas na entrada podem terminar em ``'\\n'``, "
"``'\\r'`` ou ``'\\r\\n'``, e são traduzidas para ``'\\n'`` antes de retornar "
"ao chamador. Se for ``''``, o modo de novas linhas universais será ativado, "
"mas as terminações de linha serão retornadas ao chamador sem tradução. Se "
"houver algum dos outros valores legais, as linhas de entrada são finalizadas "
"apenas pela string especificada e a finalização da linha é retornada ao "
"chamador sem tradução."

#: ../../library/functions.rst:1463
msgid ""
"When writing output to the stream, if *newline* is ``None``, any ``'\\n'`` "
"characters written are translated to the system default line separator, :"
"data:`os.linesep`.  If *newline* is ``''`` or ``'\\n'``, no translation "
"takes place.  If *newline* is any of the other legal values, any ``'\\n'`` "
"characters written are translated to the given string."
msgstr ""
"Ao gravar a saída no fluxo, se *newline* for ``None``, quaisquer caracteres "
"``'\\n'`` gravados serão traduzidos para o separador de linhas padrão do "
"sistema, :data:`os.linesep`. Se *newline* for ``''`` ou ``'\\n'``, nenhuma "
"tradução ocorrerá. Se *newline* for um dos outros valores legais, qualquer "
"caractere ``'\\n'`` escrito será traduzido para a string especificada."

#: ../../library/functions.rst:1469
msgid ""
"If *closefd* is ``False`` and a file descriptor rather than a filename was "
"given, the underlying file descriptor will be kept open when the file is "
"closed.  If a filename is given *closefd* must be ``True`` (the default); "
"otherwise, an error will be raised."
msgstr ""
"Se *closefd* for ``False`` e um descritor de arquivo em vez de um nome de "
"arquivo for fornecido, o descritor de arquivo subjacente será mantido aberto "
"quando o arquivo for fechado. Se um nome de arquivo for fornecido *closefd* "
"deve ser ``True`` (o padrão), caso contrário, um erro será levantado."

#: ../../library/functions.rst:1474
msgid ""
"A custom opener can be used by passing a callable as *opener*. The "
"underlying file descriptor for the file object is then obtained by calling "
"*opener* with (*file*, *flags*). *opener* must return an open file "
"descriptor (passing :mod:`os.open` as *opener* results in functionality "
"similar to passing ``None``)."
msgstr ""
"Um abridor personalizado pode ser usado passando um chamável como *opener*. "
"O descritor de arquivo subjacente para o objeto arquivo é obtido chamando "
"*opener* com (*file*, *flags*). *opener* deve retornar um descritor de "
"arquivo aberto (passando :mod:`os.open` como *opener* resulta em "
"funcionalidade semelhante à passagem de ``None``)."

#: ../../library/functions.rst:1480
msgid "The newly created file is :ref:`non-inheritable <fd_inheritance>`."
msgstr "O arquivo recém-criado é :ref:`não-herdável <fd_inheritance>`."

#: ../../library/functions.rst:1482
msgid ""
"The following example uses the :ref:`dir_fd <dir_fd>` parameter of the :func:"
"`os.open` function to open a file relative to a given directory::"
msgstr ""
"O exemplo a seguir usa o parâmetro :ref:`dir_fd <dir_fd>` da função :func:"
"`os.open` para abrir um arquivo relativo a um determinado diretório::"

#: ../../library/functions.rst:1485
msgid ""
">>> import os\n"
">>> dir_fd = os.open('somedir', os.O_RDONLY)\n"
">>> def opener(path, flags):\n"
"...     return os.open(path, flags, dir_fd=dir_fd)\n"
"...\n"
">>> with open('spamspam.txt', 'w', opener=opener) as f:\n"
"...     print('This will be written to somedir/spamspam.txt', file=f)\n"
"...\n"
">>> os.close(dir_fd)  # don't leak a file descriptor"
msgstr ""
">>> import os\n"
">>> dir_fd = os.open('algum_dir', os.O_RDONLY)\n"
">>> def opener(path, flags):\n"
"...     return os.open(path, flags, dir_fd=dir_fd)\n"
"...\n"
">>> with open('spamspam.txt', 'w', opener=opener) as f:\n"
"...     print('Isso será escrito para algum_dir/spamspam.txt', file=f)\n"
"...\n"
">>> os.close(dir_fd)  # não deixe vazar um descritor de arquivo"

#: ../../library/functions.rst:1495
msgid ""
"The type of :term:`file object` returned by the :func:`open` function "
"depends on the mode.  When :func:`open` is used to open a file in a text "
"mode (``'w'``, ``'r'``, ``'wt'``, ``'rt'``, etc.), it returns a subclass of :"
"class:`io.TextIOBase` (specifically :class:`io.TextIOWrapper`).  When used "
"to open a file in a binary mode with buffering, the returned class is a "
"subclass of :class:`io.BufferedIOBase`.  The exact class varies: in read "
"binary mode, it returns an :class:`io.BufferedReader`; in write binary and "
"append binary modes, it returns an :class:`io.BufferedWriter`, and in read/"
"write mode, it returns an :class:`io.BufferedRandom`.  When buffering is "
"disabled, the raw stream, a subclass of :class:`io.RawIOBase`, :class:`io."
"FileIO`, is returned."
msgstr ""
"O tipo de :term:`objeto arquivo <file object>` retornado pela função :func:"
"`open` depende do modo. Quando :func:`open` é usado para abrir um arquivo no "
"modo texto (``'w'``, ``'r'``, ``'wt'``, ``'rt'``, etc.), retorna uma "
"subclasse de :class:`io.TextIOBase` (especificamente :class:`io."
"TextIOWrapper`). Quando usada para abrir um arquivo em modo binário com "
"buffer, a classe retornada é uma subclasse de :class:`io.BufferedIOBase`. A "
"classe exata varia: no modo binário de leitura, ele retorna uma :class:`io."
"BufferedReader`; nos modos binário de gravação e binário anexado, ele "
"retorna um :class:`io.BufferedWriter` e, no modo leitura/gravação, retorna "
"um :class:`io.BufferedRandom`. Quando o buffer está desativado, o fluxo "
"bruto, uma subclasse de :class:`io.RawIOBase`, :class:`io.FileIO`, é "
"retornado."

#: ../../library/functions.rst:1516
msgid ""
"See also the file handling modules, such as :mod:`fileinput`, :mod:`io` "
"(where :func:`open` is declared), :mod:`os`, :mod:`os.path`, :mod:"
"`tempfile`, and :mod:`shutil`."
msgstr ""
"Veja também os módulos de para lidar com arquivos, tais como :mod:"
"`fileinput`, :mod:`io` (onde :func:`open` é declarado), :mod:`os`, :mod:`os."
"path`, :mod:`tempfile` e :mod:`shutil`."

#: ../../library/functions.rst:1520
msgid ""
"Raises an :ref:`auditing event <auditing>` ``open`` with arguments ``path``, "
"``mode``, ``flags``."
msgstr ""
"Levanta um :ref:`evento de auditoria <auditing>` ``open`` com os argumentos "
"``path``, ``mode``, ``flags``."

#: ../../library/functions.rst:1522
msgid ""
"The ``mode`` and ``flags`` arguments may have been modified or inferred from "
"the original call."
msgstr ""
"Os argumentos ``mode`` e ``flags`` podem ter sido modificados ou inferidos a "
"partir da chamada original."

#: ../../library/functions.rst:1527
msgid "The *opener* parameter was added."
msgstr "O parâmetro *opener* foi adicionado."

#: ../../library/functions.rst:1528
msgid "The ``'x'`` mode was added."
msgstr "O modo ``'x'`` foi adicionado."

#: ../../library/functions.rst:1529
msgid ":exc:`IOError` used to be raised, it is now an alias of :exc:`OSError`."
msgstr ""
":exc:`IOError` costumava ser levantado, agora ele é um codinome para :exc:"
"`OSError`."

#: ../../library/functions.rst:1530
msgid ""
":exc:`FileExistsError` is now raised if the file opened in exclusive "
"creation mode (``'x'``) already exists."
msgstr ""
":exc:`FileExistsError` agora é levantado se o arquivo aberto no modo de "
"criação exclusivo (``'x'``) já existir."

#: ../../library/functions.rst:1535
msgid "The file is now non-inheritable."
msgstr "O arquivo agora é não herdável."

#: ../../library/functions.rst:1539
msgid ""
"If the system call is interrupted and the signal handler does not raise an "
"exception, the function now retries the system call instead of raising an :"
"exc:`InterruptedError` exception (see :pep:`475` for the rationale)."
msgstr ""
"Se a chamada de sistema é interrompida e o tratador de sinal não levanta uma "
"exceção, a função agora tenta novamente a chamada de sistema em vez de "
"levantar uma exceção :exc:`InterruptedError` (consulte :pep:`475` para "
"entender a justificativa)."

#: ../../library/functions.rst:1542
msgid "The ``'namereplace'`` error handler was added."
msgstr "O tratador de erros ``'namereplace'`` foi adicionado."

#: ../../library/functions.rst:1546
msgid "Support added to accept objects implementing :class:`os.PathLike`."
msgstr ""
"Suporte adicionado para aceitar objetos implementados :class:`os.PathLike`."

#: ../../library/functions.rst:1547
msgid ""
"On Windows, opening a console buffer may return a subclass of :class:`io."
"RawIOBase` other than :class:`io.FileIO`."
msgstr ""
"No Windows, a abertura de um buffer do console pode retornar uma subclasse "
"de :class:`io.RawIOBase` que não seja :class:`io.FileIO`."

#: ../../library/functions.rst:1550
msgid "The ``'U'`` mode has been removed."
msgstr "O modo ``'U'`` foi removido."

#: ../../library/functions.rst:1555
msgid ""
"Given a string representing one Unicode character, return an integer "
"representing the Unicode code point of that character.  For example, "
"``ord('a')`` returns the integer ``97`` and ``ord('€')`` (Euro sign) returns "
"``8364``.  This is the inverse of :func:`chr`."
msgstr ""
"Dada uma string que representa um caractere Unicode, retorna um número "
"inteiro representando o ponto de código Unicode desse caractere. Por "
"exemplo, ``ord('a')`` retorna o número inteiro ``97`` e ``ord('€')`` (sinal "
"do Euro) retorna ``8364``. Este é o inverso de :func:`chr`."

#: ../../library/functions.rst:1563
msgid ""
"Return *base* to the power *exp*; if *mod* is present, return *base* to the "
"power *exp*, modulo *mod* (computed more efficiently than ``pow(base, exp) % "
"mod``). The two-argument form ``pow(base, exp)`` is equivalent to using the "
"power operator: ``base**exp``."
msgstr ""
"Retorna *base* à potência de *exp*; se *mod* estiver presente, retorna "
"*base* à potência *exp*, módulo *mod* (calculado com mais eficiência do que "
"``pow(base, exp) % mod``). A forma de dois argumentos ``pow(base, exp)`` é "
"equivalente a usar o operador de potência: ``base**exp``."

#: ../../library/functions.rst:1568
msgid ""
"The arguments must have numeric types.  With mixed operand types, the "
"coercion rules for binary arithmetic operators apply.  For :class:`int` "
"operands, the result has the same type as the operands (after coercion) "
"unless the second argument is negative; in that case, all arguments are "
"converted to float and a float result is delivered.  For example, ``pow(10, "
"2)`` returns ``100``, but ``pow(10, -2)`` returns ``0.01``.  For a negative "
"base of type :class:`int` or :class:`float` and a non-integral exponent, a "
"complex result is delivered.  For example, ``pow(-9, 0.5)`` returns a value "
"close to ``3j``. Whereas, for a negative base of type :class:`int` or :class:"
"`float` with an integral exponent, a float result is delivered. For example, "
"``pow(-9, 2.0)`` returns ``81.0``."
msgstr ""
"Os argumentos devem ter tipos numéricos. Com tipos de operandos mistos, "
"aplicam-se as regras de coerção para operadores aritméticos binários. Para "
"operandos :class:`int`, o resultado tem o mesmo tipo que os operandos (após "
"coerção), a menos que o segundo argumento seja negativo; nesse caso, todos "
"os argumentos são convertidos em ponto flutuante e um resultado ponto "
"flutuante é entregue. Por exemplo, ``pow(10, 2)`` retorna ``100``, mas "
"``pow(10, -2)`` retorna ``0.01``. Para uma base negativa do tipo :class:"
"`int` ou :class:`float` e um expoente não integral, um resultado complexo é "
"entregue. Por exemplo, ``pow(-9, 0.5)`` retorna um valor próximo a ``3j``. "
"Enquanto isso, para uma base negativa do tipo :class:`int` ou :class:`float` "
"com um expoente integral, um resultado de ponto flutuante é retornado. Por "
"exemplo, ``pow(-9, 2.0)`` retorna ``81.0``."

#: ../../library/functions.rst:1580
msgid ""
"For :class:`int` operands *base* and *exp*, if *mod* is present, *mod* must "
"also be of integer type and *mod* must be nonzero. If *mod* is present and "
"*exp* is negative, *base* must be relatively prime to *mod*. In that case, "
"``pow(inv_base, -exp, mod)`` is returned, where *inv_base* is an inverse to "
"*base* modulo *mod*."
msgstr ""
"Para operandos :class:`int` *base* e *exp*, se *mod* estiver presente, *mod* "
"também deve ser do tipo inteiro e *mod* deve ser diferente de zero. Se *mod* "
"estiver presente e *exp* for negativo, *base* deve ser relativamente primo "
"para *mod*. Nesse caso, ``pow(inv_base, -exp, mod)`` é retornado, onde "
"*inv_base* é um inverso ao *base* módulo *mod*."

#: ../../library/functions.rst:1586
msgid "Here's an example of computing an inverse for ``38`` modulo ``97``::"
msgstr ""
"Aqui está um exemplo de computação de um inverso para ``38`` módulo ``97``::"

#: ../../library/functions.rst:1588
msgid ""
">>> pow(38, -1, mod=97)\n"
"23\n"
">>> 23 * 38 % 97 == 1\n"
"True"
msgstr ""
">>> pow(38, -1, mod=97)\n"
"23\n"
">>> 23 * 38 % 97 == 1\n"
"True"

#: ../../library/functions.rst:1593
msgid ""
"For :class:`int` operands, the three-argument form of ``pow`` now allows the "
"second argument to be negative, permitting computation of modular inverses."
msgstr ""
"Para operandos :class:`int`, a forma de três argumentos de ``pow`` agora "
"permite que o segundo argumento seja negativo, permitindo o cálculo de "
"inversos modulares."

#: ../../library/functions.rst:1598
msgid ""
"Allow keyword arguments.  Formerly, only positional arguments were supported."
msgstr ""
"Permite argumentos de palavra reservada. Anteriormente, apenas argumentos "
"posicionais eram suportados."

#: ../../library/functions.rst:1605
msgid ""
"Print *objects* to the text stream *file*, separated by *sep* and followed "
"by *end*.  *sep*, *end*, *file*, and *flush*, if present, must be given as "
"keyword arguments."
msgstr ""
"Exibe *objects* no fluxo de texto *arquivo*, separado por *sep* e seguido "
"por *end*. *sep*, *end*, *file* e *flush*, se houver, devem ser fornecidos "
"como argumentos nomeados."

#: ../../library/functions.rst:1609
msgid ""
"All non-keyword arguments are converted to strings like :func:`str` does and "
"written to the stream, separated by *sep* and followed by *end*.  Both *sep* "
"and *end* must be strings; they can also be ``None``, which means to use the "
"default values.  If no *objects* are given, :func:`print` will just write "
"*end*."
msgstr ""
"Todos os argumentos que não são nomeados são convertidos em strings como :"
"func:`str` faz e gravados no fluxo, separados por *sep* e seguidos por "
"*end*. *sep* e *end* devem ser strings; eles também podem ser ``None``, o "
"que significa usar os valores padrão. Se nenhum *object* for fornecido, :"
"func:`print` escreverá apenas *end*."

#: ../../library/functions.rst:1615
msgid ""
"The *file* argument must be an object with a ``write(string)`` method; if it "
"is not present or ``None``, :data:`sys.stdout` will be used.  Since printed "
"arguments are converted to text strings, :func:`print` cannot be used with "
"binary mode file objects.  For these, use ``file.write(...)`` instead."
msgstr ""
"O argumento *file* deve ser um objeto com um método ``write(string)``; se "
"ele não estiver presente ou ``None``, então :data:`sys.stdout` será usado. "
"Como argumentos exibidos no console são convertidos para strings de texto, :"
"func:`print` não pode ser usado com objetos de arquivo em modo binário. Para "
"esses casos, use ``file.write(...)`` ao invés."

#: ../../library/functions.rst:1620
msgid ""
"Output buffering is usually determined by *file*. However, if *flush* is "
"true, the stream is forcibly flushed."
msgstr ""
"O buffer de saída geralmente é determinado por *arquivo*. No entanto, se "
"*flush* for verdadeiro, o fluxo será descarregado à força."

#: ../../library/functions.rst:1624
msgid "Added the *flush* keyword argument."
msgstr "Adicionado o argumento nomeado *flush*."

#: ../../library/functions.rst:1630
msgid "Return a property attribute."
msgstr "Retorna um atributo de propriedade."

#: ../../library/functions.rst:1632
msgid ""
"*fget* is a function for getting an attribute value.  *fset* is a function "
"for setting an attribute value. *fdel* is a function for deleting an "
"attribute value.  And *doc* creates a docstring for the attribute."
msgstr ""
"*fget* é uma função para obter o valor de um atributo. *fset* é uma função "
"para definir um valor para um atributo. *fdel* é uma função para deletar um "
"valor de um atributo. E *doc* cria um docstring para um atributo."

#: ../../library/functions.rst:1636
msgid "A typical use is to define a managed attribute ``x``::"
msgstr "Um uso comum é para definir um atributo gerenciável ``x``::"

#: ../../library/functions.rst:1638
msgid ""
"class C:\n"
"    def __init__(self):\n"
"        self._x = None\n"
"\n"
"    def getx(self):\n"
"        return self._x\n"
"\n"
"    def setx(self, value):\n"
"        self._x = value\n"
"\n"
"    def delx(self):\n"
"        del self._x\n"
"\n"
"    x = property(getx, setx, delx, \"I'm the 'x' property.\")"
msgstr ""
"class C:\n"
"    def __init__(self):\n"
"        self._x = None\n"
"\n"
"    def getx(self):\n"
"        return self._x\n"
"\n"
"    def setx(self, valor):\n"
"        self._x = valor\n"
"\n"
"    def delx(self):\n"
"        del self._x\n"
"\n"
"    x = property(getx, setx, delx, \"Eu sou a propriedade de 'x'.\")"

#: ../../library/functions.rst:1653
msgid ""
"If *c* is an instance of *C*, ``c.x`` will invoke the getter, ``c.x = "
"value`` will invoke the setter, and ``del c.x`` the deleter."
msgstr ""
"Se *c* é uma instância de *C*, ``c.x`` irá invocar o método getter, ``c.x = "
"valor`` irá invocar o método setter, e ``del c.x`` o método deleter."

#: ../../library/functions.rst:1656
msgid ""
"If given, *doc* will be the docstring of the property attribute. Otherwise, "
"the property will copy *fget*'s docstring (if it exists).  This makes it "
"possible to create read-only properties easily using :func:`property` as a :"
"term:`decorator`::"
msgstr ""
"Se fornecido, *doc* será a docstring do atributo definido por property. Caso "
"contrário, a property copiará a docstring de *fget* (se ela existir). Isso "
"torna possível criar facilmente propriedades apenas para leitura usando :"
"func:`property` como um :term:`decorador`::"

#: ../../library/functions.rst:1660
msgid ""
"class Parrot:\n"
"    def __init__(self):\n"
"        self._voltage = 100000\n"
"\n"
"    @property\n"
"    def voltage(self):\n"
"        \"\"\"Get the current voltage.\"\"\"\n"
"        return self._voltage"
msgstr ""
"class Parrot:\n"
"    def __init__(self):\n"
"        self._voltagem = 100000\n"
"\n"
"    @property\n"
"    def voltagem(self):\n"
"        \"\"\"Obtém a voltagem atual.\"\"\"\n"
"        return self._voltagem"

#: ../../library/functions.rst:1669
msgid ""
"The ``@property`` decorator turns the :meth:`!voltage` method into a "
"\"getter\" for a read-only attribute with the same name, and it sets the "
"docstring for *voltage* to \"Get the current voltage.\""
msgstr ""
"O decorador ``@property`` transforma o método :meth:`!voltage` em um "
"\"getter\" para um atributo somente leitura com o mesmo nome, e define a "
"docstring de *voltage* para \"Get the current voltage.\""

#: ../../library/functions.rst:1677
msgid ""
"A property object has ``getter``, ``setter``, and ``deleter`` methods usable "
"as decorators that create a copy of the property with the corresponding "
"accessor function set to the decorated function.  This is best explained "
"with an example:"
msgstr ""
"Um objeto property possui métodos ``getter``, ``setter`` e ``deleter`` "
"usáveis como decoradores, que criam uma cópia da property com o assessor "
"correspondente a função definida para a função com decorador. Isso é "
"explicado melhor com um exemplo::"

#: ../../library/functions.rst:1682
msgid ""
"class C:\n"
"    def __init__(self):\n"
"        self._x = None\n"
"\n"
"    @property\n"
"    def x(self):\n"
"        \"\"\"I'm the 'x' property.\"\"\"\n"
"        return self._x\n"
"\n"
"    @x.setter\n"
"    def x(self, value):\n"
"        self._x = value\n"
"\n"
"    @x.deleter\n"
"    def x(self):\n"
"        del self._x"
msgstr ""
"class C:\n"
"    def __init__(self):\n"
"        self._x = None\n"
"\n"
"    @property\n"
"    def x(self):\n"
"        \"\"\"Sou a propriedade de 'x'.\"\"\"\n"
"        return self._x\n"
"\n"
"    @x.setter\n"
"    def x(self, value):\n"
"        self._x = value\n"
"\n"
"    @x.deleter\n"
"    def x(self):\n"
"        del self._x"

#: ../../library/functions.rst:1701
msgid ""
"This code is exactly equivalent to the first example.  Be sure to give the "
"additional functions the same name as the original property (``x`` in this "
"case.)"
msgstr ""
"Esse código é exatamente equivalente ao primeiro exemplo. Tenha certeza de "
"nas funções adicionais usar o mesmo nome que a property original (``x`` "
"neste caso)."

#: ../../library/functions.rst:1705
msgid ""
"The returned property object also has the attributes ``fget``, ``fset``, and "
"``fdel`` corresponding to the constructor arguments."
msgstr ""
"O objeto property retornado também tem os atributos ``fget``, ``fset``, e "
"``fdel`` correspondendo aos argumentos do construtor."

#: ../../library/functions.rst:1708
msgid "The docstrings of property objects are now writeable."
msgstr "Agora é possível escrever nas docstrings de objetos property."

#: ../../library/functions.rst:1713
msgid ""
"Attribute holding the name of the property. The name of the property can be "
"changed at runtime."
msgstr ""
"Atributo que contém o nome da propriedade. O nome da propriedade pode ser "
"alterado em tempo de execução."

#: ../../library/functions.rst:1724
msgid ""
"Rather than being a function, :class:`range` is actually an immutable "
"sequence type, as documented in :ref:`typesseq-range` and :ref:`typesseq`."
msgstr ""
"Em vez de ser uma função, :class:`range` é realmente um tipo de sequência "
"imutável, conforme documentado em :ref:`typesseq-range` e :ref:`typesseq`."

#: ../../library/functions.rst:1730
msgid ""
"Return a string containing a printable representation of an object.  For "
"many types, this function makes an attempt to return a string that would "
"yield an object with the same value when passed to :func:`eval`; otherwise, "
"the representation is a string enclosed in angle brackets that contains the "
"name of the type of the object together with additional information often "
"including the name and address of the object.  A class can control what this "
"function returns for its instances by defining a :meth:`~object.__repr__` "
"method. If :func:`sys.displayhook` is not accessible, this function will "
"raise :exc:`RuntimeError`."
msgstr ""
"Retorna uma string contendo uma representação imprimível de um objeto. Para "
"muitos tipos, essa função tenta retornar uma string que produziria um objeto "
"com o mesmo valor quando passado para :func:`eval`, caso contrário, a "
"representação é uma string entre colchetes angulares que contém o nome do "
"tipo do objeto juntamente com informações adicionais, geralmente incluindo o "
"nome e o endereço do objeto. Uma classe pode controlar o que essa função "
"retorna para suas instâncias, definindo um método :meth:`~object.__repr__`. "
"Se :func:`sys.displayhook` não estiver acessível, esta função vai levantar :"
"exc:`RuntimeError`."

#: ../../library/functions.rst:1741
msgid "This class has a custom representation that can be evaluated::"
msgstr ""
"Esta classe possui uma representação personalizada que pode ser executada::"

#: ../../library/functions.rst:1743
msgid ""
"class Person:\n"
"   def __init__(self, name, age):\n"
"      self.name = name\n"
"      self.age = age\n"
"\n"
"   def __repr__(self):\n"
"      return f\"Person('{self.name}', {self.age})\""
msgstr ""
"class Pessoa:\n"
"   def __init__(self, nome, idade):\n"
"      self.name = nome\n"
"      self.age = idade\n"
"\n"
"   def __repr__(self):\n"
"      return f\"Pessoa('{self.nome}', {self.idade})\""

#: ../../library/functions.rst:1754
msgid ""
"Return a reverse :term:`iterator`.  *seq* must be an object which has a :"
"meth:`~object.__reversed__` method or supports the sequence protocol (the :"
"meth:`~object.__len__` method and the :meth:`~object.__getitem__` method "
"with integer arguments starting at ``0``)."
msgstr ""
"Retorna um :term:`iterador <iterator>` reverso. *seq* deve ser um objeto que "
"possui o método :meth:`~object.__reversed__` ou suporta o protocolo de "
"sequência (o método :meth:`~object.__len__` e o método :meth:`~object."
"__getitem__` com argumentos inteiros começando em ``0``)."

#: ../../library/functions.rst:1762
msgid ""
"Return *number* rounded to *ndigits* precision after the decimal point.  If "
"*ndigits* is omitted or is ``None``, it returns the nearest integer to its "
"input."
msgstr ""
"Retorna *number* arredondado para *ndigits* precisão após o ponto decimal. "
"Se *ndigits* for omitido ou for ``None``, ele retornará o número inteiro "
"mais próximo de sua entrada."

#: ../../library/functions.rst:1766
msgid ""
"For the built-in types supporting :func:`round`, values are rounded to the "
"closest multiple of 10 to the power minus *ndigits*; if two multiples are "
"equally close, rounding is done toward the even choice (so, for example, "
"both ``round(0.5)`` and ``round(-0.5)`` are ``0``, and ``round(1.5)`` is "
"``2``).  Any integer value is valid for *ndigits* (positive, zero, or "
"negative).  The return value is an integer if *ndigits* is omitted or "
"``None``. Otherwise, the return value has the same type as *number*."
msgstr ""
"Para os tipos embutidos com suporte a :func:`round`, os valores são "
"arredondados para o múltiplo mais próximo de 10 para a potência de menos "
"*ndigit*; se dois múltiplos são igualmente próximos, o arredondamento é "
"feito para a opção par (por exemplo, ``round(0.5)`` e ``round(-0.5)`` são "
"``0`` e ``round(1.5)`` é ``2``). Qualquer valor inteiro é válido para "
"*ndigits* (positivo, zero ou negativo). O valor de retorno é um número "
"inteiro se *ndigits* for omitido ou ``None``. Caso contrário, o valor de "
"retorno tem o mesmo tipo que *number*."

#: ../../library/functions.rst:1775
msgid ""
"For a general Python object ``number``, ``round`` delegates to ``number."
"__round__``."
msgstr ""
"Para um objeto Python geral ``number``, ``round`` delega para ``number."
"__round__``."

#: ../../library/functions.rst:1780
msgid ""
"The behavior of :func:`round` for floats can be surprising: for example, "
"``round(2.675, 2)`` gives ``2.67`` instead of the expected ``2.68``. This is "
"not a bug: it's a result of the fact that most decimal fractions can't be "
"represented exactly as a float.  See :ref:`tut-fp-issues` for more "
"information."
msgstr ""
"O comportamento de :func:`round` para pontos flutuantes pode ser "
"surpreendente: por exemplo, ``round(2.675, 2)`` fornece ``2.67`` em vez do "
"esperado ``2.68``. Isso não é um bug: é resultado do fato de que a maioria "
"das frações decimais não pode ser representada exatamente como um ponto "
"flutuante. Veja :ref:`tut-fp-issues` para mais informações."

#: ../../library/functions.rst:1792
msgid ""
"Return a new :class:`set` object, optionally with elements taken from "
"*iterable*.  ``set`` is a built-in class.  See :class:`set` and :ref:`types-"
"set` for documentation about this class."
msgstr ""
"Retorna um novo objeto :class:`set`, opcionalmente com elementos retirados "
"de *iterable*. ``set`` é uma classe embutida. Veja :class:`set` e :ref:"
"`types-set` para documentação sobre esta classe."

#: ../../library/functions.rst:1796
msgid ""
"For other containers see the built-in :class:`frozenset`, :class:`list`, :"
"class:`tuple`, and :class:`dict` classes, as well as the :mod:`collections` "
"module."
msgstr ""
"Para outros contêineres, consulte as classes embutidas :class:`frozenset`, :"
"class:`list`, :class:`tuple` e :class:`dict`, bem como o módulo :mod:"
"`collections`."

#: ../../library/functions.rst:1803
msgid ""
"This is the counterpart of :func:`getattr`.  The arguments are an object, a "
"string, and an arbitrary value.  The string may name an existing attribute "
"or a new attribute.  The function assigns the value to the attribute, "
"provided the object allows it.  For example, ``setattr(x, 'foobar', 123)`` "
"is equivalent to ``x.foobar = 123``."
msgstr ""
"Esta é a contrapartida de :func:`getattr`. Os argumentos são um objeto, uma "
"string e um valor arbitrário. A string pode nomear um atributo existente ou "
"um novo atributo. A função atribui o valor ao atributo, desde que o objeto "
"permita. Por exemplo, ``setattr(x, 'foobar', 123)`` é equivalente a ``x."
"foobar = 123``."

#: ../../library/functions.rst:1809
msgid ""
"*name* need not be a Python identifier as defined in :ref:`identifiers` "
"unless the object chooses to enforce that, for example in a custom :meth:"
"`~object.__getattribute__` or via :attr:`~object.__slots__`. An attribute "
"whose name is not an identifier will not be accessible using the dot "
"notation, but is accessible through :func:`getattr` etc.."
msgstr ""
"*name* não precisa ser um identificador do Python conforme definido em :ref:"
"`identifiers` a menos que o objeto opte por impor isso, por exemplo, em um :"
"meth:`~object.__getattribute__` personalizado ou via :attr:`~object."
"__slots__`. Um atributo cujo nome não é um identificador não será acessível "
"usando a notação de ponto, mas pode ser acessado através de :func:`getattr` "
"etc."

#: ../../library/functions.rst:1817
msgid ""
"Since :ref:`private name mangling <private-name-mangling>` happens at "
"compilation time, one must manually mangle a private attribute's (attributes "
"with two leading underscores) name in order to set it with :func:`setattr`."
msgstr ""
"Uma vez que :ref:`desfiguração de nome privado <private-name-mangling>` "
"acontece em tempo de compilação, deve-se manualmente mutilar o nome de um "
"atributo privado (atributos com dois sublinhados à esquerda) para defini-lo "
"com :func:`setattr`."

#: ../../library/functions.rst:1826
msgid ""
"Return a :term:`slice` object representing the set of indices specified by "
"``range(start, stop, step)``.  The *start* and *step* arguments default to "
"``None``."
msgstr ""
"Retorna um objeto :term:`fatia` representando o conjunto de índices "
"especificados por ``range(start, stop, step)``. Os argumentos *start* e "
"*step* têm o padrão ``None``."

#: ../../library/functions.rst:1834
msgid ""
"Slice objects have read-only data attributes :attr:`!start`, :attr:`!stop`, "
"and :attr:`!step` which merely return the argument values (or their "
"default).  They have no other explicit functionality; however, they are used "
"by NumPy and other third-party packages."
msgstr ""
"Objetos fatia têm atributos de dados somente leitura :attr:`!start`, :attr:`!"
"stop` e :attr:`!step` que simplesmente retornam os valores dos argumentos "
"(ou seus padrões). Eles não possuem outra funcionalidade explícita; no "
"entanto, eles são usados pelo NumPy e outros pacotes de terceiros."

#: ../../library/functions.rst:1839
msgid ""
"Slice objects are also generated when extended indexing syntax is used.  For "
"example: ``a[start:stop:step]`` or ``a[start:stop, i]``.  See :func:"
"`itertools.islice` for an alternate version that returns an :term:`iterator`."
msgstr ""
"Objetos fatia também são gerados quando a sintaxe de indexação estendida é "
"usada. Por exemplo: ``a[start:stop:step]`` ou ``a[start:stop, i]``. Veja :"
"func:`itertools.islice` para uma versão alternativa que retorna um :term:"
"`iterador`."

#: ../../library/functions.rst:1844
msgid ""
"Slice objects are now :term:`hashable` (provided :attr:`~slice.start`, :attr:"
"`~slice.stop`, and :attr:`~slice.step` are hashable)."
msgstr ""
"Os objetos slice agora são :term:`hasheáveis <hasheável>` (desde que :attr:"
"`~slice.start`, :attr:`~slice.stop` e :attr:`~slice.step` sejam hasheáveis)."

#: ../../library/functions.rst:1850
msgid "Return a new sorted list from the items in *iterable*."
msgstr "Retorna uma nova lista classificada dos itens em *iterable*."

#: ../../library/functions.rst:1852
msgid ""
"Has two optional arguments which must be specified as keyword arguments."
msgstr ""
"Possui dois argumentos opcionais que devem ser especificados como argumentos "
"nomeados."

#: ../../library/functions.rst:1854
msgid ""
"*key* specifies a function of one argument that is used to extract a "
"comparison key from each element in *iterable* (for example, ``key=str."
"lower``).  The default value is ``None`` (compare the elements directly)."
msgstr ""
"*key* especifica a função de um argumento usado para extrair uma chave de "
"comparação de cada elemento em *iterable* (por exemplo, ``key=str.lower``). "
"O valor padrão é ``None`` (compara os elementos diretamente)."

#: ../../library/functions.rst:1858
msgid ""
"*reverse* is a boolean value.  If set to ``True``, then the list elements "
"are sorted as if each comparison were reversed."
msgstr ""
"*reverse* é um valor booleano. Se definido igual a ``True``, então os "
"elementos da lista são classificados como se cada comparação estivesse "
"invertida."

#: ../../library/functions.rst:1861
msgid ""
"Use :func:`functools.cmp_to_key` to convert an old-style *cmp* function to a "
"*key* function."
msgstr ""
"Usa :func:`functools.cmp_to_key` para converter a função das antigas *cmp* "
"para uma função *key*."

#: ../../library/functions.rst:1864
msgid ""
"The built-in :func:`sorted` function is guaranteed to be stable. A sort is "
"stable if it guarantees not to change the relative order of elements that "
"compare equal --- this is helpful for sorting in multiple passes (for "
"example, sort by department, then by salary grade)."
msgstr ""
"A função embutida :func:`sorted` é garantida como estável. Uma ordenação é "
"estável se garantir não alterar a ordem relativa dos elementos que se "
"comparam da mesma forma --- isso é útil para ordenar em várias passagens "
"(por exemplo, ordenar por departamento e depois por nível de salário)."

#: ../../library/functions.rst:1869
msgid ""
"The sort algorithm uses only ``<`` comparisons between items.  While "
"defining an :meth:`~object.__lt__` method will suffice for sorting, :PEP:`8` "
"recommends that all six :ref:`rich comparisons <comparisons>` be "
"implemented.  This will help avoid bugs when using the same data with other "
"ordering tools such as :func:`max` that rely on a different underlying "
"method.  Implementing all six comparisons also helps avoid confusion for "
"mixed type comparisons which can call reflected the :meth:`~object.__gt__` "
"method."
msgstr ""
"O algoritmo de classificação usa apenas comparações ``<`` entre itens. "
"Embora definir um método :meth:`~object.__lt__` seja suficiente para "
"ordenação, :PEP:`8` recomenda que todas as seis :ref:`comparações ricas "
"<comparisons>` sejam implementadas. Isso ajudará a evitar erros ao usar os "
"mesmos dados com outras ferramentas de ordenação, como :func:`max`, que "
"dependem de um método subjacente diferente. Implementar todas as seis "
"comparações também ajuda a evitar confusão para comparações de tipo misto "
"que podem chamar refletido o método :meth:`~object.__gt__`."

#: ../../library/functions.rst:1878
msgid ""
"For sorting examples and a brief sorting tutorial, see :ref:`sortinghowto`."
msgstr ""
"Para exemplos de classificação e um breve tutorial de classificação, veja :"
"ref:`sortinghowto`."

#: ../../library/functions.rst:1882
msgid "Transform a method into a static method."
msgstr "Transforma um método em método estático."

#: ../../library/functions.rst:1884
msgid ""
"A static method does not receive an implicit first argument. To declare a "
"static method, use this idiom::"
msgstr ""
"Um método estático não recebe um primeiro argumento implícito. Para declarar "
"um método estático, use este idioma::"

#: ../../library/functions.rst:1887
msgid ""
"class C:\n"
"    @staticmethod\n"
"    def f(arg1, arg2, argN): ..."
msgstr ""
"class C:\n"
"    @staticmethod\n"
"    def f(arg1, arg2, argN): ..."

#: ../../library/functions.rst:1891
msgid ""
"The ``@staticmethod`` form is a function :term:`decorator` -- see :ref:"
"`function` for details."
msgstr ""
"A forma ``@staticmethod`` é uma função de :term:`decorador` -- veja :ref:"
"`function` para detalhes."

#: ../../library/functions.rst:1894
msgid ""
"A static method can be called either on the class (such as ``C.f()``) or on "
"an instance (such as ``C().f()``). Moreover, the static method :term:"
"`descriptor` is also callable, so it can be used in the class definition "
"(such as ``f()``)."
msgstr ""
"Um método estático pode ser chamado na classe (tal como ``C.f()``) ou em uma "
"instância (tal como ``C().f()``). Além disso, o :term:`descritor` de método "
"estático também é um chamável, então ele pode ser usado na definição de "
"classe (como ``f()``)."

#: ../../library/functions.rst:1899
msgid ""
"Static methods in Python are similar to those found in Java or C++. Also, "
"see :func:`classmethod` for a variant that is useful for creating alternate "
"class constructors."
msgstr ""
"Métodos estáticos em Python são similares àqueles encontrados em Java ou C+"
"+. Veja também :func:`classmethod` para uma variante útil na criação de "
"construtores de classe alternativos."

#: ../../library/functions.rst:1903
msgid ""
"Like all decorators, it is also possible to call ``staticmethod`` as a "
"regular function and do something with its result.  This is needed in some "
"cases where you need a reference to a function from a class body and you "
"want to avoid the automatic transformation to instance method.  For these "
"cases, use this idiom::"
msgstr ""
"Como todos os decoradores, também é possível chamar ``staticmethod`` como "
"uma função regular e fazer algo com seu resultado. Isso é necessário em "
"alguns casos em que você precisa de uma referência para uma função de um "
"corpo de classe e deseja evitar a transformação automática em método de "
"instância. Para esses casos, use este idioma::"

#: ../../library/functions.rst:1909
msgid ""
"def regular_function():\n"
"    ...\n"
"\n"
"class C:\n"
"    method = staticmethod(regular_function)"
msgstr ""
"def função_comum():\n"
"    ...\n"
"\n"
"class C:\n"
"    método = staticmethod(função_comum)"

#: ../../library/functions.rst:1915
msgid "For more information on static methods, see :ref:`types`."
msgstr "Para mais informações sobre métodos estáticos, consulte :ref:`types`."

#: ../../library/functions.rst:1917
msgid ""
"Static methods now inherit the method attributes (:attr:`~function."
"__module__`, :attr:`~function.__name__`, :attr:`~function.__qualname__`, :"
"attr:`~function.__doc__` and :attr:`~function.__annotations__`), have a new "
"``__wrapped__`` attribute, and are now callable as regular functions."
msgstr ""
"Métodos estáticos agora herdam os atributos do método (:attr:`~function."
"__module__`, :attr:`~function.__name__`, :attr:`~function.__qualname__`, :"
"attr:`~function.__doc__` e :attr:`~function.__annotations__`), têm um novo "
"atributo ``__wrapped__`` e são agora chamáveis como funções regulares."

#: ../../library/functions.rst:1933
msgid ""
"Return a :class:`str` version of *object*.  See :func:`str` for details."
msgstr ""
"Retorna uma versão :class:`str` de *object*. Consulte :func:`str` para "
"detalhes."

#: ../../library/functions.rst:1935
msgid ""
"``str`` is the built-in string :term:`class`.  For general information about "
"strings, see :ref:`textseq`."
msgstr ""
"``str`` é uma :term:`classe` de string embutida. Para informações gerais "
"sobre strings, consulte :ref:`textseq`."

#: ../../library/functions.rst:1941
msgid ""
"Sums *start* and the items of an *iterable* from left to right and returns "
"the total.  The *iterable*'s items are normally numbers, and the start value "
"is not allowed to be a string."
msgstr ""
"Soma *start* e os itens de um *iterable* da esquerda para a direita e "
"retornam o total. Os itens do *iterable* são normalmente números e o valor "
"inicial não pode ser uma string."

#: ../../library/functions.rst:1945
msgid ""
"For some use cases, there are good alternatives to :func:`sum`. The "
"preferred, fast way to concatenate a sequence of strings is by calling ``''."
"join(sequence)``.  To add floating-point values with extended precision, "
"see :func:`math.fsum`\\.  To concatenate a series of iterables, consider "
"using :func:`itertools.chain`."
msgstr ""
"Para alguns casos de uso, existem boas alternativas para :func:`sum`. A "
"maneira rápida e preferida de concatenar uma sequência de strings é chamando "
"``''.join(sequence)``. Para adicionar valores de ponto flutuante com "
"precisão estendida, consulte :func:`math.fsum`. Para concatenar uma série de "
"iteráveis, considere usar :func:`itertools.chain`."

#: ../../library/functions.rst:1951
msgid "The *start* parameter can be specified as a keyword argument."
msgstr "O parâmetro *start* pode ser especificado como um argumento nomeado."

#: ../../library/functions.rst:1954
msgid ""
"Summation of floats switched to an algorithm that gives higher accuracy and "
"better commutativity on most builds."
msgstr ""
"A soma dos pontos flutuantes foi alterada para um algoritmo que oferece "
"maior precisão e melhor comutatividade na maioria das compilações."

#: ../../library/functions.rst:1961
msgid ""
"Return a proxy object that delegates method calls to a parent or sibling "
"class of *type*.  This is useful for accessing inherited methods that have "
"been overridden in a class."
msgstr ""
"Retorna um objeto proxy que delega chamadas de método a uma classe pai ou "
"irmão do *type*. Isso é útil para acessar métodos herdados que foram "
"substituídos em uma classe."

#: ../../library/functions.rst:1965
msgid ""
"The *object_or_type* determines the :term:`method resolution order` to be "
"searched.  The search starts from the class right after the *type*."
msgstr ""
"O *object_or_type* determina a :term:`ordem de resolução de métodos` a ser "
"pesquisada. A pesquisa inicia a partir da classe logo após o *type*."

#: ../../library/functions.rst:1969
msgid ""
"For example, if :attr:`~type.__mro__` of *object_or_type* is ``D -> B -> C -"
"> A -> object`` and the value of *type* is ``B``, then :func:`super` "
"searches ``C -> A -> object``."
msgstr ""
"Por exemplo, se :attr:`~type.__mro__` de *object_or_type* é ``D -> B -> C -> "
"A -> object`` e o valor de *type* é ``B``, então :func:`super` procura por "
"``C -> A -> object``."

#: ../../library/functions.rst:1973
msgid ""
"The :attr:`~type.__mro__` attribute of the class corresponding to "
"*object_or_type* lists the method resolution search order used by both :func:"
"`getattr` and :func:`super`.  The attribute is dynamic and can change "
"whenever the inheritance hierarchy is updated."
msgstr ""
"O atributo :attr:`~type.__mro__` da classe correspondente ao "
"*object_or_type* lista a ordem de pesquisa de resolução de método usada por :"
"func:`getattr` e :func:`super`. O atributo é dinâmico e pode mudar sempre "
"que a hierarquia da herança é atualizada."

#: ../../library/functions.rst:1978
msgid ""
"If the second argument is omitted, the super object returned is unbound.  If "
"the second argument is an object, ``isinstance(obj, type)`` must be true.  "
"If the second argument is a type, ``issubclass(type2, type)`` must be true "
"(this is useful for classmethods)."
msgstr ""
"Se o segundo argumento for omitido, o objeto super retornado é desacoplado. "
"Se o segundo argumento é um objeto, ``isinstance(obj, type)`` deve ser "
"verdadeiro. Se o segundo argumento é um tipo, ``issubclass(type2, type)`` "
"deve ser verdadeiro (isto é útil para classmethods)."

#: ../../library/functions.rst:1983
msgid ""
"When called directly within an ordinary method of a class, both arguments "
"may be omitted (\"zero-argument :func:`!super`\"). In this case, *type* will "
"be the enclosing class, and *obj* will be the first argument of the "
"immediately enclosing function (typically ``self``). (This means that zero-"
"argument :func:`!super` will not work as expected within nested functions, "
"including generator expressions, which implicitly create nested functions.)"
msgstr ""
"Quando chamado diretamente de dentro de um método comum de uma classe, pode-"
"se omitir ambos os argumentos (\":func:`!super` de zero argumentos\"). Neste "
"caso, *type* será a classe em questão, e *obj* será o primeiro argumento da "
"função que imediatamente chamou ``super()`` (geralmente o ``self``). (Isso "
"significa que o :func:`!super` de zero argumentos não vai funcionar como "
"esperado em funções aninhadas, incluindo expressões geradoras, que criam "
"funções aninhadas implicitamente.)"

#: ../../library/functions.rst:1990
msgid ""
"There are two typical use cases for *super*.  In a class hierarchy with "
"single inheritance, *super* can be used to refer to parent classes without "
"naming them explicitly, thus making the code more maintainable.  This use "
"closely parallels the use of *super* in other programming languages."
msgstr ""
"Existem dois casos de uso típicos para *super*. Em uma hierarquia de classes "
"com herança única, *super* pode ser usado para se referir a classes base sem "
"nomeá-las explicitamente, tornando o código mais sustentável. Esse uso é "
"paralelo ao uso de *super* em outras linguagens de programação."

#: ../../library/functions.rst:1995
msgid ""
"The second use case is to support cooperative multiple inheritance in a "
"dynamic execution environment.  This use case is unique to Python and is not "
"found in statically compiled languages or languages that only support single "
"inheritance.  This makes it possible to implement \"diamond diagrams\" where "
"multiple base classes implement the same method.  Good design dictates that "
"such implementations have the same calling signature in every case (because "
"the order of calls is determined at runtime, because that order adapts to "
"changes in the class hierarchy, and because that order can include sibling "
"classes that are unknown prior to runtime)."
msgstr ""
"O segundo caso de uso é oferecer suporte à herança múltipla cooperativa em "
"um ambiente de execução dinâmica. Esse caso de uso é exclusivo do Python e "
"não é encontrado em idiomas ou linguagens compiladas estaticamente que "
"suportam apenas herança única. Isso torna possível implementar \"diagramas "
"em losango\", onde várias classes base implementam o mesmo método. Um bom "
"design exige que tais implementações tenham a mesma assinatura de chamada em "
"todos os casos (porque a ordem das chamadas é determinada em tempo de "
"execução, porque essa ordem se adapta às alterações na hierarquia de classes "
"e porque essa ordem pode incluir classes de irmãos desconhecidas antes do "
"tempo de execução)."

#: ../../library/functions.rst:2005
msgid "For both use cases, a typical superclass call looks like this::"
msgstr ""
"Nos dois casos de uso, uma chamada típica de superclasse se parece com isso::"

#: ../../library/functions.rst:2007
msgid ""
"class C(B):\n"
"    def method(self, arg):\n"
"        super().method(arg)    # This does the same thing as:\n"
"                               # super(C, self).method(arg)"
msgstr ""
"class C(B):\n"
"    def método(self, arg):\n"
"        super().método(arg)    # Isso faz o mesmo que:\n"
"                               # super(C, self).método(arg)"

#: ../../library/functions.rst:2012
msgid ""
"In addition to method lookups, :func:`super` also works for attribute "
"lookups.  One possible use case for this is calling :term:`descriptors "
"<descriptor>` in a parent or sibling class."
msgstr ""
"Além das pesquisas de método, :func:`super` também funciona para pesquisas "
"de atributo. Um possível caso de uso para isso é chamar :term:`descritores "
"<descriptor>` em uma classe pai ou irmã."

#: ../../library/functions.rst:2016
msgid ""
"Note that :func:`super` is implemented as part of the binding process for "
"explicit dotted attribute lookups such as ``super().__getitem__(name)``. It "
"does so by implementing its own :meth:`~object.__getattribute__` method for "
"searching classes in a predictable order that supports cooperative multiple "
"inheritance. Accordingly, :func:`super` is undefined for implicit lookups "
"using statements or operators such as ``super()[name]``."
msgstr ""
"Observe que :func:`super` é implementada como parte do processo de "
"vinculação para procura explícita de atributos com ponto, tal como ``super()."
"__getitem__(nome)``. Ela faz isso implementando seu próprio método :meth:"
"`~object.__getattribute__` para pesquisar classes em uma ordem predizível "
"que possui suporte a herança múltipla cooperativa. Logo, :func:`super` não é "
"definida para procuras implícitas usando instruções ou operadores como "
"``super()[name]``."

#: ../../library/functions.rst:2024
msgid ""
"Also note that, aside from the zero argument form, :func:`super` is not "
"limited to use inside methods.  The two argument form specifies the "
"arguments exactly and makes the appropriate references.  The zero argument "
"form only works inside a class definition, as the compiler fills in the "
"necessary details to correctly retrieve the class being defined, as well as "
"accessing the current instance for ordinary methods."
msgstr ""
"Observe também que, além da forma de argumento zero, :func:`super` não se "
"limita ao uso de métodos internos. O formulário de dois argumentos "
"especifica exatamente os argumentos e faz as referências apropriadas. O "
"formulário de argumento zero funciona apenas dentro de uma definição de "
"classe, pois o compilador preenche os detalhes necessários para recuperar "
"corretamente a classe que está sendo definida, além de acessar a instância "
"atual para métodos comuns."

#: ../../library/functions.rst:2031
msgid ""
"For practical suggestions on how to design cooperative classes using :func:"
"`super`, see `guide to using super() <https://rhettinger.wordpress."
"com/2011/05/26/super-considered-super/>`_."
msgstr ""
"Para sugestões práticas sobre como projetar classes cooperativas usando :"
"func:`super`, consulte o `guia para uso de super() <https://rhettinger."
"wordpress.com/2011/05/26/super-considered-super/>`_."

#: ../../library/functions.rst:2041
msgid ""
"Rather than being a function, :class:`tuple` is actually an immutable "
"sequence type, as documented in :ref:`typesseq-tuple` and :ref:`typesseq`."
msgstr ""
"Ao invés de ser uma função, :class:`tuple` é na verdade um tipo de sequência "
"imutável, conforme documentado em :ref:`typesseq-tuple` e :ref:`typesseq`."

#: ../../library/functions.rst:2050
msgid ""
"With one argument, return the type of an *object*.  The return value is a "
"type object and generally the same object as returned by :attr:`object."
"__class__`."
msgstr ""
"Com um argumento, retorna o tipo de um *object*. O valor de retorno é um "
"tipo de objeto e geralmente o mesmo objeto retornado por :attr:`object."
"__class__`."

#: ../../library/functions.rst:2054
msgid ""
"The :func:`isinstance` built-in function is recommended for testing the type "
"of an object, because it takes subclasses into account."
msgstr ""
"A função embutida :func:`isinstance` é recomendada para testar o tipo de um "
"objeto, porque ela leva sub-classes em consideração."

#: ../../library/functions.rst:2057
msgid ""
"With three arguments, return a new type object.  This is essentially a "
"dynamic form of the :keyword:`class` statement. The *name* string is the "
"class name and becomes the :attr:`~type.__name__` attribute. The *bases* "
"tuple contains the base classes and becomes the :attr:`~type.__bases__` "
"attribute; if empty, :class:`object`, the ultimate base of all classes, is "
"added.  The *dict* dictionary contains attribute and method definitions for "
"the class body; it may be copied or wrapped before becoming the :attr:`~type."
"__dict__` attribute. The following two statements create identical :class:`!"
"type` objects:"
msgstr ""
"Com três argumentos, retorna um novo objeto type. Esta é essencialmente a "
"forma dinâmica da instrução :keyword:`class`. A string *name* é o nome da "
"classe e se torna o atributo :attr:`~type.__name__`. A tupla *bases* contém "
"as classes bases e se torna o atributo :attr:`~type.__bases__`; se vazio, :"
"class:`object`, a base final de todas as classes é adicionada. O dicionário "
"*dict* contém definições de atributo e método para o corpo da classe; ele "
"pode ser copiado ou envolto antes de se tornar o atributo :attr:`~type."
"__dict__`. As duas instruções a seguir criam objetos :class:`!type` "
"idênticos:"

#: ../../library/functions.rst:2072
msgid "See also:"
msgstr "Veja também:"

#: ../../library/functions.rst:2074
msgid ""
":ref:`Documentation on attributes and methods on classes <class-attrs-and-"
"methods>`."
msgstr ""
":ref:`Documentação sobre atributos e métodos em classes <class-attrs-and-"
"methods>`."

#: ../../library/functions.rst:2075
msgid ":ref:`bltin-type-objects`"
msgstr ":ref:`bltin-type-objects`"

#: ../../library/functions.rst:2077
msgid ""
"Keyword arguments provided to the three argument form are passed to the "
"appropriate metaclass machinery (usually :meth:`~object.__init_subclass__`) "
"in the same way that keywords in a class definition (besides *metaclass*) "
"would."
msgstr ""
"Argumentos nomeados fornecidos para a forma de três argumentos são passados "
"para a máquina metaclasse apropriada (geralmente :meth:`~object."
"__init_subclass__`) da mesma forma que palavras-chave em uma definição de "
"classe (além de *metaclasse*) fariam."

#: ../../library/functions.rst:2082
msgid "See also :ref:`class-customization`."
msgstr "Veja também :ref:`class-customization`."

#: ../../library/functions.rst:2084
msgid ""
"Subclasses of :class:`!type` which don't override ``type.__new__`` may no "
"longer use the one-argument form to get the type of an object."
msgstr ""
"Subclasses de :class:`!type` que não substituem ``type.__new__`` não podem "
"mais usar a forma com apenas um argumento para obter o tipo de um objeto."

#: ../../library/functions.rst:2091
msgid ""
"Return the :attr:`~object.__dict__` attribute for a module, class, instance, "
"or any other object with a :attr:`!__dict__` attribute."
msgstr ""
"Retorna o atributo :attr:`~object.__dict__` para um módulo, classe, "
"instância, or qualquer outro objeto com um atributo :attr:`!__dict__`."

#: ../../library/functions.rst:2094
msgid ""
"Objects such as modules and instances have an updateable :attr:`~object."
"__dict__` attribute; however, other objects may have write restrictions on "
"their :attr:`!__dict__` attributes (for example, classes use a :class:`types."
"MappingProxyType` to prevent direct dictionary updates)."
msgstr ""
"Objetos como modelos e instâncias têm um atributo atualizável :attr:`~object."
"__dict__`; porém, outros projetos podem ter restrições de escrita em seus "
"atributos :attr:`!__dict__` (por exemplo, classes usam um :class:`types."
"MappingProxyType` para prevenir atualizações diretas a dicionário)."

#: ../../library/functions.rst:2099
msgid "Without an argument, :func:`vars` acts like :func:`locals`."
msgstr "Sem nenhum argumento, :func:`vars` age como :func:`locals`."

#: ../../library/functions.rst:2101
msgid ""
"A :exc:`TypeError` exception is raised if an object is specified but it "
"doesn't have a :attr:`~object.__dict__` attribute (for example, if its class "
"defines the :attr:`~object.__slots__` attribute)."
msgstr ""
"Uma exceção :exc:`TypeError` é levantada se um objeto é especificado, mas "
"ela não tem um atributo :attr:`~object.__dict__` (por exemplo, se sua classe "
"define o atributo :attr:`~object.__slots__`)."

#: ../../library/functions.rst:2107
msgid ""
"The result of calling this function without an argument has been updated as "
"described for the :func:`locals` builtin."
msgstr ""
"O resultado de chamar esta função sem um argumento foi atualizado conforme "
"descrito na embutida :func:`locals`."

#: ../../library/functions.rst:2113
msgid ""
"Iterate over several iterables in parallel, producing tuples with an item "
"from each one."
msgstr ""
"Itera sobre vários iteráveis em paralelo, produzindo tuplas com um item de "
"cada um."

#: ../../library/functions.rst:2116
msgid "Example::"
msgstr "Exemplo::"

#: ../../library/functions.rst:2118
msgid ""
">>> for item in zip([1, 2, 3], ['sugar', 'spice', 'everything nice']):\n"
"...     print(item)\n"
"...\n"
"(1, 'sugar')\n"
"(2, 'spice')\n"
"(3, 'everything nice')"
msgstr ""
">>> for item in zip([1, 2, 3], ['açúcar', 'tempero', 'tudo que há de "
"bom']):\n"
"...     print(item)\n"
"...\n"
"(1, 'açúcar')\n"
"(2, 'tempero')\n"
"(3, 'tudo que há de bom')"

#: ../../library/functions.rst:2125
msgid ""
"More formally: :func:`zip` returns an iterator of tuples, where the *i*-th "
"tuple contains the *i*-th element from each of the argument iterables."
msgstr ""
"Mais formalmente: :func:`zip` retorna um iterador de tuplas, onde a *i*-"
"ésima tupla contém o *i*-ésimo elemento de cada um dos iteráveis do "
"argumento."

#: ../../library/functions.rst:2128
msgid ""
"Another way to think of :func:`zip` is that it turns rows into columns, and "
"columns into rows.  This is similar to `transposing a matrix <https://en."
"wikipedia.org/wiki/Transpose>`_."
msgstr ""
"Outra maneira de pensar em :func:`zip` é que ela transforma linhas em "
"colunas e colunas em linhas. Isso é semelhante a `transpor uma matriz "
"<https://en.wikipedia.org/wiki/Transpose>`_."

#: ../../library/functions.rst:2132
msgid ""
":func:`zip` is lazy: The elements won't be processed until the iterable is "
"iterated on, e.g. by a :keyword:`!for` loop or by wrapping in a :class:"
"`list`."
msgstr ""
":func:`zip` é preguiçoso: Os elementos não serão processados até que o "
"iterável seja iterado. Por exemplo, por um loop :keyword:`!for` ou por um :"
"class:`list`."

#: ../../library/functions.rst:2136
msgid ""
"One thing to consider is that the iterables passed to :func:`zip` could have "
"different lengths; sometimes by design, and sometimes because of a bug in "
"the code that prepared these iterables.  Python offers three different "
"approaches to dealing with this issue:"
msgstr ""
"Uma coisa a considerar é que os iteráveis passados para :func:`zip` podem "
"ter comprimentos diferentes; às vezes por design e às vezes por causa de um "
"bug no código que preparou esses iteráveis. Python oferece três abordagens "
"diferentes para lidar com esse problema:"

#: ../../library/functions.rst:2141
msgid ""
"By default, :func:`zip` stops when the shortest iterable is exhausted. It "
"will ignore the remaining items in the longer iterables, cutting off the "
"result to the length of the shortest iterable::"
msgstr ""
"Por padrão, :func:`zip` para quando o iterável mais curto se esgota. Ele irá "
"ignorar os itens restantes nos iteráveis mais longos, cortando o resultado "
"para o comprimento do iterável mais curto::"

#: ../../library/functions.rst:2145
msgid ""
">>> list(zip(range(3), ['fee', 'fi', 'fo', 'fum']))\n"
"[(0, 'fee'), (1, 'fi'), (2, 'fo')]"
msgstr ""
">>> list(zip(range(3), ['fi', 'fa', 'fo', 'fum']))\n"
"[(0, 'fi'), (1, 'fa'), (2, 'fo')]"

#: ../../library/functions.rst:2148
msgid ""
":func:`zip` is often used in cases where the iterables are assumed to be of "
"equal length.  In such cases, it's recommended to use the ``strict=True`` "
"option. Its output is the same as regular :func:`zip`::"
msgstr ""
":func:`zip` é frequentemente usado em casos onde os iteráveis são "
"considerados de tamanho igual. Nesses casos, é recomendado usar a opção "
"``strict=True``. Sua saída é a mesma do :func:`zip`:: normal"

#: ../../library/functions.rst:2152
msgid ""
">>> list(zip(('a', 'b', 'c'), (1, 2, 3), strict=True))\n"
"[('a', 1), ('b', 2), ('c', 3)]"
msgstr ""
">>> list(zip(('a', 'b', 'c'), (1, 2, 3), strict=True))\n"
"[('a', 1), ('b', 2), ('c', 3)]"

#: ../../library/functions.rst:2155
msgid ""
"Unlike the default behavior, it raises a :exc:`ValueError` if one iterable "
"is exhausted before the others:"
msgstr ""
"Ao contrário do comportamento padrão, ele levanta uma exceção :exc:"
"`ValueError` se um iterável for esgotado antes dos outros:"

#: ../../library/functions.rst:2173
msgid ""
"Without the ``strict=True`` argument, any bug that results in iterables of "
"different lengths will be silenced, possibly manifesting as a hard-to-find "
"bug in another part of the program."
msgstr ""
"Sem o argumento ``strict=True``, qualquer bug que resulte em iteráveis de "
"diferentes comprimentos será silenciado, possivelmente se manifestando como "
"um bug difícil de encontrar em outra parte do programa."

#: ../../library/functions.rst:2177
msgid ""
"Shorter iterables can be padded with a constant value to make all the "
"iterables have the same length.  This is done by :func:`itertools."
"zip_longest`."
msgstr ""
"Iteráveis mais curtos podem ser preenchidos com um valor constante para "
"fazer com que todos os iteráveis tenham o mesmo comprimento. Isso é feito "
"por :func:`itertools.zip_longest`."

#: ../../library/functions.rst:2181
msgid ""
"Edge cases: With a single iterable argument, :func:`zip` returns an iterator "
"of 1-tuples.  With no arguments, it returns an empty iterator."
msgstr ""
"Casos extremos: Com um único argumento iterável, :func:`zip` retorna um "
"iterador de tuplas de um elemento. Sem argumentos, retorna um iterador vazio."

#: ../../library/functions.rst:2184
msgid "Tips and tricks:"
msgstr "Dicas e truques:"

#: ../../library/functions.rst:2186
msgid ""
"The left-to-right evaluation order of the iterables is guaranteed. This "
"makes possible an idiom for clustering a data series into n-length groups "
"using ``zip(*[iter(s)]*n, strict=True)``.  This repeats the *same* iterator "
"``n`` times so that each output tuple has the result of ``n`` calls to the "
"iterator. This has the effect of dividing the input into n-length chunks."
msgstr ""
"A ordem de avaliação da esquerda para a direita dos iteráveis é garantida. "
"Isso torna possível um idioma para agrupar uma série de dados em grupos de "
"comprimento n usando ``zip(*[iter(s)]*n, strict=True)``. Isso repete o "
"*mesmo* iterador ``n`` vezes para que cada tupla de saída tenha o resultado "
"de chamadas ``n`` para o iterador. Isso tem o efeito de dividir a entrada em "
"pedaços de n comprimentos."

#: ../../library/functions.rst:2192
msgid ""
":func:`zip` in conjunction with the ``*`` operator can be used to unzip a "
"list::"
msgstr ""
":func:`zip` em conjunto com o operador ``*`` pode ser usado para "
"descompactar uma lista::"

#: ../../library/functions.rst:2195
msgid ""
">>> x = [1, 2, 3]\n"
">>> y = [4, 5, 6]\n"
">>> list(zip(x, y))\n"
"[(1, 4), (2, 5), (3, 6)]\n"
">>> x2, y2 = zip(*zip(x, y))\n"
">>> x == list(x2) and y == list(y2)\n"
"True"
msgstr ""
">>> x = [1, 2, 3]\n"
">>> y = [4, 5, 6]\n"
">>> list(zip(x, y))\n"
"[(1, 4), (2, 5), (3, 6)]\n"
">>> x2, y2 = zip(*zip(x, y))\n"
">>> x == list(x2) and y == list(y2)\n"
"True"

#: ../../library/functions.rst:2203
msgid "Added the ``strict`` argument."
msgstr "Adicionado o argumento ``strict``."

#: ../../library/functions.rst:2215
msgid ""
"This is an advanced function that is not needed in everyday Python "
"programming, unlike :func:`importlib.import_module`."
msgstr ""
"Esta é uma função avançada que não é necessária na programação diária do "
"Python, ao contrário de :func:`importlib.import_module`."

#: ../../library/functions.rst:2218
msgid ""
"This function is invoked by the :keyword:`import` statement.  It can be "
"replaced (by importing the :mod:`builtins` module and assigning to "
"``builtins.__import__``) in order to change semantics of the :keyword:`!"
"import` statement, but doing so is **strongly** discouraged as it is usually "
"simpler to use import hooks (see :pep:`302`) to attain the same goals and "
"does not cause issues with code which assumes the default import "
"implementation is in use.  Direct use of :func:`__import__` is also "
"discouraged in favor of :func:`importlib.import_module`."
msgstr ""
"Esta função é chamada pela instrução :keyword:`import`. Ela pode ser "
"substituída (importando o módulo :mod:`builtins` e atribuindo a ``builtins."
"__import__``) para alterar a semântica da instrução :keyword:`!import`, mas "
"isso é **fortemente** desencorajado, pois geralmente é mais simples usar "
"ganchos de importação (consulte :pep:`302`) para atingir os mesmos objetivos "
"e não causa problemas com o código que pressupõe que a implementação de "
"importação padrão esteja em uso. O uso direto de :func:`__import__` também é "
"desencorajado em favor de :func:`importlib.import_module`."

#: ../../library/functions.rst:2227
msgid ""
"The function imports the module *name*, potentially using the given "
"*globals* and *locals* to determine how to interpret the name in a package "
"context. The *fromlist* gives the names of objects or submodules that should "
"be imported from the module given by *name*.  The standard implementation "
"does not use its *locals* argument at all and uses its *globals* only to "
"determine the package context of the :keyword:`import` statement."
msgstr ""
"A função importa o módulo *name*, potencialmente usando os dados *globals* e "
"*locals* para determinar como interpretar o nome em um contexto de pacote. O "
"*fromlist* fornece os nomes de objetos ou submódulos que devem ser "
"importados do módulo, fornecidos por *name*. A implementação padrão não usa "
"seu argumento *locals* e usa seus *globals* apenas para determinar o "
"contexto do pacote da instrução :keyword:`import`."

#: ../../library/functions.rst:2234
msgid ""
"*level* specifies whether to use absolute or relative imports. ``0`` (the "
"default) means only perform absolute imports.  Positive values for *level* "
"indicate the number of parent directories to search relative to the "
"directory of the module calling :func:`__import__` (see :pep:`328` for the "
"details)."
msgstr ""
"*level* especifica se é necessário usar importações absolutas ou relativas. "
"``0`` (o padrão) significa apenas realizar importações absolutas. Valores "
"positivos para *level* indicam o número de diretórios pai a serem "
"pesquisados em relação ao diretório do módulo que chama :func:`__import__` "
"(consulte :pep:`328` para obter detalhes)."

#: ../../library/functions.rst:2240
msgid ""
"When the *name* variable is of the form ``package.module``, normally, the "
"top-level package (the name up till the first dot) is returned, *not* the "
"module named by *name*.  However, when a non-empty *fromlist* argument is "
"given, the module named by *name* is returned."
msgstr ""
"Quando a variável *name* está no formato ``pacote.módulo``, normalmente, o "
"pacote de nível superior (o nome até o primeiro ponto) é retornado, *não* o "
"módulo nomeado por *name*. No entanto, quando um argumento *fromlist* não "
"vazio é fornecido, o módulo nomeado por *name* é retornado."

#: ../../library/functions.rst:2245
msgid ""
"For example, the statement ``import spam`` results in bytecode resembling "
"the following code::"
msgstr ""
"Por exemplo, a instrução ``import spam`` resulta em bytecode semelhante ao "
"seguinte código::"

#: ../../library/functions.rst:2248
msgid "spam = __import__('spam', globals(), locals(), [], 0)"
msgstr "spam = __import__('spam', globals(), locals(), [], 0)"

#: ../../library/functions.rst:2250
msgid "The statement ``import spam.ham`` results in this call::"
msgstr "A instrução ``import spam.presunto`` resulta nesta chamada::"

#: ../../library/functions.rst:2252
msgid "spam = __import__('spam.ham', globals(), locals(), [], 0)"
msgstr "spam = __import__('spam.presunto', globals(), locals(), [], 0)"

#: ../../library/functions.rst:2254
msgid ""
"Note how :func:`__import__` returns the toplevel module here because this is "
"the object that is bound to a name by the :keyword:`import` statement."
msgstr ""
"Observe como :func:`__import__` retorna o módulo de nível superior aqui, "
"porque este é o objeto vinculado a um nome pela instrução :keyword:`import`."

#: ../../library/functions.rst:2257
msgid ""
"On the other hand, the statement ``from spam.ham import eggs, sausage as "
"saus`` results in ::"
msgstr ""
"Por outro lado, a instrução ``from spam.presunto import ovos, salsicha as "
"sals`` resulta em ::"

#: ../../library/functions.rst:2260
msgid ""
"_temp = __import__('spam.ham', globals(), locals(), ['eggs', 'sausage'], 0)\n"
"eggs = _temp.eggs\n"
"saus = _temp.sausage"
msgstr ""
"_temp = __import__('spam.presunto', globals(), locals(), ['ovos', "
"'salsicha'], 0)\n"
"ovos = _temp.ovos\n"
"sals = _temp.salsicha"

#: ../../library/functions.rst:2264
msgid ""
"Here, the ``spam.ham`` module is returned from :func:`__import__`.  From "
"this object, the names to import are retrieved and assigned to their "
"respective names."
msgstr ""
"Aqui, o módulo ``spam.ham`` é retornado de :func:`__import__`. A partir "
"desse objeto, os nomes a serem importados são recuperados e atribuídos aos "
"seus respectivos nomes."

#: ../../library/functions.rst:2268
msgid ""
"If you simply want to import a module (potentially within a package) by "
"name, use :func:`importlib.import_module`."
msgstr ""
"Se você simplesmente deseja importar um módulo (potencialmente dentro de um "
"pacote) pelo nome, use :func:`importlib.import_module`."

#: ../../library/functions.rst:2271
msgid ""
"Negative values for *level* are no longer supported (which also changes the "
"default value to 0)."
msgstr ""
"Valores negativos para *level* não são mais suportados (o que também altera "
"o valor padrão para 0)."

#: ../../library/functions.rst:2275
msgid ""
"When the command line options :option:`-E` or :option:`-I` are being used, "
"the environment variable :envvar:`PYTHONCASEOK` is now ignored."
msgstr ""
"Quando as opções de linha de comando :option:`-E` ou :option:`-I` estão "
"sendo usadas, a variável de ambiente :envvar:`PYTHONCASEOK` é agora ignorada."

#: ../../library/functions.rst:2280
msgid "Footnotes"
msgstr "Notas de rodapé"

#: ../../library/functions.rst:2281
msgid ""
"Note that the parser only accepts the Unix-style end of line convention. If "
"you are reading the code from a file, make sure to use newline conversion "
"mode to convert Windows or Mac-style newlines."
msgstr ""
"Observe que o analisador sintático aceita apenas a convenção de fim de linha "
"no estilo Unix. Se você estiver lendo o código de um arquivo, use o modo de "
"conversão de nova linha para converter novas linhas no estilo Windows ou Mac."

#: ../../library/functions.rst:154
msgid "Boolean"
msgstr "Booleano"

#: ../../library/functions.rst:154 ../../library/functions.rst:2048
msgid "type"
msgstr "tipo"

#: ../../library/functions.rst:648
msgid "built-in function"
msgstr "função embutida"

#: ../../library/functions.rst:648
msgid "exec"
msgstr "exec"

#: ../../library/functions.rst:746
msgid "NaN"
msgstr "NaN"

#: ../../library/functions.rst:746
msgid "Infinity"
msgstr "Infinity"

#: ../../library/functions.rst:814
msgid "__format__"
msgstr "__format__"

#: ../../library/functions.rst:814 ../../library/functions.rst:1925
msgid "string"
msgstr "string"

#: ../../library/functions.rst:814
msgid "format() (built-in function)"
msgstr "format() (função embutida)"

#: ../../library/functions.rst:1325
msgid "file object"
msgstr "objeto arquivo"

#: ../../library/functions.rst:1325 ../../library/functions.rst:1446
msgid "open() built-in function"
msgstr "função embutida open()"

#: ../../library/functions.rst:1353
msgid "file"
msgstr "arquivo"

#: ../../library/functions.rst:1353
msgid "modes"
msgstr "modos"

#: ../../library/functions.rst:1446
msgid "universal newlines"
msgstr "novas linhas universais"

#: ../../library/functions.rst:1507
msgid "line-buffered I/O"
msgstr "E/S com buffer de linha"

#: ../../library/functions.rst:1507
msgid "unbuffered I/O"
msgstr "E/S sem buffer"

#: ../../library/functions.rst:1507
msgid "buffer size, I/O"
msgstr "buffer, tamanho, E/S"

#: ../../library/functions.rst:1507
msgid "I/O control"
msgstr "controle de E/S"

#: ../../library/functions.rst:1507
msgid "buffering"
msgstr "buffering"

#: ../../library/functions.rst:1507
msgid "text mode"
msgstr "texto, modo"

#: ../../library/functions.rst:1507 ../../library/functions.rst:2209
msgid "module"
msgstr "módulo"

#: ../../library/functions.rst:1507
msgid "sys"
msgstr "sys"

#: ../../library/functions.rst:1925
msgid "str() (built-in function)"
msgstr "str() (função embutida)"

#: ../../library/functions.rst:2048
msgid "object"
msgstr "objeto"

#: ../../library/functions.rst:2209
msgid "statement"
msgstr "instrução"

#: ../../library/functions.rst:2209
msgid "import"
msgstr "importação"

#: ../../library/functions.rst:2209
msgid "builtins"
msgstr "builtins"
