# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-09 14:19+0000\n"
"PO-Revision-Date: 2025-07-18 18:49+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/xml.sax.utils.rst:2
msgid ":mod:`!xml.sax.saxutils` --- SAX Utilities"
msgstr ":mod:`!xml.sax.saxutils` --- Utilitários de SAX"

#: ../../library/xml.sax.utils.rst:10
msgid "**Source code:** :source:`Lib/xml/sax/saxutils.py`"
msgstr "**Código-fonte:** :source:`Lib/xml/sax/saxutils.py`"

#: ../../library/xml.sax.utils.rst:14
msgid ""
"The module :mod:`xml.sax.saxutils` contains a number of classes and "
"functions that are commonly useful when creating SAX applications, either in "
"direct use, or as base classes."
msgstr ""
"O módulo :mod:`xml.sax.saxutils` contém uma série de classes e funções que "
"são comumente úteis ao criar aplicações SAX, seja em uso direto ou como "
"classes base."

#: ../../library/xml.sax.utils.rst:21
msgid "Escape ``'&'``, ``'<'``, and ``'>'`` in a string of data."
msgstr "Escapa ``'&'``, ``'<'`` e ``'>'`` em uma string de dados."

#: ../../library/xml.sax.utils.rst:23
msgid ""
"You can escape other strings of data by passing a dictionary as the optional "
"*entities* parameter.  The keys and values must all be strings; each key "
"will be replaced with its corresponding value.  The characters ``'&'``, "
"``'<'`` and ``'>'`` are always escaped, even if *entities* is provided."
msgstr ""
"Você pode escapar outras strings de dados passando um dicionário como o "
"parâmetro opcional *entities*. As chaves e os valores devem ser strings; "
"cada chave será substituída pelo seu valor correspondente. Os caracteres "
"``'&'``, ``'<'`` e ``'>'`` são sempre escapados, mesmo que *entities* seja "
"fornecido."

#: ../../library/xml.sax.utils.rst:30
msgid ""
"This function should only be used to escape characters that can't be used "
"directly in XML. Do not use this function as a general string translation "
"function."
msgstr ""
"Esta função deve ser usada apenas para escapar caracteres que não podem ser "
"usados diretamente em XML. Não a utilize como uma função geral de tradução "
"de strings."

#: ../../library/xml.sax.utils.rst:36
msgid "Unescape ``'&amp;'``, ``'&lt;'``, and ``'&gt;'`` in a string of data."
msgstr ""
"Remove escape de ``'&amp;'``, ``'&lt;'`` e ``'&gt;'`` em uma string de dados."

#: ../../library/xml.sax.utils.rst:38
msgid ""
"You can unescape other strings of data by passing a dictionary as the "
"optional *entities* parameter.  The keys and values must all be strings; "
"each key will be replaced with its corresponding value.  ``'&amp'``, "
"``'&lt;'``, and ``'&gt;'`` are always unescaped, even if *entities* is "
"provided."
msgstr ""
"Você pode remover escape de outras strings de dados passando um dicionário "
"como o parâmetro opcional *entities*. As chaves e os valores devem ser "
"strings; cada chave será substituída pelo seu valor correspondente. "
"``'&amp'``, ``'&lt;'`` e ``'&gt;'`` têm sempre o escape removido, mesmo que "
"*entities* seja fornecido."

#: ../../library/xml.sax.utils.rst:46
msgid ""
"Similar to :func:`escape`, but also prepares *data* to be used as an "
"attribute value.  The return value is a quoted version of *data* with any "
"additional required replacements. :func:`quoteattr` will select a quote "
"character based on the content of *data*, attempting to avoid encoding any "
"quote characters in the string.  If both single- and double-quote characters "
"are already in *data*, the double-quote characters will be encoded and "
"*data* will be wrapped in double-quotes.  The resulting string can be used "
"directly as an attribute value::"
msgstr ""
"Semelhante a :func:`escape`, mas também prepara *data* para ser usado como "
"um valor de atributo. O valor de retorno é uma versão entre aspas de *data* "
"com quaisquer substituições adicionais necessárias. :func:`quoteattr` "
"selecionará um caractere de aspas com base no conteúdo de *data*, tentando "
"evitar a codificação de quaisquer caracteres de aspas na string. Se já "
"houver caracteres de aspas simples e duplas em *data*, os caracteres de "
"aspas duplas serão codificados e *data* será colocado entre aspas duplas. A "
"string resultante pode ser usada diretamente como um valor de atributo:"

#: ../../library/xml.sax.utils.rst:55
msgid ""
">>> print(\"<element attr=%s>\" % quoteattr(\"ab ' cd \\\" ef\"))\n"
"<element attr=\"ab ' cd &quot; ef\">"
msgstr ""
">>> print(\"<element attr=%s>\" % quoteattr(\"ab ' cd \\\" ef\"))\n"
"<element attr=\"ab ' cd &quot; ef\">"

#: ../../library/xml.sax.utils.rst:58
msgid ""
"This function is useful when generating attribute values for HTML or any "
"SGML using the reference concrete syntax."
msgstr ""
"Esta função é útil ao gerar valores de atributos para HTML ou qualquer SGML "
"usando a sintaxe concreta de referência."

#: ../../library/xml.sax.utils.rst:64
msgid ""
"This class implements the :class:`~xml.sax.handler.ContentHandler` interface "
"by writing SAX events back into an XML document. In other words, using an :"
"class:`XMLGenerator` as the content handler will reproduce the original "
"document being parsed. *out* should be a file-like object which will default "
"to *sys.stdout*. *encoding* is the encoding of the output stream which "
"defaults to ``'iso-8859-1'``. *short_empty_elements* controls the formatting "
"of elements that contain no content:  if ``False`` (the default) they are "
"emitted as a pair of start/end tags, if set to ``True`` they are emitted as "
"a single self-closed tag."
msgstr ""
"Esta classe implementa a interface :class:`~xml.sax.handler.ContentHandler` "
"escrevendo eventos SAX de volta em um documento XML. Em outras palavras, "
"usar um :class:`XMLGenerator` como manipulador de conteúdo reproduzirá o "
"documento original que está sendo analisado. *out* deve ser um objeto "
"arquivo ou similar, cujo padrão é *sys.stdout*. *encoding* é a codificação "
"do fluxo de saída, cujo padrão é ``'iso-8859-1'``. *short_empty_elements* "
"controla a formatação de elementos sem conteúdo: se ``False`` (o padrão), "
"eles são emitidos como um par de tags de início/fim; se definido como "
"``True``, eles são emitidos como uma única tag autofechada."

#: ../../library/xml.sax.utils.rst:74
msgid "Added the *short_empty_elements* parameter."
msgstr "Foi adicionado o parâmetro *short_empty_elements*."

#: ../../library/xml.sax.utils.rst:80
msgid ""
"This class is designed to sit between an :class:`~xml.sax.xmlreader."
"XMLReader` and the client application's event handlers.  By default, it does "
"nothing but pass requests up to the reader and events on to the handlers "
"unmodified, but subclasses can override specific methods to modify the event "
"stream or the configuration requests as they pass through."
msgstr ""
"Esta classe foi projetada para ficar entre um :class:`~xml.sax.xmlreader."
"XMLReader` e os manipuladores de eventos da aplicação cliente. Por padrão, "
"ela não faz nada além de passar requisições para o leitor e eventos para os "
"manipuladores sem modificações, mas subclasses podem substituir métodos "
"específicos para modificar o fluxo de eventos ou as requisições de "
"configuração à medida que passam."

#: ../../library/xml.sax.utils.rst:90
msgid ""
"This function takes an input source and an optional base URL and returns a "
"fully resolved :class:`~xml.sax.xmlreader.InputSource` object ready for "
"reading.  The input source can be given as a string, a file-like object, or "
"an :class:`~xml.sax.xmlreader.InputSource` object; parsers will use this "
"function to implement the polymorphic *source* argument to their :meth:`~xml."
"sax.xmlreader.XMLReader.parse` method."
msgstr ""
"Esta função recebe uma fonte de entrada e uma URL base opcional e retorna um "
"objeto :class:`~xml.sax.xmlreader.InputSource` totalmente resolvido, pronto "
"para leitura. A fonte de entrada pode ser fornecida como uma string, um "
"objeto arquivo ou similar ou um objeto :class:`~xml.sax.xmlreader."
"InputSource`; os analisadores usarão esta função para implementar o "
"argumento polimórfico *source* em seu método :meth:`~xml.sax.xmlreader."
"XMLReader.parse`."
