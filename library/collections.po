# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-23 16:12+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/collections.rst:2
msgid ":mod:`collections` --- Container datatypes"
msgstr ":mod:`collections` --- Tipos de dados de contêineres"

#: ../../library/collections.rst:10
msgid "**Source code:** :source:`Lib/collections/__init__.py`"
msgstr "**Código-fonte:** :source:`Lib/collections/__init__.py`"

#: ../../library/collections.rst:20
msgid ""
"This module implements specialized container datatypes providing "
"alternatives to Python's general purpose built-in containers, :class:"
"`dict`, :class:`list`, :class:`set`, and :class:`tuple`."
msgstr ""
"Este módulo implementa tipos de dados de contêineres especializados que "
"fornecem alternativas aos contêineres embutidos do Python, :class:`dict`, :"
"class:`list`, :class:`set` e :class:`tuple`."

#: ../../library/collections.rst:25
msgid ":func:`namedtuple`"
msgstr ":func:`namedtuple`"

#: ../../library/collections.rst:25
msgid "factory function for creating tuple subclasses with named fields"
msgstr ""
"função fábrica (*factory function*) para criar subclasses de tuplas com "
"campos nomeados"

#: ../../library/collections.rst:26
msgid ":class:`deque`"
msgstr ":class:`deque`"

#: ../../library/collections.rst:26
msgid "list-like container with fast appends and pops on either end"
msgstr ""
"contêiner lista ou similar com acréscimos e retiradas rápidas nas duas "
"extremidades"

#: ../../library/collections.rst:27
msgid ":class:`ChainMap`"
msgstr ":class:`ChainMap`"

#: ../../library/collections.rst:27
msgid "dict-like class for creating a single view of multiple mappings"
msgstr ""
"classe dict ou similar para criar uma visão única de vários mapeamentos"

#: ../../library/collections.rst:28
msgid ":class:`Counter`"
msgstr ":class:`Counter`"

#: ../../library/collections.rst:28
msgid "dict subclass for counting :term:`hashable` objects"
msgstr "subclasse de dict para contar objetos :term:`hasheáveis <hasheável>`"

#: ../../library/collections.rst:29
msgid ":class:`OrderedDict`"
msgstr ":class:`OrderedDict`"

#: ../../library/collections.rst:29
msgid "dict subclass that remembers the order entries were added"
msgstr "subclasse de dict que lembra a ordem que as entradas foram adicionadas"

#: ../../library/collections.rst:30
msgid ":class:`defaultdict`"
msgstr ":class:`defaultdict`"

#: ../../library/collections.rst:30
msgid "dict subclass that calls a factory function to supply missing values"
msgstr ""
"subclasse de dict que chama uma função fábrica para fornecer valores não "
"encontrados"

#: ../../library/collections.rst:31
msgid ":class:`UserDict`"
msgstr ":class:`UserDict`"

#: ../../library/collections.rst:31
msgid "wrapper around dictionary objects for easier dict subclassing"
msgstr ""
"invólucro em torno de objetos dicionário para facilitar fazer subclasse de "
"dict"

#: ../../library/collections.rst:32
msgid ":class:`UserList`"
msgstr ":class:`UserList`"

#: ../../library/collections.rst:32
msgid "wrapper around list objects for easier list subclassing"
msgstr ""
"invólucro em torno de objetos lista para facilitar criação de subclasse de "
"lista"

#: ../../library/collections.rst:33
msgid ":class:`UserString`"
msgstr ":class:`UserString`"

#: ../../library/collections.rst:33
msgid "wrapper around string objects for easier string subclassing"
msgstr ""
"invólucro em torno de objetos string para uma facilitar criação de subclasse "
"de string"

#: ../../library/collections.rst:38
msgid ":class:`ChainMap` objects"
msgstr "Objetos :class:`ChainMap`"

#: ../../library/collections.rst:42
msgid ""
"A :class:`ChainMap` class is provided for quickly linking a number of "
"mappings so they can be treated as a single unit.  It is often much faster "
"than creating a new dictionary and running multiple :meth:`~dict.update` "
"calls."
msgstr ""
"Uma classe :class:`ChainMap` é fornecida para ligar rapidamente uma série de "
"mapeamentos de forma que possam ser tratados como um só. O que é "
"frequentemente mais rápido do que criar um novo dicionário e executar "
"múltiplas chamadas de :meth:`~dict.update`."

#: ../../library/collections.rst:46
msgid ""
"The class can be used to simulate nested scopes and is useful in templating."
msgstr ""
"A classe pode ser usada para simular escopos aninhados e é útil em modelos."

#: ../../library/collections.rst:50
msgid ""
"A :class:`ChainMap` groups multiple dicts or other mappings together to "
"create a single, updateable view.  If no *maps* are specified, a single "
"empty dictionary is provided so that a new chain always has at least one "
"mapping."
msgstr ""
":class:`ChainMap` agrupa múltiplos dicts ou outros mapeamentos para criar "
"uma única vista atualizável. Se nenhum *maps* for especificado, um "
"dicionário vazio será fornecido para que uma nova cadeia tenha sempre pelo "
"menos um mapeamento."

#: ../../library/collections.rst:54
msgid ""
"The underlying mappings are stored in a list.  That list is public and can "
"be accessed or updated using the *maps* attribute.  There is no other state."
msgstr ""
"Os mapeamentos subjacentes são armazenados em uma lista. Essa lista é "
"pública e pode ser acessada ou atualizada usando o atributo *maps*. Não "
"existe outro estado."

#: ../../library/collections.rst:57
msgid ""
"Lookups search the underlying mappings successively until a key is found.  "
"In contrast, writes, updates, and deletions only operate on the first "
"mapping."
msgstr ""
"Faz uma busca nos mapeamentos subjacentes sucessivamente até que uma chave "
"seja encontrada. Em contraste, escrita, atualizações e remoções operam "
"apenas no primeiro mapeamento."

#: ../../library/collections.rst:60
msgid ""
"A :class:`ChainMap` incorporates the underlying mappings by reference.  So, "
"if one of the underlying mappings gets updated, those changes will be "
"reflected in :class:`ChainMap`."
msgstr ""
"Uma :class:`ChainMap` incorpora os mapeamentos subjacentes por referência. "
"Então, se um dos mapeamentos subjacentes for atualizado, essas alterações "
"serão refletidas na :class:`ChainMap`."

#: ../../library/collections.rst:64
msgid ""
"All of the usual dictionary methods are supported.  In addition, there is a "
"*maps* attribute, a method for creating new subcontexts, and a property for "
"accessing all but the first mapping:"
msgstr ""
"Todos os métodos usuais do dicionário são suportados. Além disso, existe um "
"atributo *maps*, um método para criar novos subcontextos e uma propriedade "
"para acessar todos, exceto o primeiro mapeamento:"

#: ../../library/collections.rst:70
msgid ""
"A user updateable list of mappings.  The list is ordered from first-searched "
"to last-searched.  It is the only stored state and can be modified to change "
"which mappings are searched.  The list should always contain at least one "
"mapping."
msgstr ""
"Uma lista de mapeamentos atualizáveis ​​pelo usuário. A lista é ordenada desde "
"o primeiro pesquisado até a última pesquisado. É o único estado armazenado e "
"pode ser modificado para alterar quais mapeamentos são pesquisados. A lista "
"deve sempre conter pelo menos um mapeamento."

#: ../../library/collections.rst:77
msgid ""
"Returns a new :class:`ChainMap` containing a new map followed by all of the "
"maps in the current instance.  If ``m`` is specified, it becomes the new map "
"at the front of the list of mappings; if not specified, an empty dict is "
"used, so that a call to ``d.new_child()`` is equivalent to: ``ChainMap({}, "
"*d.maps)``. If any keyword arguments are specified, they update passed map "
"or new empty dict. This method is used for creating subcontexts that can be "
"updated without altering values in any of the parent mappings."
msgstr ""
"Retorna uma nova :class:`ChainMap` contendo um novo mapa seguido de todos os "
"mapas na instância atual. Se ``m`` for especificado, torna-se o novo mapa na "
"frente da lista de mapeamentos; Se não especificado, é usado um dicionário "
"vazio, de modo que chamar ``d.new_child()`` é equivalente a: ``ChainMap({}, "
"*d.maps)``. Se algum argumento nomeado for especificado, ele atualizará o "
"mapa passado ou o novo dicionário vazio. Esse método é usado para criar "
"subcontextos que podem ser atualizados sem alterar valores em nenhum dos "
"mapeamentos pai."

#: ../../library/collections.rst:86
msgid "The optional ``m`` parameter was added."
msgstr "O parâmetro opcional ``m`` foi adicionado."

#: ../../library/collections.rst:89
msgid "Keyword arguments support was added."
msgstr "Suporte a argumentos nomeados foi adicionado."

#: ../../library/collections.rst:94
msgid ""
"Property returning a new :class:`ChainMap` containing all of the maps in the "
"current instance except the first one.  This is useful for skipping the "
"first map in the search.  Use cases are similar to those for the :keyword:"
"`nonlocal` keyword used in :term:`nested scopes <nested scope>`.  The use "
"cases also parallel those for the built-in :func:`super` function.  A "
"reference to ``d.parents`` is equivalent to: ``ChainMap(*d.maps[1:])``."
msgstr ""
"Propriedade que retorna um novo :class:`ChainMap` contendo todos os mapas da "
"instância atual, exceto o primeiro. Isso é útil para pular o primeiro mapa "
"da pesquisa. Os casos de uso são semelhantes aos do argumento nomeado :"
"keyword:`nonlocal` usada em :term:`escopos aninhados <nested scope>`. Os "
"casos de uso também são paralelos aos da função embutida :func:`super`. Uma "
"referência a ``d.parents`` é equivalente a: ``ChainMap(*d.maps[1:])``."

#: ../../library/collections.rst:102
msgid ""
"Note, the iteration order of a :class:`ChainMap()` is determined by scanning "
"the mappings last to first::"
msgstr ""
"Observe, a ordem de iteração de um :class:`ChainMap()` é determinada pela "
"varredura dos mapeamentos do último ao primeiro::"

#: ../../library/collections.rst:110
msgid ""
"This gives the same ordering as a series of :meth:`dict.update` calls "
"starting with the last mapping::"
msgstr ""
"Isso dá a mesma ordem de uma série de chamadas de :meth:`dict.update` "
"começando com o último mapeamento::"

#: ../../library/collections.rst:118
msgid "Added support for ``|`` and ``|=`` operators, specified in :pep:`584`."
msgstr ""
"Adicionado suporte para os operadores ``|`` e ``|=``, especificados na :pep:"
"`584`."

#: ../../library/collections.rst:123
msgid ""
"The `MultiContext class <https://github.com/enthought/codetools/blob/4.0.0/"
"codetools/contexts/multi_context.py>`_ in the Enthought `CodeTools package "
"<https://github.com/enthought/codetools>`_ has options to support writing to "
"any mapping in the chain."
msgstr ""
"A `classe MultiContext <https://github.com/enthought/codetools/blob/4.0.0/"
"codetools/contexts/multi_context.py>`_ no `pacote CodeTools <https://github."
"com/enthought/codetools>`_ de Enthought tem opções para oferecer suporte à "
"escrita em qualquer mapeamento na cadeia."

#: ../../library/collections.rst:129
msgid ""
"Django's `Context class <https://github.com/django/django/blob/main/django/"
"template/context.py>`_ for templating is a read-only chain of mappings.  It "
"also features pushing and popping of contexts similar to the :meth:"
"`~collections.ChainMap.new_child` method and the :attr:`~collections."
"ChainMap.parents` property."
msgstr ""
"A `classe Context <https://github.com/django/django/blob/main/django/"
"template/context.py>`_ do Django para modelos é uma cadeia de mapeamentos "
"somente leitura. Ela também oferece o recurso de push e pop (inserir e "
"retirar) contextos semelhantes ao método :meth:`~Collections.ChainMap."
"new_child` e a propriedade :attr:`~Collections.ChainMap.parents`."

#: ../../library/collections.rst:136
msgid ""
"The `Nested Contexts recipe <https://code.activestate.com/recipes/577434/>`_ "
"has options to control whether writes and other mutations apply only to the "
"first mapping or to any mapping in the chain."
msgstr ""
"A `receita de Contextos Aninhados <https://code.activestate.com/"
"recipes/577434/>`_ possui opções para controlar se escritas e outras "
"mutações se aplicam a apenas o primeiro mapeamento ou para qualquer "
"mapeamento na cadeia."

#: ../../library/collections.rst:141
msgid ""
"A `greatly simplified read-only version of Chainmap <https://code."
"activestate.com/recipes/305268/>`_."
msgstr ""
"Uma `versão muito simplificada somente leitura do Chainmap <https://code."
"activestate.com/recipes/305268/>`_."

#: ../../library/collections.rst:146
msgid ":class:`ChainMap` Examples and Recipes"
msgstr "Exemplos e Receitas de :class:`ChainMap`"

#: ../../library/collections.rst:148
msgid "This section shows various approaches to working with chained maps."
msgstr ""
"Esta seção mostra várias abordagens para trabalhar com mapas encadeados."

#: ../../library/collections.rst:151
msgid "Example of simulating Python's internal lookup chain::"
msgstr "Exemplo de simulação da cadeia de busca interna do Python::"

#: ../../library/collections.rst:156
msgid ""
"Example of letting user specified command-line arguments take precedence "
"over environment variables which in turn take precedence over default "
"values::"
msgstr ""
"Exemplo de como permitir que os argumentos de linha de comando especificados "
"pelo usuário tenham precedência sobre as variáveis de ambiente que, por sua "
"vez, têm precedência sobre os valores padrão::"

#: ../../library/collections.rst:173
msgid ""
"Example patterns for using the :class:`ChainMap` class to simulate nested "
"contexts::"
msgstr ""
"Padrões de exemplo para utilização da classe :class:`ChainMap` para simular "
"contextos aninhados::"

#: ../../library/collections.rst:192
msgid ""
"The :class:`ChainMap` class only makes updates (writes and deletions) to the "
"first mapping in the chain while lookups will search the full chain.  "
"However, if deep writes and deletions are desired, it is easy to make a "
"subclass that updates keys found deeper in the chain::"
msgstr ""
"A classe :class:`ChainMap` só faz atualizações (escritas e remoções) no "
"primeiro mapeamento na cadeia, enquanto as pesquisas irão buscar em toda a "
"cadeia. Contudo, se há o desejo de escritas e remoções profundas, é fácil "
"fazer uma  subclasse que atualiza chaves encontradas mais a fundo na cadeia::"

#: ../../library/collections.rst:223
msgid ":class:`Counter` objects"
msgstr "Objetos :class:`Counter`"

#: ../../library/collections.rst:225
msgid ""
"A counter tool is provided to support convenient and rapid tallies. For "
"example::"
msgstr ""
"Uma ferramenta de contagem é fornecida para apoiar contas rápidas e "
"convenientes. Por exemplo::"

#: ../../library/collections.rst:244
msgid ""
"A :class:`Counter` is a :class:`dict` subclass for counting :term:`hashable` "
"objects. It is a collection where elements are stored as dictionary keys and "
"their counts are stored as dictionary values.  Counts are allowed to be any "
"integer value including zero or negative counts.  The :class:`Counter` class "
"is similar to bags or multisets in other languages."
msgstr ""
"Um :class:`Counter` é uma subclasse de :class:`dict` subclass para contagem "
"de objetos :term:`hasheáveis <hasheável>`. É uma coleção na qual elementos "
"são armazenados como chaves de dicionário e suas contagens são armazenadas "
"como valores de dicionário.  Contagens podem ser qualquer valor inteiro "
"incluindo zero e contagens negativas.  A classe :class:`Counter` é similar a "
"sacos ou multiconjuntos em outras linguagens."

#: ../../library/collections.rst:250
msgid ""
"Elements are counted from an *iterable* or initialized from another "
"*mapping* (or counter):"
msgstr ""
"Os elementos são contados a partir de um iterável *iterable* ou inicializado "
"a partir de um outro mapeamento *mapping* (ou contador):"

#: ../../library/collections.rst:258
msgid ""
"Counter objects have a dictionary interface except that they return a zero "
"count for missing items instead of raising a :exc:`KeyError`:"
msgstr ""
"Objetos Counter tem uma interface de dicionário, com a diferença que "
"devolvem uma contagem zero para itens que não estão presentes em vez de "
"levantar a exceção :exc:`KeyError`:"

#: ../../library/collections.rst:265
msgid ""
"Setting a count to zero does not remove an element from a counter. Use "
"``del`` to remove it entirely:"
msgstr ""
"Definir uma contagem como zero não remove um elemento do contador. Use "
"``del`` para o remover completamente."

#: ../../library/collections.rst:273
msgid ""
"As a :class:`dict` subclass, :class:`Counter` inherited the capability to "
"remember insertion order.  Math operations on *Counter* objects also "
"preserve order.  Results are ordered according to when an element is first "
"encountered in the left operand and then by the order encountered in the "
"right operand."
msgstr ""
"Como uma subclasse de :class:`dict`, :class:`Counter` herda a capacidade de "
"lembrar a ordem de inserção. Operações matemáticas em objetos *Counter* "
"também preservam ordem. Os resultados são ordenados de acordo com o momento "
"que um elemento é encontrado pela primeira vez no operando da esquerda e, em "
"seguida, pela ordem encontrada no operando da direita."

#: ../../library/collections.rst:279
msgid ""
"Counter objects support additional methods beyond those available for all "
"dictionaries:"
msgstr ""
"Objetos Counter têm suporte a métodos adicionais além daqueles que já estão "
"disponíveis para todos os dicionários:"

#: ../../library/collections.rst:284
msgid ""
"Return an iterator over elements repeating each as many times as its count.  "
"Elements are returned in the order first encountered. If an element's count "
"is less than one, :meth:`elements` will ignore it."
msgstr ""
"Retorna um iterador sobre os elementos, repetindo cada um tantas vezes "
"quanto sua contagem. Os elementos são retornados na ordem em que foram "
"encontrados pela primeira vez. Se a contagem de um elemento é menor que um, "
"ele será ignorado por :meth:`elements` ."

#: ../../library/collections.rst:294
msgid ""
"Return a list of the *n* most common elements and their counts from the most "
"common to the least.  If *n* is omitted or ``None``, :meth:`most_common` "
"returns *all* elements in the counter. Elements with equal counts are "
"ordered in the order first encountered:"
msgstr ""
"Retorna uma lista dos *n* elementos mais comuns e suas contagens, do mais "
"comum para o menos comum.  Se *n* for omitido ou igual a ``None``, :meth:"
"`most_common` retorna *todos* os elementos no contador. Elementos com "
"contagens iguais são ordenados na ordem em que foram encontrados pela "
"primeira vez:"

#: ../../library/collections.rst:304
msgid ""
"Elements are subtracted from an *iterable* or from another *mapping* (or "
"counter).  Like :meth:`dict.update` but subtracts counts instead of "
"replacing them.  Both inputs and outputs may be zero or negative."
msgstr ""
"Os elementos são subtraídos de um iterável *iterable* ou de outro mapeamento "
"*mapping* (ou contador).  Funciona como :meth:`dict.update`, mas subtraindo "
"contagens ao invés de substituí-las.  Tanto as entradas quanto as saídas "
"podem ser zero ou negativas."

#: ../../library/collections.rst:318
msgid "Compute the sum of the counts."
msgstr "Calcula a soma das contagens."

#: ../../library/collections.rst:326
msgid ""
"The usual dictionary methods are available for :class:`Counter` objects "
"except for two which work differently for counters."
msgstr ""
"Os métodos usuais de dicionário estão disponíveis para objetos :class:"
"`Counter`, exceto por dois que funcionam de forma diferente para contadores."

#: ../../library/collections.rst:331
msgid "This class method is not implemented for :class:`Counter` objects."
msgstr ""
"Este método de classe não está implementado para objetos :class:`Counter`."

#: ../../library/collections.rst:335
msgid ""
"Elements are counted from an *iterable* or added-in from another *mapping* "
"(or counter).  Like :meth:`dict.update` but adds counts instead of replacing "
"them.  Also, the *iterable* is expected to be a sequence of elements, not a "
"sequence of ``(key, value)`` pairs."
msgstr ""
"Elementos são contados a partir de um iterável *iterable* ou adicionados de "
"outro mapeamento *mapping* (ou contador). Funciona como :meth:`dict.update`, "
"mas adiciona contagens em vez de substituí-las. Além disso, é esperado que o "
"*iterable* seja uma sequência de elementos, e não uma sequência de pares "
"``(key, value)``."

#: ../../library/collections.rst:340
msgid ""
"Counters support rich comparison operators for equality, subset, and "
"superset relationships: ``==``, ``!=``, ``<``, ``<=``, ``>``, ``>=``. All of "
"those tests treat missing elements as having zero counts so that "
"``Counter(a=1) == Counter(a=1, b=0)`` returns true."
msgstr ""
"Os contadores oferecem suporte a operadores de comparação rica para "
"relacionamentos de igualdade, subconjunto e superconjunto: ``==``, ``!=``, "
"``<``, ``<=``, ``>``, ``>=``. Todos esses testes tratam os elementos "
"ausentes como tendo contagens zero para que ``Counter(a=1) == Counter(a=1, "
"b=0)`` retorne verdadeiro."

#: ../../library/collections.rst:345
msgid "Rich comparison operations were added."
msgstr "Foram adicionadas operações de rica comparação."

#: ../../library/collections.rst:348
msgid ""
"In equality tests, missing elements are treated as having zero counts. "
"Formerly, ``Counter(a=3)`` and ``Counter(a=3, b=0)`` were considered "
"distinct."
msgstr ""
"Em testes de igualdade, os elementos ausentes são tratados como tendo "
"contagens zero. Anteriormente, ``Counter(a=3)`` e ``Counter(a=3, b=0)`` eram "
"considerados distintos."

#: ../../library/collections.rst:353
msgid "Common patterns for working with :class:`Counter` objects::"
msgstr "Padrões comuns para trabalhar com objetos :class:`Counter`::"

#: ../../library/collections.rst:365
msgid ""
"Several mathematical operations are provided for combining :class:`Counter` "
"objects to produce multisets (counters that have counts greater than zero). "
"Addition and subtraction combine counters by adding or subtracting the "
"counts of corresponding elements.  Intersection and union return the minimum "
"and maximum of corresponding counts.  Equality and inclusion compare "
"corresponding counts.  Each operation can accept inputs with signed counts, "
"but the output will exclude results with counts of zero or less."
msgstr ""
"Diversas operações matemáticas são fornecidas combinando objetos do tipo :"
"class:`Counter` afim de se produzir multiconjuntos (Counters que possuem "
"contagens maiores que 0). Adição e subtração combinam contadores adicionando "
"ou subtraindo o contagem do elemento correspondente. Intersecção ou união "
"retorna o mínimo e máximo da contagem correspondente. Igualdade e inclusão "
"compara as contagens correspondentes. Cada operação aceita entradas com "
"contagens assinadas, mas a saída vai excluir resultados com contagens de "
"zero ou menos."

#: ../../library/collections.rst:390
msgid ""
"Unary addition and subtraction are shortcuts for adding an empty counter or "
"subtracting from an empty counter."
msgstr ""
"A adição e subtração unárias são atalhos para adicionar um contador vazio ou "
"subtrair de um contador vazio."

#: ../../library/collections.rst:399
msgid ""
"Added support for unary plus, unary minus, and in-place multiset operations."
msgstr ""
"Adicionado suporte para operador unário mais, unário menos e operações *in-"
"place* em multiconjuntos."

#: ../../library/collections.rst:404
msgid ""
"Counters were primarily designed to work with positive integers to represent "
"running counts; however, care was taken to not unnecessarily preclude use "
"cases needing other types or negative values.  To help with those use cases, "
"this section documents the minimum range and type restrictions."
msgstr ""
"Os contadores foram projetados principalmente para funcionar com números "
"inteiros positivos para representar contagens contínuas; no entanto, foi "
"tomado cuidado para não impedir desnecessariamente os casos de uso que "
"precisassem de outros tipos ou valores negativos.  Para ajudar nesses casos "
"de uso, esta seção documenta o intervalo mínimo e as restrições de tipo."

#: ../../library/collections.rst:409
msgid ""
"The :class:`Counter` class itself is a dictionary subclass with no "
"restrictions on its keys and values.  The values are intended to be numbers "
"representing counts, but you *could* store anything in the value field."
msgstr ""
"A própria classe :class:`Counter` é uma subclasse de dicionário sem "
"restrições em suas chaves e valores. Os valores pretendem ser números que "
"representam contagens, mas você *pode* armazenar qualquer coisa no campo de "
"valor."

#: ../../library/collections.rst:413
msgid ""
"The :meth:`~Counter.most_common` method requires only that the values be "
"orderable."
msgstr ""
"O método :meth:`~Counter.most_common` requer apenas que os valores sejam "
"ordenáveis."

#: ../../library/collections.rst:415
msgid ""
"For in-place operations such as ``c[key] += 1``, the value type need only "
"support addition and subtraction.  So fractions, floats, and decimals would "
"work and negative values are supported.  The same is also true for :meth:"
"`~Counter.update` and :meth:`~Counter.subtract` which allow negative and "
"zero values for both inputs and outputs."
msgstr ""
"Para operações in-place, como ``c[key] += 1``, o tipo de valor precisa "
"oferecer suporte a apenas adição e subtração. Portanto, frações, números de "
"ponto flutuante e decimais funcionariam e os valores negativos são "
"suportados. O mesmo também é verdadeiro para :meth:`~Counter.update` e :meth:"
"`~Counter.subtract` que permitem valores negativos e zero para entradas e "
"saídas."

#: ../../library/collections.rst:421
msgid ""
"The multiset methods are designed only for use cases with positive values. "
"The inputs may be negative or zero, but only outputs with positive values "
"are created.  There are no type restrictions, but the value type needs to "
"support addition, subtraction, and comparison."
msgstr ""
"Os métodos de multiconjuntos são projetados apenas para casos de uso com "
"valores positivos. As entradas podem ser negativas ou zero, mas apenas "
"saídas com valores positivos são criadas. Não há restrições de tipo, mas o "
"tipo de valor precisa suportar adição, subtração e comparação."

#: ../../library/collections.rst:426
msgid ""
"The :meth:`~Counter.elements` method requires integer counts.  It ignores "
"zero and negative counts."
msgstr ""
"O método :meth:`~Counter.elements` requer contagens de inteiros. Ele ignora "
"contagens zero e negativas."

#: ../../library/collections.rst:431
msgid ""
"`Bag class <https://www.gnu.org/software/smalltalk/manual-base/html_node/Bag."
"html>`_ in Smalltalk."
msgstr ""
"`Classe Bag <https://www.gnu.org/software/smalltalk/manual-base/html_node/"
"Bag.html>`_ do Smalltalk."

#: ../../library/collections.rst:434
msgid ""
"Wikipedia entry for `Multisets <https://en.wikipedia.org/wiki/Multiset>`_."
msgstr ""
"Entrada da Wikipédia para `Multiconjuntos <https://pt.wikipedia.org/wiki/"
"Multiconjunto>`_."

#: ../../library/collections.rst:436
msgid ""
"`C++ multisets <http://www.java2s.com/Tutorial/Cpp/0380__set-multiset/"
"Catalog0380__set-multiset.htm>`_ tutorial with examples."
msgstr ""
"Tutorial com exemplos de `multiconjuntos no C++ <http://www.java2s.com/"
"Tutorial/Cpp/0380__set-multiset/Catalog0380__set-multiset.htm>`_."

#: ../../library/collections.rst:439
msgid ""
"For mathematical operations on multisets and their use cases, see *Knuth, "
"Donald. The Art of Computer Programming Volume II, Section 4.6.3, Exercise "
"19*."
msgstr ""
"Para operações matemáticas em multiconjuntos e seus casos de uso, consulte "
"*Knuth, Donald. The Art of Computer Programming Volume II, Seção 4.6.3, "
"Exercício 19*."

#: ../../library/collections.rst:443
msgid ""
"To enumerate all distinct multisets of a given size over a given set of "
"elements, see :func:`itertools.combinations_with_replacement`::"
msgstr ""
"Para enumerar todos os multiconjuntos distintos de um determinado tamanho em "
"um determinado conjunto de elementos, consulte :func:`itertools."
"combinations_with_replacement`::"

#: ../../library/collections.rst:450
msgid ":class:`deque` objects"
msgstr "Objetos :class:`deque`"

#: ../../library/collections.rst:454
msgid ""
"Returns a new deque object initialized left-to-right (using :meth:`append`) "
"with data from *iterable*.  If *iterable* is not specified, the new deque is "
"empty."
msgstr ""
"Retorna um novo objeto deque inicializado da esquerda para a direita "
"(usando :meth:`append`) com dados do iterável *iterable*. Se *iterable* não "
"for especificado, o novo deque estará vazio."

#: ../../library/collections.rst:457
msgid ""
"Deques are a generalization of stacks and queues (the name is pronounced "
"\"deck\" and is short for \"double-ended queue\").  Deques support thread-"
"safe, memory efficient appends and pops from either side of the deque with "
"approximately the same O(1) performance in either direction."
msgstr ""
"Deques são uma generalização de pilhas e filas (o nome é pronunciado "
"\"deck\" e é abreviação de \"double-ended queue\", e conhecida como \"fila "
"duplamente terminada\" em português). O Deques oferece suporte para "
"acréscimos e retiradas seguros para thread e eficientes em uso memória de "
"ambos os lados do deque com aproximadamente o mesmo desempenho O(1) em "
"qualquer direção."

#: ../../library/collections.rst:462
msgid ""
"Though :class:`list` objects support similar operations, they are optimized "
"for fast fixed-length operations and incur O(n) memory movement costs for "
"``pop(0)`` and ``insert(0, v)`` operations which change both the size and "
"position of the underlying data representation."
msgstr ""
"Embora os objetos :class:`list` ofereçam suporte a operações semelhantes, "
"eles são otimizados para operações rápidas de comprimento fixo e sujeitam em "
"custos de movimentação de memória O(n) para as operações ``pop(0)`` e "
"``insert(0, v)`` que alteram o tamanho e a posição da representação de dados "
"subjacente."

#: ../../library/collections.rst:468
msgid ""
"If *maxlen* is not specified or is ``None``, deques may grow to an arbitrary "
"length.  Otherwise, the deque is bounded to the specified maximum length.  "
"Once a bounded length deque is full, when new items are added, a "
"corresponding number of items are discarded from the opposite end.  Bounded "
"length deques provide functionality similar to the ``tail`` filter in Unix. "
"They are also useful for tracking transactions and other pools of data where "
"only the most recent activity is of interest."
msgstr ""
"Se *maxlen* não for especificado ou for ``None``, deques podem crescer para "
"um comprimento arbitrário. Caso contrário, o deque é limitado ao comprimento "
"máximo especificado. Quando um deque de comprimento limitado está cheio, "
"quando novos itens são adicionados, um número correspondente de itens é "
"descartado da extremidade oposta. Deques de comprimento limitado fornecem "
"funcionalidade semelhante ao filtro ``tail`` no Unix. Eles também são úteis "
"para rastrear transações e outras pools de dados onde apenas a atividade "
"mais recente é de interesse."

#: ../../library/collections.rst:477
msgid "Deque objects support the following methods:"
msgstr "Os objetos Deque oferecem suporte aos seguintes métodos:"

#: ../../library/collections.rst:481
msgid "Add *x* to the right side of the deque."
msgstr "Adiciona *x* ao lado direito do deque."

#: ../../library/collections.rst:486
msgid "Add *x* to the left side of the deque."
msgstr "Adiciona *x* ao lado esquerdo do deque"

#: ../../library/collections.rst:491
msgid "Remove all elements from the deque leaving it with length 0."
msgstr "Remove todos os elementos do deque deixando-o com comprimento 0."

#: ../../library/collections.rst:496
msgid "Create a shallow copy of the deque."
msgstr "Cria uma cópia rasa do deque."

#: ../../library/collections.rst:503
msgid "Count the number of deque elements equal to *x*."
msgstr "Conta o número de elementos deque igual a *x*."

#: ../../library/collections.rst:510
msgid ""
"Extend the right side of the deque by appending elements from the iterable "
"argument."
msgstr ""
"Estende o lado direito do deque anexando elementos do argumento iterável."

#: ../../library/collections.rst:516
msgid ""
"Extend the left side of the deque by appending elements from *iterable*. "
"Note, the series of left appends results in reversing the order of elements "
"in the iterable argument."
msgstr ""
"Estende o lado esquerdo do deque anexando elementos de *iterable*. Observe "
"que a série de acréscimos à esquerda resulta na reversão da ordem dos "
"elementos no argumento iterável."

#: ../../library/collections.rst:523
msgid ""
"Return the position of *x* in the deque (at or after index *start* and "
"before index *stop*).  Returns the first match or raises :exc:`ValueError` "
"if not found."
msgstr ""
"Retorna a posição de *x* no deque (no ou após o índice *start* e antes do "
"índice *stop*). Retorna a primeira correspondência ou levanta :exc:"
"`ValueError` se não for encontrado."

#: ../../library/collections.rst:532
msgid "Insert *x* into the deque at position *i*."
msgstr "Insere *x* no deque na posição *i*."

#: ../../library/collections.rst:534
msgid ""
"If the insertion would cause a bounded deque to grow beyond *maxlen*, an :"
"exc:`IndexError` is raised."
msgstr ""
"Se a inserção fizer com que um deque limitado cresça além de *maxlen*, uma :"
"exc:`IndexError` é levantada."

#: ../../library/collections.rst:542
msgid ""
"Remove and return an element from the right side of the deque. If no "
"elements are present, raises an :exc:`IndexError`."
msgstr ""
"Remove e devolve um elemento do lado direito do deque. Se nenhum elemento "
"estiver presente, levanta um :exc:`IndexError`."

#: ../../library/collections.rst:548
msgid ""
"Remove and return an element from the left side of the deque. If no elements "
"are present, raises an :exc:`IndexError`."
msgstr ""
"Remove e devolve um elemento do lado esquerdo do deque. Se nenhum elemento "
"estiver presente, levanta um :exc:`IndexError`."

#: ../../library/collections.rst:554
msgid ""
"Remove the first occurrence of *value*.  If not found, raises a :exc:"
"`ValueError`."
msgstr ""
"Remove a primeira ocorrência de *value*. Se não for encontrado, levanta um :"
"exc:`ValueError`."

#: ../../library/collections.rst:560
msgid "Reverse the elements of the deque in-place and then return ``None``."
msgstr ""
"Inverte os elementos do deque no local e, em seguida, retorna ``None``."

#: ../../library/collections.rst:567
msgid ""
"Rotate the deque *n* steps to the right.  If *n* is negative, rotate to the "
"left."
msgstr ""
"Gira o deque *n* passos para a direita. Se *n* for negativo, gire para a "
"esquerda."

#: ../../library/collections.rst:570
msgid ""
"When the deque is not empty, rotating one step to the right is equivalent to "
"``d.appendleft(d.pop())``, and rotating one step to the left is equivalent "
"to ``d.append(d.popleft())``."
msgstr ""
"Quando o deque não está vazio, girar um passo para a direita é equivalente a "
"``d.appendleft(d.pop())`` e girar um passo para a esquerda é equivalente a "
"``d.append(d.popleft())``."

#: ../../library/collections.rst:575
msgid "Deque objects also provide one read-only attribute:"
msgstr "Os objetos Deque também fornecem um atributo somente leitura:"

#: ../../library/collections.rst:579
msgid "Maximum size of a deque or ``None`` if unbounded."
msgstr "Tamanho máximo de um deque ou ``None`` se ilimitado."

#: ../../library/collections.rst:584
msgid ""
"In addition to the above, deques support iteration, pickling, ``len(d)``, "
"``reversed(d)``, ``copy.copy(d)``, ``copy.deepcopy(d)``, membership testing "
"with the :keyword:`in` operator, and subscript references such as ``d[0]`` "
"to access the first element.  Indexed access is O(1) at both ends but slows "
"to O(n) in the middle.  For fast random access, use lists instead."
msgstr ""
"Além do acima, deques oferece suporte a iteração, serialização com pickle, "
"``len(d)``, ``reversed(d)``, ``copy.copy(d)``, ``copy.deepcopy(d)`` e teste "
"de associação com o operador :keyword:`in` e referências subscritas, como "
"``d[0]`` para acessar o primeiro elemento. O acesso indexado é O(1) em ambas "
"as extremidades, mas diminui para O(n) no meio. Para acesso aleatório "
"rápido, use listas."

#: ../../library/collections.rst:590
msgid ""
"Starting in version 3.5, deques support ``__add__()``, ``__mul__()``, and "
"``__imul__()``."
msgstr ""
"A partir da versão 3.5, deques oferecem suporte a ``__add__()``,"
"``__mul__()`` e ``__imul__()``."

#: ../../library/collections.rst:593
msgid "Example:"
msgstr "Exemplo:"

#: ../../library/collections.rst:650
msgid ":class:`deque` Recipes"
msgstr "Receitas de :class:`deque`"

#: ../../library/collections.rst:652
msgid "This section shows various approaches to working with deques."
msgstr "Esta seção mostra várias abordagens para trabalhar com deques."

#: ../../library/collections.rst:654
msgid ""
"Bounded length deques provide functionality similar to the ``tail`` filter "
"in Unix::"
msgstr ""
"Deques de comprimento limitado fornecem funcionalidade semelhante ao filtro "
"``tail`` em Unix::"

#: ../../library/collections.rst:662
msgid ""
"Another approach to using deques is to maintain a sequence of recently added "
"elements by appending to the right and popping to the left::"
msgstr ""
"Outra abordagem para usar deques é manter uma sequência de elementos "
"adicionados recentemente, acrescentando à direita e clicando à esquerda::"

#: ../../library/collections.rst:677
msgid ""
"A `round-robin scheduler <https://en.wikipedia.org/wiki/Round-"
"robin_scheduling>`_ can be implemented with input iterators stored in a :"
"class:`deque`.  Values are yielded from the active iterator in position "
"zero.  If that iterator is exhausted, it can be removed with :meth:`~deque."
"popleft`; otherwise, it can be cycled back to the end with the :meth:`~deque."
"rotate` method::"
msgstr ""
"Um `escalonador round robin <https://en.wikipedia.org/wiki/Round-"
"robin_scheduling>`_ pode ser implementado com iteradores de entrada "
"armazenados em um :class:`deque`. Os valores são produzidos a partir do "
"iterador ativo na posição zero. Se esse iterador estiver esgotado, ele pode "
"ser removido com :meth:`~deque.popleft`; caso contrário, ele pode voltar ao "
"fim com o método :meth:`~deque.rotate`::"

#: ../../library/collections.rst:696
msgid ""
"The :meth:`~deque.rotate` method provides a way to implement :class:`deque` "
"slicing and deletion.  For example, a pure Python implementation of ``del "
"d[n]`` relies on the ``rotate()`` method to position elements to be popped::"
msgstr ""
"O método :meth:`~deque.rotate` fornece uma maneira de implementar o "
"fatiamento e exclusão :class:`deque`. Por exemplo, uma implementação Python "
"pura de ``del d[n]`` depende do método ``rotate()`` para posicionar os "
"elementos a serem retirados::"

#: ../../library/collections.rst:705
msgid ""
"To implement :class:`deque` slicing, use a similar approach applying :meth:"
"`~deque.rotate` to bring a target element to the left side of the deque. "
"Remove old entries with :meth:`~deque.popleft`, add new entries with :meth:"
"`~deque.extend`, and then reverse the rotation. With minor variations on "
"that approach, it is easy to implement Forth style stack manipulations such "
"as ``dup``, ``drop``, ``swap``, ``over``, ``pick``, ``rot``, and ``roll``."
msgstr ""
"Para implementar o fatiamento de :class:`deque`, use uma abordagem "
"semelhante aplicando :meth:`~deque.rotate` para trazer um elemento alvo para "
"o lado esquerdo do deque. Remova as entradas antigas com :meth:`~deque."
"popleft`, adicione novas entradas com :meth:`~deque.extend`, e, então, "
"inverta a rotação. Com pequenas variações dessa abordagem, é fácil "
"implementar manipulações de pilha de estilo Forth, como ``dup``, ``drop``, "
"``swap``, ``over``, ``pick``, ``rot`` e ``roll``."

#: ../../library/collections.rst:715
msgid ":class:`defaultdict` objects"
msgstr "Objetos :class:`defaultdict`"

#: ../../library/collections.rst:719
msgid ""
"Return a new dictionary-like object.  :class:`defaultdict` is a subclass of "
"the built-in :class:`dict` class.  It overrides one method and adds one "
"writable instance variable.  The remaining functionality is the same as for "
"the :class:`dict` class and is not documented here."
msgstr ""
"Retorna um novo objeto dicionário ou similar. :class:`defaultdict` é uma "
"subclasse da classe embutida :class:`dict`. Ele substitui um método e "
"adiciona uma variável de instância gravável. A funcionalidade restante é a "
"mesma da classe :class:`dict` e não está documentada aqui."

#: ../../library/collections.rst:724
msgid ""
"The first argument provides the initial value for the :attr:"
"`default_factory` attribute; it defaults to ``None``. All remaining "
"arguments are treated the same as if they were passed to the :class:`dict` "
"constructor, including keyword arguments."
msgstr ""
"O primeiro argumento fornece o valor inicial para o atributo :attr:"
"`default_factory`; o padrão é ``None``. Todos os argumentos restantes são "
"tratados da mesma forma como se fossem passados ​​para o construtor :class:"
"`dict`, incluindo argumentos nomeados."

#: ../../library/collections.rst:730
msgid ""
":class:`defaultdict` objects support the following method in addition to the "
"standard :class:`dict` operations:"
msgstr ""
"Os objetos :class:`defaultdict` oferecem suporta ao seguinte método além das "
"operações padrão :class:`dict`:"

#: ../../library/collections.rst:735
msgid ""
"If the :attr:`default_factory` attribute is ``None``, this raises a :exc:"
"`KeyError` exception with the *key* as argument."
msgstr ""
"Se o atributo :attr:`default_factory` for ``None``, isso levanta uma "
"exceção :exc:`KeyError` com *key* como argumento."

#: ../../library/collections.rst:738
msgid ""
"If :attr:`default_factory` is not ``None``, it is called without arguments "
"to provide a default value for the given *key*, this value is inserted in "
"the dictionary for the *key*, and returned."
msgstr ""
"Se :attr:`default_factory` não for ``None``, ele é chamado sem argumentos "
"para fornecer um valor padrão para a chave *key* fornecida, este valor é "
"inserido no dicionário para *key* e retornado."

#: ../../library/collections.rst:742
msgid ""
"If calling :attr:`default_factory` raises an exception this exception is "
"propagated unchanged."
msgstr ""
"Se chamar :attr:`default_factory` levanta uma exceção, esta exceção é "
"propagada inalterada."

#: ../../library/collections.rst:745
msgid ""
"This method is called by the :meth:`__getitem__` method of the :class:`dict` "
"class when the requested key is not found; whatever it returns or raises is "
"then returned or raised by :meth:`__getitem__`."
msgstr ""
"Este método é chamado pelo método :meth:`__getitem__` da classe :class:"
"`dict` quando a chave solicitada não é encontrada; tudo o que ele retorna ou "
"levanta é então retornado ou levantado por :meth:`__getitem__`."

#: ../../library/collections.rst:749
msgid ""
"Note that :meth:`__missing__` is *not* called for any operations besides :"
"meth:`__getitem__`. This means that :meth:`get` will, like normal "
"dictionaries, return ``None`` as a default rather than using :attr:"
"`default_factory`."
msgstr ""

#: ../../library/collections.rst:755
msgid ":class:`defaultdict` objects support the following instance variable:"
msgstr ""
"Objetos :class:`defaultdict` permitem a seguinte variável de instância:"

#: ../../library/collections.rst:760
msgid ""
"This attribute is used by the :meth:`__missing__` method; it is initialized "
"from the first argument to the constructor, if present, or to ``None``, if "
"absent."
msgstr ""
"Este atributo é usado pelo método :meth:`__missing__`; ele é inicializado a "
"partir do primeiro argumento para o construtor, se presente, ou para "
"``None``, se ausente."

#: ../../library/collections.rst:764 ../../library/collections.rst:1180
msgid ""
"Added merge (``|``) and update (``|=``) operators, specified in :pep:`584`."
msgstr ""
"Adicionado operadores de mesclagem (``|``) e de atualização (``|=``), "
"especificados na :pep:`584`."

#: ../../library/collections.rst:770
msgid ":class:`defaultdict` Examples"
msgstr "Exemplos de :class:`defaultdict`"

#: ../../library/collections.rst:772
msgid ""
"Using :class:`list` as the :attr:`~defaultdict.default_factory`, it is easy "
"to group a sequence of key-value pairs into a dictionary of lists:"
msgstr ""
"Usando :class:`list` como :attr:`~defaultdict.default_factory`, se for fácil "
"agrupar a sequencia dos pares chave-valores num dicionário de listas"

#: ../../library/collections.rst:783
msgid ""
"When each key is encountered for the first time, it is not already in the "
"mapping; so an entry is automatically created using the :attr:`~defaultdict."
"default_factory` function which returns an empty :class:`list`.  The :meth:"
"`list.append` operation then attaches the value to the new list.  When keys "
"are encountered again, the look-up proceeds normally (returning the list for "
"that key) and the :meth:`list.append` operation adds another value to the "
"list. This technique is simpler and faster than an equivalent technique "
"using :meth:`dict.setdefault`:"
msgstr ""
"Quando cada chave é encontrada pela primeira vez, ela ainda não está no "
"mapeamento; então uma entrada é criada automaticamente usando a função :attr:"
"`~defaultdict.default_factory` que retorna uma :class:`list` vazia. A "
"operação :meth:`list.append` então anexa o valor à nova lista. Quando as "
"chaves são encontradas novamente, a pesquisa prossegue normalmente "
"(retornando a lista daquela chave) e a operação :meth:`list.append` adiciona "
"outro valor à lista. Esta técnica é mais simples e rápida que uma técnica "
"equivalente usando :meth:`dict.setdefault`:"

#: ../../library/collections.rst:798
msgid ""
"Setting the :attr:`~defaultdict.default_factory` to :class:`int` makes the :"
"class:`defaultdict` useful for counting (like a bag or multiset in other "
"languages):"
msgstr ""
"Definir :attr:`~defaultdict.default_factory` como :class:`int` torna :class:"
"`defaultdict` útil para contagem (como um multiconjunto em outras "
"linguagens):"

#: ../../library/collections.rst:810
msgid ""
"When a letter is first encountered, it is missing from the mapping, so the :"
"attr:`~defaultdict.default_factory` function calls :func:`int` to supply a "
"default count of zero.  The increment operation then builds up the count for "
"each letter."
msgstr ""
"Quando uma letra é encontrada pela primeira vez, ela está ausente no "
"mapeamento, então a função :attr:`~defaultdict.default_factory` chama :func:"
"`int` para fornecer uma contagem padrão de zero. A operação de incremento "
"então cria a contagem para cada letra."

#: ../../library/collections.rst:814
msgid ""
"The function :func:`int` which always returns zero is just a special case of "
"constant functions.  A faster and more flexible way to create constant "
"functions is to use a lambda function which can supply any constant value "
"(not just zero):"
msgstr ""
"A função :func:`int` que sempre retorna zero é apenas um caso especial de "
"funções constantes. Uma maneira mais rápida e flexível de criar funções "
"constantes é usar uma função lambda que pode fornecer qualquer valor "
"constante (não apenas zero):"

#: ../../library/collections.rst:826
msgid ""
"Setting the :attr:`~defaultdict.default_factory` to :class:`set` makes the :"
"class:`defaultdict` useful for building a dictionary of sets:"
msgstr ""
"Definir :attr:`~defaultdict.default_factory` como :class:`set` torna :class:"
"`defaultdict` útil para construir um dicionário de conjuntos:"

#: ../../library/collections.rst:839
msgid ":func:`namedtuple` Factory Function for Tuples with Named Fields"
msgstr "Função de fábrica para tuplas com campos nomeados :func:`namedtuple`"

#: ../../library/collections.rst:841
msgid ""
"Named tuples assign meaning to each position in a tuple and allow for more "
"readable, self-documenting code.  They can be used wherever regular tuples "
"are used, and they add the ability to access fields by name instead of "
"position index."
msgstr ""
"Tuplas nomeadas determinam o significado de cada posição numa tupla e "
"permitem um código mais legível e autodocumentado. Podem ser usadas sempre "
"que tuplas regulares forem utilizadas, e adicionam a possibilidade de "
"acessar campos pelo nome ao invés da posição do índice."

#: ../../library/collections.rst:847
msgid ""
"Returns a new tuple subclass named *typename*.  The new subclass is used to "
"create tuple-like objects that have fields accessible by attribute lookup as "
"well as being indexable and iterable.  Instances of the subclass also have a "
"helpful docstring (with typename and field_names) and a helpful :meth:"
"`__repr__` method which lists the tuple contents in a ``name=value`` format."
msgstr ""
"Retorna uma nova subclasse de tupla chamada *typename*. A nova subclasse é "
"usada para criar objetos semelhantes a tuplas que possuem campos acessíveis "
"por pesquisa de atributos, além de serem indexáveis ​​e iteráveis. As "
"instâncias da subclasse também possuem uma docstring útil (com typename e "
"field_names) e um método útil :meth:`__repr__` que lista o conteúdo da tupla "
"em um formato ``nome=valor``."

#: ../../library/collections.rst:853
msgid ""
"The *field_names* are a sequence of strings such as ``['x', 'y']``. "
"Alternatively, *field_names* can be a single string with each fieldname "
"separated by whitespace and/or commas, for example ``'x y'`` or ``'x, y'``."
msgstr ""
"*field_names* são uma sequência de strings como ``['x', 'y']``. "
"Alternativamente, *field_names* pode ser uma única string com cada nome de "
"campo separado por espaços em branco e/ou vírgulas como, por exemplo, ``'x "
"y'`` ou ``'x, y'``."

#: ../../library/collections.rst:857
msgid ""
"Any valid Python identifier may be used for a fieldname except for names "
"starting with an underscore.  Valid identifiers consist of letters, digits, "
"and underscores but do not start with a digit or underscore and cannot be a :"
"mod:`keyword` such as *class*, *for*, *return*, *global*, *pass*, or *raise*."
msgstr ""
"Qualquer identificador Python válido pode ser usado para um nome de campo, "
"exceto para nomes que começam com um sublinhado. Identificadores válidos "
"consistem em letras, dígitos e sublinhados, mas não começam com um dígito ou "
"sublinhado e não podem ser uma :mod:`keyword` como *class*, *for*, *return*, "
"*global*, *pass* ou *raise*."

#: ../../library/collections.rst:863
msgid ""
"If *rename* is true, invalid fieldnames are automatically replaced with "
"positional names.  For example, ``['abc', 'def', 'ghi', 'abc']`` is "
"converted to ``['abc', '_1', 'ghi', '_3']``, eliminating the keyword ``def`` "
"and the duplicate fieldname ``abc``."
msgstr ""
"Se *rename* for verdadeiro, nomes de campos inválidos serão automaticamente "
"substituídos por nomes posicionais. Por exemplo, ``['abc', 'def', 'ghi', "
"'abc']`` é convertido para ``['abc', '_1', 'ghi', '_3']``, eliminando a "
"palavra reservada ``def`` e o nome de campo duplicado ``abc``."

#: ../../library/collections.rst:868
msgid ""
"*defaults* can be ``None`` or an :term:`iterable` of default values. Since "
"fields with a default value must come after any fields without a default, "
"the *defaults* are applied to the rightmost parameters.  For example, if the "
"fieldnames are ``['x', 'y', 'z']`` and the defaults are ``(1, 2)``, then "
"``x`` will be a required argument, ``y`` will default to ``1``, and ``z`` "
"will default to ``2``."
msgstr ""
"*defaults* pode ser ``None`` ou um :term:`iterável` de valores padrão. Como "
"os campos com valor padrão devem vir depois de qualquer campo sem padrão, os "
"*padrões* são aplicados aos parâmetros mais à direita. Por exemplo, se os "
"nomes dos campos forem ``['x', 'y', 'z']`` e os padrões forem ``(1, 2)``, "
"então ``x`` será um argumento obrigatório, ``y`` será o padrão ``1``, e "
"``z`` será o padrão ``2``."

#: ../../library/collections.rst:875
msgid ""
"If *module* is defined, the ``__module__`` attribute of the named tuple is "
"set to that value."
msgstr ""
"Se *module* for definido, o atributo ``__module__`` da tupla nomeada será "
"definido com esse valor."

#: ../../library/collections.rst:878
msgid ""
"Named tuple instances do not have per-instance dictionaries, so they are "
"lightweight and require no more memory than regular tuples."
msgstr ""
"As instâncias de tuplas nomeadas não possuem dicionários por instância, "
"portanto são leves e não requerem mais memória do que as tuplas normais."

#: ../../library/collections.rst:881
msgid ""
"To support pickling, the named tuple class should be assigned to a variable "
"that matches *typename*."
msgstr ""
"Para prover suporte para a serialização com pickle, a classe de tupla "
"nomeada deve ser atribuída a uma variável que corresponda a *typename*."

#: ../../library/collections.rst:884
msgid "Added support for *rename*."
msgstr "Adicionado suporte a *rename*."

#: ../../library/collections.rst:887
msgid ""
"The *verbose* and *rename* parameters became :ref:`keyword-only arguments "
"<keyword-only_parameter>`."
msgstr ""
"Os parâmetros *verbose* e *rename* tornaram-se :ref:`argumentos somente-"
"nomeados <keyword-only_parameter>`."

#: ../../library/collections.rst:891
msgid "Added the *module* parameter."
msgstr "Adicionado o parâmetro *module*."

#: ../../library/collections.rst:894
msgid "Removed the *verbose* parameter and the :attr:`_source` attribute."
msgstr "Removido o parâmetro *verbose* e o atributo :attr:`_source`"

#: ../../library/collections.rst:897
msgid ""
"Added the *defaults* parameter and the :attr:`_field_defaults` attribute."
msgstr ""
"Adicionado o parâmetro *defaults* e o atributo :attr:`_field_defaults`."

#: ../../library/collections.rst:917
msgid ""
"Named tuples are especially useful for assigning field names to result "
"tuples returned by the :mod:`csv` or :mod:`sqlite3` modules::"
msgstr ""
"Tuplas nomeadas são especialmente úteis para atribuir nomes de campos a "
"tuplas de resultados retornadas pelos módulos :mod:`csv` ou :mod:`sqlite3`::"

#: ../../library/collections.rst:933
msgid ""
"In addition to the methods inherited from tuples, named tuples support three "
"additional methods and two attributes.  To prevent conflicts with field "
"names, the method and attribute names start with an underscore."
msgstr ""
"Além dos métodos herdados das tuplas, as tuplas nomeadas oferecem suporte a "
"três métodos adicionais e dois atributos. Para evitar conflitos com nomes de "
"campos, os nomes de métodos e atributos começam com um sublinhado."

#: ../../library/collections.rst:939
msgid ""
"Class method that makes a new instance from an existing sequence or iterable."
msgstr ""
"Método de classe que cria uma nova instância a partir de uma sequência "
"existente ou iterável."

#: ../../library/collections.rst:949
msgid ""
"Return a new :class:`dict` which maps field names to their corresponding "
"values:"
msgstr ""
"Retorna um novo :class:`dict` que mapeia nomes de campo para seus "
"respectivos valores:"

#: ../../library/collections.rst:958
msgid "Returns an :class:`OrderedDict` instead of a regular :class:`dict`."
msgstr "Retorna um :class:`OrderedDict` em vez de um :class:`dict` normal."

#: ../../library/collections.rst:961
msgid ""
"Returns a regular :class:`dict` instead of an :class:`OrderedDict`. As of "
"Python 3.7, regular dicts are guaranteed to be ordered.  If the extra "
"features of :class:`OrderedDict` are required, the suggested remediation is "
"to cast the result to the desired type: ``OrderedDict(nt._asdict())``."
msgstr ""
"Retorna um :class:`dict` regular em vez de um :class:`OrderedDict`. A partir "
"do Python 3.7, é garantido que os dicionários regulares sejam ordenados. Se "
"os recursos extras de :class:`OrderedDict` forem necessários, a correção "
"sugerida é converter o resultado para o tipo desejado: ``OrderedDict(nt."
"_asdict())``."

#: ../../library/collections.rst:970
msgid ""
"Return a new instance of the named tuple replacing specified fields with new "
"values::"
msgstr ""
"Retorna uma nova instância da tupla nomeada substituindo os campos "
"especificados por novos valores::"

#: ../../library/collections.rst:982
msgid ""
"Tuple of strings listing the field names.  Useful for introspection and for "
"creating new named tuple types from existing named tuples."
msgstr ""
"Tupla de strings listando os nomes dos campos. Útil para introspecção e para "
"criar novos tipos de tuplas nomeadas a partir de tuplas nomeadas existentes."

#: ../../library/collections.rst:997
msgid "Dictionary mapping field names to default values."
msgstr "Dicionário mapeando nomes de campos para valores padrão."

#: ../../library/collections.rst:1007
msgid ""
"To retrieve a field whose name is stored in a string, use the :func:"
"`getattr` function:"
msgstr ""
"Para recuperar um campo cujo nome está armazenado em uma string, use a "
"função :func:`getattr`:"

#: ../../library/collections.rst:1013
msgid ""
"To convert a dictionary to a named tuple, use the double-star-operator (as "
"described in :ref:`tut-unpacking-arguments`):"
msgstr ""
"Para converter um dicionário em uma tupla nomeada, use o operador estrela "
"dupla (conforme descrito em :ref:`tut-unpacking-arguments`):"

#: ../../library/collections.rst:1020
msgid ""
"Since a named tuple is a regular Python class, it is easy to add or change "
"functionality with a subclass.  Here is how to add a calculated field and a "
"fixed-width print format:"
msgstr ""
"Como uma tupla nomeada é uma classe regular do Python, é fácil adicionar ou "
"alterar funcionalidades com uma subclasse. Veja como adicionar um campo "
"calculado e um formato de impressão de largura fixa:"

#: ../../library/collections.rst:1039
msgid ""
"The subclass shown above sets ``__slots__`` to an empty tuple.  This helps "
"keep memory requirements low by preventing the creation of instance "
"dictionaries."
msgstr ""
"A subclasse mostrada acima define ``__slots__`` como uma tupla vazia. Isso "
"ajuda a manter baixos os requisitos de memória, evitando a criação de "
"dicionários de instância."

#: ../../library/collections.rst:1042
msgid ""
"Subclassing is not useful for adding new, stored fields.  Instead, simply "
"create a new named tuple type from the :attr:`~somenamedtuple._fields` "
"attribute:"
msgstr ""
"A criação de subclasse não é útil para adicionar novos campos armazenados. "
"Em vez disso, simplesmente crie um novo tipo de tupla nomeado a partir do "
"atributo :attr:`~somenamedtuple._fields`:"

#: ../../library/collections.rst:1047
msgid ""
"Docstrings can be customized by making direct assignments to the ``__doc__`` "
"fields:"
msgstr ""
"Docstrings podem ser personalizados fazendo atribuições diretas aos campos "
"``__doc__``:"

#: ../../library/collections.rst:1056
msgid "Property docstrings became writeable."
msgstr "Os docstrings de propriedade tornaram-se graváveis."

#: ../../library/collections.rst:1061
msgid ""
"See :class:`typing.NamedTuple` for a way to add type hints for named "
"tuples.  It also provides an elegant notation using the :keyword:`class` "
"keyword::"
msgstr ""
"Veja :class:`typing.NamedTuple` para uma maneira de adicionar dicas de tipo "
"para tuplas nomeadas. Ele também fornece uma notação elegante usando a "
"palavra reservada :keyword:`class`::"

#: ../../library/collections.rst:1070
msgid ""
"See :meth:`types.SimpleNamespace` for a mutable namespace based on an "
"underlying dictionary instead of a tuple."
msgstr ""
"Veja :meth:`types.SimpleNamespace` para um espaço de nomes mutável baseado "
"em um dicionário subjacente em vez de uma tupla."

#: ../../library/collections.rst:1073
msgid ""
"The :mod:`dataclasses` module provides a decorator and functions for "
"automatically adding generated special methods to user-defined classes."
msgstr ""
"O módulo :mod:`dataclasses` fornece um decorador e funções para adicionar "
"automaticamente métodos especiais gerados a classes definidas pelo usuário."

#: ../../library/collections.rst:1078
msgid ":class:`OrderedDict` objects"
msgstr "Objetos :class:`OrderedDict`"

#: ../../library/collections.rst:1080
msgid ""
"Ordered dictionaries are just like regular dictionaries but have some extra "
"capabilities relating to ordering operations.  They have become less "
"important now that the built-in :class:`dict` class gained the ability to "
"remember insertion order (this new behavior became guaranteed in Python 3.7)."
msgstr ""
"Os dicionários ordenados são como os dicionários normais, mas possuem alguns "
"recursos extras relacionados às operações de pedido. Eles se tornaram menos "
"importantes agora que a classe embutida :class:`dict` ganhou a capacidade de "
"lembrar a ordem de inserção (esse novo comportamento foi garantido no Python "
"3.7)."

#: ../../library/collections.rst:1086
msgid "Some differences from :class:`dict` still remain:"
msgstr "Algumas diferenças de :class:`dict` ainda permanecem:"

#: ../../library/collections.rst:1088
msgid ""
"The regular :class:`dict` was designed to be very good at mapping "
"operations.  Tracking insertion order was secondary."
msgstr ""
"O :class:`dict` regular foi projetado para ser muito bom em operações de "
"mapeamento. O rastreamento do pedido de inserção era secundário."

#: ../../library/collections.rst:1091
msgid ""
"The :class:`OrderedDict` was designed to be good at reordering operations. "
"Space efficiency, iteration speed, and the performance of update operations "
"were secondary."
msgstr ""
"O :class:`OrderedDict` foi projetado para ser bom em operações de "
"reordenação. A eficiência de espaço, a velocidade de iteração e o desempenho "
"das operações de atualização eram secundários."

#: ../../library/collections.rst:1095
msgid ""
"The :class:`OrderedDict` algorithm can handle frequent reordering operations "
"better than :class:`dict`.  As shown in the recipes below, this makes it "
"suitable for implementing various kinds of LRU caches."
msgstr ""
"O algoritmo :class:`OrderedDict` pode lidar com operações de reordenação "
"frequentes melhor do que :class:`dict`. Conforme mostrado nas receitas "
"abaixo, isso o torna adequado para implementar vários tipos de caches LRU."

#: ../../library/collections.rst:1099
msgid ""
"The equality operation for :class:`OrderedDict` checks for matching order."
msgstr ""
"A operação de igualdade para :class:`OrderedDict` verifica a ordem "
"correspondente."

#: ../../library/collections.rst:1101
msgid ""
"A regular :class:`dict` can emulate the order sensitive equality test with "
"``p == q and all(k1 == k2 for k1, k2 in zip(p, q))``."
msgstr ""
"Um :class:`dict` regular pode emular o teste de igualdade sensível à ordem "
"com ``p == q and all(k1 == k2 for k1, k2 in zip(p, q))``."

#: ../../library/collections.rst:1104
msgid ""
"The :meth:`popitem` method of :class:`OrderedDict` has a different "
"signature.  It accepts an optional argument to specify which item is popped."
msgstr ""
"O método :meth:`popitem` de :class:`OrderedDict` tem uma assinatura "
"diferente. Ele aceita um argumento opcional para especificar qual item será "
"exibido."

#: ../../library/collections.rst:1107
msgid ""
"A regular :class:`dict` can emulate OrderedDict's ``od.popitem(last=True)`` "
"with ``d.popitem()`` which is guaranteed to pop the rightmost (last) item."
msgstr ""
"Um :class:`dict` normal pode emular o ``od.popitem(last=True)`` do "
"OrderedDict com ``d.popitem()`` que é garantido para exibir o (último) item "
"mais à direita."

#: ../../library/collections.rst:1110
msgid ""
"A regular :class:`dict` can emulate OrderedDict's ``od.popitem(last=False)`` "
"with ``(k := next(iter(d)), d.pop(k))`` which will return and remove the "
"leftmost (first) item if it exists."
msgstr ""
"Um :class:`dict` normal pode emular o ``od.popitem(last=False)`` do "
"OrderedDict com ``(k := next(iter(d)), d.pop(k))`` que retornará e remova o "
"item mais à esquerda (primeiro), se existir."

#: ../../library/collections.rst:1114
msgid ""
":class:`OrderedDict` has a :meth:`move_to_end` method to efficiently "
"reposition an element to an endpoint."
msgstr ""
":class:`OrderedDict` possui um método :meth:`move_to_end` para reposicionar "
"eficientemente um elemento em um endpoint."

#: ../../library/collections.rst:1117
msgid ""
"A regular :class:`dict` can emulate OrderedDict's ``od.move_to_end(k, "
"last=True)`` with ``d[k] = d.pop(k)`` which will move the key and its "
"associated value to the rightmost (last) position."
msgstr ""
"Um :class:`dict` normal pode emular o ``od.move_to_end(k, last=True)`` do "
"OrderedDict com ``d[k] = d.pop(k)`` que moverá a chave e seu valor associado "
"para a posição mais à direita (última)."

#: ../../library/collections.rst:1121
msgid ""
"A regular :class:`dict` does not have an efficient equivalent for "
"OrderedDict's ``od.move_to_end(k, last=False)`` which moves the key and its "
"associated value to the leftmost (first) position."
msgstr ""
"Um :class:`dict` regular não tem um equivalente eficiente para o ``od."
"move_to_end(k, last=False)`` do OrderedDict, que move a chave e seu valor "
"associado para a posição mais à esquerda (primeira)."

#: ../../library/collections.rst:1125
msgid "Until Python 3.8, :class:`dict` lacked a :meth:`__reversed__` method."
msgstr ""
"Até o Python 3.8, :class:`dict` não tinha um método :meth:`__reversed__`."

#: ../../library/collections.rst:1130
msgid ""
"Return an instance of a :class:`dict` subclass that has methods specialized "
"for rearranging dictionary order."
msgstr ""
"Retorna uma instância de uma subclasse :class:`dict` que possui métodos "
"especializados para reorganizar a ordem do dicionário."

#: ../../library/collections.rst:1137
msgid ""
"The :meth:`popitem` method for ordered dictionaries returns and removes a "
"(key, value) pair.  The pairs are returned in :abbr:`LIFO (last-in, first-"
"out)` order if *last* is true or :abbr:`FIFO (first-in, first-out)` order if "
"false."
msgstr ""
"O método :meth:`popitem` para dicionários ordenados retorna e remove um par "
"(chave, valor). Os pares são retornados na ordem :abbr:`LIFO (último a "
"entrar, primeiro a sair)` se *last* for verdadeiro ou na ordem :abbr:`FIFO "
"(primeiro a entrar, primeiro a sair)` se for falso."

#: ../../library/collections.rst:1144
msgid ""
"Move an existing *key* to either end of an ordered dictionary.  The item is "
"moved to the right end if *last* is true (the default) or to the beginning "
"if *last* is false.  Raises :exc:`KeyError` if the *key* does not exist:"
msgstr ""
"Move uma chave *key* existente para qualquer extremidade de um dicionário "
"ordenado. O item é movido para a extremidade direita se *last* for "
"verdadeiro (o padrão) ou para o início se *último* for falso. Levanta :exc:"
"`KeyError` se a *key* não existir:"

#: ../../library/collections.rst:1161
msgid ""
"In addition to the usual mapping methods, ordered dictionaries also support "
"reverse iteration using :func:`reversed`."
msgstr ""
"Além dos métodos usuais de mapeamento, dicionários ordenados também oferecem "
"suporte a iteração reversa usando a função :func:`reversed`."

#: ../../library/collections.rst:1164
msgid ""
"Equality tests between :class:`OrderedDict` objects are order-sensitive and "
"are implemented as ``list(od1.items())==list(od2.items())``. Equality tests "
"between :class:`OrderedDict` objects and other :class:`~collections.abc."
"Mapping` objects are order-insensitive like regular dictionaries.  This "
"allows :class:`OrderedDict` objects to be substituted anywhere a regular "
"dictionary is used."
msgstr ""
"Testes de igualdade entre objetos :class:`OrderedDict` são sensíveis à ordem "
"e são implementados como ``list(od1.items())==list(od2.items())``. Testes de "
"igualdade entre objetos :class:`OrderedDict` e outros objetos :class:"
"`~collections.abc.Mapping` são insensíveis à ordem como dicionários "
"regulares. Isso permite que objetos :class:`OrderedDict` sejam substituídos "
"em qualquer lugar que um dicionário regular seja usado."

#: ../../library/collections.rst:1171
msgid ""
"The items, keys, and values :term:`views <dictionary view>` of :class:"
"`OrderedDict` now support reverse iteration using :func:`reversed`."
msgstr ""
"Os itens, chaves e valores de :term:`visões <dictionary view>` de :class:"
"`OrderedDict` agora oferecem suporte a iteração reversa usando :func:"
"`reversed`."

#: ../../library/collections.rst:1175
msgid ""
"With the acceptance of :pep:`468`, order is retained for keyword arguments "
"passed to the :class:`OrderedDict` constructor and its :meth:`update` method."
msgstr ""
"Com a aceitação da :pep:`468`, a ordem é mantida para argumentos nomeados "
"passados ​​para o construtor :class:`OrderedDict` e seu método :meth:`update`."

#: ../../library/collections.rst:1185
msgid ":class:`OrderedDict` Examples and Recipes"
msgstr "Exemplos e receitas de :class:`OrderedDict`"

#: ../../library/collections.rst:1187
msgid ""
"It is straightforward to create an ordered dictionary variant that remembers "
"the order the keys were *last* inserted. If a new entry overwrites an "
"existing entry, the original insertion position is changed and moved to the "
"end::"
msgstr ""
"É simples criar uma variante de dicionário ordenado que lembre a ordem em "
"que as chaves foram inseridas pela *última* vez. Se uma nova entrada "
"substituir uma entrada existente, a posição de inserção original será "
"alterada e movida para o final::"

#: ../../library/collections.rst:1199
msgid ""
"An :class:`OrderedDict` would also be useful for implementing variants of :"
"func:`functools.lru_cache`:"
msgstr ""
"Um :class:`OrderedDict` também seria útil para implementar variantes de :"
"func:`functools.lru_cache`:"

#: ../../library/collections.rst:1297
msgid ":class:`UserDict` objects"
msgstr "Objetos :class:`UserDict`"

#: ../../library/collections.rst:1299
msgid ""
"The class, :class:`UserDict` acts as a wrapper around dictionary objects. "
"The need for this class has been partially supplanted by the ability to "
"subclass directly from :class:`dict`; however, this class can be easier to "
"work with because the underlying dictionary is accessible as an attribute."
msgstr ""
"A classe :class:`UserDict` atua como um invólucro em torno de objetos "
"dicionário. A necessidade desta classe foi parcialmente suplantada pela "
"capacidade de criar subclasses diretamente de :class:`dict`; entretanto, "
"essa classe pode ser mais fácil de trabalhar porque o dicionário subjacente "
"é acessível como um atributo."

#: ../../library/collections.rst:1307
msgid ""
"Class that simulates a dictionary.  The instance's contents are kept in a "
"regular dictionary, which is accessible via the :attr:`data` attribute of :"
"class:`UserDict` instances.  If *initialdata* is provided, :attr:`data` is "
"initialized with its contents; note that a reference to *initialdata* will "
"not be kept, allowing it to be used for other purposes."
msgstr ""
"Classe que simula um dicionário. O conteúdo da instância é mantido em um "
"dicionário regular, que é acessível através do atributo :attr:`data` das "
"instâncias :class:`UserDict`. Se *initialdata* for fornecido, :attr:`data` é "
"inicializado com seu conteúdo; observe que a referência a *initialdata* não "
"será mantida, permitindo sua utilização para outros fins."

#: ../../library/collections.rst:1313
msgid ""
"In addition to supporting the methods and operations of mappings, :class:"
"`UserDict` instances provide the following attribute:"
msgstr ""
"Além de prover suporte aos métodos e operações de mapeamentos, as "
"instâncias :class:`UserDict` fornecem o seguinte atributo:"

#: ../../library/collections.rst:1318
msgid ""
"A real dictionary used to store the contents of the :class:`UserDict` class."
msgstr ""
"Um dicionário real usado para armazenar o conteúdo da classe :class:"
"`UserDict`."

#: ../../library/collections.rst:1324
msgid ":class:`UserList` objects"
msgstr "Objetos :class:`UserList`"

#: ../../library/collections.rst:1326
msgid ""
"This class acts as a wrapper around list objects.  It is a useful base class "
"for your own list-like classes which can inherit from them and override "
"existing methods or add new ones.  In this way, one can add new behaviors to "
"lists."
msgstr ""
"Esta classe atua como um invólucro em torno de objetos de lista. É uma "
"classe base útil para suas próprias classes semelhantes a listas, que podem "
"herdar delas e substituir métodos existentes ou adicionar novos. Desta "
"forma, é possível adicionar novos comportamentos às listas."

#: ../../library/collections.rst:1331
msgid ""
"The need for this class has been partially supplanted by the ability to "
"subclass directly from :class:`list`; however, this class can be easier to "
"work with because the underlying list is accessible as an attribute."
msgstr ""
"A necessidade desta classe foi parcialmente suplantada pela capacidade de "
"criar subclasses diretamente de :class:`list`; no entanto, pode ser mais "
"fácil trabalhar com essa classe porque a lista subjacente pode ser acessada "
"como um atributo."

#: ../../library/collections.rst:1337
msgid ""
"Class that simulates a list.  The instance's contents are kept in a regular "
"list, which is accessible via the :attr:`data` attribute of :class:"
"`UserList` instances.  The instance's contents are initially set to a copy "
"of *list*, defaulting to the empty list ``[]``.  *list* can be any iterable, "
"for example a real Python list or a :class:`UserList` object."
msgstr ""
"Classe que simula uma lista. O conteúdo da instância é mantido em uma lista "
"regular, que é acessível através do atributo :attr:`data` das instâncias :"
"class:`UserList`. O conteúdo da instância é inicialmente definido como uma "
"cópia de *list*, padronizando a lista vazia ``[]``. *list* pode ser qualquer "
"iterável, por exemplo, uma lista Python real ou um objeto :class:`UserList`."

#: ../../library/collections.rst:1343
msgid ""
"In addition to supporting the methods and operations of mutable sequences, :"
"class:`UserList` instances provide the following attribute:"
msgstr ""
"Além de prover suporte aos métodos e operações de sequências mutáveis, as "
"instâncias :class:`UserList` fornecem o seguinte atributo:"

#: ../../library/collections.rst:1348
msgid ""
"A real :class:`list` object used to store the contents of the :class:"
"`UserList` class."
msgstr ""
"Um objeto :class:`list` real usado para armazenar o conteúdo da classe :"
"class:`UserList`."

#: ../../library/collections.rst:1351
msgid ""
"**Subclassing requirements:** Subclasses of :class:`UserList` are expected "
"to offer a constructor which can be called with either no arguments or one "
"argument.  List operations which return a new sequence attempt to create an "
"instance of the actual implementation class.  To do so, it assumes that the "
"constructor can be called with a single parameter, which is a sequence "
"object used as a data source."
msgstr ""
"**Requisitos para criar subclasse:** Espera-se que as subclasses de :class:"
"`UserList` ofereçam um construtor que pode ser chamado sem argumentos ou com "
"um argumento. Listar operações que retornam uma nova sequência tenta criar "
"uma instância da classe de implementação real. Para isso, presume que o "
"construtor pode ser chamado com um único parâmetro, que é um objeto de "
"sequência usado como fonte de dados."

#: ../../library/collections.rst:1358
msgid ""
"If a derived class does not wish to comply with this requirement, all of the "
"special methods supported by this class will need to be overridden; please "
"consult the sources for information about the methods which need to be "
"provided in that case."
msgstr ""
"Se uma classe derivada não desejar atender a este requisito, todos os "
"métodos especiais suportados por esta classe precisarão ser substituídos; "
"consulte as fontes para obter informações sobre os métodos que precisam ser "
"fornecidos nesse caso."

#: ../../library/collections.rst:1364
msgid ":class:`UserString` objects"
msgstr "Objetos :class:`UserString`"

#: ../../library/collections.rst:1366
msgid ""
"The class, :class:`UserString` acts as a wrapper around string objects. The "
"need for this class has been partially supplanted by the ability to subclass "
"directly from :class:`str`; however, this class can be easier to work with "
"because the underlying string is accessible as an attribute."
msgstr ""
"A classe :class:`UserString` atua como um invólucro em torno de objetos "
"string. A necessidade desta classe foi parcialmente suplantada pela "
"capacidade de criar subclasses diretamente de :class:`str`; entretanto, essa "
"classe pode ser mais fácil de trabalhar porque a string subjacente é "
"acessível como um atributo."

#: ../../library/collections.rst:1374
msgid ""
"Class that simulates a string object.  The instance's content is kept in a "
"regular string object, which is accessible via the :attr:`data` attribute "
"of :class:`UserString` instances.  The instance's contents are initially set "
"to a copy of *seq*.  The *seq* argument can be any object which can be "
"converted into a string using the built-in :func:`str` function."
msgstr ""
"Classe que simula um objeto string. O conteúdo da instância é mantido em um "
"objeto string regular, que é acessível através do atributo :attr:`data` das "
"instâncias :class:`UserString`. O conteúdo da instância é inicialmente "
"definido como uma cópia de *seq*. O argumento *seq* pode ser qualquer objeto "
"que possa ser convertido em uma string usando a função embutida :func:`str`."

#: ../../library/collections.rst:1381
msgid ""
"In addition to supporting the methods and operations of strings, :class:"
"`UserString` instances provide the following attribute:"
msgstr ""
"Além de prover suporte aos métodos e operações de strings, as instâncias :"
"class:`UserString` fornecem o seguinte atributo:"

#: ../../library/collections.rst:1386
msgid ""
"A real :class:`str` object used to store the contents of the :class:"
"`UserString` class."
msgstr ""
"Um objeto :class:`str` real usado para armazenar o conteúdo da classe :class:"
"`UserString`."

#: ../../library/collections.rst:1389
msgid ""
"New methods ``__getnewargs__``, ``__rmod__``, ``casefold``, ``format_map``, "
"``isprintable``, and ``maketrans``."
msgstr ""
"Novos métodos ``__getnewargs__``, ``__rmod__``, ``casefold``, "
"``format_map``, ``isprintable`` e ``maketrans``."
