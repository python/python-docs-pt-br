# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-07 20:38+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/pkgutil.rst:2
msgid ":mod:`!pkgutil` --- Package extension utility"
msgstr ":mod:`!pkgutil` --- Utilitário de extensão de pacote"

#: ../../library/pkgutil.rst:7
msgid "**Source code:** :source:`Lib/pkgutil.py`"
msgstr "**Código-fonte:** :source:`Lib/pkgutil.py`"

#: ../../library/pkgutil.rst:11
msgid ""
"This module provides utilities for the import system, in particular package "
"support."
msgstr ""
"Este módulo fornece utilitários para o sistema de importação, em particular "
"suporte a pacotes."

#: ../../library/pkgutil.rst:16
msgid "A namedtuple that holds a brief summary of a module's info."
msgstr "Um namedtuple que contém um breve resumo das informações de um módulo."

#: ../../library/pkgutil.rst:22
msgid ""
"Extend the search path for the modules which comprise a package.  Intended "
"use is to place the following code in a package's :file:`__init__.py`::"
msgstr ""
"Estende o caminho de pesquisa para os módulos que compõem um pacote. O uso "
"pretendido é colocar o seguinte código no :file:`__init__.py` de um pacote::"

#: ../../library/pkgutil.rst:25
msgid ""
"from pkgutil import extend_path\n"
"__path__ = extend_path(__path__, __name__)"
msgstr ""
"from pkgutil import extend_path\n"
"__path__ = extend_path(__path__, __name__)"

#: ../../library/pkgutil.rst:28
msgid ""
"For each directory on :data:`sys.path` that has a subdirectory that matches "
"the package name, add the subdirectory to the package's :attr:`~module."
"__path__`. This is useful if one wants to distribute different parts of a "
"single logical package as multiple directories."
msgstr ""
"Para cada diretório em :data:`sys.path` que tenha um subdiretório que "
"corresponda ao nome do pacote, adiciona o subdiretório ao :attr:`~module."
"__path__` do pacote. Isto é útil se quisermos distribuir diferentes partes "
"de um único pacote lógico como múltiplos diretórios."

#: ../../library/pkgutil.rst:34
msgid ""
"It also looks for :file:`\\*.pkg` files beginning where ``*`` matches the "
"*name* argument.  This feature is similar to :file:`\\*.pth` files (see the :"
"mod:`site` module for more information), except that it doesn't special-case "
"lines starting with ``import``.  A :file:`\\*.pkg` file is trusted at face "
"value: apart from skipping blank lines and ignoring comments, all entries "
"found in a :file:`\\*.pkg` file are added to the path, regardless of whether "
"they exist on the filesystem (this is a feature)."
msgstr ""
"Também procura por arquivos :file:`\\*.pkg` que começam onde ``*`` "
"corresponde ao argumento *name*. Este recurso é semelhante aos arquivos :"
"file:`\\*.pth` (consulte o módulo :mod:`site` para mais informações), exceto "
"que não considera casos especiais para linhas que começam com ``import``. Um "
"arquivo :file:`\\*.pkg` é confiável por natureza: além de pular linhas em "
"branco e ignorar comentários, todas as entradas encontradas em um arquivo :"
"file:`\\*.pkg` são adicionadas ao caminho, independentemente de existirem ou "
"não no sistema de arquivos (este é um recurso)."

#: ../../library/pkgutil.rst:42
msgid ""
"If the input path is not a list (as is the case for frozen packages) it is "
"returned unchanged.  The input path is not modified; an extended copy is "
"returned.  Items are only appended to the copy at the end."
msgstr ""
"Se o caminho de entrada não for uma lista (como é o caso de pacotes "
"congelados), ele será retornado inalterado. O caminho de entrada não é "
"modificado; uma cópia estendida é retornada. Os itens são anexados à cópia "
"apenas no final."

#: ../../library/pkgutil.rst:46
msgid ""
"It is assumed that :data:`sys.path` is a sequence.  Items of :data:`sys."
"path` that are not strings referring to existing directories are ignored. "
"Unicode items on :data:`sys.path` that cause errors when used as filenames "
"may cause this function to raise an exception (in line with :func:`os.path."
"isdir` behavior)."
msgstr ""
"Presume-se que :data:`sys.path` seja uma sequência. Itens de :data:`sys."
"path` que não sejam strings referentes a diretórios existentes são "
"ignorados. Itens Unicode em :data:`sys.path` que causam erros quando usados "
"como nomes de arquivo podem fazer com que esta função levante uma exceção "
"(em linha com o comportamento de :func:`os.path.isdir`)."

#: ../../library/pkgutil.rst:55
msgid "Retrieve a :term:`finder` for the given *path_item*."
msgstr "Recupera um :term:`localizador` para o *path_item* fornecido."

#: ../../library/pkgutil.rst:57
msgid ""
"The returned finder is cached in :data:`sys.path_importer_cache` if it was "
"newly created by a path hook."
msgstr ""
"O localizador retornado é armazenado em cache em :data:`sys."
"path_importer_cache` se ele foi criado recentemente por um gancho de caminho."

#: ../../library/pkgutil.rst:60
msgid ""
"The cache (or part of it) can be cleared manually if a rescan of :data:`sys."
"path_hooks` is necessary."
msgstr ""
"O cache (ou parte dele) pode ser limpo manualmente se uma nova varredura de :"
"data:`sys.path_hooks` for necessária."

#: ../../library/pkgutil.rst:63 ../../library/pkgutil.rst:81
#: ../../library/pkgutil.rst:102 ../../library/pkgutil.rst:141
msgid ""
"Updated to be based directly on :mod:`importlib` rather than relying on the "
"package internal :pep:`302` import emulation."
msgstr ""
"Atualizado para ser baseado diretamente em :mod:`importlib` em vez de "
"depender da emulação de importação interna do pacote da :pep:`302`."

#: ../../library/pkgutil.rst:70
msgid "Yield :term:`finder` objects for the given module name."
msgstr "Produz objetos :term:`localizador` para o nome do módulo fornecido."

#: ../../library/pkgutil.rst:72
msgid ""
"If *fullname* contains a ``'.'``, the finders will be for the package "
"containing *fullname*, otherwise they will be all registered top level "
"finders (i.e. those on both :data:`sys.meta_path` and :data:`sys."
"path_hooks`)."
msgstr ""
"Se *fullname* contiver ``'.'``, os localizadores serão para o pacote que "
"contém *fullname*, caso contrário, serão todos os localizadores de nível "
"superior registrados (ou seja, aqueles em :data:`sys.meta_path` e :data:`sys."
"path_hooks`)."

#: ../../library/pkgutil.rst:76
msgid ""
"If the named module is in a package, that package is imported as a side "
"effect of invoking this function."
msgstr ""
"Se o módulo nomeado estiver em um pacote, esse pacote será importado como um "
"efeito colateral da invocação desta função."

#: ../../library/pkgutil.rst:79
msgid "If no module name is specified, all top level finders are produced."
msgstr ""
"Se nenhum nome de módulo for especificado, todos os localizadores de nível "
"superior serão produzidos."

#: ../../library/pkgutil.rst:88
msgid ""
"Yields :class:`ModuleInfo` for all submodules on *path*, or, if *path* is "
"``None``, all top-level modules on :data:`sys.path`."
msgstr ""
"Levanta :class:`ModuleInfo` para todos os submódulos em *path* ou, se *path* "
"for ``None``, todos os módulos de nível superior em :data:`sys.path`."

#: ../../library/pkgutil.rst:91 ../../library/pkgutil.rst:112
msgid ""
"*path* should be either ``None`` or a list of paths to look for modules in."
msgstr ""
"*path* deve ser ``None`` ou uma lista de caminhos para procurar módulos."

#: ../../library/pkgutil.rst:93 ../../library/pkgutil.rst:114
msgid ""
"*prefix* is a string to output on the front of every module name on output."
msgstr ""
"*prefix* é uma string a ser exibida na frente de cada nome de módulo na "
"saída."

#: ../../library/pkgutil.rst:97 ../../library/pkgutil.rst:136
msgid ""
"Only works for a :term:`finder` which defines an ``iter_modules()`` method. "
"This interface is non-standard, so the module also provides implementations "
"for :class:`importlib.machinery.FileFinder` and :class:`zipimport."
"zipimporter`."
msgstr ""
"Funciona apenas para um :term:`localizador` que define um método "
"``iter_modules()``. Esta interface não é padrão, portanto, o módulo também "
"fornece implementações para :class:`importlib.machinery.FileFinder` e :class:"
"`zipimport.zipimporter`."

#: ../../library/pkgutil.rst:109
msgid ""
"Yields :class:`ModuleInfo` for all modules recursively on *path*, or, if "
"*path* is ``None``, all accessible modules."
msgstr ""
"Levanta :class:`ModuleInfo` para todos os módulos recursivamente em *path*, "
"ou, se *path* for ``None``, todos os módulos acessíveis."

#: ../../library/pkgutil.rst:116
msgid ""
"Note that this function must import all *packages* (*not* all modules!) on "
"the given *path*, in order to access the ``__path__`` attribute to find "
"submodules."
msgstr ""
"Observe que esta função deve importar todos os *pacotes* (*não* todos os "
"módulos!) no caminho *path* fornecido, para acessar o atributo ``__path__`` "
"para encontrar submódulos."

#: ../../library/pkgutil.rst:120
msgid ""
"*onerror* is a function which gets called with one argument (the name of the "
"package which was being imported) if any exception occurs while trying to "
"import a package.  If no *onerror* function is supplied, :exc:"
"`ImportError`\\s are caught and ignored, while all other exceptions are "
"propagated, terminating the search."
msgstr ""
"*onerror* é uma função que é chamada com um argumento (o nome do pacote que "
"estava sendo importado) caso ocorra alguma exceção durante a tentativa de "
"importação de um pacote. Se nenhuma função *onerror* for fornecida, :exc:"
"`ImportError`\\s são capturadas e ignoradas, enquanto todas as outras "
"exceções são propagadas, encerrando a busca."

#: ../../library/pkgutil.rst:126
msgid "Examples::"
msgstr "Exemplos::"

#: ../../library/pkgutil.rst:128
msgid ""
"# list all modules python can access\n"
"walk_packages()\n"
"\n"
"# list all submodules of ctypes\n"
"walk_packages(ctypes.__path__, ctypes.__name__ + '.')"
msgstr ""
"# lista todos os módulos que o python consegue acessars\n"
"walk_packages()\n"
"\n"
"# lista todos os submódulos de ctypes\n"
"walk_packages(ctypes.__path__, ctypes.__name__ + '.')"

#: ../../library/pkgutil.rst:148
msgid "Get a resource from a package."
msgstr "Obtém um recurso de um pacote."

#: ../../library/pkgutil.rst:150
msgid ""
"This is a wrapper for the :term:`loader` :meth:`get_data <importlib.abc."
"ResourceLoader.get_data>` API.  The *package* argument should be the name of "
"a package, in standard module format (``foo.bar``).  The *resource* argument "
"should be in the form of a relative filename, using ``/`` as the path "
"separator.  The parent directory name ``..`` is not allowed, and nor is a "
"rooted name (starting with a ``/``)."
msgstr ""
"Este é um invólucro para a API :meth:`get_data <importlib.abc.ResourceLoader."
"get_data>` do :term:`carregador`. O argumento *package* deve ser o nome de "
"um pacote, no formato de módulo padrão (``foo.bar``). O argumento *resource* "
"deve estar no formato de um nome de arquivo relativo, usando ``/`` como "
"separador de caminho. O nome do diretório pai ``..`` não é permitido, nem um "
"nome raiz (começando com ``/``)."

#: ../../library/pkgutil.rst:157
msgid ""
"The function returns a binary string that is the contents of the specified "
"resource."
msgstr ""
"A função retorna uma string binária que é o conteúdo do recurso especificado."

#: ../../library/pkgutil.rst:160
msgid ""
"For packages located in the filesystem, which have already been imported, "
"this is the rough equivalent of::"
msgstr ""
"Para pacotes localizados no sistema de arquivos, que já foram importados, "
"isso é o equivalente aproximado de::"

#: ../../library/pkgutil.rst:163
msgid ""
"d = os.path.dirname(sys.modules[package].__file__)\n"
"data = open(os.path.join(d, resource), 'rb').read()"
msgstr ""
"d = os.path.dirname(sys.modules[package].__file__)\n"
"data = open(os.path.join(d, resource), 'rb').read()"

#: ../../library/pkgutil.rst:166
msgid ""
"If the package cannot be located or loaded, or it uses a :term:`loader` "
"which does not support :meth:`get_data <importlib.abc.ResourceLoader."
"get_data>`, then ``None`` is returned.  In particular, the :term:`loader` "
"for :term:`namespace packages <namespace package>` does not support :meth:"
"`get_data <importlib.abc.ResourceLoader.get_data>`."
msgstr ""
"Se o pacote não puder ser localizado ou carregado, ou se usar um :term:"
"`carregador` que não oferece suporte a :meth:`get_data <importlib.abc."
"ResourceLoader.get_data>`, ``None`` será retornado. Em particular, o :term:"
"`carregador` para :term:`pacotes de espaço de nomes <namespace package>` não "
"oferece suporte a :meth:`get_data <importlib.abc.ResourceLoader.get_data>`."

#: ../../library/pkgutil.rst:175
msgid "Resolve a name to an object."
msgstr "Resolve um nome a um objeto."

#: ../../library/pkgutil.rst:177
msgid ""
"This functionality is used in numerous places in the standard library (see :"
"issue:`12915`) - and equivalent functionality is also in widely used third-"
"party packages such as setuptools, Django and Pyramid."
msgstr ""
"Essa funcionalidade é usada em vários lugares na biblioteca padrão (veja :"
"issue:`12915`) - e funcionalidades equivalentes também estão amplamente "
"utilizadas em pacotes de terceiros, como setuptools, Django e Pyramid."

#: ../../library/pkgutil.rst:181
msgid ""
"It is expected that *name* will be a string in one of the following formats, "
"where W is shorthand for a valid Python identifier and dot stands for a "
"literal period in these pseudo-regexes:"
msgstr ""
"Espera-se que *name* seja uma string em um dos seguintes formatos, onde W é "
"uma abreviação para um identificador Python válido e ponto representa um "
"ponto literal nessas pseudo-regexes:"

#: ../../library/pkgutil.rst:185
msgid "``W(.W)*``"
msgstr "``W(.W)*``"

#: ../../library/pkgutil.rst:186
msgid "``W(.W)*:(W(.W)*)?``"
msgstr "``W(.W)*:(W(.W)*)?``"

#: ../../library/pkgutil.rst:188
msgid ""
"The first form is intended for backward compatibility only. It assumes that "
"some part of the dotted name is a package, and the rest is an object "
"somewhere within that package, possibly nested inside other objects. Because "
"the place where the package stops and the object hierarchy starts can't be "
"inferred by inspection, repeated attempts to import must be done with this "
"form."
msgstr ""
"A primeira forma destina-se apenas à retrocompatibilidade. Ela presume que "
"parte do nome pontilhado seja um pacote e o restante seja um objeto em algum "
"lugar dentro desse pacote, possivelmente aninhado dentro de outros objetos. "
"Como o ponto onde o pacote termina e a hierarquia de objetos começa não pode "
"ser inferido por inspeção, tentativas repetidas de importação devem ser "
"feitas com esta forma."

#: ../../library/pkgutil.rst:195
msgid ""
"In the second form, the caller makes the division point clear through the "
"provision of a single colon: the dotted name to the left of the colon is a "
"package to be imported, and the dotted name to the right is the object "
"hierarchy within that package. Only one import is needed in this form. If it "
"ends with the colon, then a module object is returned."
msgstr ""
"Na segunda forma, o chamador deixa claro o ponto de divisão por meio de um "
"caractere de dois pontos: o nome pontilhado à esquerda do caractere de dois "
"pontos representa um pacote a ser importado, e o nome pontilhado à direita "
"representa a hierarquia de objetos dentro desse pacote. Apenas uma "
"importação é necessária nesta forma. Se terminar com caractere de dois "
"pontos, um objeto de módulo será retornado."

#: ../../library/pkgutil.rst:201
msgid ""
"The function will return an object (which might be a module), or raise one "
"of the following exceptions:"
msgstr ""
"A função retornará um objeto (que pode ser um módulo) ou levantará uma das "
"seguintes exceções:"

#: ../../library/pkgutil.rst:204
msgid ":exc:`ValueError` -- if *name* isn't in a recognised format."
msgstr ":exc:`ValueError` -- se *name* não estiver em um formato reconhecido."

#: ../../library/pkgutil.rst:206
msgid ":exc:`ImportError` -- if an import failed when it shouldn't have."
msgstr ":exc:`ImportError` -- se uma importação falhou quando não deveria."

#: ../../library/pkgutil.rst:208
msgid ""
":exc:`AttributeError` -- If a failure occurred when traversing the object "
"hierarchy within the imported package to get to the desired object."
msgstr ""
":exc:`AttributeError` -- Se ocorrer uma falha ao percorrer a hierarquia de "
"objetos dentro do pacote importado para chegar ao objeto desejado."
