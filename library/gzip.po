# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-09 14:19+0000\n"
"PO-Revision-Date: 2025-07-18 18:49+0000\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/gzip.rst:2
msgid ":mod:`!gzip` --- Support for :program:`gzip` files"
msgstr ""

#: ../../library/gzip.rst:7
msgid "**Source code:** :source:`Lib/gzip.py`"
msgstr ""

#: ../../library/gzip.rst:11
msgid ""
"This module provides a simple interface to compress and decompress files "
"just like the GNU programs :program:`gzip` and :program:`gunzip` would."
msgstr ""

#: ../../library/gzip.rst:14
msgid "The data compression is provided by the :mod:`zlib` module."
msgstr ""

#: ../../library/gzip.rst:16
msgid ""
"The :mod:`gzip` module provides the :class:`GzipFile` class, as well as the :"
"func:`.open`, :func:`compress` and :func:`decompress` convenience functions. "
"The :class:`GzipFile` class reads and writes :program:`gzip`\\ -format "
"files, automatically compressing or decompressing the data so that it looks "
"like an ordinary :term:`file object`."
msgstr ""

#: ../../library/gzip.rst:22
msgid ""
"Note that additional file formats which can be decompressed by the :program:"
"`gzip` and :program:`gunzip` programs, such  as those produced by :program:"
"`compress` and :program:`pack`, are not supported by this module."
msgstr ""

#: ../../library/gzip.rst:26
msgid "The module defines the following items:"
msgstr ""

#: ../../library/gzip.rst:31
msgid ""
"Open a gzip-compressed file in binary or text mode, returning a :term:`file "
"object`."
msgstr ""

#: ../../library/gzip.rst:34
msgid ""
"The *filename* argument can be an actual filename (a :class:`str` or :class:"
"`bytes` object), or an existing file object to read from or write to."
msgstr ""

#: ../../library/gzip.rst:37
msgid ""
"The *mode* argument can be any of ``'r'``, ``'rb'``, ``'a'``, ``'ab'``, "
"``'w'``, ``'wb'``, ``'x'`` or ``'xb'`` for binary mode, or ``'rt'``, "
"``'at'``, ``'wt'``, or ``'xt'`` for text mode. The default is ``'rb'``."
msgstr ""

#: ../../library/gzip.rst:41
msgid ""
"The *compresslevel* argument is an integer from 0 to 9, as for the :class:"
"`GzipFile` constructor."
msgstr ""

#: ../../library/gzip.rst:44
msgid ""
"For binary mode, this function is equivalent to the :class:`GzipFile` "
"constructor: ``GzipFile(filename, mode, compresslevel)``. In this case, the "
"*encoding*, *errors* and *newline* arguments must not be provided."
msgstr ""

#: ../../library/gzip.rst:48
msgid ""
"For text mode, a :class:`GzipFile` object is created, and wrapped in an :"
"class:`io.TextIOWrapper` instance with the specified encoding, error "
"handling behavior, and line ending(s)."
msgstr ""

#: ../../library/gzip.rst:52
msgid ""
"Added support for *filename* being a file object, support for text mode, and "
"the *encoding*, *errors* and *newline* arguments."
msgstr ""

#: ../../library/gzip.rst:56
msgid "Added support for the ``'x'``, ``'xb'`` and ``'xt'`` modes."
msgstr ""

#: ../../library/gzip.rst:59 ../../library/gzip.rst:173
msgid "Accepts a :term:`path-like object`."
msgstr ""

#: ../../library/gzip.rst:64
msgid ""
"An exception raised for invalid gzip files.  It inherits from :exc:"
"`OSError`. :exc:`EOFError` and :exc:`zlib.error` can also be raised for "
"invalid gzip files."
msgstr ""

#: ../../library/gzip.rst:72
msgid ""
"Constructor for the :class:`GzipFile` class, which simulates most of the "
"methods of a :term:`file object`, with the exception of the :meth:`~io."
"IOBase.truncate` method.  At least one of *fileobj* and *filename* must be "
"given a non-trivial value."
msgstr ""

#: ../../library/gzip.rst:77
msgid ""
"The new class instance is based on *fileobj*, which can be a regular file, "
"an :class:`io.BytesIO` object, or any other object which simulates a file.  "
"It defaults to ``None``, in which case *filename* is opened to provide a "
"file object."
msgstr ""

#: ../../library/gzip.rst:82
msgid ""
"When *fileobj* is not ``None``, the *filename* argument is only used to be "
"included in the :program:`gzip` file header, which may include the original "
"filename of the uncompressed file.  It defaults to the filename of "
"*fileobj*, if discernible; otherwise, it defaults to the empty string, and "
"in this case the original filename is not included in the header."
msgstr ""

#: ../../library/gzip.rst:88
msgid ""
"The *mode* argument can be any of ``'r'``, ``'rb'``, ``'a'``, ``'ab'``, "
"``'w'``, ``'wb'``, ``'x'``, or ``'xb'``, depending on whether the file will "
"be read or written.  The default is the mode of *fileobj* if discernible; "
"otherwise, the default is ``'rb'``.  In future Python releases the mode of "
"*fileobj* will not be used.  It is better to always specify *mode* for "
"writing."
msgstr ""

#: ../../library/gzip.rst:94
msgid ""
"Note that the file is always opened in binary mode. To open a compressed "
"file in text mode, use :func:`.open` (or wrap your :class:`GzipFile` with "
"an :class:`io.TextIOWrapper`)."
msgstr ""

#: ../../library/gzip.rst:98
msgid ""
"The *compresslevel* argument is an integer from ``0`` to ``9`` controlling "
"the level of compression; ``1`` is fastest and produces the least "
"compression, and ``9`` is slowest and produces the most compression. ``0`` "
"is no compression. The default is ``9``."
msgstr ""

#: ../../library/gzip.rst:103
msgid ""
"The optional *mtime* argument is the timestamp requested by gzip. The time "
"is in Unix format, i.e., seconds since 00:00:00 UTC, January 1, 1970. If "
"*mtime* is omitted or ``None``, the current time is used. Use *mtime* = 0 to "
"generate a compressed stream that does not depend on creation time."
msgstr ""

#: ../../library/gzip.rst:108
msgid ""
"See below for the :attr:`mtime` attribute that is set when decompressing."
msgstr ""

#: ../../library/gzip.rst:110
msgid ""
"Calling a :class:`GzipFile` object's :meth:`!close` method does not close "
"*fileobj*, since you might wish to append more material after the compressed "
"data.  This also allows you to pass an :class:`io.BytesIO` object opened for "
"writing as *fileobj*, and retrieve the resulting memory buffer using the :"
"class:`io.BytesIO` object's :meth:`~io.BytesIO.getvalue` method."
msgstr ""

#: ../../library/gzip.rst:116
msgid ""
":class:`GzipFile` supports the :class:`io.BufferedIOBase` interface, "
"including iteration and the :keyword:`with` statement.  Only the :meth:`~io."
"IOBase.truncate` method isn't implemented."
msgstr ""

#: ../../library/gzip.rst:120
msgid ":class:`GzipFile` also provides the following method and attribute:"
msgstr ""

#: ../../library/gzip.rst:124
msgid ""
"Read *n* uncompressed bytes without advancing the file position. The number "
"of bytes returned may be more or less than requested."
msgstr ""

#: ../../library/gzip.rst:127
msgid ""
"While calling :meth:`peek` does not change the file position of the :class:"
"`GzipFile`, it may change the position of the underlying file object (e.g. "
"if the :class:`GzipFile` was constructed with the *fileobj* parameter)."
msgstr ""

#: ../../library/gzip.rst:136
msgid "``'rb'`` for reading and ``'wb'`` for writing."
msgstr ""

#: ../../library/gzip.rst:138
msgid "In previous versions it was an integer ``1`` or ``2``."
msgstr ""

#: ../../library/gzip.rst:143
msgid ""
"When decompressing, this attribute is set to the last timestamp in the most "
"recently read header.  It is an integer, holding the number of seconds since "
"the Unix epoch (00:00:00 UTC, January 1, 1970). The initial value before "
"reading any headers is ``None``."
msgstr ""

#: ../../library/gzip.rst:150
msgid ""
"The path to the gzip file on disk, as a :class:`str` or :class:`bytes`. "
"Equivalent to the output of :func:`os.fspath` on the original input path, "
"with no other normalization, resolution or expansion."
msgstr ""

#: ../../library/gzip.rst:154
msgid ""
"Support for the :keyword:`with` statement was added, along with the *mtime* "
"constructor argument and :attr:`mtime` attribute."
msgstr ""

#: ../../library/gzip.rst:158
msgid "Support for zero-padded and unseekable files was added."
msgstr ""

#: ../../library/gzip.rst:161
msgid "The :meth:`io.BufferedIOBase.read1` method is now implemented."
msgstr ""

#: ../../library/gzip.rst:164
msgid "Added support for the ``'x'`` and ``'xb'`` modes."
msgstr ""

#: ../../library/gzip.rst:167
msgid ""
"Added support for writing arbitrary :term:`bytes-like objects <bytes-like "
"object>`. The :meth:`~io.BufferedIOBase.read` method now accepts an argument "
"of ``None``."
msgstr ""

#: ../../library/gzip.rst:176
msgid ""
"Opening :class:`GzipFile` for writing without specifying the *mode* argument "
"is deprecated."
msgstr ""

#: ../../library/gzip.rst:180
msgid ""
"Remove the ``filename`` attribute, use the :attr:`~GzipFile.name` attribute "
"instead."
msgstr ""

#: ../../library/gzip.rst:187
msgid ""
"Compress the *data*, returning a :class:`bytes` object containing the "
"compressed data.  *compresslevel* and *mtime* have the same meaning as in "
"the :class:`GzipFile` constructor above, but *mtime* defaults to 0 for "
"reproducible output."
msgstr ""

#: ../../library/gzip.rst:193
msgid "Added the *mtime* parameter for reproducible output."
msgstr ""

#: ../../library/gzip.rst:195
msgid ""
"Speed is improved by compressing all data at once instead of in a streamed "
"fashion. Calls with *mtime* set to ``0`` are delegated to :func:`zlib."
"compress` for better speed. In this situation the output may contain a gzip "
"header \"OS\" byte value other than 255 \"unknown\" as supplied by the "
"underlying zlib implementation."
msgstr ""

#: ../../library/gzip.rst:202
msgid ""
"The gzip header OS byte is guaranteed to be set to 255 when this function is "
"used as was the case in 3.10 and earlier."
msgstr ""

#: ../../library/gzip.rst:205
msgid ""
"The *mtime* parameter now defaults to 0 for reproducible output. For the "
"previous behaviour of using the current time, pass ``None`` to *mtime*."
msgstr ""

#: ../../library/gzip.rst:212
msgid ""
"Decompress the *data*, returning a :class:`bytes` object containing the "
"uncompressed data. This function is capable of decompressing multi-member "
"gzip data (multiple gzip blocks concatenated together). When the data is "
"certain to contain only one member the :func:`zlib.decompress` function with "
"*wbits* set to 31 is faster."
msgstr ""

#: ../../library/gzip.rst:219
msgid ""
"Speed is improved by decompressing members at once in memory instead of in a "
"streamed fashion."
msgstr ""

#: ../../library/gzip.rst:226
msgid "Examples of usage"
msgstr ""

#: ../../library/gzip.rst:228
msgid "Example of how to read a compressed file::"
msgstr ""

#: ../../library/gzip.rst:230
msgid ""
"import gzip\n"
"with gzip.open('/home/joe/file.txt.gz', 'rb') as f:\n"
"    file_content = f.read()"
msgstr ""

#: ../../library/gzip.rst:234
msgid "Example of how to create a compressed GZIP file::"
msgstr ""

#: ../../library/gzip.rst:236
msgid ""
"import gzip\n"
"content = b\"Lots of content here\"\n"
"with gzip.open('/home/joe/file.txt.gz', 'wb') as f:\n"
"    f.write(content)"
msgstr ""

#: ../../library/gzip.rst:241
msgid "Example of how to GZIP compress an existing file::"
msgstr ""

#: ../../library/gzip.rst:243
msgid ""
"import gzip\n"
"import shutil\n"
"with open('/home/joe/file.txt', 'rb') as f_in:\n"
"    with gzip.open('/home/joe/file.txt.gz', 'wb') as f_out:\n"
"        shutil.copyfileobj(f_in, f_out)"
msgstr ""

#: ../../library/gzip.rst:249
msgid "Example of how to GZIP compress a binary string::"
msgstr ""

#: ../../library/gzip.rst:251
msgid ""
"import gzip\n"
"s_in = b\"Lots of content here\"\n"
"s_out = gzip.compress(s_in)"
msgstr ""

#: ../../library/gzip.rst:257
msgid "Module :mod:`zlib`"
msgstr ""

#: ../../library/gzip.rst:258
msgid ""
"The basic data compression module needed to support the :program:`gzip` file "
"format."
msgstr ""

#: ../../library/gzip.rst:261
msgid ""
"In case gzip (de)compression is a bottleneck, the `python-isal`_ package "
"speeds up (de)compression with a mostly compatible API."
msgstr ""

#: ../../library/gzip.rst:271
msgid "Command Line Interface"
msgstr ""

#: ../../library/gzip.rst:273
msgid ""
"The :mod:`gzip` module provides a simple command line interface to compress "
"or decompress files."
msgstr ""

#: ../../library/gzip.rst:276
msgid "Once executed the :mod:`gzip` module keeps the input file(s)."
msgstr ""

#: ../../library/gzip.rst:280
msgid ""
"Add a new command line interface with a usage. By default, when you will "
"execute the CLI, the default compression level is 6."
msgstr ""

#: ../../library/gzip.rst:284
msgid "Command line options"
msgstr ""

#: ../../library/gzip.rst:288
msgid "If *file* is not specified, read from :data:`sys.stdin`."
msgstr ""

#: ../../library/gzip.rst:292
msgid "Indicates the fastest compression method (less compression)."
msgstr ""

#: ../../library/gzip.rst:296
msgid "Indicates the slowest compression method (best compression)."
msgstr ""

#: ../../library/gzip.rst:300
msgid "Decompress the given file."
msgstr ""

#: ../../library/gzip.rst:304
msgid "Show the help message."
msgstr ""
