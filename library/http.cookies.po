# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-11 15:45+0000\n"
"PO-Revision-Date: 2024-05-11 00:33+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/http.cookies.rst:2
msgid ":mod:`!http.cookies` --- HTTP state management"
msgstr ":mod:`!http.cookies` --- Управление состоянием HTTP"

#: ../../library/http.cookies.rst:10
msgid "**Source code:** :source:`Lib/http/cookies.py`"
msgstr "**Código-fonte:** :source:`Lib/http/cookies.py`"

#: ../../library/http.cookies.rst:14
msgid ""
"The :mod:`http.cookies` module defines classes for abstracting the concept "
"of cookies, an HTTP state management mechanism. It supports both simple "
"string-only cookies, and provides an abstraction for having any serializable "
"data-type as cookie value."
msgstr ""
"Модуль :mod:`http.cookies` визначає класи для абстрагування концепції файлів "
"cookie, механізму керування станом HTTP. Він підтримує як прості файли "
"cookie лише з рядками, так і надає абстракцію для будь-якого серіалізованого "
"типу даних як значення cookie."

#: ../../library/http.cookies.rst:19
msgid ""
"The module formerly strictly applied the parsing rules described in the :rfc:"
"`2109` and :rfc:`2068` specifications.  It has since been discovered that "
"MSIE 3.0x didn't follow the character rules outlined in those specs; many "
"current-day browsers and servers have also relaxed parsing rules when it "
"comes to cookie handling.  As a result, this module now uses parsing rules "
"that are a bit less strict than they once were."
msgstr ""
"Раньше модуль строго применял правила синтаксического анализа, описанные в "
"спецификациях :rfc:`2109` и :rfc:`2068`. С тех пор было обнаружено, что MSIE "
"3.0x не соответствует правилам символов, изложенным в этих спецификациях; "
"многие современные браузеры и серверы также смягчили правила синтаксического "
"анализа, когда дело доходит до обработки файлов cookie. В результате этот "
"модуль теперь использует несколько менее строгие правила синтаксического "
"анализа, чем раньше."

#: ../../library/http.cookies.rst:26
msgid ""
"The character set, :data:`string.ascii_letters`, :data:`string.digits` and "
"``!#$%&'*+-.^_`|~:`` denote the set of valid characters allowed by this "
"module in a cookie name (as :attr:`~Morsel.key`)."
msgstr ""
"Набор символов :data:`string.ascii_letters`, :data:`string.digits` и ``!# $ "
"%&'*+-.^_`|~:`` обозначают набор допустимых символов, разрешенных этот "
"модуль в имени файла cookie (например, :attr:`~Morsel.key`)."

#: ../../library/http.cookies.rst:30
msgid "Allowed ':' as a valid cookie name character."
msgstr "Разрешен символ «:» в качестве допустимого символа имени файла cookie."

#: ../../library/http.cookies.rst:36
msgid ""
"On encountering an invalid cookie, :exc:`CookieError` is raised, so if your "
"cookie data comes from a browser you should always prepare for invalid data "
"and catch :exc:`CookieError` on parsing."
msgstr ""
"У разі виявлення недійсних файлів cookie виникає помилка :exc:`CookieError`, "
"тому, якщо ваші дані файлів cookie надходять із браузера, ви повинні завжди "
"бути готовими до недійсних даних і виявляти помилку :exc:`CookieError` під "
"час синтаксичного аналізу."

#: ../../library/http.cookies.rst:43
msgid ""
"Exception failing because of :rfc:`2109` invalidity: incorrect attributes, "
"incorrect :mailheader:`Set-Cookie` header, etc."
msgstr ""
"Помилка виключення через недійсність :rfc:`2109`: неправильні атрибути, "
"неправильний заголовок :mailheader:`Set-Cookie` тощо."

#: ../../library/http.cookies.rst:49
msgid ""
"This class is a dictionary-like object whose keys are strings and whose "
"values are :class:`Morsel` instances. Note that upon setting a key to a "
"value, the value is first converted to a :class:`Morsel` containing the key "
"and the value."
msgstr ""
"Цей клас є словниковим об’єктом, ключі якого є рядками, а значення – "
"екземплярами :class:`Morsel`. Зауважте, що після встановлення ключа "
"значення, значення спочатку перетворюється на :class:`Morsel`, що містить "
"ключ і значення."

#: ../../library/http.cookies.rst:53
msgid "If *input* is given, it is passed to the :meth:`load` method."
msgstr "Якщо задано *input*, воно передається в метод :meth:`load`."

#: ../../library/http.cookies.rst:58
msgid ""
"This class derives from :class:`BaseCookie` and overrides :meth:`~BaseCookie."
"value_decode` and :meth:`~BaseCookie.value_encode`. :class:`!SimpleCookie` "
"supports strings as cookie values. When setting the value, :class:`!"
"SimpleCookie` calls the builtin :func:`str` to convert the value to a "
"string. Values received from HTTP are kept as strings."
msgstr ""
"Этот класс является производным от :class:`BaseCookie` и переопределяет :"
"meth:`~BaseCookie.value_decode` и :meth:`~BaseCookie.value_encode`. :class:`!"
"SimpleCookie` поддерживает строки в качестве значений cookie. При установке "
"значения :class:`!SimpleCookie` вызывает встроенную функцию :func:`str` для "
"преобразования значения в строку. Значения, полученные по HTTP, сохраняются "
"в виде строк."

#: ../../library/http.cookies.rst:66
msgid "Module :mod:`http.cookiejar`"
msgstr "Módulo :mod:`http.cookiejar`"

#: ../../library/http.cookies.rst:67
msgid ""
"HTTP cookie handling for web *clients*.  The :mod:`http.cookiejar` and :mod:"
"`http.cookies` modules do not depend on each other."
msgstr ""
"Обробка файлів cookie HTTP для веб-*клієнтів*. Модулі :mod:`http.cookiejar` "
"і :mod:`http.cookies` не залежать один від одного."

#: ../../library/http.cookies.rst:70
msgid ":rfc:`2109` - HTTP State Management Mechanism"
msgstr ":rfc:`2109` - механізм керування станом HTTP"

#: ../../library/http.cookies.rst:71
msgid "This is the state management specification implemented by this module."
msgstr "Це специфікація управління станом, реалізована цим модулем."

#: ../../library/http.cookies.rst:77
msgid "Cookie Objects"
msgstr "Objetos Cookie"

#: ../../library/http.cookies.rst:82
msgid ""
"Return a tuple ``(real_value, coded_value)`` from a string representation. "
"``real_value`` can be any type. This method does no decoding in :class:"
"`BaseCookie` --- it exists so it can be overridden."
msgstr ""
"Повертає кортеж ``(real_value, coded_value)`` із представлення рядка. "
"``real_value`` може мати будь-який тип. Цей метод не виконує декодування в :"
"class:`BaseCookie` --- він існує, тому його можна замінити."

#: ../../library/http.cookies.rst:89
msgid ""
"Return a tuple ``(real_value, coded_value)``. *val* can be any type, but "
"``coded_value`` will always be converted to a string. This method does no "
"encoding in :class:`BaseCookie` --- it exists so it can be overridden."
msgstr ""
"Повертає кортеж ``(real_value, coded_value)``. *val* може мати будь-який "
"тип, але ``coded_value`` завжди буде перетворено на рядок. Цей метод не "
"кодує в :class:`BaseCookie` --- він існує, тому його можна замінити."

#: ../../library/http.cookies.rst:94
msgid ""
"In general, it should be the case that :meth:`value_encode` and :meth:"
"`value_decode` are inverses on the range of *value_decode*."
msgstr ""
"Загалом має бути так, що :meth:`value_encode` і :meth:`value_decode` є "
"зворотними в діапазоні *value_decode*."

#: ../../library/http.cookies.rst:100
msgid ""
"Return a string representation suitable to be sent as HTTP headers. *attrs* "
"and *header* are sent to each :class:`Morsel`'s :meth:`~Morsel.output` "
"method. *sep* is used to join the headers together, and is by default the "
"combination ``'\\r\\n'`` (CRLF)."
msgstr ""
"Возвращает строковое представление, подходящее для отправки в виде "
"заголовков HTTP. *attrs* и *header* отправляются в каждый метод :meth:"
"`~Morsel.output` :class:`Morsel`. *sep* используется для объединения "
"заголовков и по умолчанию представляет собой комбинацию ``'\\r\\n'`` (CRLF)."

#: ../../library/http.cookies.rst:108
msgid ""
"Return an embeddable JavaScript snippet, which, if run on a browser which "
"supports JavaScript, will act the same as if the HTTP headers was sent."
msgstr ""
"Повертає вбудований фрагмент JavaScript, який, якщо його запустити у "
"браузері, який підтримує JavaScript, діятиме так само, як якщо б було "
"надіслано заголовки HTTP."

#: ../../library/http.cookies.rst:111 ../../library/http.cookies.rst:207
#: ../../library/http.cookies.rst:215
msgid "The meaning for *attrs* is the same as in :meth:`output`."
msgstr "Значення *attrs* таке ж, як і в :meth:`output`."

#: ../../library/http.cookies.rst:116
msgid ""
"If *rawdata* is a string, parse it as an ``HTTP_COOKIE`` and add the values "
"found there as :class:`Morsel`\\ s. If it is a dictionary, it is equivalent "
"to::"
msgstr ""
"Якщо *rawdata* є рядком, проаналізуйте його як ``HTTP_COOKIE`` і додайте "
"знайдені значення як :class:`Morsel`\\ s. Якщо це словник, він "
"еквівалентний::"

#: ../../library/http.cookies.rst:119
msgid ""
"for k, v in rawdata.items():\n"
"    cookie[k] = v"
msgstr "для k, v в rawdata.items(): cookie[k] = v"

#: ../../library/http.cookies.rst:126
msgid "Morsel Objects"
msgstr "Objetos Morsel"

#: ../../library/http.cookies.rst:131
msgid "Abstract a key/value pair, which has some :rfc:`2109` attributes."
msgstr "Абстрагуйте пару ключ/значення, яка має деякі атрибути :rfc:`2109`."

#: ../../library/http.cookies.rst:133
msgid ""
"Morsels are dictionary-like objects, whose set of keys is constant --- the "
"valid :rfc:`2109` attributes, which are:"
msgstr ""
"Морсели — это объекты, подобные словарю, набор ключей которых является "
"постоянным — допустимые атрибуты :rfc:`2109`, а именно:"

#: ../../library/http.cookies.rst:146
msgid ""
"The attribute :attr:`httponly` specifies that the cookie is only transferred "
"in HTTP requests, and is not accessible through JavaScript. This is intended "
"to mitigate some forms of cross-site scripting."
msgstr ""
"Атрибут :attr:`httponly` вказує, що файл cookie передається лише в HTTP-"
"запитах і не доступний через JavaScript. Це призначено для пом’якшення "
"деяких форм міжсайтових сценаріїв."

#: ../../library/http.cookies.rst:150
msgid ""
"The attribute :attr:`samesite` specifies that the browser is not allowed to "
"send the cookie along with cross-site requests. This helps to mitigate CSRF "
"attacks. Valid values for this attribute are \"Strict\" and \"Lax\"."
msgstr ""
"Атрибут :attr:`samesite` вказує, що браузеру заборонено надсилати файли "
"cookie разом із міжсайтовими запитами. Це допомагає пом’якшити атаки CSRF. "
"Дійсні значення для цього атрибута: \"Strict\" і \"Lax\"."

#: ../../library/http.cookies.rst:154
msgid "The keys are case-insensitive and their default value is ``''``."
msgstr ""
"Ключі нечутливі до регістру, а їхнє значення за замовчуванням – ``''``."

#: ../../library/http.cookies.rst:156
msgid ""
":meth:`!__eq__` now takes :attr:`~Morsel.key` and :attr:`~Morsel.value` into "
"account."
msgstr ""
":meth:`!__eq__` теперь учитывает :attr:`~Morsel.key` и :attr:`~Morsel.value`."

#: ../../library/http.cookies.rst:160
msgid ""
"Attributes :attr:`~Morsel.key`, :attr:`~Morsel.value` and :attr:`~Morsel."
"coded_value` are read-only.  Use :meth:`~Morsel.set` for setting them."
msgstr ""
"Атрибути :attr:`~Morsel.key`, :attr:`~Morsel.value` і :attr:`~Morsel."
"coded_value` доступні лише для читання. Використовуйте :meth:`~Morsel.set` "
"для їх налаштування."

#: ../../library/http.cookies.rst:165
msgid "Added support for the :attr:`samesite` attribute."
msgstr "Додано підтримку атрибута :attr:`samesite`."

#: ../../library/http.cookies.rst:171
msgid "The value of the cookie."
msgstr "O valor do cookie."

#: ../../library/http.cookies.rst:176
msgid "The encoded value of the cookie --- this is what should be sent."
msgstr "Закодоване значення файлу cookie --- це те, що потрібно надіслати."

#: ../../library/http.cookies.rst:181
msgid "The name of the cookie."
msgstr "O nome do cookie."

#: ../../library/http.cookies.rst:186
msgid "Set the *key*, *value* and *coded_value* attributes."
msgstr "Установіть атрибути *key*, *value* і *coded_value*."

#: ../../library/http.cookies.rst:191
msgid "Whether *K* is a member of the set of keys of a :class:`Morsel`."
msgstr "Чи є *K* членом набору ключів :class:`Morsel`."

#: ../../library/http.cookies.rst:196
msgid ""
"Return a string representation of the Morsel, suitable to be sent as an HTTP "
"header. By default, all the attributes are included, unless *attrs* is "
"given, in which case it should be a list of attributes to use. *header* is "
"by default ``\"Set-Cookie:\"``."
msgstr ""
"Повертає рядкове представлення Morsel, придатне для надсилання як заголовок "
"HTTP. За замовчуванням включено всі атрибути, якщо не вказано *attrs*, у "
"цьому випадку це має бути список атрибутів для використання. *заголовок* за "
"замовчуванням ``\"Set-Cookie:\"``."

#: ../../library/http.cookies.rst:204
msgid ""
"Return an embeddable JavaScript snippet, which, if run on a browser which "
"supports JavaScript, will act the same as if the HTTP header was sent."
msgstr ""
"Повертає вбудований фрагмент JavaScript, який, якщо запустити в браузері, "
"який підтримує JavaScript, діятиме так само, як якщо б було надіслано "
"заголовок HTTP."

#: ../../library/http.cookies.rst:212
msgid ""
"Return a string representing the Morsel, without any surrounding HTTP or "
"JavaScript."
msgstr ""
"Повертає рядок, що представляє Morsel, без будь-якого оточуючого HTTP або "
"JavaScript."

#: ../../library/http.cookies.rst:220
msgid ""
"Update the values in the Morsel dictionary with the values in the dictionary "
"*values*.  Raise an error if any of the keys in the *values* dict is not a "
"valid :rfc:`2109` attribute."
msgstr ""
"Оновіть значення в словнику Morsel значеннями в словнику *values*. Викликає "
"помилку, якщо будь-який із ключів у *values* dict не є дійсним атрибутом :"
"rfc:`2109`."

#: ../../library/http.cookies.rst:224
msgid "an error is raised for invalid keys."
msgstr "виникає помилка для недійсних ключів."

#: ../../library/http.cookies.rst:230
msgid "Return a shallow copy of the Morsel object."
msgstr "Поверніть дрібну копію об’єкта Morsel."

#: ../../library/http.cookies.rst:232
msgid "return a Morsel object instead of a dict."
msgstr "повертає об’єкт Morsel замість dict."

#: ../../library/http.cookies.rst:238
msgid ""
"Raise an error if key is not a valid :rfc:`2109` attribute, otherwise behave "
"the same as :meth:`dict.setdefault`."
msgstr ""
"Викликає помилку, якщо ключ не є дійсним атрибутом :rfc:`2109`, інакше веде "
"себе так само, як :meth:`dict.setdefault`."

#: ../../library/http.cookies.rst:245
msgid "Example"
msgstr "Exemplo"

#: ../../library/http.cookies.rst:247
msgid ""
"The following example demonstrates how to use the :mod:`http.cookies` module."
msgstr ""
"У наступному прикладі показано, як використовувати модуль :mod:`http."
"cookies`."

#: ../../library/http.cookies.rst:249
msgid ""
">>> from http import cookies\n"
">>> C = cookies.SimpleCookie()\n"
">>> C[\"fig\"] = \"newton\"\n"
">>> C[\"sugar\"] = \"wafer\"\n"
">>> print(C) # generate HTTP headers\n"
"Set-Cookie: fig=newton\n"
"Set-Cookie: sugar=wafer\n"
">>> print(C.output()) # same thing\n"
"Set-Cookie: fig=newton\n"
"Set-Cookie: sugar=wafer\n"
">>> C = cookies.SimpleCookie()\n"
">>> C[\"rocky\"] = \"road\"\n"
">>> C[\"rocky\"][\"path\"] = \"/cookie\"\n"
">>> print(C.output(header=\"Cookie:\"))\n"
"Cookie: rocky=road; Path=/cookie\n"
">>> print(C.output(attrs=[], header=\"Cookie:\"))\n"
"Cookie: rocky=road\n"
">>> C = cookies.SimpleCookie()\n"
">>> C.load(\"chips=ahoy; vienna=finger\") # load from a string (HTTP "
"header)\n"
">>> print(C)\n"
"Set-Cookie: chips=ahoy\n"
"Set-Cookie: vienna=finger\n"
">>> C = cookies.SimpleCookie()\n"
">>> C.load('keebler=\"E=everybody; L=\\\\\"Loves\\\\\"; fudge=\\\\012;\";')\n"
">>> print(C)\n"
"Set-Cookie: keebler=\"E=everybody; L=\\\"Loves\\\"; fudge=\\012;\"\n"
">>> C = cookies.SimpleCookie()\n"
">>> C[\"oreo\"] = \"doublestuff\"\n"
">>> C[\"oreo\"][\"path\"] = \"/\"\n"
">>> print(C)\n"
"Set-Cookie: oreo=doublestuff; Path=/\n"
">>> C = cookies.SimpleCookie()\n"
">>> C[\"twix\"] = \"none for you\"\n"
">>> C[\"twix\"].value\n"
"'none for you'\n"
">>> C = cookies.SimpleCookie()\n"
">>> C[\"number\"] = 7 # equivalent to C[\"number\"] = str(7)\n"
">>> C[\"string\"] = \"seven\"\n"
">>> C[\"number\"].value\n"
"'7'\n"
">>> C[\"string\"].value\n"
"'seven'\n"
">>> print(C)\n"
"Set-Cookie: number=7\n"
"Set-Cookie: string=seven"
msgstr ""
">>> from http import cookies\n"
">>> C = cookies.SimpleCookie()\n"
">>> C[\"fig\"] = \"newton\"\n"
">>> C[\"sugar\"] = \"wafer\"\n"
">>> print(C) # generate HTTP headers\n"
"Set-Cookie: fig=newton\n"
"Set-Cookie: sugar=wafer\n"
">>> print(C.output()) # same thing\n"
"Set-Cookie: fig=newton\n"
"Set-Cookie: sugar=wafer\n"
">>> C = cookies.SimpleCookie()\n"
">>> C[\"rocky\"] = \"road\"\n"
">>> C[\"rocky\"][\"path\"] = \"/cookie\"\n"
">>> print(C.output(header=\"Cookie:\"))\n"
"Cookie: rocky=road; Path=/cookie\n"
">>> print(C.output(attrs=[], header=\"Cookie:\"))\n"
"Cookie: rocky=road\n"
">>> C = cookies.SimpleCookie()\n"
">>> C.load(\"chips=ahoy; vienna=finger\") # load from a string (HTTP "
"header)\n"
">>> print(C)\n"
"Set-Cookie: chips=ahoy\n"
"Set-Cookie: vienna=finger\n"
">>> C = cookies.SimpleCookie()\n"
">>> C.load('keebler=\"E=everybody; L=\\\\\"Loves\\\\\"; fudge=\\\\012;\";')\n"
">>> print(C)\n"
"Set-Cookie: keebler=\"E=everybody; L=\\\"Loves\\\"; fudge=\\012;\"\n"
">>> C = cookies.SimpleCookie()\n"
">>> C[\"oreo\"] = \"doublestuff\"\n"
">>> C[\"oreo\"][\"path\"] = \"/\"\n"
">>> print(C)\n"
"Set-Cookie: oreo=doublestuff; Path=/\n"
">>> C = cookies.SimpleCookie()\n"
">>> C[\"twix\"] = \"none for you\"\n"
">>> C[\"twix\"].value\n"
"'none for you'\n"
">>> C = cookies.SimpleCookie()\n"
">>> C[\"number\"] = 7 # equivalent to C[\"number\"] = str(7)\n"
">>> C[\"string\"] = \"seven\"\n"
">>> C[\"number\"].value\n"
"'7'\n"
">>> C[\"string\"].value\n"
"'seven'\n"
">>> print(C)\n"
"Set-Cookie: number=7\n"
"Set-Cookie: string=seven"
