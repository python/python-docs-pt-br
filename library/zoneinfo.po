# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-08 14:49-0300\n"
"PO-Revision-Date: 2025-08-15 19:01+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/zoneinfo.rst:2
msgid ":mod:`!zoneinfo` --- IANA time zone support"
msgstr ":mod:`!zoneinfo` --- Suporte a fuso horário da IANA"

#: ../../library/zoneinfo.rst:12
msgid "**Source code:** :source:`Lib/zoneinfo`"
msgstr "**Código-fonte:** :source:`Lib/zoneinfo`"

#: ../../library/zoneinfo.rst:16
msgid ""
"The :mod:`zoneinfo` module provides a concrete time zone implementation to "
"support the IANA time zone database as originally specified in :pep:`615`. "
"By default, :mod:`zoneinfo` uses the system's time zone data if available; "
"if no system time zone data is available, the library will fall back to "
"using the first-party :pypi:`tzdata` package available on PyPI."
msgstr ""
"O módulo :mod:`zoneinfo` fornece uma implementação concreta de fuso horário "
"para oferecer suporte ao banco de dados de fuso horário da IANA, conforme "
"especificado originalmente na :pep:`615`. Por padrão, :mod:`zoneinfo` usa os "
"dados de fuso horário do sistema, se disponíveis; se nenhum dado de fuso "
"horário do sistema estiver disponível, a biblioteca voltará a usar o pacote "
"original :pypi:`tzdata` disponível no PyPI."

#: ../../library/zoneinfo.rst:24
msgid "Module: :mod:`datetime`"
msgstr "Módulo: :mod:`datetime`"

#: ../../library/zoneinfo.rst:25
msgid ""
"Provides the :class:`~datetime.time` and :class:`~datetime.datetime` types "
"with which the :class:`ZoneInfo` class is designed to be used."
msgstr ""
"Fornece os tipos :class:`~datetime.time` e :class:`~datetime.datetime` com "
"os quais a classe :class:`ZoneInfo` foi projetada para ser usada."

#: ../../library/zoneinfo.rst:28
msgid "Package :pypi:`tzdata`"
msgstr "Pacote :pypi:`tzdata`"

#: ../../library/zoneinfo.rst:29
msgid ""
"First-party package maintained by the CPython core developers to supply time "
"zone data via PyPI."
msgstr ""
"Pacote próprio mantido pelos desenvolvedores principais do CPython para "
"fornecer dados de fuso horário via PyPI."

#: ../../includes/wasm-notavail.rst:3
msgid "Availability"
msgstr "Disponibilidade"

#: ../../includes/wasm-notavail.rst:5
msgid ""
"This module does not work or is not available on WebAssembly. See :ref:`wasm-"
"availability` for more information."
msgstr ""
"Este módulo não funciona ou não está disponível em WebAssembly. Veja :ref:"
"`wasm-availability` para mais informações."

#: ../../library/zoneinfo.rst:35
msgid "Using ``ZoneInfo``"
msgstr "Usando ``ZoneInfo``"

#: ../../library/zoneinfo.rst:37
msgid ""
":class:`ZoneInfo` is a concrete implementation of the :class:`datetime."
"tzinfo` abstract base class, and is intended to be attached to ``tzinfo``, "
"either via the constructor, the :meth:`datetime.replace <datetime.datetime."
"replace>` method or :meth:`datetime.astimezone <datetime.datetime."
"astimezone>`::"
msgstr ""
":class:`ZoneInfo` é uma implementação concreta da classe base abstrata :"
"class:`datetime.tzinfo` e deve ser anexada a ``tzinfo``, por meio do "
"construtor, do método :meth:`datetime.replace <datetime.datetime.replace>` "
"ou :meth:`datetime.astimezone <datetime.datetime.astimezone>`::"

#: ../../library/zoneinfo.rst:42
msgid ""
">>> from zoneinfo import ZoneInfo\n"
">>> from datetime import datetime, timedelta\n"
"\n"
">>> dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo(\"America/"
"Los_Angeles\"))\n"
">>> print(dt)\n"
"2020-10-31 12:00:00-07:00\n"
"\n"
">>> dt.tzname()\n"
"'PDT'"
msgstr ""
">>> from zoneinfo import ZoneInfo\n"
">>> from datetime import datetime, timedelta\n"
"\n"
">>> dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo(\"America/"
"Los_Angeles\"))\n"
">>> print(dt)\n"
"2020-10-31 12:00:00-07:00\n"
"\n"
">>> dt.tzname()\n"
"'PDT'"

#: ../../library/zoneinfo.rst:52
msgid ""
"Datetimes constructed in this way are compatible with datetime arithmetic "
"and handle daylight saving time transitions with no further intervention::"
msgstr ""
"Datas e horas construídas dessa maneira são compatíveis com a aritmética de "
"data e hora e lidam com transições de horário de verão sem intervenção "
"adicional::"

#: ../../library/zoneinfo.rst:55
msgid ""
">>> dt_add = dt + timedelta(days=1)\n"
"\n"
">>> print(dt_add)\n"
"2020-11-01 12:00:00-08:00\n"
"\n"
">>> dt_add.tzname()\n"
"'PST'"
msgstr ""
">>> dt_add = dt + timedelta(days=1)\n"
"\n"
">>> print(dt_add)\n"
"2020-11-01 12:00:00-08:00\n"
"\n"
">>> dt_add.tzname()\n"
"'PST'"

#: ../../library/zoneinfo.rst:63
msgid ""
"These time zones also support the :attr:`~datetime.datetime.fold` attribute "
"introduced in :pep:`495`.  During offset transitions which induce ambiguous "
"times (such as a daylight saving time to standard time transition), the "
"offset from *before* the transition is used when ``fold=0``, and the offset "
"*after* the transition is used when ``fold=1``, for example::"
msgstr ""
"Esses fusos horários também oferecem suporte ao atributo :attr:`~datetime."
"datetime.fold` introduzido em :pep:`495`. Durante transições de deslocamento "
"que induzem horários ambíguos (como uma transição do horário de verão para o "
"horário padrão), o deslocamento *anterior* à transição é usado quando "
"``fold=0``, e o deslocamento *posterior* à transição é usado quando "
"``fold=1``, por exemplo:"

#: ../../library/zoneinfo.rst:69
msgid ""
">>> dt = datetime(2020, 11, 1, 1, tzinfo=ZoneInfo(\"America/Los_Angeles\"))\n"
">>> print(dt)\n"
"2020-11-01 01:00:00-07:00\n"
"\n"
">>> print(dt.replace(fold=1))\n"
"2020-11-01 01:00:00-08:00"
msgstr ""
">>> dt = datetime(2020, 11, 1, 1, tzinfo=ZoneInfo(\"America/Los_Angeles\"))\n"
">>> print(dt)\n"
"2020-11-01 01:00:00-07:00\n"
"\n"
">>> print(dt.replace(fold=1))\n"
"2020-11-01 01:00:00-08:00"

#: ../../library/zoneinfo.rst:76
msgid ""
"When converting from another time zone, the fold will be set to the correct "
"value::"
msgstr ""
"Ao converter de outro fuso horário, a dobra será definida para o valor "
"correto::"

#: ../../library/zoneinfo.rst:79
msgid ""
">>> from datetime import timezone\n"
">>> LOS_ANGELES = ZoneInfo(\"America/Los_Angeles\")\n"
">>> dt_utc = datetime(2020, 11, 1, 8, tzinfo=timezone.utc)\n"
"\n"
">>> # Before the PDT -> PST transition\n"
">>> print(dt_utc.astimezone(LOS_ANGELES))\n"
"2020-11-01 01:00:00-07:00\n"
"\n"
">>> # After the PDT -> PST transition\n"
">>> print((dt_utc + timedelta(hours=1)).astimezone(LOS_ANGELES))\n"
"2020-11-01 01:00:00-08:00"
msgstr ""
">>> from datetime import timezone\n"
">>> LOS_ANGELES = ZoneInfo(\"America/Los_Angeles\")\n"
">>> dt_utc = datetime(2020, 11, 1, 8, tzinfo=timezone.utc)\n"
"\n"
">>> # Antes da transição PDT -> PST\n"
">>> print(dt_utc.astimezone(LOS_ANGELES))\n"
"2020-11-01 01:00:00-07:00\n"
"\n"
">>> # Após a transição PDT -> PST\n"
">>> print((dt_utc + timedelta(hours=1)).astimezone(LOS_ANGELES))\n"
"2020-11-01 01:00:00-08:00"

#: ../../library/zoneinfo.rst:92
msgid "Data sources"
msgstr "Fontes de dados"

#: ../../library/zoneinfo.rst:94
msgid ""
"The ``zoneinfo`` module does not directly provide time zone data, and "
"instead pulls time zone information from the system time zone database or "
"the first-party PyPI package :pypi:`tzdata`, if available. Some systems, "
"including notably Windows systems, do not have an IANA database available, "
"and so for projects targeting cross-platform compatibility that require time "
"zone data, it is recommended to declare a dependency on tzdata. If neither "
"system data nor tzdata are available, all calls to :class:`ZoneInfo` will "
"raise :exc:`ZoneInfoNotFoundError`."
msgstr ""
"O módulo ``zoneinfo`` não fornece dados de fuso horário diretamente, mas, em "
"vez disso, extrai informações de fuso horário do banco de dados de fuso "
"horário do sistema ou do pacote PyPI original :pypi:`tzdata`, se disponível. "
"Alguns sistemas, incluindo principalmente os Windows, não possuem um banco "
"de dados IANA disponível e, portanto, para projetos que buscam "
"compatibilidade multiplataforma e exigem dados de fuso horário, recomenda-se "
"declarar uma dependência em tzdata. Se nem os dados do sistema nem o tzdata "
"estiverem disponíveis, todas as chamadas para :class:`ZoneInfo` levantarão :"
"exc:`ZoneInfoNotFoundError`."

#: ../../library/zoneinfo.rst:106
msgid "Configuring the data sources"
msgstr "Configurando as fontes de dados"

#: ../../library/zoneinfo.rst:108
msgid ""
"When ``ZoneInfo(key)`` is called, the constructor first searches the "
"directories specified in :data:`TZPATH` for a file matching ``key``, and on "
"failure looks for a match in the tzdata package. This behavior can be "
"configured in three ways:"
msgstr ""
"Quando ``ZoneInfo(key)`` é chamado, o construtor primeiro pesquisa nos "
"diretórios especificados em :data:`TZPATH` por um arquivo que corresponda a "
"``key`` e, em caso de falha, procura uma correspondência no pacote tzdata. "
"Esse comportamento pode ser configurado de três maneiras:"

#: ../../library/zoneinfo.rst:113
msgid ""
"The default :data:`TZPATH` when not otherwise specified can be configured "
"at :ref:`compile time <zoneinfo_data_compile_time_config>`."
msgstr ""
"O padrão :data:`TZPATH`, quando não especificado de outra forma, pode ser "
"configurado em :ref:`tempo de compilação "
"<zoneinfo_data_compile_time_config>`."

#: ../../library/zoneinfo.rst:115
msgid ""
":data:`TZPATH` can be configured using :ref:`an environment variable "
"<zoneinfo_data_environment_var>`."
msgstr ""
":data:`TZPATH` pode ser configurado usando :ref:`uma variável de ambiente "
"<zoneinfo_data_environment_var>`."

#: ../../library/zoneinfo.rst:117
msgid ""
"At :ref:`runtime <zoneinfo_data_runtime_config>`, the search path can be "
"manipulated using the :func:`reset_tzpath` function."
msgstr ""
"Em :ref:`tempo de execução <zoneinfo_data_runtime_config>`, o caminho de "
"pesquisa pode ser manipulado usando a função :func:`reset_tzpath`."

#: ../../library/zoneinfo.rst:123
msgid "Compile-time configuration"
msgstr "Configuração em tempo de compilação"

#: ../../library/zoneinfo.rst:125
msgid ""
"The default :data:`TZPATH` includes several common deployment locations for "
"the time zone database (except on Windows, where there are no \"well-known\" "
"locations for time zone data). On POSIX systems, downstream distributors and "
"those building Python from source who know where their system time zone data "
"is deployed may change the default time zone path by specifying the compile-"
"time option ``TZPATH`` (or, more likely, the :option:`configure flag --with-"
"tzpath <--with-tzpath>`), which should be a string delimited by :data:`os."
"pathsep`."
msgstr ""
"O :data:`TZPATH` padrão inclui vários locais de implantação comuns para o "
"banco de dados de fuso horário (exceto no Windows, onde não há locais "
"\"conhecidos\" para dados de fuso horário). Em sistemas POSIX, "
"distribuidores downstream e aqueles que constroem o Python a partir do "
"código-fonte e que sabem onde os dados de fuso horário do sistema estão "
"implantados podem alterar o caminho do fuso horário padrão especificando a "
"opção de tempo de compilação ``TZPATH`` (ou, mais provavelmente, o :option:"
"`sinalizador de configuração --with-tzpath <--with-tzpath>`), que deve ser "
"uma string delimitada por :data:`os.pathsep`."

#: ../../library/zoneinfo.rst:134
msgid ""
"On all platforms, the configured value is available as the ``TZPATH`` key "
"in :func:`sysconfig.get_config_var`."
msgstr ""
"Em todas as plataformas, o valor configurado está disponível como a chave "
"``TZPATH`` em :func:`sysconfig.get_config_var`."

#: ../../library/zoneinfo.rst:140
msgid "Environment configuration"
msgstr "Configuração do ambiente"

#: ../../library/zoneinfo.rst:142
msgid ""
"When initializing :data:`TZPATH` (either at import time or whenever :func:"
"`reset_tzpath` is called with no arguments), the ``zoneinfo`` module will "
"use the environment variable ``PYTHONTZPATH``, if it exists, to set the "
"search path."
msgstr ""
"Ao inicializar :data:`TZPATH` (no momento da importação ou sempre que :func:"
"`reset_tzpath` for chamado sem argumentos), o módulo ``zoneinfo`` usará a "
"variável de ambiente ``PYTHONTZPATH``, se existir, para definir o caminho de "
"pesquisa."

#: ../../library/zoneinfo.rst:149
msgid ""
"This is an :data:`os.pathsep`-separated string containing the time zone "
"search path to use. It must consist of only absolute rather than relative "
"paths. Relative components specified in ``PYTHONTZPATH`` will not be used, "
"but otherwise the behavior when a relative path is specified is "
"implementation-defined; CPython will raise :exc:`InvalidTZPathWarning`, but "
"other implementations are free to silently ignore the erroneous component or "
"raise an exception."
msgstr ""
"Esta é uma string separada por :data:`os.pathsep` contendo o caminho de "
"pesquisa de fuso horário a ser usado. Ela deve consistir apenas em caminhos "
"absolutos, e não relativos. Componentes relativos especificados em "
"``PYTHONTZPATH`` não serão usados, mas, caso contrário, o comportamento "
"quando um caminho relativo é especificado é definido pela implementação; o "
"CPython levantará :exc:`InvalidTZPathWarning`, mas outras implementações "
"podem ignorar silenciosamente o componente incorreto ou levantar uma exceção."

#: ../../library/zoneinfo.rst:157
msgid ""
"To set the system to ignore the system data and use the tzdata package "
"instead, set ``PYTHONTZPATH=\"\"``."
msgstr ""
"Para configurar o sistema para ignorar os dados do sistema e usar o pacote "
"tzdata, defina ``PYTHONTZPATH=\"\"``."

#: ../../library/zoneinfo.rst:163
msgid "Runtime configuration"
msgstr "Configuração em tempo de execução"

#: ../../library/zoneinfo.rst:165
msgid ""
"The TZ search path can also be configured at runtime using the :func:"
"`reset_tzpath` function. This is generally not an advisable operation, "
"though it is reasonable to use it in test functions that require the use of "
"a specific time zone path (or require disabling access to the system time "
"zones)."
msgstr ""
"O caminho de busca TZ também pode ser configurado em tempo de execução "
"usando a função :func:`reset_tzpath`. Geralmente, essa não é uma operação "
"aconselhável, embora seja razoável usá-la em funções de teste que exigem o "
"uso de um caminho de fuso horário específico (ou que exijam a desativação do "
"acesso aos fusos horários do sistema)."

#: ../../library/zoneinfo.rst:172
msgid "The ``ZoneInfo`` class"
msgstr "A classe ``ZoneInfo``"

#: ../../library/zoneinfo.rst:176
msgid ""
"A concrete :class:`datetime.tzinfo` subclass that represents an IANA time "
"zone specified by the string ``key``. Calls to the primary constructor will "
"always return objects that compare identically; put another way, barring "
"cache invalidation via :meth:`ZoneInfo.clear_cache`, for all values of "
"``key``, the following assertion will always be true:"
msgstr ""
"Uma subclasse concreta de :class:`datetime.tzinfo` que representa um fuso "
"horário IANA especificado pela string ``key``. Chamadas ao construtor "
"primário sempre retornarão objetos que sejam idênticos em comparação; em "
"outras palavras, exceto pela invalidação de cache via :meth:`ZoneInfo."
"clear_cache`, para todos os valores de ``key``, a seguinte asserção será "
"sempre verdadeira:"

#: ../../library/zoneinfo.rst:182
msgid ""
"a = ZoneInfo(key)\n"
"b = ZoneInfo(key)\n"
"assert a is b"
msgstr ""
"a = ZoneInfo(key)\n"
"b = ZoneInfo(key)\n"
"assert a is b"

#: ../../library/zoneinfo.rst:188
msgid ""
"``key`` must be in the form of a relative, normalized POSIX path, with no up-"
"level references. The constructor will raise :exc:`ValueError` if a non-"
"conforming key is passed."
msgstr ""
"``key`` deve estar no formato de um caminho POSIX relativo e normalizado, "
"sem referências de nível superior. O construtor levantará :exc:`ValueError` "
"se uma chave não conforme for passada."

#: ../../library/zoneinfo.rst:192
msgid ""
"If no file matching ``key`` is found, the constructor will raise :exc:"
"`ZoneInfoNotFoundError`."
msgstr ""
"Se nenhum arquivo correspondente a ``key`` for encontrado, o construtor "
"levantará :exc:`ZoneInfoNotFoundError`."

#: ../../library/zoneinfo.rst:196
msgid "The ``ZoneInfo`` class has two alternate constructors:"
msgstr "A classe ``ZoneInfo`` tem dois construtores alternativos:"

#: ../../library/zoneinfo.rst:200
msgid ""
"Constructs a ``ZoneInfo`` object from a file-like object returning bytes (e."
"g. a file opened in binary mode or an :class:`io.BytesIO` object). Unlike "
"the primary constructor, this always constructs a new object."
msgstr ""

#: ../../library/zoneinfo.rst:204
msgid ""
"The ``key`` parameter sets the name of the zone for the purposes of :py:meth:"
"`~object.__str__` and :py:meth:`~object.__repr__`."
msgstr ""

#: ../../library/zoneinfo.rst:207
msgid ""
"Objects created via this constructor cannot be pickled (see `pickling`_)."
msgstr ""

#: ../../library/zoneinfo.rst:211
msgid ""
"An alternate constructor that bypasses the constructor's cache. It is "
"identical to the primary constructor, but returns a new object on each call. "
"This is most likely to be useful for testing or demonstration purposes, but "
"it can also be used to create a system with a different cache invalidation "
"strategy."
msgstr ""

#: ../../library/zoneinfo.rst:217
msgid ""
"Objects created via this constructor will also bypass the cache of a "
"deserializing process when unpickled."
msgstr ""

#: ../../library/zoneinfo.rst:224
msgid ""
"Using this constructor may change the semantics of your datetimes in "
"surprising ways, only use it if you know that you need to."
msgstr ""

#: ../../library/zoneinfo.rst:227
msgid "The following class methods are also available:"
msgstr ""

#: ../../library/zoneinfo.rst:231
msgid ""
"A method for invalidating the cache on the ``ZoneInfo`` class. If no "
"arguments are passed, all caches are invalidated and the next call to the "
"primary constructor for each key will return a new instance."
msgstr ""

#: ../../library/zoneinfo.rst:235
msgid ""
"If an iterable of key names is passed to the ``only_keys`` parameter, only "
"the specified keys will be removed from the cache. Keys passed to "
"``only_keys`` but not found in the cache are ignored."
msgstr ""

#: ../../library/zoneinfo.rst:243
msgid ""
"Invoking this function may change the semantics of datetimes using "
"``ZoneInfo`` in surprising ways; this modifies module state and thus may "
"have wide-ranging effects. Only use it if you know that you need to."
msgstr ""

#: ../../library/zoneinfo.rst:248
msgid "The class has one attribute:"
msgstr "A classe possui um atributo:"

#: ../../library/zoneinfo.rst:252
msgid ""
"This is a read-only :term:`attribute` that returns the value of ``key`` "
"passed to the constructor, which should be a lookup key in the IANA time "
"zone database (e.g. ``America/New_York``, ``Europe/Paris`` or ``Asia/"
"Tokyo``)."
msgstr ""

#: ../../library/zoneinfo.rst:257
msgid ""
"For zones constructed from file without specifying a ``key`` parameter, this "
"will be set to ``None``."
msgstr ""

#: ../../library/zoneinfo.rst:262
msgid ""
"Although it is a somewhat common practice to expose these to end users, "
"these values are designed to be primary keys for representing the relevant "
"zones and not necessarily user-facing elements.  Projects like CLDR (the "
"Unicode Common Locale Data Repository) can be used to get more user-friendly "
"strings from these keys."
msgstr ""

#: ../../library/zoneinfo.rst:269
msgid "String representations"
msgstr ""

#: ../../library/zoneinfo.rst:271
msgid ""
"The string representation returned when calling :py:class:`str` on a :class:"
"`ZoneInfo` object defaults to using the :attr:`ZoneInfo.key` attribute (see "
"the note on usage in the attribute documentation)::"
msgstr ""

#: ../../library/zoneinfo.rst:275
msgid ""
">>> zone = ZoneInfo(\"Pacific/Kwajalein\")\n"
">>> str(zone)\n"
"'Pacific/Kwajalein'\n"
"\n"
">>> dt = datetime(2020, 4, 1, 3, 15, tzinfo=zone)\n"
">>> f\"{dt.isoformat()} [{dt.tzinfo}]\"\n"
"'2020-04-01T03:15:00+12:00 [Pacific/Kwajalein]'"
msgstr ""

#: ../../library/zoneinfo.rst:283
msgid ""
"For objects constructed from a file without specifying a ``key`` parameter, "
"``str`` falls back to calling :func:`repr`. ``ZoneInfo``'s ``repr`` is "
"implementation-defined and not necessarily stable between versions, but it "
"is guaranteed not to be a valid ``ZoneInfo`` key."
msgstr ""

#: ../../library/zoneinfo.rst:291
msgid "Pickle serialization"
msgstr ""

#: ../../library/zoneinfo.rst:293
msgid ""
"Rather than serializing all transition data, ``ZoneInfo`` objects are "
"serialized by key, and ``ZoneInfo`` objects constructed from files (even "
"those with a value for ``key`` specified) cannot be pickled."
msgstr ""

#: ../../library/zoneinfo.rst:297
msgid "The behavior of a ``ZoneInfo`` file depends on how it was constructed:"
msgstr ""

#: ../../library/zoneinfo.rst:299
msgid ""
"``ZoneInfo(key)``: When constructed with the primary constructor, a "
"``ZoneInfo`` object is serialized by key, and when deserialized, the "
"deserializing process uses the primary and thus it is expected that these "
"are expected to be the same object as other references to the same time "
"zone.  For example, if ``europe_berlin_pkl`` is a string containing a pickle "
"constructed from ``ZoneInfo(\"Europe/Berlin\")``, one would expect the "
"following behavior:"
msgstr ""

#: ../../library/zoneinfo.rst:307
msgid ""
">>> a = ZoneInfo(\"Europe/Berlin\")\n"
">>> b = pickle.loads(europe_berlin_pkl)\n"
">>> a is b\n"
"True"
msgstr ""

#: ../../library/zoneinfo.rst:314
msgid ""
"``ZoneInfo.no_cache(key)``: When constructed from the cache-bypassing "
"constructor, the ``ZoneInfo`` object is also serialized by key, but when "
"deserialized, the deserializing process uses the cache bypassing "
"constructor. If ``europe_berlin_pkl_nc`` is a string containing a pickle "
"constructed from ``ZoneInfo.no_cache(\"Europe/Berlin\")``, one would expect "
"the following behavior:"
msgstr ""

#: ../../library/zoneinfo.rst:321
msgid ""
">>> a = ZoneInfo(\"Europe/Berlin\")\n"
">>> b = pickle.loads(europe_berlin_pkl_nc)\n"
">>> a is b\n"
"False"
msgstr ""

#: ../../library/zoneinfo.rst:328
msgid ""
"``ZoneInfo.from_file(file_obj, /, key=None)``: When constructed from a file, "
"the ``ZoneInfo`` object raises an exception on pickling. If an end user "
"wants to pickle a ``ZoneInfo`` constructed from a file, it is recommended "
"that they use a wrapper type or a custom serialization function: either "
"serializing by key or storing the contents of the file object and "
"serializing that."
msgstr ""

#: ../../library/zoneinfo.rst:334
msgid ""
"This method of serialization requires that the time zone data for the "
"required key be available on both the serializing and deserializing side, "
"similar to the way that references to classes and functions are expected to "
"exist in both the serializing and deserializing environments. It also means "
"that no guarantees are made about the consistency of results when unpickling "
"a ``ZoneInfo`` pickled in an environment with a different version of the "
"time zone data."
msgstr ""

#: ../../library/zoneinfo.rst:342
msgid "Functions"
msgstr "Funções"

#: ../../library/zoneinfo.rst:346
msgid ""
"Get a set containing all the valid keys for IANA time zones available "
"anywhere on the time zone path. This is recalculated on every call to the "
"function."
msgstr ""

#: ../../library/zoneinfo.rst:350
msgid ""
"This function only includes canonical zone names and does not include "
"\"special\" zones such as those under the ``posix/`` and ``right/`` "
"directories, or the ``posixrules`` zone."
msgstr ""

#: ../../library/zoneinfo.rst:356
msgid ""
"This function may open a large number of files, as the best way to determine "
"if a file on the time zone path is a valid time zone is to read the \"magic "
"string\" at the beginning."
msgstr ""

#: ../../library/zoneinfo.rst:362
msgid ""
"These values are not designed to be exposed to end-users; for user facing "
"elements, applications should use something like CLDR (the Unicode Common "
"Locale Data Repository) to get more user-friendly strings. See also the "
"cautionary note on :attr:`ZoneInfo.key`."
msgstr ""

#: ../../library/zoneinfo.rst:369
msgid ""
"Sets or resets the time zone search path (:data:`TZPATH`) for the module. "
"When called with no arguments, :data:`TZPATH` is set to the default value."
msgstr ""

#: ../../library/zoneinfo.rst:372
msgid ""
"Calling ``reset_tzpath`` will not invalidate the :class:`ZoneInfo` cache, "
"and so calls to the primary ``ZoneInfo`` constructor will only use the new "
"``TZPATH`` in the case of a cache miss."
msgstr ""

#: ../../library/zoneinfo.rst:376
msgid ""
"The ``to`` parameter must be a :term:`sequence` of strings or :class:`os."
"PathLike` and not a string, all of which must be absolute paths. :exc:"
"`ValueError` will be raised if something other than an absolute path is "
"passed."
msgstr ""

#: ../../library/zoneinfo.rst:382
msgid "Globals"
msgstr ""

#: ../../library/zoneinfo.rst:386
msgid ""
"A read-only sequence representing the time zone search path -- when "
"constructing a ``ZoneInfo`` from a key, the key is joined to each entry in "
"the ``TZPATH``, and the first file found is used."
msgstr ""

#: ../../library/zoneinfo.rst:390
msgid ""
"``TZPATH`` may contain only absolute paths, never relative paths, regardless "
"of how it is configured."
msgstr ""

#: ../../library/zoneinfo.rst:393
msgid ""
"The object that ``zoneinfo.TZPATH`` points to may change in response to a "
"call to :func:`reset_tzpath`, so it is recommended to use ``zoneinfo."
"TZPATH`` rather than importing ``TZPATH`` from ``zoneinfo`` or assigning a "
"long-lived variable to ``zoneinfo.TZPATH``."
msgstr ""

#: ../../library/zoneinfo.rst:398
msgid ""
"For more information on configuring the time zone search path, see :ref:"
"`zoneinfo_data_configuration`."
msgstr ""

#: ../../library/zoneinfo.rst:402
msgid "Exceptions and warnings"
msgstr ""

#: ../../library/zoneinfo.rst:406
msgid ""
"Raised when construction of a :class:`ZoneInfo` object fails because the "
"specified key could not be found on the system. This is a subclass of :exc:"
"`KeyError`."
msgstr ""

#: ../../library/zoneinfo.rst:412
msgid ""
"Raised when :envvar:`PYTHONTZPATH` contains an invalid component that will "
"be filtered out, such as a relative path."
msgstr ""
