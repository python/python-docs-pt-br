# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2017
# (Douglas da Silva) <dementikovalev@yandex.ru>, 2019
# Marco Rougeth <marco@rougeth.com>, 2020
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-11 17:51+0000\n"
"PO-Revision-Date: 2017-02-16 23:28+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/struct.rst:2
msgid ":mod:`struct` --- Interpret bytes as packed binary data"
msgstr ":mod:`struct` --- Інтерпретувати байти як упаковані двійкові дані"

#: ../../library/struct.rst:7
msgid "**Source code:** :source:`Lib/struct.py`"
msgstr "**Código-fonte:** :source:`Lib/struct.py`"

#: ../../library/struct.rst:15
msgid ""
"This module performs conversions between Python values and C structs "
"represented as Python :class:`bytes` objects.  This can be used in handling "
"binary data stored in files or from network connections, among other "
"sources.  It uses :ref:`struct-format-strings` as compact descriptions of "
"the layout of the C structs and the intended conversion to/from Python "
"values."
msgstr ""

#: ../../library/struct.rst:23
msgid ""
"By default, the result of packing a given C struct includes pad bytes in "
"order to maintain proper alignment for the C types involved; similarly, "
"alignment is taken into account when unpacking.  This behavior is chosen so "
"that the bytes of a packed struct correspond exactly to the layout in memory "
"of the corresponding C struct.  To handle platform-independent data formats "
"or omit implicit pad bytes, use ``standard`` size and alignment instead of "
"``native`` size and alignment: see :ref:`struct-alignment` for details."
msgstr ""

#: ../../library/struct.rst:31
msgid ""
"Several :mod:`struct` functions (and methods of :class:`Struct`) take a "
"*buffer* argument.  This refers to objects that implement the :ref:"
"`bufferobjects` and provide either a readable or read-writable buffer.  The "
"most common types used for that purpose are :class:`bytes` and :class:"
"`bytearray`, but many other types that can be viewed as an array of bytes "
"implement the buffer protocol, so that they can be read/filled without "
"additional copying from a :class:`bytes` object."
msgstr ""
"Várias funções :mod:`struct` (e métodos de :class:`Struct`) recebem um "
"argumento *buffer*. Isso se refere a objetos que implementam :ref:"
"`bufferobjects` e fornecem um buffer legível ou de leitura-gravação. Os "
"tipos mais comuns usados para esse propósito são :class:`bytes` e :class:"
"`bytearray`, mas muitos outros tipos que podem ser vistos como uma matriz de "
"bytes implementam o protocolo de buffer, para que possam ser lidos/"
"preenchidos sem cópia adicional de um objeto :class:`bytes`."

#: ../../library/struct.rst:40
msgid "Functions and Exceptions"
msgstr "Funções e exceções"

#: ../../library/struct.rst:42
msgid "The module defines the following exception and functions:"
msgstr "O módulo define as seguintes exceções e funções:"

#: ../../library/struct.rst:47
msgid ""
"Exception raised on various occasions; argument is a string describing what "
"is wrong."
msgstr ""
"Exceção levantada em várias ocasiões; argumento é uma string que descreve o "
"que está errado."

#: ../../library/struct.rst:53
msgid ""
"Return a bytes object containing the values *v1*, *v2*, ... packed according "
"to the format string *format*.  The arguments must match the values required "
"by the format exactly."
msgstr ""
"Повертає об’єкт bytes, що містить значення *v1*, *v2*, ... упаковані "
"відповідно до рядка формату *format*. Аргументи мають точно відповідати "
"значенням, які вимагає формат."

#: ../../library/struct.rst:60
msgid ""
"Pack the values *v1*, *v2*, ... according to the format string *format* and "
"write the packed bytes into the writable buffer *buffer* starting at "
"position *offset*.  Note that *offset* is a required argument."
msgstr ""
"Упакуйте значення *v1*, *v2*, ... відповідно до рядка формату *format* і "
"запишіть упаковані байти в записуваний буфер *buffer*, починаючи з позиції "
"*offset*. Зауважте, що *offset* є обов’язковим аргументом."

#: ../../library/struct.rst:67
msgid ""
"Unpack from the buffer *buffer* (presumably packed by ``pack(format, ...)``) "
"according to the format string *format*.  The result is a tuple even if it "
"contains exactly one item.  The buffer's size in bytes must match the size "
"required by the format, as reflected by :func:`calcsize`."
msgstr ""
"Розпакуйте з буфера *buffer* (імовірно запакованого ``pack(format, ...)``) "
"відповідно до рядка формату *format*. Результатом є кортеж, навіть якщо він "
"містить рівно один елемент. Розмір буфера в байтах має відповідати розміру, "
"який вимагає формат, як це відображається :func:`calcsize`."

#: ../../library/struct.rst:75
msgid ""
"Unpack from *buffer* starting at position *offset*, according to the format "
"string *format*.  The result is a tuple even if it contains exactly one "
"item.  The buffer's size in bytes, starting at position *offset*, must be at "
"least the size required by the format, as reflected by :func:`calcsize`."
msgstr ""
"Розпакуйте з *buffer*, починаючи з позиції *offset*, відповідно до рядка "
"формату *format*. Результатом є кортеж, навіть якщо він містить рівно один "
"елемент. Розмір буфера в байтах, починаючи з позиції *offset*, має бути "
"принаймні розміром, який вимагається форматом, що відображається :func:"
"`calcsize`."

#: ../../library/struct.rst:83
msgid ""
"Iteratively unpack from the buffer *buffer* according to the format string "
"*format*.  This function returns an iterator which will read equally-sized "
"chunks from the buffer until all its contents have been consumed.  The "
"buffer's size in bytes must be a multiple of the size required by the "
"format, as reflected by :func:`calcsize`."
msgstr ""

#: ../../library/struct.rst:89
msgid "Each iteration yields a tuple as specified by the format string."
msgstr "Кожна ітерація дає кортеж, як зазначено в рядку формату."

#: ../../library/struct.rst:96
msgid ""
"Return the size of the struct (and hence of the bytes object produced by "
"``pack(format, ...)``) corresponding to the format string *format*."
msgstr ""
"Повертає розмір структури (і, отже, об’єкта bytes, створеного "
"``pack(format, ...)``), що відповідає рядку формату *format*."

#: ../../library/struct.rst:103
msgid "Format Strings"
msgstr "Форматувати рядки"

#: ../../library/struct.rst:105
msgid ""
"Format strings are the mechanism used to specify the expected layout when "
"packing and unpacking data.  They are built up from :ref:`format-"
"characters`, which specify the type of data being packed/unpacked.  In "
"addition, there are special characters for controlling the :ref:`struct-"
"alignment`."
msgstr ""

#: ../../library/struct.rst:114
msgid "Byte Order, Size, and Alignment"
msgstr "Порядок байтів, розмір і вирівнювання"

#: ../../library/struct.rst:116
msgid ""
"By default, C types are represented in the machine's native format and byte "
"order, and properly aligned by skipping pad bytes if necessary (according to "
"the rules used by the C compiler)."
msgstr ""

#: ../../library/struct.rst:127
msgid ""
"Alternatively, the first character of the format string can be used to "
"indicate the byte order, size and alignment of the packed data, according to "
"the following table:"
msgstr ""
"Крім того, перший символ рядка формату можна використовувати для вказівки "
"порядку байтів, розміру та вирівнювання упакованих даних згідно з наведеною "
"нижче таблицею:"

#: ../../library/struct.rst:132
msgid "Character"
msgstr "Caractere"

#: ../../library/struct.rst:132
msgid "Byte order"
msgstr "Ordem de bytes"

#: ../../library/struct.rst:132
msgid "Size"
msgstr "Tamanho"

#: ../../library/struct.rst:132
msgid "Alignment"
msgstr "Alinhamento"

#: ../../library/struct.rst:134
msgid "``@``"
msgstr "``@``"

#: ../../library/struct.rst:134 ../../library/struct.rst:136
msgid "native"
msgstr "nativo"

#: ../../library/struct.rst:136
msgid "``=``"
msgstr "``=``"

#: ../../library/struct.rst:136 ../../library/struct.rst:138
#: ../../library/struct.rst:140 ../../library/struct.rst:142
msgid "standard"
msgstr "padrão"

#: ../../library/struct.rst:136 ../../library/struct.rst:138
#: ../../library/struct.rst:140 ../../library/struct.rst:142
msgid "none"
msgstr "nenhum"

#: ../../library/struct.rst:138
msgid "``<``"
msgstr "``<``"

#: ../../library/struct.rst:138
msgid "little-endian"
msgstr "little-endian"

#: ../../library/struct.rst:140
msgid "``>``"
msgstr "``>``"

#: ../../library/struct.rst:140
msgid "big-endian"
msgstr "big-endian"

#: ../../library/struct.rst:142
msgid "``!``"
msgstr "``!``"

#: ../../library/struct.rst:142
msgid "network (= big-endian)"
msgstr "rede (= big-endian)"

#: ../../library/struct.rst:145
msgid "If the first character is not one of these, ``'@'`` is assumed."
msgstr "Se o primeiro caractere não for um destes, ``'@'`` é presumido."

#: ../../library/struct.rst:147
msgid ""
"Native byte order is big-endian or little-endian, depending on the host "
"system. For example, Intel x86 and AMD64 (x86-64) are little-endian; "
"Motorola 68000 and PowerPC G5 are big-endian; ARM and Intel Itanium feature "
"switchable endianness (bi-endian). Use ``sys.byteorder`` to check the "
"endianness of your system."
msgstr ""

#: ../../library/struct.rst:153
msgid ""
"Native size and alignment are determined using the C compiler's ``sizeof`` "
"expression.  This is always combined with native byte order."
msgstr ""
"Власний розмір і вирівнювання визначаються за допомогою виразу ``sizeof`` "
"компілятора C. Це завжди поєднується з рідним порядком байтів."

#: ../../library/struct.rst:156
msgid ""
"Standard size depends only on the format character;  see the table in the :"
"ref:`format-characters` section."
msgstr ""
"Стандартний розмір залежить тільки від символу формату; див. таблицю в "
"розділі :ref:`format-characters`."

#: ../../library/struct.rst:159
msgid ""
"Note the difference between ``'@'`` and ``'='``: both use native byte order, "
"but the size and alignment of the latter is standardized."
msgstr ""
"Зверніть увагу на різницю між ``'@'`` і ``'='``: обидва використовують "
"власний порядок байтів, але розмір і вирівнювання останнього стандартизовані."

#: ../../library/struct.rst:162
msgid ""
"The form ``'!'`` represents the network byte order which is always big-"
"endian as defined in `IETF RFC 1700 <IETF RFC 1700_>`_."
msgstr ""
"Форма ``'!'`` представляє мережевий порядок байтів, який завжди є старшим "
"байтом, як визначено в `IETF RFC 1700 <IETF RFC 1700_>`_."

#: ../../library/struct.rst:165
msgid ""
"There is no way to indicate non-native byte order (force byte-swapping); use "
"the appropriate choice of ``'<'`` or ``'>'``."
msgstr ""
"Немає способу вказати невласний порядок байтів (примусова заміна байтів); "
"використовуйте відповідний вибір ``' <'`` or ``'> ''``."

#: ../../library/struct.rst:168 ../../library/struct.rst:247
msgid "Notes:"
msgstr "Notas:"

#: ../../library/struct.rst:170
msgid ""
"Padding is only automatically added between successive structure members. No "
"padding is added at the beginning or the end of the encoded struct."
msgstr ""
"Відступи автоматично додаються лише між послідовними елементами структури. "
"Заповнення не додається на початку або в кінці закодованої структури."

#: ../../library/struct.rst:173
msgid ""
"No padding is added when using non-native size and alignment, e.g. with '<', "
"'>', '=', and '!'."
msgstr ""
"Під час використання невласного розміру та вирівнювання відступи не "
"додаються, напр. з \"<', '>\", \"=\" і \"!\"."

#: ../../library/struct.rst:176
msgid ""
"To align the end of a structure to the alignment requirement of a particular "
"type, end the format with the code for that type with a repeat count of "
"zero.  See :ref:`struct-examples`."
msgstr ""
"Щоб вирівняти кінець структури відповідно до вимог вирівнювання певного "
"типу, завершіть формат кодом для цього типу з нульовою кількістю повторів. "
"Див. :ref:`struct-examples`."

#: ../../library/struct.rst:184
msgid "Format Characters"
msgstr "Caracteres Formatados"

#: ../../library/struct.rst:186
msgid ""
"Format characters have the following meaning; the conversion between C and "
"Python values should be obvious given their types.  The 'Standard size' "
"column refers to the size of the packed value in bytes when using standard "
"size; that is, when the format string starts with one of ``'<'``, ``'>'``, "
"``'!'`` or ``'='``.  When using native size, the size of the packed value is "
"platform-dependent."
msgstr ""
"Символи форматування мають таке значення; перетворення між значеннями C і "
"Python повинно бути очевидним, враховуючи їхні типи. Стовпець \"Стандартний "
"розмір\" стосується розміру упакованого значення в байтах при використанні "
"стандартного розміру; тобто, коли форматний рядок починається з одного з ``' "
"<'``, ``'> ''``, ``'!''`` або ``'='``. При використанні рідного розміру "
"розмір упакованого значення залежить від платформи."

#: ../../library/struct.rst:194
msgid "Format"
msgstr "Formatação"

#: ../../library/struct.rst:194
msgid "C Type"
msgstr "Tipo em C"

#: ../../library/struct.rst:194
msgid "Python type"
msgstr "Tipo em Python"

#: ../../library/struct.rst:194
msgid "Standard size"
msgstr "Стандартний розмір"

#: ../../library/struct.rst:194
msgid "Notes"
msgstr "Notas"

#: ../../library/struct.rst:196
msgid "``x``"
msgstr "``x``"

#: ../../library/struct.rst:196
msgid "pad byte"
msgstr "pad byte"

#: ../../library/struct.rst:196
msgid "no value"
msgstr "немає значення"

#: ../../library/struct.rst:198
msgid "``c``"
msgstr "``c``"

#: ../../library/struct.rst:198
msgid ":c:type:`char`"
msgstr ":c:type:`char`"

#: ../../library/struct.rst:198
msgid "bytes of length 1"
msgstr "байти довжиною 1"

#: ../../library/struct.rst:198 ../../library/struct.rst:200
#: ../../library/struct.rst:202 ../../library/struct.rst:204
msgid "1"
msgstr "1"

#: ../../library/struct.rst:200
msgid "``b``"
msgstr "``b``"

#: ../../library/struct.rst:200
msgid ":c:type:`signed char`"
msgstr ":c:type:`signed char`"

#: ../../library/struct.rst:200 ../../library/struct.rst:202
#: ../../library/struct.rst:206 ../../library/struct.rst:208
#: ../../library/struct.rst:210 ../../library/struct.rst:212
#: ../../library/struct.rst:214 ../../library/struct.rst:216
#: ../../library/struct.rst:218 ../../library/struct.rst:220
#: ../../library/struct.rst:223 ../../library/struct.rst:225
#: ../../library/struct.rst:237
msgid "integer"
msgstr "inteiro"

#: ../../library/struct.rst:200
msgid "\\(1), \\(2)"
msgstr "\\(1), \\(2)"

#: ../../library/struct.rst:202
msgid "``B``"
msgstr "``B``"

#: ../../library/struct.rst:202
msgid ":c:type:`unsigned char`"
msgstr ":c:type:`unsigned char`"

#: ../../library/struct.rst:202 ../../library/struct.rst:206
#: ../../library/struct.rst:208 ../../library/struct.rst:210
#: ../../library/struct.rst:212 ../../library/struct.rst:214
#: ../../library/struct.rst:216 ../../library/struct.rst:218
#: ../../library/struct.rst:220
msgid "\\(2)"
msgstr "\\(2)"

#: ../../library/struct.rst:204
msgid "``?``"
msgstr "``?``"

#: ../../library/struct.rst:204
msgid ":c:type:`_Bool`"
msgstr ":c:type:`_Bool`"

#: ../../library/struct.rst:204
msgid "bool"
msgstr "bool"

#: ../../library/struct.rst:204
msgid "\\(1)"
msgstr "\\(1)"

#: ../../library/struct.rst:206
msgid "``h``"
msgstr "``h``"

#: ../../library/struct.rst:206
msgid ":c:type:`short`"
msgstr ":c:type:`short`"

#: ../../library/struct.rst:206 ../../library/struct.rst:208
#: ../../library/struct.rst:227
msgid "2"
msgstr "2"

#: ../../library/struct.rst:208
msgid "``H``"
msgstr "``H``"

#: ../../library/struct.rst:208
msgid ":c:type:`unsigned short`"
msgstr ":c:type:`unsigned short`"

#: ../../library/struct.rst:210
msgid "``i``"
msgstr "``i``"

#: ../../library/struct.rst:210
msgid ":c:type:`int`"
msgstr ":c:type:`int`"

#: ../../library/struct.rst:210 ../../library/struct.rst:212
#: ../../library/struct.rst:214 ../../library/struct.rst:216
#: ../../library/struct.rst:229
msgid "4"
msgstr "4"

#: ../../library/struct.rst:212
msgid "``I``"
msgstr "``I``"

#: ../../library/struct.rst:212
msgid ":c:type:`unsigned int`"
msgstr ":c:type:`unsigned int`"

#: ../../library/struct.rst:214
msgid "``l``"
msgstr "``l``"

#: ../../library/struct.rst:214
msgid ":c:type:`long`"
msgstr ":c:type:`long`"

#: ../../library/struct.rst:216
msgid "``L``"
msgstr "``L``"

#: ../../library/struct.rst:216
msgid ":c:type:`unsigned long`"
msgstr ":c:type:`unsigned long`"

#: ../../library/struct.rst:218
msgid "``q``"
msgstr "``q``"

#: ../../library/struct.rst:218
msgid ":c:type:`long long`"
msgstr ":c:type:`long long`"

#: ../../library/struct.rst:218 ../../library/struct.rst:220
#: ../../library/struct.rst:231
msgid "8"
msgstr "8"

#: ../../library/struct.rst:220
msgid "``Q``"
msgstr "``Q``"

#: ../../library/struct.rst:220
msgid ":c:type:`unsigned long long`"
msgstr ":c:type:`unsigned long long`"

#: ../../library/struct.rst:223
msgid "``n``"
msgstr "``n``"

#: ../../library/struct.rst:223
msgid ":c:type:`ssize_t`"
msgstr ":c:type:`ssize_t`"

#: ../../library/struct.rst:223 ../../library/struct.rst:225
msgid "\\(3)"
msgstr "\\(3)"

#: ../../library/struct.rst:225
msgid "``N``"
msgstr "``N``"

#: ../../library/struct.rst:225
msgid ":c:type:`size_t`"
msgstr ":c:type:`size_t`"

#: ../../library/struct.rst:227
msgid "``e``"
msgstr "``e``"

#: ../../library/struct.rst:227
msgid "\\(6)"
msgstr "\\(6)"

#: ../../library/struct.rst:227 ../../library/struct.rst:229
#: ../../library/struct.rst:231
msgid "float"
msgstr "ponto flutuante"

#: ../../library/struct.rst:227 ../../library/struct.rst:229
#: ../../library/struct.rst:231
msgid "\\(4)"
msgstr "\\(4)"

#: ../../library/struct.rst:229
msgid "``f``"
msgstr "``f``"

#: ../../library/struct.rst:229
msgid ":c:type:`float`"
msgstr ":c:type:`float`"

#: ../../library/struct.rst:231
msgid "``d``"
msgstr "``d``"

#: ../../library/struct.rst:231
msgid ":c:type:`double`"
msgstr ":c:type:`double`"

#: ../../library/struct.rst:233
msgid "``s``"
msgstr "``s``"

#: ../../library/struct.rst:233 ../../library/struct.rst:235
msgid ":c:type:`char[]`"
msgstr ":c:type:`char[]`"

#: ../../library/struct.rst:233 ../../library/struct.rst:235
msgid "bytes"
msgstr "bytes"

#: ../../library/struct.rst:235
msgid "``p``"
msgstr "``p``"

#: ../../library/struct.rst:237
msgid "``P``"
msgstr "``P``"

#: ../../library/struct.rst:237
msgid ":c:type:`void \\*`"
msgstr ":c:type:`void \\*`"

#: ../../library/struct.rst:237
msgid "\\(5)"
msgstr "\\(5)"

#: ../../library/struct.rst:240
msgid "Added support for the ``'n'`` and ``'N'`` formats."
msgstr "Додано підтримку форматів ``'n'`` і ``'N'``."

#: ../../library/struct.rst:243
msgid "Added support for the ``'e'`` format."
msgstr "Додано підтримку формату ``'e''``."

#: ../../library/struct.rst:252
msgid ""
"The ``'?'`` conversion code corresponds to the :c:type:`_Bool` type defined "
"by C99. If this type is not available, it is simulated using a :c:type:"
"`char`. In standard mode, it is always represented by one byte."
msgstr ""

#: ../../library/struct.rst:257
msgid ""
"When attempting to pack a non-integer using any of the integer conversion "
"codes, if the non-integer has a :meth:`__index__` method then that method is "
"called to convert the argument to an integer before packing."
msgstr ""

#: ../../library/struct.rst:261
msgid "Added use of the :meth:`__index__` method for non-integers."
msgstr ""

#: ../../library/struct.rst:265
msgid ""
"The ``'n'`` and ``'N'`` conversion codes are only available for the native "
"size (selected as the default or with the ``'@'`` byte order character). For "
"the standard size, you can use whichever of the other integer formats fits "
"your application."
msgstr ""
"Коди перетворення ``'n'`` і ``'N'`` доступні лише для рідного розміру "
"(вибрано як типовий або з символом порядку байтів ``'@''``). Для "
"стандартного розміру ви можете використовувати будь-який з інших форматів "
"цілих чисел, який підходить для вашої програми."

#: ../../library/struct.rst:271
msgid ""
"For the ``'f'``, ``'d'`` and ``'e'`` conversion codes, the packed "
"representation uses the IEEE 754 binary32, binary64 or binary16 format (for "
"``'f'``, ``'d'`` or ``'e'`` respectively), regardless of the floating-point "
"format used by the platform."
msgstr ""
"Для кодів перетворення ``'f'``, ``'d'`` і ``'e'`` упаковане представлення "
"використовує формат IEEE 754 binary32, binary64 або binary16 (для ``'f''`` , "
"``'d'`` або ``'e'`` відповідно), незалежно від формату з плаваючою комою, "
"який використовується платформою."

#: ../../library/struct.rst:277
msgid ""
"The ``'P'`` format character is only available for the native byte ordering "
"(selected as the default or with the ``'@'`` byte order character). The byte "
"order character ``'='`` chooses to use little- or big-endian ordering based "
"on the host system. The struct module does not interpret this as native "
"ordering, so the ``'P'`` format is not available."
msgstr ""
"Символ формату ``'P'`` доступний лише для власного порядку байтів (вибрано "
"як типовий або з символом порядку байтів ``'@'``). Символ порядку байтів "
"``'='`` вибирає порядок використання малого або великого порядку байтів на "
"основі головної системи. Модуль struct не інтерпретує це як рідне "
"впорядкування, тому формат ``'P'`` недоступний."

#: ../../library/struct.rst:284
msgid ""
"The IEEE 754 binary16 \"half precision\" type was introduced in the 2008 "
"revision of the `IEEE 754 standard <ieee 754 standard_>`_. It has a sign "
"bit, a 5-bit exponent and 11-bit precision (with 10 bits explicitly stored), "
"and can represent numbers between approximately ``6.1e-05`` and ``6.5e+04`` "
"at full precision. This type is not widely supported by C compilers: on a "
"typical machine, an unsigned short can be used for storage, but not for math "
"operations. See the Wikipedia page on the `half-precision floating-point "
"format <half precision format_>`_ for more information."
msgstr ""
"Двійковий тип16 IEEE 754 із \"половиною точності\" було введено в редакції "
"2008 року `стандарту IEEE 754 <ieee 754 standard_>`_. Він має знаковий біт, "
"5-бітний експоненту та 11-бітну точність (з 10 бітами, збереженими явно), і "
"може представляти числа приблизно від ``6.1e-05`` до ``6.5e+04`` з повною "
"точністю. . Цей тип не широко підтримується компіляторами C: на типовій "
"машині беззнаковий короткий можна використовувати для зберігання, але не для "
"математичних операцій. Перегляньте сторінку Вікіпедії про `формат числа з "
"плаваючою комою половинної точності <half precision format_>`_ для отримання "
"додаткової інформації."

#: ../../library/struct.rst:294
msgid ""
"A format character may be preceded by an integral repeat count.  For "
"example, the format string ``'4h'`` means exactly the same as ``'hhhh'``."
msgstr ""
"Символу форматування може передувати цілий підрахунок повторів. Наприклад, "
"рядок формату ``'4h''`` означає те саме, що ``'hhhh'``."

#: ../../library/struct.rst:297
msgid ""
"Whitespace characters between formats are ignored; a count and its format "
"must not contain whitespace though."
msgstr ""
"Пробіли між форматами ігноруються; кількість і його формат не повинні "
"містити пробіли."

#: ../../library/struct.rst:300
msgid ""
"For the ``'s'`` format character, the count is interpreted as the length of "
"the bytes, not a repeat count like for the other format characters; for "
"example, ``'10s'`` means a single 10-byte string, while ``'10c'`` means 10 "
"characters. If a count is not given, it defaults to 1.  For packing, the "
"string is truncated or padded with null bytes as appropriate to make it fit. "
"For unpacking, the resulting bytes object always has exactly the specified "
"number of bytes.  As a special case, ``'0s'`` means a single, empty string "
"(while ``'0c'`` means 0 characters)."
msgstr ""

#: ../../library/struct.rst:309
msgid ""
"When packing a value ``x`` using one of the integer formats (``'b'``, "
"``'B'``, ``'h'``, ``'H'``, ``'i'``, ``'I'``, ``'l'``, ``'L'``, ``'q'``, "
"``'Q'``), if ``x`` is outside the valid range for that format then :exc:"
"`struct.error` is raised."
msgstr ""
"Під час пакування значення ``x`` з використанням одного з цілочисельних "
"форматів (``'b'``, ``'B'``, ``'h'``, ``'H'``, ``'i'``, ``'I'``, ``'l'``, "
"``'L'``, ``'q'``, ``'Q'``), якщо ``x`` знаходиться за межами допустимого "
"діапазону для цього формату, тоді виникає :exc:`struct.error`."

#: ../../library/struct.rst:314
msgid ""
"Previously, some of the integer formats wrapped out-of-range values and "
"raised :exc:`DeprecationWarning` instead of :exc:`struct.error`."
msgstr ""
"Раніше деякі цілочисельні формати обгортали значення поза діапазоном і "
"викликали :exc:`DeprecationWarning` замість :exc:`struct.error`."

#: ../../library/struct.rst:318
msgid ""
"The ``'p'`` format character encodes a \"Pascal string\", meaning a short "
"variable-length string stored in a *fixed number of bytes*, given by the "
"count. The first byte stored is the length of the string, or 255, whichever "
"is smaller.  The bytes of the string follow.  If the string passed in to :"
"func:`pack` is too long (longer than the count minus 1), only the leading "
"``count-1`` bytes of the string are stored.  If the string is shorter than "
"``count-1``, it is padded with null bytes so that exactly count bytes in all "
"are used.  Note that for :func:`unpack`, the ``'p'`` format character "
"consumes ``count`` bytes, but that the string returned can never contain "
"more than 255 bytes."
msgstr ""
"Символ формату ``'p'`` кодує \"рядок Pascal\", що означає короткий рядок "
"змінної довжини, що зберігається у *фіксованій кількості байтів*, визначеній "
"підрахунком. Перший збережений байт — це довжина рядка або 255, залежно від "
"того, що менше. Далі йдуть байти рядка. Якщо рядок, переданий у :func:"
"`pack`, задовгий (довший за лічильник мінус 1), зберігаються лише перші "
"байти ``count-1`` рядка. Якщо рядок коротший за ``count-1``, він "
"доповнюється нульовими байтами, щоб використати рівно кількість байтів. "
"Зверніть увагу, що для :func:`unpack` символ формату ``'p'`` споживає "
"``count`` байтів, але що повернутий рядок ніколи не може містити більше 255 "
"байтів."

#: ../../library/struct.rst:331
msgid ""
"For the ``'?'`` format character, the return value is either :const:`True` "
"or :const:`False`. When packing, the truth value of the argument object is "
"used. Either 0 or 1 in the native or standard bool representation will be "
"packed, and any non-zero value will be ``True`` when unpacking."
msgstr ""
"Для символу формату ``'?'`` повертається значення :const:`True` або :const:"
"`False`. При упаковці використовується значення істинності об'єкта "
"аргументу. Буде запаковано 0 або 1 у нативному або стандартному логічному "
"представленні, а будь-яке ненульове значення під час розпакування буде "
"``True``."

#: ../../library/struct.rst:341
msgid "Examples"
msgstr "Exemplos"

#: ../../library/struct.rst:344
msgid ""
"All examples assume a native byte order, size, and alignment with a big-"
"endian machine."
msgstr ""

#: ../../library/struct.rst:347
msgid "A basic example of packing/unpacking three integers::"
msgstr ""

#: ../../library/struct.rst:357
msgid ""
"Unpacked fields can be named by assigning them to variables or by wrapping "
"the result in a named tuple::"
msgstr ""
"Розпаковані поля можна назвати, призначивши їх змінним або загорнувши "
"результат у іменований кортеж::"

#: ../../library/struct.rst:368
msgid ""
"The ordering of format characters may have an impact on size since the "
"padding needed to satisfy alignment requirements is different::"
msgstr ""

#: ../../library/struct.rst:380
msgid ""
"The following format ``'llh0l'`` specifies two pad bytes at the end, "
"assuming longs are aligned on 4-byte boundaries::"
msgstr ""

#: ../../library/struct.rst:386
msgid ""
"This only works when native size and alignment are in effect; standard size "
"and alignment does not enforce any alignment."
msgstr ""

#: ../../library/struct.rst:393
msgid "Module :mod:`array`"
msgstr "Модуль :mod:`array`"

#: ../../library/struct.rst:393
msgid "Packed binary storage of homogeneous data."
msgstr "Упаковане двійкове сховище однорідних даних."

#: ../../library/struct.rst:395
msgid "Module :mod:`xdrlib`"
msgstr "Módulo :mod:`xdrlib`"

#: ../../library/struct.rst:396
msgid "Packing and unpacking of XDR data."
msgstr ""

#: ../../library/struct.rst:402
msgid "Classes"
msgstr "Classes"

#: ../../library/struct.rst:404
msgid "The :mod:`struct` module also defines the following type:"
msgstr "Модуль :mod:`struct` також визначає наступний тип:"

#: ../../library/struct.rst:409
msgid ""
"Return a new Struct object which writes and reads binary data according to "
"the format string *format*.  Creating a Struct object once and calling its "
"methods is more efficient than calling the :mod:`struct` functions with the "
"same format since the format string only needs to be compiled once."
msgstr ""

#: ../../library/struct.rst:416
msgid ""
"The compiled versions of the most recent format strings passed to :class:"
"`Struct` and the module-level functions are cached, so programs that use "
"only a few format strings needn't worry about reusing a single :class:"
"`Struct` instance."
msgstr ""

#: ../../library/struct.rst:421
msgid "Compiled Struct objects support the following methods and attributes:"
msgstr "Зкомпільовані об’єкти Struct підтримують наступні методи та атрибути:"

#: ../../library/struct.rst:425
msgid ""
"Identical to the :func:`pack` function, using the compiled format. "
"(``len(result)`` will equal :attr:`size`.)"
msgstr ""
"Ідентична функції :func:`pack`, використовуючи скомпільований формат. "
"(``len(result)`` дорівнюватиме :attr:`size`.)"

#: ../../library/struct.rst:431
msgid "Identical to the :func:`pack_into` function, using the compiled format."
msgstr ""
"Ідентична функції :func:`pack_into`, використовуючи скомпільований формат."

#: ../../library/struct.rst:436
msgid ""
"Identical to the :func:`unpack` function, using the compiled format. The "
"buffer's size in bytes must equal :attr:`size`."
msgstr ""
"Ідентична функції :func:`unpack`, використовуючи скомпільований формат. "
"Розмір буфера в байтах має дорівнювати :attr:`size`."

#: ../../library/struct.rst:442
msgid ""
"Identical to the :func:`unpack_from` function, using the compiled format. "
"The buffer's size in bytes, starting at position *offset*, must be at least :"
"attr:`size`."
msgstr ""
"Ідентична функції :func:`unpack_from`, використовуючи скомпільований формат. "
"Розмір буфера в байтах, починаючи з позиції *offset*, має бути не менше :"
"attr:`size`."

#: ../../library/struct.rst:449
msgid ""
"Identical to the :func:`iter_unpack` function, using the compiled format. "
"The buffer's size in bytes must be a multiple of :attr:`size`."
msgstr ""
"Ідентична функції :func:`iter_unpack`, використовуючи скомпільований формат. "
"Розмір буфера в байтах має бути кратним :attr:`size`."

#: ../../library/struct.rst:456
msgid "The format string used to construct this Struct object."
msgstr ""
"Рядок формату, який використовується для створення цього об’єкта Struct."

#: ../../library/struct.rst:458
msgid "The format string type is now :class:`str` instead of :class:`bytes`."
msgstr "Тип рядка формату тепер :class:`str` замість :class:`bytes`."

#: ../../library/struct.rst:463
msgid ""
"The calculated size of the struct (and hence of the bytes object produced by "
"the :meth:`pack` method) corresponding to :attr:`format`."
msgstr ""
"Розрахований розмір структури (і, отже, об’єкта bytes, створеного методом :"
"meth:`pack`), що відповідає :attr:`format`."
