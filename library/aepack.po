# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-09 18:46+0900\n"
"PO-Revision-Date: 2017-10-02 15:44+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Portuguese (Brazil) (http://www.transifex.com/python-doc/"
"python-27/language/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../library/aepack.rst:3
msgid ""
":mod:`aepack` --- Conversion between Python variables and AppleEvent data "
"containers"
msgstr ""

#: ../../library/aepack.rst:12
msgid ""
"The :mod:`aepack` module defines functions for converting (packing) Python "
"variables to AppleEvent descriptors and back (unpacking). Within Python the "
"AppleEvent descriptor is handled by Python objects of built-in type :class:"
"`AEDesc`, defined in module :mod:`Carbon.AE`."
msgstr ""

#: ../../library/aepack.rst:19
msgid "This module has been removed in Python 3.x."
msgstr ""

#: ../../library/aepack.rst:22
msgid "The :mod:`aepack` module defines the following functions:"
msgstr ""

#: ../../library/aepack.rst:27
msgid ""
"Returns an :class:`AEDesc` object  containing a conversion of Python value "
"x. If *forcetype* is provided it specifies the descriptor type of the "
"result. Otherwise, a default mapping of Python types to Apple Event "
"descriptor types is used, as follows:"
msgstr ""

#: ../../library/aepack.rst:33
msgid "Python type"
msgstr "Python type"

#: ../../library/aepack.rst:33
msgid "descriptor type"
msgstr ""

#: ../../library/aepack.rst:35
msgid ":class:`FSSpec`"
msgstr ""

#: ../../library/aepack.rst:35
msgid "typeFSS"
msgstr ""

#: ../../library/aepack.rst:37
msgid ":class:`FSRef`"
msgstr ""

#: ../../library/aepack.rst:37
msgid "typeFSRef"
msgstr ""

#: ../../library/aepack.rst:39
msgid ":class:`Alias`"
msgstr ""

#: ../../library/aepack.rst:39
msgid "typeAlias"
msgstr ""

#: ../../library/aepack.rst:41
msgid "integer"
msgstr "inteiro"

#: ../../library/aepack.rst:41
msgid "typeLong (32 bit integer)"
msgstr ""

#: ../../library/aepack.rst:43
msgid "float"
msgstr "float"

#: ../../library/aepack.rst:43
msgid "typeFloat (64 bit floating point)"
msgstr ""

#: ../../library/aepack.rst:45
msgid "string"
msgstr "string"

#: ../../library/aepack.rst:45
msgid "typeText"
msgstr ""

#: ../../library/aepack.rst:47
msgid "unicode"
msgstr ""

#: ../../library/aepack.rst:47
msgid "typeUnicodeText"
msgstr ""

#: ../../library/aepack.rst:49
msgid "list"
msgstr "list"

#: ../../library/aepack.rst:49
msgid "typeAEList"
msgstr ""

#: ../../library/aepack.rst:51
msgid "dictionary"
msgstr "dicionário"

#: ../../library/aepack.rst:51
msgid "typeAERecord"
msgstr ""

#: ../../library/aepack.rst:53
msgid "instance"
msgstr "instância"

#: ../../library/aepack.rst:53
msgid "*see below*"
msgstr ""

#: ../../library/aepack.rst:56
msgid ""
"If *x* is a Python instance then this function attempts to call an :meth:"
"`__aepack__` method.  This method should return an :class:`AEDesc` object."
msgstr ""

#: ../../library/aepack.rst:59
msgid ""
"If the conversion *x* is not defined above, this function returns the Python "
"string representation of a value (the repr() function) encoded as a text "
"descriptor."
msgstr ""

#: ../../library/aepack.rst:66
msgid ""
"*x* must be an object of type :class:`AEDesc`. This function returns a "
"Python object representation of the data in the Apple Event descriptor *x*. "
"Simple AppleEvent data types (integer, text, float) are returned as their "
"obvious Python counterparts. Apple Event lists are returned as Python lists, "
"and the list elements are recursively unpacked.  Object references (ex. "
"``line 3 of document 1``) are returned as instances of :class:`aetypes."
"ObjectSpecifier`, unless ``formodulename`` is specified.  AppleEvent "
"descriptors with descriptor type typeFSS are returned as :class:`FSSpec` "
"objects.  AppleEvent record descriptors are returned as Python dictionaries, "
"with 4-character string keys and elements recursively unpacked."
msgstr ""

#: ../../library/aepack.rst:77
msgid ""
"The optional ``formodulename`` argument is used by the stub packages "
"generated by :mod:`gensuitemodule`, and ensures that the OSA classes for "
"object specifiers are looked up in the correct module. This ensures that if, "
"say, the Finder returns an object specifier for a window you get an instance "
"of ``Finder.Window`` and not a generic ``aetypes.Window``. The former knows "
"about all the properties and elements a window has in the Finder, while the "
"latter knows no such things."
msgstr ""

#: ../../library/aepack.rst:89
msgid "Module :mod:`Carbon.AE`"
msgstr ""

#: ../../library/aepack.rst:89
msgid "Built-in access to Apple Event Manager routines."
msgstr ""

#: ../../library/aepack.rst:91
msgid "Module :mod:`aetypes`"
msgstr ""

#: ../../library/aepack.rst:92
msgid "Python definitions of codes for Apple Event descriptor types."
msgstr ""
