# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-11 15:45+0000\n"
"PO-Revision-Date: 2024-05-11 00:33+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/http.server.rst:2
msgid ":mod:`!http.server` --- HTTP servers"
msgstr ":mod:`!http.server` --- HTTP-серверы"

#: ../../library/http.server.rst:7
msgid "**Source code:** :source:`Lib/http/server.py`"
msgstr "**Código-fonte:** :source:`Lib/http/server.py`"

#: ../../library/http.server.rst:17
msgid "This module defines classes for implementing HTTP servers."
msgstr "Цей модуль визначає класи для реалізації HTTP-серверів."

#: ../../library/http.server.rst:22
msgid ""
":mod:`http.server` is not recommended for production. It only implements :"
"ref:`basic security checks <http.server-security>`."
msgstr ""
":mod:`http.server` не рекомендуется для производства. Он реализует только :"
"ref:`базовые проверки безопасности <http.server-security>`."

#: ../../includes/wasm-notavail.rst:3
msgid "Availability"
msgstr "Disponibilidade"

#: ../../includes/wasm-notavail.rst:5
msgid ""
"This module does not work or is not available on WebAssembly platforms "
"``wasm32-emscripten`` and ``wasm32-wasi``. See :ref:`wasm-availability` for "
"more information."
msgstr ""
"このモジュールは WebAssembly プラットフォーム ``wasm32-emscripten`` と "
"``wasm32-wasi`` では動作しないか、利用不可です。詳しくは、:ref:`wasm-"
"availability` を見てください。"

#: ../../library/http.server.rst:27
msgid ""
"One class, :class:`HTTPServer`, is a :class:`socketserver.TCPServer` "
"subclass. It creates and listens at the HTTP socket, dispatching the "
"requests to a handler.  Code to create and run the server looks like this::"
msgstr ""
"Один клас, :class:`HTTPServer`, є підкласом :class:`socketserver.TCPServer`. "
"Він створює та прослуховує HTTP-сокет, надсилаючи запити обробнику. Код для "
"створення та запуску сервера виглядає так:"

#: ../../library/http.server.rst:31
msgid ""
"def run(server_class=HTTPServer, handler_class=BaseHTTPRequestHandler):\n"
"    server_address = ('', 8000)\n"
"    httpd = server_class(server_address, handler_class)\n"
"    httpd.serve_forever()"
msgstr ""
"def run(server_class=HTTPServer, handler_class=BaseHTTPRequestHandler):\n"
"    server_address = ('', 8000)\n"
"    httpd = server_class(server_address, handler_class)\n"
"    httpd.serve_forever()"

#: ../../library/http.server.rst:39
msgid ""
"This class builds on the :class:`~socketserver.TCPServer` class by storing "
"the server address as instance variables named :attr:`server_name` and :attr:"
"`server_port`. The server is accessible by the handler, typically through "
"the handler's :attr:`server` instance variable."
msgstr ""
"Цей клас будується на основі класу :class:`~socketserver.TCPServer`, "
"зберігаючи адресу сервера як змінні екземпляра з іменами :attr:`server_name` "
"і :attr:`server_port`. Сервер доступний обробнику, як правило, через змінну "
"екземпляра обробника :attr:`server`."

#: ../../library/http.server.rst:46
msgid ""
"This class is identical to HTTPServer but uses threads to handle requests by "
"using the :class:`~socketserver.ThreadingMixIn`. This is useful to handle "
"web browsers pre-opening sockets, on which :class:`HTTPServer` would wait "
"indefinitely."
msgstr ""
"Цей клас ідентичний HTTPServer, але використовує потоки для обробки запитів "
"за допомогою :class:`~socketserver.ThreadingMixIn`. Це корисно для роботи з "
"веб-браузерами, які попередньо відкривають сокети, на яких :class:"
"`HTTPServer` чекатиме нескінченно довго."

#: ../../library/http.server.rst:54
msgid ""
"The :class:`HTTPServer` and :class:`ThreadingHTTPServer` must be given a "
"*RequestHandlerClass* on instantiation, of which this module provides three "
"different variants:"
msgstr ""
":class:`HTTPServer` і :class:`ThreadingHTTPServer` повинні отримати "
"*RequestHandlerClass* під час створення екземпляра, для якого цей модуль "
"надає три різні варіанти:"

#: ../../library/http.server.rst:60
msgid ""
"This class is used to handle the HTTP requests that arrive at the server.  "
"By itself, it cannot respond to any actual HTTP requests; it must be "
"subclassed to handle each request method (e.g. GET or POST). :class:"
"`BaseHTTPRequestHandler` provides a number of class and instance variables, "
"and methods for use by subclasses."
msgstr ""
"Цей клас використовується для обробки HTTP-запитів, які надходять на сервер. "
"Сам по собі він не може відповідати на жодні фактичні запити HTTP; він "
"повинен бути підкласом для обробки кожного методу запиту (наприклад, GET або "
"POST). :class:`BaseHTTPRequestHandler` надає ряд змінних класу та "
"екземпляра, а також методів для використання підкласами."

#: ../../library/http.server.rst:66
msgid ""
"The handler will parse the request and the headers, then call a method "
"specific to the request type. The method name is constructed from the "
"request. For example, for the request method ``SPAM``, the :meth:`!do_SPAM` "
"method will be called with no arguments. All of the relevant information is "
"stored in instance variables of the handler.  Subclasses should not need to "
"override or extend the :meth:`!__init__` method."
msgstr ""
"Обработчик проанализирует запрос и заголовки, а затем вызовет метод, "
"специфичный для типа запроса. Имя метода создается на основе запроса. "
"Например, для метода запроса ``SPAM`` метод :meth:`!do_SPAM` будет "
"вызываться без аргументов. Вся соответствующая информация хранится в "
"переменных экземпляра обработчика. Подклассам не нужно переопределять или "
"расширять метод :meth:`!__init__`."

#: ../../library/http.server.rst:73
msgid ":class:`BaseHTTPRequestHandler` has the following instance variables:"
msgstr ""
":class:`BaseHTTPRequestHandler` tem os seguintes atributos de instância:"

#: ../../library/http.server.rst:77
msgid ""
"Contains a tuple of the form ``(host, port)`` referring to the client's "
"address."
msgstr ""
"Містить кортеж у формі ``(хост, порт)``, який посилається на адресу клієнта."

#: ../../library/http.server.rst:82
msgid "Contains the server instance."
msgstr "Містить екземпляр сервера."

#: ../../library/http.server.rst:86
msgid ""
"Boolean that should be set before :meth:`handle_one_request` returns, "
"indicating if another request may be expected, or if the connection should "
"be shut down."
msgstr ""
"Логічне значення, яке має бути встановлено перед поверненням :meth:"
"`handle_one_request`, вказуючи, чи можна очікувати ще один запит, чи "
"з’єднання має бути закрито."

#: ../../library/http.server.rst:92
msgid ""
"Contains the string representation of the HTTP request line. The terminating "
"CRLF is stripped. This attribute should be set by :meth:"
"`handle_one_request`. If no valid request line was processed, it should be "
"set to the empty string."
msgstr ""
"Містить рядкове представлення рядка запиту HTTP. Кінцевий CRLF видаляється. "
"Цей атрибут має бути встановлено :meth:`handle_one_request`. Якщо дійсний "
"рядок запиту не оброблено, його слід встановити на порожній рядок."

#: ../../library/http.server.rst:99
msgid "Contains the command (request type). For example, ``'GET'``."
msgstr "Містить команду (тип запиту). Наприклад, ``'GET'``."

#: ../../library/http.server.rst:103
msgid ""
"Contains the request path. If query component of the URL is present, then "
"``path`` includes the query. Using the terminology of :rfc:`3986`, ``path`` "
"here includes ``hier-part`` and the ``query``."
msgstr ""
"Містить шлях запиту. Якщо компонент запиту URL-адреси присутній, тоді "
"``path`` включає запит. Використовуючи термінологію :rfc:`3986`, ``path`` "
"тут включає ``hier-part`` і ``query``."

#: ../../library/http.server.rst:109
msgid ""
"Contains the version string from the request. For example, ``'HTTP/1.0'``."
msgstr "Містить рядок версії із запиту. Наприклад, ``'HTTP/1.0'``."

#: ../../library/http.server.rst:113
msgid ""
"Holds an instance of the class specified by the :attr:`MessageClass` class "
"variable. This instance parses and manages the headers in the HTTP request. "
"The :func:`~http.client.parse_headers` function from :mod:`http.client` is "
"used to parse the headers and it requires that the HTTP request provide a "
"valid :rfc:`2822` style header."
msgstr ""
"Містить екземпляр класу, визначеного змінною класу :attr:`MessageClass`. Цей "
"екземпляр аналізує та керує заголовками в запиті HTTP. Функція :func:`~http."
"client.parse_headers` з :mod:`http.client` використовується для аналізу "
"заголовків і вимагає, щоб HTTP-запит надав дійсний заголовок стилю :rfc:"
"`2822`."

#: ../../library/http.server.rst:121
msgid ""
"An :class:`io.BufferedIOBase` input stream, ready to read from the start of "
"the optional input data."
msgstr ""
"Вхідний потік :class:`io.BufferedIOBase`, готовий для читання з початку "
"додаткових вхідних даних."

#: ../../library/http.server.rst:126
msgid ""
"Contains the output stream for writing a response back to the client. Proper "
"adherence to the HTTP protocol must be used when writing to this stream in "
"order to achieve successful interoperation with HTTP clients."
msgstr ""
"Містить вихідний потік для запису відповіді клієнту. Щоб досягти успішної "
"взаємодії з HTTP-клієнтами, під час запису в цей потік необхідно належним "
"чином дотримуватися протоколу HTTP."

#: ../../library/http.server.rst:131
msgid "This is an :class:`io.BufferedIOBase` stream."
msgstr "Це потік :class:`io.BufferedIOBase`."

#: ../../library/http.server.rst:134
msgid ":class:`BaseHTTPRequestHandler` has the following attributes:"
msgstr ":class:`BaseHTTPRequestHandler` tem os seguintes atributos:"

#: ../../library/http.server.rst:138
msgid ""
"Specifies the server software version.  You may want to override this. The "
"format is multiple whitespace-separated strings, where each string is of the "
"form name[/version]. For example, ``'BaseHTTP/0.2'``."
msgstr ""
"Визначає версію програмного забезпечення сервера. Ви можете змінити це. "
"Формат — кілька рядків, розділених пробілами, де кожен рядок має назву "
"форми[/version]. Наприклад, \"BaseHTTP/0.2\"."

#: ../../library/http.server.rst:144
msgid ""
"Contains the Python system version, in a form usable by the :attr:"
"`version_string` method and the :attr:`server_version` class variable. For "
"example, ``'Python/1.4'``."
msgstr ""
"Містить версію системи Python у формі, придатній для використання методом :"
"attr:`version_string` і змінною класу :attr:`server_version`. Наприклад, "
"``'Python/1.4'``."

#: ../../library/http.server.rst:150
msgid ""
"Specifies a format string that should be used by :meth:`send_error` method "
"for building an error response to the client. The string is filled by "
"default with variables from :attr:`responses` based on the status code that "
"passed to :meth:`send_error`."
msgstr ""
"Визначає рядок формату, який має використовуватися методом :meth:"
"`send_error` для створення відповіді про помилку клієнту. Рядок за "
"замовчуванням заповнюється змінними з :attr:`responses` на основі коду "
"стану, переданого в :meth:`send_error`."

#: ../../library/http.server.rst:157
msgid ""
"Specifies the Content-Type HTTP header of error responses sent to the "
"client.  The default value is ``'text/html'``."
msgstr ""
"Визначає HTTP-заголовок Content-Type відповідей про помилки, надісланих "
"клієнту. Значення за замовчуванням - ``'text/html'``."

#: ../../library/http.server.rst:162
msgid ""
"Specifies the HTTP version to which the server is conformant. It is sent in "
"responses to let the client know the server's communication capabilities for "
"future requests. If set to ``'HTTP/1.1'``, the server will permit HTTP "
"persistent connections; however, your server *must* then include an accurate "
"``Content-Length`` header (using :meth:`send_header`) in all of its "
"responses to clients. For backwards compatibility, the setting defaults to "
"``'HTTP/1.0'``."
msgstr ""
"Указывает версию HTTP, которой соответствует сервер. Он отправляется в "
"ответах, чтобы сообщить клиенту о возможностях связи сервера для будущих "
"запросов. Если установлено значение ``'HTTP/1.1'``, сервер будет разрешать "
"постоянные соединения HTTP; однако ваш сервер *должен* затем включать точный "
"заголовок Content-Length (используя :meth:`send_header`) во все свои ответы "
"клиентам. Для обратной совместимости по умолчанию установлено значение "
"«HTTP/1.0»."

#: ../../library/http.server.rst:172
msgid ""
"Specifies an :class:`email.message.Message`\\ -like class to parse HTTP "
"headers.  Typically, this is not overridden, and it defaults to :class:`http."
"client.HTTPMessage`."
msgstr ""
"Визначає :class:`email.message.Message`\\ -подібний клас для аналізу "
"заголовків HTTP. Як правило, це не перевизначається, і за замовчуванням має "
"значення :class:`http.client.HTTPMessage`."

#: ../../library/http.server.rst:178
msgid ""
"This attribute contains a mapping of error code integers to two-element "
"tuples containing a short and long message. For example, ``{code: "
"(shortmessage, longmessage)}``. The *shortmessage* is usually used as the "
"*message* key in an error response, and *longmessage* as the *explain* key.  "
"It is used by :meth:`send_response_only` and :meth:`send_error` methods."
msgstr ""
"Цей атрибут містить відображення цілих чисел коду помилки в двоелементні "
"кортежі, що містять коротке та довге повідомлення. Наприклад, ``{code: "
"(shortmessage, longmessage)}``. *shortmessage* зазвичай використовується як "
"ключ *message* у відповіді про помилку, а *longmessage* як ключ *explain*. "
"Він використовується методами :meth:`send_response_only` і :meth:"
"`send_error`."

#: ../../library/http.server.rst:184
msgid "A :class:`BaseHTTPRequestHandler` instance has the following methods:"
msgstr ""
"Uma instância de :class:`BaseHTTPRequestHandler` tem os seguintes métodos:"

#: ../../library/http.server.rst:188
msgid ""
"Calls :meth:`handle_one_request` once (or, if persistent connections are "
"enabled, multiple times) to handle incoming HTTP requests. You should never "
"need to override it; instead, implement appropriate :meth:`!do_\\*` methods."
msgstr ""
"Вызывает :meth:`handle_one_request` один раз (или, если постоянные "
"соединения включены, несколько раз) для обработки входящих HTTP-запросов. "
"Вам никогда не придется переопределять его; вместо этого реализуйте "
"соответствующие методы :meth:`!do_\\*`."

#: ../../library/http.server.rst:195
msgid ""
"This method will parse and dispatch the request to the appropriate :meth:`!"
"do_\\*` method.  You should never need to override it."
msgstr ""
"Этот метод будет анализировать и отправлять запрос соответствующему методу :"
"meth:`!do_\\*`. Вам никогда не придется переопределять его."

#: ../../library/http.server.rst:200
msgid ""
"When an HTTP/1.1 conformant server receives an ``Expect: 100-continue`` "
"request header it responds back with a ``100 Continue`` followed by ``200 "
"OK`` headers. This method can be overridden to raise an error if the server "
"does not want the client to continue.  For e.g. server can choose to send "
"``417 Expectation Failed`` as a response header and ``return False``."
msgstr ""
"Когда сервер, соответствующий HTTP/1.1, получает заголовок запроса «Expect: "
"100-continue», он отвечает ответом «100 Continue», за которым следуют "
"заголовки «200 OK». Этот метод можно переопределить, чтобы вызвать ошибку, "
"если сервер не хочет, чтобы клиент продолжал работу. Например, сервер может "
"выбрать отправку «417 Expectation Failed» в качестве заголовка ответа и "
"«вернуть False»."

#: ../../library/http.server.rst:211
msgid ""
"Sends and logs a complete error reply to the client. The numeric *code* "
"specifies the HTTP error code, with *message* as an optional, short, human "
"readable description of the error.  The *explain* argument can be used to "
"provide more detailed information about the error; it will be formatted "
"using the :attr:`error_message_format` attribute and emitted, after a "
"complete set of headers, as the response body.  The :attr:`responses` "
"attribute holds the default values for *message* and *explain* that will be "
"used if no value is provided; for unknown codes the default value for both "
"is the string ``???``. The body will be empty if the method is HEAD or the "
"response code is one of the following: :samp:`1{xx}`, ``204 No Content``, "
"``205 Reset Content``, ``304 Not Modified``."
msgstr ""
"Отправляет и регистрирует полный ответ об ошибке клиенту. Числовой *код* "
"указывает код ошибки HTTP, а *сообщение* — необязательное, краткое, "
"удобочитаемое описание ошибки. Аргумент *explain* можно использовать для "
"предоставления более подробной информации об ошибке; он будет отформатирован "
"с использованием атрибута :attr:`error_message_format` и отправлен после "
"полного набора заголовков в качестве тела ответа. Атрибут :attr:`responses` "
"содержит значения по умолчанию для *message* и *explain*, которые будут "
"использоваться, если значение не указано; для неизвестных кодов значением по "
"умолчанию для обоих является строка ``???``. Тело будет пустым, если метод "
"HEAD или код ответа один из следующих: :samp:`1{xx}`, ``204 No Content``, "
"``205 Reset Content``, ``304 Not Модифицированный``."

#: ../../library/http.server.rst:223
msgid ""
"The error response includes a Content-Length header. Added the *explain* "
"argument."
msgstr ""
"Відповідь про помилку містить заголовок Content-Length. Додано аргумент "
"*explain*."

#: ../../library/http.server.rst:229
msgid ""
"Adds a response header to the headers buffer and logs the accepted request. "
"The HTTP response line is written to the internal buffer, followed by "
"*Server* and *Date* headers. The values for these two headers are picked up "
"from the :meth:`version_string` and :meth:`date_time_string` methods, "
"respectively. If the server does not intend to send any other headers using "
"the :meth:`send_header` method, then :meth:`send_response` should be "
"followed by an :meth:`end_headers` call."
msgstr ""
"Додає заголовок відповіді до буфера заголовків і реєструє прийнятий запит. "
"Рядок відповіді HTTP записується у внутрішній буфер, а потім ідуть заголовки "
"*Server* і *Date*. Значення для цих двох заголовків беруться з методів :meth:"
"`version_string` і :meth:`date_time_string` відповідно. Якщо сервер не має "
"наміру надсилати будь-які інші заголовки за допомогою методу :meth:"
"`send_header`, тоді за :meth:`send_response` має слідувати виклик :meth:"
"`end_headers`."

#: ../../library/http.server.rst:238
msgid ""
"Headers are stored to an internal buffer and :meth:`end_headers` needs to be "
"called explicitly."
msgstr ""
"Заголовки зберігаються у внутрішньому буфері, і :meth:`end_headers` потрібно "
"викликати явно."

#: ../../library/http.server.rst:244
msgid ""
"Adds the HTTP header to an internal buffer which will be written to the "
"output stream when either :meth:`end_headers` or :meth:`flush_headers` is "
"invoked. *keyword* should specify the header keyword, with *value* "
"specifying its value. Note that, after the send_header calls are done, :meth:"
"`end_headers` MUST BE called in order to complete the operation."
msgstr ""
"Додає HTTP-заголовок до внутрішнього буфера, який буде записаний у вихідний "
"потік під час виклику :meth:`end_headers` або :meth:`flush_headers`. "
"*keyword* має вказувати ключове слово заголовка, а *value* — його значення. "
"Зауважте, що після завершення викликів send_header :meth:`end_headers` "
"ПОТРІБНО викликати, щоб завершити операцію."

#: ../../library/http.server.rst:250
msgid "Headers are stored in an internal buffer."
msgstr "Заголовки зберігаються у внутрішньому буфері."

#: ../../library/http.server.rst:255
msgid ""
"Sends the response header only, used for the purposes when ``100 Continue`` "
"response is sent by the server to the client. The headers not buffered and "
"sent directly the output stream.If the *message* is not specified, the HTTP "
"message corresponding the response *code*  is sent."
msgstr ""
"Надсилає лише заголовок відповіді, який використовується для цілей, коли "
"відповідь ``100 Continue`` надсилається сервером клієнту. Заголовки не "
"буферизуються та надсилаються безпосередньо в вихідний потік. Якщо "
"*повідомлення* не вказано, надсилається HTTP-повідомлення, що відповідає "
"*коду* відповіді."

#: ../../library/http.server.rst:264
msgid ""
"Adds a blank line (indicating the end of the HTTP headers in the response) "
"to the headers buffer and calls :meth:`flush_headers`."
msgstr ""
"Добавляет пустую строку (обозначающую конец HTTP-заголовков в ответе) в "
"буфер заголовков и вызывает :meth:`flush_headers`."

#: ../../library/http.server.rst:268
msgid "The buffered headers are written to the output stream."
msgstr "Буферизовані заголовки записуються у вихідний потік."

#: ../../library/http.server.rst:273
msgid ""
"Finally send the headers to the output stream and flush the internal headers "
"buffer."
msgstr ""
"Нарешті надішліть заголовки у вихідний потік і очистіть внутрішній буфер "
"заголовків."

#: ../../library/http.server.rst:280
msgid ""
"Logs an accepted (successful) request. *code* should specify the numeric "
"HTTP code associated with the response. If a size of the response is "
"available, then it should be passed as the *size* parameter."
msgstr ""
"Реєструє прийнятий (успішний) запит. *code* має вказувати числовий код HTTP, "
"пов’язаний із відповіддю. Якщо доступний розмір відповіді, його слід "
"передати як параметр *size*."

#: ../../library/http.server.rst:286
msgid ""
"Logs an error when a request cannot be fulfilled. By default, it passes the "
"message to :meth:`log_message`, so it takes the same arguments (*format* and "
"additional values)."
msgstr ""
"Записує помилку, коли запит не може бути виконано. За замовчуванням він "
"передає повідомлення в :meth:`log_message`, тому приймає ті самі аргументи "
"(*формат* і додаткові значення)."

#: ../../library/http.server.rst:293
msgid ""
"Logs an arbitrary message to ``sys.stderr``. This is typically overridden to "
"create custom error logging mechanisms. The *format* argument is a standard "
"printf-style format string, where the additional arguments to :meth:"
"`log_message` are applied as inputs to the formatting. The client ip address "
"and current date and time are prefixed to every message logged."
msgstr ""
"Записує довільне повідомлення до ``sys.stderr``. Зазвичай це замінюється, "
"щоб створити спеціальні механізми реєстрації помилок. Аргумент *format* — це "
"стандартний рядок форматування у стилі printf, де додаткові аргументи :meth:"
"`log_message` застосовуються як вхідні дані для форматування. IP-адреса "
"клієнта, поточна дата й час додаються до кожного зареєстрованого "
"повідомлення."

#: ../../library/http.server.rst:301
msgid ""
"Returns the server software's version string. This is a combination of the :"
"attr:`server_version` and :attr:`sys_version` attributes."
msgstr ""
"Повертає рядок версії програмного забезпечення сервера. Це комбінація "
"атрибутів :attr:`server_version` і :attr:`sys_version`."

#: ../../library/http.server.rst:306
msgid ""
"Returns the date and time given by *timestamp* (which must be ``None`` or in "
"the format returned by :func:`time.time`), formatted for a message header. "
"If *timestamp* is omitted, it uses the current date and time."
msgstr ""
"Повертає дату й час, задані *timestamp* (які мають бути ``None`` або у "
"форматі, що повертається :func:`time.time`), відформатовані для заголовка "
"повідомлення. Якщо *timestamp* пропущено, використовуються поточні дата й "
"час."

#: ../../library/http.server.rst:310
msgid "The result looks like ``'Sun, 06 Nov 1994 08:49:37 GMT'``."
msgstr "Результат виглядає так: ``'Sun, 06 Nov 1994 08:49:37 GMT''``."

#: ../../library/http.server.rst:314
msgid "Returns the current date and time, formatted for logging."
msgstr "Повертає поточну дату й час у форматі для журналювання."

#: ../../library/http.server.rst:318
msgid "Returns the client address."
msgstr "Retorna o endereço do cliente."

#: ../../library/http.server.rst:320
msgid ""
"Previously, a name lookup was performed. To avoid name resolution delays, it "
"now always returns the IP address."
msgstr ""
"Раніше було виконано пошук імені. Щоб уникнути затримок розпізнавання імен, "
"тепер завжди повертається IP-адреса."

#: ../../library/http.server.rst:327
msgid ""
"This class serves files from the directory *directory* and below, or the "
"current directory if *directory* is not provided, directly mapping the "
"directory structure to HTTP requests."
msgstr ""
"Цей клас обслуговує файли з каталогу *directory* і нижче, або з поточного "
"каталогу, якщо *directory* не надано, безпосередньо відображаючи структуру "
"каталогу на HTTP-запити."

#: ../../library/http.server.rst:331
msgid "Added the *directory* parameter."
msgstr "Добавлен параметр *directory*."

#: ../../library/http.server.rst:334
msgid "The *directory* parameter accepts a :term:`path-like object`."
msgstr "Параметр *directory* приймає :term:`path-like object`."

#: ../../library/http.server.rst:337
msgid ""
"A lot of the work, such as parsing the request, is done by the base class :"
"class:`BaseHTTPRequestHandler`.  This class implements the :func:`do_GET` "
"and :func:`do_HEAD` functions."
msgstr ""
"Muito do trabalho, como analisar o pedido, é feito pela classe base :class:"
"`BaseHTTPRequestHandler`. Esta classe implementa as funções :func:`do_GET` "
"e :func:`do_HEAD`."

#: ../../library/http.server.rst:341
msgid ""
"The following are defined as class-level attributes of :class:"
"`SimpleHTTPRequestHandler`:"
msgstr ""
"Наступне визначено як атрибути рівня класу :class:`SimpleHTTPRequestHandler`:"

#: ../../library/http.server.rst:346
msgid ""
"This will be ``\"SimpleHTTP/\" + __version__``, where ``__version__`` is "
"defined at the module level."
msgstr ""
"Це буде ``\"SimpleHTTP/\" + __version__``, де ``__version__`` визначено на "
"рівні модуля."

#: ../../library/http.server.rst:351
msgid ""
"A dictionary mapping suffixes into MIME types, contains custom overrides for "
"the default system mappings. The mapping is used case-insensitively, and so "
"should contain only lower-cased keys."
msgstr ""
"Суфікси словника, що відображають типи MIME, містять користувацькі заміни "
"для стандартних системних відображень. Відображення використовується без "
"урахування регістру, тому має містити лише ключі в нижньому регістрі."

#: ../../library/http.server.rst:355
msgid ""
"This dictionary is no longer filled with the default system mappings, but "
"only contains overrides."
msgstr ""
"Цей словник більше не заповнюється типовими системними відображеннями, а "
"містить лише перевизначення."

#: ../../library/http.server.rst:359
msgid ""
"The :class:`SimpleHTTPRequestHandler` class defines the following methods:"
msgstr "Клас :class:`SimpleHTTPRequestHandler` визначає такі методи:"

#: ../../library/http.server.rst:363
msgid ""
"This method serves the ``'HEAD'`` request type: it sends the headers it "
"would send for the equivalent ``GET`` request. See the :meth:`do_GET` method "
"for a more complete explanation of the possible headers."
msgstr ""
"Цей метод обслуговує тип запиту ``'HEAD``: він надсилає заголовки, які б "
"надіслав для еквівалентного запиту ``GET``. Перегляньте метод :meth:`do_GET` "
"для більш повного пояснення можливих заголовків."

#: ../../library/http.server.rst:369
msgid ""
"The request is mapped to a local file by interpreting the request as a path "
"relative to the current working directory."
msgstr ""
"Запит відображається в локальному файлі шляхом інтерпретації запиту як шляху "
"відносно поточного робочого каталогу."

#: ../../library/http.server.rst:372
msgid ""
"If the request was mapped to a directory, the directory is checked for a "
"file named ``index.html`` or ``index.htm`` (in that order). If found, the "
"file's contents are returned; otherwise a directory listing is generated by "
"calling the :meth:`list_directory` method. This method uses :func:`os."
"listdir` to scan the directory, and returns a ``404`` error response if the :"
"func:`~os.listdir` fails."
msgstr ""
"Якщо запит було зіставлено з каталогом, каталог перевіряється на наявність "
"файлу з назвою ``index.html`` або ``index.htm`` (у такому порядку). Якщо "
"знайдено, повертається вміст файлу; інакше список каталогу створюється "
"шляхом виклику методу :meth:`list_directory`. Цей метод використовує :func:"
"`os.listdir` для сканування каталогу та повертає відповідь про помилку "
"``404``, якщо :func:`~os.listdir` не вдається."

#: ../../library/http.server.rst:379
msgid ""
"If the request was mapped to a file, it is opened. Any :exc:`OSError` "
"exception in opening the requested file is mapped to a ``404``, ``'File not "
"found'`` error. If there was an ``'If-Modified-Since'`` header in the "
"request, and the file was not modified after this time, a ``304``, ``'Not "
"Modified'`` response is sent. Otherwise, the content type is guessed by "
"calling the :meth:`guess_type` method, which in turn uses the "
"*extensions_map* variable, and the file contents are returned."
msgstr ""
"Если запрос был сопоставлен с файлом, он открывается. Любое исключение :exc:"
"`OSError` при открытии запрошенного файла отображается в ошибку ``404``, "
"``Файл не найден'`. Если в запросе был заголовок «If-Modified-Since», и файл "
"не был изменен после этого времени, отправляется ответ «304», «Not "
"Modified». В противном случае тип контента угадывается путем вызова метода :"
"meth:`guess_type`, который, в свою очередь, использует переменную "
"*extensions_map*, и возвращается содержимое файла."

#: ../../library/http.server.rst:387
msgid ""
"A ``'Content-type:'`` header with the guessed content type is output, "
"followed by a ``'Content-Length:'`` header with the file's size and a "
"``'Last-Modified:'`` header with the file's modification time."
msgstr ""
"Виводиться заголовок ``'Content-type:''`` з припущеним типом вмісту, а потім "
"заголовок ``'Content-Length:''`` із заголовком ``'Content-Length:''`` із "
"заголовком розміру файлу та ``'Last-Modified:''``. заголовок із часом "
"модифікації файлу."

#: ../../library/http.server.rst:391
msgid ""
"Then follows a blank line signifying the end of the headers, and then the "
"contents of the file are output. If the file's MIME type starts with ``text/"
"`` the file is opened in text mode; otherwise binary mode is used."
msgstr ""

#: ../../library/http.server.rst:395
msgid ""
"For example usage, see the implementation of the ``test`` function in :"
"source:`Lib/http/server.py`."
msgstr ""
"Пример использования см. в реализации функции test в :source:`Lib/http/"
"server.py`."

#: ../../library/http.server.rst:398
msgid "Support of the ``'If-Modified-Since'`` header."
msgstr "Підтримка заголовка ``'If-Modified-Since``."

#: ../../library/http.server.rst:401
msgid ""
"The :class:`SimpleHTTPRequestHandler` class can be used in the following "
"manner in order to create a very basic webserver serving files relative to "
"the current directory::"
msgstr ""
"Клас :class:`SimpleHTTPRequestHandler` можна використовувати таким чином, "
"щоб створити простий веб-сервер, який обслуговує файли відносно поточного "
"каталогу:"

#: ../../library/http.server.rst:405
msgid ""
"import http.server\n"
"import socketserver\n"
"\n"
"PORT = 8000\n"
"\n"
"Handler = http.server.SimpleHTTPRequestHandler\n"
"\n"
"with socketserver.TCPServer((\"\", PORT), Handler) as httpd:\n"
"    print(\"serving at port\", PORT)\n"
"    httpd.serve_forever()"
msgstr ""
"import http.server\n"
"import socketserver\n"
"\n"
"PORT = 8000\n"
"\n"
"Handler = http.server.SimpleHTTPRequestHandler\n"
"\n"
"with socketserver.TCPServer((\"\", PORT), Handler) as httpd:\n"
"    print(\"serving at port\", PORT)\n"
"    httpd.serve_forever()"

#: ../../library/http.server.rst:417
msgid ""
":class:`SimpleHTTPRequestHandler` can also be subclassed to enhance "
"behavior, such as using different index file names by overriding the class "
"attribute :attr:`index_pages`."
msgstr ""
":class:`SimpleHTTPRequestHandler` также может быть подклассом для улучшения "
"поведения, например, для использования разных имен индексных файлов путем "
"переопределения атрибута класса :attr:`index_pages`."

#: ../../library/http.server.rst:424
msgid ""
"This class is used to serve either files or output of CGI scripts from the "
"current directory and below. Note that mapping HTTP hierarchic structure to "
"local directory structure is exactly as in :class:`SimpleHTTPRequestHandler`."
msgstr ""
"Цей клас використовується для обслуговування файлів або виведення сценаріїв "
"CGI з поточного каталогу та нижче. Зауважте, що зіставлення ієрархічної "
"структури HTTP зі структурою локального каталогу відбувається точно так "
"само, як у :class:`SimpleHTTPRequestHandler`."

#: ../../library/http.server.rst:430
msgid ""
"CGI scripts run by the :class:`CGIHTTPRequestHandler` class cannot execute "
"redirects (HTTP code 302), because code 200 (script output follows) is sent "
"prior to execution of the CGI script.  This pre-empts the status code."
msgstr ""
"Сценарії CGI, що виконуються класом :class:`CGIHTTPRequestHandler`, не "
"можуть виконувати перенаправлення (код HTTP 302), тому що код 200 (вивід "
"сценарію йде далі) надсилається перед виконанням сценарію CGI. Це випереджає "
"код стану."

#: ../../library/http.server.rst:435
msgid ""
"The class will however, run the CGI script, instead of serving it as a file, "
"if it guesses it to be a CGI script.  Only directory-based CGI are used --- "
"the other common server configuration is to treat special extensions as "
"denoting CGI scripts."
msgstr ""
"Однак клас запустить сценарій CGI замість того, щоб подавати його як файл, "
"якщо він здогадається, що це сценарій CGI. Використовується лише CGI на "
"основі каталогу --- іншою загальною конфігурацією сервера є розгляд "
"спеціальних розширень як позначення сценаріїв CGI."

#: ../../library/http.server.rst:440
msgid ""
"The :func:`do_GET` and :func:`do_HEAD` functions are modified to run CGI "
"scripts and serve the output, instead of serving files, if the request leads "
"to somewhere below the ``cgi_directories`` path."
msgstr ""
"Функції :func:`do_GET` і :func:`do_HEAD` модифіковано для запуску CGI-"
"скриптів і обслуговування виводу замість обслуговування файлів, якщо запит "
"веде десь нижче шляху ``cgi_directories``."

#: ../../library/http.server.rst:444
msgid "The :class:`CGIHTTPRequestHandler` defines the following data member:"
msgstr ":class:`CGIHTTPRequestHandler` визначає такий елемент даних:"

#: ../../library/http.server.rst:448
msgid ""
"This defaults to ``['/cgi-bin', '/htbin']`` and describes directories to "
"treat as containing CGI scripts."
msgstr ""
"За замовчуванням це ``['/cgi-bin', '/htbin']`` і описує каталоги, які слід "
"вважати такими, що містять сценарії CGI."

#: ../../library/http.server.rst:451
msgid "The :class:`CGIHTTPRequestHandler` defines the following method:"
msgstr ":class:`CGIHTTPRequestHandler` визначає такий метод:"

#: ../../library/http.server.rst:455
msgid ""
"This method serves the ``'POST'`` request type, only allowed for CGI "
"scripts.  Error 501, \"Can only POST to CGI scripts\", is output when trying "
"to POST to a non-CGI url."
msgstr ""
"Цей метод обслуговує тип запиту ``'POST'``, дозволений лише для сценаріїв "
"CGI. Помилка 501 \"Можна публікувати лише сценарії CGI\" виводиться під час "
"спроби ПУБЛІКАЦІЇ за URL-адресою, яка не є CGI."

#: ../../library/http.server.rst:459
msgid ""
"Note that CGI scripts will be run with UID of user nobody, for security "
"reasons.  Problems with the CGI script will be translated to error 403."
msgstr ""
"Зауважте, що сценарії CGI виконуватимуться з UID користувача nobody з "
"міркувань безпеки. Проблеми зі сценарієм CGI будуть переведені на помилку "
"403."

#: ../../library/http.server.rst:466
msgid "Command-line interface"
msgstr "Interface de linha de comando"

#: ../../library/http.server.rst:468
msgid ""
":mod:`http.server` can also be invoked directly using the :option:`-m` "
"switch of the interpreter.  The following example illustrates how to serve "
"files relative to the current directory::"
msgstr ""
":mod:`http.server` 也可使用解释器的 :option:`-m` 开关来直接唤起。 下面的例子"
"演示了如何以当前目录作为相对起点来发布文件::"

#: ../../library/http.server.rst:472
msgid "python -m http.server [OPTIONS] [port]"
msgstr "python -m http.server [OPTIONS] [port]"

#: ../../library/http.server.rst:474
msgid "The following options are accepted:"
msgstr "As seguintes opções são aceitas:"

#: ../../library/http.server.rst:480
msgid ""
"The server listens to port 8000 by default. The default can be overridden by "
"passing the desired port number as an argument::"
msgstr ""
"За замовчуванням сервер слухає порт 8000. Значення за замовчуванням можна "
"змінити, передавши потрібний номер порту як аргумент::"

#: ../../library/http.server.rst:483
msgid "python -m http.server 9000"
msgstr "python -m http.server 9000"

#: ../../library/http.server.rst:487
msgid ""
"Specifies a specific address to which it should bind. Both IPv4 and IPv6 "
"addresses are supported. By default, the server binds itself to all "
"interfaces. For example, the following command causes the server to bind to "
"localhost only::"
msgstr ""
"Указывает конкретный адрес, к которому он должен привязываться. "
"Поддерживаются адреса как IPv4, так и IPv6. По умолчанию сервер "
"привязывается ко всем интерфейсам. Например, следующая команда заставляет "
"сервер привязываться только к localhost::"

#: ../../library/http.server.rst:492
msgid "python -m http.server --bind 127.0.0.1"
msgstr "python -m http.server --bind 127.0.0.1"

#: ../../library/http.server.rst:496
msgid "Support IPv6 in the ``--bind`` option."
msgstr "Поддержка IPv6 в опции ``--bind``."

#: ../../library/http.server.rst:501
msgid ""
"Specifies a directory to which it should serve the files. By default, the "
"server uses the current directory. For example, the following command uses a "
"specific directory::"
msgstr ""
"指定一个它要提供文件服务的目录。 在默认情况下，服务器会使用当前目录。 例如，"
"以下命令将使用一个特定地址::"

#: ../../library/http.server.rst:505
msgid "python -m http.server --directory /tmp/"
msgstr "python -m http.server --directory /tmp/"

#: ../../library/http.server.rst:511
msgid ""
"Specifies the HTTP version to which the server is conformant. By default, "
"the server is conformant to HTTP/1.0. For example, the following command "
"runs an HTTP/1.1 conformant server::"
msgstr ""
"指定一个服务器所采用的 HTTP 版本。 在默认情况下，服务器会采用 HTTP/1.0。 例"
"如，以下命令将运行一个采用 HTTP/1.1 的服务器::"

#: ../../library/http.server.rst:515
msgid "python -m http.server --protocol HTTP/1.1"
msgstr "python -m http.server --protocol HTTP/1.1"

#: ../../library/http.server.rst:521
msgid ""
":class:`CGIHTTPRequestHandler` can be enabled in the command line by passing "
"the ``--cgi`` option::"
msgstr ""
":class:`CGIHTTPRequestHandler` можна ввімкнути в командному рядку, передавши "
"параметр ``--cgi``::"

#: ../../library/http.server.rst:524
msgid "python -m http.server --cgi"
msgstr "python -m http.server --cgi"

#: ../../library/http.server.rst:528
msgid ""
":class:`CGIHTTPRequestHandler` and the ``--cgi`` command-line option are not "
"intended for use by untrusted clients and may be vulnerable to exploitation. "
"Always use within a secure environment."
msgstr ""
":class:`CGIHTTPRequestHandler` 和 ``--cgi`` 命令行选项不适合不受信任的客户端"
"使用且容易被恶意利用。 应当始终在安全的环境中使用。"

#: ../../library/http.server.rst:536
msgid "Security considerations"
msgstr "Considerações de segurança"

#: ../../library/http.server.rst:540
msgid ""
":class:`SimpleHTTPRequestHandler` will follow symbolic links when handling "
"requests, this makes it possible for files outside of the specified "
"directory to be served."
msgstr ""
":class:`SimpleHTTPRequestHandler` будет следовать символическим ссылкам при "
"обработке запросов, это позволяет обслуживать файлы за пределами указанного "
"каталога."

#: ../../library/http.server.rst:544
msgid ""
"Earlier versions of Python did not scrub control characters from the log "
"messages emitted to stderr from ``python -m http.server`` or the default :"
"class:`BaseHTTPRequestHandler` ``.log_message`` implementation. This could "
"allow remote clients connecting to your server to send nefarious control "
"codes to your terminal."
msgstr ""
"Более ранние версии Python не удаляли управляющие символы из сообщений "
"журнала, отправляемых в stderr из ``python -m http.server`` или реализации :"
"class:`BaseHTTPRequestHandler``.log_message`` по умолчанию. Это может "
"позволить удаленным клиентам, подключающимся к вашему серверу, отправлять на "
"ваш терминал гнусные управляющие коды."

#: ../../library/http.server.rst:550
msgid "Control characters are scrubbed in stderr logs."
msgstr "Управляющие символы очищаются в журналах stderr."

#: ../../library/http.server.rst:9
msgid "WWW"
msgstr "WWW"

#: ../../library/http.server.rst:9
msgid "server"
msgstr "сервер"

#: ../../library/http.server.rst:9
msgid "HTTP"
msgstr "HTTP"

#: ../../library/http.server.rst:9
msgid "protocol"
msgstr "protocolo"

#: ../../library/http.server.rst:9
msgid "URL"
msgstr "URL"

#: ../../library/http.server.rst:9
msgid "httpd"
msgstr "httpd"

#: ../../library/http.server.rst:538
msgid "http.server"
msgstr "http.server"

#: ../../library/http.server.rst:538
msgid "security"
msgstr "безопасность"
