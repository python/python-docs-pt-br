# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Raphael Mendonça, 2021
# Marco Rougeth <marco@rougeth.com>, 2021
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2021
# i17obot <i17obot@rougeth.com>, 2021
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 01:09+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/lzma.rst:2
msgid ":mod:`!lzma` --- Compression using the LZMA algorithm"
msgstr ":mod:`!lzma` --- Compressão usando o algoritmo LZMA"

#: ../../library/lzma.rst:12
msgid "**Source code:** :source:`Lib/lzma.py`"
msgstr "**Código-fonte:** :source:`Lib/lzma.py`"

#: ../../library/lzma.rst:16
msgid ""
"This module provides classes and convenience functions for compressing and "
"decompressing data using the LZMA compression algorithm. Also included is a "
"file interface supporting the ``.xz`` and legacy ``.lzma`` file formats used "
"by the :program:`xz` utility, as well as raw compressed streams."
msgstr ""
"Este módulo fornece classes e funções de conveniência para comprimir e "
"descomprimir dados usando o algoritmo de compressão LZMA. Também está "
"incluída uma interface de arquivo que oferece suporte aos formatos de "
"arquivo ``.xz`` e legado ``.lzma`` usados pelo utilitário :program:`xz`, bem "
"como fluxos brutos comprimidos."

#: ../../library/lzma.rst:21
msgid ""
"The interface provided by this module is very similar to that of the :mod:"
"`bz2` module. Note that :class:`LZMAFile` and :class:`bz2.BZ2File` are *not* "
"thread-safe, so if you need to use a single :class:`LZMAFile` instance from "
"multiple threads, it is necessary to protect it with a lock."
msgstr ""
"A interface fornecida por este módulo é muito semelhante à do módulo :mod:"
"`bz2`. Observe que :class:`LZMAFile` e :class:`bz2.BZ2File` *não* são seguro "
"para thread, portanto, se você precisar usar uma única instância :class:"
"`LZMAFile` de vários threads, é necessário protegê-la com uma trava."

#: ../../library/lzma.rst:29
msgid ""
"This exception is raised when an error occurs during compression or "
"decompression, or while initializing the compressor/decompressor state."
msgstr ""
"Essa exceção é levantada quando ocorre um erro durante a compressão ou "
"descompressão ou durante a inicialização do estado compressor/descompressor."

#: ../../library/lzma.rst:34
msgid "Reading and writing compressed files"
msgstr "Lendo e escrevendo arquivos comprimidos"

#: ../../library/lzma.rst:38
msgid ""
"Open an LZMA-compressed file in binary or text mode, returning a :term:`file "
"object`."
msgstr ""
"Abre um arquivo comprimido com LZMA no modo binário ou texto, retornando um :"
"term:`objeto arquivo <file object>`."

#: ../../library/lzma.rst:41
msgid ""
"The *filename* argument can be either an actual file name (given as a :class:"
"`str`, :class:`bytes` or :term:`path-like <path-like object>` object), in "
"which case the named file is opened, or it can be an existing file object to "
"read from or write to."
msgstr ""
"O argumento *filename* pode ser um nome de arquivo real (dado como um "
"objeto :class:`str`, :class:`bytes` ou :term:`caminho ou similar <path-like "
"object>`), neste caso o arquivo nomeado é aberto , ou pode ser um objeto "
"arquivo existente para leitura ou escrita."

#: ../../library/lzma.rst:46
msgid ""
"The *mode* argument can be any of ``\"r\"``, ``\"rb\"``, ``\"w\"``, "
"``\"wb\"``, ``\"x\"``, ``\"xb\"``, ``\"a\"`` or ``\"ab\"`` for binary mode, "
"or ``\"rt\"``, ``\"wt\"``, ``\"xt\"``, or ``\"at\"`` for text mode. The "
"default is ``\"rb\"``."
msgstr ""
"O argumento *mode* pode ser qualquer um de ``\"r\"``, ``\"rb\"``, ``\"w\"``, "
"``\"wb\"``, ``\"x\"``, ``\"xb\"``, ``\"a\"`` ou ``\"ab\"`` para modo "
"binário, ou ``\"rt\"``, ``\"wt\"``, ``\"xt\"`` , ou ``\"at\"`` para o modo "
"de texto. O padrão é ``\"rb\"``."

#: ../../library/lzma.rst:50 ../../library/lzma.rst:95
msgid ""
"When opening a file for reading, the *format* and *filters* arguments have "
"the same meanings as for :class:`LZMADecompressor`. In this case, the "
"*check* and *preset* arguments should not be used."
msgstr ""
"Ao abrir um arquivo para leitura, os argumentos *format* e *filters* têm os "
"mesmos significados que em :class:`LZMADecompressor`. Neste caso, os "
"argumentos *check* e *preset* não devem ser usados."

#: ../../library/lzma.rst:54 ../../library/lzma.rst:99
msgid ""
"When opening a file for writing, the *format*, *check*, *preset* and "
"*filters* arguments have the same meanings as for :class:`LZMACompressor`."
msgstr ""
"Ao abrir um arquivo para escrita, os argumentos *format*, *check*, *preset* "
"e *filters* têm os mesmos significados que em :class:`LZMACompressor`."

#: ../../library/lzma.rst:57
msgid ""
"For binary mode, this function is equivalent to the :class:`LZMAFile` "
"constructor: ``LZMAFile(filename, mode, ...)``. In this case, the "
"*encoding*, *errors* and *newline* arguments must not be provided."
msgstr ""
"Para o modo binário, esta função é equivalente ao construtor :class:"
"`LZMAFile`: ``LZMAFile(filename, mode, ...)``. Nesse caso, os argumentos "
"*encoding*, *errors* e *newline* não devem ser fornecidos."

#: ../../library/lzma.rst:61
msgid ""
"For text mode, a :class:`LZMAFile` object is created, and wrapped in an :"
"class:`io.TextIOWrapper` instance with the specified encoding, error "
"handling behavior, and line ending(s)."
msgstr ""
"Para o modo texto, um objeto :class:`LZMAFile` é criado e encapsulado em uma "
"instância :class:`io.TextIOWrapper` com a codificação especificada, "
"comportamento de tratamento de erros e final(is) de linha."

#: ../../library/lzma.rst:65
msgid "Added support for the ``\"x\"``, ``\"xb\"`` and ``\"xt\"`` modes."
msgstr "Adicionado suporte para os modos ``\"x\"``, ``\"xb\"`` e ``\"xt\"``."

#: ../../library/lzma.rst:68 ../../library/lzma.rst:141
msgid "Accepts a :term:`path-like object`."
msgstr "Aceita um :term:`objeto caminho ou similar`."

#: ../../library/lzma.rst:74
msgid "Open an LZMA-compressed file in binary mode."
msgstr "Abre um arquivo comprimido com LZMA no modo binário."

#: ../../library/lzma.rst:76
msgid ""
"An :class:`LZMAFile` can wrap an already-open :term:`file object`, or "
"operate directly on a named file. The *filename* argument specifies either "
"the file object to wrap, or the name of the file to open (as a :class:"
"`str`, :class:`bytes` or :term:`path-like <path-like object>` object). When "
"wrapping an existing file object, the wrapped file will not be closed when "
"the :class:`LZMAFile` is closed."
msgstr ""
"Um :class:`LZMAFile` pode envolver um :term:`objeto arquivo <file object>` "
"já aberto, ou operar diretamente em um arquivo nomeado. O argumento "
"*filename* especifica o objeto arquivo a ser encapsulado ou o nome do "
"arquivo a ser aberto (como um objeto :class:`str`, :class:`bytes` ou :term:"
"`caminho ou similar <path-like object>`). Ao agrupar um objeto de arquivo "
"existente, o arquivo agrupado não será fechado quando o :class:`LZMAFile` "
"for fechado."

#: ../../library/lzma.rst:83
msgid ""
"The *mode* argument can be either ``\"r\"`` for reading (default), ``\"w\"`` "
"for overwriting, ``\"x\"`` for exclusive creation, or ``\"a\"`` for "
"appending. These can equivalently be given as ``\"rb\"``, ``\"wb\"``, "
"``\"xb\"`` and ``\"ab\"`` respectively."
msgstr ""
"O argumento *mode* pode ser ``\"r\"`` para leitura (padrão), ``\"w\"`` para "
"substituição, ``\"x\"`` para criação exclusiva ou ``\"a\"`` para anexar. "
"Estes podem ser equivalentemente dados como ``\"rb\"``, ``\"wb\"``, "
"``\"xb\"`` e ``\"ab\"`` respectivamente."

#: ../../library/lzma.rst:88
msgid ""
"If *filename* is a file object (rather than an actual file name), a mode of "
"``\"w\"`` does not truncate the file, and is instead equivalent to ``\"a\"``."
msgstr ""
"Se *filename* for um objeto arquivo (em vez de um nome de arquivo real), um "
"modo de ``\"w\"`` não truncará o arquivo e será equivalente a ``\"a\"``."

#: ../../library/lzma.rst:91
msgid ""
"When opening a file for reading, the input file may be the concatenation of "
"multiple separate compressed streams. These are transparently decoded as a "
"single logical stream."
msgstr ""
"Ao abrir um arquivo para leitura, o arquivo de entrada pode ser a "
"concatenação de vários fluxos comprimidos separados. Estes são decodificados "
"de forma transparente como um único fluxo lógico."

#: ../../library/lzma.rst:102
msgid ""
":class:`LZMAFile` supports all the members specified by :class:`io."
"BufferedIOBase`, except for :meth:`~io.BufferedIOBase.detach` and :meth:`~io."
"IOBase.truncate`. Iteration and the :keyword:`with` statement are supported."
msgstr ""
":class:`LZMAFile` suporta todos os membros especificados por :class:`io."
"BufferedIOBase`, exceto :meth:`~io.BufferedIOBase.detach` e :meth:`~io."
"IOBase.truncate`. Iteração e a instrução :keyword:`with` são suportadas."

#: ../../library/lzma.rst:107
msgid "The following method and attributes are also provided:"
msgstr "O método e os atributos a seguir também são fornecidos:"

#: ../../library/lzma.rst:111
msgid ""
"Return buffered data without advancing the file position. At least one byte "
"of data will be returned, unless EOF has been reached. The exact number of "
"bytes returned is unspecified (the *size* argument is ignored)."
msgstr ""
"Retorna dados armazenados em buffer sem avançar a posição do arquivo. Pelo "
"menos um byte de dados será retornado, a menos que o EOF tenha sido "
"atingido. O número exato de bytes retornados não é especificado (o argumento "
"*size* é ignorado)."

#: ../../library/lzma.rst:115
msgid ""
"While calling :meth:`peek` does not change the file position of the :class:"
"`LZMAFile`, it may change the position of the underlying file object (e.g. "
"if the :class:`LZMAFile` was constructed by passing a file object for "
"*filename*)."
msgstr ""
"Enquanto chamar :meth:`peek` não altera a posição do arquivo de :class:"
"`LZMAFile`, pode alterar a posição do objeto arquivo subjacente (por "
"exemplo, se o :class:`LZMAFile` foi construído passando um objeto arquivo "
"para *nome do arquivo*)."

#: ../../library/lzma.rst:122
msgid "``'rb'`` for reading and ``'wb'`` for writing."
msgstr "``'rb'`` para leitura e ``'wb'`` para escrita."

#: ../../library/lzma.rst:128
msgid ""
"The lzma file name.  Equivalent to the :attr:`~io.FileIO.name` attribute of "
"the underlying :term:`file object`."
msgstr ""
"O nome do arquivo lzma. Equivalente ao atributo :attr:`~io.FileIO.name` do :"
"term:`objeto arquivo` subjacente."

#: ../../library/lzma.rst:134
msgid "Added support for the ``\"x\"`` and ``\"xb\"`` modes."
msgstr "Adicionado suporte para os modos ``\"x\"`` e ``\"xb\"``."

#: ../../library/lzma.rst:137
msgid ""
"The :meth:`~io.BufferedIOBase.read` method now accepts an argument of "
"``None``."
msgstr ""
"O método :meth:`~io.BufferedIOBase.read` agora aceita um argumento de "
"``None``."

#: ../../library/lzma.rst:146
msgid "Compressing and decompressing data in memory"
msgstr "Comprimindo e descomprimindo dados na memória"

#: ../../library/lzma.rst:150
msgid ""
"Create a compressor object, which can be used to compress data incrementally."
msgstr ""
"Cria um objeto compressão, que pode ser usado para comprimir dados de forma "
"incremental."

#: ../../library/lzma.rst:152
msgid ""
"For a more convenient way of compressing a single chunk of data, see :func:"
"`compress`."
msgstr ""
"Para uma maneira mais conveniente de comprimir um único bloco de dados, "
"consulte :func:`compress`."

#: ../../library/lzma.rst:155
msgid ""
"The *format* argument specifies what container format should be used. "
"Possible values are:"
msgstr ""
"O argumento *format* especifica qual formato de contêiner deve ser usado. Os "
"valores possíveis são:"

#: ../../library/lzma.rst:158
msgid ":const:`FORMAT_XZ`: The ``.xz`` container format."
msgstr ":const:`FORMAT_XZ`: O formato de contêiner ``.xz``."

#: ../../library/lzma.rst:159
msgid "This is the default format."
msgstr "Este é o formato padrão."

#: ../../library/lzma.rst:161
msgid ":const:`FORMAT_ALONE`: The legacy ``.lzma`` container format."
msgstr ":const:`FORMAT_ALONE`: O formato de contêiner legado ``.lzma``."

#: ../../library/lzma.rst:162
msgid ""
"This format is more limited than ``.xz`` -- it does not support integrity "
"checks or multiple filters."
msgstr ""
"Este formato é mais limitado que ``.xz`` -- ele não oferece suporte a "
"verificações de integridade ou filtros múltiplos."

#: ../../library/lzma.rst:165
msgid ":const:`FORMAT_RAW`: A raw data stream, not using any container format."
msgstr ""
":const:`FORMAT_RAW`: Um fluxo de dados brutos, que não usa nenhum formato de "
"contêiner."

#: ../../library/lzma.rst:166
msgid ""
"This format specifier does not support integrity checks, and requires that "
"you always specify a custom filter chain (for both compression and "
"decompression). Additionally, data compressed in this manner cannot be "
"decompressed using :const:`FORMAT_AUTO` (see :class:`LZMADecompressor`)."
msgstr ""
"Esse especificador de formato não oferece suporte a verificações de "
"integridade e exige que você sempre especifique uma cadeia de filtros "
"personalizada (para compressão e descompressão). Além disso, dados "
"comprimidos dessa maneira não podem ser descomprimidos usando :const:"
"`FORMAT_AUTO` (veja :class:`LZMADecompressor`)."

#: ../../library/lzma.rst:171
msgid ""
"The *check* argument specifies the type of integrity check to include in the "
"compressed data. This check is used when decompressing, to ensure that the "
"data has not been corrupted. Possible values are:"
msgstr ""
"O argumento *check* especifica o tipo de verificação de integridade a ser "
"incluída nos dados comprimidos. Essa verificação é usada ao descomprimir, "
"para garantir que os dados não foram corrompidos. Os valores possíveis são:"

#: ../../library/lzma.rst:175
msgid ""
":const:`CHECK_NONE`: No integrity check. This is the default (and the only "
"acceptable value) for :const:`FORMAT_ALONE` and :const:`FORMAT_RAW`."
msgstr ""
":const:`CHECK_NONE`: Sem verificação de integridade. Este é o padrão (e o "
"único valor aceitável) para :const:`FORMAT_ALONE` e :const:`FORMAT_RAW`."

#: ../../library/lzma.rst:179
msgid ":const:`CHECK_CRC32`: 32-bit Cyclic Redundancy Check."
msgstr ":const:`CHECK_CRC32`: Verificação de redundância cíclica de 32 bits."

#: ../../library/lzma.rst:181
msgid ""
":const:`CHECK_CRC64`: 64-bit Cyclic Redundancy Check. This is the default "
"for :const:`FORMAT_XZ`."
msgstr ""
":const:`CHECK_CRC64`: Verificação de redundância cíclica de 64 bits. Este é "
"o padrão para :const:`FORMAT_XZ`."

#: ../../library/lzma.rst:184
msgid ":const:`CHECK_SHA256`: 256-bit Secure Hash Algorithm."
msgstr ":const:`CHECK_SHA256`: Algoritmo de hash seguro de 256 bits."

#: ../../library/lzma.rst:186
msgid ""
"If the specified check is not supported, an :class:`LZMAError` is raised."
msgstr ""
"Se a verificação especificada não for suportada, uma exceção :class:"
"`LZMAError` será levantada."

#: ../../library/lzma.rst:188
msgid ""
"The compression settings can be specified either as a preset compression "
"level (with the *preset* argument), or in detail as a custom filter chain "
"(with the *filters* argument)."
msgstr ""
"As configurações de compressão podem ser especificadas como um nível de "
"compressão predefinido (com o argumento *preset*) ou em detalhes como uma "
"cadeia de filtros personalizada (com o argumento *filters*)."

#: ../../library/lzma.rst:192
msgid ""
"The *preset* argument (if provided) should be an integer between ``0`` and "
"``9`` (inclusive), optionally OR-ed with the constant :const:"
"`PRESET_EXTREME`. If neither *preset* nor *filters* are given, the default "
"behavior is to use :const:`PRESET_DEFAULT` (preset level ``6``). Higher "
"presets produce smaller output, but make the compression process slower."
msgstr ""
"O argumento *preset* (se fornecido) deve ser um inteiro entre ``0`` e ``9`` "
"(inclusive), opcionalmente com OR com a constante :const:`PRESET_EXTREME`. "
"Se nem *preset* nem *filters* forem fornecidos, o comportamento padrão é "
"usar :const:`PRESET_DEFAULT` (nível predefinido ``6``). Predefinições mais "
"altas produzem uma saída menor, mas tornam o processo de compressão mais "
"lento."

#: ../../library/lzma.rst:201
msgid ""
"In addition to being more CPU-intensive, compression with higher presets "
"also requires much more memory (and produces output that needs more memory "
"to decompress). With preset ``9`` for example, the overhead for an :class:"
"`LZMACompressor` object can be as high as 800 MiB. For this reason, it is "
"generally best to stick with the default preset."
msgstr ""
"Além de consumir mais CPU, a compressão com predefinições mais altas também "
"requer muito mais memória (e produz uma saída que precisa de mais memória "
"para descompressão). Com a predefinição ``9`` por exemplo, a sobrecarga para "
"um objeto :class:`LZMACompressor` pode chegar a 800 MiB. Por esse motivo, "
"geralmente é melhor ficar com a predefinição padrão."

#: ../../library/lzma.rst:207
msgid ""
"The *filters* argument (if provided) should be a filter chain specifier. "
"See :ref:`filter-chain-specs` for details."
msgstr ""
"O argumento *filters* (se fornecido) deve ser um especificador de cadeia de "
"filtros. Veja :ref:`filter-chain-specs` para detalhes."

#: ../../library/lzma.rst:212
msgid ""
"Compress *data* (a :class:`bytes` object), returning a :class:`bytes` object "
"containing compressed data for at least part of the input. Some of *data* "
"may be buffered internally, for use in later calls to :meth:`compress` and :"
"meth:`flush`. The returned data should be concatenated with the output of "
"any previous calls to :meth:`compress`."
msgstr ""
"Comprime *data* (um objeto :class:`bytes`), retornando um objeto :class:"
"`bytes` contendo dados comprimidos para pelo menos parte da entrada. Alguns "
"dos *data* podem ser armazenados internamente, para uso em chamadas "
"posteriores para :meth:`compress` e :meth:`flush`. Os dados retornados devem "
"ser concatenados com a saída de quaisquer chamadas anteriores para :meth:"
"`compress`."

#: ../../library/lzma.rst:220
msgid ""
"Finish the compression process, returning a :class:`bytes` object containing "
"any data stored in the compressor's internal buffers."
msgstr ""
"Conclui o processo de compressão, retornando um objeto :class:`bytes` "
"contendo todos os dados armazenados nos buffers internos do compressor."

#: ../../library/lzma.rst:223
msgid "The compressor cannot be used after this method has been called."
msgstr "O compressor não pode ser usado após a chamada deste método."

#: ../../library/lzma.rst:228
msgid ""
"Create a decompressor object, which can be used to decompress data "
"incrementally."
msgstr ""
"Cria um objeto descompressor, que pode ser usado para descomprimir dados de "
"forma incremental."

#: ../../library/lzma.rst:231
msgid ""
"For a more convenient way of decompressing an entire compressed stream at "
"once, see :func:`decompress`."
msgstr ""
"Para uma maneira mais conveniente de descomprimir um fluxo comprimido "
"inteiro de uma só vez, consulte :func:`decompress`."

#: ../../library/lzma.rst:234
msgid ""
"The *format* argument specifies the container format that should be used. "
"The default is :const:`FORMAT_AUTO`, which can decompress both ``.xz`` and "
"``.lzma`` files. Other possible values are :const:`FORMAT_XZ`, :const:"
"`FORMAT_ALONE`, and :const:`FORMAT_RAW`."
msgstr ""
"O argumento *format* especifica o formato do contêiner que deve ser usado. O "
"padrão é :const:`FORMAT_AUTO`, que pode descomprimir os arquivos ``.xz`` e "
"``.lzma``. Outros valores possíveis são :const:`FORMAT_XZ`, :const:"
"`FORMAT_ALONE` e :const:`FORMAT_RAW`."

#: ../../library/lzma.rst:239
msgid ""
"The *memlimit* argument specifies a limit (in bytes) on the amount of memory "
"that the decompressor can use. When this argument is used, decompression "
"will fail with an :class:`LZMAError` if it is not possible to decompress the "
"input within the given memory limit."
msgstr ""
"O argumento *memlimit* especifica um limite (em bytes) na quantidade de "
"memória que o descompressor pode usar. Quando esse argumento é usado, a "
"descompressão falhará com um :class:`LZMAError` se não for possível "
"descomprimir a entrada dentro do limite de memória fornecido."

#: ../../library/lzma.rst:244
msgid ""
"The *filters* argument specifies the filter chain that was used to create "
"the stream being decompressed. This argument is required if *format* is :"
"const:`FORMAT_RAW`, but should not be used for other formats. See :ref:"
"`filter-chain-specs` for more information about filter chains."
msgstr ""
"O argumento *filters* especifica a cadeia de filtros que foi usada para "
"criar o fluxo que está sendo descomprimido. Este argumento é necessário se "
"*format* for :const:`FORMAT_RAW`, mas não deve ser usado para outros "
"formatos. Veja :ref:`filter-chain-specs` para mais informações sobre cadeias "
"de filtros."

#: ../../library/lzma.rst:250
msgid ""
"This class does not transparently handle inputs containing multiple "
"compressed streams, unlike :func:`decompress` and :class:`LZMAFile`. To "
"decompress a multi-stream input with :class:`LZMADecompressor`, you must "
"create a new decompressor for each stream."
msgstr ""
"Esta classe não manipula de forma transparente entradas contendo múltiplos "
"fluxos comprimidos, diferentemente de :func:`decompress` e :class:"
"`LZMAFile`. Para descomprimir uma entrada multi-fluxo com :class:"
"`LZMADecompressor`, você deve criar um novo descompactador para cada fluxo."

#: ../../library/lzma.rst:257
msgid ""
"Decompress *data* (a :term:`bytes-like object`), returning uncompressed data "
"as bytes. Some of *data* may be buffered internally, for use in later calls "
"to :meth:`decompress`. The returned data should be concatenated with the "
"output of any previous calls to :meth:`decompress`."
msgstr ""
"Descomprime dados *data* (um :term:`objeto bytes ou similar <bytes-like "
"object>`), retornando dados não comprimidos como bytes. Alguns dos *data* "
"podem ser armazenados em buffer internamente, para uso em chamadas "
"posteriores para :meth:`decompress`. Os dados retornados devem ser "
"concatenados com a saída de qualquer chamada anterior para :meth:"
"`decompress`."

#: ../../library/lzma.rst:263
msgid ""
"If *max_length* is nonnegative, returns at most *max_length* bytes of "
"decompressed data. If this limit is reached and further output can be "
"produced, the :attr:`~.needs_input` attribute will be set to ``False``. In "
"this case, the next call to :meth:`~.decompress` may provide *data* as "
"``b''`` to obtain more of the output."
msgstr ""
"Se *max_length* for não negativo, retornará no máximo *max_length* bytes de "
"dados descomprimidos. Se este limite for atingido e mais saída puder ser "
"produzida, o atributo :attr:`~.needs_input` será definido como ``False``. "
"Neste caso, a próxima chamada para :meth:`~.decompress` pode fornecer *data* "
"como ``b''`` para obter mais saída."

#: ../../library/lzma.rst:270
msgid ""
"If all of the input data was decompressed and returned (either because this "
"was less than *max_length* bytes, or because *max_length* was negative), "
"the :attr:`~.needs_input` attribute will be set to ``True``."
msgstr ""
"Se todos os dados de entrada foram descomprimidos e retornados (seja porque "
"era menor que *max_length* bytes, ou porque *max_length* era negativo), o "
"atributo :attr:`~.needs_input` será definido como ``True`` ."

#: ../../library/lzma.rst:275
msgid ""
"Attempting to decompress data after the end of stream is reached raises an :"
"exc:`EOFError`.  Any data found after the end of the stream is ignored and "
"saved in the :attr:`~.unused_data` attribute."
msgstr ""
"A tentativa de descomprimir os dados após o final do fluxo ser atingido gera "
"um :exc:`EOFError`. Quaisquer dados encontrados após o final do fluxo são "
"ignorados e salvos no atributo :attr:`~.unused_data`."

#: ../../library/lzma.rst:279
msgid "Added the *max_length* parameter."
msgstr "Adicionado o parâmetro *max_length*."

#: ../../library/lzma.rst:284
msgid ""
"The ID of the integrity check used by the input stream. This may be :const:"
"`CHECK_UNKNOWN` until enough of the input has been decoded to determine what "
"integrity check it uses."
msgstr ""
"O ID da verificação de integridade usada pelo fluxo de entrada. Pode ser :"
"const:`CHECK_UNKNOWN` até que o suficiente da entrada tenha sido "
"decodificado para determinar qual verificação de integridade ela usa."

#: ../../library/lzma.rst:290
msgid "``True`` if the end-of-stream marker has been reached."
msgstr "``True`` se o marcador de fim de fluxo foi atingido."

#: ../../library/lzma.rst:294
msgid "Data found after the end of the compressed stream."
msgstr "Dados encontrados após o término do fluxo comprimido."

#: ../../library/lzma.rst:296
msgid "Before the end of the stream is reached, this will be ``b\"\"``."
msgstr "Antes do final do fluxo ser alcançado, isso será ``b\"\"``."

#: ../../library/lzma.rst:300
msgid ""
"``False`` if the :meth:`.decompress` method can provide more decompressed "
"data before requiring new uncompressed input."
msgstr ""
"``False`` se o método :meth:`.decompress` puder fornecer mais dados "
"descomprimidos antes de exigir uma nova entrada não comprimida."

#: ../../library/lzma.rst:307
msgid ""
"Compress *data* (a :class:`bytes` object), returning the compressed data as "
"a :class:`bytes` object."
msgstr ""
"Comprime *data* (um objeto :class:`bytes`), retornando os dados comprimidos "
"como um objeto :class:`bytes`."

#: ../../library/lzma.rst:310
msgid ""
"See :class:`LZMACompressor` above for a description of the *format*, "
"*check*, *preset* and *filters* arguments."
msgstr ""
"Veja :class:`LZMACompressor` acima para uma descrição dos argumentos "
"*format*, *check*, *preset* e *filters*."

#: ../../library/lzma.rst:316
msgid ""
"Decompress *data* (a :class:`bytes` object), returning the uncompressed data "
"as a :class:`bytes` object."
msgstr ""
"Descomprime *data* (um objeto :class:`bytes`), retornando os dados não "
"comprimidos como um objeto :class:`bytes`."

#: ../../library/lzma.rst:319
msgid ""
"If *data* is the concatenation of multiple distinct compressed streams, "
"decompress all of these streams, and return the concatenation of the results."
msgstr ""
"Se *data* forem a concatenação de vários fluxos comprimidos distintos, "
"descomprime todos esses fluxos e retorna a concatenação dos resultados."

#: ../../library/lzma.rst:322
msgid ""
"See :class:`LZMADecompressor` above for a description of the *format*, "
"*memlimit* and *filters* arguments."
msgstr ""
"Veja :class:`LZMADecompressor` acima para uma descrição dos argumentos "
"*format*, *memlimit* e *filters*."

#: ../../library/lzma.rst:327
msgid "Miscellaneous"
msgstr "Diversos"

#: ../../library/lzma.rst:331
msgid ""
"Return ``True`` if the given integrity check is supported on this system."
msgstr ""
"Retorna ``True`` se a verificação de integridade fornecida for suportada "
"neste sistema."

#: ../../library/lzma.rst:333
msgid ""
":const:`CHECK_NONE` and :const:`CHECK_CRC32` are always supported. :const:"
"`CHECK_CRC64` and :const:`CHECK_SHA256` may be unavailable if you are using "
"a version of :program:`liblzma` that was compiled with a limited feature set."
msgstr ""
":const:`CHECK_NONE` e :const:`CHECK_CRC32` são sempre suportados. :const:"
"`CHECK_CRC64` e :const:`CHECK_SHA256` podem não estar disponíveis se você "
"estiver usando uma versão do :program:`liblzma` que foi compilada com um "
"conjunto de recursos limitado."

#: ../../library/lzma.rst:342
msgid "Specifying custom filter chains"
msgstr "Especificando cadeias de filtros personalizadas"

#: ../../library/lzma.rst:344
msgid ""
"A filter chain specifier is a sequence of dictionaries, where each "
"dictionary contains the ID and options for a single filter. Each dictionary "
"must contain the key ``\"id\"``, and may contain additional keys to specify "
"filter-dependent options. Valid filter IDs are as follows:"
msgstr ""
"Um especificador de cadeia de filtros é uma sequência de dicionários, onde "
"cada dicionário contém o ID e as opções para um único filtro. Cada "
"dicionário deve conter a chave ``\"id\"`` e pode conter chaves adicionais "
"para especificar opções dependentes do filtro. Os IDs de filtro válidos são "
"os seguintes:"

#: ../../library/lzma.rst:349
msgid "Compression filters:"
msgstr "Filtro Compression:"

#: ../../library/lzma.rst:351
msgid ":const:`FILTER_LZMA1` (for use with :const:`FORMAT_ALONE`)"
msgstr ":const:`FILTER_LZMA1` (para ser usado com :const:`FORMAT_ALONE`)"

#: ../../library/lzma.rst:352
msgid ""
":const:`FILTER_LZMA2` (for use with :const:`FORMAT_XZ` and :const:"
"`FORMAT_RAW`)"
msgstr ""
":const:`FILTER_LZMA2` (para ser utilizado com :const:`FORMAT_XZ` and :const:"
"`FORMAT_RAW`)"

#: ../../library/lzma.rst:354
msgid "Delta filter:"
msgstr "Filtro delta:"

#: ../../library/lzma.rst:356
msgid ":const:`FILTER_DELTA`"
msgstr ":const:`FILTER_DELTA`"

#: ../../library/lzma.rst:358
msgid "Branch-Call-Jump (BCJ) filters:"
msgstr "Filtros Branch-Call-Jump (BCJ):"

#: ../../library/lzma.rst:360
msgid ":const:`FILTER_X86`"
msgstr ":const:`FILTER_X86`"

#: ../../library/lzma.rst:361
msgid ":const:`FILTER_IA64`"
msgstr ":const:`FILTER_IA64`"

#: ../../library/lzma.rst:362
msgid ":const:`FILTER_ARM`"
msgstr ":const:`FILTER_ARM`"

#: ../../library/lzma.rst:363
msgid ":const:`FILTER_ARMTHUMB`"
msgstr ":const:`FILTER_ARMTHUMB`"

#: ../../library/lzma.rst:364
msgid ":const:`FILTER_POWERPC`"
msgstr ":const:`FILTER_POWERPC`"

#: ../../library/lzma.rst:365
msgid ":const:`FILTER_SPARC`"
msgstr ":const:`FILTER_SPARC`"

#: ../../library/lzma.rst:367
msgid ""
"A filter chain can consist of up to 4 filters, and cannot be empty. The last "
"filter in the chain must be a compression filter, and any other filters must "
"be delta or BCJ filters."
msgstr ""
"Uma cadeia de filtros pode consistir em até 4 filtros e não pode estar "
"vazia. O último filtro na cadeia deve ser um filtro de compressão e "
"quaisquer outros filtros devem ser filtros delta ou BCJ."

#: ../../library/lzma.rst:371
msgid ""
"Compression filters support the following options (specified as additional "
"entries in the dictionary representing the filter):"
msgstr ""
"Os filtros de compressão suportam as seguintes opções (especificadas como "
"entradas adicionais no dicionário que representa o filtro):"

#: ../../library/lzma.rst:374
msgid ""
"``preset``: A compression preset to use as a source of default values for "
"options that are not specified explicitly."
msgstr ""
"``preset``: Uma predefinição de compressão para usar como fonte de valores "
"padrão para opções que não são especificadas explicitamente."

#: ../../library/lzma.rst:376
msgid ""
"``dict_size``: Dictionary size in bytes. This should be between 4 KiB and "
"1.5 GiB (inclusive)."
msgstr ""
"``dict_size``: Tamanho do dicionário em bytes. Deve estar entre 4 KiB e 1,5 "
"GiB (inclusive)."

#: ../../library/lzma.rst:378
msgid "``lc``: Number of literal context bits."
msgstr "``lc``: Número de bits de contexto literal."

#: ../../library/lzma.rst:379
msgid ""
"``lp``: Number of literal position bits. The sum ``lc + lp`` must be at most "
"4."
msgstr ""
"``lp``: Número de bits de posição literal. A soma ``lc + lp`` deve ser no "
"máximo 4."

#: ../../library/lzma.rst:381
msgid "``pb``: Number of position bits; must be at most 4."
msgstr "``pb``: Número de bits de posição; deve ser no máximo 4."

#: ../../library/lzma.rst:382
msgid "``mode``: :const:`MODE_FAST` or :const:`MODE_NORMAL`."
msgstr "``mode``: :const:`MODE_FAST` ou :const:`MODE_NORMAL`."

#: ../../library/lzma.rst:383
msgid ""
"``nice_len``: What should be considered a \"nice length\" for a match. This "
"should be 273 or less."
msgstr ""
"``nice_len``: O que deve ser considerado um \"tamanho agradável\" para uma "
"correspondência. Deve ser 273 ou menos."

#: ../../library/lzma.rst:385
msgid ""
"``mf``: What match finder to use -- :const:`MF_HC3`, :const:`MF_HC4`, :const:"
"`MF_BT2`, :const:`MF_BT3`, or :const:`MF_BT4`."
msgstr ""
"``mf``: Qual localizador de correspondências usar -- :const:`MF_HC3`, :const:"
"`MF_HC4`, :const:`MF_BT2`, :const:`MF_BT3` ou :const:`MF_BT4`."

#: ../../library/lzma.rst:387
msgid ""
"``depth``: Maximum search depth used by match finder. 0 (default) means to "
"select automatically based on other filter options."
msgstr ""
"``depth``: Profundidade máxima de pesquisa usada pelo localizador de "
"correspondências. 0 (padrão) significa selecionar automaticamente com base "
"em outras opções de filtro."

#: ../../library/lzma.rst:390
msgid ""
"The delta filter stores the differences between bytes, producing more "
"repetitive input for the compressor in certain circumstances. It supports "
"one option, ``dist``. This indicates the distance between bytes to be "
"subtracted. The default is 1, i.e. take the differences between adjacent "
"bytes."
msgstr ""
"O filtro delta armazena as diferenças entre bytes, produzindo uma entrada "
"mais repetitiva para o compressor em certas circunstâncias. Ele suporta uma "
"opção, ``dist``. Isso indica a distância entre bytes a ser subtraída. O "
"padrão é 1, ou seja, pega as diferenças entre bytes adjacentes."

#: ../../library/lzma.rst:395
msgid ""
"The BCJ filters are intended to be applied to machine code. They convert "
"relative branches, calls and jumps in the code to use absolute addressing, "
"with the aim of increasing the redundancy that can be exploited by the "
"compressor. These filters support one option, ``start_offset``. This "
"specifies the address that should be mapped to the beginning of the input "
"data. The default is 0."
msgstr ""
"Os filtros BCJ são destinados a serem aplicados ao código de máquina. Eles "
"convertem ramificações relativas, chamadas e saltos no código para usar "
"endereçamento absoluto, com o objetivo de aumentar a redundância que pode "
"ser explorada pelo compressor. Esses filtros suportam uma opção, "
"``start_offset``. Isso especifica o endereço que deve ser mapeado para o "
"início dos dados de entrada. O padrão é 0."

#: ../../library/lzma.rst:403
msgid "Examples"
msgstr "Exemplos"

#: ../../library/lzma.rst:405
msgid "Reading in a compressed file::"
msgstr "Lendo em um arquivo comprimido::"

#: ../../library/lzma.rst:407
msgid ""
"import lzma\n"
"with lzma.open(\"file.xz\") as f:\n"
"    file_content = f.read()"
msgstr ""
"import lzma\n"
"with lzma.open(\"file.xz\") as f:\n"
"    file_content = f.read()"

#: ../../library/lzma.rst:411
msgid "Creating a compressed file::"
msgstr "Criando um arquivo comprimido::"

#: ../../library/lzma.rst:413
msgid ""
"import lzma\n"
"data = b\"Insert Data Here\"\n"
"with lzma.open(\"file.xz\", \"w\") as f:\n"
"    f.write(data)"
msgstr ""
"import lzma\n"
"data = b\"Insira dados aqui\"\n"
"with lzma.open(\"file.xz\", \"w\") as f:\n"
"    f.write(data)"

#: ../../library/lzma.rst:418
msgid "Compressing data in memory::"
msgstr "Comprimindo dados na memória::"

#: ../../library/lzma.rst:420
msgid ""
"import lzma\n"
"data_in = b\"Insert Data Here\"\n"
"data_out = lzma.compress(data_in)"
msgstr ""
"import lzma\n"
"data_in = b\"Insert Data Here\"\n"
"data_out = lzma.compress(data_in)"

#: ../../library/lzma.rst:424
msgid "Incremental compression::"
msgstr "Compressão incremental::"

#: ../../library/lzma.rst:426
msgid ""
"import lzma\n"
"lzc = lzma.LZMACompressor()\n"
"out1 = lzc.compress(b\"Some data\\n\")\n"
"out2 = lzc.compress(b\"Another piece of data\\n\")\n"
"out3 = lzc.compress(b\"Even more data\\n\")\n"
"out4 = lzc.flush()\n"
"# Concatenate all the partial results:\n"
"result = b\"\".join([out1, out2, out3, out4])"
msgstr ""
"import lzma\n"
"lzc = lzma.LZMACompressor()\n"
"out1 = lzc.compress(b\"Alguns dados\\n\")\n"
"out2 = lzc.compress(b\"Outro pedaço de dados\\n\")\n"
"out3 = lzc.compress(b\"Ainda mais dados\\n\")\n"
"out4 = lzc.flush()\n"
"# Concatena todos os resultados parciais:\n"
"result = b\"\".join([out1, out2, out3, out4])"

#: ../../library/lzma.rst:435
msgid "Writing compressed data to an already-open file::"
msgstr "Escrevendo dados comprimidos em um arquivo já aberto::"

#: ../../library/lzma.rst:437
msgid ""
"import lzma\n"
"with open(\"file.xz\", \"wb\") as f:\n"
"    f.write(b\"This data will not be compressed\\n\")\n"
"    with lzma.open(f, \"w\") as lzf:\n"
"        lzf.write(b\"This *will* be compressed\\n\")\n"
"    f.write(b\"Not compressed\\n\")"
msgstr ""
"import lzma\n"
"with open(\"file.xz\", \"wb\") as f:\n"
"    f.write(b\"Este dados serão comprimidos\\n\")\n"
"    with lzma.open(f, \"w\") as lzf:\n"
"        lzf.write(b\"Isso *vai* ser comprimidos\\n\")\n"
"    f.write(b\"Não comprimidos\\n\")"

#: ../../library/lzma.rst:444
msgid "Creating a compressed file using a custom filter chain::"
msgstr ""
"Criando um arquivo comprimido usando uma cadeia de filtros personalizada::"

#: ../../library/lzma.rst:446
msgid ""
"import lzma\n"
"my_filters = [\n"
"    {\"id\": lzma.FILTER_DELTA, \"dist\": 5},\n"
"    {\"id\": lzma.FILTER_LZMA2, \"preset\": 7 | lzma.PRESET_EXTREME},\n"
"]\n"
"with lzma.open(\"file.xz\", \"w\", filters=my_filters) as f:\n"
"    f.write(b\"blah blah blah\")"
msgstr ""
"import lzma\n"
"my_filters = [\n"
"    {\"id\": lzma.FILTER_DELTA, \"dist\": 5},\n"
"    {\"id\": lzma.FILTER_LZMA2, \"preset\": 7 | lzma.PRESET_EXTREME},\n"
"]\n"
"with lzma.open(\"file.xz\", \"w\", filters=my_filters) as f:\n"
"    f.write(b\"blá blá blá\")"
