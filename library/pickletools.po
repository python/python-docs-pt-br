# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# i17obot <i17obot@rougeth.com>, 2021
# Adorilson Bezerra <adorilson@gmail.com>, 2024
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-31 10:59+0000\n"
"PO-Revision-Date: 2021-06-28 01:11+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/pickletools.rst:2
msgid ":mod:`!pickletools` --- Tools for pickle developers"
msgstr ":mod:`!pickletools` --- Ferramentas para desenvolvedores pickle"

#: ../../library/pickletools.rst:8
msgid "**Source code:** :source:`Lib/pickletools.py`"
msgstr "**Código-fonte:** :source:`Lib/pickletools.py`"

#: ../../library/pickletools.rst:13
msgid ""
"This module contains various constants relating to the intimate details of "
"the :mod:`pickle` module, some lengthy comments about the implementation, "
"and a few useful functions for analyzing pickled data.  The contents of this "
"module are useful for Python core developers who are working on the :mod:"
"`pickle`; ordinary users of the :mod:`pickle` module probably won't find "
"the :mod:`pickletools` module relevant."
msgstr ""
"Este módulo contém várias constantes relacionadas aos detalhes íntimos do "
"módulo :mod:`pickle`, alguns comentários extensos sobre a implementação e "
"algumas funções úteis para analisar dados em conserva. O conteúdo deste "
"módulo é útil para desenvolvedores do núcleo Python que estão trabalhando "
"no :mod:`pickle`; usuários comuns do módulo :mod:`pickle` provavelmente não "
"acharão o módulo :mod:`pickletools` relevante."

#: ../../library/pickletools.rst:23
msgid "Command line usage"
msgstr "Uso na linha de comando"

#: ../../library/pickletools.rst:27
msgid ""
"When invoked from the command line, ``python -m pickletools`` will "
"disassemble the contents of one or more pickle files.  Note that if you want "
"to see the Python object stored in the pickle rather than the details of "
"pickle format, you may want to use ``-m pickle`` instead. However, when the "
"pickle file that you want to examine comes from an untrusted source, ``-m "
"pickletools`` is a safer option because it does not execute pickle bytecode."
msgstr ""
"Quando chamado a partir da linha de comando, ``python -m pickletools`` irá "
"desmontar o conteúdo de um ou mais arquivos pickle. Note que se você quiser "
"ver o objeto Python armazenado serializado em pickle ao invés dos detalhes "
"do formato pickle, você pode usar ``-m pickle``. No entanto, quando o "
"arquivo serializado em pickle que você deseja examinar vem de uma fonte não "
"confiável, ``-m pickletools`` é uma opção mais segura porque não executa "
"bytecode pickle."

#: ../../library/pickletools.rst:35
msgid "For example, with a tuple ``(1, 2)`` pickled in file ``x.pickle``:"
msgstr ""
"Por exemplo, com uma tupla ``(1, 2)`` tratada com pickling no arquivo ``x."
"pickle``:"

#: ../../library/pickletools.rst:37
msgid ""
"$ python -m pickle x.pickle\n"
"(1, 2)\n"
"\n"
"$ python -m pickletools x.pickle\n"
"    0: \\x80 PROTO      3\n"
"    2: K    BININT1    1\n"
"    4: K    BININT1    2\n"
"    6: \\x86 TUPLE2\n"
"    7: q    BINPUT     0\n"
"    9: .    STOP\n"
"highest protocol among opcodes = 2"
msgstr ""

#: ../../library/pickletools.rst:52
msgid "Command line options"
msgstr "Opções da linha de comando"

#: ../../library/pickletools.rst:58
msgid "Annotate each line with a short opcode description."
msgstr "Anota cada linha com uma descrição curta do código de operação."

#: ../../library/pickletools.rst:62
msgid "Name of a file where the output should be written."
msgstr "Nome de um arquivo no qual a saída deve ser escrita."

#: ../../library/pickletools.rst:66
msgid "The number of blanks by which to indent a new MARK level."
msgstr "O número de espaços em branco para indentar um novo nível MARK."

#: ../../library/pickletools.rst:70
msgid ""
"When multiple objects are disassembled, preserve memo between disassemblies."
msgstr ""
"Quando vários objetos são desmontados, preserva memo entre as desmontagens."

#: ../../library/pickletools.rst:75
msgid ""
"When more than one pickle file are specified, print given preamble before "
"each disassembly."
msgstr ""
"Quando mais de um arquivo serializado em pickle for especificado, imprime o "
"preâmbulo fornecido antes de cada desmontagem."

#: ../../library/pickletools.rst:81
msgid "Programmatic Interface"
msgstr "Interface programática"

#: ../../library/pickletools.rst:86
msgid ""
"Outputs a symbolic disassembly of the pickle to the file-like object *out*, "
"defaulting to ``sys.stdout``.  *pickle* can be a string or a file-like "
"object.  *memo* can be a Python dictionary that will be used as the pickle's "
"memo; it can be used to perform disassemblies across multiple pickles "
"created by the same pickler. Successive levels, indicated by ``MARK`` "
"opcodes in the stream, are indented by *indentlevel* spaces.  If a nonzero "
"value is given to *annotate*, each opcode in the output is annotated with a "
"short description.  The value of *annotate* is used as a hint for the column "
"where annotation should start."
msgstr ""
"Produz uma desmontagem simbólica do pickle para o objeto arquivo ou similar "
"*out*, tendo como padrão ``sys.stdout``. *pickle* pode ser uma string ou um "
"objeto arquivo ou similar. *memo* pode ser um dicionário Python que será "
"usado como memo do pickle; ele pode ser usado para realizar desmontagens em "
"várias serializações com pickle criadas pelo mesmo pickler. Níveis "
"sucessivos, indicados por códigos de operação ``MARK`` no fluxo, são "
"indentados por espaços *indentlevel*. Se um valor diferente de zero for "
"fornecido para *annotate*, cada código de operação na saída será anotado com "
"uma breve descrição. O valor de *annotate* é usado como uma dica para a "
"coluna onde a anotação deve começar."

#: ../../library/pickletools.rst:97
msgid "Added the *annotate* parameter."
msgstr "Adicionado o parâmetro *annotate*."

#: ../../library/pickletools.rst:102
msgid ""
"Provides an :term:`iterator` over all of the opcodes in a pickle, returning "
"a sequence of ``(opcode, arg, pos)`` triples.  *opcode* is an instance of "
"an :class:`OpcodeInfo` class; *arg* is the decoded value, as a Python "
"object, of the opcode's argument; *pos* is the position at which this opcode "
"is located. *pickle* can be a string or a file-like object."
msgstr ""
"Fornece um :term:`iterador` sobre todos os códigos de operação em uma "
"serialização com pickle, retornando uma sequência de triplos ``(opcode, arg, "
"pos)``. *opcode* é uma instância de uma classe :class:`OpcodeInfo`; *arg* é "
"o valor decodificado, como um objeto Python, do argumento do opcode; *pos* é "
"a posição em que este código de operação está localizado. *pickle* pode ser "
"uma string ou um objeto arquivo ou similar."

#: ../../library/pickletools.rst:110
msgid ""
"Returns a new equivalent pickle string after eliminating unused ``PUT`` "
"opcodes. The optimized pickle is shorter, takes less transmission time, "
"requires less storage space, and unpickles more efficiently."
msgstr ""
"Retorna uma nova string pickle equivalente após eliminar códigos de operação "
"``PUT`` não utilizados. O pickle otimizado é mais curto, leva menos tempo de "
"transmissão, requer menos espaço de armazenamento e efetua unpickling com "
"mais eficiência."
