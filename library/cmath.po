# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-09 18:46+0900\n"
"PO-Revision-Date: 2018-01-20 20:59+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Portuguese (Brazil) (http://www.transifex.com/python-doc/"
"python-27/language/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../library/cmath.rst:2
msgid ":mod:`cmath` --- Mathematical functions for complex numbers"
msgstr ":mod:`cmath` --- Funções matemáticas para números complexos"

#: ../../library/cmath.rst:8
msgid ""
"This module is always available.  It provides access to mathematical "
"functions for complex numbers.  The functions in this module accept "
"integers, floating-point numbers or complex numbers as arguments. They will "
"also accept any Python object that has either a :meth:`__complex__` or a :"
"meth:`__float__` method: these methods are used to convert the object to a "
"complex or floating-point number, respectively, and the function is then "
"applied to the result of the conversion."
msgstr ""

#: ../../library/cmath.rst:18
msgid ""
"On platforms with hardware and system-level support for signed zeros, "
"functions involving branch cuts are continuous on *both* sides of the branch "
"cut: the sign of the zero distinguishes one side of the branch cut from the "
"other.  On platforms that do not support signed zeros the continuity is as "
"specified below."
msgstr ""

#: ../../library/cmath.rst:26
msgid "Conversions to and from polar coordinates"
msgstr "Conversões de e para coordenadas polares"

#: ../../library/cmath.rst:28
msgid ""
"A Python complex number ``z`` is stored internally using *rectangular* or "
"*Cartesian* coordinates.  It is completely determined by its *real part* ``z."
"real`` and its *imaginary part* ``z.imag``.  In other words::"
msgstr ""

#: ../../library/cmath.rst:35
msgid ""
"*Polar coordinates* give an alternative way to represent a complex number.  "
"In polar coordinates, a complex number *z* is defined by the modulus *r* and "
"the phase angle *phi*. The modulus *r* is the distance from *z* to the "
"origin, while the phase *phi* is the counterclockwise angle, measured in "
"radians, from the positive x-axis to the line segment that joins the origin "
"to *z*."
msgstr ""
"*Coordenadas polares* fornecem uma forma alternativa de representar um "
"número complexo. Em coordenadas polares, um número complexo *z* é definido "
"pelo módulo *r* e pelo ângulo de fase *phi*. O módulo *r* é a distância de "
"*z* à origem, enquanto a fase *phi* é o ângulo anti-horário, medido em "
"radianos, do eixo x positivo ao segmento de reta que une a origem a *z*."

#: ../../library/cmath.rst:42
msgid ""
"The following functions can be used to convert from the native rectangular "
"coordinates to polar coordinates and back."
msgstr ""
"As funções a seguir podem ser usadas para converter coordenadas retangulares "
"nativas em coordenadas polares e vice-versa."

#: ../../library/cmath.rst:47
msgid ""
"Return the phase of *x* (also known as the *argument* of *x*), as a float.  "
"``phase(x)`` is equivalent to ``math.atan2(x.imag, x.real)``.  The result "
"lies in the range [-π, π], and the branch cut for this operation lies along "
"the negative real axis, continuous from above.  On systems with support for "
"signed zeros (which includes most systems in current use), this means that "
"the sign of the result is the same as the sign of ``x.imag``, even when ``x."
"imag`` is zero::"
msgstr ""

#: ../../library/cmath.rst:66
msgid ""
"The modulus (absolute value) of a complex number *x* can be computed using "
"the built-in :func:`abs` function.  There is no separate :mod:`cmath` module "
"function for this operation."
msgstr ""
"O módulo (valor absoluto) de um número complexo *x* pode ser calculado "
"usando a função embutida :func:`abs`. Não há função do módulo :mod:`cmath` "
"separada para esta operação."

#: ../../library/cmath.rst:73
msgid ""
"Return the representation of *x* in polar coordinates.  Returns a pair ``(r, "
"phi)`` where *r* is the modulus of *x* and phi is the phase of *x*.  "
"``polar(x)`` is equivalent to ``(abs(x), phase(x))``."
msgstr ""
"Retorna a representação de *x* em coordenadas polares. Retorna um par ``(r, "
"phi)`` onde *r* é o módulo de *x* e phi é a fase de *x*. ``polar(x)`` é "
"equivalente a ``(abs(x), phase(x))``."

#: ../../library/cmath.rst:83
msgid ""
"Return the complex number *x* with polar coordinates *r* and *phi*. "
"Equivalent to ``r * (math.cos(phi) + math.sin(phi)*1j)``."
msgstr ""

#: ../../library/cmath.rst:90
msgid "Power and logarithmic functions"
msgstr "Funções de potência e logarítmicas"

#: ../../library/cmath.rst:94
msgid "Return the exponential value ``e**x``."
msgstr ""

#: ../../library/cmath.rst:99
msgid ""
"Returns the logarithm of *x* to the given *base*. If the *base* is not "
"specified, returns the natural logarithm of *x*. There is one branch cut, "
"from 0 along the negative real axis to -∞, continuous from above."
msgstr ""

#: ../../library/cmath.rst:103
msgid "*base* argument added."
msgstr ""

#: ../../library/cmath.rst:109
msgid ""
"Return the base-10 logarithm of *x*. This has the same branch cut as :func:"
"`log`."
msgstr ""
"Retorna o logaritmo de *x* na base 10. Este tem o mesmo corte de ramificação "
"que :func:`log`."

#: ../../library/cmath.rst:115
msgid ""
"Return the square root of *x*. This has the same branch cut as :func:`log`."
msgstr ""
"Retorna a raiz quadrada de *x*. Este tem o mesmo corte de ramificação que :"
"func:`log`."

#: ../../library/cmath.rst:119
msgid "Trigonometric functions"
msgstr "Funções trigonométricas"

#: ../../library/cmath.rst:123
msgid ""
"Return the arc cosine of *x*. There are two branch cuts: One extends right "
"from 1 along the real axis to ∞, continuous from below. The other extends "
"left from -1 along the real axis to -∞, continuous from above."
msgstr ""

#: ../../library/cmath.rst:130
msgid ""
"Return the arc sine of *x*. This has the same branch cuts as :func:`acos`."
msgstr ""
"Retorna o arco seno de *x*. Tem os mesmos cortes de ramificação que :func:"
"`acos`."

#: ../../library/cmath.rst:135
msgid ""
"Return the arc tangent of *x*. There are two branch cuts: One extends from "
"``1j`` along the imaginary axis to ``∞j``, continuous from the right. The "
"other extends from ``-1j`` along the imaginary axis to ``-∞j``, continuous "
"from the left."
msgstr ""

#: ../../library/cmath.rst:140
msgid "direction of continuity of upper cut reversed"
msgstr ""

#: ../../library/cmath.rst:146
msgid "Return the cosine of *x*."
msgstr "Retorna o cosseno de *x*."

#: ../../library/cmath.rst:151
msgid "Return the sine of *x*."
msgstr "Devolve o seno de *x*."

#: ../../library/cmath.rst:156
msgid "Return the tangent of *x*."
msgstr "Retorna a tangente de *x*."

#: ../../library/cmath.rst:160
msgid "Hyperbolic functions"
msgstr "Funções hiperbólicas"

#: ../../library/cmath.rst:164
msgid ""
"Return the inverse hyperbolic cosine of *x*. There is one branch cut, "
"extending left from 1 along the real axis to -∞, continuous from above."
msgstr ""

#: ../../library/cmath.rst:170
msgid ""
"Return the inverse hyperbolic sine of *x*. There are two branch cuts: One "
"extends from ``1j`` along the imaginary axis to ``∞j``, continuous from the "
"right.  The other extends from ``-1j`` along the imaginary axis to ``-∞j``, "
"continuous from the left."
msgstr ""

#: ../../library/cmath.rst:175
msgid "branch cuts moved to match those recommended by the C99 standard"
msgstr ""

#: ../../library/cmath.rst:181
msgid ""
"Return the inverse hyperbolic tangent of *x*. There are two branch cuts: One "
"extends from ``1`` along the real axis to ``∞``, continuous from below. The "
"other extends from ``-1`` along the real axis to ``-∞``, continuous from "
"above."
msgstr ""

#: ../../library/cmath.rst:186
msgid "direction of continuity of right cut reversed"
msgstr ""

#: ../../library/cmath.rst:192
msgid "Return the hyperbolic cosine of *x*."
msgstr "Retorna o cosseno hiperbólico de *x*."

#: ../../library/cmath.rst:197
msgid "Return the hyperbolic sine of *x*."
msgstr "Retorna o seno hiperbólico de *x*."

#: ../../library/cmath.rst:202
msgid "Return the hyperbolic tangent of *x*."
msgstr "Retorna a tangente hiperbólica de *x*."

#: ../../library/cmath.rst:206
msgid "Classification functions"
msgstr "Funções de classificação"

#: ../../library/cmath.rst:210
msgid ""
"Return ``True`` if the real or the imaginary part of x is positive or "
"negative infinity."
msgstr ""

#: ../../library/cmath.rst:218
msgid ""
"Return ``True`` if the real or imaginary part of x is not a number (NaN)."
msgstr ""

#: ../../library/cmath.rst:224
msgid "Constants"
msgstr "Constantes"

#: ../../library/cmath.rst:229
msgid "The mathematical constant *π*, as a float."
msgstr "A constante matemática *π*, como um ponto flutuante."

#: ../../library/cmath.rst:234
msgid "The mathematical constant *e*, as a float."
msgstr "A constante matemática *e*, como um ponto flutuante."

#: ../../library/cmath.rst:238
msgid ""
"Note that the selection of functions is similar, but not identical, to that "
"in module :mod:`math`.  The reason for having two modules is that some users "
"aren't interested in complex numbers, and perhaps don't even know what they "
"are.  They would rather have ``math.sqrt(-1)`` raise an exception than "
"return a complex number. Also note that the functions defined in :mod:"
"`cmath` always return a complex number, even if the answer can be expressed "
"as a real number (in which case the complex number has an imaginary part of "
"zero)."
msgstr ""
"Observe que a seleção de funções é semelhante, mas não idêntica, àquela no "
"módulo :mod:`math`. A razão para ter dois módulos é que alguns usuários não "
"estão interessados ​​em números complexos e talvez nem saibam o que são. Eles "
"preferem que ``math.sqrt(-1)`` gere uma exceção do que retorne um número "
"complexo. Observe também que as funções definidas em :mod:`cmath` sempre "
"retornam um número complexo, mesmo que a resposta possa ser expressa como um "
"número real (nesse caso o número complexo tem uma parte imaginária de zero)."

#: ../../library/cmath.rst:246
msgid ""
"A note on branch cuts: They are curves along which the given function fails "
"to be continuous.  They are a necessary feature of many complex functions.  "
"It is assumed that if you need to compute with complex functions, you will "
"understand about branch cuts.  Consult almost any (not too elementary) book "
"on complex variables for enlightenment.  For information of the proper "
"choice of branch cuts for numerical purposes, a good reference should be the "
"following:"
msgstr ""
"Uma nota sobre cortes de ramificação: são curvas ao longo das quais a função "
"dada não é contínua. Eles são um recurso necessário de muitas funções "
"complexas. Presume-se que se você precisar calcular com funções complexas, "
"você entenderá sobre cortes de ramificação. Consulte quase qualquer livro "
"(não muito elementar) sobre variáveis ​​complexas para obter esclarecimento. "
"Para informações sobre a escolha adequada dos cortes de ramificação para "
"fins numéricos, uma boa referência deve ser a seguinte:"

#: ../../library/cmath.rst:256
msgid ""
"Kahan, W:  Branch cuts for complex elementary functions; or, Much ado about "
"nothing's sign bit.  In Iserles, A., and Powell, M. (eds.), The state of the "
"art in numerical analysis. Clarendon Press (1987) pp165--211."
msgstr ""
"Kahan, W:  Branch cuts for complex elementary functions; or, Much ado about "
"nothing's sign bit.  Em Iserles, A. e Powell, M. (eds.), The state of the "
"art in numerical analysis. Clarendon Press (1987) pp165--211."
