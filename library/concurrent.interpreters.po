# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Hildeberto Abreu Magalhães <hildeberto@gmail.com>, 2025
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2025
# Leticia Portella <leportella@gmail.com>, 2025
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# Adorilson Bezerra <adorilson@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-13 14:21+0000\n"
"PO-Revision-Date: 2025-06-13 14:23+0000\n"
"Last-Translator: Adorilson Bezerra <adorilson@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/concurrent.interpreters.rst:2
msgid ""
":mod:`!concurrent.interpreters` --- Multiple interpreters in the same process"
msgstr ""
":mod:`!concurrent.interpreters` --- Múltiplos interpretadores no mesmo "
"processo"

#: ../../library/concurrent.interpreters.rst:12
msgid "**Source code:** :source:`Lib/concurrent/interpreters.py`"
msgstr "**Código-fonte:** :source:`Lib/concurrent/interpreters.py`"

#: ../../library/concurrent.interpreters.rst:18
msgid "Introduction"
msgstr "Introdução"

#: ../../library/concurrent.interpreters.rst:20
msgid ""
"The :mod:`!concurrent.interpreters` module constructs higher-level "
"interfaces on top of the lower level :mod:`!_interpreters` module."
msgstr ""
"O módulo :mod:`!concurrent.interpreters` constrói interfaces de nível mais "
"alto sobre o módulo de mais baixo nível :mod:`!_interpreters`."

#: ../../library/concurrent.interpreters.rst:27
msgid ":ref:`isolating-extensions-howto`"
msgstr ":ref:`isolating-extensions-howto`"

#: ../../library/concurrent.interpreters.rst:28
msgid "how to update an extension module to support multiple interpreters"
msgstr ""
"como atualizar um módulo de extensão para oferecer suporte a vários "
"interpretadores"

#: ../../library/concurrent.interpreters.rst:30
msgid ":pep:`554`"
msgstr ":pep:`554`"

#: ../../library/concurrent.interpreters.rst:32
msgid ":pep:`734`"
msgstr ":pep:`734`"

#: ../../library/concurrent.interpreters.rst:34
msgid ":pep:`684`"
msgstr ":pep:`684`"

#: ../../includes/wasm-notavail.rst:3
msgid "Availability"
msgstr "Disponibilidade"

#: ../../includes/wasm-notavail.rst:5
msgid ""
"This module does not work or is not available on WebAssembly. See :ref:`wasm-"
"availability` for more information."
msgstr ""
"Este módulo não funciona ou não está disponível em WebAssembly. Veja :ref:"
"`wasm-availability` para mais informações."

#: ../../library/concurrent.interpreters.rst:42
msgid "Key details"
msgstr "Detalhes-chave"

#: ../../library/concurrent.interpreters.rst:44
msgid ""
"Before we dive into examples, there are a small number of details to keep in "
"mind about using multiple interpreters:"
msgstr ""
"Antes de mergulharmos nos exemplos, há alguns detalhes a serem lembrados "
"sobre o uso de múltiplos interpretadores:"

#: ../../library/concurrent.interpreters.rst:47
msgid "isolated, by default"
msgstr "isolados, por padrão"

#: ../../library/concurrent.interpreters.rst:48
msgid "no implicit threads"
msgstr "nenhuma thread implícita"

#: ../../library/concurrent.interpreters.rst:49
msgid "not all PyPI packages support use in multiple interpreters yet"
msgstr ""
"nem todos os pacotes PyPI oferecem suporte ao uso em múltiplos "
"interpretadores ainda"

#: ../../library/concurrent.interpreters.rst:53
msgid ""
"In the context of multiple interpreters, \"isolated\" means that different "
"interpreters do not share any state.  In practice, there is some process-"
"global data they all share, but that is managed by the runtime."
msgstr ""
"No contexto de múltiplos interpretadores, \"isolados\" significa que "
"diferentes interpretadores não compartilham nenhum estado. Na prática, há "
"alguns dados globais do processo que todos eles compartilham, mas isso é "
"gerenciado pelo tempo de execução."

#: ../../library/concurrent.interpreters.rst:59
msgid "Reference"
msgstr "Referência"

#: ../../library/concurrent.interpreters.rst:61
msgid "This module defines the following functions:"
msgstr "Este módulo define as seguintes funções:"

#: ../../library/concurrent.interpreters.rst:65
msgid ""
"Return a :class:`list` of :class:`Interpreter` objects, one for each "
"existing interpreter."
msgstr ""
"Retorna :class:`list` de objetos :class:`Interpreter`, um para cada "
"interpretador existente."

#: ../../library/concurrent.interpreters.rst:70
msgid ""
"Return an :class:`Interpreter` object for the currently running interpreter."
msgstr ""
"Retorna um objeto :class:`Interpreter` para o interpretador em execução no "
"momento."

#: ../../library/concurrent.interpreters.rst:75
msgid "Return an :class:`Interpreter` object for the main interpreter."
msgstr "Retorna um objeto :class:`Interpreter` para o interpretador principal."

#: ../../library/concurrent.interpreters.rst:79
msgid ""
"Initialize a new (idle) Python interpreter and return a :class:`Interpreter` "
"object for it."
msgstr ""
"Inicializa um novo interpretador Python (ocioso) e retorna um objeto :class:"
"`Interpreter` para ele."

#: ../../library/concurrent.interpreters.rst:84
msgid "Interpreter objects"
msgstr "Objetos interpretador"

#: ../../library/concurrent.interpreters.rst:88
msgid "A single interpreter in the current process."
msgstr "Um único interpretador no processo atual."

#: ../../library/concurrent.interpreters.rst:90
msgid ""
"Generally, :class:`Interpreter` shouldn't be called directly. Instead, use :"
"func:`create` or one of the other module functions."
msgstr ""
"Geralmente, :class:`Interpreter` não deve ser chamado diretamente. Em vez "
"disso, use :func:`create` ou uma das outras funções do módulo."

#: ../../library/concurrent.interpreters.rst:95
#: ../../library/concurrent.interpreters.rst:101
msgid "(read-only)"
msgstr "(somente leitura)"

#: ../../library/concurrent.interpreters.rst:97
msgid "The interpreter's ID."
msgstr "O ID do interpretador."

#: ../../library/concurrent.interpreters.rst:103
msgid "A string describing where the interpreter came from."
msgstr "Uma string descrevendo de onde o interpretador veio."

#: ../../library/concurrent.interpreters.rst:107
msgid ""
"Return ``True`` if the interpreter is currently executing code in its :mod:`!"
"__main__` module and ``False`` otherwise."
msgstr ""
"Retorna ``True`` se o interpretador estiver executando código em seu módulo :"
"mod:`!__main__` e ``False`` caso contrário."

#: ../../library/concurrent.interpreters.rst:112
msgid "Finalize and destroy the interpreter."
msgstr "Finaliza e destrói o interpretador."

#: ../../library/concurrent.interpreters.rst:116
msgid ""
"Bind \"shareable\" objects in the interpreter's :mod:`!__main__` module."
msgstr ""
"Liga objetos \"compartilháveis\" no módulo :mod:`!__main__` do interpretador."

#: ../../library/concurrent.interpreters.rst:121
msgid "Run the given source code in the interpreter (in the current thread)."
msgstr "Executa o código-fonte fornecido no interpretador (na thread atual)."

#: ../../library/concurrent.interpreters.rst:125
msgid ""
"Return the result of calling running the given function in the interpreter "
"(in the current thread)."
msgstr ""
"Retorna o resultado da chamada da execução da função fornecida no "
"interpretador (na thread atual)."

#: ../../library/concurrent.interpreters.rst:130
msgid "Run the given function in the interpreter (in a new thread)."
msgstr "Executa a função fornecida no interpretador (em uma nova thread)."

#: ../../library/concurrent.interpreters.rst:133
msgid "Exceptions"
msgstr "Exceções"

#: ../../library/concurrent.interpreters.rst:137
msgid ""
"This exception, a subclass of :exc:`Exception`, is raised when an "
"interpreter-related error happens."
msgstr ""
"Esta exceção, uma subclasse de :exc:`Exception`, é levantada quando ocorre "
"um erro relacionado ao interpretador."

#: ../../library/concurrent.interpreters.rst:142
msgid ""
"This exception, a subclass of :exc:`InterpreterError`, is raised when the "
"targeted interpreter no longer exists."
msgstr ""
"Esta exceção, uma subclasse de :exc:`InterpreterError`, é levantada quando o "
"interpretador de destino não existe mais."

#: ../../library/concurrent.interpreters.rst:147
msgid ""
"This exception, a subclass of :exc:`InterpreterError`, is raised when the "
"running code raised an uncaught exception."
msgstr ""
"Esta exceção, uma subclasse de :exc:`InterpreterError`, é levantada quando o "
"código em execução levanta uma exceção não capturada."

#: ../../library/concurrent.interpreters.rst:152
msgid "A basic snapshot of the exception raised in the other interpreter."
msgstr "Um snapshot básico da exceção levantada no outro interpretador."

#: ../../library/concurrent.interpreters.rst:158
msgid ""
"This exception, a subclass of :exc:`TypeError`, is raised when an object "
"cannot be sent to another interpreter."
msgstr ""
"Esta exceção, uma subclasse de :exc:`TypeError`, é levantada quando um "
"objeto não pode ser enviado para outro interpretador."

#: ../../library/concurrent.interpreters.rst:166
msgid "Basic usage"
msgstr "Uso básico"

#: ../../library/concurrent.interpreters.rst:168
msgid "Creating an interpreter and running code in it::"
msgstr "Criando um interpretador e executando código nele::"

#: ../../library/concurrent.interpreters.rst:170
msgid ""
"from concurrent import interpreters\n"
"\n"
"interp = interpreters.create()\n"
"\n"
"# Run in the current OS thread.\n"
"\n"
"interp.exec('print(\"spam!\")')\n"
"\n"
"interp.exec(\"\"\"if True:\n"
"    print('spam!')\n"
"    \"\"\")\n"
"\n"
"from textwrap import dedent\n"
"interp.exec(dedent(\"\"\"\n"
"    print('spam!')\n"
"    \"\"\"))\n"
"\n"
"def run():\n"
"    print('spam!')\n"
"\n"
"interp.call(run)\n"
"\n"
"# Run in new OS thread.\n"
"\n"
"t = interp.call_in_thread(run)\n"
"t.join()"
msgstr ""
"from concurrent import interpreters\n"
"\n"
"interp = interpreters.create()\n"
"\n"
"# Executa na thread atual do sistema operacional.\n"
"\n"
"interp.exec('print(\"spam!\")')\n"
"\n"
"interp.exec(\"\"\"if True:\n"
"    print('spam!')\n"
"    \"\"\")\n"
"\n"
"from textwrap import dedent\n"
"interp.exec(dedent(\"\"\"\n"
"    print('spam!')\n"
"    \"\"\"))\n"
"\n"
"def run():\n"
"    print('spam!')\n"
"\n"
"interp.call(run)\n"
"\n"
"# Executa uma nova thread do sistema operacional.\n"
"\n"
"t = interp.call_in_thread(run)\n"
"t.join()"
