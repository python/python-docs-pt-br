# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2019
# i17obot <i17obot@rougeth.com>, 2020
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-23 16:56+0000\n"
"PO-Revision-Date: 2019-09-01 02:45+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:2
msgid ":mod:`fractions` --- Rational numbers"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:10
msgid "**Source code:** :source:`Lib/fractions.py`"
msgstr "**Código Fonte:** :source:`Lib/fractions.py`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:14
msgid ""
"The :mod:`fractions` module provides support for rational number arithmetic."
msgstr ""
"O módulo :mod:`fractions` fornece suporte para aritmética de números "
"racionais."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:17
msgid ""
"A Fraction instance can be constructed from a pair of integers, from another "
"rational number, or from a string."
msgstr ""
"Uma instância de Fraction pode ser construída a partir de um par de números "
"inteiros, de outro número racional ou de uma string."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:26
msgid ""
"The first version requires that *numerator* and *denominator* are instances "
"of :class:`numbers.Rational` and returns a new :class:`Fraction` instance "
"with value ``numerator/denominator``. If *denominator* is :const:`0`, it "
"raises a :exc:`ZeroDivisionError`. The second version requires that "
"*other_fraction* is an instance of :class:`numbers.Rational` and returns a :"
"class:`Fraction` instance with the same value.  The next two versions accept "
"either a :class:`float` or a :class:`decimal.Decimal` instance, and return "
"a :class:`Fraction` instance with exactly the same value.  Note that due to "
"the usual issues with binary floating-point (see :ref:`tut-fp-issues`), the "
"argument to ``Fraction(1.1)`` is not exactly equal to 11/10, and so "
"``Fraction(1.1)`` does *not* return ``Fraction(11, 10)`` as one might "
"expect. (But see the documentation for the :meth:`limit_denominator` method "
"below.) The last version of the constructor expects a string or unicode "
"instance. The usual form for this instance is::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:43
msgid ""
"where the optional ``sign`` may be either '+' or '-' and ``numerator`` and "
"``denominator`` (if present) are strings of decimal digits.  In addition, "
"any string that represents a finite value and is accepted by the :class:"
"`float` constructor is also accepted by the :class:`Fraction` constructor.  "
"In either form the input string may also have leading and/or trailing "
"whitespace. Here are some examples::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:77
msgid ""
"The :class:`Fraction` class inherits from the abstract base class :class:"
"`numbers.Rational`, and implements all of the methods and operations from "
"that class.  :class:`Fraction` instances are hashable, and should be treated "
"as immutable.  In addition, :class:`Fraction` has the following properties "
"and methods:"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:83
msgid ""
"The :class:`Fraction` constructor now accepts :class:`float` and :class:"
"`decimal.Decimal` instances."
msgstr ""
"O construtor :class:`Fraction` agora aceita instâncias :class:`float` e :"
"class:`decimal.Decimal`."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:90
msgid "Numerator of the Fraction in lowest term."
msgstr "Numerador de Fraction no menor termo."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:94
msgid "Denominator of the Fraction in lowest term."
msgstr "Denominador de Fraction no menor termo."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:99
msgid ""
"This class method constructs a :class:`Fraction` representing the exact "
"value of *flt*, which must be a :class:`float`. Beware that ``Fraction."
"from_float(0.3)`` is not the same value as ``Fraction(3, 10)``."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:105
msgid ""
"From Python 3.2 onwards, you can also construct a :class:`Fraction` instance "
"directly from a :class:`float`."
msgstr ""
"A partir do Python 3.2, você também pode construir uma instância :class:"
"`Fraction` diretamente de um :class:`float`."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:111
msgid ""
"This class method constructs a :class:`Fraction` representing the exact "
"value of *dec*, which must be a :class:`decimal.Decimal` instance."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:116
msgid ""
"From Python 3.2 onwards, you can also construct a :class:`Fraction` instance "
"directly from a :class:`decimal.Decimal` instance."
msgstr ""
"A partir do Python 3.2, você também pode construir uma instância :class:"
"`Fraction` diretamente de uma instância de :class:`decimal.Decimal`."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:123
msgid ""
"Finds and returns the closest :class:`Fraction` to ``self`` that has "
"denominator at most max_denominator.  This method is useful for finding "
"rational approximations to a given floating-point number:"
msgstr ""
"Encontra e retorna o :class:`Fraction` mais próximo de ``self`` que tem "
"denominador no máximo max_denominator. Este método é útil para encontrar "
"aproximações racionais para um dado número de ponto flutuante:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:131
msgid "or for recovering a rational number that's represented as a float:"
msgstr ""
"ou para recuperar um número racional que é representado como um ponto "
"flutuante:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:144
msgid ""
"Returns the greatest :class:`int` ``<= self``.  This method can also be "
"accessed through the :func:`math.floor` function:"
msgstr ""
"Retorna o maior :class:`int` ``<= self``. Este método também pode ser "
"acessado por meio da função :func:`math.floor`:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:154
msgid ""
"Returns the least :class:`int` ``>= self``.  This method can also be "
"accessed through the :func:`math.ceil` function."
msgstr ""
"Retorna o menor :class:`int` ``>= self``. Este método também pode ser "
"acessado por meio da função :func:`math.ceil`."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:161
msgid ""
"The first version returns the nearest :class:`int` to ``self``, rounding "
"half to even. The second version rounds ``self`` to the nearest multiple of "
"``Fraction(1, 10**ndigits)`` (logically, if ``ndigits`` is negative), again "
"rounding half toward even.  This method can also be accessed through the :"
"func:`round` function."
msgstr ""
"A primeira versão retorna o :class:`int` mais próximo de ``self``, "
"arredondando a metade para par. A segunda versão arredonda ``self`` para o "
"múltiplo mais próximo de ``Fraction(1, 10**ndigits)`` (logicamente, se "
"``ndigits`` for negativo), novamente arredondando a metade para par. Este "
"método também pode ser acessado por meio da função :func:`round`."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:170
msgid ""
"Return the greatest common divisor of the integers *a* and *b*.  If either "
"*a* or *b* is nonzero, then the absolute value of ``gcd(a, b)`` is the "
"largest integer that divides both *a* and *b*.  ``gcd(a,b)`` has the same "
"sign as *b* if *b* is nonzero; otherwise it takes the sign of *a*.  ``gcd(0, "
"0)`` returns ``0``."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:176
msgid "Use :func:`math.gcd` instead."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:182
msgid "Module :mod:`numbers`"
msgstr "```Módulo :mod:`numbers````"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/fractions.rst:183
msgid "The abstract base classes making up the numeric tower."
msgstr "As classes base abstratas que compõem a torre numérica."
