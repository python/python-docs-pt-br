# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Raphael Mendonça, 2019
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2019
# i17obot <i17obot@rougeth.com>, 2021
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-23 16:56+0000\n"
"PO-Revision-Date: 2019-09-01 03:13+0000\n"
"Last-Translator: i17obot <i17obot@rougeth.com>, 2021\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:2
msgid ":mod:`crypt` --- Function to check Unix passwords"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:12
msgid "**Source code:** :source:`Lib/crypt.py`"
msgstr "**Código Fonte:** :source:`Lib/crypt.py`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:20
msgid ""
"This module implements an interface to the :manpage:`crypt(3)` routine, "
"which is a one-way hash function based upon a modified DES algorithm; see "
"the Unix man page for further details.  Possible uses include storing hashed "
"passwords so you can check passwords without storing the actual password, or "
"attempting to crack Unix passwords with a dictionary."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:28
msgid ""
"Notice that the behavior of this module depends on the actual "
"implementation  of the :manpage:`crypt(3)` routine in the running system.  "
"Therefore, any extensions available on the current implementation will also  "
"be available on this module."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:34
msgid "Hashing Methods"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:38
msgid ""
"The :mod:`crypt` module defines the list of hashing methods (not all methods "
"are available on all platforms):"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:43
msgid ""
"A Modular Crypt Format method with 16 character salt and 86 character hash "
"based on the SHA-512 hash function.  This is the strongest method."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:48
msgid ""
"Another Modular Crypt Format method with 16 character salt and 43 character "
"hash based on the SHA-256 hash function."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:53
msgid ""
"Another Modular Crypt Format method with 22 character salt and 31 character "
"hash based on the Blowfish cipher."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:60
msgid ""
"Another Modular Crypt Format method with 8 character salt and 22 character "
"hash based on the MD5 hash function."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:65
msgid ""
"The traditional method with a 2 character salt and 13 characters of hash.  "
"This is the weakest method."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:70
msgid "Module Attributes"
msgstr "Atributos do módulo"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:76
msgid ""
"A list of available password hashing algorithms, as ``crypt.METHOD_*`` "
"objects.  This list is sorted from strongest to weakest."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:82
msgid "Module Functions"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:84
msgid "The :mod:`crypt` module defines the following functions:"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:88
msgid ""
"*word* will usually be a user's password as typed at a prompt or  in a "
"graphical interface.  The optional *salt* is either a string as returned "
"from :func:`mksalt`, one of the ``crypt.METHOD_*`` values (though not all "
"may be available on all platforms), or a full encrypted password including "
"salt, as returned by this function.  If *salt* is not provided, the "
"strongest method will be used (as returned by :func:`methods`)."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:96
msgid ""
"Checking a password is usually done by passing the plain-text password as "
"*word* and the full results of a previous :func:`crypt` call, which should "
"be the same as the results of this call."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:100
msgid ""
"*salt* (either a random 2 or 16 character string, possibly prefixed with "
"``$digit$`` to indicate the method) which will be used to perturb the "
"encryption algorithm.  The characters in *salt* must be in the set ``[./a-zA-"
"Z0-9]``, with the exception of Modular Crypt Format which prefixes a "
"``$digit$``."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:106
msgid ""
"Returns the hashed password as a string, which will be composed of "
"characters from the same alphabet as the salt."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:111
msgid ""
"Since a few :manpage:`crypt(3)` extensions allow different values, with "
"different sizes in the *salt*, it is recommended to use  the full crypted "
"password as salt when checking for a password."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:115
msgid "Accept ``crypt.METHOD_*`` values in addition to strings for *salt*."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:121
msgid ""
"Return a randomly generated salt of the specified method.  If no *method* is "
"given, the strongest method available as returned by :func:`methods` is used."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:125
msgid ""
"The return value is a string suitable for passing as the *salt* argument to :"
"func:`crypt`."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:128
msgid ""
"*rounds* specifies the number of rounds for ``METHOD_SHA256``, "
"``METHOD_SHA512`` and ``METHOD_BLOWFISH``. For ``METHOD_SHA256`` and "
"``METHOD_SHA512`` it must be an integer between ``1000`` and "
"``999_999_999``, the default is ``5000``.  For ``METHOD_BLOWFISH`` it must "
"be a power of two between ``16`` (2\\ :sup:`4`) and ``2_147_483_648`` (2\\ :"
"sup:`31`), the default is ``4096`` (2\\ :sup:`12`)."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:138
msgid "Added the *rounds* parameter."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:143
msgid "Examples"
msgstr "Exemplos"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:145
msgid ""
"A simple example illustrating typical use (a constant-time comparison "
"operation is needed to limit exposure to timing attacks. :func:`hmac."
"compare_digest` is suitable for this purpose)::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/library/crypt.rst:165
msgid ""
"To generate a hash of a password using the strongest available method and "
"check it against the original::"
msgstr ""
