# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-11 15:45+0000\n"
"PO-Revision-Date: 2024-05-11 00:33+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/symtable.rst:2
msgid ":mod:`!symtable` --- Access to the compiler's symbol tables"
msgstr ":mod:`!symtable` --- Acesso a tabela de símbolos do compilador"

#: ../../library/symtable.rst:7
msgid "**Source code:** :source:`Lib/symtable.py`"
msgstr "**Código-fonte:** :source:`Lib/symtable.py`"

#: ../../library/symtable.rst:15
msgid ""
"Symbol tables are generated by the compiler from AST just before bytecode is "
"generated.  The symbol table is responsible for calculating the scope of "
"every identifier in the code.  :mod:`symtable` provides an interface to "
"examine these tables."
msgstr ""
"Таблиці символів генеруються компілятором з AST безпосередньо перед "
"генерацією байт-коду. Таблиця символів відповідає за обчислення області "
"кожного ідентифікатора в коді. :mod:`symtable` надає інтерфейс для перевірки "
"цих таблиць."

#: ../../library/symtable.rst:22
msgid "Generating Symbol Tables"
msgstr "Створення таблиць символів"

#: ../../library/symtable.rst:26
msgid ""
"Return the toplevel :class:`SymbolTable` for the Python source *code*. "
"*filename* is the name of the file containing the code.  *compile_type* is "
"like the *mode* argument to :func:`compile`."
msgstr ""
"Повертає верхній рівень :class:`SymbolTable` для вихідного *коду* Python. "
"*filename* — це ім’я файлу, що містить код. *compile_type* схожий на "
"аргумент *mode* для :func:`compile`."

#: ../../library/symtable.rst:32
msgid "Examining Symbol Tables"
msgstr "Вивчення таблиць символів"

#: ../../library/symtable.rst:36
msgid "A namespace table for a block.  The constructor is not public."
msgstr "Таблиця простору імен для блоку. Конструктор не є публічним."

#: ../../library/symtable.rst:40
msgid ""
"Return the type of the symbol table.  Possible values are ``'class'``, "
"``'module'``, ``'function'``, ``'annotation'``, ``'TypeVar bound'``, ``'type "
"alias'``, and ``'type parameter'``. The latter four refer to different "
"flavors of :ref:`annotation scopes <annotation-scopes>`."
msgstr ""

#: ../../library/symtable.rst:45
msgid ""
"Added ``'annotation'``,  ``'TypeVar bound'``, ``'type alias'``, and ``'type "
"parameter'`` as possible return values."
msgstr ""
"Добавлены ``'аннотация'``, ``'TypeVarbound'``, ``'псевдоним типа'`` и "
"``'параметр типа'`` в качестве возможных возвращаемых значений."

#: ../../library/symtable.rst:51
msgid "Return the table's identifier."
msgstr "Повернути ідентифікатор таблиці."

#: ../../library/symtable.rst:55
msgid ""
"Return the table's name.  This is the name of the class if the table is for "
"a class, the name of the function if the table is for a function, or "
"``'top'`` if the table is global (:meth:`get_type` returns ``'module'``). "
"For type parameter scopes (which are used for generic classes, functions, "
"and type aliases), it is the name of the underlying class, function, or type "
"alias. For type alias scopes, it is the name of the type alias. For :class:"
"`~typing.TypeVar` bound scopes, it is the name of the ``TypeVar``."
msgstr ""
"Верните имя таблицы. Это имя класса, если таблица предназначена для класса, "
"имя функции, если таблица предназначена для функции, или ``'top'``, если "
"таблица глобальная (:meth:`get_type` возвращает` `'модуль'``). Для областей "
"параметров типа (которые используются для универсальных классов, функций и "
"псевдонимов типов) это имя базового класса, функции или псевдонима типа. Для "
"областей псевдонима типа это имя псевдонима типа. Для областей, связанных с :"
"class:`~typing.TypeVar`, это имя ``TypeVar``."

#: ../../library/symtable.rst:65
msgid "Return the number of the first line in the block this table represents."
msgstr "Повертає номер першого рядка в блоці, який представляє ця таблиця."

#: ../../library/symtable.rst:69
msgid "Return ``True`` if the locals in this table can be optimized."
msgstr ""
"Повертає ``True``, якщо локальні значення в цій таблиці можна оптимізувати."

#: ../../library/symtable.rst:73
msgid "Return ``True`` if the block is a nested class or function."
msgstr "Повертає ``True``, якщо блок є вкладеним класом або функцією."

#: ../../library/symtable.rst:77
msgid ""
"Return ``True`` if the block has nested namespaces within it.  These can be "
"obtained with :meth:`get_children`."
msgstr ""
"Повертає ``True``, якщо в блоці є вкладені простори імен. Їх можна отримати "
"за допомогою :meth:`get_children`."

#: ../../library/symtable.rst:82
msgid ""
"Return a view object containing the names of symbols in the table. See the :"
"ref:`documentation of view objects <dict-views>`."
msgstr ""
"Повертає об’єкт представлення, що містить імена символів у таблиці. "
"Перегляньте :ref:`документацію об’єктів перегляду <dict-views>`."

#: ../../library/symtable.rst:87
msgid "Lookup *name* in the table and return a :class:`Symbol` instance."
msgstr "Знайдіть *name* у таблиці та поверніть екземпляр :class:`Symbol`."

#: ../../library/symtable.rst:91
msgid "Return a list of :class:`Symbol` instances for names in the table."
msgstr "Повертає список екземплярів :class:`Symbol` для імен у таблиці."

#: ../../library/symtable.rst:95
msgid "Return a list of the nested symbol tables."
msgstr "Повертає список вкладених таблиць символів."

#: ../../library/symtable.rst:100
msgid ""
"A namespace for a function or method.  This class inherits from :class:"
"`SymbolTable`."
msgstr ""
"Пространство имен для функции или метода. Этот класс наследуется от :class:"
"`SymbolTable`."

#: ../../library/symtable.rst:105
msgid "Return a tuple containing names of parameters to this function."
msgstr "Повертає кортеж, що містить імена параметрів цієї функції."

#: ../../library/symtable.rst:109
msgid "Return a tuple containing names of locals in this function."
msgstr "Повертає кортеж, що містить імена місцевих жителів у цій функції."

#: ../../library/symtable.rst:113
msgid "Return a tuple containing names of globals in this function."
msgstr "Повертає кортеж, що містить імена глобалів у цій функції."

#: ../../library/symtable.rst:117
msgid "Return a tuple containing names of nonlocals in this function."
msgstr ""

#: ../../library/symtable.rst:121
msgid "Return a tuple containing names of free variables in this function."
msgstr ""

#: ../../library/symtable.rst:126
msgid "A namespace of a class.  This class inherits from :class:`SymbolTable`."
msgstr ""
"Пространство имен класса. Этот класс наследуется от :class:`SymbolTable`."

#: ../../library/symtable.rst:130
msgid ""
"Return a tuple containing the names of method-like functions declared in the "
"class."
msgstr ""
"Возвращает кортеж, содержащий имена функций, подобных методам, объявленных в "
"классе."

#: ../../library/symtable.rst:133
msgid ""
"Here, the term 'method' designates *any* function defined in the class body "
"via :keyword:`def` or :keyword:`async def`."
msgstr ""
"Здесь термин «метод» обозначает *любую* функцию, определенную в теле класса "
"с помощью :keyword:`def` или :keyword:`async def`."

#: ../../library/symtable.rst:136
msgid ""
"Functions defined in a deeper scope (e.g., in an inner class) are not picked "
"up by :meth:`get_methods`."
msgstr ""
"Функции, определенные в более глубокой области видимости (например, во "
"внутреннем классе), не подхватываются :meth:`get_methods`."

#: ../../library/symtable.rst:139
msgid "For example:"
msgstr "Por exemplo:"

#: ../../library/symtable.rst:161
msgid ""
"Although ``A().f()`` raises :exc:`TypeError` at runtime, ``A.f`` is still "
"considered as a method-like function."
msgstr ""
"Хотя ``A().f()`` вызывает :exc:`TypeError` во время выполнения, ``Af`` по-"
"прежнему рассматривается как функция, подобная методу."

#: ../../library/symtable.rst:166
msgid ""
"An entry in a :class:`SymbolTable` corresponding to an identifier in the "
"source.  The constructor is not public."
msgstr ""
"Запис у :class:`SymbolTable`, що відповідає ідентифікатору в джерелі. "
"Конструктор не є публічним."

#: ../../library/symtable.rst:171
msgid "Return the symbol's name."
msgstr "Повернути назву символу."

#: ../../library/symtable.rst:175
msgid "Return ``True`` if the symbol is used in its block."
msgstr "Повертає ``True``, якщо символ використовується в його блоці."

#: ../../library/symtable.rst:179
msgid "Return ``True`` if the symbol is created from an import statement."
msgstr "Повертає ``True``, якщо символ створено з оператора імпорту."

#: ../../library/symtable.rst:183
msgid "Return ``True`` if the symbol is a parameter."
msgstr "Повертає ``True``, якщо символ є параметром."

#: ../../library/symtable.rst:187
msgid "Return ``True`` if the symbol is global."
msgstr "Повертає ``True``, якщо символ є глобальним."

#: ../../library/symtable.rst:191
msgid "Return ``True`` if the symbol is nonlocal."
msgstr "Повертає ``True``, якщо символ нелокальний."

#: ../../library/symtable.rst:195
msgid ""
"Return ``True`` if the symbol is declared global with a global statement."
msgstr ""
"Повертає ``True``, якщо символ оголошено глобальним за допомогою глобального "
"оператора."

#: ../../library/symtable.rst:199
msgid "Return ``True`` if the symbol is local to its block."
msgstr "Повертає ``True``, якщо символ є локальним для свого блоку."

#: ../../library/symtable.rst:203
msgid "Return ``True`` if the symbol is annotated."
msgstr "Повертає ``True``, якщо символ анотований."

#: ../../library/symtable.rst:209
msgid ""
"Return ``True`` if the symbol is referenced in its block, but not assigned "
"to."
msgstr ""
"Повертає ``True``, якщо символ є посиланням у його блоці, але не призначений."

#: ../../library/symtable.rst:214
msgid "Return ``True`` if the symbol is assigned to in its block."
msgstr "Повертає ``True``, якщо символу призначено в його блоці."

#: ../../library/symtable.rst:218
msgid "Return ``True`` if name binding introduces new namespace."
msgstr "Повертає ``True``, якщо зв’язування імен створює новий простір імен."

#: ../../library/symtable.rst:220
msgid ""
"If the name is used as the target of a function or class statement, this "
"will be true."
msgstr ""
"Якщо ім’я використовується як ціль оператора функції чи класу, це буде вірно."

#: ../../library/symtable.rst:223
msgid "For example::"
msgstr "Por exemplo::"

#: ../../library/symtable.rst:225
msgid ""
">>> table = symtable.symtable(\"def some_func(): pass\", \"string\", "
"\"exec\")\n"
">>> table.lookup(\"some_func\").is_namespace()\n"
"True"
msgstr ""
">>> table = symtable.symtable(\"def some_func(): pass\", \"string\", "
"\"exec\")\n"
">>> table.lookup(\"some_func\").is_namespace()\n"
"True"

#: ../../library/symtable.rst:229
msgid ""
"Note that a single name can be bound to multiple objects.  If the result is "
"``True``, the name may also be bound to other objects, like an int or list, "
"that does not introduce a new namespace."
msgstr ""
"Зауважте, що одне ім’я може бути прив’язане до кількох об’єктів. Якщо "
"результат ``True``, ім'я також може бути прив'язане до інших об'єктів, таких "
"як int або список, які не вводять новий простір імен."

#: ../../library/symtable.rst:235
msgid "Return a list of namespaces bound to this name."
msgstr "Повертає список просторів імен, прив’язаних до цього імені."

#: ../../library/symtable.rst:239
msgid ""
"Return the namespace bound to this name. If more than one or no namespace is "
"bound to this name, a :exc:`ValueError` is raised."
msgstr ""
"Верните пространство имен, привязанное к этому имени. Если с этим именем "
"связано более одного пространства имен или ни одно пространство имен, "
"возникает ошибка :exc:`ValueError`."
