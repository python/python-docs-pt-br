# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-09 14:19+0000\n"
"PO-Revision-Date: 2025-07-18 18:49+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/email.generator.rst:2
msgid ":mod:`!email.generator`: Generating MIME documents"
msgstr ":mod:`!email.generator`: Geração de documentos MIME"

#: ../../library/email.generator.rst:7
msgid "**Source code:** :source:`Lib/email/generator.py`"
msgstr "**Código-fonte:** :source:`Lib/email/generator.py`"

#: ../../library/email.generator.rst:11
msgid ""
"One of the most common tasks is to generate the flat (serialized) version of "
"the email message represented by a message object structure.  You will need "
"to do this if you want to send your message via :meth:`smtplib.SMTP."
"sendmail`, or print the message on the console.  Taking a message object "
"structure and producing a serialized representation is the job of the "
"generator classes."
msgstr ""
"Uma das tarefas mais comuns é gerar a versão plana (serializada) da mensagem "
"de e-mail representada por uma estrutura de objeto de mensagem. Você "
"precisará fazer isso se quiser enviar sua mensagem via :meth:`smtplib.SMTP."
"sendmail` ou exibir a mensagem no console. A tarefa das classes geradoras é "
"pegar uma estrutura de objeto de mensagem e produzir uma representação "
"serializada."

#: ../../library/email.generator.rst:18
msgid ""
"As with the :mod:`email.parser` module, you aren't limited to the "
"functionality of the bundled generator; you could write one from scratch "
"yourself.  However the bundled generator knows how to generate most email in "
"a standards-compliant way, should handle MIME and non-MIME email messages "
"just fine, and is designed so that the bytes-oriented parsing and generation "
"operations are inverses, assuming the same non-transforming :mod:`~email."
"policy` is used for both.  That is, parsing the serialized byte stream via "
"the :class:`~email.parser.BytesParser` class and then regenerating the "
"serialized byte stream using :class:`BytesGenerator` should produce output "
"identical to the input [#]_.  (On the other hand, using the generator on an :"
"class:`~email.message.EmailMessage` constructed by program may result in "
"changes to the :class:`~email.message.EmailMessage` object as defaults are "
"filled in.)"
msgstr ""
"Assim como no módulo :mod:`email.parser`, você não está limitado à "
"funcionalidade do gerador integrado; você mesmo pode criar um do zero. No "
"entanto, o gerador integrado sabe como gerar a maioria dos e-mails em "
"conformidade com os padrões, deve lidar perfeitamente com mensagens de e-"
"mail MIME e não MIME e foi projetado para que as operações de análise e "
"geração orientadas a bytes sejam inversas, presumindo que a mesma :mod:"
"`~email.policy` não transformadora seja usada para ambas. Ou seja, analisar "
"o fluxo de bytes serializado por meio da classe :class:`~email.parser."
"BytesParser` e, em seguida, regenerar o fluxo de bytes serializado usando :"
"class:`BytesGenerator` deve produzir uma saída idêntica à entrada [#]_. (Por "
"outro lado, usar o gerador em um :class:`~email.message.EmailMessage` "
"construído pelo programa pode resultar em alterações no objeto :class:"
"`~email.message.EmailMessage` à medida que os padrões são preenchidos.)"

#: ../../library/email.generator.rst:32
msgid ""
"The :class:`Generator` class can be used to flatten a message into a text "
"(as opposed to binary) serialized representation, but since Unicode cannot "
"represent binary data directly, the message is of necessity transformed into "
"something that contains only ASCII characters, using the standard email RFC "
"Content Transfer Encoding techniques for encoding email messages for "
"transport over channels that are not \"8 bit clean\"."
msgstr ""
"A classe :class:`Generator` pode ser usada para simplificar uma mensagem em "
"uma representação serializada de texto (em oposição a binária), mas como o "
"Unicode não pode representar dados binários diretamente, a mensagem é "
"necessariamente transformada em algo que contém apenas caracteres ASCII, "
"usando as técnicas de codificação de transferência de conteúdo RFC de e-mail "
"padrão para codificar mensagens de e-mail para transporte em canais que não "
"são \"limpos de 8 bits\"."

#: ../../library/email.generator.rst:39
msgid ""
"To accommodate reproducible processing of SMIME-signed messages :class:"
"`Generator` disables header folding for message parts of type ``multipart/"
"signed`` and all subparts."
msgstr ""
"Para acomodar o processamento reproduzível de mensagens assinadas por "
"SMIME, :class:`Generator` desabilita a dobragem de cabeçalho para partes de "
"mensagens do tipo ``multipart/signed`` e todas as subpartes."

#: ../../library/email.generator.rst:47
msgid ""
"Return a :class:`BytesGenerator` object that will write any message provided "
"to the :meth:`flatten` method, or any surrogateescape encoded text provided "
"to the :meth:`write` method, to the :term:`file-like object` *outfp*. "
"*outfp* must support a ``write`` method that accepts binary data."
msgstr ""
"Retorna um objeto :class:`BytesGenerator` que gravará qualquer mensagem "
"fornecida ao método :meth:`flatten`, ou qualquer texto codificado "
"surrogateescape fornecido ao método :meth:`write`, no :term:`objeto arquivo "
"ou similar` *outfp*. *outfp* deve oferecer suporte a um método ``write`` que "
"aceite dados binários."

#: ../../library/email.generator.rst:52 ../../library/email.generator.rst:153
msgid ""
"If optional *mangle_from_* is ``True``, put a ``>`` character in front of "
"any line in the body that starts with the exact string ``\"From \"``, that "
"is ``From`` followed by a space at the beginning of a line.  *mangle_from_* "
"defaults to the value of the :attr:`~email.policy.Policy.mangle_from_` "
"setting of the *policy* (which is ``True`` for the :data:`~email.policy."
"compat32` policy and ``False`` for all others). *mangle_from_* is intended "
"for use when messages are stored in Unix mbox format (see :mod:`mailbox` and "
"`WHY THE CONTENT-LENGTH FORMAT IS BAD <https://www.jwz.org/doc/content-"
"length.html>`_)."
msgstr ""
"Se o *mangle_from_* opcional for ``True``, coloca um caractere ``>`` na "
"frente de qualquer linha no corpo que comece com a string exata ``\"From "
"\"``, ou seja, ``From`` seguido por um espaço no início de uma linha. "
"*mangle_from_* assume por padrão o valor da configuração :attr:`~email."
"policy.Policy.mangle_from_` da *policy* (que é ``True`` para a política :"
"data:`~email.policy.compat32` e ``False`` para todas as outras). "
"*mangle_from_* deve ser usado quando as mensagens são armazenadas no formato "
"mbox do Unix (consulte :mod:`mailbox` e `WHY THE CONTENT-LENGTH FORMAT IS "
"BAD <https://www.jwz.org/doc/content-length.html>`_)."

#: ../../library/email.generator.rst:62 ../../library/email.generator.rst:163
msgid ""
"If *maxheaderlen* is not ``None``, refold any header lines that are longer "
"than *maxheaderlen*, or if ``0``, do not rewrap any headers.  If "
"*manheaderlen* is ``None`` (the default), wrap headers and other message "
"lines according to the *policy* settings."
msgstr ""
"Se *maxheaderlen* não for ``None``, redobra quaisquer linhas de cabeçalho "
"maiores que *maxheaderlen* ou, se for ``0``, não redobra nenhum cabeçalho. "
"Se *manheaderlen* for ``None`` (o padrão), redobra os cabeçalhos e outras "
"linhas de mensagem de acordo com as configurações da *policy*."

#: ../../library/email.generator.rst:67 ../../library/email.generator.rst:168
msgid ""
"If *policy* is specified, use that policy to control message generation.  If "
"*policy* is ``None`` (the default), use the policy associated with the :"
"class:`~email.message.Message` or :class:`~email.message.EmailMessage` "
"object passed to ``flatten`` to control the message generation.  See :mod:"
"`email.policy` for details on what *policy* controls."
msgstr ""
"Se *policy* for especificado, usa essa política para controlar a geração de "
"mensagens. Se *policy* for ``None`` (o padrão), usa a política associada ao "
"objeto :class:`~email.message.Message` ou :class:`~email.message."
"EmailMessage` passado para ``flatten`` para controlar a geração de "
"mensagens. Consulte :mod:`email.policy` para obter detalhes sobre o que "
"*policy* controla."

#: ../../library/email.generator.rst:75 ../../library/email.generator.rst:174
msgid "Added the *policy* keyword."
msgstr "Adicionada o argumento nomeado *policy*."

#: ../../library/email.generator.rst:77 ../../library/email.generator.rst:176
msgid ""
"The default behavior of the *mangle_from_* and *maxheaderlen* parameters is "
"to follow the policy."
msgstr ""
"O comportamento padrão dos parâmetros *mangle_from_* e *maxheaderlen* é "
"seguir a política."

#: ../../library/email.generator.rst:83
msgid ""
"Print the textual representation of the message object structure rooted at "
"*msg* to the output file specified when the :class:`BytesGenerator` instance "
"was created."
msgstr ""
"Exibe a representação textual da estrutura do objeto de mensagem com raiz em "
"*msg* no arquivo de saída especificado quando a instância :class:"
"`BytesGenerator` foi criada."

#: ../../library/email.generator.rst:87
msgid ""
"If the :mod:`~email.policy` option :attr:`~email.policy.Policy.cte_type` is "
"``8bit`` (the default), copy any headers in the original parsed message that "
"have not been modified to the output with any bytes with the high bit set "
"reproduced as in the original, and preserve the non-ASCII :mailheader:"
"`Content-Transfer-Encoding` of any body parts that have them. If "
"``cte_type`` is ``7bit``, convert the bytes with the high bit set as needed "
"using an ASCII-compatible :mailheader:`Content-Transfer-Encoding`. That is, "
"transform parts with non-ASCII :mailheader:`Content-Transfer-Encoding` (:"
"mailheader:`Content-Transfer-Encoding: 8bit`) to an ASCII compatible :"
"mailheader:`Content-Transfer-Encoding`, and encode RFC-invalid non-ASCII "
"bytes in headers using the MIME ``unknown-8bit`` character set, thus "
"rendering them RFC-compliant."
msgstr ""
"Se a opção :mod:`~email.policy` :attr:`~email.policy.Policy.cte_type` for "
"``8bit`` (o padrão), copia todos os cabeçalhos da mensagem original "
"analisada que não tenham sido modificados para a saída, com todos os bytes "
"com o bit mais alto definido reproduzidos como no original, e preserva a :"
"mailheader:`Content-Transfer-Encoding` não ASCII de quaisquer partes do "
"corpo que os contenham. Se ``cte_type`` for ``7bit``, converte os bytes com "
"o bit mais alto definido, conforme necessário, usando uma :mailheader:"
"`Content-Transfer-Encoding` compatível com ASCII. Ou seja, transforma partes "
"com :mailheader:`Content-Transfer-Encoding` não ASCII (:mailheader:`Content-"
"Transfer-Encoding: 8bit`) em um :mailheader:`Content-Transfer-Encoding` "
"compatível com ASCII e codifica bytes não ASCII inválidos para RFC em "
"cabeçalhos usando o conjunto de caracteres MIME ``unknown-8bit``, tornando-"
"os compatíveis com RFC."

#: ../../library/email.generator.rst:104 ../../library/email.generator.rst:197
msgid ""
"If *unixfrom* is ``True``, print the envelope header delimiter used by the "
"Unix mailbox format (see :mod:`mailbox`) before the first of the :rfc:`5322` "
"headers of the root message object.  If the root object has no envelope "
"header, craft a standard one.  The default is ``False``. Note that for "
"subparts, no envelope header is ever printed."
msgstr ""
"Se *unixfrom* for ``True``, exibe o delimitador de cabeçalho de envelope "
"usado pelo formato de caixa de correio Unix (consulte :mod:`mailbox`) antes "
"do primeiro dos cabeçalhos :rfc:`5322` do objeto de mensagem raiz. Se o "
"objeto raiz não tiver cabeçalho de envelope, crie um padrão. O padrão é "
"``False``. Observe que, para subpartes, nenhum cabeçalho de envelope é "
"exibido."

#: ../../library/email.generator.rst:110 ../../library/email.generator.rst:203
msgid ""
"If *linesep* is not ``None``, use it as the separator character between all "
"the lines of the flattened message.  If *linesep* is ``None`` (the default), "
"use the value specified in the *policy*."
msgstr ""
"Se *linesep* não for ``None``, usa-o como caractere separador entre todas as "
"linhas da mensagem simplificada. Se *linesep* for ``None`` (o padrão), usa o "
"valor especificado na *policy*."

#: ../../library/email.generator.rst:119
msgid ""
"Return an independent clone of this :class:`BytesGenerator` instance with "
"the exact same option settings, and *fp* as the new *outfp*."
msgstr ""
"Retorna um clone independente desta instância :class:`BytesGenerator` com "
"exatamente as mesmas configurações de opção e *fp* como o novo *outfp*."

#: ../../library/email.generator.rst:125
msgid ""
"Encode *s* using the ``ASCII`` codec and the ``surrogateescape`` error "
"handler, and pass it to the *write* method of the *outfp* passed to the :"
"class:`BytesGenerator`'s constructor."
msgstr ""
"Codifica *s* usando o codec ``ASCII`` e o tratador de erros "
"``surrogateescape`` e passa-o para o método *write* do *outfp* passado ao "
"construtor :class:`BytesGenerator`."

#: ../../library/email.generator.rst:130
msgid ""
"As a convenience, :class:`~email.message.EmailMessage` provides the methods :"
"meth:`~email.message.EmailMessage.as_bytes` and ``bytes(aMessage)`` (a.k.a. :"
"meth:`~email.message.EmailMessage.__bytes__`), which simplify the generation "
"of a serialized binary representation of a message object.  For more detail, "
"see :mod:`email.message`."
msgstr ""
"Para facilitar, :class:`~email.message.EmailMessage` fornece os métodos :"
"meth:`~email.message.EmailMessage.as_bytes` e ``bytes(aMessage)`` (também "
"conhecidos como :meth:`~email.message.EmailMessage.__bytes__`), que "
"simplificam a geração de uma representação binária serializada de um objeto "
"de mensagem. Para mais detalhes, consulte :mod:`email.message`."

#: ../../library/email.generator.rst:137
msgid ""
"Because strings cannot represent binary data, the :class:`Generator` class "
"must convert any binary data in any message it flattens to an ASCII "
"compatible format, by converting them to an ASCII compatible :mailheader:"
"`Content-Transfer_Encoding`.  Using the terminology of the email RFCs, you "
"can think of this as :class:`Generator` serializing to an I/O stream that is "
"not \"8 bit clean\".  In other words, most applications will want to be "
"using :class:`BytesGenerator`, and not :class:`Generator`."
msgstr ""
"Como strings não podem representar dados binários, a classe :class:"
"`Generator` deve converter quaisquer dados binários em qualquer mensagem que "
"ela nivele para um formato compatível com ASCII, convertendo-os para um :"
"mailheader:`Content-Transfer_Encoding` compatível com ASCII. Usando a "
"terminologia dos RFCs de e-mail, você pode pensar nisso como :class:"
"`Generator` serializando para um fluxo de E/S que não é \"limpo em 8 bits\". "
"Em outras palavras, a maioria das aplicações usará :class:`BytesGenerator`, "
"e não :class:`Generator`."

#: ../../library/email.generator.rst:148
msgid ""
"Return a :class:`Generator` object that will write any message provided to "
"the :meth:`flatten` method, or any text provided to the :meth:`write` "
"method, to the :term:`file-like object` *outfp*.  *outfp* must support a "
"``write`` method that accepts string data."
msgstr ""
"Retorna um objeto :class:`Generator` que gravará qualquer mensagem fornecida "
"ao método :meth:`flatten`, ou qualquer texto fornecido ao método :meth:"
"`write`, no :term:`objeto arquivo ou similar` *outfp*. *outfp* deve oferecer "
"suporte a um método ``write`` que aceite dados string."

#: ../../library/email.generator.rst:182
msgid ""
"Print the textual representation of the message object structure rooted at "
"*msg* to the output file specified when the :class:`Generator` instance was "
"created."
msgstr ""
"Exibe a representação textual da estrutura do objeto de mensagem com raiz em "
"*msg* no arquivo de saída especificado quando a instância :class:`Generator` "
"foi criada."

#: ../../library/email.generator.rst:186
msgid ""
"If the :mod:`~email.policy` option :attr:`~email.policy.Policy.cte_type` is "
"``8bit``, generate the message as if the option were set to ``7bit``. (This "
"is required because strings cannot represent non-ASCII bytes.) Convert any "
"bytes with the high bit set as needed using an ASCII-compatible :mailheader:"
"`Content-Transfer-Encoding`.  That is, transform parts with non-ASCII :"
"mailheader:`Content-Transfer-Encoding` (:mailheader:`Content-Transfer-"
"Encoding: 8bit`) to an ASCII compatible :mailheader:`Content-Transfer-"
"Encoding`, and encode RFC-invalid non-ASCII bytes in headers using the MIME "
"``unknown-8bit`` character set, thus rendering them RFC-compliant."
msgstr ""
"Se a opção :mod:`~email.policy` :attr:`~email.policy.Policy.cte_type` for "
"``8bit``, gera a mensagem como se a opção estivesse definida como ``7bit``. "
"(Isso é necessário porque strings não podem representar bytes não ASCII.) "
"Converte quaisquer bytes com o bit mais alto definido, conforme necessário, "
"usando uma :mailheader:`Content-Transfer-Encoding` compatível com ASCII. Ou "
"seja, transforma partes com :mailheader:`Content-Transfer-Encoding` não "
"ASCII (:mailheader:`Content-Transfer-Encoding: 8bit`) em um :mailheader:"
"`Content-Transfer-Encoding` compatível com ASCII e codifica bytes não ASCII "
"inválidos para RFC em cabeçalhos usando o conjunto de caracteres MIME "
"``unknown-8bit``, tornando-os compatíveis com RFC."

#: ../../library/email.generator.rst:209
msgid ""
"Added support for re-encoding ``8bit`` message bodies, and the *linesep* "
"argument."
msgstr ""
"Adicionado suporte para recodificação de corpos de mensagens ``8bit`` e o "
"argumento *linesep*."

#: ../../library/email.generator.rst:216
msgid ""
"Return an independent clone of this :class:`Generator` instance with the "
"exact same options, and *fp* as the new *outfp*."
msgstr ""
"Retorna um clone independente desta instância :class:`Generator` com "
"exatamente as mesmas opções e *fp* como o novo *outfp*."

#: ../../library/email.generator.rst:222
msgid ""
"Write *s* to the *write* method of the *outfp* passed to the :class:"
"`Generator`'s constructor.  This provides just enough file-like API for :"
"class:`Generator` instances to be used in the :func:`print` function."
msgstr ""
"Escreve *s* no método *write* do *outfp* passado ao construtor de :class:"
"`Generator`. Isso fornece API arquivo ou similar suficiente para que "
"instâncias de :class:`Generator` sejam usadas na função :func:`print`."

#: ../../library/email.generator.rst:228
msgid ""
"As a convenience, :class:`~email.message.EmailMessage` provides the methods :"
"meth:`~email.message.EmailMessage.as_string` and ``str(aMessage)`` (a.k.a. :"
"meth:`~email.message.EmailMessage.__str__`), which simplify the generation "
"of a formatted string representation of a message object.  For more detail, "
"see :mod:`email.message`."
msgstr ""
"Para facilitar, :class:`~email.message.EmailMessage` fornece os métodos :"
"meth:`~email.message.EmailMessage.as_string` e ``str(aMessage)`` (também "
"conhecidos como :meth:`~email.message.EmailMessage.__str__`), que "
"simplificam a geração de uma representação de string formatada de um objeto "
"de mensagem. Para mais detalhes, consulte :mod:`email.message`."

#: ../../library/email.generator.rst:235
msgid ""
"The :mod:`email.generator` module also provides a derived class, :class:"
"`DecodedGenerator`, which is like the :class:`Generator` base class, except "
"that non-\\ :mimetype:`text` parts are not serialized, but are instead "
"represented in the output stream by a string derived from a template filled "
"in with information about the part."
msgstr ""
"O módulo :mod:`email.generator` também fornece uma classe derivada, :class:"
"`DecodedGenerator`, que é como a classe base :class:`Generator`, exceto que "
"as partes não-\\ :mimetype:`text` não são serializadas, mas são "
"representadas no fluxo de saída por uma string derivada de um modelo "
"preenchido com informações sobre a parte."

#: ../../library/email.generator.rst:244
msgid ""
"Act like :class:`Generator`, except that for any subpart of the message "
"passed to :meth:`Generator.flatten`, if the subpart is of main type :"
"mimetype:`text`, print the decoded payload of the subpart, and if the main "
"type is not :mimetype:`text`, instead of printing it fill in the string "
"*fmt* using information from the part and print the resulting filled-in "
"string."
msgstr ""
"Age como :class:`Generator`, exceto que para qualquer subparte da mensagem "
"passada para :meth:`Generator.flatten`, se a subparte for do tipo principal :"
"mimetype:`text`, exibe a carga decodificada da subparte e, se o tipo "
"principal não for :mimetype:`text`, em vez de exibi-la, preenche a string "
"*fmt* usando informações da parte e exibe a string preenchida resultante."

#: ../../library/email.generator.rst:251
msgid ""
"To fill in *fmt*, execute ``fmt % part_info``, where ``part_info`` is a "
"dictionary composed of the following keys and values:"
msgstr ""
"Para preencher *fmt*, executa ``fmt % part_info``, onde ``part_info`` é um "
"dicionário composto pelas seguintes chaves e valores:"

#: ../../library/email.generator.rst:254
msgid "``type`` -- Full MIME type of the non-\\ :mimetype:`text` part"
msgstr "``type`` -- Tipo MIME completo da parte não-\\ :mimetype:`text`"

#: ../../library/email.generator.rst:256
msgid "``maintype`` -- Main MIME type of the non-\\ :mimetype:`text` part"
msgstr "``maintype`` -- Tipo MIME principal da parte não-\\ :mimetype:`text`"

#: ../../library/email.generator.rst:258
msgid "``subtype`` -- Sub-MIME type of the non-\\ :mimetype:`text` part"
msgstr "``subtype`` -- Tipo sub-MIME da parte não-\\ :mimetype:`text`"

#: ../../library/email.generator.rst:260
msgid "``filename`` -- Filename of the non-\\ :mimetype:`text` part"
msgstr "``filename`` -- Nome de arquivo da parte não-\\ :mimetype:`text`"

#: ../../library/email.generator.rst:262
msgid ""
"``description`` -- Description associated with the non-\\ :mimetype:`text` "
"part"
msgstr "``description`` -- Descrição associada à parte não-\\ :mimetype:`text`"

#: ../../library/email.generator.rst:264
msgid ""
"``encoding`` -- Content transfer encoding of the non-\\ :mimetype:`text` part"
msgstr ""
"``encoding`` -- Codificação de transferência de conteúdo da parte não-\\ :"
"mimetype:`text`"

#: ../../library/email.generator.rst:266
msgid "If *fmt* is ``None``, use the following default *fmt*:"
msgstr "Se *fmt* for ``None``, usa o seguinte *fmt* padrão:"

#: ../../library/email.generator.rst:268
msgid ""
"\"[Non-text (%(type)s) part of message omitted, filename %(filename)s]\""
msgstr ""
"\"[Non-text (%(type)s) part of message omitted, filename %(filename)s]\""

#: ../../library/email.generator.rst:270
msgid ""
"Optional *_mangle_from_* and *maxheaderlen* are as with the :class:"
"`Generator` base class."
msgstr ""
"Os opcionais *_mangle_from_* e *maxheaderlen* são como os da classe base :"
"class:`Generator`."

#: ../../library/email.generator.rst:275
msgid "Footnotes"
msgstr "Notas de rodapé"

#: ../../library/email.generator.rst:276
msgid ""
"This statement assumes that you use the appropriate setting for "
"``unixfrom``, and that there are no :mod:`email.policy` settings calling for "
"automatic adjustments (for example, :attr:`~email.policy.EmailPolicy."
"refold_source` must be ``none``, which is *not* the default).  It is also "
"not 100% true, since if the message does not conform to the RFC standards "
"occasionally information about the exact original text is lost during "
"parsing error recovery.  It is a goal to fix these latter edge cases when "
"possible."
msgstr ""
"Esta instrução presume que você usa a configuração apropriada para "
"``unixfrom`` e que não haja configurações :mod:`email.policy` que exijam "
"ajustes automáticos (por exemplo, :attr:`~email.policy.EmailPolicy."
"refold_source` deve ser ``none``, que *não* é o padrão). Também não é 100% "
"verdadeiro, pois, se a mensagem não estiver em conformidade com os padrões "
"RFC, ocasionalmente informações sobre o texto original exato são perdidas "
"durante a recuperação de erros de análise. O objetivo é corrigir esses "
"últimos casos extremos sempre que possível."
