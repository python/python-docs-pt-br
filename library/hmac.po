# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# i17obot <i17obot@rougeth.com>, 2021
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-02-28 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 01:07+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/hmac.rst:2
msgid ":mod:`!hmac` --- Keyed-Hashing for Message Authentication"
msgstr ":mod:`!hmac` --- Código de autenticação de mensagem com chave hash"

#: ../../library/hmac.rst:10
msgid "**Source code:** :source:`Lib/hmac.py`"
msgstr "**Código-fonte:** :source:`Lib/hmac.py`"

#: ../../library/hmac.rst:14
msgid "This module implements the HMAC algorithm as described by :rfc:`2104`."
msgstr ""
"Este módulo implementa o algoritmo HMAC, abreviação de *hash-based message "
"authentication code*, conforme descrito por :rfc:`2104`."

#: ../../library/hmac.rst:19
msgid ""
"Return a new hmac object.  *key* is a bytes or bytearray object giving the "
"secret key.  If *msg* is present, the method call ``update(msg)`` is made. "
"*digestmod* is the digest name, digest constructor or module for the HMAC "
"object to use.  It may be any name suitable to :func:`hashlib.new`. Despite "
"its argument position, it is required."
msgstr ""
"Retorna um novo objeto hmac. *key* é um objeto bytes ou bytearray que "
"fornece a chave secreta. Se *msg* estiver presente, a chamada de método "
"``update(msg)`` é feita. *digestmod* é o nome do resumo, construtor do "
"resumo ou módulo para o objeto HMAC usar. Pode ser qualquer nome adequado "
"para :func:`hashlib.new`. Apesar da posição do argumento, é obrigatório."

#: ../../library/hmac.rst:25
msgid ""
"Parameter *key* can be a bytes or bytearray object. Parameter *msg* can be "
"of any type supported by :mod:`hashlib`. Parameter *digestmod* can be the "
"name of a hash algorithm."
msgstr ""
"O parâmetro *key* pode ser um objeto bytes ou bytearray. O parâmetro *msg* "
"pode ser de qualquer tipo suportado por :mod:`hashlib`. O parâmetro "
"*digestmod* pode ser o nome de um algoritmo hash."

#: ../../library/hmac.rst:30
msgid ""
"The *digestmod* argument is now required.  Pass it as a keyword argument to "
"avoid awkwardness when you do not have an initial *msg*."
msgstr ""
"O argumento *digestmod* agora é obrigatório. Passe-o como um argumento "
"nomeado para evitar constrangimentos quando você não tiver uma *msg* inicial."

#: ../../library/hmac.rst:37
msgid ""
"Return digest of *msg* for given secret *key* and *digest*. The function is "
"equivalent to ``HMAC(key, msg, digest).digest()``, but uses an optimized C "
"or inline implementation, which is faster for messages that fit into memory. "
"The parameters *key*, *msg*, and *digest* have the same meaning as in :func:"
"`~hmac.new`."
msgstr ""
"Retorna o resumo de *msg* para o segredo *key* e *digest* fornecidos. A "
"função equivale a ``HMAC(key, msg, digest).digest()``, mas usa uma "
"implementação C otimizada ou inline, que é mais rápida para mensagens que "
"cabem na memória. Os parâmetros *key*, *msg* e *digest* têm o mesmo "
"significado que em :func:`~hmac.new`."

#: ../../library/hmac.rst:43
msgid ""
"CPython implementation detail, the optimized C implementation is only used "
"when *digest* is a string and name of a digest algorithm, which is supported "
"by OpenSSL."
msgstr ""
"Detalhe da implementação do CPython: a implementação otimizada do C é usada "
"somente quando *digest* é uma string e o nome de um algoritmo de resumo, que "
"é suportado pelo OpenSSL."

#: ../../library/hmac.rst:50
msgid "An HMAC object has the following methods:"
msgstr "Um objeto HMAC tem os seguintes métodos:"

#: ../../library/hmac.rst:54
msgid ""
"Update the hmac object with *msg*.  Repeated calls are equivalent to a "
"single call with the concatenation of all the arguments: ``m.update(a); m."
"update(b)`` is equivalent to ``m.update(a + b)``."
msgstr ""
"Atualiza o objeto hmac com *msg*. Chamadas repetidas são equivalentes a uma "
"única chamada com a concatenação de todos os argumentos: ``m.update(a); m."
"update(b)`` equivale a ``m.update(a + b)``."

#: ../../library/hmac.rst:58
msgid "Parameter *msg* can be of any type supported by :mod:`hashlib`."
msgstr ""
"O parâmetro *msg* pode ser de qualquer tipo suportado por :mod:`hashlib`."

#: ../../library/hmac.rst:64
msgid ""
"Return the digest of the bytes passed to the :meth:`update` method so far. "
"This bytes object will be the same length as the *digest_size* of the digest "
"given to the constructor.  It may contain non-ASCII bytes, including NUL "
"bytes."
msgstr ""
"Retorna o resumo dos bytes passados para o método :meth:`update` até o "
"momento. Este objeto bytes terá o mesmo comprimento que o *digest_size* do "
"resumo dado ao construtor. Ele pode conter bytes não-ASCII, incluindo bytes "
"NUL."

#: ../../library/hmac.rst:71
msgid ""
"When comparing the output of :meth:`digest` to an externally supplied digest "
"during a verification routine, it is recommended to use the :func:"
"`compare_digest` function instead of the ``==`` operator to reduce the "
"vulnerability to timing attacks."
msgstr ""
"Ao comparar a saída de :meth:`digest` com um resumo fornecido externamente "
"durante uma rotina de verificação, é recomendável usar a função :func:"
"`compare_digest` em vez do operador ``==`` para reduzir a vulnerabilidade a "
"ataques de temporização."

#: ../../library/hmac.rst:79
msgid ""
"Like :meth:`digest` except the digest is returned as a string twice the "
"length containing only hexadecimal digits.  This may be used to exchange the "
"value safely in email or other non-binary environments."
msgstr ""
"Como :meth:`digest` exceto que o resumo é retornado como uma string com o "
"dobro do comprimento contendo apenas dígitos hexadecimais. Isso pode ser "
"usado para trocar o valor com segurança em e-mail ou outros ambientes não "
"binários."

#: ../../library/hmac.rst:85
msgid ""
"When comparing the output of :meth:`hexdigest` to an externally supplied "
"digest during a verification routine, it is recommended to use the :func:"
"`compare_digest` function instead of the ``==`` operator to reduce the "
"vulnerability to timing attacks."
msgstr ""
"Ao comparar a saída de :meth:`hexdigest` com um resumo fornecido "
"externamente durante uma rotina de verificação, é recomendável usar a "
"função :func:`compare_digest` em vez do operador ``==`` para reduzir a "
"vulnerabilidade a ataques de temporização."

#: ../../library/hmac.rst:93
msgid ""
"Return a copy (\"clone\") of the hmac object.  This can be used to "
"efficiently compute the digests of strings that share a common initial "
"substring."
msgstr ""
"Retorna uma cópia (\"clone\") do objeto hmac. Isso pode ser usado para "
"calcular eficientemente os resumos de strings que compartilham uma substring "
"inicial comum."

#: ../../library/hmac.rst:97
msgid "A hash object has the following attributes:"
msgstr "Um objeto hash tem os seguintes atributos:"

#: ../../library/hmac.rst:101
msgid "The size of the resulting HMAC digest in bytes."
msgstr "O tamanho do resumo HMAC resultante em bytes."

#: ../../library/hmac.rst:105
msgid "The internal block size of the hash algorithm in bytes."
msgstr "O tamanho do bloco interna do algoritmo de hash em bytes."

#: ../../library/hmac.rst:111
msgid "The canonical name of this HMAC, always lowercase, e.g. ``hmac-md5``."
msgstr ""
"O nome canônico deste HMAC, sempre em letras minúsculas, por exemplo, ``hmac-"
"md5``."

#: ../../library/hmac.rst:116
msgid ""
"Removed the undocumented attributes ``HMAC.digest_cons``, ``HMAC.inner``, "
"and ``HMAC.outer``."
msgstr ""
"Foram removidos os atributos não documentados ``HMAC.digest_cons``, ``HMAC."
"inner`` e ``HMAC.outer``."

#: ../../library/hmac.rst:120
msgid "This module also provides the following helper function:"
msgstr "Este módulo também fornece a seguinte função auxiliar:"

#: ../../library/hmac.rst:124
msgid ""
"Return ``a == b``.  This function uses an approach designed to prevent "
"timing analysis by avoiding content-based short circuiting behaviour, making "
"it appropriate for cryptography.  *a* and *b* must both be of the same type: "
"either :class:`str` (ASCII only, as e.g. returned by :meth:`HMAC."
"hexdigest`), or a :term:`bytes-like object`."
msgstr ""
"Retorna ``a == b``. Esta função usa uma abordagem projetada para evitar "
"análise de tempo evitando comportamento de curto-circuito baseado em "
"conteúdo, tornando-a apropriada para criptografia. *a* e *b* devem ser ambos "
"do mesmo tipo: :class:`str` (somente ASCII, como, por exemplo, retornado "
"por :meth:`HMAC.hexdigest`), ou um :term:`objeto byte ou similar`."

#: ../../library/hmac.rst:132
msgid ""
"If *a* and *b* are of different lengths, or if an error occurs, a timing "
"attack could theoretically reveal information about the types and lengths of "
"*a* and *b*—but not their values."
msgstr ""
"Se *a* e *b* tiverem comprimentos diferentes, ou se ocorrer um erro, um "
"ataque de temporização poderia teoricamente revelar informações sobre os "
"tipos e comprimentos de *a* e *b*, mas não seus valores."

#: ../../library/hmac.rst:140
msgid ""
"The function uses OpenSSL's ``CRYPTO_memcmp()`` internally when available."
msgstr ""
"A função usa ``CRYPTO_memcmp()`` do OpenSSL internamente quando disponível."

#: ../../library/hmac.rst:146
msgid "Module :mod:`hashlib`"
msgstr "Módulo :mod:`hashlib`"

#: ../../library/hmac.rst:147
msgid "The Python module providing secure hash functions."
msgstr "O módulo Python que fornece funções hash seguras."
