# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Marco Rougeth <marco@rougeth.com>, 2020
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2020
# i17obot <i17obot@rougeth.com>, 2020
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-04 17:06+0000\n"
"PO-Revision-Date: 2020-05-30 12:13+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/urllib.parse.rst:2
msgid ":mod:`urllib.parse` --- Parse URLs into components"
msgstr ":mod:`urllib.parse` --- Analisa URLs para componentes"

#: ../../library/urllib.parse.rst:7
msgid "**Source code:** :source:`Lib/urllib/parse.py`"
msgstr "**Código-fonte:** :source:`Lib/urllib/parse.py`"

#: ../../library/urllib.parse.rst:18
msgid ""
"This module defines a standard interface to break Uniform Resource Locator "
"(URL) strings up in components (addressing scheme, network location, path "
"etc.), to combine the components back into a URL string, and to convert a "
"\"relative URL\" to an absolute URL given a \"base URL.\""
msgstr ""
"Este módulo define uma interface padrão para quebrar strings de Uniform "
"Resource Locator (URL) em componentes (esquema de endereçamento, local de "
"rede, caminho etc.), para combinar os componentes de volta em uma string de "
"URL e para converter uma \"URL relativo\" em uma URL absoluta dado uma \"URL "
"base\"."

#: ../../library/urllib.parse.rst:23
msgid ""
"The module has been designed to match the Internet RFC on Relative Uniform "
"Resource Locators. It supports the following URL schemes: ``file``, ``ftp``, "
"``gopher``, ``hdl``, ``http``, ``https``, ``imap``, ``mailto``, ``mms``, "
"``news``, ``nntp``, ``prospero``, ``rsync``, ``rtsp``, ``rtspu``, ``sftp``, "
"``shttp``, ``sip``, ``sips``, ``snews``, ``svn``, ``svn+ssh``, ``telnet``, "
"``wais``, ``ws``, ``wss``."
msgstr ""
"O módulo foi projetado para corresponder ao RFC da Internet sobre "
"Localizadores de Recursos Uniformes Relativos, ou URL relativa. Ele tem "
"suporte aos seguintes esquemas de URL: ``file``, ``ftp``, ``gopher``, "
"``hdl``, ``http``, ``https``, ``imap``, ``mailto``, ``mms``, ``news``, "
"``nntp``, ``prospero``, ``rsync``, ``rtsp``, ``rtspu``, ``sftp``, ``shttp``, "
"``sip``, ``sips``, ``snews``, ``svn``, ``svn+ssh``, ``telnet``, ``wais``, "
"``ws``, ``wss``."

#: ../../library/urllib.parse.rst:30
msgid ""
"The :mod:`urllib.parse` module defines functions that fall into two broad "
"categories: URL parsing and URL quoting. These are covered in detail in the "
"following sections."
msgstr ""
"O módulo :mod:`urllib.parse` define funções que se enquadram em duas grandes "
"categorias: análise de URL e colocação de aspas na URL. Eles são abordados "
"em detalhes nas seções a seguir."

#: ../../library/urllib.parse.rst:35
msgid "URL Parsing"
msgstr "Análise de URL"

#: ../../library/urllib.parse.rst:37
msgid ""
"The URL parsing functions focus on splitting a URL string into its "
"components, or on combining URL components into a URL string."
msgstr ""
"As funções de análise de URL se concentram na divisão de uma string de URL "
"em seus componentes ou na combinação de componentes de URL em uma string de "
"URL."

#: ../../library/urllib.parse.rst:42
msgid ""
"Parse a URL into six components, returning a 6-item :term:`named tuple`.  "
"This corresponds to the general structure of a URL: ``scheme://netloc/path;"
"parameters?query#fragment``. Each tuple item is a string, possibly empty. "
"The components are not broken up in smaller parts (for example, the network "
"location is a single string), and % escapes are not expanded. The delimiters "
"as shown above are not part of the result, except for a leading slash in the "
"*path* component, which is retained if present.  For example:"
msgstr ""

#: ../../library/urllib.parse.rst:63
msgid ""
"Following the syntax specifications in :rfc:`1808`, urlparse recognizes a "
"netloc only if it is properly introduced by '//'.  Otherwise the input is "
"presumed to be a relative URL and thus to start with a path component."
msgstr ""
"Seguindo as especificações de sintaxe em :rfc:`1808`, o urlparse reconhece "
"um netloc apenas se for introduzido apropriadamente por '//'. Caso "
"contrário, presume-se que a entrada seja uma URL relativa e, portanto, "
"comece com um componente de caminho."

#: ../../library/urllib.parse.rst:82
msgid ""
"The *scheme* argument gives the default addressing scheme, to be used only "
"if the URL does not specify one.  It should be the same type (text or bytes) "
"as *urlstring*, except that the default value ``''`` is always allowed, and "
"is automatically converted to ``b''`` if appropriate."
msgstr ""
"O argumento *scheme* fornece o esquema de endereçamento padrão, a ser usado "
"apenas se o URL não especificar um. Deve ser do mesmo tipo (texto ou bytes) "
"que *urlstring*, exceto que o valor padrão ``''`` é sempre permitido e é "
"automaticamente convertido para ``b''`` se apropriado."

#: ../../library/urllib.parse.rst:87
msgid ""
"If the *allow_fragments* argument is false, fragment identifiers are not "
"recognized.  Instead, they are parsed as part of the path, parameters or "
"query component, and :attr:`fragment` is set to the empty string in the "
"return value."
msgstr ""
"Se o argumento *allow_fragments* for falso, os identificadores de fragmento "
"não serão reconhecidos. Em vez disso, eles são analisados como parte do "
"caminho, parâmetros ou componente de consulta, e :attr:`fragment` é definido "
"como a string vazia no valor de retorno."

#: ../../library/urllib.parse.rst:92
msgid ""
"The return value is a :term:`named tuple`, which means that its items can be "
"accessed by index or as named attributes, which are:"
msgstr ""
"O valor de retorno é uma :term:`tupla nomeada`, o que significa que seus "
"itens podem ser acessados por índice ou como atributos nomeados, que são:"

#: ../../library/urllib.parse.rst:96 ../../library/urllib.parse.rst:285
#: ../../library/urllib.parse.rst:398
msgid "Attribute"
msgstr "Atributo"

#: ../../library/urllib.parse.rst:96 ../../library/urllib.parse.rst:285
#: ../../library/urllib.parse.rst:398
msgid "Index"
msgstr "Índice"

#: ../../library/urllib.parse.rst:96 ../../library/urllib.parse.rst:285
#: ../../library/urllib.parse.rst:398
msgid "Value"
msgstr "Valor"

#: ../../library/urllib.parse.rst:96 ../../library/urllib.parse.rst:285
#: ../../library/urllib.parse.rst:398
msgid "Value if not present"
msgstr "Valor, se não presente"

#: ../../library/urllib.parse.rst:98 ../../library/urllib.parse.rst:287
msgid ":attr:`scheme`"
msgstr ":attr:`scheme`"

#: ../../library/urllib.parse.rst:98 ../../library/urllib.parse.rst:287
#: ../../library/urllib.parse.rst:400
msgid "0"
msgstr "0"

#: ../../library/urllib.parse.rst:98 ../../library/urllib.parse.rst:287
msgid "URL scheme specifier"
msgstr "Especificador do esquema da URL"

#: ../../library/urllib.parse.rst:98 ../../library/urllib.parse.rst:287
msgid "*scheme* parameter"
msgstr "parâmetro *scheme*"

#: ../../library/urllib.parse.rst:100 ../../library/urllib.parse.rst:289
msgid ":attr:`netloc`"
msgstr ":attr:`netloc`"

#: ../../library/urllib.parse.rst:100 ../../library/urllib.parse.rst:289
#: ../../library/urllib.parse.rst:402
msgid "1"
msgstr "1"

#: ../../library/urllib.parse.rst:100 ../../library/urllib.parse.rst:289
msgid "Network location part"
msgstr "Parte da localização na rede"

#: ../../library/urllib.parse.rst:100 ../../library/urllib.parse.rst:102
#: ../../library/urllib.parse.rst:104 ../../library/urllib.parse.rst:107
#: ../../library/urllib.parse.rst:109 ../../library/urllib.parse.rst:289
#: ../../library/urllib.parse.rst:291 ../../library/urllib.parse.rst:293
#: ../../library/urllib.parse.rst:295 ../../library/urllib.parse.rst:400
#: ../../library/urllib.parse.rst:402
msgid "empty string"
msgstr "string vazia"

#: ../../library/urllib.parse.rst:102 ../../library/urllib.parse.rst:291
msgid ":attr:`path`"
msgstr ":attr:`path`"

#: ../../library/urllib.parse.rst:102 ../../library/urllib.parse.rst:291
msgid "2"
msgstr "2"

#: ../../library/urllib.parse.rst:102 ../../library/urllib.parse.rst:291
msgid "Hierarchical path"
msgstr "Caminho hierárquico"

#: ../../library/urllib.parse.rst:104
msgid ":attr:`params`"
msgstr ":attr:`params`"

#: ../../library/urllib.parse.rst:104 ../../library/urllib.parse.rst:293
msgid "3"
msgstr "3"

#: ../../library/urllib.parse.rst:104
msgid "Parameters for last path element"
msgstr "Parâmetros para o último elemento de caminho"

#: ../../library/urllib.parse.rst:107 ../../library/urllib.parse.rst:293
msgid ":attr:`query`"
msgstr ":attr:`query`"

#: ../../library/urllib.parse.rst:107 ../../library/urllib.parse.rst:295
msgid "4"
msgstr "4"

#: ../../library/urllib.parse.rst:107 ../../library/urllib.parse.rst:293
msgid "Query component"
msgstr "Componente da consulta"

#: ../../library/urllib.parse.rst:109 ../../library/urllib.parse.rst:295
#: ../../library/urllib.parse.rst:402
msgid ":attr:`fragment`"
msgstr ":attr:`fragment`"

#: ../../library/urllib.parse.rst:109
msgid "5"
msgstr "5"

#: ../../library/urllib.parse.rst:109 ../../library/urllib.parse.rst:295
#: ../../library/urllib.parse.rst:402
msgid "Fragment identifier"
msgstr "Identificador do fragmento"

#: ../../library/urllib.parse.rst:111 ../../library/urllib.parse.rst:297
msgid ":attr:`username`"
msgstr ":attr:`username`"

#: ../../library/urllib.parse.rst:111 ../../library/urllib.parse.rst:297
msgid "User name"
msgstr "Nome do usuário"

#: ../../library/urllib.parse.rst:111 ../../library/urllib.parse.rst:113
#: ../../library/urllib.parse.rst:115 ../../library/urllib.parse.rst:117
#: ../../library/urllib.parse.rst:297 ../../library/urllib.parse.rst:299
#: ../../library/urllib.parse.rst:301 ../../library/urllib.parse.rst:303
msgid ":const:`None`"
msgstr ":const:`None`"

#: ../../library/urllib.parse.rst:113 ../../library/urllib.parse.rst:299
msgid ":attr:`password`"
msgstr ":attr:`password`"

#: ../../library/urllib.parse.rst:113 ../../library/urllib.parse.rst:299
msgid "Password"
msgstr "Senha"

#: ../../library/urllib.parse.rst:115 ../../library/urllib.parse.rst:301
msgid ":attr:`hostname`"
msgstr ":attr:`hostname`"

#: ../../library/urllib.parse.rst:115 ../../library/urllib.parse.rst:301
msgid "Host name (lower case)"
msgstr "Nome de máquina (em minúsculo)"

#: ../../library/urllib.parse.rst:117 ../../library/urllib.parse.rst:303
msgid ":attr:`port`"
msgstr ":attr:`port`"

#: ../../library/urllib.parse.rst:117 ../../library/urllib.parse.rst:303
msgid "Port number as integer, if present"
msgstr "Número da porta como inteiro, se presente"

#: ../../library/urllib.parse.rst:121 ../../library/urllib.parse.rst:307
msgid ""
"Reading the :attr:`port` attribute will raise a :exc:`ValueError` if an "
"invalid port is specified in the URL.  See section :ref:`urlparse-result-"
"object` for more information on the result object."
msgstr ""
"Ler o atributo :attr:`port` irá levantar uma :exc:`ValueError` se uma porta "
"inválida for especificada no URL. Veja a seção :ref:`urlparse-result-object` "
"para mais informações sobre o objeto de resultado."

#: ../../library/urllib.parse.rst:125 ../../library/urllib.parse.rst:311
msgid ""
"Unmatched square brackets in the :attr:`netloc` attribute will raise a :exc:"
"`ValueError`."
msgstr ""
"Colchetes sem correspondência no atributo :attr:`netloc` levantará uma :exc:"
"`ValueError`."

#: ../../library/urllib.parse.rst:128 ../../library/urllib.parse.rst:314
msgid ""
"Characters in the :attr:`netloc` attribute that decompose under NFKC "
"normalization (as used by the IDNA encoding) into any of ``/``, ``?``, "
"``#``, ``@``, or ``:`` will raise a :exc:`ValueError`. If the URL is "
"decomposed before parsing, no error will be raised."
msgstr ""
"Caracteres no atributo :attr:`netloc` que se decompõem sob a normalização "
"NFKC (como usado pela codificação IDNA) em qualquer um dos ``/``, ``?``, "
"``#``, ``@`` ou ``:`` vai levantar uma :exc:`ValueError`. Se a URL for "
"decomposta antes da análise, nenhum erro será levantado."

#: ../../library/urllib.parse.rst:133
msgid ""
"As is the case with all named tuples, the subclass has a few additional "
"methods and attributes that are particularly useful. One such method is :"
"meth:`_replace`. The :meth:`_replace` method will return a new ParseResult "
"object replacing specified fields with new values."
msgstr ""
"Como é o caso com todas as tuplas nomeadas, a subclasse tem alguns métodos e "
"atributos adicionais que são particularmente úteis. Um desses métodos é :"
"meth:`_replace`. O método :meth:`_replace` retornará um novo objeto "
"ParseResult substituindo os campos especificados por novos valores."

#: ../../library/urllib.parse.rst:152
msgid ""
":func:`urlparse` does not perform validation.  See :ref:`URL parsing "
"security <url-parsing-security>` for details."
msgstr ""
":func:`urlparse` não realiza validação.  Veja :ref:`Segurança ao analisar "
"URLs <url-parsing-security>` para detalhes."

#: ../../library/urllib.parse.rst:155
msgid "Added IPv6 URL parsing capabilities."
msgstr "Adicionados recursos de análise de URL IPv6."

#: ../../library/urllib.parse.rst:158
msgid ""
"The fragment is now parsed for all URL schemes (unless *allow_fragment* is "
"false), in accordance with :rfc:`3986`.  Previously, a whitelist of schemes "
"that support fragments existed."
msgstr ""
"O fragmento agora é analisado para todos os esquemas de URL (a menos que "
"*allow_fragment* seja falso), de acordo com a :rfc:`3986`. Anteriormente, "
"existia uma lista branca de esquemas que suportam fragmentos."

#: ../../library/urllib.parse.rst:163 ../../library/urllib.parse.rst:328
msgid ""
"Out-of-range port numbers now raise :exc:`ValueError`, instead of returning :"
"const:`None`."
msgstr ""
"Números de porta fora do intervalo agora levantam :exc:`ValueError`, em vez "
"de retornar :const:`None`."

#: ../../library/urllib.parse.rst:167 ../../library/urllib.parse.rst:332
msgid ""
"Characters that affect netloc parsing under NFKC normalization will now "
"raise :exc:`ValueError`."
msgstr ""
"Os caracteres que afetam a análise de netloc sob normalização NFKC agora "
"levantarão :exc:`ValueError`."

#: ../../library/urllib.parse.rst:174
msgid ""
"Parse a query string given as a string argument (data of type :mimetype:"
"`application/x-www-form-urlencoded`).  Data are returned as a dictionary.  "
"The dictionary keys are the unique query variable names and the values are "
"lists of values for each name."
msgstr ""
"Analisa uma string de consulta fornecida como um argumento de string (dados "
"do tipo :mimetype:`application/x-www-form-urlencoded`). Os dados são "
"retornados como um dicionário. As chaves de dicionário são os nomes de "
"variáveis de consulta exclusivos e os valores são listas de valores para "
"cada nome."

#: ../../library/urllib.parse.rst:179 ../../library/urllib.parse.rst:224
msgid ""
"The optional argument *keep_blank_values* is a flag indicating whether blank "
"values in percent-encoded queries should be treated as blank strings. A true "
"value indicates that blanks should be retained as  blank strings.  The "
"default false value indicates that blank values are to be ignored and "
"treated as if they were not included."
msgstr ""
"O argumento opcional *keep_blank_values* é um sinalizador que indica se os "
"valores em branco em consultas codificadas por porcentagem devem ser "
"tratados como strings em branco. Um valor verdadeiro indica que os espaços "
"em branco devem ser mantidos como strings em branco. O valor falso padrão "
"indica que os valores em branco devem ser ignorados e tratados como se não "
"tivessem sido incluídos."

#: ../../library/urllib.parse.rst:185 ../../library/urllib.parse.rst:230
msgid ""
"The optional argument *strict_parsing* is a flag indicating what to do with "
"parsing errors.  If false (the default), errors are silently ignored.  If "
"true, errors raise a :exc:`ValueError` exception."
msgstr ""
"O argumento opcional *strict_parsing* é um sinalizador que indica o que "
"fazer com os erros de análise. Se falsO (o padrão), os erros são ignorados "
"silenciosamente. Se verdadeiro, os erros levantam uma exceção :exc:"
"`ValueError`."

#: ../../library/urllib.parse.rst:189 ../../library/urllib.parse.rst:234
msgid ""
"The optional *encoding* and *errors* parameters specify how to decode "
"percent-encoded sequences into Unicode characters, as accepted by the :meth:"
"`bytes.decode` method."
msgstr ""
"Os parâmetros opcionais *encoding* e *errors* especificam como decodificar "
"sequências codificadas em porcentagem em caracteres Unicode, conforme aceito "
"pelo método :meth:`bytes.decode`."

#: ../../library/urllib.parse.rst:193 ../../library/urllib.parse.rst:238
msgid ""
"The optional argument *max_num_fields* is the maximum number of fields to "
"read. If set, then throws a :exc:`ValueError` if there are more than "
"*max_num_fields* fields read."
msgstr ""
"O argumento opcional *max_num_fields* é o número máximo de campos a serem "
"lidos. Se definido, então levanta um :exc:`ValueError` se houver mais de "
"*max_num_fields* campos lidos."

#: ../../library/urllib.parse.rst:197 ../../library/urllib.parse.rst:242
msgid ""
"The optional argument *separator* is the symbol to use for separating the "
"query arguments. It defaults to ``&``."
msgstr ""
"O argumento opcional *separador* é o símbolo a ser usado para separar os "
"argumentos da consulta. O padrão é ``&``."

#: ../../library/urllib.parse.rst:200
msgid ""
"Use the :func:`urllib.parse.urlencode` function (with the ``doseq`` "
"parameter set to ``True``) to convert such dictionaries into query strings."
msgstr ""
"Use a função :func:`urllib.parse.urlencode` (com o parâmetro ``doseq`` "
"definido como ``True``) para converter esses dicionários em strings de "
"consulta."

#: ../../library/urllib.parse.rst:205 ../../library/urllib.parse.rst:248
msgid "Add *encoding* and *errors* parameters."
msgstr "Adicionado os parâmetros *encoding* e *errors*."

#: ../../library/urllib.parse.rst:208 ../../library/urllib.parse.rst:251
msgid "Added *max_num_fields* parameter."
msgstr "Adicionado o parâmetro *max_num_fields*."

#: ../../library/urllib.parse.rst:211 ../../library/urllib.parse.rst:254
msgid ""
"Added *separator* parameter with the default value of ``&``. Python versions "
"earlier than Python 3.8.8 allowed using both ``;`` and ``&`` as query "
"parameter separator. This has been changed to allow only a single separator "
"key, with ``&`` as the default separator."
msgstr ""

#: ../../library/urllib.parse.rst:220
msgid ""
"Parse a query string given as a string argument (data of type :mimetype:"
"`application/x-www-form-urlencoded`).  Data are returned as a list of name, "
"value pairs."
msgstr ""
"Analisa uma string de consulta fornecida como um argumento de string (dados "
"do tipo :mimetype:`application/x-www-form-urlencoded`). Os dados são "
"retornados como uma lista de pares de nome e valor."

#: ../../library/urllib.parse.rst:245
msgid ""
"Use the :func:`urllib.parse.urlencode` function to convert such lists of "
"pairs into query strings."
msgstr ""
"Use a função :func:`urllib.parse.urlencode` para converter essas listas "
"pares de strings de consulta."

#: ../../library/urllib.parse.rst:263
msgid ""
"Construct a URL from a tuple as returned by ``urlparse()``. The *parts* "
"argument can be any six-item iterable. This may result in a slightly "
"different, but equivalent URL, if the URL that was parsed originally had "
"unnecessary delimiters (for example, a ``?`` with an empty query; the RFC "
"states that these are equivalent)."
msgstr ""
"Constrói uma URL a partir de uma tupla conforme retornada por "
"``urlparse()``. O argumento *parts* pode ser qualquer iterável de seis "
"itens. Isso pode resultar em uma URL ligeiramente diferente, mas "
"equivalente, se a URL que foi analisada originalmente tiver delimitadores "
"desnecessários (por exemplo, um ``?`` com uma consulta vazia; o RFC afirma "
"que eles são equivalentes)."

#: ../../library/urllib.parse.rst:272
msgid ""
"This is similar to :func:`urlparse`, but does not split the params from the "
"URL. This should generally be used instead of :func:`urlparse` if the more "
"recent URL syntax allowing parameters to be applied to each segment of the "
"*path* portion of the URL (see :rfc:`2396`) is wanted.  A separate function "
"is needed to separate the path segments and parameters.  This function "
"returns a 5-item :term:`named tuple`::"
msgstr ""
"Isto é similar a :func:`urlparse`, mas não divide os parâmetros da URL. Isto "
"deve ser usado geralmente em vez de :func:`urlparse` se a sintaxe de URL "
"mais recente permitindo que parâmetros sejam aplicados a cada segmento da "
"porção *path* da URL (veja :rfc:`2396`) for desejada. Uma função separada é "
"necessária para separar os segmentos de caminho e parâmetros. Esta função "
"retorna uma :term:`tupla nomeada` de 5 itens::"

#: ../../library/urllib.parse.rst:281 ../../library/urllib.parse.rst:394
msgid ""
"The return value is a :term:`named tuple`, its items can be accessed by "
"index or as named attributes:"
msgstr ""
"O valor de retorno é uma :term:`tupla nomeada`, seus itens podem ser "
"acessados ​​por índice ou como atributos nomeados:"

#: ../../library/urllib.parse.rst:319
msgid ""
"Following some of the `WHATWG spec`_ that updates RFC 3986, leading C0 "
"control and space characters are stripped from the URL. ``\\n``, ``\\r`` and "
"tab ``\\t`` characters are removed from the URL at any position."
msgstr ""
"Seguindo algumas das `especificações WHATWG`_ que atualizam o RFC 3986, os "
"caracteres de controle C0 e espaço iniciais são removidos da URL. Os "
"caracteres ``\\n``, ``\\r`` e tab ``\\t`` são removidos da URL em qualquer "
"posição."

#: ../../library/urllib.parse.rst:325
msgid ""
":func:`urlsplit` does not perform validation.  See :ref:`URL parsing "
"security <url-parsing-security>` for details."
msgstr ""
":func:`urlsplit` não executa validação. Veja :ref:`Segurança ao analisar "
"URLs <url-parsing-security>` para detalhes."

#: ../../library/urllib.parse.rst:336
msgid "ASCII newline and tab characters are stripped from the URL."
msgstr "Caracteres de nova linha e tabulação ASCII são removidos do URL."

#: ../../library/urllib.parse.rst:339
msgid ""
"Leading WHATWG C0 control and space characters are stripped from the URL."
msgstr ""
"Os caracteres iniciais de espaço e de controle WHATWG C0 são removidos do "
"URL."

#: ../../library/urllib.parse.rst:346
msgid ""
"Combine the elements of a tuple as returned by :func:`urlsplit` into a "
"complete URL as a string. The *parts* argument can be any five-item "
"iterable. This may result in a slightly different, but equivalent URL, if "
"the URL that was parsed originally had unnecessary delimiters (for example, "
"a ? with an empty query; the RFC states that these are equivalent)."
msgstr ""
"Combina os elementos de uma tupla conforme retornado por :func:`urlsplit` em "
"uma URL completa como uma string. O argumento *parts* pode ser qualquer "
"iterável de cinco itens. Isso pode resultar em uma URL ligeiramente "
"diferente, mas equivalente, se a URL que foi analisada originalmente tiver "
"delimitadores desnecessários (por exemplo, um ? com uma consulta vazia; o "
"RFC afirma que eles são equivalentes)."

#: ../../library/urllib.parse.rst:355
msgid ""
"Construct a full (\"absolute\") URL by combining a \"base URL\" (*base*) "
"with another URL (*url*).  Informally, this uses components of the base URL, "
"in particular the addressing scheme, the network location and (part of) the "
"path, to provide missing components in the relative URL.  For example:"
msgstr ""
"Constrói uma URL completa (\"absoluta\") combinando uma \"URL base\" "
"(*base*) com outra URL (*url*). Informalmente, isso usa componentes da URL "
"base, em particular o esquema de endereçamento, o local da rede e (parte do) "
"caminho, para fornecer componentes ausentes na URL relativa. Por exemplo:"

#: ../../library/urllib.parse.rst:364
msgid ""
"The *allow_fragments* argument has the same meaning and default as for :func:"
"`urlparse`."
msgstr ""
"O argumento *allow_fragments* tem o mesmo significado e padrão que :func:"
"`urlparse`."

#: ../../library/urllib.parse.rst:369
msgid ""
"If *url* is an absolute URL (that is, starting with ``//`` or ``scheme://"
"``), the *url*'s host name and/or scheme will be present in the result.  For "
"example:"
msgstr ""

#: ../../library/urllib.parse.rst:378
msgid ""
"If you do not want that behavior, preprocess the *url* with :func:`urlsplit` "
"and :func:`urlunsplit`, removing possible *scheme* and *netloc* parts."
msgstr ""
"Se você não quiser esse comportamento, pré-processe a *url* com :func:"
"`urlsplit` e :func:`urlunsplit`, removendo possíveis partes *scheme* e "
"*netloc*."

#: ../../library/urllib.parse.rst:384
msgid "Behaviour updated to match the semantics defined in :rfc:`3986`."
msgstr ""

#: ../../library/urllib.parse.rst:389
msgid ""
"If *url* contains a fragment identifier, return a modified version of *url* "
"with no fragment identifier, and the fragment identifier as a separate "
"string.  If there is no fragment identifier in *url*, return *url* "
"unmodified and an empty string."
msgstr ""
"Se *url* contiver um identificador de fragmento, retorna uma versão "
"modificada de *url* sem identificador de fragmento, e o identificador de "
"fragmento como uma string separada. Se não houver identificador de fragmento "
"em *url*, retorna *url* não modificado e uma string vazia."

#: ../../library/urllib.parse.rst:400
msgid ":attr:`url`"
msgstr ":attr:`url`"

#: ../../library/urllib.parse.rst:400
msgid "URL with no fragment"
msgstr "URL com nenhum fragmento"

#: ../../library/urllib.parse.rst:405
msgid ""
"See section :ref:`urlparse-result-object` for more information on the result "
"object."
msgstr ""
"Veja a seção :ref:`urlparse-result-object` para obter mais informações sobre "
"o objeto de resultado."

#: ../../library/urllib.parse.rst:408
msgid "Result is a structured object rather than a simple 2-tuple."
msgstr ""
"O resultado é um objeto estruturado em vez de uma simples tupla de 2 "
"elementos."

#: ../../library/urllib.parse.rst:413
msgid ""
"Extract the url from a wrapped URL (that is, a string formatted as ``<URL:"
"scheme://host/path>``, ``<scheme://host/path>``, ``URL:scheme://host/path`` "
"or ``scheme://host/path``). If *url* is not a wrapped URL, it is returned "
"without changes."
msgstr ""
"Extrai a URL de uma URL encapsulada (ou seja, uma string formatada como "
"``<URL:esquema://host/caminho>``, ``<esquema://host/caminho>``, ``URL:"
"esquema://host/caminho`` ou ``esquema://host/caminho``). Se *url* não for "
"uma URL encapsulada, ela será retornada sem alterações."

#: ../../library/urllib.parse.rst:421
msgid "URL parsing security"
msgstr "Segurança ao analisar URLs"

#: ../../library/urllib.parse.rst:423
msgid ""
"The :func:`urlsplit` and :func:`urlparse` APIs do not perform **validation** "
"of inputs.  They may not raise errors on inputs that other applications "
"consider invalid.  They may also succeed on some inputs that might not be "
"considered URLs elsewhere.  Their purpose is for practical functionality "
"rather than purity."
msgstr ""
"As APIs :func:`urlsplit` e :func:`urlparse` não realizam **validação** de "
"entradas. Elas podem não levantar erros em entradas que outras aplicações "
"consideram inválidas. Elas também podem ter sucesso em algumas entradas que "
"podem não ser consideradas URLs em outros lugares. Seu propósito é para "
"funcionalidade prática em vez de pureza."

#: ../../library/urllib.parse.rst:429
msgid ""
"Instead of raising an exception on unusual input, they may instead return "
"some component parts as empty strings. Or components may contain more than "
"perhaps they should."
msgstr ""
"Em vez de levantar uma exceção em uma entrada incomum, eles podem retornar "
"algumas partes do componente como strings vazias. Ou os componentes podem "
"conter mais do que talvez devessem."

#: ../../library/urllib.parse.rst:433
msgid ""
"We recommend that users of these APIs where the values may be used anywhere "
"with security implications code defensively. Do some verification within "
"your code before trusting a returned component part.  Does that ``scheme`` "
"make sense?  Is that a sensible ``path``?  Is there anything strange about "
"that ``hostname``?  etc."
msgstr ""
"Recomendamos que os usuários dessas APIs, onde os valores podem ser usados ​​"
"em qualquer lugar com implicações de segurança, codifiquem defensivamente. "
"Faça alguma verificação dentro do seu código antes de confiar em uma parte "
"do componente retornada. Esse ``esquema`` faz sentido? Esse ``caminho`` "
"sensato? Há algo estranho sobre esse ``hostname``? etc."

#: ../../library/urllib.parse.rst:442
msgid "Parsing ASCII Encoded Bytes"
msgstr "Analisando bytes codificados em ASCII"

#: ../../library/urllib.parse.rst:444
msgid ""
"The URL parsing functions were originally designed to operate on character "
"strings only. In practice, it is useful to be able to manipulate properly "
"quoted and encoded URLs as sequences of ASCII bytes. Accordingly, the URL "
"parsing functions in this module all operate on :class:`bytes` and :class:"
"`bytearray` objects in addition to :class:`str` objects."
msgstr ""
"As funções de análise de URL foram originalmente projetadas para operar "
"somente em strings de caracteres. Na prática, é útil ser capaz de manipular "
"URLs corretamente citadas e codificadas como sequências de bytes ASCII. "
"Consequentemente, todas as funções de análise de URL neste módulo operam em "
"objetos :class:`bytes` e :class:`bytearray` além de objetos :class:`str`."

#: ../../library/urllib.parse.rst:450
msgid ""
"If :class:`str` data is passed in, the result will also contain only :class:"
"`str` data. If :class:`bytes` or :class:`bytearray` data is passed in, the "
"result will contain only :class:`bytes` data."
msgstr ""
"Se dados :class:`str` forem passados, o resultado também conterá apenas "
"dados :class:`str`. Se dados :class:`bytes` ou :class:`bytearray` forem "
"passados, o resultado conterá apenas dados :class:`bytes`."

#: ../../library/urllib.parse.rst:454
msgid ""
"Attempting to mix :class:`str` data with :class:`bytes` or :class:"
"`bytearray` in a single function call will result in a :exc:`TypeError` "
"being raised, while attempting to pass in non-ASCII byte values will "
"trigger :exc:`UnicodeDecodeError`."
msgstr ""
"Tentar misturar dados :class:`str` com :class:`bytes` ou :class:`bytearray` "
"em uma única chamada de função resultará em uma :exc:`TypeError` sendo "
"levantada, enquanto tentar passar valores de bytes não-ASCII acionará :exc:"
"`UnicodeDecodeError`."

#: ../../library/urllib.parse.rst:459
msgid ""
"To support easier conversion of result objects between :class:`str` and :"
"class:`bytes`, all return values from URL parsing functions provide either "
"an :meth:`encode` method (when the result contains :class:`str` data) or a :"
"meth:`decode` method (when the result contains :class:`bytes` data). The "
"signatures of these methods match those of the corresponding :class:`str` "
"and :class:`bytes` methods (except that the default encoding is ``'ascii'`` "
"rather than ``'utf-8'``). Each produces a value of a corresponding type that "
"contains either :class:`bytes` data (for :meth:`encode` methods) or :class:"
"`str` data (for :meth:`decode` methods)."
msgstr ""
"Para prover uma conversão mais fácil de objetos de resultado entre :class:"
"`str` e :class:`bytes`, todos os valores de retorno das funções de análise "
"de URL fornecem um método :meth:`encode` (quando o resultado contém dados :"
"class:`str`) ou um método :meth:`decode` (quando o resultado contém dados :"
"class:`bytes`). As assinaturas desses métodos correspondem às dos métodos :"
"class:`str` e :class:`bytes` correspondentes (exceto que a codificação "
"padrão é ``'ascii'`` em vez de ``'utf-8'``). Cada um produz um valor de um "
"tipo correspondente que contém dados :class:`bytes` (para métodos :meth:"
"`encode`) ou dados :class:`str` (para métodos :meth:`decode`)."

#: ../../library/urllib.parse.rst:470
msgid ""
"Applications that need to operate on potentially improperly quoted URLs that "
"may contain non-ASCII data will need to do their own decoding from bytes to "
"characters before invoking the URL parsing methods."
msgstr ""
"Os aplicações que precisam operar em URLs possivelmente envolta em aspas de "
"forma incorreta, e que podem conter dados não ASCII, precisarão fazer sua "
"própria decodificação de bytes para caracteres antes de invocar os métodos "
"de análise de URL."

#: ../../library/urllib.parse.rst:474
msgid ""
"The behaviour described in this section applies only to the URL parsing "
"functions. The URL quoting functions use their own rules when producing or "
"consuming byte sequences as detailed in the documentation of the individual "
"URL quoting functions."
msgstr ""
"O comportamento descrito nesta seção se aplica somente às funções de análise "
"de URL. As funções de aplicação de aspas em URL usam suas próprias regras ao "
"produzir ou consumir sequências de bytes, conforme detalhado na documentação "
"das funções de citação de URL individuais."

#: ../../library/urllib.parse.rst:479
msgid "URL parsing functions now accept ASCII encoded byte sequences"
msgstr ""
"As funções de análise de URL agora aceitam sequências de bytes codificadas "
"em ASCII"

#: ../../library/urllib.parse.rst:486
msgid "Structured Parse Results"
msgstr ""

#: ../../library/urllib.parse.rst:488
msgid ""
"The result objects from the :func:`urlparse`, :func:`urlsplit`  and :func:"
"`urldefrag` functions are subclasses of the :class:`tuple` type. These "
"subclasses add the attributes listed in the documentation for those "
"functions, the encoding and decoding support described in the previous "
"section, as well as an additional method:"
msgstr ""

#: ../../library/urllib.parse.rst:496
msgid ""
"Return the re-combined version of the original URL as a string. This may "
"differ from the original URL in that the scheme may be normalized to lower "
"case and empty components may be dropped. Specifically, empty parameters, "
"queries, and fragment identifiers will be removed."
msgstr ""

#: ../../library/urllib.parse.rst:501
msgid ""
"For :func:`urldefrag` results, only empty fragment identifiers will be "
"removed. For :func:`urlsplit` and :func:`urlparse` results, all noted "
"changes will be made to the URL returned by this method."
msgstr ""

#: ../../library/urllib.parse.rst:505
msgid ""
"The result of this method remains unchanged if passed back through the "
"original parsing function:"
msgstr ""

#: ../../library/urllib.parse.rst:518
msgid ""
"The following classes provide the implementations of the structured parse "
"results when operating on :class:`str` objects:"
msgstr ""

#: ../../library/urllib.parse.rst:523
msgid ""
"Concrete class for :func:`urldefrag` results containing :class:`str` data. "
"The :meth:`encode` method returns a :class:`DefragResultBytes` instance."
msgstr ""

#: ../../library/urllib.parse.rst:531
msgid ""
"Concrete class for :func:`urlparse` results containing :class:`str` data. "
"The :meth:`encode` method returns a :class:`ParseResultBytes` instance."
msgstr ""

#: ../../library/urllib.parse.rst:537
msgid ""
"Concrete class for :func:`urlsplit` results containing :class:`str` data. "
"The :meth:`encode` method returns a :class:`SplitResultBytes` instance."
msgstr ""

#: ../../library/urllib.parse.rst:542
msgid ""
"The following classes provide the implementations of the parse results when "
"operating on :class:`bytes` or :class:`bytearray` objects:"
msgstr ""

#: ../../library/urllib.parse.rst:547
msgid ""
"Concrete class for :func:`urldefrag` results containing :class:`bytes` data. "
"The :meth:`decode` method returns a :class:`DefragResult` instance."
msgstr ""

#: ../../library/urllib.parse.rst:555
msgid ""
"Concrete class for :func:`urlparse` results containing :class:`bytes` data. "
"The :meth:`decode` method returns a :class:`ParseResult` instance."
msgstr ""

#: ../../library/urllib.parse.rst:563
msgid ""
"Concrete class for :func:`urlsplit` results containing :class:`bytes` data. "
"The :meth:`decode` method returns a :class:`SplitResult` instance."
msgstr ""

#: ../../library/urllib.parse.rst:571
msgid "URL Quoting"
msgstr ""

#: ../../library/urllib.parse.rst:573
msgid ""
"The URL quoting functions focus on taking program data and making it safe "
"for use as URL components by quoting special characters and appropriately "
"encoding non-ASCII text. They also support reversing these operations to "
"recreate the original data from the contents of a URL component if that task "
"isn't already covered by the URL parsing functions above."
msgstr ""

#: ../../library/urllib.parse.rst:581
msgid ""
"Replace special characters in *string* using the ``%xx`` escape. Letters, "
"digits, and the characters ``'_.-~'`` are never quoted. By default, this "
"function is intended for quoting the path section of URL. The optional "
"*safe* parameter specifies additional ASCII characters that should not be "
"quoted --- its default value is ``'/'``."
msgstr ""

#: ../../library/urllib.parse.rst:587 ../../library/urllib.parse.rst:657
msgid "*string* may be either a :class:`str` or a :class:`bytes`."
msgstr ""

#: ../../library/urllib.parse.rst:589
msgid ""
"Moved from :rfc:`2396` to :rfc:`3986` for quoting URL strings. \"~\" is now "
"included in the set of unreserved characters."
msgstr ""

#: ../../library/urllib.parse.rst:593
msgid ""
"The optional *encoding* and *errors* parameters specify how to deal with non-"
"ASCII characters, as accepted by the :meth:`str.encode` method. *encoding* "
"defaults to ``'utf-8'``. *errors* defaults to ``'strict'``, meaning "
"unsupported characters raise a :class:`UnicodeEncodeError`. *encoding* and "
"*errors* must not be supplied if *string* is a :class:`bytes`, or a :class:"
"`TypeError` is raised."
msgstr ""

#: ../../library/urllib.parse.rst:601
msgid ""
"Note that ``quote(string, safe, encoding, errors)`` is equivalent to "
"``quote_from_bytes(string.encode(encoding, errors), safe)``."
msgstr ""

#: ../../library/urllib.parse.rst:604
msgid "Example: ``quote('/El Niño/')`` yields ``'/El%20Ni%C3%B1o/'``."
msgstr ""

#: ../../library/urllib.parse.rst:609
msgid ""
"Like :func:`quote`, but also replace spaces by plus signs, as required for "
"quoting HTML form values when building up a query string to go into a URL. "
"Plus signs in the original string are escaped unless they are included in "
"*safe*.  It also does not have *safe* default to ``'/'``."
msgstr ""

#: ../../library/urllib.parse.rst:614
msgid "Example: ``quote_plus('/El Niño/')`` yields ``'%2FEl+Ni%C3%B1o%2F'``."
msgstr ""

#: ../../library/urllib.parse.rst:619
msgid ""
"Like :func:`quote`, but accepts a :class:`bytes` object rather than a :class:"
"`str`, and does not perform string-to-bytes encoding."
msgstr ""

#: ../../library/urllib.parse.rst:622
msgid "Example: ``quote_from_bytes(b'a&\\xef')`` yields ``'a%26%EF'``."
msgstr ""

#: ../../library/urllib.parse.rst:628
msgid ""
"Replace ``%xx`` escapes by their single-character equivalent. The optional "
"*encoding* and *errors* parameters specify how to decode percent-encoded "
"sequences into Unicode characters, as accepted by the :meth:`bytes.decode` "
"method."
msgstr ""

#: ../../library/urllib.parse.rst:633 ../../library/urllib.parse.rst:647
msgid "*string* must be a :class:`str`."
msgstr ""

#: ../../library/urllib.parse.rst:635
msgid ""
"*encoding* defaults to ``'utf-8'``. *errors* defaults to ``'replace'``, "
"meaning invalid sequences are replaced by a placeholder character."
msgstr ""

#: ../../library/urllib.parse.rst:639
msgid "Example: ``unquote('/El%20Ni%C3%B1o/')`` yields ``'/El Niño/'``."
msgstr ""

#: ../../library/urllib.parse.rst:644
msgid ""
"Like :func:`unquote`, but also replace plus signs by spaces, as required for "
"unquoting HTML form values."
msgstr ""

#: ../../library/urllib.parse.rst:649
msgid "Example: ``unquote_plus('/El+Ni%C3%B1o/')`` yields ``'/El Niño/'``."
msgstr ""

#: ../../library/urllib.parse.rst:654
msgid ""
"Replace ``%xx`` escapes by their single-octet equivalent, and return a :"
"class:`bytes` object."
msgstr ""

#: ../../library/urllib.parse.rst:659
msgid ""
"If it is a :class:`str`, unescaped non-ASCII characters in *string* are "
"encoded into UTF-8 bytes."
msgstr ""

#: ../../library/urllib.parse.rst:662
msgid "Example: ``unquote_to_bytes('a%26%EF')`` yields ``b'a&\\xef'``."
msgstr ""

#: ../../library/urllib.parse.rst:668
msgid ""
"Convert a mapping object or a sequence of two-element tuples, which may "
"contain :class:`str` or :class:`bytes` objects, to a percent-encoded ASCII "
"text string.  If the resultant string is to be used as a *data* for POST "
"operation with the :func:`~urllib.request.urlopen` function, then it should "
"be encoded to bytes, otherwise it would result in a :exc:`TypeError`."
msgstr ""

#: ../../library/urllib.parse.rst:675
msgid ""
"The resulting string is a series of ``key=value`` pairs separated by ``'&'`` "
"characters, where both *key* and *value* are quoted using the *quote_via* "
"function.  By default, :func:`quote_plus` is used to quote the values, which "
"means spaces are quoted as a ``'+'`` character and '/' characters are "
"encoded as ``%2F``, which follows the standard for GET requests "
"(``application/x-www-form-urlencoded``).  An alternate function that can be "
"passed as *quote_via* is :func:`quote`, which will encode spaces as ``%20`` "
"and not encode '/' characters.  For maximum control of what is quoted, use "
"``quote`` and specify a value for *safe*."
msgstr ""

#: ../../library/urllib.parse.rst:685
msgid ""
"When a sequence of two-element tuples is used as the *query* argument, the "
"first element of each tuple is a key and the second is a value. The value "
"element in itself can be a sequence and in that case, if the optional "
"parameter *doseq* is evaluates to ``True``, individual ``key=value`` pairs "
"separated by ``'&'`` are generated for each element of the value sequence "
"for the key.  The order of parameters in the encoded string will match the "
"order of parameter tuples in the sequence."
msgstr ""

#: ../../library/urllib.parse.rst:693
msgid ""
"The *safe*, *encoding*, and *errors* parameters are passed down to "
"*quote_via* (the *encoding* and *errors* parameters are only passed when a "
"query element is a :class:`str`)."
msgstr ""

#: ../../library/urllib.parse.rst:697
msgid ""
"To reverse this encoding process, :func:`parse_qs` and :func:`parse_qsl` are "
"provided in this module to parse query strings into Python data structures."
msgstr ""

#: ../../library/urllib.parse.rst:700
msgid ""
"Refer to :ref:`urllib examples <urllib-examples>` to find out how urlencode "
"method can be used for generating query string for a URL or data for POST."
msgstr ""

#: ../../library/urllib.parse.rst:703
msgid "Query parameter supports bytes and string objects."
msgstr ""

#: ../../library/urllib.parse.rst:706
msgid "*quote_via* parameter."
msgstr ""

#: ../../library/urllib.parse.rst:714
msgid "`WHATWG`_ -  URL Living standard"
msgstr ""

#: ../../library/urllib.parse.rst:713
msgid ""
"Working Group for the URL Standard that defines URLs, domains, IP addresses, "
"the application/x-www-form-urlencoded format, and their API."
msgstr ""

#: ../../library/urllib.parse.rst:720
msgid ":rfc:`3986` - Uniform Resource Identifiers"
msgstr ""

#: ../../library/urllib.parse.rst:717
msgid ""
"This is the current standard (STD66). Any changes to urllib.parse module "
"should conform to this. Certain deviations could be observed, which are "
"mostly for backward compatibility purposes and for certain de-facto parsing "
"requirements as commonly observed in major browsers."
msgstr ""

#: ../../library/urllib.parse.rst:723
msgid ":rfc:`2732` - Format for Literal IPv6 Addresses in URL's."
msgstr ""

#: ../../library/urllib.parse.rst:723
msgid "This specifies the parsing requirements of IPv6 URLs."
msgstr ""

#: ../../library/urllib.parse.rst:727
msgid ":rfc:`2396` - Uniform Resource Identifiers (URI): Generic Syntax"
msgstr ""

#: ../../library/urllib.parse.rst:726
msgid ""
"Document describing the generic syntactic requirements for both Uniform "
"Resource Names (URNs) and Uniform Resource Locators (URLs)."
msgstr ""

#: ../../library/urllib.parse.rst:730
msgid ":rfc:`2368` - The mailto URL scheme."
msgstr ""

#: ../../library/urllib.parse.rst:730
msgid "Parsing requirements for mailto URL schemes."
msgstr ""

#: ../../library/urllib.parse.rst:735
msgid ":rfc:`1808` - Relative Uniform Resource Locators"
msgstr ""

#: ../../library/urllib.parse.rst:733
msgid ""
"This Request For Comments includes the rules for joining an absolute and a "
"relative URL, including a fair number of \"Abnormal Examples\" which govern "
"the treatment of border cases."
msgstr ""

#: ../../library/urllib.parse.rst:737
msgid ":rfc:`1738` - Uniform Resource Locators (URL)"
msgstr ""

#: ../../library/urllib.parse.rst:738
msgid "This specifies the formal syntax and semantics of absolute URLs."
msgstr ""
