# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-04 14:20+0000\n"
"PO-Revision-Date: 2025-07-18 18:48+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/compression.zstd.rst:2
msgid ""
":mod:`!compression.zstd` --- Compression compatible with the Zstandard format"
msgstr ""
":mod:`!compression.zstd` --- Compactação compatível com o formato Zstandard"

#: ../../library/compression.zstd.rst:10
msgid "**Source code:** :source:`Lib/compression/zstd/__init__.py`"
msgstr "**Código-fonte:** :source:`Lib/compression/zstd/__init__.py`"

#: ../../library/compression.zstd.rst:14
msgid ""
"This module provides classes and functions for compressing and decompressing "
"data using the Zstandard (or *zstd*) compression algorithm. The `zstd manual "
"<https://facebook.github.io/zstd/doc/api_manual_latest.html>`__ describes "
"Zstandard as \"a fast lossless compression algorithm, targeting real-time "
"compression scenarios at zlib-level and better compression ratios.\" Also "
"included is a file interface that supports reading and writing the contents "
"of ``.zst`` files created by the :program:`zstd` utility, as well as raw "
"zstd compressed streams."
msgstr ""
"Este módulo fornece classes e funções para compactar e descompactar dados "
"usando o algoritmo de compactação Zstandard (ou *zstd*). O `manual do zstd "
"<https://facebook.github.io/zstd/doc/api_manual_latest.html>`__ descreve o "
"Zstandard como \"um algoritmo de compactação rápido e sem perdas, voltado "
"para cenários de compactação em tempo real no nível zlib e melhores taxas de "
"compactação\". Também está incluída uma interface de arquivo que oferece "
"suporte à leitura e à gravação do conteúdo de arquivos ``.zst`` criados pelo "
"utilitário :program:`zstd`, bem como fluxos compactados zstd brutos."

#: ../../library/compression.zstd.rst:23
msgid "The :mod:`!compression.zstd` module contains:"
msgstr "O módulo :mod:`!compression.zstd` contém:"

#: ../../library/compression.zstd.rst:25
msgid ""
"The :func:`.open` function and :class:`ZstdFile` class for reading and "
"writing compressed files."
msgstr ""
"A função :func:`.open` e a classe :class:`ZstdFile` para leitura e escrita "
"de arquivos compactados."

#: ../../library/compression.zstd.rst:27
msgid ""
"The :class:`ZstdCompressor` and :class:`ZstdDecompressor` classes for "
"incremental (de)compression."
msgstr ""
"As classes :class:`ZstdCompressor` e :class:`ZstdDecompressor` para "
"(des)compactação incremental."

#: ../../library/compression.zstd.rst:29
msgid ""
"The :func:`compress` and :func:`decompress` functions for one-shot "
"(de)compression."
msgstr ""
"As funções :func:`compress` e :func:`decompress` para (des)compressão de uma "
"só vez."

#: ../../library/compression.zstd.rst:31
msgid ""
"The :func:`train_dict` and :func:`finalize_dict` functions and the :class:"
"`ZstdDict` class to train and manage Zstandard dictionaries."
msgstr ""
"As funções :func:`train_dict` e :func:`finalize_dict` e a classe :class:"
"`ZstdDict` para treinar e gerenciar dicionários Zstandard."

#: ../../library/compression.zstd.rst:33
msgid ""
"The :class:`CompressionParameter`, :class:`DecompressionParameter`, and :"
"class:`Strategy` classes for setting advanced (de)compression parameters."
msgstr ""
"As classes :class:`CompressionParameter`, :class:`DecompressionParameter` e :"
"class:`Strategy` para definir parâmetros avançados de (des)compactação."

#: ../../library/compression.zstd.rst:38
msgid "Exceptions"
msgstr "Exceções"

#: ../../library/compression.zstd.rst:42
msgid ""
"This exception is raised when an error occurs during compression or "
"decompression, or while initializing the (de)compressor state."
msgstr ""
"Essa exceção é levantada quando ocorre um erro durante a compactação ou "
"descompactação ou durante a inicialização do estado (des)compactador."

#: ../../library/compression.zstd.rst:47
msgid "Reading and writing compressed files"
msgstr "Lendo e escrevendo arquivos comprimidos"

#: ../../library/compression.zstd.rst:52
msgid ""
"Open a Zstandard-compressed file in binary or text mode, returning a :term:"
"`file object`."
msgstr ""
"Abre um arquivo compactado com Zstandard em modo binário ou texto, "
"retornando :term:`objeto arquivo`."

#: ../../library/compression.zstd.rst:55
msgid ""
"The *file* argument can be either a file name (given as a :class:`str`, :"
"class:`bytes` or :term:`path-like <path-like object>` object), in which case "
"the named file is opened, or it can be an existing file object to read from "
"or write to."
msgstr ""
"O argumento *file* pode ser um nome de arquivo (dado como um objeto :class:"
"`str`, :class:`bytes` ou :term:`caminho ou similar <path-like object>`), "
"neste caso o arquivo nomeado é aberto , ou pode ser um objeto arquivo "
"existente para leitura ou escrita."

#: ../../library/compression.zstd.rst:60
msgid ""
"The mode argument can be either ``'rb'`` for reading (default), ``'wb'`` for "
"overwriting, ``'ab'`` for appending, or ``'xb'`` for exclusive creation. "
"These can equivalently be given as ``'r'``, ``'w'``, ``'a'``, and ``'x'`` "
"respectively. You may also open in text mode with ``'rt'``, ``'wt'``, "
"``'at'``, and ``'xt'`` respectively."
msgstr ""
"O argumento mode pode ser ``'rb'`` para leitura (padrão), ``'wb'`` para "
"sobrescrever, ``'ab'`` para anexar ou ``'xb'`` para criação exclusiva. Estes "
"podem ser fornecidos como ``'r'``, ``'w'``, ``'a'`` e ``'x'``, "
"respectivamente. Você também pode abrir em modo texto com ``'rt'``, "
"``'wt'``, ``'at'`` e ``'xt'``, respectivamente."

#: ../../library/compression.zstd.rst:66 ../../library/compression.zstd.rst:110
msgid ""
"When reading, the *options* argument can be a dictionary providing advanced "
"decompression parameters; see :class:`DecompressionParameter` for detailed "
"information about supported parameters. The *zstd_dict* argument is a :class:"
"`ZstdDict` instance to be used during decompression. When reading, if the "
"*level* argument is not None, a :exc:`!TypeError` will be raised."
msgstr ""
"Durante a leitura, o argumento *options* pode ser um dicionário que fornece "
"parâmetros avançados de descompactação; consulte :class:"
"`DecompressionParameter` para obter informações detalhadas sobre os "
"parâmetros suportados. O argumento *zstd_dict* é uma instância de :class:"
"`ZstdDict` a ser usada durante a descompactação. Durante a leitura, se o "
"argumento *level* não for None, uma exceção :exc:`!TypeError` será levantada."

#: ../../library/compression.zstd.rst:73
msgid ""
"When writing, the *options* argument can be a dictionary providing advanced "
"decompression parameters; see :class:`CompressionParameter` for detailed "
"information about supported parameters. The *level* argument is the "
"compression level to use when writing compressed data. Only one of *level* "
"or *options* may be non-None. The *zstd_dict* argument is a :class:"
"`ZstdDict` instance to be used during compression."
msgstr ""
"Ao escrever, o argumento *options* pode ser um dicionário que fornece "
"parâmetros avançados de descompactação; consulte :class:"
"`CompressionParameter` para obter informações detalhadas sobre os parâmetros "
"suportados. O argumento *level* é o nível de compactação a ser usado ao "
"escrever dados compactados. Apenas *level* ou *options* pode ser diferente "
"de None. O argumento *zstd_dict* é uma instância de :class:`ZstdDict` a ser "
"usada durante a compactação."

#: ../../library/compression.zstd.rst:81
msgid ""
"In binary mode, this function is equivalent to the :class:`ZstdFile` "
"constructor: ``ZstdFile(file, mode, ...)``. In this case, the *encoding*, "
"*errors*, and *newline* parameters must not be provided."
msgstr ""
"Em modo binário, esta função equivale ao construtor :class:`ZstdFile`: "
"``ZstdFile(file, mode, ...)``. Nesse caso, os parâmetros *encoding*, "
"*errors* e *newline* não devem ser fornecidos."

#: ../../library/compression.zstd.rst:85
msgid ""
"In text mode, a :class:`ZstdFile` object is created, and wrapped in an :"
"class:`io.TextIOWrapper` instance with the specified encoding, error "
"handling behavior, and line endings."
msgstr ""
"Em modo texto, um objeto :class:`ZstdFile` é criado e encapsulado em uma "
"instância :class:`io.TextIOWrapper` com a codificação especificada, "
"comportamento de tratamento de erros e fins de linha."

#: ../../library/compression.zstd.rst:93
msgid "Open a Zstandard-compressed file in binary mode."
msgstr "Abre um arquivo compactado com Zstandard no modo binário."

#: ../../library/compression.zstd.rst:95
msgid ""
"A :class:`ZstdFile` can wrap an already-open :term:`file object`, or operate "
"directly on a named file. The *file* argument specifies either the file "
"object to wrap, or the name of the file to open (as a :class:`str`, :class:"
"`bytes` or :term:`path-like <path-like object>` object). If wrapping an "
"existing file object, the wrapped file will not be closed when the :class:"
"`ZstdFile` is closed."
msgstr ""
"Um :class:`ZstdFile` pode envolver um :term:`objeto arquivo` já aberto, ou "
"operar diretamente em um arquivo nomeado. O argumento *file* especifica o "
"objeto arquivo a ser envolvido ou o nome do arquivo a ser aberto (como um "
"objeto :class:`str`, :class:`bytes` ou :term:`objeto caminho ou similar`). "
"Se estiver envolvendo um objeto arquivo existente, o arquivo envolvido não "
"será fechado quando o :class:`ZstdFile` for fechado."

#: ../../library/compression.zstd.rst:102
msgid ""
"The *mode* argument can be either ``'rb'`` for reading (default), ``'wb'`` "
"for overwriting, ``'xb'`` for exclusive creation, or ``'ab'`` for appending. "
"These can equivalently be given as ``'r'``, ``'w'``, ``'x'`` and ``'a'`` "
"respectively."
msgstr ""
"O argumento *mode* pode ser ``'rb'`` para leitura (padrão), ``'wb'`` para "
"substituição, ``'xb'`` para criação exclusiva ou ``'ab'`` para anexar. Estes "
"podem ser equivalentemente dados como ``'r'``, ``'w'``, ``'x'`` e ``'a'`` "
"respectivamente."

#: ../../library/compression.zstd.rst:107
msgid ""
"If *file* is a file object (rather than an actual file name), a mode of "
"``'w'`` does not truncate the file, and is instead equivalent to ``'a'``."
msgstr ""
"Se *file* for um objeto arquivo (ao invés de um nome de arquivo real), um "
"modo de ``'w'`` não truncará o arquivo e será equivalente a ``'a'``."

#: ../../library/compression.zstd.rst:117
msgid ""
"When writing, the *options* argument can be a dictionary providing advanced "
"decompression parameters; see :class:`CompressionParameter` for detailed "
"information about supported parameters. The *level* argument is the "
"compression level to use when writing compressed data. Only one of *level* "
"or *options* may be passed. The *zstd_dict* argument is a :class:`ZstdDict` "
"instance to be used during compression."
msgstr ""
"Ao escrever, o argumento *options* pode ser um dicionário que fornece "
"parâmetros avançados de descompactação; consulte :class:"
"`CompressionParameter` para obter informações detalhadas sobre os parâmetros "
"suportados. O argumento *level* é o nível de compactação a ser usado ao "
"escrever dados compactados. Apenas *level* ou *options* pode ser passado. O "
"argumento *zstd_dict* é uma instância de :class:`ZstdDict` a ser usada "
"durante a compactação."

#: ../../library/compression.zstd.rst:125
msgid ""
":class:`!ZstdFile` supports all the members specified by :class:`io."
"BufferedIOBase`, except for :meth:`~io.BufferedIOBase.detach` and :meth:`~io."
"IOBase.truncate`. Iteration and the :keyword:`with` statement are supported."
msgstr ""
":class:`!ZstdFile` oferece suporte a todos os membros especificados por :"
"class:`io.BufferedIOBase`, exceto :meth:`~io.BufferedIOBase.detach` e :meth:"
"`~io.IOBase.truncate`. Iteração e a instrução :keyword:`with` são suportadas."

#: ../../library/compression.zstd.rst:130
msgid "The following method and attributes are also provided:"
msgstr "O método e os atributos a seguir também são fornecidos:"

#: ../../library/compression.zstd.rst:134
msgid ""
"Return buffered data without advancing the file position. At least one byte "
"of data will be returned, unless EOF has been reached. The exact number of "
"bytes returned is unspecified (the *size* argument is ignored)."
msgstr ""
"Retorna dados armazenados em buffer sem avançar a posição do arquivo. Pelo "
"menos um byte de dados será retornado, a menos que o EOF tenha sido "
"atingido. O número exato de bytes retornados não é especificado (o argumento "
"*size* é ignorado)."

#: ../../library/compression.zstd.rst:138
msgid ""
"While calling :meth:`peek` does not change the file position of the :class:"
"`ZstdFile`, it may change the position of the underlying file object (for "
"example, if the :class:`ZstdFile` was constructed by passing a file object "
"for *file*)."
msgstr ""
"Enquanto chamar :meth:`peek` não altera a posição do arquivo de :class:"
"`ZstdFile`, pode alterar a posição do objeto arquivo subjacente (por "
"exemplo, se o :class:`ZstdFile` foi construído passando um objeto arquivo "
"para *file*)."

#: ../../library/compression.zstd.rst:145
msgid "``'rb'`` for reading and ``'wb'`` for writing."
msgstr "``'rb'`` para leitura e ``'wb'`` para escrita."

#: ../../library/compression.zstd.rst:149
msgid ""
"The name of the Zstandard file. Equivalent to the :attr:`~io.FileIO.name` "
"attribute of the underlying :term:`file object`."
msgstr ""
"O nome do arquivo Zstandard. Equivalente ao atributo :attr:`~io.FileIO.name` "
"do :term:`objeto arquivo` subjacente."

#: ../../library/compression.zstd.rst:154
msgid "Compressing and decompressing data in memory"
msgstr "Comprimindo e descomprimindo dados na memória"

#: ../../library/compression.zstd.rst:158
msgid ""
"Compress *data* (a :term:`bytes-like object`), returning the compressed data "
"as a :class:`bytes` object."
msgstr ""
"Compacta *data* (um :term:`objeto bytes ou similar`), retornando os dados "
"compactados como um objeto :class:`bytes`."

#: ../../library/compression.zstd.rst:161
#: ../../library/compression.zstd.rst:205
msgid ""
"The *level* argument is an integer controlling the level of compression. "
"*level* is an alternative to setting :attr:`CompressionParameter."
"compression_level` in *options*. Use :meth:`~CompressionParameter.bounds` "
"on :attr:`~CompressionParameter.compression_level` to get the values that "
"can be passed for *level*. If advanced compression options are needed, the "
"*level* argument must be omitted and in the *options* dictionary the :attr:`!"
"CompressionParameter.compression_level` parameter should be set."
msgstr ""
"O argumento *level* é um inteiro que controla o nível de compactação. "
"*level* é uma alternativa à configuração :attr:`CompressionParameter."
"compression_level` em *options*. Use :meth:`~CompressionParameter.bounds` "
"em :attr:`~CompressionParameter.compression_level` para obter os valores que "
"podem ser passados para *level*. Se opções avançadas de compactação forem "
"necessárias, o argumento *level* deve ser omitido e, no dicionário "
"*options*, o parâmetro :attr:`!CompressionParameter.compression_level` deve "
"ser definido."

#: ../../library/compression.zstd.rst:170
#: ../../library/compression.zstd.rst:214
msgid ""
"The *options* argument is a Python dictionary containing advanced "
"compression parameters. The valid keys and values for compression parameters "
"are documented as part of the :class:`CompressionParameter` documentation."
msgstr ""
"O argumento *options* é um dicionário Python que contém parâmetros de "
"compactação avançados. As chaves e valores válidos para parâmetros de "
"compactação estão documentados na documentação :class:`CompressionParameter`."

#: ../../library/compression.zstd.rst:174
msgid ""
"The *zstd_dict* argument is an instance of :class:`ZstdDict` containing "
"trained data to improve compression efficiency. The function :func:"
"`train_dict` can be used to generate a Zstandard dictionary."
msgstr ""
"O argumento *zstd_dict* é uma instância de :class:`ZstdDict` contendo dados "
"treinados para melhorar a eficiência da compactação. A função :func:"
"`train_dict` pode ser usada para gerar um dicionário Zstandard."

#: ../../library/compression.zstd.rst:181
msgid ""
"Decompress *data* (a :term:`bytes-like object`), returning the uncompressed "
"data as a :class:`bytes` object."
msgstr ""
"Descompacta *data* (um :term:`objeto bytes ou similar`), retornando os dados "
"descompactados como um objeto :class:`bytes`."

#: ../../library/compression.zstd.rst:184
#: ../../library/compression.zstd.rst:306
msgid ""
"The *options* argument is a Python dictionary containing advanced "
"decompression parameters. The valid keys and values for compression "
"parameters are documented as part of the :class:`DecompressionParameter` "
"documentation."
msgstr ""
"O argumento *options* é um dicionário Python que contém parâmetros de "
"descompactação avançados. As chaves e valores válidos para parâmetros de "
"compactação estão documentados na documentação :class:"
"`DecompressionParameter`."

#: ../../library/compression.zstd.rst:189
#: ../../library/compression.zstd.rst:311
msgid ""
"The *zstd_dict* argument is an instance of :class:`ZstdDict` containing "
"trained data used during compression. This must be the same Zstandard "
"dictionary used during compression."
msgstr ""
"O argumento *zstd_dict* é uma instância de :class:`ZstdDict` contendo dados "
"treinados usados durante a compactação. Este deve ser o mesmo dicionário "
"Zstandard usado durante a compactação."

#: ../../library/compression.zstd.rst:193
msgid ""
"If *data* is the concatenation of multiple distinct compressed frames, "
"decompress all of these frames, and return the concatenation of the results."
msgstr ""
"Se *data* forem a concatenação de vários quadros comprimidos distintos, "
"descomprime todos esses quadros e retorna a concatenação dos resultados."

#: ../../library/compression.zstd.rst:199
msgid ""
"Create a compressor object, which can be used to compress data incrementally."
msgstr ""
"Cria um objeto compressão, que pode ser usado para comprimir dados de forma "
"incremental."

#: ../../library/compression.zstd.rst:202
msgid ""
"For a more convenient way of compressing a single chunk of data, see the "
"module-level function :func:`compress`."
msgstr ""
"Para uma maneira mais conveniente de compactar um único bloco de dados, "
"consulte a função a nível de módulo :func:`compress`."

#: ../../library/compression.zstd.rst:218
msgid ""
"The *zstd_dict* argument is an optional instance of :class:`ZstdDict` "
"containing trained data to improve compression efficiency. The function :"
"func:`train_dict` can be used to generate a Zstandard dictionary."
msgstr ""
"O argumento *zstd_dict* é uma instância opcional de :class:`ZstdDict` "
"contendo dados treinados para melhorar a eficiência da compactação. A "
"função :func:`train_dict` pode ser usada para gerar um dicionário Zstandard."

#: ../../library/compression.zstd.rst:225
msgid ""
"Compress *data* (a :term:`bytes-like object`), returning a :class:`bytes` "
"object with compressed data if possible, or otherwise an empty :class:`!"
"bytes` object. Some of *data* may be buffered internally, for use in later "
"calls to :meth:`!compress` and :meth:`~.flush`. The returned data should be "
"concatenated with the output of any previous calls to :meth:`~.compress`."
msgstr ""
"Compacte *data* (um :term:`objeto bytes ou similar`), retornando um objeto :"
"class:`bytes` com dados compactados, se possível, ou, caso contrário, um "
"objeto :class:`!bytes` vazio. Alguns dos *data* podem ser armazenados "
"internamente em buffer, para uso em chamadas posteriores a :meth:`!compress` "
"e :meth:`~.flush`. Os dados retornados devem ser concatenados com a saída de "
"quaisquer chamadas anteriores a :meth:`~.compress`."

#: ../../library/compression.zstd.rst:232
msgid ""
"The *mode* argument is a :class:`ZstdCompressor` attribute, either :attr:`~."
"CONTINUE`, :attr:`~.FLUSH_BLOCK`, or :attr:`~.FLUSH_FRAME`."
msgstr ""
"O argumento *mode* é um atributo :class:`ZstdCompressor`, podendo ser "
"definido com :attr:`~.CONTINUE`, :attr:`~.FLUSH_BLOCK` ou :attr:`~."
"FLUSH_FRAME`."

#: ../../library/compression.zstd.rst:236
msgid ""
"When all data has been provided to the compressor, call the :meth:`~.flush` "
"method to finish the compression process. If :meth:`~.compress` is called "
"with *mode* set to :attr:`~.FLUSH_FRAME`, :meth:`~.flush` should not be "
"called, as it would write out a new empty frame."
msgstr ""
"Quando todos os dados forem fornecidos ao compactador, chama o método :meth:"
"`~.flush` para finalizar o processo de compactação. Se :meth:`~.compress` "
"for chamado com *mode* definido como :attr:`~.FLUSH_FRAME`, :meth:`~.flush` "
"não deve ser chamado, pois gravaria um novo quadro vazio."

#: ../../library/compression.zstd.rst:244
msgid ""
"Finish the compression process, returning a :class:`bytes` object containing "
"any data stored in the compressor's internal buffers."
msgstr ""
"Conclui o processo de compressão, retornando um objeto :class:`bytes` "
"contendo todos os dados armazenados nos buffers internos do compressor."

#: ../../library/compression.zstd.rst:247
msgid ""
"The *mode* argument is a :class:`ZstdCompressor` attribute, either :attr:`~."
"FLUSH_BLOCK`, or :attr:`~.FLUSH_FRAME`."
msgstr ""
"O argumento *mode* é um atributo :class:`ZstdCompressor`, podendo ser "
"definido com :attr:`~.FLUSH_BLOCK` ou :attr:`~.FLUSH_FRAME`."

#: ../../library/compression.zstd.rst:252
msgid ""
"Specify the amount of uncompressed data *size* that will be provided for the "
"next frame. *size* will be written into the frame header of the next frame "
"unless :attr:`CompressionParameter.content_size_flag` is ``False`` or ``0``. "
"A size of ``0`` means that the frame is empty. If *size* is ``None``, the "
"frame header will omit the frame size. Frames that include the uncompressed "
"data size require less memory to decompress, especially at higher "
"compression levels."
msgstr ""
"Especifica a quantidade de *size* dados descompactados que será fornecida "
"para o próximo quadro. *size* será gravado no cabeçalho do quadro do próximo "
"quadro, a menos que :attr:`CompressionParameter.content_size_flag` seja "
"``False`` ou ``0``. Um tamanho ``0`` significa que o quadro está vazio. Se "
"*size* for ``None``, o cabeçalho do quadro omitirá o tamanho do quadro. "
"Quadros que incluem o tamanho dos dados descompactados requerem menos "
"memória para descompactação, especialmente em níveis de compactação mais "
"altos."

#: ../../library/compression.zstd.rst:260
msgid ""
"If :attr:`last_mode` is not :attr:`FLUSH_FRAME`, a :exc:`ValueError` is "
"raised as the compressor is not at the start of a frame. If the pledged size "
"does not match the actual size of data provided to :meth:`.compress`, future "
"calls to :meth:`!compress` or :meth:`flush` may raise :exc:`ZstdError` and "
"the last chunk of data may be lost."
msgstr ""
"Se :attr:`last_mode` não for :attr:`FLUSH_FRAME`, uma :exc:`ValueError` será "
"levantada, pois o compressor não está no início de um quadro. Se o tamanho "
"prometido não corresponder ao tamanho real dos dados fornecidos para :meth:`."
"compress`, chamadas futuras para :meth:`!compress` ou :meth:`flush` poderão "
"levantar :exc:`ZstdError` e o último bloco de dados poderá ser perdido."

#: ../../library/compression.zstd.rst:267
msgid ""
"After :meth:`flush` or :meth:`.compress` are called with mode :attr:"
"`FLUSH_FRAME`, the next frame will not include the frame size into the "
"header unless :meth:`!set_pledged_input_size` is called again."
msgstr ""
"Depois que :meth:`flush` ou :meth:`.compress` são chamados com o modo :attr:"
"`FLUSH_FRAME`, o próximo quadro não incluirá o tamanho do quadro no "
"cabeçalho, a menos que :meth:`!set_pledged_input_size` seja chamado "
"novamente."

#: ../../library/compression.zstd.rst:273
msgid ""
"Collect more data for compression, which may or may not generate output "
"immediately. This mode optimizes the compression ratio by maximizing the "
"amount of data per block and frame."
msgstr ""
"Coleta mais dados para compactação, o que pode ou não gerar saída imediata. "
"Este modo otimiza a taxa de compactação maximizando a quantidade de dados "
"por bloco e quadro."

#: ../../library/compression.zstd.rst:279
msgid ""
"Complete and write a block to the data stream. The data returned so far can "
"be immediately decompressed. Past data can still be referenced in future "
"blocks generated by calls to :meth:`~.compress`, improving compression."
msgstr ""
"Conclui e grava um bloco no fluxo de dados. Os dados retornados até o "
"momento podem ser descompactados imediatamente. Dados anteriores ainda podem "
"ser referenciados em blocos futuros gerados por chamadas a :meth:`~."
"compress`, melhorando a compactação."

#: ../../library/compression.zstd.rst:286
msgid ""
"Complete and write out a frame. Future data provided to :meth:`~.compress` "
"will be written into a new frame and *cannot* reference past data."
msgstr ""
"Conclui e escreve um quadro. Dados futuros fornecidos a :meth:`~.compress` "
"serão gravados em um novo quadro e *não poderão* fazer referência a dados "
"passados."

#: ../../library/compression.zstd.rst:292
msgid ""
"The last mode passed to either :meth:`~.compress` or :meth:`~.flush`. The "
"value can be one of :attr:`~.CONTINUE`, :attr:`~.FLUSH_BLOCK`, or :attr:`~."
"FLUSH_FRAME`. The initial value is :attr:`~.FLUSH_FRAME`, signifying that "
"the compressor is at the start of a new frame."
msgstr ""
"O último modo passado para :meth:`~.compress` ou :meth:`~.flush`. O valor "
"pode ser :attr:`~.CONTINUE`, :attr:`~.FLUSH_BLOCK` ou :attr:`~.FLUSH_FRAME`. "
"O valor inicial é :attr:`~.FLUSH_FRAME`, significando que o compactador está "
"no início de um novo quadro."

#: ../../library/compression.zstd.rst:300
msgid ""
"Create a decompressor object, which can be used to decompress data "
"incrementally."
msgstr ""
"Cria um objeto descompressor, que pode ser usado para descomprimir dados de "
"forma incremental."

#: ../../library/compression.zstd.rst:303
msgid ""
"For a more convenient way of decompressing an entire compressed stream at "
"once, see the module-level function :func:`decompress`."
msgstr ""
"Para uma maneira mais conveniente de descompactar todo um fluxo compactado "
"de uma só vez, consulte a função a nível de módulo :func:`decompress`."

#: ../../library/compression.zstd.rst:316
msgid ""
"This class does not transparently handle inputs containing multiple "
"compressed frames, unlike the :func:`decompress` function and :class:"
"`ZstdFile` class. To decompress a multi-frame input, you should use :func:"
"`decompress`, :class:`ZstdFile` if working with a :term:`file object`, or "
"multiple :class:`!ZstdDecompressor` instances."
msgstr ""
"Esta classe não lidam de forma transparente entradas contendo múltiplos "
"quadros compactados, ao contrário da função :func:`decompress` e da classe :"
"class:`ZstdFile`. Para descompactar uma entrada com múltiplos quadros, você "
"deve usar :func:`decompress`, :class:`ZstdFile` se estiver trabalhando com "
"um :term:`objeto arquivo` ou múltiplas instâncias de :class:`!"
"ZstdDecompressor`."

#: ../../library/compression.zstd.rst:324
msgid ""
"Decompress *data* (a :term:`bytes-like object`), returning uncompressed data "
"as bytes. Some of *data* may be buffered internally, for use in later calls "
"to :meth:`!decompress`. The returned data should be concatenated with the "
"output of any previous calls to :meth:`!decompress`."
msgstr ""
"Descompacta dados *data* (um :term:`objeto bytes ou similar`), retornando "
"dados não compactados como bytes. Alguns dos *data* podem ser armazenados em "
"buffer internamente, para uso em chamadas posteriores para :meth:`!"
"decompress`. Os dados retornados devem ser concatenados com a saída de "
"qualquer chamada anterior para :meth:`!decompress`."

#: ../../library/compression.zstd.rst:330
msgid ""
"If *max_length* is non-negative, the method returns at most *max_length* "
"bytes of decompressed data. If this limit is reached and further output can "
"be produced, the :attr:`~.needs_input` attribute will be set to ``False``. "
"In this case, the next call to :meth:`~.decompress` may provide *data* as "
"``b''`` to obtain more of the output."
msgstr ""
"Se *max_length* for não negativo, o método retornará no máximo *max_length* "
"bytes de dados descomprimidos. Se este limite for atingido e mais saída "
"puder ser produzida, o atributo :attr:`~.needs_input` será definido como "
"``False``. Neste caso, a próxima chamada para :meth:`~.decompress` pode "
"fornecer *data* como ``b''`` para obter mais saída."

#: ../../library/compression.zstd.rst:337
msgid ""
"If all of the input data was decompressed and returned (either because this "
"was less than *max_length* bytes, or because *max_length* was negative), "
"the :attr:`~.needs_input` attribute will be set to ``True``."
msgstr ""
"Se todos os dados de entrada foram descomprimidos e retornados (seja porque "
"era menor que *max_length* bytes, ou porque *max_length* era negativo), o "
"atributo :attr:`~.needs_input` será definido como ``True`` ."

#: ../../library/compression.zstd.rst:342
msgid ""
"Attempting to decompress data after the end of a frame will raise a :exc:"
"`ZstdError`. Any data found after the end of the frame is ignored and saved "
"in the :attr:`~.unused_data` attribute."
msgstr ""
"Tentar descompactar dados após o final de um quadro levantará um erro :exc:"
"`ZstdError`. Quaisquer dados encontrados após o final do quadro serão "
"ignorados e salvos no atributo :attr:`~.unused_data`."

#: ../../library/compression.zstd.rst:348
msgid "``True`` if the end-of-stream marker has been reached."
msgstr "``True`` se o marcador de fim de fluxo foi atingido."

#: ../../library/compression.zstd.rst:352
msgid "Data found after the end of the compressed stream."
msgstr "Dados encontrados após o término do fluxo comprimido."

#: ../../library/compression.zstd.rst:354
msgid "Before the end of the stream is reached, this will be ``b''``."
msgstr "Antes do final do fluxo ser alcançado, isso será ``b''``."

#: ../../library/compression.zstd.rst:358
msgid ""
"``False`` if the :meth:`.decompress` method can provide more decompressed "
"data before requiring new compressed input."
msgstr ""
"``False`` se o método :meth:`.decompress` puder fornecer mais dados "
"descompactados antes de exigir uma nova entrada compactada."

#: ../../library/compression.zstd.rst:363
msgid "Zstandard dictionaries"
msgstr "Dicionários de Zstandard"

#: ../../library/compression.zstd.rst:368
msgid ""
"Train a Zstandard dictionary, returning a :class:`ZstdDict` instance. "
"Zstandard dictionaries enable more efficient compression of smaller sizes of "
"data, which is traditionally difficult to compress due to less repetition. "
"If you are compressing multiple similar groups of data (such as similar "
"files), Zstandard dictionaries can improve compression ratios and speed "
"significantly."
msgstr ""
"Treina um dicionário Zstandard, retornando uma instância :class:`ZstdDict`. "
"Os dicionários Zstandard permitem uma compactação mais eficiente de dados "
"menores, que tradicionalmente são difíceis de comprimir devido à menor "
"repetição. Se você estiver compactando vários grupos de dados semelhantes "
"(como arquivos semelhantes), os dicionários Zstandard podem melhorar "
"significativamente as taxas de compactação e a velocidade."

#: ../../library/compression.zstd.rst:375
msgid ""
"The *samples* argument (an iterable of :class:`bytes` objects), is the "
"population of samples used to train the Zstandard dictionary."
msgstr ""
"O argumento *samples* (um iterável de objetos :class:`bytes`) é a população "
"de amostras usada para treinar o dicionário Zstandard."

#: ../../library/compression.zstd.rst:378
msgid ""
"The *dict_size* argument, an integer, is the maximum size (in bytes) the "
"Zstandard dictionary should be. The Zstandard documentation suggests an "
"absolute maximum of no more than 100 KB, but the maximum can often be "
"smaller depending on the data. Larger dictionaries generally slow down "
"compression, but improve compression ratios. Smaller dictionaries lead to "
"faster compression, but reduce the compression ratio."
msgstr ""
"O argumento *dict_size*, um inteiro, é o tamanho máximo (em bytes) que o "
"dicionário Zstandard deve ter. A documentação do Zstandard sugere um máximo "
"absoluto de no máximo 100 KB, mas o máximo pode ser menor dependendo dos "
"dados. Dicionários maiores geralmente reduzem a compactação, mas melhoram as "
"taxas de compactação. Dicionários menores levam a uma compactação mais "
"rápida, mas reduzem a taxa de compactação."

#: ../../library/compression.zstd.rst:388
msgid ""
"An advanced function for converting a \"raw content\" Zstandard dictionary "
"into a regular Zstandard dictionary. \"Raw content\" dictionaries are a "
"sequence of bytes that do not need to follow the structure of a normal "
"Zstandard dictionary."
msgstr ""
"Uma função avançada para converter um dicionário Zstandard de \"conteúdo "
"bruto\" em um dicionário Zstandard comum. Dicionários de \"conteúdo bruto\" "
"são uma sequência de bytes que não precisa seguir a estrutura de um "
"dicionário Zstandard comum."

#: ../../library/compression.zstd.rst:393
msgid ""
"The *zstd_dict* argument is a :class:`ZstdDict` instance with the :attr:"
"`~ZstdDict.dict_content` containing the raw dictionary contents."
msgstr ""
"O argumento *zstd_dict* é uma instância :class:`ZstdDict` com :attr:"
"`~ZstdDict.dict_content` contendo o conteúdo bruto do dicionário."

#: ../../library/compression.zstd.rst:396
msgid ""
"The *samples* argument (an iterable of :class:`bytes` objects), contains "
"sample data for generating the Zstandard dictionary."
msgstr ""
"O argumento *samples* (um iterável de objetos :class:`bytes`) contém dados "
"de amostra para gerar o dicionário Zstandard."

#: ../../library/compression.zstd.rst:399
msgid ""
"The *dict_size* argument, an integer, is the maximum size (in bytes) the "
"Zstandard dictionary should be. See :func:`train_dict` for suggestions on "
"the maximum dictionary size."
msgstr ""
"O argumento *dict_size*, um inteiro, é o tamanho máximo (em bytes) que o "
"dicionário Zstandard deve ter. Consulte :func:`train_dict` para sugestões "
"sobre o tamanho máximo do dicionário."

#: ../../library/compression.zstd.rst:403
msgid ""
"The *level* argument (an integer) is the compression level expected to be "
"passed to the compressors using this dictionary. The dictionary information "
"varies for each compression level, so tuning for the proper compression "
"level can make compression more efficient."
msgstr ""
"O argumento *level* (um inteiro) é o nível de compactação que se espera que "
"seja passado aos compactadores usando este dicionário. As informações do "
"dicionário variam para cada nível de compactação, portanto, ajustar o nível "
"de compactação adequado pode tornar a compactação mais eficiente."

#: ../../library/compression.zstd.rst:411
msgid ""
"A wrapper around Zstandard dictionaries. Dictionaries can be used to improve "
"the compression of many small chunks of data. Use :func:`train_dict` if you "
"need to train a new dictionary from sample data."
msgstr ""
"Um invólucro para dicionários Zstandard. Dicionários podem ser usados para "
"melhorar a compactação de muitos pequenos blocos de dados. Use :func:"
"`train_dict` se precisar treinar um novo dicionário a partir de dados de "
"amostra."

#: ../../library/compression.zstd.rst:415
msgid ""
"The *dict_content* argument (a :term:`bytes-like object`), is the already "
"trained dictionary information."
msgstr ""
"O argumento *dict_content* (um :term:`objeto bytes ou similar`) é a "
"informação do dicionário já treinada."

#: ../../library/compression.zstd.rst:418
msgid ""
"The *is_raw* argument, a boolean, is an advanced parameter controlling the "
"meaning of *dict_content*. ``True`` means *dict_content* is a \"raw "
"content\" dictionary, without any format restrictions. ``False`` means "
"*dict_content* is an ordinary Zstandard dictionary, created from Zstandard "
"functions, for example, :func:`train_dict` or the external :program:`zstd` "
"CLI."
msgstr ""
"O argumento *is_raw*, um booleano, é um parâmetro avançado que controla o "
"significado de *dict_content*. ``True`` significa que *dict_content* é um "
"dicionário de \"conteúdo bruto\", sem nenhuma restrição de formato. "
"``False`` significa que *dict_content* é um dicionário Zstandard comum, "
"criado a partir de funções Zstandard, por exemplo, :func:`train_dict` ou a "
"CLI externa :program:`zstd`."

#: ../../library/compression.zstd.rst:424
msgid ""
"When passing a :class:`!ZstdDict` to a function, the :attr:`!"
"as_digested_dict` and :attr:`!as_undigested_dict` attributes can control how "
"the dictionary is loaded by passing them as the ``zstd_dict`` argument, for "
"example, ``compress(data, zstd_dict=zd.as_digested_dict)``. Digesting a "
"dictionary is a costly operation that occurs when loading a Zstandard "
"dictionary. When making multiple calls to compression or decompression, "
"passing a digested dictionary will reduce the overhead of loading the "
"dictionary."
msgstr ""
"Ao passar um :class:`!ZstdDict` para uma função, os atributos :attr:`!"
"as_digested_dict` e :attr:`!as_undigested_dict` podem controlar como o "
"dicionário é carregado, passando-os como o argumento ``zstd_dict``, por "
"exemplo, ``compress(data, zstd_dict=zd.as_digested_dict)``. A digestão de um "
"dicionário é uma operação custosa que ocorre ao carregar um dicionário "
"Zstandard. Ao fazer várias chamadas para compactação ou descompactação, "
"passar um dicionário digerido reduzirá a sobrecarga de carregamento do "
"dicionário."

#: ../../library/compression.zstd.rst:433
msgid "Difference for compression"
msgstr "Diferença para compactação"

#: ../../library/compression.zstd.rst:438
msgid "Digested dictionary"
msgstr ""

#: ../../library/compression.zstd.rst:439
msgid "Undigested dictionary"
msgstr ""

#: ../../library/compression.zstd.rst:440
msgid ""
"Advanced parameters of the compressor which may be overridden by the "
"dictionary's parameters"
msgstr ""
"Parâmetros avançados do compressor que podem ser substituídos pelos "
"parâmetros do dicionário"

#: ../../library/compression.zstd.rst:442
msgid ""
"``window_log``, ``hash_log``, ``chain_log``, ``search_log``, ``min_match``, "
"``target_length``, ``strategy``, ``enable_long_distance_matching``, "
"``ldm_hash_log``, ``ldm_min_match``, ``ldm_bucket_size_log``, "
"``ldm_hash_rate_log``, and some non-public parameters."
msgstr ""
"``window_log``, ``hash_log``, ``chain_log``, ``search_log``, ``min_match``, "
"``target_length``, ``strategy``, ``enable_long_distance_matching``, "
"``ldm_hash_log``, ``ldm_min_match``, ``ldm_bucket_size_log``, "
"``ldm_hash_rate_log`` e alguns parâmetros não-públicos."

#: ../../library/compression.zstd.rst:447
msgid "None"
msgstr "None"

#: ../../library/compression.zstd.rst:448
msgid ":class:`!ZstdDict` internally caches the dictionary"
msgstr ":class:`!ZstdDict` armazena em cache internamente o dicionário"

#: ../../library/compression.zstd.rst:449
msgid ""
"Yes. It's faster when loading a digested dictionary again with the same "
"compression level."
msgstr ""

#: ../../library/compression.zstd.rst:451
msgid ""
"No. If you wish to load an undigested dictionary multiple times, consider "
"reusing a compressor object."
msgstr ""

#: ../../library/compression.zstd.rst:454
msgid ""
"If passing a :class:`!ZstdDict` without any attribute, an undigested "
"dictionary is passed by default when compressing and a digested dictionary "
"is generated if necessary and passed by default when decompressing."
msgstr ""

#: ../../library/compression.zstd.rst:460
msgid ""
"The content of the Zstandard dictionary, a ``bytes`` object. It's the same "
"as the *dict_content* argument in the ``__init__`` method. It can be used "
"with other programs, such as the ``zstd`` CLI program."
msgstr ""

#: ../../library/compression.zstd.rst:466
msgid "Identifier of the Zstandard dictionary, a non-negative int value."
msgstr ""

#: ../../library/compression.zstd.rst:468
msgid ""
"Non-zero means the dictionary is ordinary, created by Zstandard functions "
"and following the Zstandard format."
msgstr ""

#: ../../library/compression.zstd.rst:471
msgid ""
"``0`` means a \"raw content\" dictionary, free of any format restriction, "
"used for advanced users."
msgstr ""

#: ../../library/compression.zstd.rst:476
msgid ""
"The meaning of ``0`` for :attr:`!ZstdDict.dict_id` is different from the "
"``dictionary_id`` attribute to the :func:`get_frame_info` function."
msgstr ""

#: ../../library/compression.zstd.rst:482
msgid "Load as a digested dictionary."
msgstr ""

#: ../../library/compression.zstd.rst:486
msgid "Load as an undigested dictionary."
msgstr ""

#: ../../library/compression.zstd.rst:490
msgid "Advanced parameter control"
msgstr ""

#: ../../library/compression.zstd.rst:494
msgid ""
"An :class:`~enum.IntEnum` containing the advanced compression parameter keys "
"that can be used when compressing data."
msgstr ""

#: ../../library/compression.zstd.rst:497
#: ../../library/compression.zstd.rst:731
msgid ""
"The :meth:`~.bounds` method can be used on any attribute to get the valid "
"values for that parameter."
msgstr ""

#: ../../library/compression.zstd.rst:500
msgid ""
"Parameters are optional; any omitted parameter will have it's value selected "
"automatically."
msgstr ""

#: ../../library/compression.zstd.rst:503
msgid ""
"Example getting the lower and upper bound of :attr:`~.compression_level`::"
msgstr ""

#: ../../library/compression.zstd.rst:505
msgid "lower, upper = CompressionParameter.compression_level.bounds()"
msgstr ""

#: ../../library/compression.zstd.rst:507
msgid "Example setting the :attr:`~.window_log` to the maximum size::"
msgstr ""

#: ../../library/compression.zstd.rst:509
msgid ""
"_lower, upper = CompressionParameter.window_log.bounds()\n"
"options = {CompressionParameter.window_log: upper}\n"
"compress(b'venezuelan beaver cheese', options=options)"
msgstr ""

#: ../../library/compression.zstd.rst:515
msgid ""
"Return the tuple of int bounds, ``(lower, upper)``, of a compression "
"parameter. This method should be called on the attribute you wish to "
"retrieve the bounds of. For example, to get the valid values for :attr:`~."
"compression_level`, one may check the result of ``CompressionParameter."
"compression_level.bounds()``."
msgstr ""

#: ../../library/compression.zstd.rst:521
#: ../../library/compression.zstd.rst:749
msgid "Both the lower and upper bounds are inclusive."
msgstr ""

#: ../../library/compression.zstd.rst:525
msgid ""
"A high-level means of setting other compression parameters that affect the "
"speed and ratio of compressing data."
msgstr ""

#: ../../library/compression.zstd.rst:528
msgid ""
"Regular compression levels are greater than ``0``. Values greater than "
"``20`` are considered \"ultra\" compression and require more memory than "
"other levels. Negative values can be used to trade off faster compression "
"for worse compression ratios."
msgstr ""

#: ../../library/compression.zstd.rst:533
msgid "Setting the level to zero uses :attr:`COMPRESSION_LEVEL_DEFAULT`."
msgstr ""

#: ../../library/compression.zstd.rst:537
msgid ""
"Maximum allowed back-reference distance the compressor can use when "
"compressing data, expressed as power of two, ``1 << window_log`` bytes. This "
"parameter greatly influences the memory usage of compression. Higher values "
"require more memory but gain better compression values."
msgstr ""

#: ../../library/compression.zstd.rst:542
#: ../../library/compression.zstd.rst:551
#: ../../library/compression.zstd.rst:562
#: ../../library/compression.zstd.rst:570
#: ../../library/compression.zstd.rst:581
#: ../../library/compression.zstd.rst:596
#: ../../library/compression.zstd.rst:627
#: ../../library/compression.zstd.rst:634
#: ../../library/compression.zstd.rst:642
#: ../../library/compression.zstd.rst:650
#: ../../library/compression.zstd.rst:709
#: ../../library/compression.zstd.rst:758
msgid "A value of zero causes the value to be selected automatically."
msgstr ""

#: ../../library/compression.zstd.rst:546
msgid ""
"Size of the initial probe table, as a power of two. The resulting memory "
"usage is ``1 << (hash_log+2)`` bytes. Larger tables improve compression "
"ratio of strategies <= :attr:`~Strategy.dfast`, and improve compression "
"speed of strategies > :attr:`~Strategy.dfast`."
msgstr ""

#: ../../library/compression.zstd.rst:555
msgid ""
"Size of the multi-probe search table, as a power of two. The resulting "
"memory usage is ``1 << (chain_log+2)`` bytes. Larger tables result in better "
"and slower compression. This parameter has no effect for the :attr:"
"`~Strategy.fast` strategy. It's still useful when using :attr:`~Strategy."
"dfast` strategy, in which case it defines a secondary probe table."
msgstr ""

#: ../../library/compression.zstd.rst:566
msgid ""
"Number of search attempts, as a power of two. More attempts result in better "
"and slower compression. This parameter is useless for :attr:`~Strategy.fast` "
"and :attr:`~Strategy.dfast` strategies."
msgstr ""

#: ../../library/compression.zstd.rst:574
msgid ""
"Minimum size of searched matches. Larger values increase compression and "
"decompression speed, but decrease ratio. Note that Zstandard can still find "
"matches of smaller size, it just tweaks its search algorithm to look for "
"this size and larger. For all strategies < :attr:`~Strategy.btopt`, the "
"effective minimum is ``4``; for all strategies > :attr:`~Strategy.fast`, the "
"effective maximum is ``6``."
msgstr ""

#: ../../library/compression.zstd.rst:585
msgid "The impact of this field depends on the selected :class:`Strategy`."
msgstr ""

#: ../../library/compression.zstd.rst:587
msgid ""
"For strategies :attr:`~Strategy.btopt`, :attr:`~Strategy.btultra` and :attr:"
"`~Strategy.btultra2`, the value is the length of a match considered \"good "
"enough\" to stop searching. Larger values make compression ratios better, "
"but compresses slower."
msgstr ""

#: ../../library/compression.zstd.rst:592
msgid ""
"For strategy :attr:`~Strategy.fast`, it is the distance between match "
"sampling. Larger values make compression faster, but with a worse "
"compression ratio."
msgstr ""

#: ../../library/compression.zstd.rst:600
msgid ""
"The higher the value of selected strategy, the more complex the compression "
"technique used by zstd, resulting in higher compression ratios but slower "
"compression."
msgstr ""

#: ../../library/compression.zstd.rst:604
msgid ":class:`Strategy`"
msgstr ""

#: ../../library/compression.zstd.rst:608
msgid ""
"Long distance matching can be used to improve compression for large inputs "
"by finding large matches at greater distances. It increases memory usage and "
"window size."
msgstr ""

#: ../../library/compression.zstd.rst:612
msgid ""
"``True`` or ``1`` enable long distance matching while ``False`` or ``0`` "
"disable it."
msgstr ""

#: ../../library/compression.zstd.rst:615
msgid ""
"Enabling this parameter increases default :attr:`~CompressionParameter."
"window_log` to 128 MiB except when expressly set to a different value. This "
"setting is enabled by default if :attr:`!window_log` >= 128 MiB and the "
"compression strategy >= :attr:`~Strategy.btopt` (compression level 16+)."
msgstr ""

#: ../../library/compression.zstd.rst:623
msgid ""
"Size of the table for long distance matching, as a power of two. Larger "
"values increase memory usage and compression ratio, but decrease compression "
"speed."
msgstr ""

#: ../../library/compression.zstd.rst:631
msgid ""
"Minimum match size for long distance matcher. Larger or too small values can "
"often decrease the compression ratio."
msgstr ""

#: ../../library/compression.zstd.rst:638
msgid ""
"Log size of each bucket in the long distance matcher hash table for "
"collision resolution. Larger values improve collision resolution but "
"decrease compression speed."
msgstr ""

#: ../../library/compression.zstd.rst:646
msgid ""
"Frequency of inserting/looking up entries into the long distance matcher "
"hash table. Larger values improve compression speed. Deviating far from the "
"default value will likely result in a compression ratio decrease."
msgstr ""

#: ../../library/compression.zstd.rst:654
msgid ""
"Write the size of the data to be compressed into the Zstandard frame header "
"when known prior to compressing."
msgstr ""

#: ../../library/compression.zstd.rst:657
msgid "This flag only takes effect under the following scenarios:"
msgstr ""

#: ../../library/compression.zstd.rst:659
msgid "Calling :func:`compress` for one-shot compression"
msgstr ""

#: ../../library/compression.zstd.rst:660
msgid ""
"Providing all of the data to be compressed in the frame in a single :meth:"
"`ZstdCompressor.compress` call, with the :attr:`ZstdCompressor.FLUSH_FRAME` "
"mode."
msgstr ""

#: ../../library/compression.zstd.rst:663
msgid ""
"Calling :meth:`ZstdCompressor.set_pledged_input_size` with the exact amount "
"of data that will be provided to the compressor prior to any calls to :meth:"
"`ZstdCompressor.compress` for the current frame. :meth:`!ZstdCompressor."
"set_pledged_input_size` must be called for each new frame."
msgstr ""

#: ../../library/compression.zstd.rst:669
msgid ""
"All other compression calls may not write the size information into the "
"frame header."
msgstr ""

#: ../../library/compression.zstd.rst:672
msgid ""
"``True`` or ``1`` enable the content size flag while ``False`` or ``0`` "
"disable it."
msgstr ""

#: ../../library/compression.zstd.rst:677
msgid ""
"A four-byte checksum using XXHash64 of the uncompressed content is written "
"at the end of each frame. Zstandard's decompression code verifies the "
"checksum. If there is a mismatch a :class:`ZstdError` exception is raised."
msgstr ""

#: ../../library/compression.zstd.rst:682
msgid ""
"``True`` or ``1`` enable checksum generation while ``False`` or ``0`` "
"disable it."
msgstr ""

#: ../../library/compression.zstd.rst:687
msgid ""
"When compressing with a :class:`ZstdDict`, the dictionary's ID is written "
"into the frame header."
msgstr ""

#: ../../library/compression.zstd.rst:690
msgid ""
"``True`` or ``1`` enable storing the dictionary ID while ``False`` or ``0`` "
"disable it."
msgstr ""

#: ../../library/compression.zstd.rst:695
msgid ""
"Select how many threads will be spawned to compress in parallel. When :attr:"
"`!nb_workers` > 0, enables multi-threaded compression, a value of ``1`` "
"means \"one-thread multi-threaded mode\". More workers improve speed, but "
"also increase memory usage and slightly reduce compression ratio."
msgstr ""

#: ../../library/compression.zstd.rst:700
msgid "A value of zero disables multi-threading."
msgstr ""

#: ../../library/compression.zstd.rst:704
msgid ""
"Size of a compression job, in bytes. This value is enforced only when :attr:"
"`~CompressionParameter.nb_workers` >= 1. Each compression job is completed "
"in parallel, so this value can indirectly impact the number of active "
"threads."
msgstr ""

#: ../../library/compression.zstd.rst:713
msgid ""
"Sets how much data is reloaded from previous jobs (threads) for new jobs to "
"be used by the look behind window during compression. This value is only "
"used when :attr:`~CompressionParameter.nb_workers` >= 1. Acceptable values "
"vary from 0 to 9."
msgstr ""

#: ../../library/compression.zstd.rst:718
msgid "0 means dynamically set the overlap amount"
msgstr ""

#: ../../library/compression.zstd.rst:719
msgid "1 means no overlap"
msgstr ""

#: ../../library/compression.zstd.rst:720
msgid "9 means use a full window size from the previous job"
msgstr ""

#: ../../library/compression.zstd.rst:722
msgid ""
"Each increment halves/doubles the overlap size. \"8\" means an overlap of "
"``window_size/2``, \"7\" means an overlap of ``window_size/4``, etc."
msgstr ""

#: ../../library/compression.zstd.rst:727
msgid ""
"An :class:`~enum.IntEnum` containing the advanced decompression parameter "
"keys that can be used when decompressing data. Parameters are optional; any "
"omitted parameter will have it's value selected automatically."
msgstr ""

#: ../../library/compression.zstd.rst:734
msgid "Example setting the :attr:`~.window_log_max` to the maximum size::"
msgstr ""

#: ../../library/compression.zstd.rst:736
msgid ""
"data = compress(b'Some very long buffer of bytes...')\n"
"\n"
"_lower, upper = DecompressionParameter.window_log_max.bounds()\n"
"\n"
"options = {DecompressionParameter.window_log_max: upper}\n"
"decompress(data, options=options)"
msgstr ""

#: ../../library/compression.zstd.rst:745
msgid ""
"Return the tuple of int bounds, ``(lower, upper)``, of a decompression "
"parameter. This method should be called on the attribute you wish to "
"retrieve the bounds of."
msgstr ""

#: ../../library/compression.zstd.rst:753
msgid ""
"The base-two logarithm of the maximum size of the window used during "
"decompression. This can be useful to limit the amount of memory used when "
"decompressing data. A larger maximum window size leads to faster "
"decompression."
msgstr ""

#: ../../library/compression.zstd.rst:763
msgid ""
"An :class:`~enum.IntEnum` containing strategies for compression. Higher-"
"numbered strategies correspond to more complex and slower compression."
msgstr ""

#: ../../library/compression.zstd.rst:769
msgid ""
"The values of attributes of :class:`!Strategy` are not necessarily stable "
"across zstd versions. Only the ordering of the attributes may be relied "
"upon. The attributes are listed below in order."
msgstr ""

#: ../../library/compression.zstd.rst:773
msgid "The following strategies are available:"
msgstr ""

#: ../../library/compression.zstd.rst:795
msgid "Miscellaneous"
msgstr "Diversos"

#: ../../library/compression.zstd.rst:799
msgid ""
"Retrieve a :class:`FrameInfo` object containing metadata about a Zstandard "
"frame. Frames contain metadata related to the compressed data they hold."
msgstr ""

#: ../../library/compression.zstd.rst:805
msgid "Metadata related to a Zstandard frame."
msgstr ""

#: ../../library/compression.zstd.rst:809
msgid "The size of the decompressed contents of the frame."
msgstr ""

#: ../../library/compression.zstd.rst:813
msgid ""
"An integer representing the Zstandard dictionary ID needed for decompressing "
"the frame. ``0`` means the dictionary ID was not recorded in the frame "
"header. This may mean that a Zstandard dictionary is not needed, or that the "
"ID of a required dictionary was not recorded."
msgstr ""

#: ../../library/compression.zstd.rst:821
msgid "The default compression level for Zstandard: ``3``."
msgstr ""

#: ../../library/compression.zstd.rst:826
msgid ""
"Version number of the runtime zstd library as a tuple of integers (major, "
"minor, release)."
msgstr ""

#: ../../library/compression.zstd.rst:831
msgid "Examples"
msgstr "Exemplos"

#: ../../library/compression.zstd.rst:833
msgid "Reading in a compressed file:"
msgstr ""

#: ../../library/compression.zstd.rst:835
msgid ""
"from compression import zstd\n"
"\n"
"with zstd.open(\"file.zst\") as f:\n"
"    file_content = f.read()"
msgstr ""

#: ../../library/compression.zstd.rst:842
msgid "Creating a compressed file:"
msgstr ""

#: ../../library/compression.zstd.rst:844
msgid ""
"from compression import zstd\n"
"\n"
"data = b\"Insert Data Here\"\n"
"with zstd.open(\"file.zst\", \"w\") as f:\n"
"    f.write(data)"
msgstr ""

#: ../../library/compression.zstd.rst:852
msgid "Compressing data in memory:"
msgstr ""

#: ../../library/compression.zstd.rst:854
msgid ""
"from compression import zstd\n"
"\n"
"data_in = b\"Insert Data Here\"\n"
"data_out = zstd.compress(data_in)"
msgstr ""

#: ../../library/compression.zstd.rst:861
msgid "Incremental compression:"
msgstr ""

#: ../../library/compression.zstd.rst:863
msgid ""
"from compression import zstd\n"
"\n"
"comp = zstd.ZstdCompressor()\n"
"out1 = comp.compress(b\"Some data\\n\")\n"
"out2 = comp.compress(b\"Another piece of data\\n\")\n"
"out3 = comp.compress(b\"Even more data\\n\")\n"
"out4 = comp.flush()\n"
"# Concatenate all the partial results:\n"
"result = b\"\".join([out1, out2, out3, out4])"
msgstr ""

#: ../../library/compression.zstd.rst:875
msgid "Writing compressed data to an already-open file:"
msgstr ""

#: ../../library/compression.zstd.rst:877
msgid ""
"from compression import zstd\n"
"\n"
"with open(\"myfile\", \"wb\") as f:\n"
"    f.write(b\"This data will not be compressed\\n\")\n"
"    with zstd.open(f, \"w\") as zstf:\n"
"        zstf.write(b\"This *will* be compressed\\n\")\n"
"    f.write(b\"Not compressed\\n\")"
msgstr ""

#: ../../library/compression.zstd.rst:887
msgid "Creating a compressed file using compression parameters:"
msgstr ""

#: ../../library/compression.zstd.rst:889
msgid ""
"from compression import zstd\n"
"\n"
"options = {\n"
"   zstd.CompressionParameter.checksum_flag: 1\n"
"}\n"
"with zstd.open(\"file.zst\", \"w\", options=options) as f:\n"
"    f.write(b\"Mind if I squeeze in?\")"
msgstr ""
