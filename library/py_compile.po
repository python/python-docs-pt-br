# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2021
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-10 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 01:11+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/py_compile.rst:2
msgid ":mod:`!py_compile` --- Compile Python source files"
msgstr ":mod:`!py_compile` --- Compila arquivos fonte do Python"

#: ../../library/py_compile.rst:10
msgid "**Source code:** :source:`Lib/py_compile.py`"
msgstr "**Código-fonte:** :source:`Lib/py_compile.py`"

#: ../../library/py_compile.rst:16
msgid ""
"The :mod:`py_compile` module provides a function to generate a byte-code "
"file from a source file, and another function used when the module source "
"file is invoked as a script."
msgstr ""
"O módulo :mod:`py_compile` fornece uma função para gerar um arquivo de "
"bytecode a partir de um arquivo fonte, e outra função usada quando o arquivo "
"fonte do módulo é chamado como um script."

#: ../../library/py_compile.rst:20
msgid ""
"Though not often needed, this function can be useful when installing modules "
"for shared use, especially if some of the users may not have permission to "
"write the byte-code cache files in the directory containing the source code."
msgstr ""
"Embora nem sempre seja necessária, essa função pode ser útil ao instalar "
"módulos para uso compartilhado, especialmente se alguns usuários não tiverem "
"permissão para gravar os arquivos de cache de bytecodes no diretório que "
"contém o código-fonte."

#: ../../library/py_compile.rst:27
msgid ""
"Exception raised when an error occurs while attempting to compile the file."
msgstr "Exceção levantada quando ocorre um erro ao tentar compilar o arquivo."

#: ../../library/py_compile.rst:32
msgid ""
"Compile a source file to byte-code and write out the byte-code cache file. "
"The source code is loaded from the file named *file*.  The byte-code is "
"written to *cfile*, which defaults to the :pep:`3147`/:pep:`488` path, "
"ending in ``.pyc``. For example, if *file* is ``/foo/bar/baz.py`` *cfile* "
"will default to ``/foo/bar/__pycache__/baz.cpython-32.pyc`` for Python 3.2.  "
"If *dfile* is specified, it is used instead of *file* as the name of the "
"source file from which source lines are obtained for display in exception "
"tracebacks. If *doraise* is true, a :exc:`PyCompileError` is raised when an "
"error is encountered while compiling *file*. If *doraise* is false (the "
"default), an error string is written to ``sys.stderr``, but no exception is "
"raised.  This function returns the path to byte-compiled file, i.e. whatever "
"*cfile* value was used."
msgstr ""
"Compila um arquivo fonte para bytecode e grava o arquivo de cache de "
"bytecode. O código-fonte é carregado a partir do arquivo chamado *file*. O "
"bytecode é gravado em *cfile*, cujo padrão é o caminho :pep:`3147`/:pep:"
"`488`, terminando em ``.pyc``. Por exemplo, se *file* for ``/foo/bar/baz."
"py``, o *cfile* será padronizado como ``/foo/bar/__pycache__/baz.cpython-32."
"pyc`` para o Python 3.2. Se *dfile* for especificado, ele será usado em vez "
"de *file* como o nome do arquivo fonte do qual as linhas de origem são "
"obtidas para exibição em tracebacks de exceção. Se *doraise* for verdadeiro, "
"a :exc:`PyCompileError` será levantada quando um erro for encontrado durante "
"a compilação de *file*. Se *doraise* for false (o padrão), uma string de "
"erros será gravada em ``sys.stderr``, mas nenhuma exceção será levantada. "
"Essa função retorna o caminho para o arquivo compilado em bytes, ou seja, "
"qualquer valor *cfile* foi usado."

#: ../../library/py_compile.rst:46
msgid ""
"The *doraise* and *quiet* arguments determine how errors are handled while "
"compiling file. If *quiet* is 0 or 1, and *doraise* is false, the default "
"behaviour is enabled: an error string is written to ``sys.stderr``, and the "
"function returns ``None`` instead of a path. If *doraise* is true, a :exc:"
"`PyCompileError` is raised instead. However if *quiet* is 2, no message is "
"written, and *doraise* has no effect."
msgstr ""
"Os argumentos *doraise* e *quiet* determinam como os erros são tratados "
"durante a compilação do arquivo. Se *quiet* for 0 ou 1 e *doraise* for "
"false, o comportamento padrão será ativado: uma string de erros será gravada "
"em ``sys.stderr`` e a função retornará ``None`` em vez de um caminho. Se "
"*doraise* for verdadeiro, uma :exc:`PyCompileError` será levantada. No "
"entanto, se *quiet* for 2, nenhuma mensagem será escrita e *doraise* não "
"terá efeito."

#: ../../library/py_compile.rst:53
msgid ""
"If the path that *cfile* becomes (either explicitly specified or computed) "
"is a symlink or non-regular file, :exc:`FileExistsError` will be raised. "
"This is to act as a warning that import will turn those paths into regular "
"files if it is allowed to write byte-compiled files to those paths. This is "
"a side-effect of import using file renaming to place the final byte-compiled "
"file into place to prevent concurrent file writing issues."
msgstr ""
"Se o caminho que *cfile* se tornar (especificado ou computado "
"explicitamente) for um link simbólico ou um arquivo não regular, :exc:"
"`FileExistsError` será levantada. Isso serve como um aviso de que a "
"importação transformará esses caminhos em arquivos regulares se for "
"permitido gravar arquivos compilados em bytes nesses caminhos. Esse é um "
"efeito colateral da importação usando a renomeação de arquivo para colocar o "
"arquivo final compilado em bytecode para evitar problemas de gravação "
"simultânea de arquivos."

#: ../../library/py_compile.rst:60
msgid ""
"*optimize* controls the optimization level and is passed to the built-in :"
"func:`compile` function.  The default of ``-1`` selects the optimization "
"level of the current interpreter."
msgstr ""
"*optimize* controla o nível de otimização e é passado para a função "
"embutida :func:`compile`. O padrão de ``-1`` seleciona o nível de otimização "
"do interpretador atual."

#: ../../library/py_compile.rst:64
msgid ""
"*invalidation_mode* should be a member of the :class:`PycInvalidationMode` "
"enum and controls how the generated bytecode cache is invalidated at "
"runtime.  The default is :attr:`PycInvalidationMode.CHECKED_HASH` if the :"
"envvar:`SOURCE_DATE_EPOCH` environment variable is set, otherwise the "
"default is :attr:`PycInvalidationMode.TIMESTAMP`."
msgstr ""
"*invalidation_mode* deve ser um membro da enum :class:`PycInvalidationMode` "
"e controla como o cache do bytecode gerado é invalidado em tempo de "
"execução. O padrão é :attr:`PycInvalidationMode.CHECKED_HASH` se a variável "
"de ambiente :envvar:`SOURCE_DATE_EPOCH` estiver configurada, caso contrário, "
"o padrão é :attr:`PycInvalidationMode.TIMESTAMP`."

#: ../../library/py_compile.rst:70
msgid ""
"Changed default value of *cfile* to be :PEP:`3147`-compliant.  Previous "
"default was *file* + ``'c'`` (``'o'`` if optimization was enabled). Also "
"added the *optimize* parameter."
msgstr ""
"Alterado o valor padrão de *cfile* para ficar em conformidade com a :PEP:"
"`3147`. O padrão anterior era *file* + ``'c'`` (``'o'`` se a otimização "
"estivesse ativada). Também foi adicionado o parâmetro *optimize*."

#: ../../library/py_compile.rst:75
msgid ""
"Changed code to use :mod:`importlib` for the byte-code cache file writing. "
"This means file creation/writing semantics now match what :mod:`importlib` "
"does, e.g. permissions, write-and-move semantics, etc. Also added the caveat "
"that :exc:`FileExistsError` is raised if *cfile* is a symlink or non-regular "
"file."
msgstr ""
"Alterado o código para usar :mod:`importlib` para a gravação do arquivo de "
"cache do bytecode. Isso significa que a semântica de criação/gravação de "
"arquivo agora corresponde ao que :mod:`importlib` faz, por exemplo, "
"permissões, semântica de gravação e movimentação, etc. Também foi adicionada "
"a ressalva de que :exc:`FileExistsError` é levantada se *cfile* for um link "
"simbólico ou um arquivo não regular."

#: ../../library/py_compile.rst:82
msgid ""
"The *invalidation_mode* parameter was added as specified in :pep:`552`. If "
"the :envvar:`SOURCE_DATE_EPOCH` environment variable is set, "
"*invalidation_mode* will be forced to :attr:`PycInvalidationMode."
"CHECKED_HASH`."
msgstr ""
"O parâmetro *invalidation_mode* foi adicionado conforme especificado em :pep:"
"`552`. Se a variável de ambiente :envvar:`SOURCE_DATE_EPOCH` estiver "
"configurada, *invalidation_mode* será forçado a :attr:`PycInvalidationMode."
"CHECKED_HASH`."

#: ../../library/py_compile.rst:88
msgid ""
"The :envvar:`SOURCE_DATE_EPOCH` environment variable no longer overrides the "
"value of the *invalidation_mode* argument, and determines its default value "
"instead."
msgstr ""
"A variável de ambiente :envvar:`SOURCE_DATE_EPOCH` não substitui mais o "
"valor do argumento *invalidation_mode* e, em vez disso, determina seu valor "
"padrão."

#: ../../library/py_compile.rst:93
msgid "The *quiet* parameter was added."
msgstr "O parâmetro *quiet* foi adicionado."

#: ../../library/py_compile.rst:99
msgid ""
"An enumeration of possible methods the interpreter can use to determine "
"whether a bytecode file is up to date with a source file. The ``.pyc`` file "
"indicates the desired invalidation mode in its header. See :ref:`pyc-"
"invalidation` for more information on how Python invalidates ``.pyc`` files "
"at runtime."
msgstr ""
"Uma enumeração de métodos possíveis que o interpretador pode usar para "
"determinar se um arquivo de bytecode está atualizado com um arquivo fonte. O "
"arquivo ``.pyc`` indica o modo de invalidação desejado em seu cabeçalho. "
"Veja :ref:`pyc-invalidation` para obter mais informações sobre como o Python "
"invalida arquivos ``.pyc`` em tempo de execução."

#: ../../library/py_compile.rst:109
msgid ""
"The ``.pyc`` file includes the timestamp and size of the source file, which "
"Python will compare against the metadata of the source file at runtime to "
"determine if the ``.pyc`` file needs to be regenerated."
msgstr ""
"O arquivo ``.pyc`` inclui o carimbo de data e hora e o tamanho do arquivo "
"fonte, que o Python comparará com os metadados do arquivo fonte no tempo de "
"execução para determinar se o arquivo ``.pyc`` precisa ser gerado novamente."

#: ../../library/py_compile.rst:115
msgid ""
"The ``.pyc`` file includes a hash of the source file content, which Python "
"will compare against the source at runtime to determine if the ``.pyc`` file "
"needs to be regenerated."
msgstr ""
"O arquivo ``.pyc`` inclui um hash do conteúdo do arquivo fonte, com o qual o "
"Python comparará o fonte em tempo de execução para determinar se o arquivo "
"``.pyc`` precisa ser gerado novamente."

#: ../../library/py_compile.rst:121
msgid ""
"Like :attr:`CHECKED_HASH`, the ``.pyc`` file includes a hash of the source "
"file content. However, Python will at runtime assume the ``.pyc`` file is up "
"to date and not validate the ``.pyc`` against the source file at all."
msgstr ""
"Como :attr:`CHECKED_HASH`, o arquivo ``.pyc`` inclui um hash do conteúdo do "
"arquivo fonte. No entanto, em tempo de execução, o Python presumirá que o "
"arquivo ``.pyc`` está atualizado e não validará o ``.pyc`` contra o arquivo "
"fonte."

#: ../../library/py_compile.rst:125
msgid ""
"This option is useful when the ``.pycs`` are kept up to date by some system "
"external to Python like a build system."
msgstr ""
"Essa opção é útil quando os ``.pycs`` são atualizados por algum sistema "
"externo ao Python, como um sistema de compilação."

#: ../../library/py_compile.rst:131
msgid "Command-Line Interface"
msgstr "Interface de Linha de Comando"

#: ../../library/py_compile.rst:133
msgid ""
"This module can be invoked as a script to compile several source files.  The "
"files named in *filenames* are compiled and the resulting bytecode is cached "
"in the normal manner.  This program does not search a directory structure to "
"locate source files; it only compiles files named explicitly. The exit "
"status is nonzero if one of the files could not be compiled."
msgstr ""
"Este módulo pode ser invocado como um script para compilar vários arquivos "
"fonte. Os arquivos nomeados em *filenames* são compilados e o bytecode "
"resultante é armazenado em cache da maneira normal. Este programa não "
"pesquisa uma estrutura de diretórios para localizar arquivos de origem; ele "
"apenas compila arquivos nomeados explicitamente. O status de saída será "
"diferente de zero se um dos arquivos não puder ser compilado."

#: ../../library/py_compile.rst:145
msgid ""
"Positional arguments are files to compile.  If ``-`` is the only parameter, "
"the list of files is taken from standard input."
msgstr ""
"Argumentos posicionais são arquivos para compilar. Se ``-`` for o único "
"parâmetro, a lista de arquivos será obtida da entrada padrão."

#: ../../library/py_compile.rst:150
msgid "Suppress errors output."
msgstr "Suprime a saída de erros."

#: ../../library/py_compile.rst:152
msgid "Added support for ``-``."
msgstr "Adicionado suporte a ``-``."

#: ../../library/py_compile.rst:155
msgid "Added support for :option:`-q`."
msgstr "Adicionado suporte a :option:`-q`."

#: ../../library/py_compile.rst:161
msgid "Module :mod:`compileall`"
msgstr "Módulo :mod:`compileall`"

#: ../../library/py_compile.rst:162
msgid "Utilities to compile all Python source files in a directory tree."
msgstr ""
"Utilitários para compilar todos os arquivos fontes Python em uma árvore de "
"diretórios."

#: ../../library/py_compile.rst:12
msgid "file"
msgstr "arquivo"

#: ../../library/py_compile.rst:12
msgid "byte-code"
msgstr "byte-code"
