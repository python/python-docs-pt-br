# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rodrigo Cendamore, 2023
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-31 12:03+0000\n"
"PO-Revision-Date: 2023-05-24 02:19+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/re.rst:2
msgid ":mod:`re` --- Regular expression operations"
msgstr ":mod:`re` --- Operações com expressões regulares"

#: ../../library/re.rst:10
msgid "**Source code:** :source:`Lib/re/`"
msgstr "**Código-fonte:** :source:`Lib/re/`"

#: ../../library/re.rst:14
msgid ""
"This module provides regular expression matching operations similar to those "
"found in Perl."
msgstr ""
"Este módulo fornece operações para correspondência de expressões regulares "
"semelhantes às encontradas em Perl. O nome do módulo vem das iniciais do "
"termo em inglês *regular expressions*, também frequentemente chamadas de "
"*regex*."

#: ../../library/re.rst:17
msgid ""
"Both patterns and strings to be searched can be Unicode strings (:class:"
"`str`) as well as 8-bit strings (:class:`bytes`). However, Unicode strings "
"and 8-bit strings cannot be mixed: that is, you cannot match a Unicode "
"string with a bytes pattern or vice-versa; similarly, when asking for a "
"substitution, the replacement string must be of the same type as both the "
"pattern and the search string."
msgstr ""
"Tanto os padrões quanto as strings a serem pesquisados podem ser strings "
"Unicode (:class:`str`) assim como strings de 8 bits (:class:`bytes`). No "
"entanto, strings Unicode e strings de 8 bits não podem ser misturadas: ou "
"seja, você não pode corresponder uma string Unicode com um padrão de bytes "
"ou vice-versa; da mesma forma, ao solicitar uma substituição, a string de "
"substituição deve ser do mesmo tipo que o padrão e a string de pesquisa."

#: ../../library/re.rst:24
msgid ""
"Regular expressions use the backslash character (``'\\'``) to indicate "
"special forms or to allow special characters to be used without invoking "
"their special meaning.  This collides with Python's usage of the same "
"character for the same purpose in string literals; for example, to match a "
"literal backslash, one might have to write ``'\\\\\\\\'`` as the pattern "
"string, because the regular expression must be ``\\\\``, and each backslash "
"must be expressed as ``\\\\`` inside a regular Python string literal. Also, "
"please note that any invalid escape sequences in Python's usage of the "
"backslash in string literals now generate a :exc:`DeprecationWarning` and in "
"the future this will become a :exc:`SyntaxError`. This behaviour will happen "
"even if it is a valid escape sequence for a regular expression."
msgstr ""

#: ../../library/re.rst:36
msgid ""
"The solution is to use Python's raw string notation for regular expression "
"patterns; backslashes are not handled in any special way in a string literal "
"prefixed with ``'r'``.  So ``r\"\\n\"`` is a two-character string containing "
"``'\\'`` and ``'n'``, while ``\"\\n\"`` is a one-character string containing "
"a newline.  Usually patterns will be expressed in Python code using this raw "
"string notation."
msgstr ""
"A solução é usar a notação de string bruta do Python para padrões de "
"expressão regular; as contrabarras não são tratadas de nenhuma maneira "
"especial em uma string literal com o prefixo ``'r'``. Portanto, ``r\"\\n\"`` "
"é uma string de dois caracteres contendo ``'\\'`` e ``'n'``, enquanto "
"``\"\\n\"`` é uma string de um caractere contendo uma nova linha. "
"Normalmente, os padrões serão expressos em código Python usando esta notação "
"de string bruta."

#: ../../library/re.rst:43
msgid ""
"It is important to note that most regular expression operations are "
"available as module-level functions and methods on :ref:`compiled regular "
"expressions <re-objects>`.  The functions are shortcuts that don't require "
"you to compile a regex object first, but miss some fine-tuning parameters."
msgstr ""
"É importante notar que a maioria das operações de expressão regular estão "
"disponíveis como funções e métodos em nível de módulo em :ref:`expressões "
"regulares compiladas <re-objects>`. As funções são atalhos que não exigem "
"que você compile um objeto regex primeiro, mas perdem-se alguns parâmetros "
"de ajuste fino."

#: ../../library/re.rst:51
msgid ""
"The third-party `regex <https://pypi.org/project/regex/>`_ module, which has "
"an API compatible with the standard library :mod:`re` module, but offers "
"additional functionality and a more thorough Unicode support."
msgstr ""
"O módulo de terceiros `regex <https://pypi.org/project/regex/>`_ possui uma "
"API compatível com o módulo da biblioteca padrão :mod:`re`, mas oferece "
"funcionalidades adicionais e um suporte mais completo a Unicode."

#: ../../library/re.rst:59
msgid "Regular Expression Syntax"
msgstr "Sintaxe de expressão regular"

#: ../../library/re.rst:61
msgid ""
"A regular expression (or RE) specifies a set of strings that matches it; the "
"functions in this module let you check if a particular string matches a "
"given regular expression (or if a given regular expression matches a "
"particular string, which comes down to the same thing)."
msgstr ""
"Uma expressão regular (ou ER) especifica um conjunto de strings que "
"corresponde a ela; as funções neste módulo permitem que você verifique se "
"uma determinada string corresponde a uma determinada expressão regular (ou "
"se uma determinada expressão regular corresponde a uma determinada string, o "
"que resulta na mesma coisa)."

#: ../../library/re.rst:66
msgid ""
"Regular expressions can be concatenated to form new regular expressions; if "
"*A* and *B* are both regular expressions, then *AB* is also a regular "
"expression. In general, if a string *p* matches *A* and another string *q* "
"matches *B*, the string *pq* will match AB.  This holds unless *A* or *B* "
"contain low precedence operations; boundary conditions between *A* and *B*; "
"or have numbered group references.  Thus, complex expressions can easily be "
"constructed from simpler primitive expressions like the ones described "
"here.  For details of the theory and implementation of regular expressions, "
"consult the Friedl book [Frie09]_, or almost any textbook about compiler "
"construction."
msgstr ""
"As expressões regulares podem ser concatenadas para formar novas expressões "
"regulares; se *A* e *B* forem expressões regulares, então *AB* também será "
"uma expressão regular. Em geral, se uma string *p* corresponder a *A* e "
"outra string *q* corresponder a *B*, a string *pq* corresponderá a AB. Isso "
"é válido, a menos que *A* ou *B* contenham operações de baixa precedência; "
"condições de contorno entre *A* e *B*; ou ter referências de grupo "
"numeradas. Assim, expressões complexas podem ser facilmente construídas a "
"partir de expressões primitivas mais simples, como as descritas aqui. Para "
"obter detalhes sobre a teoria e implementação de expressões regulares, "
"consulte o livro de Friedl [Frie09]_, ou quase qualquer livro sobre "
"construção de compiladores."

#: ../../library/re.rst:76
msgid ""
"A brief explanation of the format of regular expressions follows.  For "
"further information and a gentler presentation, consult the :ref:`regex-"
"howto`."
msgstr ""
"Segue uma breve explicação do formato das expressões regulares. Para mais "
"informações e uma apresentação mais suave, consulte o :ref:`regex-howto`."

#: ../../library/re.rst:79
msgid ""
"Regular expressions can contain both special and ordinary characters. Most "
"ordinary characters, like ``'A'``, ``'a'``, or ``'0'``, are the simplest "
"regular expressions; they simply match themselves.  You can concatenate "
"ordinary characters, so ``last`` matches the string ``'last'``.  (In the "
"rest of this section, we'll write RE's in ``this special style``, usually "
"without quotes, and strings to be matched ``'in single quotes'``.)"
msgstr ""
"As expressões regulares podem conter caracteres especiais e comuns. A "
"maioria dos caracteres comuns, como ``'A'``, ``'a'`` ou ``'0'``, são as "
"expressões regulares mais simples; eles simplesmente se correspondem. Você "
"pode concatenar caracteres comuns, de forma que ``último`` corresponda à "
"string ``'último'``. (No restante desta seção, escreveremos ERs ``neste "
"estilo especial``, geralmente sem aspas, e strings para serem correspondidas "
"``'entre aspas simples'``.)"

#: ../../library/re.rst:86
msgid ""
"Some characters, like ``'|'`` or ``'('``, are special. Special characters "
"either stand for classes of ordinary characters, or affect how the regular "
"expressions around them are interpreted."
msgstr ""
"Alguns caracteres, como ``'|'`` ou ``'('``, são especiais. Os caracteres "
"especiais representam classes de caracteres comuns ou afetam como as "
"expressões regulares em torno deles são interpretadas."

#: ../../library/re.rst:90
msgid ""
"Repetition operators or quantifiers (``*``, ``+``, ``?``, ``{m,n}``, etc) "
"cannot be directly nested. This avoids ambiguity with the non-greedy "
"modifier suffix ``?``, and with other modifiers in other implementations. To "
"apply a second repetition to an inner repetition, parentheses may be used. "
"For example, the expression ``(?:a{6})*`` matches any multiple of six "
"``'a'`` characters."
msgstr ""
"Operadores de repetição ou quantificadores (``*``, ``+``, ``?``, ``{m,n}`` "
"etc) não podem ser aninhados diretamente. Isso evita ambiguidade com o "
"sufixo modificador não guloso ``?``, e com outros modificadores em outras "
"implementações. Para aplicar uma segunda repetição a uma repetição interna, "
"podem ser usados parênteses. Por exemplo, a expressão ``(?:a{6})*`` "
"corresponde a qualquer múltiplo de seis caracteres ``'a'``."

#: ../../library/re.rst:97
msgid "The special characters are:"
msgstr "Os caracteres especiais são:"

#: ../../library/re.rst:104 ../../library/re.rst:1604
msgid "``.``"
msgstr "``.``"

#: ../../library/re.rst:102
msgid ""
"(Dot.)  In the default mode, this matches any character except a newline.  "
"If the :const:`DOTALL` flag has been specified, this matches any character "
"including a newline."
msgstr ""
"(Ponto.) No modo padrão, corresponde a qualquer caractere, exceto uma nova "
"linha. Se o sinalizador :const:`DOTALL` foi especificado, ele corresponde a "
"qualquer caractere, incluindo uma nova linha."

#: ../../library/re.rst:110
msgid "``^``"
msgstr "``^``"

#: ../../library/re.rst:109
msgid ""
"(Caret.)  Matches the start of the string, and in :const:`MULTILINE` mode "
"also matches immediately after each newline."
msgstr ""
"(Sinal de circunflexo.) Corresponde ao início da string, e no modo :const:"
"`MULTILINE` também corresponde imediatamente após cada nova linha."

#: ../../library/re.rst:121
msgid "``$``"
msgstr "``$``"

#: ../../library/re.rst:115
msgid ""
"Matches the end of the string or just before the newline at the end of the "
"string, and in :const:`MULTILINE` mode also matches before a newline.  "
"``foo`` matches both 'foo' and 'foobar', while the regular expression "
"``foo$`` matches only 'foo'.  More interestingly, searching for ``foo.$`` in "
"``'foo1\\nfoo2\\n'`` matches 'foo2' normally, but 'foo1' in :const:"
"`MULTILINE` mode; searching for a single ``$`` in ``'foo\\n'`` will find two "
"(empty) matches: one just before the newline, and one at the end of the "
"string."
msgstr ""
"Corresponde ao final da string ou logo antes da nova linha no final da "
"string, e no modo :const:`MULTILINE` também corresponde antes de uma nova "
"linha. ``foo`` corresponde a 'foo' e 'foobar', enquanto a expressão regular "
"``foo$`` corresponde apenas a 'foo'. Mais interessante, pesquisar por ``foo."
"$`` em ``'foo1\\nfoo2\\n'`` corresponde a 'foo2' normalmente, mas 'foo1' no "
"modo :const:`MULTILINE`; procurando por um único ``$`` em ``'foo\\n'`` "
"encontrará duas correspondências (vazias): uma logo antes da nova linha e "
"uma no final da string.x"

#: ../../library/re.rst:128
msgid "``*``"
msgstr "``*``"

#: ../../library/re.rst:126
msgid ""
"Causes the resulting RE to match 0 or more repetitions of the preceding RE, "
"as many repetitions as are possible.  ``ab*`` will match 'a', 'ab', or 'a' "
"followed by any number of 'b's."
msgstr ""
"Faz com que a ER resultante corresponda a 0 ou mais repetições da ER "
"anterior, tantas repetições quantas forem possíveis. ``ab*`` corresponderá a "
"'a', 'ab' ou 'a' seguido por qualquer número de 'b's."

#: ../../library/re.rst:135
msgid "``+``"
msgstr "``+``"

#: ../../library/re.rst:133
msgid ""
"Causes the resulting RE to match 1 or more repetitions of the preceding RE. "
"``ab+`` will match 'a' followed by any non-zero number of 'b's; it will not "
"match just 'a'."
msgstr ""
"Faz com que a ER resultante corresponda a 1 ou mais repetições da ER "
"anterior. ``ab+`` irá corresponder a 'a' seguido por qualquer número "
"diferente de zero de 'b's; não corresponderá apenas a 'a'."

#: ../../library/re.rst:141
msgid "``?``"
msgstr "``?``"

#: ../../library/re.rst:140
msgid ""
"Causes the resulting RE to match 0 or 1 repetitions of the preceding RE. "
"``ab?`` will match either 'a' or 'ab'."
msgstr ""
"Faz com que a ER resultante corresponda a 0 ou 1 repetição da ER anterior. "
"``ab?`` irá corresponder a 'a' ou 'ab'."

#: ../../library/re.rst:155
msgid "``*?``, ``+?``, ``??``"
msgstr "``*?``, ``+?``, ``??``"

#: ../../library/re.rst:149
msgid ""
"The ``'*'``, ``'+'``, and ``'?'`` quantifiers are all :dfn:`greedy`; they "
"match as much text as possible.  Sometimes this behaviour isn't desired; if "
"the RE ``<.*>`` is matched against ``'<a> b <c>'``, it will match the entire "
"string, and not just ``'<a>'``.  Adding ``?`` after the quantifier makes it "
"perform the match in :dfn:`non-greedy` or :dfn:`minimal` fashion; as *few* "
"characters as possible will be matched.  Using the RE ``<.*?>`` will match "
"only ``'<a>'``."
msgstr ""
"Os quantificadores ``'*'``, ``'+'`` e ``'?'`` são todos :dfn:`gulosos`; eles "
"correspondem ao máximo de texto possível. Às vezes, esse comportamento não é "
"desejado; se a ER ``<.*>`` for correspondida com ``'<a> b <c>'``, ela irá "
"corresponder a toda a string, e não apenas ``'<a>'``. Adicionar ``?`` após o "
"quantificador faz com que ele execute a correspondência da maneira :dfn:`não "
"gulosa` ou :dfn:`minimalista`; tão *poucos* caracteres quanto possível serão "
"correspondidos. Usando a ER ``<.*?>`` irá corresponder apenas ``'<a>'``."

#: ../../library/re.rst:179
msgid "``*+``, ``++``, ``?+``"
msgstr "``*+``, ``++``, ``?+``"

#: ../../library/re.rst:163
msgid ""
"Like the ``'*'``, ``'+'``, and ``'?'`` quantifiers, those where ``'+'`` is "
"appended also match as many times as possible. However, unlike the true "
"greedy quantifiers, these do not allow back-tracking when the expression "
"following it fails to match. These are known as :dfn:`possessive` "
"quantifiers. For example, ``a*a`` will match ``'aaaa'`` because the ``a*`` "
"will match all 4 ``'a'``\\ s, but, when the final ``'a'`` is encountered, "
"the expression is backtracked so that in the end the ``a*`` ends up matching "
"3 ``'a'``\\ s total, and the fourth ``'a'`` is matched by the final ``'a'``. "
"However, when ``a*+a`` is used to match ``'aaaa'``, the ``a*+`` will match "
"all 4 ``'a'``, but when the final ``'a'`` fails to find any more characters "
"to match, the expression cannot be backtracked and will thus fail to match. "
"``x*+``, ``x++`` and ``x?+`` are equivalent to ``(?>x*)``, ``(?>x+)`` and "
"``(?>x?)`` correspondingly."
msgstr ""
"Como os quantificadores ``'*'``, ``'+'`` e ``'?'``, aqueles em que ``'+'`` é "
"anexado também correspondem tantas vezes quanto possível. No entanto, ao "
"contrário dos quantificadores realmente gulosos, eles não permitem "
"retrocesso quando a expressão que o segue não corresponde. Estes são "
"conhecidos como quantificadores :dfn:`possessivos`. Por exemplo, ``a*a`` "
"corresponderá a ``'aaaa'`` porque o ``a*`` corresponderá a todos os 4 "
"``'a'``\\s, mas, quando o final ``'a'`` for encontrado, a expressão é "
"retrocedida para que no final o ``a*`` acabe correspondendo a 3 ``'a'``\\ s "
"no total, e o quarto ``'a'`` seja correspondido por o final ``'a'``. No "
"entanto, quando ``a*+a`` é usado para corresponder a ``'aaaa'``, o ``a*+`` "
"corresponderá a todos os 4 ``'a'``, mas quando o ``'a'`` final não encontrar "
"mais caracteres para corresponder, a expressão não pode ser retrocedida e, "
"portanto, não corresponderá. ``x*+``, ``x++`` e ``x?+`` são equivalentes a "
"``(?>x*)``, ``(?>x+)`` e ``(?>x?)`` respectivamente."

#: ../../library/re.rst:187
msgid "``{m}``"
msgstr "``{m}``"

#: ../../library/re.rst:185
msgid ""
"Specifies that exactly *m* copies of the previous RE should be matched; "
"fewer matches cause the entire RE not to match.  For example, ``a{6}`` will "
"match exactly six ``'a'`` characters, but not five."
msgstr ""
"Especifica que exatamente *m* cópias da ER anterior devem ser "
"correspondidas; menos correspondências fazem com que toda a ER não seja "
"correspondida. Por exemplo, ``a{6}`` irá corresponder exatamente a seis "
"caracteres ``'a'``, mas não a cinco."

#: ../../library/re.rst:196
msgid "``{m,n}``"
msgstr "``{m,n}``"

#: ../../library/re.rst:190
msgid ""
"Causes the resulting RE to match from *m* to *n* repetitions of the "
"preceding RE, attempting to match as many repetitions as possible.  For "
"example, ``a{3,5}`` will match from 3 to 5 ``'a'`` characters.  Omitting *m* "
"specifies a lower bound of zero,  and omitting *n* specifies an infinite "
"upper bound.  As an example, ``a{4,}b`` will match ``'aaaab'`` or a thousand "
"``'a'`` characters followed by a ``'b'``, but not ``'aaab'``. The comma may "
"not be omitted or the modifier would be confused with the previously "
"described form."
msgstr ""
"Faz com que a ER resultante corresponda de *m* a *n* repetições da ER "
"precedente, tentando corresponder ao máximo de repetições possível. Por "
"exemplo, ``a{3,5}`` irá corresponder de 3 a 5 caracteres ``'a'``. A omissão "
"de *m* especifica um limite inferior de zero e a omissão de *n* especifica "
"um limite superior infinito. Como exemplo, ``a{4,}b`` irá corresponder a "
"``'aaaab'`` ou mil caracteres ``'a'`` seguidos por um ``'b'``, mas não "
"``'aaab'``. A vírgula não pode ser omitida ou o modificador será confundido "
"com a forma descrita anteriormente."

#: ../../library/re.rst:203
msgid "``{m,n}?``"
msgstr "``{m,n}?``"

#: ../../library/re.rst:199
msgid ""
"Causes the resulting RE to match from *m* to *n* repetitions of the "
"preceding RE, attempting to match as *few* repetitions as possible.  This is "
"the non-greedy version of the previous quantifier.  For example, on the 6-"
"character string ``'aaaaaa'``, ``a{3,5}`` will match 5 ``'a'`` characters, "
"while ``a{3,5}?`` will only match 3 characters."
msgstr ""
"Faz com que a ER resultante corresponda de *m* a *n* repetições da ER "
"precedente, tentando corresponder o mínimo de *poucas* repetições possível. "
"Esta é a versão não gulosa do quantificador anterior. Por exemplo, na string "
"de 6 caracteres ``'aaaaaa'``, ``a{3,5}`` irá corresponder a 5 caracteres "
"``'a'``, enquanto ``a{3,5}?`` corresponderá apenas a 3 caracteres."

#: ../../library/re.rst:218
msgid "``{m,n}+``"
msgstr "``{m,n}+``"

#: ../../library/re.rst:206
msgid ""
"Causes the resulting RE to match from *m* to *n* repetitions of the "
"preceding RE, attempting to match as many repetitions as possible *without* "
"establishing any backtracking points. This is the possessive version of the "
"quantifier above. For example, on the 6-character string ``'aaaaaa'``, "
"``a{3,5}+aa`` attempt to match 5 ``'a'`` characters, then, requiring 2 more "
"``'a'``\\ s, will need more characters than available and thus fail, while "
"``a{3,5}aa`` will match with ``a{3,5}`` capturing 5, then 4 ``'a'``\\ s by "
"backtracking and then the final 2 ``'a'``\\ s are matched by the final "
"``aa`` in the pattern. ``x{m,n}+`` is equivalent to ``(?>x{m,n})``."
msgstr ""
"Faz com que a ER resultante corresponda de *m* a *n* repetições da ER "
"anterior, tentando corresponder o maior número possível de repetições *sem* "
"estabelecer nenhum ponto de retrocesso. Esta é a versão possessiva do "
"quantificador acima. Por exemplo, na string de 6 caracteres ``'aaaaaa'``, "
"``a{3,5}+aa`` tenta corresponder 5 caracteres ``'a'``, então, requerer mais "
"2 ``'a'``\\s, precisará de mais caracteres do que os disponíveis e, "
"portanto, falhará, enquanto ``a{3,5}aa`` corresponderá a ``a{3,5}`` "
"capturando 5, depois 4 ``'a'``\\s por retrocesso e então os 2 ``'a'``\\s "
"finais são combinados com o ``aa`` final no padrão. ``x{m,n}+`` é "
"equivalente a ``(?>x{m,n})``."

#: ../../library/re.rst:233
msgid "``\\``"
msgstr "``\\``"

#: ../../library/re.rst:223
msgid ""
"Either escapes special characters (permitting you to match characters like "
"``'*'``, ``'?'``, and so forth), or signals a special sequence; special "
"sequences are discussed below."
msgstr ""
"Ou escapa caracteres especiais (permitindo que você corresponde a caracteres "
"como ``'*'``, ``'?'`` e assim por diante), ou sinaliza uma sequência "
"especial; sequências especiais são discutidas abaixo."

#: ../../library/re.rst:227
msgid ""
"If you're not using a raw string to express the pattern, remember that "
"Python also uses the backslash as an escape sequence in string literals; if "
"the escape sequence isn't recognized by Python's parser, the backslash and "
"subsequent character are included in the resulting string.  However, if "
"Python would recognize the resulting sequence, the backslash should be "
"repeated twice.  This is complicated and hard to understand, so it's highly "
"recommended that you use raw strings for all but the simplest expressions."
msgstr ""
"Se você não estiver usando uma string bruta para expressar o padrão, lembre-"
"se de que o Python também usa a contrabarra como uma sequência de escape em "
"literais de string; se a sequência de escape não for reconhecida pelo "
"analisador sintático do Python, a contrabarra e o caractere subsequente "
"serão incluídos na string resultante. No entanto, se Python reconhecer a "
"sequência resultante, a contrabarra deve ser repetida duas vezes. Isso é "
"complicado e difícil de entender, portanto, é altamente recomendável que "
"você use strings brutas para todas as expressões, exceto as mais simples."

#: ../../library/re.rst:293
msgid "``[]``"
msgstr "``[]``"

#: ../../library/re.rst:239
msgid "Used to indicate a set of characters.  In a set:"
msgstr "Usado para indicar um conjunto de caracteres. Em um conjunto:"

#: ../../library/re.rst:241
msgid ""
"Characters can be listed individually, e.g. ``[amk]`` will match ``'a'``, "
"``'m'``, or ``'k'``."
msgstr ""
"Caracteres podem ser listados individualmente, por exemplo, ``[amk]`` vai "
"corresponder a ``'a'``, ``'m'`` ou ``'k'``."

#: ../../library/re.rst:246
msgid ""
"Ranges of characters can be indicated by giving two characters and "
"separating them by a ``'-'``, for example ``[a-z]`` will match any lowercase "
"ASCII letter, ``[0-5][0-9]`` will match all the two-digits numbers from "
"``00`` to ``59``, and ``[0-9A-Fa-f]`` will match any hexadecimal digit.  If "
"``-`` is escaped (e.g. ``[a\\-z]``) or if it's placed as the first or last "
"character (e.g. ``[-a]`` or ``[a-]``), it will match a literal ``'-'``."
msgstr ""
"Intervalos de caracteres podem ser indicados fornecendo dois caracteres e "
"separando-os por ``'-'``, por exemplo ``[a-z]`` irá corresponder a qualquer "
"letra ASCII minúscula, ``[0-5][0-9]`` irá corresponder a todos os números de "
"dois dígitos de ``00`` a ``59``, e ``[0-9A-Fa-f]`` irá corresponder a "
"qualquer dígito hexadecimal. Se ``-`` for escapado (por exemplo, ``[a\\-"
"z]``) ou se for colocado como o primeiro ou último caractere (por exemplo, "
"``[-a]`` ou ``[a-]``), ele corresponderá a um literal ``'-'``."

#: ../../library/re.rst:253
msgid ""
"Special characters lose their special meaning inside sets.  For example, "
"``[(+*)]`` will match any of the literal characters ``'('``, ``'+'``, "
"``'*'``, or ``')'``."
msgstr ""
"Os caracteres especiais perdem seu significado especial dentro dos "
"conjuntos. Por exemplo, ``[(+*)]`` corresponderá a qualquer um dos "
"caracteres literais ``'('``, ``'+'``, ``'*'`` ou ``')'``."

#: ../../library/re.rst:259
msgid ""
"Character classes such as ``\\w`` or ``\\S`` (defined below) are also "
"accepted inside a set, although the characters they match depend on the "
"flags_ used."
msgstr ""
"Classes de caracteres, como ``\\w`` ou ``\\S`` (definidos abaixo), também "
"são aceitas dentro de um conjunto, embora os caracteres que eles "
"correspondem dependam dos sinalizadores_ usados."

#: ../../library/re.rst:264
msgid ""
"Characters that are not within a range can be matched by :dfn:"
"`complementing` the set.  If the first character of the set is ``'^'``, all "
"the characters that are *not* in the set will be matched.  For example, "
"``[^5]`` will match any character except ``'5'``, and ``[^^]`` will match "
"any character except ``'^'``.  ``^`` has no special meaning if it's not the "
"first character in the set."
msgstr ""
"Os caracteres que não estão dentro de um intervalo podem ser correspondidos :"
"dfn:`complementando` o conjunto. Se o primeiro caractere do conjunto for "
"``'^'``, todos os caracteres que *não* estiverem no conjunto serão "
"correspondidos. Por exemplo, ``[^5]`` irá corresponder a qualquer caractere "
"exceto ``'5'``, e ``[^^]`` irá corresponder a qualquer caractere exceto "
"``'^'``. ``^`` não tem nenhum significado especial se não for o primeiro "
"caractere do conjunto."

#: ../../library/re.rst:271
msgid ""
"To match a literal ``']'`` inside a set, precede it with a backslash, or "
"place it at the beginning of the set.  For example, both ``[()[\\]{}]`` and "
"``[]()[{}]`` will match a right bracket, as well as left bracket, braces, "
"and parentheses."
msgstr ""
"Para corresponder a um ``']'`` literal dentro de um conjunto, preceda-o com "
"uma contrabarra ou coloque-o no início do conjunto. Por exemplo, ``[()[\\]"
"{}]`` e ``[]()[{}]`` vai corresponder ao colchete à direita, assim como o "
"colchete, chave ou parêntese à esquerda."

#: ../../library/re.rst:281
msgid ""
"Support of nested sets and set operations as in `Unicode Technical Standard "
"#18`_ might be added in the future.  This would change the syntax, so to "
"facilitate this change a :exc:`FutureWarning` will be raised in ambiguous "
"cases for the time being. That includes sets starting with a literal ``'['`` "
"or containing literal character sequences ``'--'``, ``'&&'``, ``'~~'``, and "
"``'||'``.  To avoid a warning escape them with a backslash."
msgstr ""
"Suporte para conjuntos aninhados e operações de conjunto como no `Padrão "
"Técnico do Unicode #18`_ podem ser adicionados no futuro. Isso mudaria a "
"sintaxe, então para facilitar essa mudança uma :exc:`FutureWarning` será "
"levantada em casos ambíguos por enquanto. Isso inclui conjuntos que começam "
"com um ``'['`` literal ou contendo sequências de caracteres literais "
"``'--'``, ``'&&'``, ``'~~'`` e ``'||'``. Para evitar um aviso, escape-os com "
"uma contrabarra."

#: ../../library/re.rst:291
msgid ""
":exc:`FutureWarning` is raised if a character set contains constructs that "
"will change semantically in the future."
msgstr ""
":exc:`FutureWarning` é levantada se um conjunto de caracteres contém "
"construções que mudarão semanticamente no futuro."

#: ../../library/re.rst:306
msgid "``|``"
msgstr "``|``"

#: ../../library/re.rst:298
msgid ""
"``A|B``, where *A* and *B* can be arbitrary REs, creates a regular "
"expression that will match either *A* or *B*.  An arbitrary number of REs "
"can be separated by the ``'|'`` in this way.  This can be used inside groups "
"(see below) as well.  As the target string is scanned, REs separated by "
"``'|'`` are tried from left to right. When one pattern completely matches, "
"that branch is accepted. This means that once *A* matches, *B* will not be "
"tested further, even if it would produce a longer overall match.  In other "
"words, the ``'|'`` operator is never greedy.  To match a literal ``'|'``, "
"use ``\\|``, or enclose it inside a character class, as in ``[|]``."
msgstr ""
"``A|B``, onde *A* e *B* podem ser ERs arbitrárias, cria uma expressão "
"regular que corresponderá a *A* ou *B*. Um número arbitrário de ERs pode ser "
"separado por ``'|'`` desta forma. Isso também pode ser usado dentro de "
"grupos (veja abaixo). Conforme a string alvo é percorrida, ERs separadas por "
"``'|'`` são tentadas da esquerda para a direita. Quando um padrão "
"corresponde completamente, essa ramificação é aceita. Isso significa que, "
"assim que *A* corresponder, *B* não será testado posteriormente, mesmo que "
"produza uma correspondência geral mais longa. Em outras palavras, o operador "
"``'|'`` nunca é guloso. Para corresponder a um ``'|'`` literal, use ``\\|``, "
"ou coloque-o dentro de uma classe de caractere, como em ``[|]``."

#: ../../library/re.rst:316
msgid "``(...)``"
msgstr "``(...)``"

#: ../../library/re.rst:312
msgid ""
"Matches whatever regular expression is inside the parentheses, and indicates "
"the start and end of a group; the contents of a group can be retrieved after "
"a match has been performed, and can be matched later in the string with the "
"``\\number`` special sequence, described below.  To match the literals "
"``'('`` or ``')'``, use ``\\(`` or ``\\)``, or enclose them inside a "
"character class: ``[(]``, ``[)]``."
msgstr ""
"Corresponde a qualquer expressão regular que esteja entre parênteses e "
"indica o início e o fim de um grupo; o conteúdo de um grupo pode ser "
"recuperado após uma correspondência ter sido realizada e pode ser "
"correspondido posteriormente na string com a sequência especial "
"``\\número``, descrita abaixo. Para corresponder aos literais ``'('`` ou "
"``')'``, use ``\\(`` ou ``\\)``, ou coloque-os dentro de uma classe de "
"caracteres: ``[(]``, ``[)]``."

#: ../../library/re.rst:325
msgid "``(?...)``"
msgstr "``(?...)``"

#: ../../library/re.rst:321
msgid ""
"This is an extension notation (a ``'?'`` following a ``'('`` is not "
"meaningful otherwise).  The first character after the ``'?'`` determines "
"what the meaning and further syntax of the construct is. Extensions usually "
"do not create a new group; ``(?P<name>...)`` is the only exception to this "
"rule. Following are the currently supported extensions."
msgstr ""
"Esta é uma notação de extensão (um ``'?'`` seguindo um ``'('`` não é "
"significativo de outra forma). O primeiro caractere após o ``'?'`` determina "
"qual o significado e sintaxe posterior do construtor. As extensões "
"normalmente não criam um novo grupo; ``(?P<nome>...)`` é a única exceção a "
"esta regra. A seguir estão as extensões atualmente suportadas."

#: ../../library/re.rst:348
msgid "``(?aiLmsux)``"
msgstr "``(?aiLmsux)``"

#: ../../library/re.rst:328
msgid ""
"(One or more letters from the set ``'a'``, ``'i'``, ``'L'``, ``'m'``, "
"``'s'``, ``'u'``, ``'x'``.) The group matches the empty string; the letters "
"set the corresponding flags for the entire regular expression:"
msgstr ""
"(Uma ou mais letras do conjunto ``'a'``, ``'i'``, ``'L'``, ``'m'``, ``'s'``, "
"``'u'``, ``'x'``.) O grupo corresponde à string vazia; as letras definem os "
"sinalizadores correspondentes para toda a expressão regular:"

#: ../../library/re.rst:333 ../../library/re.rst:365
msgid ":const:`re.A` (ASCII-only matching)"
msgstr ":const:`re.A` (correspondência somente ASCII)"

#: ../../library/re.rst:334 ../../library/re.rst:366
msgid ":const:`re.I` (ignore case)"
msgstr ":const:`re.I` (ignorar maiúsculas/minúsculas)"

#: ../../library/re.rst:335 ../../library/re.rst:367
msgid ":const:`re.L` (locale dependent)"
msgstr ":const:`re.L` (dependente da localidade)"

#: ../../library/re.rst:336 ../../library/re.rst:368
msgid ":const:`re.M` (multi-line)"
msgstr ":const:`re.M` (multi-linha)"

#: ../../library/re.rst:337 ../../library/re.rst:369
msgid ":const:`re.S` (dot matches all)"
msgstr ":const:`re.S` (. corresponde a tudo)"

#: ../../library/re.rst:338 ../../library/re.rst:370
msgid ":const:`re.U` (Unicode matching)"
msgstr ":const:`re.U` (correspondência Unicode)"

#: ../../library/re.rst:339 ../../library/re.rst:371
msgid ":const:`re.X` (verbose)"
msgstr ":const:`re.X` (verboso)"

#: ../../library/re.rst:341
msgid ""
"(The flags are described in :ref:`contents-of-module-re`.) This is useful if "
"you wish to include the flags as part of the regular expression, instead of "
"passing a *flag* argument to the :func:`re.compile` function. Flags should "
"be used first in the expression string."
msgstr ""
"(Os sinalizadores são descritos em :ref:`contents-of-module-re`.) Isso é "
"útil se você deseja incluir os sinalizadores como parte da expressão "
"regular, em vez de passar um argumento *flag* para a função :func:`re."
"compile`. Os sinalizadores devem ser usados primeiro na string de expressão."

#: ../../library/re.rst:347
msgid "This construction can only be used at the start of the expression."
msgstr "Esta construção só pode ser usada no início da expressão."

#: ../../library/re.rst:356
msgid "``(?:...)``"
msgstr "``(?:...)``"

#: ../../library/re.rst:353
msgid ""
"A non-capturing version of regular parentheses.  Matches whatever regular "
"expression is inside the parentheses, but the substring matched by the group "
"*cannot* be retrieved after performing a match or referenced later in the "
"pattern."
msgstr ""
"Uma versão sem captura de parênteses regulares. Corresponde a qualquer "
"expressão regular que esteja entre parênteses, mas a substring correspondida "
"pelo grupo *não pode* ser recuperada após realizar uma correspondência ou "
"referenciada posteriormente no padrão."

#: ../../library/re.rst:388
msgid "``(?aiLmsux-imsx:...)``"
msgstr "``(?aiLmsux-imsx:...)``"

#: ../../library/re.rst:359
msgid ""
"(Zero or more letters from the set ``'a'``, ``'i'``, ``'L'``, ``'m'``, "
"``'s'``, ``'u'``, ``'x'``, optionally followed by ``'-'`` followed by one or "
"more letters from the ``'i'``, ``'m'``, ``'s'``, ``'x'``.) The letters set "
"or remove the corresponding flags for the part of the expression:"
msgstr ""
"(Zero ou mais letras do conjunto ``'a'``, ``'i'``, ``'L'``, ``'m'``, "
"``'s'``, ``'u'``, ``'x'``, opcionalmente seguidas por ``'-'`` seguido por "
"uma ou mais letras do conjunto ``'i'``, ``'m'``, ``'s'``, ``'x'``.) O "
"conjunto de letras define ou remove os sinalizadores correspondentes para a "
"parte da expressão:"

#: ../../library/re.rst:373
msgid "(The flags are described in :ref:`contents-of-module-re`.)"
msgstr "(Os sinalizadores são descritos em :ref:`contents-of-module-re`.)"

#: ../../library/re.rst:375
msgid ""
"The letters ``'a'``, ``'L'`` and ``'u'`` are mutually exclusive when used as "
"inline flags, so they can't be combined or follow ``'-'``.  Instead, when "
"one of them appears in an inline group, it overrides the matching mode in "
"the enclosing group.  In Unicode patterns ``(?a:...)`` switches to ASCII-"
"only matching, and ``(?u:...)`` switches to Unicode matching (default).  In "
"bytes patterns ``(?L:...)`` switches to locale dependent matching, and ``(?"
"a:...)`` switches to ASCII-only matching (default). This override is only in "
"effect for the narrow inline group, and the original matching mode is "
"restored outside of the group."
msgstr ""
"As letras ``'a'``, ``'L'`` e ``'u'`` são mutuamente exclusivas quando usadas "
"como sinalizadores em linha, portanto, não podem ser correspondidas ou "
"seguir ``'-'``. Em vez disso, quando um deles aparece em um grupo embutido, "
"ele substitui o modo de correspondência no grupo anexo. Em padrões Unicode "
"``(?a:...)`` muda para correspondência somente ASCII, e ``(?u:...)`` muda "
"para correspondência Unicode (padrão). Em padrões de bytes ``(?L:...)`` muda "
"para a correspondência dependente da localidade, e ``(?a:...)`` muda para "
"correspondência apenas ASCII (padrão). Esta substituição só tem efeito para "
"o grupo estreito em linha e o modo de correspondência original é restaurado "
"fora do grupo."

#: ../../library/re.rst:387
msgid "The letters ``'a'``, ``'L'`` and ``'u'`` also can be used in a group."
msgstr ""
"As letras ``'a'``, ``'L'`` e ``'u'`` também podem ser usadas em um grupo."

#: ../../library/re.rst:403
msgid "``(?>...)``"
msgstr "``(?>...)``"

#: ../../library/re.rst:391
msgid ""
"Attempts to match ``...`` as if it was a separate regular expression, and if "
"successful, continues to match the rest of the pattern following it. If the "
"subsequent pattern fails to match, the stack can only be unwound to a point "
"*before* the ``(?>...)`` because once exited, the expression, known as an :"
"dfn:`atomic group`, has thrown away all stack points within itself. Thus, "
"``(?>.*).`` would never match anything because first the ``.*`` would match "
"all characters possible, then, having nothing left to match, the final ``.`` "
"would fail to match. Since there are no stack points saved in the Atomic "
"Group, and there is no stack point before it, the entire expression would "
"thus fail to match."
msgstr ""
"Tenta corresponder ``...`` como se fosse uma expressão regular separada e, "
"se for bem-sucedida, continua correspondendo ao restante do padrão que a "
"segue. Se o padrão subsequente não corresponder, a pilha só pode ser "
"desenrolada até um ponto *antes* do ``(?>...)`` porque, uma vez encerrada, a "
"expressão, conhecida como :dfn:`grupo atômico`, jogou fora todos os pontos "
"de pilha dentro de si. Assim, ``(?>.*).`` nunca corresponderia a nada porque "
"primeiro o ``.*`` corresponderia a todos os caracteres possíveis, então, não "
"tendo mais nada para corresponder, o ``.`` final falharia em corresponder. "
"Como não há pontos de pilha salvos no Grupo Atômico e não há ponto de pilha "
"antes dele, a expressão inteira não corresponderia."

#: ../../library/re.rst:434
msgid "``(?P<name>...)``"
msgstr "``(?P<nome>...)``"

#: ../../library/re.rst:408
msgid ""
"Similar to regular parentheses, but the substring matched by the group is "
"accessible via the symbolic group name *name*.  Group names must be valid "
"Python identifiers, and each group name must be defined only once within a "
"regular expression.  A symbolic group is also a numbered group, just as if "
"the group were not named."
msgstr ""

#: ../../library/re.rst:414
msgid ""
"Named groups can be referenced in three contexts.  If the pattern is ``(?"
"P<quote>['\"]).*?(?P=quote)`` (i.e. matching a string quoted with either "
"single or double quotes):"
msgstr ""
"Grupos nomeados podem ser referenciados em três contextos. Se o padrão for "
"``(?P<quote>['\"]).*?(?P=quote)`` (ou seja, corresponder a uma string entre "
"aspas simples ou duplas):"

#: ../../library/re.rst:419
msgid "Context of reference to group \"quote\""
msgstr "Contexto de referência ao grupo \"quote\""

#: ../../library/re.rst:419
msgid "Ways to reference it"
msgstr "Formas de referenciá-lo"

#: ../../library/re.rst:421
msgid "in the same pattern itself"
msgstr "no mesmo padrão"

#: ../../library/re.rst:421
msgid "``(?P=quote)`` (as shown)"
msgstr "``(?P=quote)`` (como mostrado)"

#: ../../library/re.rst:422 ../../library/re.rst:429
msgid "``\\1``"
msgstr "``\\1``"

#: ../../library/re.rst:424
msgid "when processing match object *m*"
msgstr "ao processar a correspondência do objeto *m*"

#: ../../library/re.rst:424
msgid "``m.group('quote')``"
msgstr "``m.group('quote')``"

#: ../../library/re.rst:425
msgid "``m.end('quote')`` (etc.)"
msgstr "``m.end('quote')`` (etc.)"

#: ../../library/re.rst:427
msgid "in a string passed to the *repl* argument of ``re.sub()``"
msgstr "em uma string passada para o argumento *repl* de ``re.sub()``"

#: ../../library/re.rst:427
msgid "``\\g<quote>``"
msgstr "``\\g<quote>``"

#: ../../library/re.rst:428
msgid "``\\g<1>``"
msgstr "``\\g<1>``"

#: ../../library/re.rst:432
msgid ""
"Group *name* containing characters outside the ASCII range (``b'\\x00'``-"
"``b'\\x7f'``) in :class:`bytes` patterns."
msgstr ""

#: ../../library/re.rst:440
msgid "``(?P=name)``"
msgstr "``(?P=nome)``"

#: ../../library/re.rst:439
msgid ""
"A backreference to a named group; it matches whatever text was matched by "
"the earlier group named *name*."
msgstr ""
"Uma referência anterior a um grupo nomeado; corresponde a qualquer texto que "
"corresponda ao grupo anterior denominado *nome*."

#: ../../library/re.rst:445
msgid "``(?#...)``"
msgstr "``(?#...)``"

#: ../../library/re.rst:445
msgid "A comment; the contents of the parentheses are simply ignored."
msgstr "Um comentário; o conteúdo dos parênteses é simplesmente ignorado."

#: ../../library/re.rst:452
msgid "``(?=...)``"
msgstr "``(?=...)``"

#: ../../library/re.rst:450
msgid ""
"Matches if ``...`` matches next, but doesn't consume any of the string.  "
"This is called a :dfn:`lookahead assertion`.  For example, ``Isaac (?"
"=Asimov)`` will match ``'Isaac '`` only if it's followed by ``'Asimov'``."
msgstr ""
"Corresponde se ``...`` corresponder a próxima, mas não consome nada da "
"string. Isso é chamado de :dfn:`asserção preditiva`. Por exemplo, ``Isaac (?"
"=Asimov)`` corresponderá a ``'Isaac '`` apenas se for seguido por "
"``'Asimov'``."

#: ../../library/re.rst:459
msgid "``(?!...)``"
msgstr "``(?!...)``"

#: ../../library/re.rst:457
msgid ""
"Matches if ``...`` doesn't match next.  This is a :dfn:`negative lookahead "
"assertion`. For example, ``Isaac (?!Asimov)`` will match ``'Isaac '`` only "
"if it's *not* followed by ``'Asimov'``."
msgstr ""
"Corresponde se ``...`` não corresponder a próxima. Isso é uma :dfn:`asserção "
"preditiva negativa`. Por exemplo, ``Isaac (?!Asimov)`` corresponderá a "
"``'Isaac '`` apenas se *não* for seguido por ``'Asimov'``."

#: ../../library/re.rst:486
msgid "``(?<=...)``"
msgstr "``(?<=...)``"

#: ../../library/re.rst:464
msgid ""
"Matches if the current position in the string is preceded by a match for "
"``...`` that ends at the current position.  This is called a :dfn:`positive "
"lookbehind assertion`. ``(?<=abc)def`` will find a match in ``'abcdef'``, "
"since the lookbehind will back up 3 characters and check if the contained "
"pattern matches. The contained pattern must only match strings of some fixed "
"length, meaning that ``abc`` or ``a|b`` are allowed, but ``a*`` and ``a{3,4}"
"`` are not.  Note that patterns which start with positive lookbehind "
"assertions will not match at the beginning of the string being searched; you "
"will most likely want to use the :func:`search` function rather than the :"
"func:`match` function:"
msgstr ""
"Corresponde se a posição atual na string for precedida por uma "
"correspondência para ``...`` que termina na posição atual. Isso é chamado "
"de :dfn:`asserção retroativa positiva`. ``(?<=abc)def`` irá encontrar uma "
"correspondência em ``'abcdef'``, uma vez que a expressão regular vai voltar "
"3 caracteres e verificar se o padrão contido corresponde. O padrão contido "
"deve corresponder apenas a strings de algum comprimento fixo, o que "
"significa que ``abc`` ou ``a|b`` são permitidos, mas ``a*`` e ``a{3,4}`` não "
"são. Observe que os padrões que começam com asserções retroativas positivas "
"não corresponderão ao início da string que está sendo pesquisada; você "
"provavelmente desejará usar a função :func:`search` em vez da função :func:"
"`match`:"

#: ../../library/re.rst:479
msgid "This example looks for a word following a hyphen:"
msgstr "Este exemplo procura por uma palavra logo após um hífen:"

#: ../../library/re.rst:485
msgid "Added support for group references of fixed length."
msgstr "Adicionado suporte para referências de grupo de comprimento fixo."

#: ../../library/re.rst:495
msgid "``(?<!...)``"
msgstr "``(?<!...)``"

#: ../../library/re.rst:491
msgid ""
"Matches if the current position in the string is not preceded by a match for "
"``...``.  This is called a :dfn:`negative lookbehind assertion`.  Similar to "
"positive lookbehind assertions, the contained pattern must only match "
"strings of some fixed length.  Patterns which start with negative lookbehind "
"assertions may match at the beginning of the string being searched."
msgstr ""
"Corresponde se a posição atual na string não for precedida por uma "
"correspondência para ``...``. Isso é chamado de :dfn:`asserção retroativa "
"negativa`. Semelhante às asserções retroativas positivas, o padrão contido "
"deve corresponder apenas a strings de algum comprimento fixo. Os padrões que "
"começam com asserções retroativas negativas podem corresponder ao início da "
"string que está sendo pesquisada."

#: ../../library/re.rst:512
msgid "``(?(id/name)yes-pattern|no-pattern)``"
msgstr "``(?(id/nome)padrão-sim|padrão-não)``"

#: ../../library/re.rst:501
msgid ""
"Will try to match with ``yes-pattern`` if the group with given *id* or "
"*name* exists, and with ``no-pattern`` if it doesn't. ``no-pattern`` is "
"optional and can be omitted. For example, ``(<)?(\\w+@\\w+(?:\\.\\w+)+)(?"
"(1)>|$)`` is a poor email matching pattern, which will match with "
"``'<user@host.com>'`` as well as ``'user@host.com'``, but not with "
"``'<user@host.com'`` nor ``'user@host.com>'``."
msgstr ""
"Tentará corresponder com ``padrão-sim`` se o grupo com determinado *id* ou "
"*nome* existir, e com ``padrão-não`` se não existir. ``padrão-não`` é "
"opcional e pode ser omitido. Por exemplo,  ``(<)?(\\w+@\\w+(?:\\.\\w+)+)(?"
"(1)>|$)`` é um padrão ruim de correspondência de e-mail, que corresponderá "
"com ``'<usuario@host.com>'`` bem como ``'usuario@host.com'``, mas não com "
"``'<usuario@host.com>'`` nem ``'usuario@host.com>'``."

#: ../../library/re.rst:508 ../../library/re.rst:1084
msgid ""
"Group *id* containing anything except ASCII digits. Group *name* containing "
"characters outside the ASCII range (``b'\\x00'``-``b'\\x7f'``) in :class:"
"`bytes` replacement strings."
msgstr ""

#: ../../library/re.rst:516
msgid ""
"The special sequences consist of ``'\\'`` and a character from the list "
"below. If the ordinary character is not an ASCII digit or an ASCII letter, "
"then the resulting RE will match the second character.  For example, ``\\$`` "
"matches the character ``'$'``."
msgstr ""
"As sequências especiais consistem em ``'\\'`` e um caractere da lista "
"abaixo. Se o caractere comum não for um dígito ASCII ou uma letra ASCII, a "
"ER resultante corresponderá ao segundo caractere. Por exemplo, ``\\$`` "
"corresponde ao caractere ``'$'``."

#: ../../library/re.rst:531
msgid "``\\number``"
msgstr "``\\número``"

#: ../../library/re.rst:524
msgid ""
"Matches the contents of the group of the same number.  Groups are numbered "
"starting from 1.  For example, ``(.+) \\1`` matches ``'the the'`` or ``'55 "
"55'``, but not ``'thethe'`` (note the space after the group).  This special "
"sequence can only be used to match one of the first 99 groups.  If the first "
"digit of *number* is 0, or *number* is 3 octal digits long, it will not be "
"interpreted as a group match, but as the character with octal value "
"*number*. Inside the ``'['`` and ``']'`` of a character class, all numeric "
"escapes are treated as characters."
msgstr ""
"Corresponde ao conteúdo do grupo de mesmo número. Os grupos são numerados a "
"partir de 1. Por exemplo, ``(.+) \\1`` corresponde a ``'de de'`` ou ``'55 "
"55'``, mas não ``'dede'`` (note o espaço após o grupo). Esta sequência "
"especial só pode ser usada para corresponder a um dos primeiros 99 grupos. "
"Se o primeiro dígito de *número* for 0, ou *número* tiver 3 dígitos octais "
"de comprimento, ele não será interpretado como uma correspondência de grupo, "
"mas como o caractere com *número* de valor octal. Dentro de ``'['`` e "
"``']'`` de uma classe de caracteres, todos os escapes numéricos são tratados "
"como caracteres."

#: ../../library/re.rst:536
msgid "``\\A``"
msgstr "``\\A``"

#: ../../library/re.rst:536
msgid "Matches only at the start of the string."
msgstr "Corresponde apenas ao início da string."

#: ../../library/re.rst:558
msgid "``\\b``"
msgstr "``\\b``"

#: ../../library/re.rst:541
msgid ""
"Matches the empty string, but only at the beginning or end of a word. A word "
"is defined as a sequence of word characters. Note that formally, ``\\b`` is "
"defined as the boundary between a ``\\w`` and a ``\\W`` character (or vice "
"versa), or between ``\\w`` and the beginning or end of the string. This "
"means that ``r'\\bat\\b'`` matches ``'at'``, ``'at.'``, ``'(at)'``, and "
"``'as at ay'`` but not ``'attempt'`` or ``'atlas'``."
msgstr ""
"Corresponde à string vazia, mas apenas no início ou no final de uma palavra. "
"Uma palavra é definida como uma sequência de caracteres de palavras. Observe "
"que, formalmente, ``\\b`` é definido como a fronteira entre um caractere "
"``\\w`` e um ``\\W`` (ou vice-versa), ou entre ``\\w`` e o início/fim da "
"string. Isso significa que ``r'\\bat\\b'`` corresponde a ``'at'``, "
"``'at.'``, ``'(at)'``, ``'as at ay'``, mas não a ``'attempt'`` ou "
"``'atlas'``."

#: ../../library/re.rst:549
msgid ""
"The default word characters in Unicode (str) patterns are Unicode "
"alphanumerics and the underscore, but this can be changed by using the :py:"
"const:`~re.ASCII` flag. Word boundaries are determined by the current locale "
"if the :py:const:`~re.LOCALE` flag is used."
msgstr ""
"Os caracteres de palavras predefinidos em padrões Unicode (str) são "
"alfanuméricos Unicode e o sublinhado, mas isso pode ser alterado usando o "
"sinalizador :py:const:`~re.ASCII`. Os limites das palavras são determinados "
"pela localidade atual se o sinalizador :py:const:`~re.LOCALE` for usado."

#: ../../library/re.rst:557
msgid ""
"Inside a character range, ``\\b`` represents the backspace character, for "
"compatibility with Python's string literals."
msgstr ""
"Dentro de um intervalo de caracteres, ``\\b`` representa o caractere "
"backspace, para compatibilidade com strings literais do Python."

#: ../../library/re.rst:572
msgid "``\\B``"
msgstr "``\\B``"

#: ../../library/re.rst:563
msgid ""
"Matches the empty string, but only when it is *not* at the beginning or end "
"of a word. This means that ``r'at\\B'`` matches ``'athens'``, ``'atom'``, "
"``'attorney'``, but not ``'at'``, ``'at.'``, or ``'at!'``. ``\\B`` is the "
"opposite of ``\\b``, so word characters in Unicode (str) patterns are "
"Unicode alphanumerics or the underscore, although this can be changed by "
"using the :py:const:`~re.ASCII` flag. Word boundaries are determined by the "
"current locale if the :py:const:`~re.LOCALE` flag is used."
msgstr ""
"Corresponde à string vazia, mas apenas quando *não* estiver no início ou no "
"final de uma palavra. Isso significa que ``r'at\\B'`` corresponde a "
"``'athens'``, ``'atom'``, ``'attorney'``, mas não ``'at'``, ``'at.'`` ou "
"``'at!'``. ``\\B`` é exatamente o oposto de ``\\b``, então caracteres de "
"palavras em padrões Unicode são alfanuméricos Unicode ou o sublinhado, "
"embora isso possa ser alterado usando o sinalizador :const:`ASCII`. Os "
"limites das palavras são determinados pela localidade atual se o "
"sinalizador :const:`LOCALE` for usado."

#: ../../library/re.rst:588
msgid "``\\d``"
msgstr "``\\d``"

#: ../../library/re.rst:584 ../../library/re.rst:607 ../../library/re.rst:630
msgid "For Unicode (str) patterns:"
msgstr "Para padrões Unicode (str):"

#: ../../library/re.rst:578
msgid ""
"Matches any Unicode decimal digit (that is, any character in Unicode "
"character category `[Nd]`__). This includes ``[0-9]``, and also many other "
"digit characters."
msgstr ""
"Corresponde a qualquer dígito decimal Unicode (ou seja, qualquer caractere "
"na categoria de caractere Unicode `[Nd]`__). Isso inclui ``[0-9]``, e também "
"muitos outros caracteres de dígitos."

#: ../../library/re.rst:582
msgid "Matches ``[0-9]`` if the :py:const:`~re.ASCII` flag is used."
msgstr ""
"Se o sinalizador :const:`ASCII` for usado, apenas ``[0-9]`` será "
"correspondido."

#: ../../library/re.rst:588 ../../library/re.rst:611 ../../library/re.rst:636
msgid "For 8-bit (bytes) patterns:"
msgstr "Para padrões de 8 bits (isto é, bytes):"

#: ../../library/re.rst:587
msgid ""
"Matches any decimal digit in the ASCII character set; this is equivalent to "
"``[0-9]``."
msgstr ""
"Corresponde a qualquer dígito decimal no conjunto de caracteres ASCII; isso "
"é equivalente a ``[0-9]``."

#: ../../library/re.rst:596
msgid "``\\D``"
msgstr "``\\D``"

#: ../../library/re.rst:593
msgid ""
"Matches any character which is not a decimal digit. This is the opposite of "
"``\\d``."
msgstr ""
"Corresponde a qualquer caractere que não seja um dígito decimal. Isso é o "
"oposto de ``\\d``."

#: ../../library/re.rst:596
msgid "Matches ``[^0-9]`` if the :py:const:`~re.ASCII` flag is used."
msgstr ""
"Se o sinalizador :const:`~re.ASCII` for usado, apenas ``[^0-9]`` será "
"correspondido."

#: ../../library/re.rst:611
msgid "``\\s``"
msgstr "``\\s``"

#: ../../library/re.rst:602
msgid ""
"Matches Unicode whitespace characters (which includes "
"``[ \\t\\n\\r\\f\\v]``, and also many other characters, for example the non-"
"breaking spaces mandated by typography rules in many languages)."
msgstr ""
"Corresponde a caracteres de espaço em branco Unicode (que inclui "
"``[ \\t\\n\\r\\f\\v]``, e também muitos outros caracteres, como, por "
"exemplo, os espaços não separáveis exigidos pelas regras de tipografia em "
"muitos idiomas)."

#: ../../library/re.rst:607
msgid ""
"Matches ``[ \\t\\n\\r\\f\\v]`` if the :py:const:`~re.ASCII` flag is used."
msgstr ""
"Se o sinalizador  :const:`~re.ASCII` for usado, apenas "
"``[ \\t\\n\\r\\f\\v]`` é correspondido."

#: ../../library/re.rst:610
msgid ""
"Matches characters considered whitespace in the ASCII character set; this is "
"equivalent to ``[ \\t\\n\\r\\f\\v]``."
msgstr ""
"Corresponde a caracteres considerados espaços em branco no conjunto de "
"caracteres ASCII; isso é equivalente a ``[ \\t\\n\\r\\f\\v]``."

#: ../../library/re.rst:619
msgid "``\\S``"
msgstr "``\\S``"

#: ../../library/re.rst:616
msgid ""
"Matches any character which is not a whitespace character. This is the "
"opposite of ``\\s``."
msgstr ""
"Corresponde a qualquer caractere que não seja um espaço em branco. Isso é o "
"oposto de ``\\s``."

#: ../../library/re.rst:619
msgid ""
"Matches ``[^ \\t\\n\\r\\f\\v]`` if the :py:const:`~re.ASCII` flag is used."
msgstr ""
"Se o sinalizador  :const:`~re.ASCII` for usado, apenas ``[^ "
"\\t\\n\\r\\f\\v]`` é correspondido."

#: ../../library/re.rst:636
msgid "``\\w``"
msgstr "``\\w``"

#: ../../library/re.rst:625
msgid ""
"Matches Unicode word characters; this includes all Unicode alphanumeric "
"characters (as defined by :py:meth:`str.isalnum`), as well as the underscore "
"(``_``)."
msgstr ""
"Corresponde a caracteres de palavras Unicode; isso inclui todos os "
"caracteres alfanuméricos Unicode (conforme definido por :py:meth:`str."
"isalnum`), bem como o sublinhado (``_``)."

#: ../../library/re.rst:630
msgid "Matches ``[a-zA-Z0-9_]`` if the :py:const:`~re.ASCII` flag is used."
msgstr ""
"Se o sinalizador :const:`~re.ASCII` for usado, apenas ``[a-zA-Z0-9_]`` será "
"correspondido."

#: ../../library/re.rst:633
msgid ""
"Matches characters considered alphanumeric in the ASCII character set; this "
"is equivalent to ``[a-zA-Z0-9_]``. If the :py:const:`~re.LOCALE` flag is "
"used, matches characters considered alphanumeric in the current locale and "
"the underscore."
msgstr ""
"Corresponde a caracteres considerados alfanuméricos no conjunto de "
"caracteres ASCII; isso é equivalente a ``[a-zA-Z0-9_]``. Se o sinalizador :"
"py:const:`~re.LOCALE` for usado, corresponde aos caracteres considerados "
"alfanuméricos na localidade atual e o sublinhado."

#: ../../library/re.rst:650
msgid "``\\W``"
msgstr "``\\W``"

#: ../../library/re.rst:641
msgid ""
"Matches any character which is not a word character. This is the opposite of "
"``\\w``. By default, matches non-underscore (``_``) characters for which :py:"
"meth:`str.isalnum` returns ``False``."
msgstr ""
"Corresponde a qualquer caractere que não seja um caractere de palavra. Isso "
"é o oposto de ``\\w``. Por padrão, corresponde a caracteres que não são "
"sublinhados (``_``) para os quais :py:meth:`str.isalnum` retorna ``False``."

#: ../../library/re.rst:646
msgid "Matches ``[^a-zA-Z0-9_]`` if the :py:const:`~re.ASCII` flag is used."
msgstr ""
"Se o sinalizador :const:`~re.ASCII` for usado, apenas ``[^a-zA-Z0-9_]`` será "
"correspondido."

#: ../../library/re.rst:648
msgid ""
"If the :py:const:`~re.LOCALE` flag is used, matches characters which are "
"neither alphanumeric in the current locale nor the underscore."
msgstr ""
"Se o sinalizador :py:const:`~re.LOCALE` for usado, corresponde a caracteres "
"que não são alfanuméricos na localidade atual nem ao sublinhado."

#: ../../library/re.rst:655
msgid "``\\Z``"
msgstr "``\\Z``"

#: ../../library/re.rst:655
msgid "Matches only at the end of the string."
msgstr "Corresponde apenas ao final da string."

#: ../../library/re.rst:671
msgid ""
"Most of the standard escapes supported by Python string literals are also "
"accepted by the regular expression parser::"
msgstr ""
"A maioria dos escapes padrão suportados por literais de string Python também "
"são aceitos pelo analisador sintático de expressão regular:"

#: ../../library/re.rst:678
msgid ""
"(Note that ``\\b`` is used to represent word boundaries, and means "
"\"backspace\" only inside character classes.)"
msgstr ""
"(Observe que ``\\b`` é usado para representar limites de palavras e "
"significa fazer \"backspace\" apenas dentro das classes de caracteres.)"

#: ../../library/re.rst:681
msgid ""
"``'\\u'``, ``'\\U'``, and ``'\\N'`` escape sequences are only recognized in "
"Unicode (str) patterns. In bytes patterns they are errors. Unknown escapes "
"of ASCII letters are reserved for future use and treated as errors."
msgstr ""
"As sequências de escape ``'\\u'``, ``'\\U'`` e ``'\\N'`` são reconhecidas "
"apenas em padrões Unicode (str). Em padrões de bytes, eles são erros. "
"Escapes desconhecidos de letras ASCII são reservados para uso futuro e "
"tratados como erros."

#: ../../library/re.rst:687
msgid ""
"Octal escapes are included in a limited form.  If the first digit is a 0, or "
"if there are three octal digits, it is considered an octal escape. "
"Otherwise, it is a group reference.  As for string literals, octal escapes "
"are always at most three digits in length."
msgstr ""
"Os escapes octais são incluídos em um formulário limitado. Se o primeiro "
"dígito for 0, ou se houver três dígitos octais, é considerado um escape "
"octal. Caso contrário, é uma referência de grupo. Quanto aos literais de "
"string, os escapes octais têm sempre no máximo três dígitos."

#: ../../library/re.rst:692
msgid "The ``'\\u'`` and ``'\\U'`` escape sequences have been added."
msgstr "As sequências de escape ``'\\u'`` e ``'\\U'`` foram adicionadas."

#: ../../library/re.rst:695
msgid ""
"Unknown escapes consisting of ``'\\'`` and an ASCII letter now are errors."
msgstr ""
"Escapes desconhecidos consistindo em ``'\\'`` e uma letra ASCII agora são "
"erros."

#: ../../library/re.rst:698
msgid ""
"The :samp:`'\\\\N\\\\{{name}\\\\}'` escape sequence has been added. As in "
"string literals, it expands to the named Unicode character (e.g. ``'\\N{EM "
"DASH}'``)."
msgstr ""
"A sequência de escape :samp:`'\\\\N\\\\{{name}\\\\}'` foi adicionada. Como "
"em literais de string, ela se expande para o caractere Unicode nomeado (por "
"exemplo, ``'\\N{EM DASH}'``)."

#: ../../library/re.rst:706
msgid "Module Contents"
msgstr "Conteúdo do módulo"

#: ../../library/re.rst:708
msgid ""
"The module defines several functions, constants, and an exception. Some of "
"the functions are simplified versions of the full featured methods for "
"compiled regular expressions.  Most non-trivial applications always use the "
"compiled form."
msgstr ""
"O módulo define várias funções, constantes e uma exceção. Algumas das "
"funções são versões simplificadas dos métodos completos para expressões "
"regulares compiladas. A maioria das aplicações não triviais sempre usa a "
"forma compilada."

#: ../../library/re.rst:715
msgid "Flags"
msgstr "Sinalizadores"

#: ../../library/re.rst:717
msgid ""
"Flag constants are now instances of :class:`RegexFlag`, which is a subclass "
"of :class:`enum.IntFlag`."
msgstr ""
"Constantes de sinalizadores agora são instâncias de :class:`RegexFlag`, que "
"é uma subclasse de :class:`enum.IntFlag`."

#: ../../library/re.rst:724
msgid ""
"An :class:`enum.IntFlag` class containing the regex options listed below."
msgstr ""
"Uma classe :class:`enum.IntFlag` contendo as opções de regex listadas abaixo."

#: ../../library/re.rst:726
msgid "- added to ``__all__``"
msgstr "- adicionada a ``__all__``"

#: ../../library/re.rst:731
msgid ""
"Make ``\\w``, ``\\W``, ``\\b``, ``\\B``, ``\\d``, ``\\D``, ``\\s`` and "
"``\\S`` perform ASCII-only matching instead of full Unicode matching.  This "
"is only meaningful for Unicode (str) patterns, and is ignored for bytes "
"patterns."
msgstr ""
"Faz com que ``\\w``, ``\\W``, ``\\b``, ``\\B``, ``\\d``, ``\\D``, ``\\s`` e "
"``\\S`` executem a correspondência somente ASCII em vez da correspondência "
"Unicode completa. Isso é significativo apenas para padrões Unicode (str) e é "
"ignorado para padrões de bytes."

#: ../../library/re.rst:735
msgid "Corresponds to the inline flag ``(?a)``."
msgstr "Corresponde ao sinalizador em linha ``(?a)``."

#: ../../library/re.rst:739
msgid ""
"The :py:const:`~re.U` flag still exists for backward compatibility, but is "
"redundant in Python 3 since matches are Unicode by default for ``str`` "
"patterns, and Unicode matching isn't allowed for bytes patterns. :py:const:"
"`~re.UNICODE` and the inline flag ``(?u)`` are similarly redundant."
msgstr ""
"O sinalizador :py:const:`~re.U` ainda existe para compatibilidade com "
"versões anteriores, mas é redundante no Python 3, pois as correspondências "
"são feitas em Unicode por padrão para padrões de ``str`` e correspondência "
"Unicode não é permitida para padrões de \"bytes\". :py:const:`~re.UNICODE` e "
"o sinalizador em linha ``(?u)`` são igualmente redundantes."

#: ../../library/re.rst:748
msgid "Display debug information about compiled expression."
msgstr "Exibe informações de depuração sobre a expressão compilada."

#: ../../library/re.rst:750
msgid "No corresponding inline flag."
msgstr "Nenhum sinalizador em linha correspondente."

#: ../../library/re.rst:756
msgid ""
"Perform case-insensitive matching; expressions like ``[A-Z]`` will also  "
"match lowercase letters. Full Unicode matching (such as ``Ü`` matching "
"``ü``) also works unless the :py:const:`~re.ASCII` flag is used to disable "
"non-ASCII matches. The current locale does not change the effect of this "
"flag unless the :py:const:`~re.LOCALE` flag is also used."
msgstr ""
"Executa uma correspondência que não diferencia maiúsculas de minúsculas; "
"expressões como ``[A-Z]`` também corresponderão a letras minúsculas. A "
"correspondência Unicode completa (como ``Ü`` correspondendo a ``ü``) também "
"funciona, a menos que o sinalizador :py:const:`~re.ASCII` seja usado para "
"desabilitar correspondências não ASCII. A localidade atual não muda o efeito "
"deste sinalizador a menos que o sinalizador :py:const:`~re.LOCALE` também "
"seja usado."

#: ../../library/re.rst:764
msgid "Corresponds to the inline flag ``(?i)``."
msgstr "Corresponde ao sinalizador em linha ``(?i)``."

#: ../../library/re.rst:766
msgid ""
"Note that when the Unicode patterns ``[a-z]`` or ``[A-Z]`` are used in "
"combination with the :const:`IGNORECASE` flag, they will match the 52 ASCII "
"letters and 4 additional non-ASCII letters: 'İ' (U+0130, Latin capital "
"letter I with dot above), 'ı' (U+0131, Latin small letter dotless i), "
"'ſ' (U+017F, Latin small letter long s) and 'K' (U+212A, Kelvin sign). If "
"the :py:const:`~re.ASCII` flag is used, only letters 'a' to 'z' and 'A' to "
"'Z' are matched."
msgstr ""
"Observe que quando os padrões Unicode ``[a-z]`` ou ``[A-Z]`` são usados em "
"combinação com o sinalizador :const:`IGNORECASE`, eles corresponderão às 52 "
"letras ASCII e 4 letras não-ASCII adicionais: 'İ' (U+0130, letra latina I "
"maiúscula com ponto em cima), 'ı' (U+0131, letra latina i minúscula sem "
"ponto), 'ſ' (U+017F, letra latina s minúscula longa) e 'K' (U+212A, sinal de "
"Kelvin). Se o sinalizador :const:`ASCII` for usado, apenas as letras 'a' a "
"'z' e 'A' a 'Z' serão correspondidas."

#: ../../library/re.rst:777
msgid ""
"Make ``\\w``, ``\\W``, ``\\b``, ``\\B`` and case-insensitive matching "
"dependent on the current locale. This flag can be used only with bytes "
"patterns."
msgstr ""
"Faz com que ``\\w``, ``\\W``, ``\\b``, ``\\B`` e a correspondência sem "
"diferenciação de maiúsculas e minúsculas dependam da localidade atual. Esse "
"sinalizador só pode ser usado com padrões de bytes."

#: ../../library/re.rst:781
msgid "Corresponds to the inline flag ``(?L)``."
msgstr "Corresponde ao sinalizador em linha ``(?L)``."

#: ../../library/re.rst:785
msgid ""
"This flag is discouraged; consider Unicode matching instead. The locale "
"mechanism is very unreliable as it only handles one \"culture\" at a time "
"and only works with 8-bit locales. Unicode matching is enabled by default "
"for Unicode (str) patterns and it is able to handle different locales and "
"languages."
msgstr ""
"Este sinalizador é desencorajado; considere usar correspondência Unicode em "
"vez disso. O mecanismo de localidade é muito pouco confiável, pois só "
"manipula uma \"cultura\" por vez e só funciona com localidades de 8 bits. A "
"correspondência Unicode é habilitada por padrão para padrões Unicode (str) e "
"é capaz de manipular diferentes localidades e idiomas."

#: ../../library/re.rst:792
msgid ""
":py:const:`~re.LOCALE` can be used only with bytes patterns and is not "
"compatible with :py:const:`~re.ASCII`."
msgstr ""
":py:const:`~re.LOCALE` pode ser usado apenas com padrões de bytes e não é "
"compatível com :const:`~re.ASCII`."

#: ../../library/re.rst:796
msgid ""
"Compiled regular expression objects with the :py:const:`~re.LOCALE` flag no "
"longer depend on the locale at compile time. Only the locale at matching "
"time affects the result of matching."
msgstr ""
"Objetos de expressão regular compilados com o sinalizador :py:const:`~re."
"LOCALE` não dependem mais da localidade em tempo de compilação. Apenas a "
"localidade no momento da correspondência afeta o resultado da "
"correspondência."

#: ../../library/re.rst:805
msgid ""
"When specified, the pattern character ``'^'`` matches at the beginning of "
"the string and at the beginning of each line (immediately following each "
"newline); and the pattern character ``'$'`` matches at the end of the string "
"and at the end of each line (immediately preceding each newline).  By "
"default, ``'^'`` matches only at the beginning of the string, and ``'$'`` "
"only at the end of the string and immediately before the newline (if any) at "
"the end of the string."
msgstr ""
"Quando especificado, o caractere padrão ``'^'`` corresponde ao início da "
"string e ao início de cada linha (imediatamente após cada nova linha); e o "
"caractere padrão ``'$'`` corresponde ao final da string e ao final de cada "
"linha (imediatamente antes de cada nova linha). Por padrão, ``'^'`` "
"corresponde apenas no início da string, e ``'$'`` apenas no final da string "
"e imediatamente antes da nova linha (se houver) no final da string."

#: ../../library/re.rst:812
msgid "Corresponds to the inline flag ``(?m)``."
msgstr "Corresponde ao sinalizador em linha ``(?m)``."

#: ../../library/re.rst:816
msgid ""
"Indicates no flag being applied, the value is ``0``.  This flag may be used "
"as a default value for a function keyword argument or as a base value that "
"will be conditionally ORed with other flags.  Example of use as a default "
"value::"
msgstr ""
"Indica que nenhum sinalizador está sendo aplicado, o valor é ``0``. Este "
"sinalizador pode ser usado como um valor padrão para um argumento nomeado de "
"função ou como um valor base que será condicionalmente OU com outros "
"sinalizadores. Exemplo de uso como valor padrão::"

#: ../../library/re.rst:829
msgid ""
"Make the ``'.'`` special character match any character at all, including a "
"newline; without this flag, ``'.'`` will match anything *except* a newline."
msgstr ""
"Faz o caractere especial ``'.'`` corresponder com qualquer caractere que "
"seja, incluindo uma nova linha; sem este sinalizador, ``'.'`` irá "
"corresponder a qualquer coisa, *exceto* uma nova linha."

#: ../../library/re.rst:832
msgid "Corresponds to the inline flag ``(?s)``."
msgstr "Corresponde ao sinalizador em linha ``(?s)``."

#: ../../library/re.rst:838
msgid ""
"In Python 3, Unicode characters are matched by default for ``str`` patterns. "
"This flag is therefore redundant with **no effect** and is only kept for "
"backward compatibility."
msgstr ""
"Em Python 3, os caracteres Unicode são correspondidos por padrão para "
"padrões ``str``. Esse sinalizador é, portanto, redundante e **sem efeito**, "
"sendo mantido apenas para compatibilidade com versões anteriores."

#: ../../library/re.rst:843
msgid ""
"See :py:const:`~re.ASCII` to restrict matching to ASCII characters instead."
msgstr ""
"Veja :py:const:`~re.ASCII` para restringir a correspondência apenas a "
"caracteres ASCII."

#: ../../library/re.rst:850
msgid ""
"This flag allows you to write regular expressions that look nicer and are "
"more readable by allowing you to visually separate logical sections of the "
"pattern and add comments. Whitespace within the pattern is ignored, except "
"when in a character class, or when preceded by an unescaped backslash, or "
"within tokens like ``*?``, ``(?:`` or ``(?P<...>``. For example, ``(? :`` "
"and ``* ?`` are not allowed. When a line contains a ``#`` that is not in a "
"character class and is not preceded by an unescaped backslash, all "
"characters from the leftmost such ``#`` through the end of the line are "
"ignored."
msgstr ""
"Este sinalizador permite que você escreva expressões regulares que parecem "
"mais agradáveis e são mais legíveis, permitindo que você separe visualmente "
"seções lógicas do padrão e adicione comentários. O espaço em branco dentro "
"do padrão é ignorado, exceto quando em uma classe de caractere, ou quando "
"precedido por uma contrabarra sem escape, ou dentro de tokens como ``*?``, "
"``(?:`` ou ``(?P<...>``. Por exemplo, ``(? :`` e ``* ?`` não são permitidos. "
"Quando uma linha contém um ``#`` que não está em uma classe de caractere e "
"não é precedido por uma contrabarra sem escape, todos os caracteres da "
"extremidade esquerda, como ``#`` até o final da linha são ignorados."

#: ../../library/re.rst:860
msgid ""
"This means that the two following regular expression objects that match a "
"decimal number are functionally equal::"
msgstr ""
"Isso significa que os dois seguintes objetos expressão regular que "
"correspondem a um número decimal são funcionalmente iguais::"

#: ../../library/re.rst:868
msgid "Corresponds to the inline flag ``(?x)``."
msgstr "Corresponde ao sinalizador em linha ``(?x)``."

#: ../../library/re.rst:872
msgid "Functions"
msgstr "Funções"

#: ../../library/re.rst:876
msgid ""
"Compile a regular expression pattern into a :ref:`regular expression object "
"<re-objects>`, which can be used for matching using its :func:`~Pattern."
"match`, :func:`~Pattern.search` and other methods, described below."
msgstr ""
"Compila um padrão de expressão regular em um :ref:`objeto expressão regular "
"<re-objects>`, que pode ser usado para correspondência usando seu :func:"
"`~Pattern.match`, :func:`~Pattern.search` e outros métodos, descritos abaixo."

#: ../../library/re.rst:881
msgid ""
"The expression's behaviour can be modified by specifying a *flags* value. "
"Values can be any of the `flags`_ variables, combined using bitwise OR (the "
"``|`` operator)."
msgstr ""
"O comportamento da expressão pode ser modificado especificando um valor para "
"o parâmetro *flags*. Os valores podem ser qualquer um dos `sinalizadores`_ , "
"combinados usando OU bit a bit (o operador ``|``)."

#: ../../library/re.rst:885
msgid "The sequence ::"
msgstr "A sequência ::"

#: ../../library/re.rst:890
msgid "is equivalent to ::"
msgstr "é equivalente a ::"

#: ../../library/re.rst:894
msgid ""
"but using :func:`re.compile` and saving the resulting regular expression "
"object for reuse is more efficient when the expression will be used several "
"times in a single program."
msgstr ""
"mas usar :func:`re.compile` e salvar o objeto expressão regular resultante "
"para reutilização é mais eficiente quando a expressão será usada várias "
"vezes em um único programa."

#: ../../library/re.rst:900
msgid ""
"The compiled versions of the most recent patterns passed to :func:`re."
"compile` and the module-level matching functions are cached, so programs "
"that use only a few regular expressions at a time needn't worry about "
"compiling regular expressions."
msgstr ""
"As versões compiladas dos padrões mais recentes passados para :func:`re."
"compile` e as funções de correspondência em nível de módulo são armazenadas "
"em cache, de modo que programas que usam apenas algumas expressões regulares "
"por vez não precisam se preocupar em compilar expressões regulares."

#: ../../library/re.rst:908
msgid ""
"Scan through *string* looking for the first location where the regular "
"expression *pattern* produces a match, and return a corresponding :class:"
"`~re.Match`. Return ``None`` if no position in the string matches the "
"pattern; note that this is different from finding a zero-length match at "
"some point in the string."
msgstr ""
"Percorre a *string* procurando o primeiro local onde o padrão *pattern* de "
"expressão regular produz uma correspondência e retorna um :class:`~re.Match` "
"correspondente. Retorna ``None`` se nenhuma posição na string corresponder "
"ao padrão; observe que isso é diferente de encontrar uma correspondência de "
"comprimento zero em algum ponto da string."

#: ../../library/re.rst:916
msgid ""
"If zero or more characters at the beginning of *string* match the regular "
"expression *pattern*, return a corresponding :class:`~re.Match`.  Return "
"``None`` if the string does not match the pattern; note that this is "
"different from a zero-length match."
msgstr ""
"Se zero ou mais caracteres no início da *string* corresponderem ao padrão "
"*pattern* da expressão regular, retorna um :class:`~re.Match` "
"correspondente. Retorna ``None`` se a string não corresponder ao padrão; "
"observe que isso é diferente de uma correspondência de comprimento zero."

#: ../../library/re.rst:921
msgid ""
"Note that even in :const:`MULTILINE` mode, :func:`re.match` will only match "
"at the beginning of the string and not at the beginning of each line."
msgstr ""
"Observe que mesmo no modo :const:`MULTILINE`, :func:`re.match` irá "
"corresponder apenas no início da string e não no início de cada linha."

#: ../../library/re.rst:924
msgid ""
"If you want to locate a match anywhere in *string*, use :func:`search` "
"instead (see also :ref:`search-vs-match`)."
msgstr ""
"Se você quiser localizar uma correspondência em qualquer lugar em *string*, "
"use :func:`search` (veja também :ref:`search-vs-match`)."

#: ../../library/re.rst:930
msgid ""
"If the whole *string* matches the regular expression *pattern*, return a "
"corresponding :class:`~re.Match`.  Return ``None`` if the string does not "
"match the pattern; note that this is different from a zero-length match."
msgstr ""
"Se toda a *string* corresponder ao padrão *pattern* da expressão regular, "
"retorna um :class:`~re.Match` correspondente. Retorna ``None`` se a string "
"não corresponder ao padrão; observe que isso é diferente de uma "
"correspondência de comprimento zero."

#: ../../library/re.rst:939
msgid ""
"Split *string* by the occurrences of *pattern*.  If capturing parentheses "
"are used in *pattern*, then the text of all groups in the pattern are also "
"returned as part of the resulting list. If *maxsplit* is nonzero, at most "
"*maxsplit* splits occur, and the remainder of the string is returned as the "
"final element of the list. ::"
msgstr ""
"Divide a *string* pelas ocorrências do padrão *pattern*. Se parênteses de "
"captura forem usados em *pattern*, o texto de todos os grupos no padrão "
"também será retornado como parte da lista resultante. Se *maxsplit* for "
"diferente de zero, no máximo *maxsplit* divisões ocorrerão e o restante da "
"string será retornado como o elemento final da lista. ::"

#: ../../library/re.rst:954
msgid ""
"If there are capturing groups in the separator and it matches at the start "
"of the string, the result will start with an empty string.  The same holds "
"for the end of the string::"
msgstr ""
"Se houver grupos de captura no separador e ele corresponder ao início da "
"string, o resultado começará com uma string vazia. O mesmo vale para o final "
"da string::"

#: ../../library/re.rst:961
msgid ""
"That way, separator components are always found at the same relative indices "
"within the result list."
msgstr ""
"Dessa forma, os componentes do separador são sempre encontrados nos mesmos "
"índices relativos na lista de resultados."

#: ../../library/re.rst:964
msgid ""
"Empty matches for the pattern split the string only when not adjacent to a "
"previous empty match."
msgstr ""
"As correspondências vazias para o padrão dividem a string apenas quando não "
"adjacente a uma correspondência vazia anterior."

#: ../../library/re.rst:976 ../../library/re.rst:1066 ../../library/re.rst:1095
msgid "Added the optional flags argument."
msgstr "Adicionado o argumento de sinalizadores opcionais."

#: ../../library/re.rst:979
msgid ""
"Added support of splitting on a pattern that could match an empty string."
msgstr ""
"Adicionado suporte de divisão em um padrão que pode corresponder a uma "
"string vazia."

#: ../../library/re.rst:985
msgid ""
"Return all non-overlapping matches of *pattern* in *string*, as a list of "
"strings or tuples.  The *string* is scanned left-to-right, and matches are "
"returned in the order found.  Empty matches are included in the result."
msgstr ""
"Retorna todas as correspondências não sobrepostas do padrão *pattern* em "
"*string*, como uma lista de strings ou tuplas. A *string* é verificada da "
"esquerda para a direita e as correspondências são retornadas na ordem "
"encontrada. Correspondências vazias são incluídas no resultado."

#: ../../library/re.rst:989
msgid ""
"The result depends on the number of capturing groups in the pattern. If "
"there are no groups, return a list of strings matching the whole pattern.  "
"If there is exactly one group, return a list of strings matching that "
"group.  If multiple groups are present, return a list of tuples of strings "
"matching the groups.  Non-capturing groups do not affect the form of the "
"result."
msgstr ""
"O resultado depende do número de grupos de captura no padrão. Se não houver "
"grupos, retorna uma lista de strings que correspondem a todo o padrão. Se "
"houver exatamente um grupo, retorna uma lista de strings correspondentes a "
"esse grupo. Se vários grupos estiverem presentes, retorna uma lista de "
"tuplas de strings correspondentes aos grupos. Grupos sem captura não afetam "
"a forma do resultado."

#: ../../library/re.rst:1001 ../../library/re.rst:1012
msgid "Non-empty matches can now start just after a previous empty match."
msgstr ""
"Correspondências não vazias agora podem começar logo após uma "
"correspondência vazia anterior."

#: ../../library/re.rst:1007
msgid ""
"Return an :term:`iterator` yielding :class:`~re.Match` objects over all non-"
"overlapping matches for the RE *pattern* in *string*.  The *string* is "
"scanned left-to-right, and matches are returned in the order found.  Empty "
"matches are included in the result."
msgstr ""
"Retorna um :term:`iterador` produzindo objetos :class:`~re.Match` sobre "
"todas as correspondências não sobrepostas para o padrão *pattern* de ER na "
"*string*. A *string* é percorrida da esquerda para a direita e as "
"correspondências são retornadas na ordem encontrada. Correspondências vazias "
"são incluídas no resultado."

#: ../../library/re.rst:1018
msgid ""
"Return the string obtained by replacing the leftmost non-overlapping "
"occurrences of *pattern* in *string* by the replacement *repl*.  If the "
"pattern isn't found, *string* is returned unchanged.  *repl* can be a string "
"or a function; if it is a string, any backslash escapes in it are "
"processed.  That is, ``\\n`` is converted to a single newline character, "
"``\\r`` is converted to a carriage return, and so forth.  Unknown escapes of "
"ASCII letters are reserved for future use and treated as errors.  Other "
"unknown escapes such as ``\\&`` are left alone. Backreferences, such as "
"``\\6``, are replaced with the substring matched by group 6 in the pattern. "
"For example::"
msgstr ""
"Retorna a string obtida substituindo as ocorrências não sobrepostas da "
"extremidade esquerda do padrão *pattern* na *string* pela substituição "
"*repl*. Se o padrão não for encontrado, *string* será retornado inalterado. "
"*repl* pode ser uma string ou uma função; se for uma string, qualquer escape "
"de contrabarra será processado. Ou seja, ``\\n`` é convertido em um único "
"caractere de nova linha, ``\\r`` é convertido em um retorno de carro e assim "
"por diante. Escapes desconhecidos de letras ASCII são reservados para uso "
"futuro e tratados como erros. Outros escapes desconhecidos como ``\\&`` são "
"deixados como estão. Referências anteriores, como ``\\6``, são substituídos "
"pela substring correspondida pelo grupo 6 no padrão. Por exemplo::"

#: ../../library/re.rst:1034
msgid ""
"If *repl* is a function, it is called for every non-overlapping occurrence "
"of *pattern*.  The function takes a single :class:`~re.Match` argument, and "
"returns the replacement string.  For example::"
msgstr ""
"Se *repl* for uma função, ela será chamada para cada ocorrência não "
"sobreposta do padrão *pattern*. A função recebe um único argumento :class:"
"`~re.Match` e retorna a string de substituição. Por exemplo::"

#: ../../library/re.rst:1046
msgid "The pattern may be a string or a :class:`~re.Pattern`."
msgstr "O padrão pode ser uma string ou um :class:`~re.Pattern`."

#: ../../library/re.rst:1048
msgid ""
"The optional argument *count* is the maximum number of pattern occurrences "
"to be replaced; *count* must be a non-negative integer.  If omitted or zero, "
"all occurrences will be replaced. Empty matches for the pattern are replaced "
"only when not adjacent to a previous empty match, so ``sub('x*', '-', "
"'abxd')`` returns ``'-a-b--d-'``."
msgstr ""
"O argumento opcional *count* é o número máximo de ocorrências de padrão a "
"serem substituídas; *count* deve ser um número inteiro não negativo. Se "
"omitido ou zero, todas as ocorrências serão substituídas. As "
"correspondências vazias para o padrão são substituídas apenas quando não "
"adjacentes a uma correspondência vazia anterior, então ``sub('x*', '-', "
"'abxd')`` retorna ``'-a-b--d-'``."

#: ../../library/re.rst:1056
msgid ""
"In string-type *repl* arguments, in addition to the character escapes and "
"backreferences described above, ``\\g<name>`` will use the substring matched "
"by the group named ``name``, as defined by the ``(?P<name>...)`` syntax. "
"``\\g<number>`` uses the corresponding group number; ``\\g<2>`` is therefore "
"equivalent to ``\\2``, but isn't ambiguous in a replacement such as "
"``\\g<2>0``.  ``\\20`` would be interpreted as a reference to group 20, not "
"a reference to group 2 followed by the literal character ``'0'``.  The "
"backreference ``\\g<0>`` substitutes in the entire substring matched by the "
"RE."
msgstr ""
"Em argumentos *repl* do tipo string, além dos escapes de caractere e "
"referências anteriores descritas acima, ``\\g<nome>`` usará a substring "
"correspondida pelo grupo denominado ``nome``, conforme definido pela sintaxe "
"``(?P<nome>...)``. ``\\g<número>`` usa o número do grupo correspondente; "
"``\\g<2>`` é portanto equivalente a ``\\2``, mas não é ambíguo em uma "
"substituição como ``\\g<2>0``. ``\\20`` seria interpretado como uma "
"referência ao grupo 20, não uma referência ao grupo 2 seguida pelo caractere "
"literal ``'0'``. A referência anterior ``\\g6`` substitui em toda a "
"substring correspondida pela ER."

#: ../../library/re.rst:1069 ../../library/re.rst:1098
#: ../../library/re.rst:1342
msgid "Unmatched groups are replaced with an empty string."
msgstr "Grupos sem correspondência são substituídos por uma string vazia."

#: ../../library/re.rst:1072
msgid ""
"Unknown escapes in *pattern* consisting of ``'\\'`` and an ASCII letter now "
"are errors."
msgstr ""
"Escapes desconhecidos no padrão *pattern* consistindo em ``'\\'`` e uma "
"letra ASCII agora são erros."

#: ../../library/re.rst:1076
msgid ""
"Unknown escapes in *repl* consisting of ``'\\'`` and an ASCII letter now are "
"errors."
msgstr ""
"Escapes desconhecidos no padrão *repl* consistindo em ``'\\'`` e uma letra "
"ASCII agora são erros."

#: ../../library/re.rst:1080
msgid ""
"Empty matches for the pattern are replaced when adjacent to a previous non-"
"empty match."
msgstr ""
"As correspondências vazias para o padrão sãosubstituídos quando não "
"adjacente a uma correspondência não vazia anterior."

#: ../../library/re.rst:1092
msgid ""
"Perform the same operation as :func:`sub`, but return a tuple ``(new_string, "
"number_of_subs_made)``."
msgstr ""
"Executa a mesma operação que :func:`sub`, mas retorna uma tupla "
"``(new_string, number_of_subs_made)``."

#: ../../library/re.rst:1104
msgid ""
"Escape special characters in *pattern*. This is useful if you want to match "
"an arbitrary literal string that may have regular expression metacharacters "
"in it.  For example::"
msgstr ""
"Escapa caracteres especiais no padrão *pattern*. Isso é útil se você deseja "
"corresponder uma string literal arbitrária que pode conter metacaracteres de "
"expressão regular. Por exemplo::"

#: ../../library/re.rst:1119
msgid ""
"This function must not be used for the replacement string in :func:`sub` "
"and :func:`subn`, only backslashes should be escaped.  For example::"
msgstr ""
"Esta função não deve ser usada para a string de substituição em :func:`sub` "
"e :func:`subn`, apenas contrabarras devem ser escapadas. Por exemplo::"

#: ../../library/re.rst:1127
msgid "The ``'_'`` character is no longer escaped."
msgstr "O caractere ``'_'`` não é mais escapado."

#: ../../library/re.rst:1130
msgid ""
"Only characters that can have special meaning in a regular expression are "
"escaped. As a result, ``'!'``, ``'\"'``, ``'%'``, ``\"'\"``, ``','``, "
"``'/'``, ``':'``, ``';'``, ``'<'``, ``'='``, ``'>'``, ``'@'``, and ``\"`\"`` "
"are no longer escaped."
msgstr ""
"Somente caracteres que podem ter um significado especial em uma expressão "
"regular são escapados. Como resultado, ``'!'``, ``'\"'``, ``'%'``, "
"``\"'\"``, ``','``, ``'/'``, ``':'``, ``';'``, ``'<'``, ``'='``, ``'>'``, "
"``'@'``, e ``\"`\"`` não são mais escapados."

#: ../../library/re.rst:1139
msgid "Clear the regular expression cache."
msgstr "Limpa o cache da expressão regular."

#: ../../library/re.rst:1143
msgid "Exceptions"
msgstr "Exceções"

#: ../../library/re.rst:1147
msgid ""
"Exception raised when a string passed to one of the functions here is not a "
"valid regular expression (for example, it might contain unmatched "
"parentheses) or when some other error occurs during compilation or "
"matching.  It is never an error if a string contains no match for a "
"pattern.  The error instance has the following additional attributes:"
msgstr ""
"Exceção levantada quando uma string passada para uma das funções aqui não é "
"uma expressão regular válida (por exemplo, pode conter parênteses não "
"correspondentes) ou quando algum outro erro ocorre durante a compilação ou "
"correspondência. Nunca é um erro se uma string não contém nenhuma "
"correspondência para um padrão. A instância de erro tem os seguintes "
"atributos adicionais:"

#: ../../library/re.rst:1155
msgid "The unformatted error message."
msgstr "A mensagem de erro não formatada."

#: ../../library/re.rst:1159
msgid "The regular expression pattern."
msgstr "O padrão da expressão regular."

#: ../../library/re.rst:1163
msgid "The index in *pattern* where compilation failed (may be ``None``)."
msgstr ""
"O índice no padrão *pattern* no qual a compilação falhou (pode ser ``None``)."

#: ../../library/re.rst:1167
msgid "The line corresponding to *pos* (may be ``None``)."
msgstr "A linha correspondente a *pos* (pode ser ``None``)."

#: ../../library/re.rst:1171
msgid "The column corresponding to *pos* (may be ``None``)."
msgstr "A coluna correspondente a *pos* (pode ser ``None``)."

#: ../../library/re.rst:1173
msgid "Added additional attributes."
msgstr "Adicionados os atributos adicionais."

#: ../../library/re.rst:1179
msgid "Regular Expression Objects"
msgstr "Objetos expressão regular"

#: ../../library/re.rst:1183
msgid "Compiled regular expression object returned by :func:`re.compile`."
msgstr "Objeto expressão regular compilado retornado por :func:`re.compile`."

#: ../../library/re.rst:1185
msgid ""
":py:class:`re.Pattern` supports ``[]`` to indicate a Unicode (str) or bytes "
"pattern. See :ref:`types-genericalias`."
msgstr ""
":py:class:`re.Pattern` tem suporte a ``[]`` para indicar um padrão Unicode "
"(str) ou bytes. Veja :ref:`types-genericalias`."

#: ../../library/re.rst:1191
msgid ""
"Scan through *string* looking for the first location where this regular "
"expression produces a match, and return a corresponding :class:`~re.Match`. "
"Return ``None`` if no position in the string matches the pattern; note that "
"this is different from finding a zero-length match at some point in the "
"string."
msgstr ""
"Percorre a *string* procurando o primeiro local onde esta expressão regular "
"produz uma correspondência e retorna um :class:`~re.Match` correspondente. "
"Retorna ``None`` se nenhuma posição na string corresponder ao padrão; "
"observe que isso é diferente de encontrar uma correspondência de comprimento "
"zero em algum ponto da string."

#: ../../library/re.rst:1196
msgid ""
"The optional second parameter *pos* gives an index in the string where the "
"search is to start; it defaults to ``0``.  This is not completely equivalent "
"to slicing the string; the ``'^'`` pattern character matches at the real "
"beginning of the string and at positions just after a newline, but not "
"necessarily at the index where the search is to start."
msgstr ""
"O segundo parâmetro opcional *pos* fornece um índice na string onde a "
"pesquisa deve começar; o padrão é ``0``. Isso não é totalmente equivalente a "
"fatiar a string; o caractere padrão ``'^'`` corresponde no início real da "
"string e nas posições logo após uma nova linha, mas não necessariamente no "
"índice onde a pesquisa deve começar."

#: ../../library/re.rst:1202
msgid ""
"The optional parameter *endpos* limits how far the string will be searched; "
"it will be as if the string is *endpos* characters long, so only the "
"characters from *pos* to ``endpos - 1`` will be searched for a match.  If "
"*endpos* is less than *pos*, no match will be found; otherwise, if *rx* is a "
"compiled regular expression object, ``rx.search(string, 0, 50)`` is "
"equivalent to ``rx.search(string[:50], 0)``. ::"
msgstr ""
"O parâmetro opcional *endpos* limita o quão longe a string será pesquisada; "
"será como se a string tivesse *endpos* caracteres, então apenas os "
"caracteres de *pos* a ``endpos - 1`` serão procurados por uma "
"correspondência. Se *endpos* for menor que *pos*, nenhuma correspondência "
"será encontrada; caso contrário, se *rx* é um objeto de expressão regular "
"compilado, ``rx.search(string, 0, 50)`` é equivalente a ``rx."
"search(string[:50], 0)``. ::"

#: ../../library/re.rst:1217
msgid ""
"If zero or more characters at the *beginning* of *string* match this regular "
"expression, return a corresponding :class:`~re.Match`. Return ``None`` if "
"the string does not match the pattern; note that this is different from a "
"zero-length match."
msgstr ""
"Se zero ou mais caracteres no início da *string* corresponderem a esta "
"expressão regular, retorna um :class:`~re.Match` correspondente. Retorna "
"``None`` se a string não corresponder ao padrão; observe que isso é "
"diferente de uma correspondência de comprimento zero."

#: ../../library/re.rst:1222 ../../library/re.rst:1240
msgid ""
"The optional *pos* and *endpos* parameters have the same meaning as for the :"
"meth:`~Pattern.search` method. ::"
msgstr ""
"Os parâmetros opcionais *pos* e *endpos* têm o mesmo significado que para o "
"método :meth:`~Pattern.search`. ::"

#: ../../library/re.rst:1230
msgid ""
"If you want to locate a match anywhere in *string*, use :meth:`~Pattern."
"search` instead (see also :ref:`search-vs-match`)."
msgstr ""
"Se você quiser localizar uma correspondência em qualquer lugar em *string*, "
"use :meth:`~Pattern.search` ao invés (veja também :ref:`search-vs-match`)."

#: ../../library/re.rst:1236
msgid ""
"If the whole *string* matches this regular expression, return a "
"corresponding :class:`~re.Match`.  Return ``None`` if the string does not "
"match the pattern; note that this is different from a zero-length match."
msgstr ""
"Se toda a *string* corresponder a esta expressão regular, retorna um :class:"
"`~re.Match` correspondente. Retorna ``None`` se a string não corresponder ao "
"padrão; observe que isso é diferente de uma correspondência de comprimento "
"zero."

#: ../../library/re.rst:1254
msgid "Identical to the :func:`split` function, using the compiled pattern."
msgstr "Idêntico à função :func:`split`, usando o padrão compilado."

#: ../../library/re.rst:1259
msgid ""
"Similar to the :func:`findall` function, using the compiled pattern, but "
"also accepts optional *pos* and *endpos* parameters that limit the search "
"region like for :meth:`search`."
msgstr ""
"Semelhante à função :func:`findall`, usando o padrão compilado, mas também "
"aceita os parâmetros *pos* e *endpos* opcionais que limitam a região de "
"pesquisa como para :meth:`search`."

#: ../../library/re.rst:1266
msgid ""
"Similar to the :func:`finditer` function, using the compiled pattern, but "
"also accepts optional *pos* and *endpos* parameters that limit the search "
"region like for :meth:`search`."
msgstr ""
"Semelhante à função :func:`finditer`, usando o padrão compilado, mas também "
"aceita os parâmetros *pos* e *endpos* opcionais que limitam a região de "
"pesquisa como para :meth:`search`."

#: ../../library/re.rst:1273
msgid "Identical to the :func:`sub` function, using the compiled pattern."
msgstr "Idêntico à função :func:`sub`, usando o padrão compilado."

#: ../../library/re.rst:1278
msgid "Identical to the :func:`subn` function, using the compiled pattern."
msgstr "Idêntico à função :func:`subn`, usando o padrão compilado."

#: ../../library/re.rst:1283
msgid ""
"The regex matching flags.  This is a combination of the flags given to :func:"
"`.compile`, any ``(?...)`` inline flags in the pattern, and implicit flags "
"such as :py:const:`~re.UNICODE` if the pattern is a Unicode string."
msgstr ""
"Os sinalizadores de correspondência de regex. Esta é uma combinação dos "
"sinalizadores fornecidos para :func:`.compile`, qualquer ``(?...)`` "
"sinalizador em linha no padrão e sinalizadores implícitos como :py:const:"
"`~re.UNICODE` se o padrão for uma string Unicode."

#: ../../library/re.rst:1290
msgid "The number of capturing groups in the pattern."
msgstr "O número de grupos de captura no padrão."

#: ../../library/re.rst:1295
msgid ""
"A dictionary mapping any symbolic group names defined by ``(?P<id>)`` to "
"group numbers.  The dictionary is empty if no symbolic groups were used in "
"the pattern."
msgstr ""
"Um dicionário que mapeia qualquer nome de grupo simbólico definido por ``(?"
"P<id>)`` para números de grupo. O dicionário estará vazio se nenhum grupo "
"simbólico for usado no padrão."

#: ../../library/re.rst:1302
msgid "The pattern string from which the pattern object was compiled."
msgstr "A string de padrão da qual o objeto de padrão foi compilado."

#: ../../library/re.rst:1305
msgid ""
"Added support of :func:`copy.copy` and :func:`copy.deepcopy`.  Compiled "
"regular expression objects are considered atomic."
msgstr ""
"Adicionado suporte de :func:`copy.copy` e :func:`copy.deepcopy`. Os objetos "
"expressão regular compilados são considerados atômicos."

#: ../../library/re.rst:1313
msgid "Match Objects"
msgstr "Objetos correspondência"

#: ../../library/re.rst:1315
msgid ""
"Match objects always have a boolean value of ``True``. Since :meth:`~Pattern."
"match` and :meth:`~Pattern.search` return ``None`` when there is no match, "
"you can test whether there was a match with a simple ``if`` statement::"
msgstr ""
"Objetos correspondência sempre têm um valor booleano de ``True``. Como :meth:"
"`~Pattern.match` e :meth:`~Pattern.search` retornam ``None`` quando não há "
"correspondência, você pode testar se houve uma correspondência com uma "
"simples instrução ``if``::"

#: ../../library/re.rst:1326
msgid "Match object returned by successful ``match``\\ es and ``search``\\ es."
msgstr ""
"Objeto de correspondência retornado por ``match``\\ s e ``search``\\ s bem "
"sucedidos."

#: ../../library/re.rst:1328
msgid ""
":py:class:`re.Match` supports ``[]`` to indicate a Unicode (str) or bytes "
"match. See :ref:`types-genericalias`."
msgstr ""
":py:class:`re.Match` tem suporte a ``[]`` para indicar uma correspondência "
"Unicode (str) ou bytes. Veja :ref:`types-genericalias`."

#: ../../library/re.rst:1334
msgid ""
"Return the string obtained by doing backslash substitution on the template "
"string *template*, as done by the :meth:`~Pattern.sub` method. Escapes such "
"as ``\\n`` are converted to the appropriate characters, and numeric "
"backreferences (``\\1``, ``\\2``) and named backreferences (``\\g<1>``, "
"``\\g<name>``) are replaced by the contents of the corresponding group. The "
"backreference ``\\g<0>`` will be replaced by the entire match."
msgstr ""
"Retorna a string obtida fazendo a substituição da contrabarra na string de "
"modelo *template*, como feito pelo método :meth:`~Pattern.sub`. Escapes como "
"``\\n`` são convertidos para os caracteres apropriados, e referências "
"anteriores numéricas (``\\1``, ``\\2``) e referências anteriores nomeadas "
"(``\\g<1>``, ``\\g<nome>``) são substituídas pelo conteúdo do grupo "
"correspondente. A referência anterior ``\\g<0>`` será substituída pela "
"correspondência completa."

#: ../../library/re.rst:1347
msgid ""
"Returns one or more subgroups of the match.  If there is a single argument, "
"the result is a single string; if there are multiple arguments, the result "
"is a tuple with one item per argument. Without arguments, *group1* defaults "
"to zero (the whole match is returned). If a *groupN* argument is zero, the "
"corresponding return value is the entire matching string; if it is in the "
"inclusive range [1..99], it is the string matching the corresponding "
"parenthesized group.  If a group number is negative or larger than the "
"number of groups defined in the pattern, an :exc:`IndexError` exception is "
"raised. If a group is contained in a part of the pattern that did not match, "
"the corresponding result is ``None``. If a group is contained in a part of "
"the pattern that matched multiple times, the last match is returned. ::"
msgstr ""
"Retorna um ou mais subgrupos da correspondência. Se houver um único "
"argumento, o resultado será uma única string; se houver vários argumentos, o "
"resultado é uma tupla com um item por argumento. Sem argumentos, *group1* "
"padroniza para zero (toda a correspondência é retornada). Se um argumento "
"*groupN* for zero, o valor de retorno correspondente será toda a string "
"correspondente; se estiver no intervalo inclusivo [1..99], é a string que "
"corresponde ao grupo entre parênteses correspondente. Se um número de grupo "
"for negativo ou maior do que o número de grupos definidos no padrão, uma "
"exceção :exc:`IndexError` é levantada. Se um grupo estiver contido em uma "
"parte do padrão que não correspondeu, o resultado correspondente será "
"``None``. Se um grupo estiver contido em uma parte do padrão que "
"correspondeu várias vezes, a última correspondência será retornada. ::"

#: ../../library/re.rst:1369
msgid ""
"If the regular expression uses the ``(?P<name>...)`` syntax, the *groupN* "
"arguments may also be strings identifying groups by their group name.  If a "
"string argument is not used as a group name in the pattern, an :exc:"
"`IndexError` exception is raised."
msgstr ""
"Se a expressão regular usa a sintaxe ``(?P<name>...)``, os argumentos "
"*groupN* também podem ser strings que identificam grupos por seus nomes de "
"grupo. Se um argumento string não for usado como um nome de grupo no padrão, "
"uma exceção :exc:`IndexError` é levantada."

#: ../../library/re.rst:1374
msgid "A moderately complicated example::"
msgstr "Um exemplo moderadamente complicado::"

#: ../../library/re.rst:1382
msgid "Named groups can also be referred to by their index::"
msgstr "Grupos nomeados também podem ser referidos por seu índice::"

#: ../../library/re.rst:1389
msgid "If a group matches multiple times, only the last match is accessible::"
msgstr ""
"Se um grupo corresponder várias vezes, apenas a última correspondência "
"estará acessível::"

#: ../../library/re.rst:1398
msgid ""
"This is identical to ``m.group(g)``.  This allows easier access to an "
"individual group from a match::"
msgstr ""
"Isso é idêntico a ``m.group(g)``. Isso permite acesso mais fácil a um grupo "
"individual de uma correspondência::"

#: ../../library/re.rst:1409
msgid "Named groups are supported as well::"
msgstr "Grupos nomeados também são suportados::"

#: ../../library/re.rst:1422
msgid ""
"Return a tuple containing all the subgroups of the match, from 1 up to "
"however many groups are in the pattern.  The *default* argument is used for "
"groups that did not participate in the match; it defaults to ``None``."
msgstr ""
"Retorna uma tupla contendo todos os subgrupos da correspondência, de 1 até "
"quantos grupos estiverem no padrão. O argumento *default* é usado para "
"grupos que não participaram da correspondência; o padrão é ``None``."

#: ../../library/re.rst:1426 ../../library/re.rst:1651
msgid "For example::"
msgstr "Por exemplo::"

#: ../../library/re.rst:1432
msgid ""
"If we make the decimal place and everything after it optional, not all "
"groups might participate in the match.  These groups will default to "
"``None`` unless the *default* argument is given::"
msgstr ""
"Se colocarmos a casa decimal e tudo depois dela opcional, nem todos os "
"grupos podem participar da correspondência. Esses grupos serão padronizados "
"como ``None``, a menos que o argumento *default* seja fornecido::"

#: ../../library/re.rst:1445
msgid ""
"Return a dictionary containing all the *named* subgroups of the match, keyed "
"by the subgroup name.  The *default* argument is used for groups that did "
"not participate in the match; it defaults to ``None``.  For example::"
msgstr ""
"Retorna um dicionário contendo todos os subgrupos *nomeados* da "
"correspondência, tendo como chave o nome do subgrupo. O argumento *default* "
"usado para grupos que não participaram da correspondência; o padrão é "
"``None``. Por exemplo::"

#: ../../library/re.rst:1457
msgid ""
"Return the indices of the start and end of the substring matched by *group*; "
"*group* defaults to zero (meaning the whole matched substring). Return "
"``-1`` if *group* exists but did not contribute to the match.  For a match "
"object *m*, and a group *g* that did contribute to the match, the substring "
"matched by group *g* (equivalent to ``m.group(g)``) is ::"
msgstr ""
"Retorna os índices de início e fim da substring correspondidos pelo grupo "
"*group*; *group* tem como padrão  zero (o que significa que toda a substring "
"é correspondida). Retorna ``-1`` se *group* existe, mas não contribuiu para "
"a correspondência. Para um objeto correspondência *m* e um grupo *g* que "
"contribuiu para a correspondência, a substring correspondida pelo grupo *g* "
"(equivalente a ``m.group(g)``) é ::"

#: ../../library/re.rst:1465
msgid ""
"Note that ``m.start(group)`` will equal ``m.end(group)`` if *group* matched "
"a null string.  For example, after ``m = re.search('b(c?)', 'cba')``, ``m."
"start(0)`` is 1, ``m.end(0)`` is 2, ``m.start(1)`` and ``m.end(1)`` are both "
"2, and ``m.start(2)`` raises an :exc:`IndexError` exception."
msgstr ""
"Observe que ``m.start(group)`` será igual a ``m.end(group)`` se *group* "
"correspondeu a uma string nula. Por exemplo, após ``m = re.search('b(c?)', "
"'cba')``, ``m.start(0)`` é 1, ``m.end(0)`` é 2, ``m.start(1)`` e ``m."
"end(1)`` são 2, e ``m.start(2)`` levanta uma exceção :exc:`IndexError`."

#: ../../library/re.rst:1470
msgid "An example that will remove *remove_this* from email addresses::"
msgstr "Um exemplo que removerá *remove_this* dos endereços de e-mail::"

#: ../../library/re.rst:1480
msgid ""
"For a match *m*, return the 2-tuple ``(m.start(group), m.end(group))``. Note "
"that if *group* did not contribute to the match, this is ``(-1, -1)``. "
"*group* defaults to zero, the entire match."
msgstr ""
"Para uma correspondência *m*, retorna a tupla de dois ``(m.start(group), m."
"end(group))``. Observe que se *group* não contribuiu para a correspondência, "
"isso é ``(-1, -1)``. *group* tem como padrão zero, a correspondência inteira."

#: ../../library/re.rst:1487
msgid ""
"The value of *pos* which was passed to the :meth:`~Pattern.search` or :meth:"
"`~Pattern.match` method of a :ref:`regex object <re-objects>`.  This is the "
"index into the string at which the RE engine started looking for a match."
msgstr ""
"O valor de *pos* que foi passado para o método :meth:`~Pattern.search` ou :"
"meth:`~Pattern.match` de um :ref:`objeto de regex <re-objects>`. Este é o "
"índice da string na qual o mecanismo de ER começou a procurar uma "
"correspondência."

#: ../../library/re.rst:1494
msgid ""
"The value of *endpos* which was passed to the :meth:`~Pattern.search` or :"
"meth:`~Pattern.match` method of a :ref:`regex object <re-objects>`.  This is "
"the index into the string beyond which the RE engine will not go."
msgstr ""
"O valor de *endpos* que foi passado para o método :meth:`~Pattern.search` "
"ou :meth:`~Pattern.match` de um :ref:`objeto de regex <re-objects>`. Este é "
"o índice da string após o qual o mecanismo de ER não vai chegar."

#: ../../library/re.rst:1501
msgid ""
"The integer index of the last matched capturing group, or ``None`` if no "
"group was matched at all. For example, the expressions ``(a)b``, ``((a)"
"(b))``, and ``((ab))`` will have ``lastindex == 1`` if applied to the string "
"``'ab'``, while the expression ``(a)(b)`` will have ``lastindex == 2``, if "
"applied to the same string."
msgstr ""
"O índice em número inteiro do último grupo de captura correspondido, ou "
"``None`` se nenhum grupo foi correspondido. Por exemplo, as expressões "
"``(a)b``, ``((a)(b))`` e ``((ab))`` terão ``lastindex == 1`` se aplicadas à "
"string ``'ab'``, enquanto a expressão ``(a)(b)`` terá ``lastindex == 2``, se "
"aplicada à mesma string."

#: ../../library/re.rst:1510
msgid ""
"The name of the last matched capturing group, or ``None`` if the group "
"didn't have a name, or if no group was matched at all."
msgstr ""
"O nome do último grupo de captura correspondido, ou ``None`` se o grupo não "
"tinha um nome, ou se nenhum grupo foi correspondido."

#: ../../library/re.rst:1516
msgid ""
"The :ref:`regular expression object <re-objects>` whose :meth:`~Pattern."
"match` or :meth:`~Pattern.search` method produced this match instance."
msgstr ""
"O :ref:`objeto expressão regular <re-objects>` cujo método :meth:`~Pattern."
"match` ou :meth:`~Pattern.search` produziu esta instância de correspondência."

#: ../../library/re.rst:1522
msgid "The string passed to :meth:`~Pattern.match` or :meth:`~Pattern.search`."
msgstr ""
"A string passada para :meth:`~Pattern.match` ou :meth:`~Pattern.search`."

#: ../../library/re.rst:1525
msgid ""
"Added support of :func:`copy.copy` and :func:`copy.deepcopy`.  Match objects "
"are considered atomic."
msgstr ""
"Adicionado suporte de :func:`copy.copy` e :func:`copy.deepcopy`. Objetos "
"correspondência são considerados atômicos."

#: ../../library/re.rst:1533
msgid "Regular Expression Examples"
msgstr "Exemplos de expressão regular"

#: ../../library/re.rst:1537
msgid "Checking for a Pair"
msgstr "Verificando por um par"

#: ../../library/re.rst:1539
msgid ""
"In this example, we'll use the following helper function to display match "
"objects a little more gracefully::"
msgstr ""
"Neste exemplo, usaremos a seguinte função auxiliar para exibir objetos "
"correspondência com um pouco mais de elegância::"

#: ../../library/re.rst:1547
msgid ""
"Suppose you are writing a poker program where a player's hand is represented "
"as a 5-character string with each character representing a card, \"a\" for "
"ace, \"k\" for king, \"q\" for queen, \"j\" for jack, \"t\" for 10, and "
"\"2\" through \"9\" representing the card with that value."
msgstr ""
"Suponha que você esteja escrevendo um programa de pôquer onde a mão de um "
"jogador é representada como uma string de 5 caracteres com cada caractere "
"representando uma carta, \"a\" para ás, \"k\" para rei, \"q\" para dama, "
"\"j\" para valete, \"t\" para 10 e \"2\" a \"9\" representando a carta com "
"esse valor."

#: ../../library/re.rst:1552
msgid "To see if a given string is a valid hand, one could do the following::"
msgstr ""
"Para ver se uma determinada string é uma mão válida, pode-se fazer o "
"seguinte::"

#: ../../library/re.rst:1562
msgid ""
"That last hand, ``\"727ak\"``, contained a pair, or two of the same valued "
"cards. To match this with a regular expression, one could use backreferences "
"as such::"
msgstr ""
"Essa última mão, ``\"727ak\"``, continha um par, ou duas cartas com o mesmo "
"valor. Para combinar isso com uma expressão regular, pode-se usar "
"referências anteriores como::"

#: ../../library/re.rst:1572
msgid ""
"To find out what card the pair consists of, one could use the :meth:`~Match."
"group` method of the match object in the following manner::"
msgstr ""
"Para descobrir em que carta o par consiste, pode-se usar o método :meth:"
"`~Match.group` do objeto correspondência da seguinte maneira::"

#: ../../library/re.rst:1591
msgid "Simulating scanf()"
msgstr "Simulando scanf()"

#: ../../library/re.rst:1595
msgid ""
"Python does not currently have an equivalent to :c:func:`!scanf`.  Regular "
"expressions are generally more powerful, though also more verbose, than :c:"
"func:`!scanf` format strings.  The table below offers some more-or-less "
"equivalent mappings between :c:func:`!scanf` format tokens and regular "
"expressions."
msgstr ""
"Python atualmente não possui um equivalente a :c:func:`!scanf`. Expressões "
"regulares são geralmente mais poderosas, embora também mais detalhadas, do "
"que strings de formato :c:func:`!scanf`. A tabela abaixo oferece alguns "
"mapeamentos mais ou menos equivalentes entre os tokens de formato :c:func:`!"
"scanf` e expressões regulares."

#: ../../library/re.rst:1602
msgid ":c:func:`!scanf` Token"
msgstr "Token do :c:func:`!scanf`"

#: ../../library/re.rst:1602
msgid "Regular Expression"
msgstr "Expressão regular"

#: ../../library/re.rst:1604
msgid "``%c``"
msgstr "``%c``"

#: ../../library/re.rst:1606
msgid "``%5c``"
msgstr "``%5c``"

#: ../../library/re.rst:1606
msgid "``.{5}``"
msgstr "``.{5}``"

#: ../../library/re.rst:1608
msgid "``%d``"
msgstr "``%d``"

#: ../../library/re.rst:1608
msgid "``[-+]?\\d+``"
msgstr "``[-+]?\\d+``"

#: ../../library/re.rst:1610
msgid "``%e``, ``%E``, ``%f``, ``%g``"
msgstr "``%e``, ``%E``, ``%f``, ``%g``"

#: ../../library/re.rst:1610
msgid "``[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?``"
msgstr "``[-+]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?``"

#: ../../library/re.rst:1612
msgid "``%i``"
msgstr "``%i``"

#: ../../library/re.rst:1612
msgid "``[-+]?(0[xX][\\dA-Fa-f]+|0[0-7]*|\\d+)``"
msgstr "``[-+]?(0[xX][\\dA-Fa-f]+|0[0-7]*|\\d+)``"

#: ../../library/re.rst:1614
msgid "``%o``"
msgstr "``%o``"

#: ../../library/re.rst:1614
msgid "``[-+]?[0-7]+``"
msgstr "``[-+]?[0-7]+``"

#: ../../library/re.rst:1616
msgid "``%s``"
msgstr "``%s``"

#: ../../library/re.rst:1616
msgid "``\\S+``"
msgstr "``\\S+``"

#: ../../library/re.rst:1618
msgid "``%u``"
msgstr "``%u``"

#: ../../library/re.rst:1618
msgid "``\\d+``"
msgstr "``\\d+``"

#: ../../library/re.rst:1620
msgid "``%x``, ``%X``"
msgstr "``%x``, ``%X``"

#: ../../library/re.rst:1620
msgid "``[-+]?(0[xX])?[\\dA-Fa-f]+``"
msgstr "``[-+]?(0[xX])?[\\dA-Fa-f]+``"

#: ../../library/re.rst:1623
msgid "To extract the filename and numbers from a string like ::"
msgstr "Para extrair um nome de arquivo e números de uma string como ::"

#: ../../library/re.rst:1627
msgid "you would use a :c:func:`!scanf` format like ::"
msgstr "você usaria um formato :c:func:`!scanf` como ::"

#: ../../library/re.rst:1631
msgid "The equivalent regular expression would be ::"
msgstr "A expressão regular equivalente seria ::"

#: ../../library/re.rst:1639
msgid "search() vs. match()"
msgstr "search() vs. match()"

#: ../../library/re.rst:1643
msgid ""
"Python offers different primitive operations based on regular expressions:"
msgstr ""
"O Python oferece diferentes operações primitivas baseadas em expressões "
"regulares:"

#: ../../library/re.rst:1645
msgid ":func:`re.match` checks for a match only at the beginning of the string"
msgstr ""
":func:`re.match` verifica uma correspondência apenas no início da string"

#: ../../library/re.rst:1646
msgid ""
":func:`re.search` checks for a match anywhere in the string (this is what "
"Perl does by default)"
msgstr ""
":func:`re.search` verifica uma correspondência em qualquer lugar na string "
"(isso é o que o Perl faz por padrão)"

#: ../../library/re.rst:1648
msgid ":func:`re.fullmatch` checks for entire string to be a match"
msgstr ""
":func:`re.fullmatch` verifica toda a string para ser uma correspondência"

#: ../../library/re.rst:1660
msgid ""
"Regular expressions beginning with ``'^'`` can be used with :func:`search` "
"to restrict the match at the beginning of the string::"
msgstr ""
"Expressões regulares começando com ``'^'`` podem ser usadas com :func:"
"`search` para restringir a correspondência no início da string::"

#: ../../library/re.rst:1668
msgid ""
"Note however that in :const:`MULTILINE` mode :func:`match` only matches at "
"the beginning of the string, whereas using :func:`search` with a regular "
"expression beginning with ``'^'`` will match at the beginning of each "
"line. ::"
msgstr ""
"Observe, entretanto, que no modo :const:`MULTILINE` :func:`match` apenas "
"corresponde ao início da string, enquanto que usar :func:`search` com uma "
"expressão regular começando com ``'^'`` irá corresponder em no início de "
"cada linha. ::"

#: ../../library/re.rst:1678
msgid "Making a Phonebook"
msgstr "Criando uma lista telefônica"

#: ../../library/re.rst:1680
msgid ""
":func:`split` splits a string into a list delimited by the passed pattern.  "
"The method is invaluable for converting textual data into data structures "
"that can be easily read and modified by Python as demonstrated in the "
"following example that creates a phonebook."
msgstr ""
":func:`split` divide uma string em uma lista delimitada pelo padrão passado. "
"O método é inestimável para converter dados textuais em estruturas de dados "
"que podem ser facilmente lidas e modificadas pelo Python, conforme "
"demonstrado no exemplo a seguir que cria uma lista telefônica."

#: ../../library/re.rst:1685
msgid ""
"First, here is the input.  Normally it may come from a file, here we are "
"using triple-quoted string syntax"
msgstr ""
"Primeiro, aqui está a entrada. Normalmente pode vir de um arquivo, aqui "
"estamos usando a sintaxe de string entre aspas triplas"

#: ../../library/re.rst:1698
msgid ""
"The entries are separated by one or more newlines. Now we convert the string "
"into a list with each nonempty line having its own entry:"
msgstr ""
"As entradas são separadas por uma ou mais novas linhas. Agora, convertemos a "
"string em uma lista com cada linha não vazia tendo sua própria entrada:"

#: ../../library/re.rst:1711
msgid ""
"Finally, split each entry into a list with first name, last name, telephone "
"number, and address.  We use the ``maxsplit`` parameter of :func:`split` "
"because the address has spaces, our splitting pattern, in it:"
msgstr ""
"Finalmente, divida cada entrada em uma lista com nome, sobrenome, número de "
"telefone e endereço. Usamos o parâmetro ``maxsplit`` de :func:`split` porque "
"o endereço contém espaços, nosso padrão de divisão:"

#: ../../library/re.rst:1724
msgid ""
"The ``:?`` pattern matches the colon after the last name, so that it does "
"not occur in the result list.  With a ``maxsplit`` of ``4``, we could "
"separate the house number from the street name:"
msgstr ""
"O padrão ``:?`` corresponde ao caractere de dois pontos após o sobrenome, de "
"modo que não ocorre na lista de resultados. Com um ``maxsplit`` de ``4``, "
"podemos separar o número da casa do nome da rua:"

#: ../../library/re.rst:1739
msgid "Text Munging"
msgstr "Mastigação de texto"

#: ../../library/re.rst:1741
msgid ""
":func:`sub` replaces every occurrence of a pattern with a string or the "
"result of a function.  This example demonstrates using :func:`sub` with a "
"function to \"munge\" text, or randomize the order of all the characters in "
"each word of a sentence except for the first and last characters::"
msgstr ""
":func:`sub` substitui cada ocorrência de um padrão por uma string ou o "
"resultado de uma função. Este exemplo demonstra o uso de :func:`sub` com uma "
"função para \"mastigar\" o texto ou aleatorizar a ordem de todos os "
"caracteres em cada palavra de uma frase, exceto o primeiro e o último "
"caracteres::"

#: ../../library/re.rst:1758
msgid "Finding all Adverbs"
msgstr "Encontrando todos os advérbios"

#: ../../library/re.rst:1760
msgid ""
":func:`findall` matches *all* occurrences of a pattern, not just the first "
"one as :func:`search` does.  For example, if a writer wanted to find all of "
"the adverbs in some text, they might use :func:`findall` in the following "
"manner::"
msgstr ""
":func:`findall` corresponde a *todas* as ocorrências de um padrão, não "
"apenas a primeira como :func:`search` faz. Por exemplo, se um escritor "
"deseja encontrar todos os advérbios em algum texto, ele pode usar :func:"
"`findall` da seguinte maneira::"

#: ../../library/re.rst:1771
msgid "Finding all Adverbs and their Positions"
msgstr "Encontrando todos os advérbios e suas posições"

#: ../../library/re.rst:1773
msgid ""
"If one wants more information about all matches of a pattern than the "
"matched text, :func:`finditer` is useful as it provides :class:`~re.Match` "
"objects instead of strings.  Continuing with the previous example, if a "
"writer wanted to find all of the adverbs *and their positions* in some text, "
"they would use :func:`finditer` in the following manner::"
msgstr ""
"Caso seja desejado obter mais informações sobre todas as correspondências de "
"um padrão do que o texto correspondido, :func:`finditer` é útil, pois "
"fornece objetos :class:`~re.Match` em vez de strings. Continuando com o "
"exemplo anterior, se um escritor quisesse encontrar todos os advérbios *e "
"suas posições* em algum texto, ele usaria :func:`finditer` da seguinte "
"maneira::"

#: ../../library/re.rst:1787
msgid "Raw String Notation"
msgstr "Notação de string bruta"

#: ../../library/re.rst:1789
msgid ""
"Raw string notation (``r\"text\"``) keeps regular expressions sane.  Without "
"it, every backslash (``'\\'``) in a regular expression would have to be "
"prefixed with another one to escape it.  For example, the two following "
"lines of code are functionally identical::"
msgstr ""
"A notação de string bruta (``r\"texto\"``) mantém as expressões regulares "
"sãs. Sem ele, cada contrabarra (``'\\'``) em uma expressão regular teria que "
"ser prefixada com outra para escapar dela. Por exemplo, as duas linhas de "
"código a seguir são funcionalmente idênticas::"

#: ../../library/re.rst:1799
msgid ""
"When one wants to match a literal backslash, it must be escaped in the "
"regular expression.  With raw string notation, this means ``r\"\\\\\"``.  "
"Without raw string notation, one must use ``\"\\\\\\\\\"``, making the "
"following lines of code functionally identical::"
msgstr ""
"Quando se deseja corresponder a uma contrabarra literal, ela deve ser "
"escapada na expressão regular. Com a notação de string bruta, isso significa "
"``r\"\\\\\"``. Sem a notação de string bruta, deve-se usar ``\"\\\\\\\\\"``, "
"tornando as seguintes linhas de código funcionalmente idênticas::"

#: ../../library/re.rst:1811
msgid "Writing a Tokenizer"
msgstr "Escrevendo um tokenizador"

#: ../../library/re.rst:1813
msgid ""
"A `tokenizer or scanner <https://en.wikipedia.org/wiki/Lexical_analysis>`_ "
"analyzes a string to categorize groups of characters.  This is a useful "
"first step in writing a compiler or interpreter."
msgstr ""
"Um `tokenizador, tokenizer ou scanner <https://en.wikipedia.org/wiki/"
"Lexical_analysis>`_ analisa uma string para categorizar grupos de "
"caracteres. Este é um primeiro passo útil para escrever um compilador ou "
"interpretador."

#: ../../library/re.rst:1817
msgid ""
"The text categories are specified with regular expressions.  The technique "
"is to combine those into a single master regular expression and to loop over "
"successive matches::"
msgstr ""
"As categorias de texto são especificadas com expressões regulares. A técnica "
"é combiná-las em uma única expressão regular mestre e fazer um loop em "
"correspondências sucessivas::"

#: ../../library/re.rst:1873
msgid "The tokenizer produces the following output::"
msgstr "O tokenizador produz a seguinte saída::"

#: ../../library/re.rst:1896
msgid ""
"Friedl, Jeffrey. Mastering Regular Expressions. 3rd ed., O'Reilly Media, "
"2009. The third edition of the book no longer covers Python at all, but the "
"first edition covered writing good regular expression patterns in great "
"detail."
msgstr ""
"Friedl, Jeffrey. Mastering Regular Expressions. 3ª ed., O'Reilly Media, "
"2009. A terceira edição do livro não cobre mais o Python, mas a primeira "
"edição cobriu a escrita de bons padrões de expressão regular em grandes "
"detalhes."

#: ../../library/re.rst:99
msgid ". (dot)"
msgstr ". (ponto)"

#: ../../library/re.rst:99 ../../library/re.rst:106 ../../library/re.rst:112
#: ../../library/re.rst:123 ../../library/re.rst:130 ../../library/re.rst:137
#: ../../library/re.rst:143 ../../library/re.rst:157 ../../library/re.rst:181
#: ../../library/re.rst:220 ../../library/re.rst:235 ../../library/re.rst:244
#: ../../library/re.rst:257 ../../library/re.rst:262 ../../library/re.rst:295
#: ../../library/re.rst:308 ../../library/re.rst:318 ../../library/re.rst:350
#: ../../library/re.rst:405 ../../library/re.rst:436 ../../library/re.rst:442
#: ../../library/re.rst:447 ../../library/re.rst:454 ../../library/re.rst:461
#: ../../library/re.rst:488 ../../library/re.rst:498 ../../library/re.rst:521
#: ../../library/re.rst:533 ../../library/re.rst:538 ../../library/re.rst:560
#: ../../library/re.rst:574 ../../library/re.rst:590 ../../library/re.rst:598
#: ../../library/re.rst:613 ../../library/re.rst:621 ../../library/re.rst:638
#: ../../library/re.rst:652 ../../library/re.rst:657 ../../library/re.rst:848
#: ../../library/re.rst:1054
msgid "in regular expressions"
msgstr "em expressões regulares"

#: ../../library/re.rst:106 ../../library/re.rst:262
msgid "^ (caret)"
msgstr "^ (circunflexo)"

#: ../../library/re.rst:112
msgid "$ (dollar)"
msgstr "$ (dólar)"

#: ../../library/re.rst:123
msgid "* (asterisk)"
msgstr "* (asterisco)"

#: ../../library/re.rst:130
msgid "+ (plus)"
msgstr "+ (mais)"

#: ../../library/re.rst:137
msgid "? (question mark)"
msgstr "? (interrogação)"

#: ../../library/re.rst:143
msgid "*?"
msgstr "*?"

#: ../../library/re.rst:143
msgid "+?"
msgstr "+?"

#: ../../library/re.rst:143
msgid "??"
msgstr "??"

#: ../../library/re.rst:157
msgid "*+"
msgstr "*+"

#: ../../library/re.rst:157
msgid "++"
msgstr "++"

#: ../../library/re.rst:157
msgid "?+"
msgstr "?+"

#: ../../library/re.rst:181
msgid "{} (curly brackets)"
msgstr "{} (chaves)"

#: ../../library/re.rst:220 ../../library/re.rst:257 ../../library/re.rst:521
msgid "\\ (backslash)"
msgstr "\\ (contrabarra)"

#: ../../library/re.rst:235
msgid "[] (square brackets)"
msgstr "[] (colchetes)"

#: ../../library/re.rst:244
msgid "- (minus)"
msgstr "- (menos)"

#: ../../library/re.rst:295
msgid "| (vertical bar)"
msgstr "| (barra vertical)"

#: ../../library/re.rst:308
msgid "() (parentheses)"
msgstr "() (parênteses)"

#: ../../library/re.rst:318
msgid "(?"
msgstr "(?"

#: ../../library/re.rst:350
msgid "(?:"
msgstr "(?:"

#: ../../library/re.rst:405
msgid "(?P<"
msgstr "(?P<"

#: ../../library/re.rst:436
msgid "(?P="
msgstr "(?P="

#: ../../library/re.rst:442
msgid "(?#"
msgstr "(?#"

#: ../../library/re.rst:447
msgid "(?="
msgstr "(?="

#: ../../library/re.rst:454
msgid "(?!"
msgstr "(?!"

#: ../../library/re.rst:461
msgid "(?<="
msgstr "(?<="

#: ../../library/re.rst:488
msgid "(?<!"
msgstr "(?<!"

#: ../../library/re.rst:498
msgid "(?("
msgstr "(?("

#: ../../library/re.rst:533
msgid "\\A"
msgstr "\\A"

#: ../../library/re.rst:538 ../../library/re.rst:657
msgid "\\b"
msgstr "\\b"

#: ../../library/re.rst:560
msgid "\\B"
msgstr "\\B"

#: ../../library/re.rst:574
msgid "\\d"
msgstr "\\d"

#: ../../library/re.rst:590
msgid "\\D"
msgstr "\\D"

#: ../../library/re.rst:598
msgid "\\s"
msgstr "\\s"

#: ../../library/re.rst:613
msgid "\\S"
msgstr "\\S"

#: ../../library/re.rst:621
msgid "\\w"
msgstr "\\w"

#: ../../library/re.rst:638
msgid "\\W"
msgstr "\\W"

#: ../../library/re.rst:652
msgid "\\Z"
msgstr "\\Z"

#: ../../library/re.rst:657
msgid "\\a"
msgstr "\\a"

#: ../../library/re.rst:657
msgid "\\f"
msgstr "\\f"

#: ../../library/re.rst:657
msgid "\\n"
msgstr "\\n"

#: ../../library/re.rst:657
msgid "\\r"
msgstr "\\r"

#: ../../library/re.rst:657
msgid "\\t"
msgstr "\\t"

#: ../../library/re.rst:657
msgid "\\u"
msgstr "\\u"

#: ../../library/re.rst:657
msgid "\\U"
msgstr "\\U"

#: ../../library/re.rst:657
msgid "\\v"
msgstr "\\v"

#: ../../library/re.rst:657
msgid "\\x"
msgstr "\\x"

#: ../../library/re.rst:657
msgid "\\\\"
msgstr "\\\\"

#: ../../library/re.rst:848
msgid "# (hash)"
msgstr "# (cerquilha)"

#: ../../library/re.rst:1054
msgid "\\g"
msgstr "\\g"

#: ../../library/re.rst:1593
msgid "scanf (C function)"
msgstr "scanf (função C)"
