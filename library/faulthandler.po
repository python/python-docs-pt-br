# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-11 17:51+0000\n"
"PO-Revision-Date: 2017-02-16 23:10+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../library/faulthandler.rst:2
msgid ":mod:`faulthandler` --- Dump the Python traceback"
msgstr ":mod:`faulthandler` --- Дамп зворотного відстеження Python"

#: ../../library/faulthandler.rst:11
msgid ""
"This module contains functions to dump Python tracebacks explicitly, on a "
"fault, after a timeout, or on a user signal. Call :func:`faulthandler."
"enable` to install fault handlers for the :const:`SIGSEGV`, :const:"
"`SIGFPE`, :const:`SIGABRT`, :const:`SIGBUS`, and :const:`SIGILL` signals. "
"You can also enable them at startup by setting the :envvar:"
"`PYTHONFAULTHANDLER` environment variable or by using the :option:`-X` "
"``faulthandler`` command line option."
msgstr ""
"Цей модуль містить функції для явного створення дампу трасування Python у "
"разі помилки, після тайм-ауту або за сигналом користувача. Викличте :func:"
"`faulthandler.enable`, щоб установити обробники помилок для :const:"
"`SIGSEGV`, :const:`SIGFPE`, :const:`SIGABRT`, :const:`SIGBUS` і :const:"
"`SIGILL` сигнали. Ви також можете ввімкнути їх під час запуску, встановивши "
"змінну середовища :envvar:`PYTHONFAULTHANDLER` або використовуючи параметр "
"командного рядка :option:`-X` ``faulthandler``."

#: ../../library/faulthandler.rst:18
msgid ""
"The fault handler is compatible with system fault handlers like Apport or "
"the Windows fault handler. The module uses an alternative stack for signal "
"handlers if the :c:func:`sigaltstack` function is available. This allows it "
"to dump the traceback even on a stack overflow."
msgstr ""
"Обробник помилок сумісний із системними обробниками помилок, такими як "
"Apport або Windows. Модуль використовує альтернативний стек для обробників "
"сигналів, якщо доступна функція :c:func:`sigaltstack`. Це дозволяє "
"створювати зворотне трасування навіть при переповненні стека."

#: ../../library/faulthandler.rst:23
msgid ""
"The fault handler is called on catastrophic cases and therefore can only use "
"signal-safe functions (e.g. it cannot allocate memory on the heap). Because "
"of this limitation traceback dumping is minimal compared to normal Python "
"tracebacks:"
msgstr ""
"Обробник помилок викликається в катастрофічних випадках і тому може "
"використовувати лише безпечні для сигналу функції (наприклад, він не може "
"виділяти пам’ять у купі). Через це обмеження дамп зворотного відстеження "
"мінімальний порівняно зі звичайним відстеженням Python:"

#: ../../library/faulthandler.rst:28
msgid ""
"Only ASCII is supported. The ``backslashreplace`` error handler is used on "
"encoding."
msgstr ""
"Підтримується лише ASCII. Під час кодування використовується обробник "
"помилок ``backslashreplace``."

#: ../../library/faulthandler.rst:30
msgid "Each string is limited to 500 characters."
msgstr "Довжина кожного рядка обмежена 500 символами."

#: ../../library/faulthandler.rst:31
msgid ""
"Only the filename, the function name and the line number are displayed. (no "
"source code)"
msgstr ""
"Відображаються лише назва файлу, назва функції та номер рядка. (без "
"вихідного коду)"

#: ../../library/faulthandler.rst:33
msgid "It is limited to 100 frames and 100 threads."
msgstr "Він обмежений 100 кадрами та 100 потоками."

#: ../../library/faulthandler.rst:34
msgid "The order is reversed: the most recent call is shown first."
msgstr "Порядок зворотний: останній виклик відображається першим."

#: ../../library/faulthandler.rst:36
msgid ""
"By default, the Python traceback is written to :data:`sys.stderr`. To see "
"tracebacks, applications must be run in the terminal. A log file can "
"alternatively be passed to :func:`faulthandler.enable`."
msgstr ""
"За замовчуванням відстеження Python записується в :data:`sys.stderr`. Щоб "
"побачити відстеження, програми мають бути запущені в терміналі. Файл журналу "
"також можна передати до :func:`faulthandler.enable`."

#: ../../library/faulthandler.rst:40
msgid ""
"The module is implemented in C, so tracebacks can be dumped on a crash or "
"when Python is deadlocked."
msgstr ""
"Модуль реалізовано на C, тому трасування можна скинути під час збою або коли "
"Python заблоковано."

#: ../../library/faulthandler.rst:43
msgid ""
"The :ref:`Python Development Mode <devmode>` calls :func:`faulthandler."
"enable` at Python startup."
msgstr ""
":ref:`Режим розробки Python <devmode>` викликає :func:`faulthandler.enable` "
"під час запуску Python."

#: ../../library/faulthandler.rst:48
msgid "Dumping the traceback"
msgstr "Викидання трасування"

#: ../../library/faulthandler.rst:52
msgid ""
"Dump the tracebacks of all threads into *file*. If *all_threads* is "
"``False``, dump only the current thread."
msgstr ""
"Дамп трасування всіх потоків у *файл*. Якщо *all_threads* має значення "
"``False``, створювати дамп лише поточного потоку."

#: ../../library/faulthandler.rst:55 ../../library/faulthandler.rst:73
#: ../../library/faulthandler.rst:111 ../../library/faulthandler.rst:133
msgid "Added support for passing file descriptor to this function."
msgstr "Додано підтримку для передачі дескриптора файлу в цю функцію."

#: ../../library/faulthandler.rst:60
msgid "Fault handler state"
msgstr "Стан обробника помилок"

#: ../../library/faulthandler.rst:64
msgid ""
"Enable the fault handler: install handlers for the :const:`SIGSEGV`, :const:"
"`SIGFPE`, :const:`SIGABRT`, :const:`SIGBUS` and :const:`SIGILL` signals to "
"dump the Python traceback. If *all_threads* is ``True``, produce tracebacks "
"for every running thread. Otherwise, dump only the current thread."
msgstr ""
"Увімкніть обробник помилок: встановіть обробники для сигналів :const:"
"`SIGSEGV`, :const:`SIGFPE`, :const:`SIGABRT`, :const:`SIGBUS` і :const:"
"`SIGILL`, щоб зробити дамп зворотного відстеження Python. Якщо *all_threads* "
"має значення ``True``, виробляти трасування для кожного запущеного потоку. В "
"іншому випадку створіть дамп лише поточного потоку."

#: ../../library/faulthandler.rst:70
msgid ""
"The *file* must be kept open until the fault handler is disabled: see :ref:"
"`issue with file descriptors <faulthandler-fd>`."
msgstr ""
"*Файл* має бути відкритим, доки обробник помилок не буде вимкнено: див. :ref:"
"`проблему з дескрипторами файлів <faulthandler-fd>`."

#: ../../library/faulthandler.rst:76
msgid "On Windows, a handler for Windows exception is also installed."
msgstr "У Windows також встановлено обробник винятків Windows."

#: ../../library/faulthandler.rst:81
msgid ""
"Disable the fault handler: uninstall the signal handlers installed by :func:"
"`enable`."
msgstr ""
"Вимкніть обробник помилок: видаліть обробники сигналів, встановлені :func:"
"`enable`."

#: ../../library/faulthandler.rst:86
msgid "Check if the fault handler is enabled."
msgstr "Перевірте, чи ввімкнено обробник помилок."

#: ../../library/faulthandler.rst:90
msgid "Dumping the tracebacks after a timeout"
msgstr "Викидання трасування після тайм-ауту"

#: ../../library/faulthandler.rst:94
msgid ""
"Dump the tracebacks of all threads, after a timeout of *timeout* seconds, or "
"every *timeout* seconds if *repeat* is ``True``.  If *exit* is ``True``, "
"call :c:func:`_exit` with status=1 after dumping the tracebacks.  (Note :c:"
"func:`_exit` exits the process immediately, which means it doesn't do any "
"cleanup like flushing file buffers.) If the function is called twice, the "
"new call replaces previous parameters and resets the timeout. The timer has "
"a sub-second resolution."
msgstr ""
"Створювати дамп відстеження всіх потоків після тайм-ауту *timeout* секунд "
"або кожні *timeout* секунд, якщо *repeat* має значення ``True``. Якщо *exit* "
"має значення ``True``, викличте :c:func:`_exit` зі статусом=1 після "
"створення дампу трасування. (Примітка: :c:func:`_exit` негайно виходить із "
"процесу, що означає, що він не виконує жодного очищення, наприклад очищення "
"буферів файлів.) Якщо функція викликається двічі, новий виклик замінює "
"попередні параметри та скидає час очікування. Таймер має роздільну здатність "
"до секунди."

#: ../../library/faulthandler.rst:102
msgid ""
"The *file* must be kept open until the traceback is dumped or :func:"
"`cancel_dump_traceback_later` is called: see :ref:`issue with file "
"descriptors <faulthandler-fd>`."
msgstr ""
"*Файл* має залишатися відкритим, доки не буде створено дамп трасування або :"
"func:`cancel_dump_traceback_later`: див. :ref:`проблему з дескрипторами "
"файлів <faulthandler-fd>`."

#: ../../library/faulthandler.rst:106
msgid "This function is implemented using a watchdog thread."
msgstr "Ця функція реалізована за допомогою сторожового потоку."

#: ../../library/faulthandler.rst:108
msgid "This function is now always available."
msgstr "Тепер ця функція доступна завжди."

#: ../../library/faulthandler.rst:116
msgid "Cancel the last call to :func:`dump_traceback_later`."
msgstr "Скасувати останній виклик :func:`dump_traceback_later`."

#: ../../library/faulthandler.rst:120
msgid "Dumping the traceback on a user signal"
msgstr "Скидання зворотного відстеження за сигналом користувача"

#: ../../library/faulthandler.rst:124
msgid ""
"Register a user signal: install a handler for the *signum* signal to dump "
"the traceback of all threads, or of the current thread if *all_threads* is "
"``False``, into *file*. Call the previous handler if chain is ``True``."
msgstr ""
"Зареєструйте сигнал користувача: встановіть обробник для сигналу *signum*, "
"щоб скинути зворотне трасування всіх потоків або поточного потоку, якщо "
"*all_threads* має значення ``False``, у *файл*. Викликати попередній "
"обробник, якщо ланцюжок має значення ``True``."

#: ../../library/faulthandler.rst:128
msgid ""
"The *file* must be kept open until the signal is unregistered by :func:"
"`unregister`: see :ref:`issue with file descriptors <faulthandler-fd>`."
msgstr ""
"*Файл* має залишатися відкритим, доки сигнал не буде скасовано :func:"
"`unregister`: див. :ref:`проблему з дескрипторами файлів <faulthandler-fd>`."

#: ../../library/faulthandler.rst:131 ../../library/faulthandler.rst:142
msgid "Not available on Windows."
msgstr "Não disponível no Windows."

#: ../../library/faulthandler.rst:138
msgid ""
"Unregister a user signal: uninstall the handler of the *signum* signal "
"installed by :func:`register`. Return ``True`` if the signal was registered, "
"``False`` otherwise."
msgstr ""
"Скасувати реєстрацію сигналу користувача: видалити обробник сигналу "
"*signum*, встановлений :func:`register`. Повертає ``True``, якщо сигнал був "
"зареєстрований, ``False`` інакше."

#: ../../library/faulthandler.rst:148
msgid "Issue with file descriptors"
msgstr "Проблема з дескрипторами файлів"

#: ../../library/faulthandler.rst:150
msgid ""
":func:`enable`, :func:`dump_traceback_later` and :func:`register` keep the "
"file descriptor of their *file* argument. If the file is closed and its file "
"descriptor is reused by a new file, or if :func:`os.dup2` is used to replace "
"the file descriptor, the traceback will be written into a different file. "
"Call these functions again each time that the file is replaced."
msgstr ""
":func:`enable`, :func:`dump_traceback_later` і :func:`register` зберігають "
"файловий дескриптор свого аргументу *file*. Якщо файл закрито і його "
"файловий дескриптор повторно використовується в новому файлі, або якщо :func:"
"`os.dup2` використовується для заміни файлового дескриптора, трасування буде "
"записане в інший файл. Викликайте ці функції знову щоразу, коли файл "
"замінюється."

#: ../../library/faulthandler.rst:158
msgid "Example"
msgstr "Exemplo"

#: ../../library/faulthandler.rst:160
msgid ""
"Example of a segmentation fault on Linux with and without enabling the fault "
"handler:"
msgstr ""
"Приклад помилки сегментації в Linux із увімкненням і без увімкнення "
"обробника помилок:"
