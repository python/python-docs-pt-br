# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-27 16:11+0000\n"
"PO-Revision-Date: 2023-05-24 02:10+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../distutils/extending.rst:5
msgid "Extending Distutils"
msgstr "Estendendo Distutils"

#: ../../distutils/_setuptools_disclaimer.rst:3
msgid ""
"This document is being retained solely until the ``setuptools`` "
"documentation at https://setuptools.readthedocs.io/en/latest/setuptools.html "
"independently covers all of the relevant information currently included here."
msgstr ""
"Este documento está sendo mantido apenas até que a documentação do "
"``setuptools`` em https://setuptools.readthedocs.io/en/latest/setuptools."
"html cubra independentemente todas as informações relevantes atualmente "
"incluídas aqui."

#: ../../distutils/extending.rst:9
msgid ""
"Distutils can be extended in various ways.  Most extensions take the form of "
"new commands or replacements for existing commands.  New commands may be "
"written to support new types of platform-specific packaging, for example, "
"while replacements for existing commands may be made to modify details of "
"how the command operates on a package."
msgstr ""
"Distutils podem ser estendidos de várias maneiras. A maioria das extensões "
"assume a forma de novos comandos ou substituições de comandos existentes. "
"Novos comandos podem ser gravados para dar suporte a novos tipos de pacotes "
"específicos da plataforma, por exemplo, enquanto substituições de comandos "
"existentes podem ser feitas para modificar detalhes de como o comando opera "
"em um pacote."

#: ../../distutils/extending.rst:15
msgid ""
"Most extensions of the distutils are made within :file:`setup.py` scripts "
"that want to modify existing commands; many simply add a few file extensions "
"that should be copied into packages in addition to :file:`.py` files as a "
"convenience."
msgstr ""
"A maioria das extensões dos distutils é feita dentro de scripts :file:`setup."
"py` que desejam modificar comandos existentes; muitos simplesmente adicionam "
"algumas extensões de arquivo que devem ser copiadas em pacotes, além de :"
"file:`.py` como uma conveniência."

#: ../../distutils/extending.rst:20
msgid ""
"Most distutils command implementations are subclasses of the :class:"
"`distutils.cmd.Command` class.  New commands may directly inherit from :"
"class:`Command`, while replacements often derive from :class:`Command` "
"indirectly, directly subclassing the command they are replacing.  Commands "
"are required to derive from :class:`Command`."
msgstr ""
"A maioria das implementações de comando distutils são subclasses da classe :"
"class:`distutils.cmd.Command`. Novos comandos podem herdar diretamente de :"
"class:`Command`, enquanto substituições geralmente derivam de :class:"
"`Command` indiretamente, criando subclasses diretamente do comando que eles "
"estão substituindo. Os comandos são necessários para derivar de :class:"
"`Command`."

#: ../../distutils/extending.rst:35
msgid "Integrating new commands"
msgstr "Integrando novos comandos"

#: ../../distutils/extending.rst:37
msgid ""
"There are different ways to integrate new command implementations into "
"distutils.  The most difficult is to lobby for the inclusion of the new "
"features in distutils itself, and wait for (and require) a version of Python "
"that provides that support.  This is really hard for many reasons."
msgstr ""
"Existem diferentes maneiras de integrar novas implementações de comando nos "
"distutils. O mais difícil é fazer lobby para a inclusão dos novos recursos "
"no próprio distutils e aguardar (e exigir) uma versão do Python que forneça "
"esse suporte. Isso é realmente difícil por vários motivos."

#: ../../distutils/extending.rst:42
msgid ""
"The most common, and possibly the most reasonable for most needs, is to "
"include the new implementations with your :file:`setup.py` script, and cause "
"the :func:`distutils.core.setup` function use them::"
msgstr ""
"O mais comum, e possivelmente o mais razoável para a maioria das "
"necessidades, é incluir as novas implementações com o script :file:`setup."
"py` e fazer com que a função :func:`distutils.core.setup` use-as::"

#: ../../distutils/extending.rst:57
msgid ""
"This approach is most valuable if the new implementations must be used to "
"use a particular package, as everyone interested in the package will need to "
"have the new command implementation."
msgstr ""
"Essa abordagem é mais valiosa se as novas implementações precisarem ser "
"usadas para usar um pacote específico, pois todos os interessados no pacote "
"precisarão ter a nova implementação de comando."

#: ../../distutils/extending.rst:61
msgid ""
"Beginning with Python 2.4, a third option is available, intended to allow "
"new commands to be added which can support existing :file:`setup.py` scripts "
"without requiring modifications to the Python installation.  This is "
"expected to allow third-party extensions to provide support for additional "
"packaging systems, but the commands can be used for anything distutils "
"commands can be used for.  A new configuration option, ``command_packages`` "
"(command-line option :option:`!--command-packages`), can be used to specify "
"additional packages to be searched for modules implementing commands.  Like "
"all distutils options, this can be specified on the command line or in a "
"configuration file.  This option can only be set in the ``[global]`` section "
"of a configuration file, or before any commands on the command line.  If set "
"in a configuration file, it can be overridden from the command line; setting "
"it to an empty string on the command line causes the default to be used.  "
"This should never be set in a configuration file provided with a package."
msgstr ""
"A partir do Python 2.4, uma terceira opção está disponível, destinada a "
"permitir que novos comandos sejam adicionados, os quais podem ter suporte a "
"scripts :file:`setup.py` existentes sem exigir modificações na instalação do "
"Python. Espera-se que isso permita que extensões de terceiros forneçam "
"suporte a sistemas de empacotamento adicionais, mas os comandos podem ser "
"usados para qualquer coisa em que os comandos distutils possam ser usados. "
"Uma nova opção de configuração, ``command_packages`` (opção da linha de "
"comando :option:`!--command-packages`), pode ser usada para especificar "
"pacotes adicionais a serem pesquisados por módulos que implementam comandos. "
"Como todas as opções do distutils, isso pode ser especificado na linha de "
"comando ou em um arquivo de configuração. Esta opção só pode ser definida na "
"seção ``[global]`` de um arquivo de configuração ou antes de qualquer "
"comando na linha de comando. Se definido em um arquivo de configuração, ele "
"poderá ser substituído na linha de comando; defini-lo como uma string vazia "
"na linha de comando faz com que o padrão seja usado. Isso nunca deve ser "
"definido em um arquivo de configuração fornecido com um pacote."

#: ../../distutils/extending.rst:76
msgid ""
"This new option can be used to add any number of packages to the list of "
"packages searched for command implementations; multiple package names should "
"be separated by commas.  When not specified, the search is only performed in "
"the :mod:`distutils.command` package.  When :file:`setup.py` is run with the "
"option ``--command-packages distcmds,buildcmds``, however, the packages :mod:"
"`distutils.command`, :mod:`distcmds`, and :mod:`buildcmds` will be searched "
"in that order.  New commands are expected to be implemented in modules of "
"the same name as the command by classes sharing the same name.  Given the "
"example command line option above, the command :command:`bdist_openpkg` "
"could be implemented by the class :class:`distcmds.bdist_openpkg."
"bdist_openpkg` or :class:`buildcmds.bdist_openpkg.bdist_openpkg`."
msgstr ""
"Esta nova opção pode ser usada para adicionar qualquer número de pacotes à "
"lista de pacotes pesquisados para implementações de comandos; vários nomes "
"de pacotes devem ser separados por vírgulas. Quando não especificada, a "
"pesquisa é realizada apenas no pacote :mod:`distutils.command`. Quando :file:"
"`setup.py` é executado com a opção ``--command-packages distcmds,"
"buildcmds``, no entanto, os pacotes :mod:`distutils.command`, :mod:"
"`distcmds` e :mod:`buildcmds` será pesquisado nessa ordem. Espera-se que "
"novos comandos sejam implementados em módulos com o mesmo nome que o comando "
"por classes que compartilham o mesmo nome. Dada a opção de linha de comando "
"de exemplo acima, o comando :command:`bdist_openpkg` pode ser implementado "
"pela classe :class:`distcmds.bdist_openpkg.bdist_openpkg` ou :class:"
"`buildcmds.bdist_openpkg.bdist_openpkg`."

#: ../../distutils/extending.rst:90
msgid "Adding new distribution types"
msgstr "Adicionando novos tipos de distribuição"

#: ../../distutils/extending.rst:92
msgid ""
"Commands that create distributions (files in the :file:`dist/` directory) "
"need to add ``(command, filename)`` pairs to ``self.distribution."
"dist_files`` so that :command:`upload` can upload it to PyPI.  The "
"*filename* in the pair contains no path information, only the name of the "
"file itself.  In dry-run mode, pairs should still be added to represent what "
"would have been created."
msgstr ""
"Os comandos que criam distribuições (arquivos no diretório :file:`dist/`) "
"precisam adicionar pares ``(command, filename)`` ao ``self.distribution."
"dist_files`` para que :command:`upload` possa ser carregado para o PyPI. O "
"*nome do arquivo* no par não contém informações de caminho, apenas o nome do "
"próprio arquivo. No modo de execução a seco, os pares ainda devem ser "
"adicionados para representar o que teria sido criado."
