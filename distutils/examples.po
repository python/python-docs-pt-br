# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-11 16:41+0000\n"
"PO-Revision-Date: 2023-05-24 02:10+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../distutils/examples.rst:5
msgid "Distutils Examples"
msgstr "Exemplos de Distutils"

#: ../../distutils/_setuptools_disclaimer.rst:3
msgid ""
"This document is being retained solely until the ``setuptools`` "
"documentation at https://setuptools.readthedocs.io/en/latest/setuptools.html "
"independently covers all of the relevant information currently included here."
msgstr ""
"Ten dokument jest przechowywany wyłącznie do czasu, gdy dokumentacja "
"``setuptools`` pod adresem https://setuptools.readthedocs.io/en/latest/"
"setuptools.html niezależnie obejmie wszystkie istotne informacje, które są "
"tutaj zawarte."

#: ../../distutils/examples.rst:9
msgid ""
"This chapter provides a number of basic examples to help get started with "
"distutils.  Additional information about using distutils can be found in the "
"Distutils Cookbook."
msgstr ""
"Este capítulo fornece vários exemplos básicos para ajudar a começar com "
"distutils. Informações adicionais sobre o uso de distutils podem ser "
"encontradas no Distutils Cookbook."

#: ../../distutils/examples.rst:16
msgid "`Distutils Cookbook <https://wiki.python.org/moin/Distutils/Cookbook>`_"
msgstr ""
"`Distutils Cookbook <https://wiki.python.org/moin/Distutils/Cookbook>`_"

#: ../../distutils/examples.rst:17
msgid ""
"Collection of recipes showing how to achieve more control over distutils."
msgstr ""
"Coleção de receitas mostrando como obter mais controle sobre distutils."

#: ../../distutils/examples.rst:23
msgid "Pure Python distribution (by module)"
msgstr "Distribuição Python pura (por módulo)"

#: ../../distutils/examples.rst:25
msgid ""
"If you're just distributing a couple of modules, especially if they don't "
"live in a particular package, you can specify them individually using the "
"``py_modules`` option in the setup script."
msgstr ""
"Se você está apenas distribuindo alguns módulos, especialmente se eles não "
"residem em um pacote específico, você pode especificá-los individualmente "
"usando a opção ``py_modules`` no script de instalação."

#: ../../distutils/examples.rst:29
msgid ""
"In the simplest case, you'll have two files to worry about: a setup script "
"and the single module you're distributing, :file:`foo.py` in this example::"
msgstr ""
"No caso mais simples, você terá dois arquivos com os quais se preocupar: um "
"script de instalação e o único módulo que você está distribuindo :file:`foo."
"py` neste exemplo::"

#: ../../distutils/examples.rst:36
msgid ""
"(In all diagrams in this section, *<root>* will refer to the distribution "
"root directory.)  A minimal setup script to describe this situation would "
"be::"
msgstr ""
"(Em todos os diagramas desta seção, *<root>* se refere ao diretório raiz da "
"distribuição.) Um script de instalação mínimo para descrever essa situação "
"seria::"

#: ../../distutils/examples.rst:45
msgid ""
"Note that the name of the distribution is specified independently with the "
"``name`` option, and there's no rule that says it has to be the same as the "
"name of the sole module in the distribution (although that's probably a good "
"convention to follow).  However, the distribution name is used to generate "
"filenames, so you should stick to letters, digits, underscores, and hyphens."
msgstr ""
"Observe que o nome da distribuição é especificado independentemente com a "
"opção ``name``, e não existe uma regra que diga que deve ser igual ao nome "
"do único módulo na distribuição (embora seja provavelmente uma boa convenção "
"a seguir ) No entanto, o nome da distribuição é usado para gerar nomes de "
"arquivos, portanto, você deve usar letras, dígitos, sublinhados e hífenes."

#: ../../distutils/examples.rst:51
msgid ""
"Since ``py_modules`` is a list, you can of course specify multiple modules, "
"eg. if you're distributing modules :mod:`foo` and :mod:`bar`, your setup "
"might look like this::"
msgstr ""
"Como ``py_modules`` é uma lista, é claro que você pode especificar vários "
"módulos, por exemplo. se você estiver distribuindo os módulos :mod:`foo` e :"
"mod:`bar`, sua configuração poderá ser assim::"

#: ../../distutils/examples.rst:60
msgid "and the setup script might be  ::"
msgstr "e o script de configuração pode ser ::"

#: ../../distutils/examples.rst:68
msgid ""
"You can put module source files into another directory, but if you have "
"enough modules to do that, it's probably easier to specify modules by "
"package rather than listing them individually."
msgstr ""
"Você pode colocar os arquivos fonte do módulo em outro diretório, mas se "
"você tiver módulos suficientes para fazer isso, provavelmente será mais "
"fácil especificar módulos por pacote do que listá-los individualmente."

#: ../../distutils/examples.rst:76
msgid "Pure Python distribution (by package)"
msgstr "Distribuição Python pura (por pacote)"

#: ../../distutils/examples.rst:78
msgid ""
"If you have more than a couple of modules to distribute, especially if they "
"are in multiple packages, it's probably easier to specify whole packages "
"rather than individual modules.  This works even if your modules are not in "
"a package; you can just tell the Distutils to process modules from the root "
"package, and that works the same as any other package (except that you don't "
"have to have an :file:`__init__.py` file)."
msgstr ""
"Se você tiver mais do que alguns módulos para distribuir, especialmente se "
"estiverem em vários pacotes, provavelmente será mais fácil especificar "
"pacotes inteiros do que módulos individuais. Isso funciona mesmo que seus "
"módulos não estejam em um pacote; você pode simplesmente dizer ao Distutils "
"para processar os módulos do pacote raiz, e isso funciona da mesma forma que "
"em qualquer outro pacote (exceto que você não precisa ter um arquivo :file:"
"`__init__.py`)."

#: ../../distutils/examples.rst:85
msgid "The setup script from the last example could also be written as  ::"
msgstr ""
"O script de instalação do último exemplo também pode ser escrito como ::"

#: ../../distutils/examples.rst:93
msgid "(The empty string stands for the root package.)"
msgstr "(A string vazia representa o pacote raiz.)"

#: ../../distutils/examples.rst:95
msgid ""
"If those two files are moved into a subdirectory, but remain in the root "
"package, e.g.::"
msgstr ""
"Se esses dois arquivos forem movidos para um subdiretório, mas permanecerem "
"no pacote raiz, por exemplo::"

#: ../../distutils/examples.rst:103
msgid ""
"then you would still specify the root package, but you have to tell the "
"Distutils where source files in the root package live::"
msgstr ""
"você ainda especificaria o pacote raiz, mas precisará informar ao Distutils "
"onde estão os arquivos fonte no pacote raiz::"

#: ../../distutils/examples.rst:113
msgid ""
"More typically, though, you will want to distribute multiple modules in the "
"same package (or in sub-packages).  For example, if the :mod:`foo`  and :mod:"
"`bar` modules belong in package :mod:`foobar`, one way to layout your source "
"tree is ::"
msgstr ""
"Mais tipicamente, porém, você deseja distribuir vários módulos no mesmo "
"pacote (ou em subpacotes). Por exemplo, se os módulos :mod:`foo` e :mod:"
"`bar` pertencem ao pacote :mod:`foobar`, uma maneira de fazer o layout da "
"sua árvore de fontes é ::"

#: ../../distutils/examples.rst:125
msgid ""
"This is in fact the default layout expected by the Distutils, and the one "
"that requires the least work to describe in your setup script::"
msgstr ""
"Na verdade, esse é o layout padrão esperado pelo Distutils e o que exige "
"menos trabalho para descrever no seu script de instalação::"

#: ../../distutils/examples.rst:134
msgid ""
"If you want to put modules in directories not named for their package, then "
"you need to use the ``package_dir`` option again.  For example, if the :file:"
"`src` directory holds modules in the :mod:`foobar` package::"
msgstr ""
"Se você quiser colocar módulos em diretórios não nomeados para o pacote, "
"precisará usar a opção ``package_dir`` novamente. Por exemplo, se o "
"diretório :file:`src` contiver módulos no pacote :mod:`foobar`::"

#: ../../distutils/examples.rst:145
msgid "an appropriate setup script would be  ::"
msgstr "um script de instalação apropriado seria ::"

#: ../../distutils/examples.rst:154
msgid ""
"Or, you might put modules from your main package right in the distribution "
"root::"
msgstr ""
"Ou, você pode colocar módulos do seu pacote principal diretamente na raiz da "
"distribuição::"

#: ../../distutils/examples.rst:163
msgid "in which case your setup script would be  ::"
msgstr "nesse caso, seu script de instalação seria ::"

#: ../../distutils/examples.rst:172
msgid "(The empty string also stands for the current directory.)"
msgstr "(A string vazia também representa o diretório atual.)"

#: ../../distutils/examples.rst:174
msgid ""
"If you have sub-packages, they must be explicitly listed in ``packages``, "
"but any entries in ``package_dir`` automatically extend to sub-packages. (In "
"other words, the Distutils does *not* scan your source tree, trying to "
"figure out which directories correspond to Python packages by looking for :"
"file:`__init__.py` files.)  Thus, if the default layout grows a sub-package::"
msgstr ""
"Se você possui subpacotes, eles devem ser listados explicitamente em "
"``packages``, mas qualquer entrada em ``package_dir`` se estende "
"automaticamente aos subpacotes. (Em outras palavras, o Distutils *não* varre "
"sua árvore de fontes, tentando descobrir quais diretórios correspondem aos "
"pacotes Python procurando :file:`__init__.py`.) Portanto, se o layout padrão "
"aumentar um subpacote::"

#: ../../distutils/examples.rst:190
msgid "then the corresponding setup script would be  ::"
msgstr "então o script de instalação correspondente seria ::"

#: ../../distutils/examples.rst:202
msgid "Single extension module"
msgstr "Módulo de extensão única"

#: ../../distutils/examples.rst:204
msgid ""
"Extension modules are specified using the ``ext_modules`` option. "
"``package_dir`` has no effect on where extension source files are found; it "
"only affects the source for pure Python modules.  The simplest  case, a "
"single extension module in a single C source file, is::"
msgstr ""
"Os módulos de extensão são especificados usando a opção ``ext_modules``. "
"``package_dir`` não afeta onde os arquivos de origem das extensões são "
"encontrados; isso afeta apenas a fonte dos módulos Python puros. O caso mais "
"simples, um único módulo de extensão em um único arquivo fonte C, é::"

#: ../../distutils/examples.rst:213
msgid ""
"If the :mod:`foo` extension belongs in the root package, the setup script "
"for this could be  ::"
msgstr ""
"Se a extensão :mod:`foo` pertencer ao pacote raiz, o script de instalação "
"para isso pode ser ::"

#: ../../distutils/examples.rst:223
msgid "If the extension actually belongs in a package, say :mod:`foopkg`, then"
msgstr ""
"Se a extensão realmente pertence a um pacote, digamos :mod:`foopkg`, então"

#: ../../distutils/examples.rst:225
msgid ""
"With exactly the same source tree layout, this extension can be put in the :"
"mod:`foopkg` package simply by changing the name of the extension::"
msgstr ""
"Com exatamente o mesmo layout da árvore de fontes, esta extensão pode ser "
"colocada no pacote :mod:`foopkg` simplesmente alterando o nome da extensão::"

#: ../../distutils/examples.rst:236
msgid "Checking a package"
msgstr "Verificando um pacote"

#: ../../distutils/examples.rst:238
msgid ""
"The ``check`` command allows you to verify if your package meta-data meet "
"the minimum requirements to build a distribution."
msgstr ""
"O comando ``check`` permite verificar se os metadados do seu pacote atendem "
"aos requisitos mínimos para construir uma distribuição."

#: ../../distutils/examples.rst:241
msgid ""
"To run it, just call it using your :file:`setup.py` script. If something is "
"missing, ``check`` will display a warning."
msgstr ""
"Para executá-lo, basta chamá-lo usando o script :file:`setup.py`. Se algo "
"estiver faltando, ``check`` exibirá um aviso."

#: ../../distutils/examples.rst:244
msgid "Let's take an example with a simple script::"
msgstr "Vamos dar um exemplo com um script simples::"

#: ../../distutils/examples.rst:250
msgid "Running the ``check`` command will display some warnings:"
msgstr "A execução do comando ``check`` exibirá alguns avisos:"

#: ../../distutils/examples.rst:261
msgid ""
"If you use the reStructuredText syntax in the ``long_description`` field and "
"`docutils`_  is installed you can check if the syntax is fine with the "
"``check`` command, using the ``restructuredtext`` option."
msgstr ""
"Se você usar a sintaxe reStructuredText no campo ``long_description`` e o "
"`docutils`_ estiver instalado, poderá verificar se a sintaxe está correta "
"com o comando ``check``, usando a opção ``restructuredtext``."

#: ../../distutils/examples.rst:265
msgid "For example, if the :file:`setup.py` script is changed like this::"
msgstr "Por exemplo, se o script :file:`setup.py` for alterado assim::"

#: ../../distutils/examples.rst:280
msgid ""
"Where the long description is broken, ``check`` will be able to detect it by "
"using the :mod:`docutils` parser:"
msgstr ""
"Onde a descrição longa está quebrada, ``check`` poderá detectá-la usando o "
"analisador :mod:`docutils`::"

#: ../../distutils/examples.rst:291
msgid "Reading the metadata"
msgstr "Lendo os metadados"

#: ../../distutils/examples.rst:293
msgid ""
"The :func:`distutils.core.setup` function provides a command-line interface "
"that allows you to query the metadata fields of a project through the "
"``setup.py`` script of a given project:"
msgstr ""
"A função :func:`distutils.core.setup` fornece uma interface de linha de "
"comando que permite consultar os campos de metadados de um projeto através "
"do script ``setup.py`` de um projeto fornecido:"

#: ../../distutils/examples.rst:302
msgid ""
"This call reads the ``name`` metadata by running the :func:`distutils.core."
"setup`  function. Although, when a source or binary distribution is created "
"with Distutils, the metadata fields are written in a static file called :"
"file:`PKG-INFO`. When a Distutils-based project is installed in Python, the :"
"file:`PKG-INFO` file is copied alongside the modules and packages of the "
"distribution under :file:`NAME-VERSION-pyX.X.egg-info`, where ``NAME`` is "
"the name of the project, ``VERSION`` its version as defined in the Metadata, "
"and ``pyX.X`` the major and minor version of Python like ``2.7`` or ``3.2``."
msgstr ""
"Essa chamada lê os metadados ``name`` executando a função :func:`distutils."
"core.setup`. Embora, quando uma distribuição de origem ou binária é criada "
"com o Distutils, os campos de metadados sejam gravados em um arquivo "
"estático chamado :file:`PKG-INFO`. Quando um projeto baseado no Distutils é "
"instalado no Python, o arquivo :file:`PKG-INFO` é copiado juntamente com os "
"módulos e pacotes da distribuição em :file:`NOME-VERSÃO-pyX.X.egg-info`, em "
"que ``NOME`` é o nome do projeto, ``VERSÃO`` sua versão conforme definida "
"nos metadados e ``pyX.X`` a versão principal e secundária do Python, como "
"``2.7`` ou ``3.2``."

#: ../../distutils/examples.rst:312
msgid ""
"You can read back this static file, by using the :class:`distutils.dist."
"DistributionMetadata` class and its :func:`read_pkg_file` method::"
msgstr ""
"Você pode ler novamente esse arquivo estático usando a classe :class:"
"`distutils.dist.DistributionMetadata` e seu método :func:`read_pkg_file`::"

#: ../../distutils/examples.rst:326
msgid ""
"Notice that the class can also be instantiated with a metadata file path to "
"loads its values::"
msgstr ""
"Observe que a classe também pode ser instanciada com um caminho de arquivo "
"de metadados para carregar seus valores::"
