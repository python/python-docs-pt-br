# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-31 10:59+0000\n"
"PO-Revision-Date: 2024-07-20 00:54+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../deprecations/pending-removal-in-3.15.rst:2
msgid "Pending Removal in Python 3.15"
msgstr "Remoção pendente no Python 3.15"

#: ../../deprecations/pending-removal-in-3.15.rst:4
msgid ""
":class:`http.server.CGIHTTPRequestHandler` will be removed along with its "
"related ``--cgi`` flag to ``python -m http.server``.  It was obsolete and "
"rarely used.  No direct replacement exists.  *Anything* is better than CGI "
"to interface a web server with a request handler."
msgstr ""
":class:`http.server.CGIHTTPRequestHandler` será removido junto com seu "
"sinalizador relacionado ``--cgi`` para ``python -m http.server``. Estava "
"descontinuado e raramente usado. Não existe substituição direta. *Qualquer "
"coisa* é melhor que CGI para fazer a interface de um servidor web com um "
"manipulador de solicitações."

#: ../../deprecations/pending-removal-in-3.15.rst:9
msgid ""
":class:`locale`: :func:`locale.getdefaultlocale` was deprecated in Python "
"3.11 and originally planned for removal in Python 3.13 (:gh:`90817`), but "
"removal has been postponed to Python 3.15. Use :func:`locale.setlocale`, :"
"func:`locale.getencoding` and :func:`locale.getlocale` instead. (Contributed "
"by Hugo van Kemenade in :gh:`111187`.)"
msgstr ""
":class:`locale`: :func:`locale.getdefaultlocale` foi descontinuada no Python "
"3.11 e originalmente planejada para remoção no Python 3.13 (:gh:`90817`), "
"mas a remoção foi adiada para o Python 3.15. Use :func:`locale.setlocale`, :"
"func:`locale.getencoding` e :func:`locale.getlocale` em vez disso. "
"(Contribuição de Hugo van Kemenade em :gh:`111187`.)"

#: ../../deprecations/pending-removal-in-3.15.rst:16
msgid ""
":mod:`pathlib`: :meth:`pathlib.PurePath.is_reserved` is deprecated and "
"scheduled for removal in Python 3.15. Use :func:`os.path.isreserved` to "
"detect reserved paths on Windows."
msgstr ""
":mod:`pathlib`: :meth:`pathlib.PurePath.is_reserved` está descontinuado e "
"agendado para remoção no Python 3.15. Use :func:`os.path.isreserved` para "
"detectar caminhos reservados no Windows."

#: ../../deprecations/pending-removal-in-3.15.rst:21
msgid ""
":mod:`platform`: :func:`~platform.java_ver` is deprecated and will be "
"removed in 3.15. It was largely untested, had a confusing API, and was only "
"useful for Jython support. (Contributed by Nikita Sobolev in :gh:`116349`.)"
msgstr ""
":mod:`platform`: :func:`~platform.java_ver` está descontinuada e será "
"removida na versão 3.15. Ela não foi testada em grande parte, tinha uma API "
"confusa e só era útil para suporte a Jython. (Contribuição de Nikita Sobolev "
"em :gh:`116349`.)"

#: ../../deprecations/pending-removal-in-3.15.rst:27
msgid ""
":mod:`threading`: Passing any arguments to :func:`threading.RLock` is now "
"deprecated. C version allows any numbers of args and kwargs, but they are "
"just ignored. Python version does not allow any arguments. All arguments "
"will be removed from :func:`threading.RLock` in Python 3.15. (Contributed by "
"Nikita Sobolev in :gh:`102029`.)"
msgstr ""
":mod:`threading`: Passar qualquer argumento para :func:`threading.RLock` "
"agora está descontinuado. A versão C permite qualquer número de args e "
"kwargs, mas eles são simplesmente ignorados. A versão Python não permite "
"nenhum argumento. Todos os argumentos serão removidos de :func:`threading."
"RLock` no Python 3.15. (Contribuição de Nikita Sobolev em :gh:`102029`.)"

#: ../../deprecations/pending-removal-in-3.15.rst:34
msgid ":class:`typing.NamedTuple`:"
msgstr ":class:`typing.NamedTuple`:"

#: ../../deprecations/pending-removal-in-3.15.rst:36
msgid ""
"The undocumented keyword argument syntax for creating :class:`!NamedTuple` "
"classes (``NT = NamedTuple(\"NT\", x=int)``) is deprecated, and will be "
"disallowed in 3.15. Use the class-based syntax or the functional syntax "
"instead."
msgstr ""
"A sintaxe de argumento nomeado não documentada para criar classes :class:`!"
"NamedTuple` (``NT = NamedTuple(\"NT\", x=int)``) está descontinuada e não "
"será permitida em 3.15. Use a sintaxe baseada em classe ou a sintaxe "
"funcional."

#: ../../deprecations/pending-removal-in-3.15.rst:40
msgid ""
"When using the functional syntax to create a :class:`!NamedTuple` class, "
"failing to pass a value to the *fields* parameter (``NT = "
"NamedTuple(\"NT\")``) is deprecated. Passing ``None`` to the *fields* "
"parameter (``NT = NamedTuple(\"NT\", None)``) is also deprecated. Both will "
"be disallowed in Python 3.15. To create a :class:`!NamedTuple` class with 0 "
"fields, use ``class NT(NamedTuple): pass`` or ``NT = NamedTuple(\"NT\", "
"[])``."
msgstr ""
"Ao usar a sintaxe funcional para criar uma classe :class:`!NamedTuple`, "
"falhar ao passar um valor para o parâmetro *fields* (``NT = "
"NamedTuple(\"NT\")``) está descontinuada. Passar ``None`` para o parâmetro "
"*fields* (``NT = NamedTuple(\"NT\", None)``) também está descontinuada. "
"Ambos não serão permitidos no Python 3.15. Para criar uma classe :class:`!"
"NamedTuple` com 0 campos, use ``class NT(NamedTuple): pass`` ou ``NT = "
"NamedTuple(\"NT\", [])``."

#: ../../deprecations/pending-removal-in-3.15.rst:47
msgid ""
":class:`typing.TypedDict`: When using the functional syntax to create a :"
"class:`!TypedDict` class, failing to pass a value to the *fields* parameter "
"(``TD = TypedDict(\"TD\")``) is deprecated. Passing ``None`` to the *fields* "
"parameter (``TD = TypedDict(\"TD\", None)``) is also deprecated. Both will "
"be disallowed in Python 3.15. To create a :class:`!TypedDict` class with 0 "
"fields, use ``class TD(TypedDict): pass`` or ``TD = TypedDict(\"TD\", {})``."
msgstr ""
":class:`typing.TypedDict`: Ao usar a sintaxe funcional para criar uma "
"classe :class:`!TypedDict`, falhar ao passar um valor para o parâmetro "
"*fields* (``TD = TypedDict(\"TD\")``) está descontinuada. Passar ``None`` "
"para o parâmetro *fields* (``TD = TypedDict(\"TD\", None)``) também está "
"descontinuada. Ambos não serão permitidos no Python 3.15. Para criar uma "
"classe :class:`!TypedDict` com 0 campos, use ``class TD(TypedDict): pass`` "
"ou ``TD = TypedDict(\"TD\", {})``."

#: ../../deprecations/pending-removal-in-3.15.rst:54
msgid ""
":mod:`wave`: Deprecate the ``getmark()``, ``setmark()`` and ``getmarkers()`` "
"methods of the :class:`wave.Wave_read` and :class:`wave.Wave_write` classes. "
"They will be removed in Python 3.15. (Contributed by Victor Stinner in :gh:"
"`105096`.)"
msgstr ""
":mod:`wave`: Descontinua os métodos ``getmark()``, ``setmark()`` e "
"``getmarkers()`` das classes :class:`wave.Wave_read` e :class:`wave."
"Wave_write`. Eles serão removidos no Python 3.15. (Contribuição de Victor "
"Stinner em :gh:`105096`.)"
