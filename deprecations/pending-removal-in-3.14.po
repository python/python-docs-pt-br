# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-09 14:19+0000\n"
"PO-Revision-Date: 2025-07-18 18:48+0000\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../deprecations/pending-removal-in-3.14.rst:2
msgid "Pending removal in Python 3.14"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:4
msgid ""
":mod:`argparse`: The *type*, *choices*, and *metavar* parameters of :class:`!"
"argparse.BooleanOptionalAction` are deprecated and will be removed in 3.14. "
"(Contributed by Nikita Sobolev in :gh:`92248`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:9
msgid ""
":mod:`ast`: The following features have been deprecated in documentation "
"since Python 3.8, now cause a :exc:`DeprecationWarning` to be emitted at "
"runtime when they are accessed or used, and will be removed in Python 3.14:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:13
msgid ":class:`!ast.Num`"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:14
msgid ":class:`!ast.Str`"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:15
msgid ":class:`!ast.Bytes`"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:16
msgid ":class:`!ast.NameConstant`"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:17
msgid ":class:`!ast.Ellipsis`"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:19
msgid ""
"Use :class:`ast.Constant` instead. (Contributed by Serhiy Storchaka in :gh:"
"`90953`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:22
msgid ":mod:`asyncio`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:24
msgid ""
"The child watcher classes :class:`!asyncio.MultiLoopChildWatcher`, :class:`!"
"asyncio.FastChildWatcher`, :class:`!asyncio.AbstractChildWatcher` and :class:"
"`!asyncio.SafeChildWatcher` are deprecated and will be removed in Python "
"3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:30
msgid ""
":func:`!asyncio.set_child_watcher`, :func:`!asyncio.get_child_watcher`, :"
"meth:`!asyncio.AbstractEventLoopPolicy.set_child_watcher` and :meth:`!"
"asyncio.AbstractEventLoopPolicy.get_child_watcher` are deprecated and will "
"be removed in Python 3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:36
msgid ""
"The :meth:`~asyncio.get_event_loop` method of the default event loop policy "
"now emits a :exc:`DeprecationWarning` if there is no current event loop set "
"and it decides to create one. (Contributed by Serhiy Storchaka and Guido van "
"Rossum in :gh:`100160`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:41
msgid ""
":mod:`collections.abc`: Deprecated :class:`!collections.abc.ByteString`. "
"Prefer :class:`!Sequence` or :class:`~collections.abc.Buffer`. For use in "
"typing, prefer a union, like ``bytes | bytearray``, or :class:`collections."
"abc.Buffer`. (Contributed by Shantanu Jain in :gh:`91896`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:47
msgid ""
":mod:`email`: Deprecated the *isdst* parameter in :func:`email.utils."
"localtime`. (Contributed by Alan Williams in :gh:`72346`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:50
msgid ":mod:`importlib.abc` deprecated classes:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:52
msgid ":class:`!importlib.abc.ResourceReader`"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:53
msgid ":class:`!importlib.abc.Traversable`"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:54
msgid ":class:`!importlib.abc.TraversableResources`"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:56
msgid "Use :mod:`importlib.resources.abc` classes instead:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:58
msgid ":class:`importlib.resources.abc.Traversable`"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:59
msgid ":class:`importlib.resources.abc.TraversableResources`"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:61
msgid "(Contributed by Jason R. Coombs and Hugo van Kemenade in :gh:`93963`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:63
msgid ""
":mod:`itertools` had undocumented, inefficient, historically buggy, and "
"inconsistent support for copy, deepcopy, and pickle operations. This will be "
"removed in 3.14 for a significant reduction in code volume and maintenance "
"burden. (Contributed by Raymond Hettinger in :gh:`101588`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:69
msgid ""
":mod:`multiprocessing`: The default start method will change to a safer one "
"on Linux, BSDs, and other non-macOS POSIX platforms where ``'fork'`` is "
"currently the default (:gh:`84559`). Adding a runtime warning about this was "
"deemed too disruptive as the majority of code is not expected to care. Use "
"the :func:`~multiprocessing.get_context` or :func:`~multiprocessing."
"set_start_method` APIs to explicitly specify when your code *requires* "
"``'fork'``.  See :ref:`multiprocessing-start-methods`."
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:77
msgid ""
":mod:`pathlib`: :meth:`~pathlib.PurePath.is_relative_to` and :meth:`~pathlib."
"PurePath.relative_to`: passing additional arguments is deprecated."
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:81
msgid ""
":mod:`pkgutil`: :func:`!pkgutil.find_loader` and :func:`!pkgutil.get_loader` "
"now raise :exc:`DeprecationWarning`; use :func:`importlib.util.find_spec` "
"instead. (Contributed by Nikita Sobolev in :gh:`97850`.)"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:86
msgid ":mod:`pty`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:88
msgid "``master_open()``: use :func:`pty.openpty`."
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:89
msgid "``slave_open()``: use :func:`pty.openpty`."
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:91
msgid ":mod:`sqlite3`:"
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:93
msgid ":data:`!version` and :data:`!version_info`."
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:95
msgid ""
":meth:`~sqlite3.Cursor.execute` and :meth:`~sqlite3.Cursor.executemany` if :"
"ref:`named placeholders <sqlite3-placeholders>` are used and *parameters* is "
"a sequence instead of a :class:`dict`."
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:99
msgid ""
":mod:`typing`: :class:`!typing.ByteString`, deprecated since Python 3.9, now "
"causes a :exc:`DeprecationWarning` to be emitted when it is used."
msgstr ""

#: ../../deprecations/pending-removal-in-3.14.rst:102
msgid ""
":mod:`urllib`: :class:`!urllib.parse.Quoter` is deprecated: it was not "
"intended to be a public API. (Contributed by Gregory P. Smith in :gh:"
"`88168`.)"
msgstr ""
