# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Adorilson Bezerra <adorilson@gmail.com>, 2025
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-08 02:53-0300\n"
"PO-Revision-Date: 2024-08-02 14:17+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:2
msgid "Pending removal in Python 3.15"
msgstr "Remoção pendente no Python 3.15"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:4
msgid "The bundled copy of ``libmpdecimal``."
msgstr "A cópia empacotada do ``libmpdecimal``."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:5
msgid ""
"The :c:func:`PyImport_ImportModuleNoBlock`: Use :c:func:"
"`PyImport_ImportModule` instead."
msgstr ""
"The :c:func:`PyImport_ImportModuleNoBlock`: use :c:func:"
"`PyImport_ImportModule`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:7
msgid ""
":c:func:`PyWeakref_GetObject` and :c:func:`PyWeakref_GET_OBJECT`: Use :c:"
"func:`PyWeakref_GetRef` instead. The `pythoncapi-compat project <https://"
"github.com/python/pythoncapi-compat/>`__ can be used to get :c:func:"
"`PyWeakref_GetRef` on Python 3.12 and older."
msgstr ""
":c:func:`PyWeakref_GetObject` e :c:func:`PyWeakref_GET_OBJECT`: Use :c:func:"
"`PyWeakref_GetRef`. O `projeto pythoncapi-compat <https://github.com/python/"
"pythoncapi-compat/>`__ pode ser usado para usar :c:func:`PyWeakref_GetRef` "
"no Python 3.12 e versões anteriores."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:11
msgid ""
":c:type:`Py_UNICODE` type and the :c:macro:`!Py_UNICODE_WIDE` macro: Use :c:"
"type:`wchar_t` instead."
msgstr ""
"O tipo :c:type:`Py_UNICODE` e a macro :c:macro:`!Py_UNICODE_WIDE`: use :c:"
"type:`wchar_t`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:13
msgid ""
":c:func:`!PyUnicode_AsDecodedObject`: Use :c:func:`PyCodec_Decode` instead."
msgstr ":c:func:`!PyUnicode_AsDecodedObject`: use :c:func:`PyCodec_Decode`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:15
msgid ""
":c:func:`!PyUnicode_AsDecodedUnicode`: Use :c:func:`PyCodec_Decode` instead; "
"Note that some codecs (for example, \"base64\") may return a type other "
"than :class:`str`, such as :class:`bytes`."
msgstr ""
":c:func:`!PyUnicode_AsDecodedUnicode`: Use :c:func:`PyCodec_Decode`; Note "
"que alguns codecs (por exemplo, \"base64\") podem retornar um tipo diferente "
"de :class:`str`, tal como :class:`bytes`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:18
msgid ""
":c:func:`!PyUnicode_AsEncodedObject`: Use :c:func:`PyCodec_Encode` instead."
msgstr ":c:func:`!PyUnicode_AsEncodedObject`: use :c:func:`PyCodec_Encode`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:20
msgid ""
":c:func:`!PyUnicode_AsEncodedUnicode`: Use :c:func:`PyCodec_Encode` instead; "
"Note that some codecs (for example, \"base64\") may return a type other "
"than :class:`bytes`, such as :class:`str`."
msgstr ""
":c:func:`!PyUnicode_AsEncodedUnicode`: Use :c:func:`PyCodec_Encode`; Note "
"que alguns codecs (por exemplo, \"base64\") podem retornar um tipo diferente "
"de :class:`bytes`, tal com :class:`str`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:23
msgid "Python initialization functions, deprecated in Python 3.13:"
msgstr "Funções de inicialização do Python, descontinuadas no Python 3.9:"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:25
msgid ""
":c:func:`Py_GetPath`: Use :c:func:`PyConfig_Get(\"module_search_paths\") "
"<PyConfig_Get>` (:data:`sys.path`) instead."
msgstr ""
":c:func:`Py_GetPath`: Use :c:func:`PyConfig_Get(\"module_search_paths\") "
"<PyConfig_Get>` (:data:`sys.path`)."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:28
msgid ""
":c:func:`Py_GetPrefix`: Use :c:func:`PyConfig_Get(\"base_prefix\") "
"<PyConfig_Get>` (:data:`sys.base_prefix`) instead. Use :c:func:"
"`PyConfig_Get(\"prefix\") <PyConfig_Get>` (:data:`sys.prefix`) if :ref:"
"`virtual environments <venv-def>` need to be handled."
msgstr ""
":c:func:`Py_GetPrefix`: Use :c:func:`PyConfig_Get(\"base_prefix\") "
"<PyConfig_Get>` (:data:`sys.base_prefix`). Use :c:func:"
"`PyConfig_Get(\"prefix\") <PyConfig_Get>` (:data:`sys.prefix`) se :ref:"
"`ambientes virtuais <venv-def>` precisam ser tratados."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:33
msgid ""
":c:func:`Py_GetExecPrefix`: Use :c:func:`PyConfig_Get(\"base_exec_prefix\") "
"<PyConfig_Get>` (:data:`sys.base_exec_prefix`) instead. Use :c:func:"
"`PyConfig_Get(\"exec_prefix\") <PyConfig_Get>` (:data:`sys.exec_prefix`) if :"
"ref:`virtual environments <venv-def>` need to be handled."
msgstr ""
":c:func:`Py_GetExecPrefix`: Use :c:func:`PyConfig_Get(\"base_exec_prefix\") "
"<PyConfig_Get>` (:data:`sys.base_exec_prefix`). Use :c:func:"
"`PyConfig_Get(\"exec_prefix\") <PyConfig_Get>` (:data:`sys.exec_prefix`) se :"
"ref:`ambientes virtuais <venv-def>` precisam ser tratados."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:39
msgid ""
":c:func:`Py_GetProgramFullPath`: Use :c:func:`PyConfig_Get(\"executable\") "
"<PyConfig_Get>` (:data:`sys.executable`) instead."
msgstr ""
":c:func:`Py_GetProgramFullPath`: Use :c:func:`PyConfig_Get(\"executable\") "
"<PyConfig_Get>` (:data:`sys.executable`)."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:42
msgid ""
":c:func:`Py_GetProgramName`: Use :c:func:`PyConfig_Get(\"executable\") "
"<PyConfig_Get>` (:data:`sys.executable`) instead."
msgstr ""
":c:func:`Py_GetProgramName`: Use :c:func:`PyConfig_Get(\"executable\") "
"<PyConfig_Get>` (:data:`sys.executable`)."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:45
msgid ""
":c:func:`Py_GetPythonHome`: Use :c:func:`PyConfig_Get(\"home\") "
"<PyConfig_Get>` or the :envvar:`PYTHONHOME` environment variable instead."
msgstr ""
":c:func:`Py_GetPythonHome`: Use :c:func:`PyConfig_Get(\"home\") "
"<PyConfig_Get>` ou a variável de ambiente :envvar:`PYTHONHOME`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:49
msgid ""
"The `pythoncapi-compat project <https://github.com/python/pythoncapi-compat/"
">`__ can be used to get :c:func:`PyConfig_Get` on Python 3.13 and older."
msgstr ""
"O projeto `pythoncapi-compat <https://github.com/python/pythoncapi-compat/"
">`__ pode ser usado para obter :c:func:`PyConfig_Get` no Python 3.13 e "
"versões anteriores."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:53
msgid ""
"Functions to configure Python's initialization, deprecated in Python 3.11:"
msgstr ""
"Funções para configurar a inicialização do Python, descontinuadas no Python "
"3.11:"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:55
msgid ":c:func:`!PySys_SetArgvEx()`: Set :c:member:`PyConfig.argv` instead."
msgstr ":c:func:`!PySys_SetArgvEx()`: defina :c:member:`PyConfig.argv`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:57
msgid ":c:func:`!PySys_SetArgv()`: Set :c:member:`PyConfig.argv` instead."
msgstr ":c:func:`!PySys_SetArgv()`: defina :c:member:`PyConfig.argv`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:59
msgid ""
":c:func:`!Py_SetProgramName()`: Set :c:member:`PyConfig.program_name` "
"instead."
msgstr ""
":c:func:`!Py_SetProgramName()`: defina :c:member:`PyConfig.program_name`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:61
msgid ":c:func:`!Py_SetPythonHome()`: Set :c:member:`PyConfig.home` instead."
msgstr ":c:func:`!Py_SetPythonHome()`: defina :c:member:`PyConfig.home`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:63
msgid ""
":c:func:`PySys_ResetWarnOptions`: Clear :data:`sys.warnoptions` and :data:`!"
"warnings.filters` instead."
msgstr ""
":c:func:`PySys_ResetWarnOptions`: apague :data:`sys.warnoptions` e :data:`!"
"warnings.filters`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:66
msgid ""
"The :c:func:`Py_InitializeFromConfig` API should be used with :c:type:"
"`PyConfig` instead."
msgstr ""
"Em vez disso, a API :c:func:`Py_InitializeFromConfig` deve ser usada com :c:"
"type:`PyConfig`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:69
msgid "Global configuration variables:"
msgstr "Variáveis de configuração globais"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:71
msgid ""
":c:var:`Py_DebugFlag`: Use :c:member:`PyConfig.parser_debug` or :c:func:"
"`PyConfig_Get(\"parser_debug\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_DebugFlag`: Use :c:member:`PyConfig.parser_debug` ou :c:func:"
"`PyConfig_Get(\"parser_debug\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:74
msgid ""
":c:var:`Py_VerboseFlag`: Use :c:member:`PyConfig.verbose` or :c:func:"
"`PyConfig_Get(\"verbose\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_VerboseFlag`: Use :c:member:`PyConfig.verbose` ou :c:func:"
"`PyConfig_Get(\"verbose\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:77
msgid ""
":c:var:`Py_QuietFlag`: Use :c:member:`PyConfig.quiet` or :c:func:"
"`PyConfig_Get(\"quiet\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_QuietFlag`: Use :c:member:`PyConfig.quiet` ou :c:func:"
"`PyConfig_Get(\"quiet\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:80
msgid ""
":c:var:`Py_InteractiveFlag`: Use :c:member:`PyConfig.interactive` or :c:func:"
"`PyConfig_Get(\"interactive\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_InteractiveFlag`: Use :c:member:`PyConfig.interactive` ou :c:func:"
"`PyConfig_Get(\"interactive\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:83
msgid ""
":c:var:`Py_InspectFlag`: Use :c:member:`PyConfig.inspect` or :c:func:"
"`PyConfig_Get(\"inspect\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_InspectFlag`: Use :c:member:`PyConfig.inspect` ou :c:func:"
"`PyConfig_Get(\"inspect\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:86
msgid ""
":c:var:`Py_OptimizeFlag`: Use :c:member:`PyConfig.optimization_level` or :c:"
"func:`PyConfig_Get(\"optimization_level\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_OptimizeFlag`: Use :c:member:`PyConfig.optimization_level` ou :c:"
"func:`PyConfig_Get(\"optimization_level\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:89
msgid ""
":c:var:`Py_NoSiteFlag`: Use :c:member:`PyConfig.site_import` or :c:func:"
"`PyConfig_Get(\"site_import\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_NoSiteFlag`: Use :c:member:`PyConfig.site_import` ou :c:func:"
"`PyConfig_Get(\"site_import\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:92
msgid ""
":c:var:`Py_BytesWarningFlag`: Use :c:member:`PyConfig.bytes_warning` or :c:"
"func:`PyConfig_Get(\"bytes_warning\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_BytesWarningFlag`: Use :c:member:`PyConfig.bytes_warning` ou :c:"
"func:`PyConfig_Get(\"bytes_warning\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:95
msgid ""
":c:var:`Py_FrozenFlag`: Use :c:member:`PyConfig.pathconfig_warnings` or :c:"
"func:`PyConfig_Get(\"pathconfig_warnings\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_FrozenFlag`: Use :c:member:`PyConfig.pathconfig_warnings` ou :c:"
"func:`PyConfig_Get(\"pathconfig_warnings\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:98
msgid ""
":c:var:`Py_IgnoreEnvironmentFlag`: Use :c:member:`PyConfig.use_environment` "
"or :c:func:`PyConfig_Get(\"use_environment\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_IgnoreEnvironmentFlag`: Use :c:member:`PyConfig.use_environment` "
"ou :c:func:`PyConfig_Get(\"use_environment\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:101
msgid ""
":c:var:`Py_DontWriteBytecodeFlag`: Use :c:member:`PyConfig.write_bytecode` "
"or :c:func:`PyConfig_Get(\"write_bytecode\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_DontWriteBytecodeFlag`: Use :c:member:`PyConfig.write_bytecode` "
"ou :c:func:`PyConfig_Get(\"write_bytecode\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:104
msgid ""
":c:var:`Py_NoUserSiteDirectory`: Use :c:member:`PyConfig."
"user_site_directory` or :c:func:`PyConfig_Get(\"user_site_directory\") "
"<PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_NoUserSiteDirectory`: Use :c:member:`PyConfig."
"user_site_directory` ou :c:func:`PyConfig_Get(\"user_site_directory\") "
"<PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:107
msgid ""
":c:var:`Py_UnbufferedStdioFlag`: Use :c:member:`PyConfig.buffered_stdio` or :"
"c:func:`PyConfig_Get(\"buffered_stdio\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_UnbufferedStdioFlag`: Use :c:member:`PyConfig.buffered_stdio` ou :"
"c:func:`PyConfig_Get(\"buffered_stdio\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:110
msgid ""
":c:var:`Py_HashRandomizationFlag`: Use :c:member:`PyConfig.use_hash_seed` "
"and :c:member:`PyConfig.hash_seed` or :c:func:`PyConfig_Get(\"hash_seed\") "
"<PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_HashRandomizationFlag`: Use :c:member:`PyConfig.use_hash_seed` e :"
"c:member:`PyConfig.hash_seed` ou :c:func:`PyConfig_Get(\"hash_seed\") "
"<PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:114
msgid ""
":c:var:`Py_IsolatedFlag`: Use :c:member:`PyConfig.isolated` or :c:func:"
"`PyConfig_Get(\"isolated\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_IsolatedFlag`: Use :c:member:`PyConfig.isolated` ou :c:func:"
"`PyConfig_Get(\"isolated\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:117
msgid ""
":c:var:`Py_LegacyWindowsFSEncodingFlag`: Use :c:member:`PyPreConfig."
"legacy_windows_fs_encoding` or :c:func:"
"`PyConfig_Get(\"legacy_windows_fs_encoding\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_LegacyWindowsFSEncodingFlag`: Use :c:member:`PyPreConfig."
"legacy_windows_fs_encoding` ou :c:func:"
"`PyConfig_Get(\"legacy_windows_fs_encoding\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:120
msgid ""
":c:var:`Py_LegacyWindowsStdioFlag`: Use :c:member:`PyConfig."
"legacy_windows_stdio` or :c:func:`PyConfig_Get(\"legacy_windows_stdio\") "
"<PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_LegacyWindowsStdioFlag`: Use :c:member:`PyConfig."
"legacy_windows_stdio` ou :c:func:`PyConfig_Get(\"legacy_windows_stdio\") "
"<PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:123
msgid ""
":c:var:`!Py_FileSystemDefaultEncoding`, :c:var:`!"
"Py_HasFileSystemDefaultEncoding`: Use :c:member:`PyConfig."
"filesystem_encoding` or :c:func:`PyConfig_Get(\"filesystem_encoding\") "
"<PyConfig_Get>` instead."
msgstr ""
":c:var:`!Py_FileSystemDefaultEncoding`, :c:var:`!"
"Py_HasFileSystemDefaultEncoding`: Use :c:member:`PyConfig."
"filesystem_encoding` ou :c:func:`PyConfig_Get(\"filesystem_encoding\") "
"<PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:126
msgid ""
":c:var:`!Py_FileSystemDefaultEncodeErrors`: Use :c:member:`PyConfig."
"filesystem_errors` or :c:func:`PyConfig_Get(\"filesystem_errors\") "
"<PyConfig_Get>` instead."
msgstr ""
":c:var:`!Py_FileSystemDefaultEncodeErrors`: Use :c:member:`PyConfig."
"filesystem_errors` ou :c:func:`PyConfig_Get(\"filesystem_errors\") "
"<PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:129
msgid ""
":c:var:`!Py_UTF8Mode`: Use :c:member:`PyPreConfig.utf8_mode` or :c:func:"
"`PyConfig_Get(\"utf8_mode\") <PyConfig_Get>` instead. (see :c:func:"
"`Py_PreInitialize`)"
msgstr ""
":c:var:`!Py_UTF8Mode`: Use :c:member:`PyPreConfig.utf8_mode` ou :c:func:"
"`PyConfig_Get(\"utf8_mode\") <PyConfig_Get>`. (veja :c:func:"
"`Py_PreInitialize`)"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:134
msgid ""
"The :c:func:`Py_InitializeFromConfig` API should be used with :c:type:"
"`PyConfig` to set these options. Or :c:func:`PyConfig_Get` can be used to "
"get these options at runtime."
msgstr ""
"A API :c:func:`Py_InitializeFromConfig` deve ser usada com :c:type:"
"`PyConfig` para definir essas opções. Ou :c:func:`PyConfig_Get` pode ser "
"usado para obter essas opções em tempo de execução."
