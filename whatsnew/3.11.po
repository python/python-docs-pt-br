# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Pedro Dias, 2023
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-06 16:21+0000\n"
"PO-Revision-Date: 2023-05-24 02:23+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../whatsnew/3.11.rst:3
msgid "What's New In Python 3.11"
msgstr "O que há de novo no Python 3.11"

#: ../../whatsnew/3.11.rst:0
msgid "Editor"
msgstr "Editor"

#: ../../whatsnew/3.11.rst:5
msgid "Pablo Galindo Salgado"
msgstr "Pablo Galindo Salgado"

#: ../../whatsnew/3.11.rst:47
msgid ""
"This article explains the new features in Python 3.11, compared to 3.10. "
"Python 3.11 was released on October 24, 2022. For full details, see the :ref:"
"`changelog <changelog>`."
msgstr ""
"Este artigo explica os novos recursos no Python 3.11, em comparação com "
"3.10. Python 3.11 foi lançado em 24 de outubro de 2022. Veja :ref:`changelog "
"<changelog>` para uma lista completa de mudanças."

#: ../../whatsnew/3.11.rst:55
msgid "Summary -- Release highlights"
msgstr "Resumo -- Destaques da versão"

#: ../../whatsnew/3.11.rst:60
msgid ""
"Python 3.11 is between 10-60% faster than Python 3.10. On average, we "
"measured a 1.25x speedup on the standard benchmark suite. See :ref:"
"`whatsnew311-faster-cpython` for details."
msgstr ""
"O Python 3.11 é entre 10-60% mais rápido que o Python 3.10. Em média, "
"medimos uma aceleração de 1,25x no conjunto de benchmarks padrão. Veja :ref:"
"`whatsnew311-faster-cpython` para detalhes."

#: ../../whatsnew/3.11.rst:66
msgid "New syntax features:"
msgstr "Novos recursos de sintaxe:"

#: ../../whatsnew/3.11.rst:68
msgid ":ref:`whatsnew311-pep654`"
msgstr ":ref:`whatsnew311-pep654`"

#: ../../whatsnew/3.11.rst:70
msgid "New built-in features:"
msgstr "Novos recursos embutidos:"

#: ../../whatsnew/3.11.rst:72
msgid ":ref:`whatsnew311-pep678`"
msgstr ":ref:`whatsnew311-pep678`"

#: ../../whatsnew/3.11.rst:74
msgid "New standard library modules:"
msgstr "Novos módulos da biblioteca padrão:"

#: ../../whatsnew/3.11.rst:76
msgid ""
":pep:`680`: :mod:`tomllib` — Support for parsing `TOML <https://toml.io/>`_ "
"in the Standard Library"
msgstr ""
":pep:`680`: :mod:`tomllib` — Suporte para analisar `TOML <https://toml.io/"
">`_ na Biblioteca Padrão"

#: ../../whatsnew/3.11.rst:79
msgid "Interpreter improvements:"
msgstr "Melhorias no interpretador:"

#: ../../whatsnew/3.11.rst:81
msgid ":ref:`whatsnew311-pep657`"
msgstr ":ref:`whatsnew311-pep657`"

#: ../../whatsnew/3.11.rst:82
msgid ""
"New :option:`-P` command line option and :envvar:`PYTHONSAFEPATH` "
"environment variable to :ref:`disable automatically prepending potentially "
"unsafe paths <whatsnew311-pythonsafepath>` to :data:`sys.path`"
msgstr ""
"Nova opção de linha de comando :option:`-P` e variável de ambiente :envvar:"
"`PYTHONSAFEPATH` para :ref:`desabilitar automaticamente a anteposição "
"automática de caminhos potencialmente inseguros <whatsnew311-"
"pythonsafepath>` para :data:`sys.path`"

#: ../../whatsnew/3.11.rst:86
msgid "New typing features:"
msgstr "Novos recursos de tipagem:"

#: ../../whatsnew/3.11.rst:88
msgid ":ref:`whatsnew311-pep646`"
msgstr ":ref:`whatsnew311-pep646`"

#: ../../whatsnew/3.11.rst:89
msgid ":ref:`whatsnew311-pep655`"
msgstr ":ref:`whatsnew311-pep655`"

#: ../../whatsnew/3.11.rst:90
msgid ":ref:`whatsnew311-pep673`"
msgstr ":ref:`whatsnew311-pep673`"

#: ../../whatsnew/3.11.rst:91
msgid ":ref:`whatsnew311-pep675`"
msgstr ":ref:`whatsnew311-pep675`"

#: ../../whatsnew/3.11.rst:92
msgid ":ref:`whatsnew311-pep681`"
msgstr ":ref:`whatsnew311-pep681`"

#: ../../whatsnew/3.11.rst:94
msgid "Important deprecations, removals and restrictions:"
msgstr "Descontinuações, remoções e restrições importantes:"

#: ../../whatsnew/3.11.rst:96
msgid ""
":pep:`594`: :ref:`Many legacy standard library modules have been deprecated "
"<whatsnew311-pep594>` and will be removed in Python 3.13"
msgstr ""
":pep:`594`: :ref:`Muitos módulos legados de biblioteca padrão foram "
"descontinuados <whatsnew311-pep594>` e serão removidos no Python 3.13"

#: ../../whatsnew/3.11.rst:99
msgid ""
":pep:`624`: :ref:`Py_UNICODE encoder APIs have been removed <whatsnew311-"
"pep624>`"
msgstr ""
":pep:`624`: :ref:`APIs do codificador Py_UNICODE foram removidas "
"<whatsnew311-pep624>`"

#: ../../whatsnew/3.11.rst:101
msgid ""
":pep:`670`: :ref:`Macros converted to static inline functions <whatsnew311-"
"pep670>`"
msgstr ""
":pep:`670`: :ref:`Macros convertidos em funções estáticas em linha "
"<whatsnew311-pep670>`"

#: ../../whatsnew/3.11.rst:108 ../../whatsnew/3.11.rst:2224
msgid "New Features"
msgstr "Novas funcionalidades"

#: ../../whatsnew/3.11.rst:113
msgid "PEP 657: Fine-grained error locations in tracebacks"
msgstr "PEP 657: Localizações de erros refinadas em tracebacks"

#: ../../whatsnew/3.11.rst:115
msgid ""
"When printing tracebacks, the interpreter will now point to the exact "
"expression that caused the error, instead of just the line. For example:"
msgstr ""
"Ao imprimir tracebacks (situação da pilha de execução), o interpretador "
"agora apontará para a expressão exata que causou o erro, em vez de apenas a "
"linha. Por exemplo:"

#: ../../whatsnew/3.11.rst:129
msgid ""
"Previous versions of the interpreter would point to just the line, making it "
"ambiguous which object was ``None``. These enhanced errors can also be "
"helpful when dealing with deeply nested :class:`dict` objects and multiple "
"function calls:"
msgstr ""
"Versões anteriores do interpretador apontavam apenas para a linha, tornando "
"ambíguo qual objeto era ``None``. Esses erros aprimorados também podem ser "
"úteis ao lidar com objetos :class:`dict` profundamente aninhados e várias "
"chamadas de função:"

#: ../../whatsnew/3.11.rst:149
msgid "As well as complex arithmetic expressions:"
msgstr "Bem como expressões aritméticas complexas:"

#: ../../whatsnew/3.11.rst:159
msgid ""
"Additionally, the information used by the enhanced traceback feature is made "
"available via a general API, that can be used to correlate :term:`bytecode` :"
"ref:`instructions <bytecodes>` with source code location. This information "
"can be retrieved using:"
msgstr ""
"Além disso, as informações usadas pela funcionalidade de traceback "
"aprimorado são disponibilizadas por meio de uma API geral, que pode ser "
"usada para correlacionar :ref:`instruções <bytecodes>` :term:`bytecode` com "
"a localização do código-fonte. Essas informações podem ser recuperadas "
"usando:"

#: ../../whatsnew/3.11.rst:164
msgid "The :meth:`codeobject.co_positions` method in Python."
msgstr "O método :meth:`codeobject.co_positions` no Python."

#: ../../whatsnew/3.11.rst:165
msgid "The :c:func:`PyCode_Addr2Location` function in the C API."
msgstr "A função :c:func:`PyCode_Addr2Location` na API C."

#: ../../whatsnew/3.11.rst:167
msgid ""
"See :pep:`657` for more details. (Contributed by Pablo Galindo, Batuhan "
"Taskaya and Ammar Askar in :issue:`43950`.)"
msgstr ""
"Veja :pep:`657` para mais detalhes. (Contribuição de Pablo Galindo, Batuhan "
"Taskaya e Ammar Askar em :issue:`43950`.)"

#: ../../whatsnew/3.11.rst:171
msgid ""
"This feature requires storing column positions in :ref:`codeobjects`, which "
"may result in a small increase in interpreter memory usage and disk usage "
"for compiled Python files. To avoid storing the extra information and "
"deactivate printing the extra traceback information, use the :option:`-X "
"no_debug_ranges <-X>` command line option or the :envvar:"
"`PYTHONNODEBUGRANGES` environment variable."
msgstr ""
"Esse recurso requer o armazenamento de posições de coluna em :ref:"
"`codeobjects`, o que pode resultar em um pequeno aumento no uso de memória "
"do interpretador e no uso de disco para arquivos Python compilados. Para "
"evitar armazenar as informações extras e desativar a exibição das "
"informações extras de rastreamento, use a opção de linha de comando :option:"
"`-X no_debug_ranges <-X>` ou a variável de ambiente :envvar:"
"`PYTHONNODEBUGRANGES`."

#: ../../whatsnew/3.11.rst:183
msgid "PEP 654: Exception Groups and ``except*``"
msgstr "PEP 654: Grupos de exceção e ``except*``"

#: ../../whatsnew/3.11.rst:185
msgid ""
":pep:`654` introduces language features that enable a program to raise and "
"handle multiple unrelated exceptions simultaneously. The builtin types :exc:"
"`ExceptionGroup` and :exc:`BaseExceptionGroup` make it possible to group "
"exceptions and raise them together, and the new :keyword:`except* "
"<except_star>` syntax generalizes :keyword:`except` to match subgroups of "
"exception groups."
msgstr ""
":pep:`654` introduz recursos de linguagem que permitem que um programa "
"levante e manipule várias exceções não relacionadas simultaneamente. Os "
"tipos internos :exc:`ExceptionGroup` e :exc:`BaseExceptionGroup` tornam "
"possível agrupar exceções e criá-las juntas, e a nova sintaxe :keyword:"
"`except* <except_star>` generaliza :keyword:`except` para corresponder a "
"subgrupos de grupos de exceção."

#: ../../whatsnew/3.11.rst:192
msgid "See :pep:`654` for more details."
msgstr "Veja :pep:`654` para mais detalhes."

#: ../../whatsnew/3.11.rst:194
msgid ""
"(Contributed by Irit Katriel in :issue:`45292`. PEP written by Irit Katriel, "
"Yury Selivanov and Guido van Rossum.)"
msgstr ""
"(Contribuição de Irit Katriel em :issue:`45292`. PEP escrita por Irit "
"Katriel, Yury Selivanov e Guido van Rossum.)"

#: ../../whatsnew/3.11.rst:201
msgid "PEP 678: Exceptions can be enriched with notes"
msgstr "PEP 678: Exceções podem ser enriquecidas com notas"

#: ../../whatsnew/3.11.rst:203
msgid ""
"The :meth:`~BaseException.add_note` method is added to :exc:`BaseException`. "
"It can be used to enrich exceptions with context information that is not "
"available at the time when the exception is raised. The added notes appear "
"in the default traceback."
msgstr ""
"O método :meth:`~BaseException.add_note` é adicionado a :exc:"
"`BaseException`. Ele pode ser usado para enriquecer exceções com informações "
"de contexto que não estão disponíveis no momento em que a exceção é gerada. "
"As notas adicionadas aparecem no traceback padrão."

#: ../../whatsnew/3.11.rst:208
msgid "See :pep:`678` for more details."
msgstr "Veja :pep:`678` para mais detalhes."

#: ../../whatsnew/3.11.rst:210
msgid ""
"(Contributed by Irit Katriel in :issue:`45607`. PEP written by Zac Hatfield-"
"Dodds.)"
msgstr ""
"(Contribuição de Irit Katriel em :issue:`45607`. PEP escrita por Zac "
"Hatfield-Dodds.)"

#: ../../whatsnew/3.11.rst:217
msgid "Windows ``py.exe`` launcher improvements"
msgstr "Melhorias no inicializador ``py.exe`` do Windows"

#: ../../whatsnew/3.11.rst:219
msgid ""
"The copy of the :ref:`launcher` included with Python 3.11 has been "
"significantly updated. It now supports company/tag syntax as defined in :pep:"
"`514` using the :samp:`-V:{<company>}/{<tag>}` argument instead of the "
"limited :samp:`-{<major>}.{<minor>}`. This allows launching distributions "
"other than ``PythonCore``, the one hosted on `python.org <https://www.python."
"org>`_."
msgstr ""
"A cópia do :ref:`launcher` incluída no Python 3.11 foi significativamente "
"atualizada. Ele agora oferece suporte à sintaxe de company/tag conforme "
"definido em :pep:`514` usando o argumento :samp:`-V:{<company>}/{<tag>}` em "
"vez do limitado :samp:`-{<major>}.{<minor>}`. Isso permite iniciar outras "
"distribuições além de ``PythonCore``, aquela hospedada em `python.org "
"<https://www.python.org>`_."

#: ../../whatsnew/3.11.rst:225
msgid ""
"When using ``-V:`` selectors, either company or tag can be omitted, but all "
"installs will be searched. For example, ``-V:OtherPython/`` will select the "
"\"best\" tag registered for ``OtherPython``, while ``-V:3.11`` or ``-"
"V:/3.11`` will select the \"best\" distribution with tag ``3.11``."
msgstr ""
"Ao usar seletores ``-V:``, tanto company quanto tag podem ser omitidos, mas "
"todas as instalações serão pesquisadas. Por exemplo, ``-V:OtherPython/`` "
"selecionará a \"melhor\" tag registrada para ``OtherPython``, enquanto ``-"
"V:3.11`` ou ``-V:/3.11`` selecionará o \"best\" com a tag ``3.11``."

#: ../../whatsnew/3.11.rst:230
msgid ""
"When using the legacy :samp:`-{<major>}`, :samp:`-{<major>}.{<minor>}`, :"
"samp:`-{<major>}-{<bitness>}` or :samp:`-{<major>}.{<minor>}-{<bitness>}` "
"arguments, all existing behaviour should be preserved from past versions, "
"and only releases from ``PythonCore`` will be selected. However, the ``-64`` "
"suffix now implies \"not 32-bit\" (not necessarily x86-64), as there are "
"multiple supported 64-bit platforms. 32-bit runtimes are detected by "
"checking the runtime's tag for a ``-32`` suffix. All releases of Python "
"since 3.5 have included this in their 32-bit builds."
msgstr ""
"Ao usar os argumentos legados :samp:`-{<major>}`, :samp:`-{<major>}.{<minor>}"
"`, :samp:`-{<major>}-{<bitness>}` ou :samp:`-{<major>}.{<minor>}-{<bitness>}"
"`, todo o comportamento existente deve ser preservado de versões anteriores "
"e somente lançamentos de ``PythonCore`` será selecionado. No entanto, o "
"sufixo ``-64`` agora implica \"não 32 bits\" (não necessariamente x86-64), "
"pois existem várias plataformas de 64 bits suportadas. Tempos de execução de "
"32 bits são detectados verificando a tag do tempo de execução para um sufixo "
"``-32``. Todas as versões do Python desde 3.5 incluíram isso em suas "
"compilações de 32 bits."

#: ../../whatsnew/3.11.rst:244
msgid "New Features Related to Type Hints"
msgstr "Novos recursos relacionados a dicas de tipo"

#: ../../whatsnew/3.11.rst:246
msgid ""
"This section covers major changes affecting :pep:`484` type hints and the :"
"mod:`typing` module."
msgstr ""
"Esta seção cobre as principais mudanças que afetam as dicas de tipo da  :pep:"
"`484` e o módulo :mod:`typing`."

#: ../../whatsnew/3.11.rst:253
msgid "PEP 646: Variadic generics"
msgstr "PEP 646: Genéricos variádicos"

#: ../../whatsnew/3.11.rst:255
msgid ""
":pep:`484` previously introduced :data:`~typing.TypeVar`, enabling creation "
"of generics parameterised with a single type. :pep:`646` adds :data:`~typing."
"TypeVarTuple`, enabling parameterisation with an *arbitrary* number of "
"types. In other words, a :data:`~typing.TypeVarTuple` is a *variadic* type "
"variable, enabling *variadic* generics."
msgstr ""
":pep:`484` introduzido anteriormente :data:`~typing.TypeVar`, permitindo a "
"criação de genéricos parametrizados com um único tipo. :pep:`646` adiciona :"
"data:`~typing.TypeVarTuple`, permitindo a parametrização com um número "
"*arbitrário* de tipos. Em outras palavras, uma :data:`~typing.TypeVarTuple` "
"é uma variável do tipo *variádico*, habilitando genéricos *variádicos*."

#: ../../whatsnew/3.11.rst:262
msgid ""
"This enables a wide variety of use cases. In particular, it allows the type "
"of array-like structures in numerical computing libraries such as NumPy and "
"TensorFlow to be parameterised with the array *shape*. Static type checkers "
"will now be able to catch shape-related bugs in code that uses these "
"libraries."
msgstr ""
"Isso permite uma ampla variedade de casos de uso. Em particular, ele permite "
"que o tipo de estruturas do tipo array em bibliotecas de computação "
"numérica, como NumPy e TensorFlow, sejam parametrizadas com o array *shape*. "
"Os verificadores de tipo estáticos agora poderão capturar bugs relacionados "
"a formas no código que usa essas bibliotecas."

#: ../../whatsnew/3.11.rst:268
msgid "See :pep:`646` for more details."
msgstr "Veja :pep:`646` para mais detalhes."

#: ../../whatsnew/3.11.rst:270
msgid ""
"(Contributed by Matthew Rahtz in :issue:`43224`, with contributions by "
"Serhiy Storchaka and Jelle Zijlstra. PEP written by Mark Mendoza, Matthew "
"Rahtz, Pradeep Kumar Srinivasan, and Vincent Siles.)"
msgstr ""
"(Contribuição de Matthew Rahtz em :issue:`43224`, com contribuições de "
"Serhiy Storchaka e Jelle Zijlstra. PEP escrita por Mark Mendoza, Matthew "
"Rahtz, Pradeep Kumar Srinivasan e Vincent Siles.)"

#: ../../whatsnew/3.11.rst:278
msgid ""
"PEP 655: Marking individual ``TypedDict`` items as required or not-required"
msgstr ""
"PEP 655: Marcando itens ``TypedDict`` individuais como obrigatórios ou não "
"obrigatórios"

#: ../../whatsnew/3.11.rst:280
msgid ""
":data:`~typing.Required` and :data:`~typing.NotRequired` provide a "
"straightforward way to mark whether individual items in a :class:`~typing."
"TypedDict` must be present. Previously, this was only possible using "
"inheritance."
msgstr ""
":data:`~typing.Required` e :data:`~typing.NotRequired` fornecem uma maneira "
"direta de marcar se itens individuais em um :class:`~typing.TypedDict` devem "
"estar presentes. Anteriormente, isso só era possível usando herança."

#: ../../whatsnew/3.11.rst:285
msgid ""
"All fields are still required by default, unless the *total* parameter is "
"set to ``False``, in which case all fields are still not-required by "
"default. For example, the following specifies a :class:`!TypedDict` with one "
"required and one not-required key::"
msgstr ""
"Todos os campos ainda são obrigatórios por padrão, a menos que o parâmetro "
"*total* seja definido como ``False``, caso em que todos os campos ainda não "
"são obrigatórios por padrão. Por exemplo, o seguinte especifica um :class:`!"
"TypedDict` com uma chave obrigatória e uma chave não obrigatória::"

#: ../../whatsnew/3.11.rst:299
msgid "The following definition is equivalent::"
msgstr "A seguinte definição é equivalente::"

#: ../../whatsnew/3.11.rst:305
msgid "See :pep:`655` for more details."
msgstr "Veja :pep:`655` para mais detalhes."

#: ../../whatsnew/3.11.rst:307
msgid ""
"(Contributed by David Foster and Jelle Zijlstra in :issue:`47087`. PEP "
"written by David Foster.)"
msgstr ""
"(Contribuição de David Foster e Jelle Zijlstra em :issue:`47087`. PEP "
"escrita por David Foster.)"

#: ../../whatsnew/3.11.rst:314
msgid "PEP 673: ``Self`` type"
msgstr "PEP 673: Tipo ``Self``"

#: ../../whatsnew/3.11.rst:316
msgid ""
"The new :data:`~typing.Self` annotation provides a simple and intuitive way "
"to annotate methods that return an instance of their class. This behaves the "
"same as the :class:`~typing.TypeVar`-based approach :pep:`specified in PEP "
"484 <484#annotating-instance-and-class-methods>`, but is more concise and "
"easier to follow."
msgstr ""
"A nova anotação :data:`~typing.Self` fornece uma maneira simples e intuitiva "
"de anotar métodos que retornam uma instância de sua classe. Isso se comporta "
"da mesma forma que a abordagem baseada em :class:`~typing.TypeVar` :pep:"
"`especificada na PEP 484 <484#annotating-instance-and-class-methods>`, mas é "
"mais concisa e fácil de seguir."

#: ../../whatsnew/3.11.rst:322
msgid ""
"Common use cases include alternative constructors provided as :func:"
"`classmethod <classmethod>`\\s, and :meth:`~object.__enter__` methods that "
"return ``self``::"
msgstr ""
"Casos de uso comuns incluem construtores alternativos fornecidos como :func:"
"`classmethod <classmethod>`\\s e métodos :meth:`~object.__enter__` que "
"retornam ``self``::"

#: ../../whatsnew/3.11.rst:340
msgid ""
":data:`~typing.Self` can also be used to annotate method parameters or "
"attributes of the same type as their enclosing class."
msgstr ""
":data:`~typing.Self` também pode ser usado para anotar parâmetros de métodos "
"ou atributos do mesmo tipo que sua classe de inclusão."

#: ../../whatsnew/3.11.rst:343
msgid "See :pep:`673` for more details."
msgstr "Veja :pep:`673` para mais detalhes."

#: ../../whatsnew/3.11.rst:345
msgid ""
"(Contributed by James Hilton-Balfe in :issue:`46534`. PEP written by Pradeep "
"Kumar Srinivasan and James Hilton-Balfe.)"
msgstr ""
"(Contribuição de James Hilton-Balfe em :issue:`46534`. PEP escrita por "
"Pradeep Kumar Srinivasan e James Hilton-Balfe.)"

#: ../../whatsnew/3.11.rst:352
msgid "PEP 675: Arbitrary literal string type"
msgstr "PEP 675: Tipo de string literal arbitrário"

#: ../../whatsnew/3.11.rst:354
msgid ""
"The new :data:`~typing.LiteralString` annotation may be used to indicate "
"that a function parameter can be of any literal string type. This allows a "
"function to accept arbitrary literal string types, as well as strings "
"created from other literal strings. Type checkers can then enforce that "
"sensitive functions, such as those that execute SQL statements or shell "
"commands, are called only with static arguments, providing protection "
"against injection attacks."
msgstr ""
"A nova anotação :data:`~typing.LiteralString` pode ser usada para indicar "
"que um parâmetro de função pode ser de qualquer tipo de string literal. Isso "
"permite que uma função aceite tipos de string literais arbitrários, bem como "
"strings criadas a partir de outras strings literais. Os verificadores de "
"tipo podem então impor que funções confidenciais, como aquelas que executam "
"instruções SQL ou comandos de console, sejam chamadas apenas com argumentos "
"estáticos, fornecendo proteção contra ataques de injeção."

#: ../../whatsnew/3.11.rst:362
msgid "For example, a SQL query function could be annotated as follows::"
msgstr ""
"Por exemplo, uma função de consulta SQL pode ser anotada da seguinte forma::"

#: ../../whatsnew/3.11.rst:380
msgid "See :pep:`675` for more details."
msgstr "Veja :pep:`675` para mais detalhes."

#: ../../whatsnew/3.11.rst:382
msgid ""
"(Contributed by Jelle Zijlstra in :issue:`47088`. PEP written by Pradeep "
"Kumar Srinivasan and Graham Bleaney.)"
msgstr ""
"(Contribuição de Jelle Zijlstra em :issue:`47088`. PEP escrita por Pradeep "
"Kumar Srinivasan e Graham Bleaney.)"

#: ../../whatsnew/3.11.rst:389
msgid "PEP 681: Data class transforms"
msgstr "PEP 681: Transformações de classe de dados"

#: ../../whatsnew/3.11.rst:391
msgid ""
":data:`~typing.dataclass_transform` may be used to decorate a class, "
"metaclass, or a function that is itself a decorator. The presence of "
"``@dataclass_transform()`` tells a static type checker that the decorated "
"object performs runtime \"magic\" that transforms a class, giving it :func:"
"`dataclass <dataclasses.dataclass>`-like behaviors."
msgstr ""
":data:`~typing.dataclass_transform` pode ser usado para decorar uma classe, "
"metaclasse ou uma função que é um decorador. A presença de "
"``@dataclass_transform()`` informa a um verificador de tipo estático que o "
"objeto decorado executa uma \"mágica\" de tempo de execução que transforma "
"uma classe, dando a ela comportamentos semelhantes a :func:`dataclass "
"<dataclasses.dataclass>`."

#: ../../whatsnew/3.11.rst:397
msgid "For example::"
msgstr "Por exemplo::"

#: ../../whatsnew/3.11.rst:415
msgid "See :pep:`681` for more details."
msgstr "Veja :pep:`681` para mais detalhes."

#: ../../whatsnew/3.11.rst:417
msgid ""
"(Contributed by Jelle Zijlstra in :gh:`91860`. PEP written by Erik De Bonte "
"and Eric Traut.)"
msgstr ""
"(Contribuição de Jelle Zijlstra em :gh:`91860`. PEP escrita por Erik De "
"Bonte e Eric Traut.)"

#: ../../whatsnew/3.11.rst:424
msgid "PEP 563 may not be the future"
msgstr "PEP 563 pode não ser o futuro"

#: ../../whatsnew/3.11.rst:426
msgid ""
":pep:`563` Postponed Evaluation of Annotations (the ``from __future__ import "
"annotations`` :ref:`future statement <future>`) that was originally planned "
"for release in Python 3.10 has been put on hold indefinitely. See `this "
"message from the Steering Council <https://mail.python.org/archives/list/"
"python-dev@python.org/message/VIZEBX5EYMSYIJNDBF6DMUMZOCWHARSO/>`__ for more "
"information."
msgstr ""
":pep:`563` Avaliação adiada de anotações (a ``from __future__ import "
"annotations`` :ref:`instrução future <future>`) que foi originalmente "
"planejada para lançamento no Python 3.10 foi colocada em espera "
"indefinidamente. Veja `esta mensagem do Conselho Diretor <https://mail."
"python.org/archives/list/python-dev@python.org/message/"
"VIZEBX5EYMSYIJNDBF6DMUMZOCWHARSO/>`__ para mais informações."

#: ../../whatsnew/3.11.rst:437
msgid "Other Language Changes"
msgstr "Outras mudanças na linguagem"

#: ../../whatsnew/3.11.rst:439
msgid ""
"Starred unpacking expressions can now be used in :keyword:`for` statements. "
"(See :issue:`46725` for more details.)"
msgstr ""
"Expressões de desempacotamento com asterisco agora podem ser usadas em "
"instruções :keyword:`for`. (Veja :issue:`46725` para mais detalhes.)"

#: ../../whatsnew/3.11.rst:442
msgid ""
"Asynchronous :ref:`comprehensions <comprehensions>` are now allowed inside "
"comprehensions in :ref:`asynchronous functions <async def>`. Outer "
"comprehensions implicitly become asynchronous in this case. (Contributed by "
"Serhiy Storchaka in :issue:`33346`.)"
msgstr ""
":ref:`Compreensões <comprehensions>` assíncronas agora são permitidas dentro "
"de compreensões em :ref:`funções assíncronas <async def>`. As compreensões "
"externas tornam-se implicitamente assíncronas neste caso. (Contribuição de "
"Serhiy Storchaka em :issue:`33346`.)"

#: ../../whatsnew/3.11.rst:447
msgid ""
"A :exc:`TypeError` is now raised instead of an :exc:`AttributeError` in :"
"keyword:`with` statements and :meth:`contextlib.ExitStack.enter_context` for "
"objects that do not support the :term:`context manager` protocol, and in :"
"keyword:`async with` statements and :meth:`contextlib.AsyncExitStack."
"enter_async_context` for objects not supporting the :term:`asynchronous "
"context manager` protocol. (Contributed by Serhiy Storchaka in :issue:"
"`12022` and :issue:`44471`.)"
msgstr ""
"Uma exceção :exc:`TypeError` agora é levantada em vez de uma :exc:"
"`AttributeError` em instruções :keyword:`with` e :meth:`contextlib.ExitStack."
"enter_context` para objetos que não oferecem suporte ao protocolo de :term:"
"`gerenciador de contexto`, e em instruções :keyword:`async with` e :meth:"
"`contextlib.AsyncExitStack.enter_async_context` para objetos que não "
"oferecem suporte ao protocolo de :term:`gerenciador de contexto assíncrono`. "
"(Contribuição de Serhiy Storchaka em :issue:`12022` e :issue:`44471`.)"

#: ../../whatsnew/3.11.rst:455
msgid ""
"Added :meth:`object.__getstate__`, which provides the default implementation "
"of the :meth:`!__getstate__` method. :mod:`copy`\\ing and :mod:`pickle`\\ing "
"instances of subclasses of builtin types :class:`bytearray`, :class:`set`, :"
"class:`frozenset`, :class:`collections.OrderedDict`, :class:`collections."
"deque`, :class:`weakref.WeakSet`, and :class:`datetime.tzinfo` now copies "
"and pickles instance attributes implemented as :term:`slots <__slots__>`. "
"This change has an unintended side effect: It trips up a small minority of "
"existing Python projects not expecting :meth:`object.__getstate__` to exist. "
"See the later comments on :gh:`70766` for discussions of what workarounds "
"such code may need. (Contributed by Serhiy Storchaka in :issue:`26579`.)"
msgstr ""
"Adicionado :meth:`object.__getstate__`, que fornece a implementação padrão "
"do método :meth:`!__getstate__`. Fazer :mod:`copy` e :mod:`pickle` de "
"instâncias de subclasses de tipos embutidos :class:`bytearray`, :class:"
"`set`, :class:`frozenset`, :class:`collections.OrderedDict`, :class:"
"`collections.deque`, :class:`weakref.WeakSet` e :class:`datetime.tzinfo` "
"agora copia e serializa com pickle atributos de instância implementados "
"como :term:`slots <__slots__>`. Essa mudança tem um efeito colateral não "
"intencional: ela atrapalha uma pequena minoria de projetos Python existentes "
"que não esperavam que :meth:`object.__getstate__` existisse. Consulte os "
"comentários posteriores  em :gh:`70766` para discussões sobre quais soluções "
"alternativas esse código pode precisar. (Contribuição de Serhiy Storchaka "
"em :issue:`26579`.)"

#: ../../whatsnew/3.11.rst:470
msgid ""
"Added a :option:`-P` command line option and a :envvar:`PYTHONSAFEPATH` "
"environment variable, which disable the automatic prepending to :data:`sys."
"path` of the script's directory when running a script, or the current "
"directory when using :option:`-c` and :option:`-m`. This ensures only stdlib "
"and installed modules are picked up by :keyword:`import`, and avoids "
"unintentionally or maliciously shadowing modules with those in a local (and "
"typically user-writable) directory. (Contributed by Victor Stinner in :gh:"
"`57684`.)"
msgstr ""
"Adicionada uma opção de linha de comando :option:`-P` e uma variável de "
"ambiente :envvar:`PYTHONSAFEPATH`, que desativa o prefixo automático para :"
"data:`sys.path` do diretório do script ao executar um script ou o diretório "
"atual ao usar :option:`-c` e :option:`-m`. Isso garante que apenas os "
"módulos stdlib e instalados sejam escolhidos por :keyword:`import`, e evita "
"sombreamento involuntário ou mal-intencionado de módulos com aqueles em um "
"diretório local (e normalmente gravável pelo usuário). (Contribuição de "
"Victor Stinner em :gh:`57684`.)"

#: ../../whatsnew/3.11.rst:481
msgid ""
"A ``\"z\"`` option was added to the :ref:`formatspec` that coerces negative "
"to positive zero after rounding to the format precision. See :pep:`682` for "
"more details. (Contributed by John Belmonte in :gh:`90153`.)"
msgstr ""
"Uma opção ``\"z\"`` foi adicionada ao :ref:`formatspec` que força zero "
"negativo para positivo após o arredondamento para a precisão do formato. "
"Veja :pep:`682` para mais detalhes. (Contribuição de John Belmonte em :gh:"
"`90153`.)"

#: ../../whatsnew/3.11.rst:486
msgid ""
"Bytes are no longer accepted on :data:`sys.path`.  Support broke sometime "
"between Python 3.2 and 3.6, with no one noticing until after Python 3.10.0 "
"was released. In addition, bringing back support would be problematic due to "
"interactions between :option:`-b` and :data:`sys.path_importer_cache` when "
"there is a mixture of :class:`str` and :class:`bytes` keys. (Contributed by "
"Thomas Grainger in :gh:`91181`.)"
msgstr ""
"Bytes não são mais aceitos em :data:`sys.path`. O suporte quebrou em algum "
"momento entre o Python 3.2 e o 3.6, sem que ninguém percebesse até o "
"lançamento do Python 3.10.0. Além disso, trazer de volta o suporte seria "
"problemático devido às interações entre :option:`-b` e :data:`sys."
"path_importer_cache` quando há uma mistura de chaves :class:`str` e :class:"
"`bytes`. (Contribuição de Thomas Grainger em :gh:`91181`.)"

#: ../../whatsnew/3.11.rst:497
msgid "Other CPython Implementation Changes"
msgstr "Outras mudanças na implementação do CPython"

#: ../../whatsnew/3.11.rst:499
msgid ""
"The special methods :meth:`~object.__complex__` for :class:`complex` and :"
"meth:`~object.__bytes__` for :class:`bytes` are implemented to support the :"
"class:`typing.SupportsComplex` and :class:`typing.SupportsBytes` protocols. "
"(Contributed by Mark Dickinson and Donghee Na in :issue:`24234`.)"
msgstr ""
"Os métodos especiais :meth:`~object.__complex__` para :class:`complex` e :"
"meth:`~object.__bytes__` para :class:`bytes` são implementados para oferecer "
"suporte aos protocolos :class:`typing.SupportsComplex` e :class:`typing."
"SupportsBytes`. (Contribuição de Mark Dickinson e Donghee Na em :issue:"
"`24234`.)"

#: ../../whatsnew/3.11.rst:504
msgid ""
"``siphash13`` is added as a new internal hashing algorithm. It has similar "
"security properties as ``siphash24``, but it is slightly faster for long "
"inputs. :class:`str`, :class:`bytes`, and some other types now use it as the "
"default algorithm for :func:`hash`. :pep:`552` :ref:`hash-based .pyc files "
"<pyc-invalidation>` now use ``siphash13`` too. (Contributed by Inada Naoki "
"in :issue:`29410`.)"
msgstr ""
"``siphash13`` foi adicionado como um novo algoritmo de hash interno. Ele tem "
"propriedades de segurança semelhantes ao ``siphash24``, mas é um pouco mais "
"rápido para entradas longas. :class:`str`, :class:`bytes` e alguns outros "
"tipos agora o usam como o algoritmo padrão para :func:`hash`. :ref:"
"`Arquivos .pyc baseados em hash <pyc-invalidation>` da :pep:`552` agora usam "
"``siphash13`` também. (Contribuição de Inada Naoki em :issue:`29410`.)"

#: ../../whatsnew/3.11.rst:513
msgid ""
"When an active exception is re-raised by a :keyword:`raise` statement with "
"no parameters, the traceback attached to this exception is now always ``sys."
"exc_info()[1].__traceback__``. This means that changes made to the traceback "
"in the current :keyword:`except` clause are reflected in the re-raised "
"exception. (Contributed by Irit Katriel in :issue:`45711`.)"
msgstr ""
"Quando uma exceção ativa é reativada por uma instrução :keyword:`raise` sem "
"parâmetros, o traceback anexado a essa exceção agora é sempre ``sys."
"exc_info()[1].__traceback__``. Isso significa que as alterações feitas no "
"traceback na cláusula :keyword:`except` atual são refletidas na exceção "
"levantada novamente. (Contribuição de Irit Katriel em :issue:`45711`.)"

#: ../../whatsnew/3.11.rst:519
msgid ""
"The interpreter state's representation of handled exceptions (aka "
"``exc_info`` or ``_PyErr_StackItem``) now only has the ``exc_value`` field; "
"``exc_type`` and ``exc_traceback`` have been removed, as they can be derived "
"from ``exc_value``. (Contributed by Irit Katriel in :issue:`45711`.)"
msgstr ""
"A representação do estado do interpretador de exceções tratadas (também "
"conhecidas como ``exc_info`` ou ``_PyErr_StackItem``) agora tem apenas o "
"campo ``exc_value``; ``exc_type`` e ``exc_traceback`` foram removidos, pois "
"podem ser derivados de ``exc_value``. (Contribuição de Irit Katriel em :"
"issue:`45711`.)"

#: ../../whatsnew/3.11.rst:525
msgid ""
"A new :ref:`command line option <install-quiet-option>`, ``AppendPath``, has "
"been added for the Windows installer. It behaves similarly to "
"``PrependPath``, but appends the install and scripts directories instead of "
"prepending them. (Contributed by Bastian Neuburger in :issue:`44934`.)"
msgstr ""
"Uma nova :ref:`opção de linha de comando <install-quiet-option>`, "
"``AppendPath``, foi adicionada para o instalador do Windows. Ela se comporta "
"de maneira semelhante ao ``PrependPath``, mas anexa os diretórios de "
"instalação e scripts em vez de antecedê-los. (Contribuição de Bastian "
"Neuburger em :issue:`44934`.)"

#: ../../whatsnew/3.11.rst:531
msgid ""
"The :c:member:`PyConfig.module_search_paths_set` field must now be set to "
"``1`` for initialization to use :c:member:`PyConfig.module_search_paths` to "
"initialize :data:`sys.path`. Otherwise, initialization will recalculate the "
"path and replace any values added to ``module_search_paths``."
msgstr ""
"O campo :c:member:`PyConfig.module_search_paths_set` agora deve ser definido "
"como ``1`` para a inicialização usar :c:member:`PyConfig."
"module_search_paths` para inicializar :data:`sys.path`. Caso contrário, a "
"inicialização irá recalcular o caminho e substituir quaisquer valores "
"adicionados a ``module_search_paths``."

#: ../../whatsnew/3.11.rst:536
msgid ""
"The output of the :option:`--help` option now fits in 50 lines/80 columns. "
"Information about :ref:`Python environment variables <using-on-envvars>` "
"and :option:`-X` options is now available using the respective :option:`--"
"help-env` and :option:`--help-xoptions` flags, and with the new :option:`--"
"help-all`. (Contributed by Éric Araujo in :issue:`46142`.)"
msgstr ""
"A saída da opção :option:`--help` agora cabe em 50 linhas/80 colunas. "
"Informações sobre as :ref:`variáveis de ambiente do Python <using-on-"
"envvars>` e a opção :option:`-X` agora estão disponíveis usando os "
"respectivos sinalizadores :option:`--help-env` e :option:`--help-xoptions`, "
"e com o novo :option:`--help-all`. (Contribuição de Éric Araujo em :issue:"
"`46142`.)"

#: ../../whatsnew/3.11.rst:543
msgid ""
"Converting between :class:`int` and :class:`str` in bases other than 2 "
"(binary), 4, 8 (octal), 16 (hexadecimal), or 32 such as base 10 (decimal) "
"now raises a :exc:`ValueError` if the number of digits in string form is "
"above a limit to avoid potential denial of service attacks due to the "
"algorithmic complexity. This is a mitigation for `CVE-2020-10735 <https://"
"cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-10735>`_. This limit can be "
"configured or disabled by environment variable, command line flag, or :mod:"
"`sys` APIs. See the :ref:`integer string conversion length limitation "
"<int_max_str_digits>` documentation.  The default limit is 4300 digits in "
"string form."
msgstr ""
"Converter entre :class:`int` e :class:`str` em bases diferentes de 2 "
"(binário), 4, 8 (octal), 16 (hexadecimal) ou 32 como base 10 (decimal) agora "
"levanta uma exceção :exc:`ValueError` se o número de dígitos em forma de "
"string estiver acima de um limite para evitar possíveis ataques de negação "
"de serviço devido à complexidade algorítmica. Esta é uma mitigação para "
"`CVE-2020-10735 <https://cve.mitre.org/cgi-bin/cvename.cgi?"
"name=CVE-2020-10735>`_. Este limite pode ser configurado ou desabilitado por "
"variável de ambiente, sinalizador de linha de comando ou APIs de :mod:`sys`. "
"Veja a documentação de :ref:`limitação de comprimento de conversão de string "
"inteira <int_max_str_digits>`. O limite padrão é de 4300 dígitos em forma de "
"string."

#: ../../whatsnew/3.11.rst:558
msgid "New Modules"
msgstr "Novos módulos"

#: ../../whatsnew/3.11.rst:560
msgid ""
":mod:`tomllib`: For parsing `TOML <https://toml.io/>`_. See :pep:`680` for "
"more details. (Contributed by Taneli Hukkinen in :issue:`40059`.)"
msgstr ""
":mod:`tomllib`: Para analisar `TOML <https://toml.io/>`_. Veja :pep:`680` "
"para mais detalhes. (Contribuição de Taneli Hukkinen em :issue:`40059`.)"

#: ../../whatsnew/3.11.rst:564
msgid ""
":mod:`wsgiref.types`: :pep:`WSGI <3333>`-specific types for static type "
"checking. (Contributed by Sebastian Rittau in :issue:`42012`.)"
msgstr ""
":mod:`wsgiref.types`: Tipos específicos de :pep:`WSGI <3333>` para "
"verificação de tipo estático. (Contribuição de Sebastian Rittau em :issue:"
"`42012`.)"

#: ../../whatsnew/3.11.rst:572
msgid "Improved Modules"
msgstr "Módulos melhorados"

#: ../../whatsnew/3.11.rst:577
msgid "asyncio"
msgstr "asyncio"

#: ../../whatsnew/3.11.rst:579
msgid ""
"Added the :class:`~asyncio.TaskGroup` class, an :ref:`asynchronous context "
"manager <async-context-managers>` holding a group of tasks that will wait "
"for all of them upon exit. For new code this is recommended over using :func:"
"`~asyncio.create_task` and :func:`~asyncio.gather` directly. (Contributed by "
"Yury Selivanov and others in :gh:`90908`.)"
msgstr ""
"Adicionada a classe :class:`~asyncio.TaskGroup`, um :ref:`assíncrono "
"gerenciador de contexto <async-context-managers>` contendo um grupo de "
"tarefas que irá esperar por todas elas ao sair. Para código novo, é "
"recomendado usar :func:`~asyncio.create_task` e :func:`~asyncio.gather` "
"diretamente. (Contribuição de Yury Selivanov e outros em :gh:`90908`.)"

#: ../../whatsnew/3.11.rst:586
msgid ""
"Added :func:`~asyncio.timeout`, an asynchronous context manager for setting "
"a timeout on asynchronous operations. For new code this is recommended over "
"using :func:`~asyncio.wait_for` directly. (Contributed by Andrew Svetlov in :"
"gh:`90927`.)"
msgstr ""
"Adicionado :func:`~asyncio.timeout`, um gerenciador de contexto assíncrono "
"para definir um tempo limite em operações assíncronas. Para código novo, é "
"recomendado usar :func:`~asyncio.wait_for` diretamente. (Contribuição de "
"Andrew Svetlov em :gh:`90927`.)"

#: ../../whatsnew/3.11.rst:591
msgid ""
"Added the :class:`~asyncio.Runner` class, which exposes the machinery used "
"by :func:`~asyncio.run`. (Contributed by Andrew Svetlov in :gh:`91218`.)"
msgstr ""
"Adicionada a classe :class:`~asyncio.Runner`, que expõe o maquinário usado "
"por :func:`~asyncio.run`. (Contribuição de Andrew Svetlov em :gh:`91218`.)"

#: ../../whatsnew/3.11.rst:595
msgid ""
"Added the :class:`~asyncio.Barrier` class to the synchronization primitives "
"in the asyncio library, and the related :exc:`~asyncio.BrokenBarrierError` "
"exception. (Contributed by Yves Duprat and Andrew Svetlov in :gh:`87518`.)"
msgstr ""
"Adicionada a classe :class:`~asyncio.Barrier` às primitivas de sincronização "
"na biblioteca asyncio, e a exceção :exc:`~asyncio.BrokenBarrierError` "
"relacionada. (Contribuição de Yves Duprat e Andrew Svetlov em :gh:`87518`.)"

#: ../../whatsnew/3.11.rst:600
msgid ""
"Added keyword argument *all_errors* to :meth:`asyncio.loop."
"create_connection` so that multiple connection errors can be raised as an :"
"exc:`ExceptionGroup`."
msgstr ""
"Adicionado o argumento nomeado *all_errors* para :meth:`asyncio.loop."
"create_connection` para que vários erros de conexão possam ser levantados "
"como :exc:`ExceptionGroup`."

#: ../../whatsnew/3.11.rst:603
msgid ""
"Added the :meth:`asyncio.StreamWriter.start_tls` method for upgrading "
"existing stream-based connections to TLS. (Contributed by Ian Good in :issue:"
"`34975`.)"
msgstr ""
"Adicionado o método :meth:`asyncio.StreamWriter.start_tls` para atualizar "
"conexões baseadas em fluxo existentes para TLS. (Contribuição de Ian Good "
"em :issue:`34975`.)"

#: ../../whatsnew/3.11.rst:607
msgid ""
"Added raw datagram socket functions to the event loop: :meth:`~asyncio.loop."
"sock_sendto`, :meth:`~asyncio.loop.sock_recvfrom` and :meth:`~asyncio.loop."
"sock_recvfrom_into`. These have implementations in :class:`~asyncio."
"SelectorEventLoop` and :class:`~asyncio.ProactorEventLoop`. (Contributed by "
"Alex Grönholm in :issue:`46805`.)"
msgstr ""
"Adicionadas funções de soquete de datagrama *raw* ao laço de eventos: :meth:"
"`~asyncio.loop.sock_sendto`, :meth:`~asyncio.loop.sock_recvfrom` e :meth:"
"`~asyncio.loop.sock_recvfrom_into`. Eles têm implementações em :class:"
"`~asyncio.SelectorEventLoop` e :class:`~asyncio.ProactorEventLoop`. "
"(Contribuição de Alex Grönholm em :issue:`46805`.)"

#: ../../whatsnew/3.11.rst:615
msgid ""
"Added :meth:`~asyncio.Task.cancelling` and :meth:`~asyncio.Task.uncancel` "
"methods to :class:`~asyncio.Task`. These are primarily intended for internal "
"use, notably by :class:`~asyncio.TaskGroup`."
msgstr ""
"Adicionados os métodos :meth:`~asyncio.Task.cancelling` e :meth:`~asyncio."
"Task.uncancel` a :class:`~asyncio.Task`. Estes são destinados principalmente "
"para uso interno, notadamente por :class:`~asyncio.TaskGroup`."

#: ../../whatsnew/3.11.rst:624
msgid "contextlib"
msgstr "contextlib"

#: ../../whatsnew/3.11.rst:626
msgid ""
"Added non parallel-safe :func:`~contextlib.chdir` context manager to change "
"the current working directory and then restore it on exit. Simple wrapper "
"around :func:`~os.chdir`. (Contributed by Filipe Laíns in :issue:`25625`)"
msgstr ""
"Adicionado gerenciador de contexto não paralelo seguro :func:`~contextlib."
"chdir` para alterar o diretório de trabalho atual e depois restaurá-lo na "
"saída. Wrapper simples em torno de :func:`~os.chdir`. (Contribuição de "
"Filipe Laíns em :issue:`25625`)"

#: ../../whatsnew/3.11.rst:634
msgid "dataclasses"
msgstr "dataclasses"

#: ../../whatsnew/3.11.rst:636
msgid ""
"Change field default mutability check, allowing only defaults which are :"
"term:`hashable` instead of any object which is not an instance of :class:"
"`dict`, :class:`list` or :class:`set`. (Contributed by Eric V. Smith in :"
"issue:`44674`.)"
msgstr ""
"Alterar a verificação de mutabilidade padrão do campo, permitindo apenas "
"padrões que são :term:`hasheáveis <hashable>` em vez de qualquer objeto que "
"não seja uma instância de :class:`dict`, :class:`list` ou :class:`set`. "
"(Contribuição de Eric V. Smith em :issue:`44674`.)"

#: ../../whatsnew/3.11.rst:645
msgid "datetime"
msgstr "datetime"

#: ../../whatsnew/3.11.rst:647
msgid ""
"Add :const:`datetime.UTC`, a convenience alias for :attr:`datetime.timezone."
"utc`. (Contributed by Kabir Kwatra in :gh:`91973`.)"
msgstr ""
"Adicione :const:`datetime.UTC`, um apelido de conveniência para :attr:"
"`datetime.timezone.utc`. (Contribuição de Kabir Kwatra em :gh:`91973`.)"

#: ../../whatsnew/3.11.rst:650
msgid ""
":meth:`datetime.date.fromisoformat`, :meth:`datetime.time.fromisoformat` "
"and :meth:`datetime.datetime.fromisoformat` can now be used to parse most "
"ISO 8601 formats (barring only those that support fractional hours and "
"minutes). (Contributed by Paul Ganssle in :gh:`80010`.)"
msgstr ""
":meth:`datetime.date.fromisoformat`, :meth:`datetime.time.fromisoformat` e :"
"meth:`datetime.datetime.fromisoformat` agora podem ser usados para analisar "
"a maioria dos formatos ISO 8601 (exceto aqueles que têm suporte a horas "
"fracionárias e minutos). (Contribuição de Paul Ganssle em :gh:`80010`.)"

#: ../../whatsnew/3.11.rst:659
msgid "enum"
msgstr "enum"

#: ../../whatsnew/3.11.rst:661
msgid ""
"Renamed :class:`!EnumMeta` to :class:`~enum.EnumType` (:class:`!EnumMeta` "
"kept as an alias)."
msgstr ""
"Renomeado :class:`!EnumMeta` para :class:`~enum.EnumType` (:class:`!"
"EnumMeta` mantido como um apelido)."

#: ../../whatsnew/3.11.rst:664
msgid ""
"Added :class:`~enum.StrEnum`, with members that can be used as (and must be) "
"strings."
msgstr ""
"Adicionada :class:`~enum.StrEnum`, com membros que podem ser usados como (e "
"devem ser) strings."

#: ../../whatsnew/3.11.rst:667
msgid ""
"Added :class:`~enum.ReprEnum`, which only modifies the :meth:`~object."
"__repr__` of members while returning their literal values (rather than "
"names) for :meth:`~object.__str__` and :meth:`~object.__format__` (used by :"
"func:`str`, :func:`format` and :term:`f-string`\\s)."
msgstr ""
"Adicionada :class:`~enum.ReprEnum`, que apenas modifica o :meth:`~object."
"__repr__` dos membros enquanto retorna seus valores literais (ao invés de "
"nomes) para :meth:`~object.__str__` e :meth:`~object.__format__` (usado por :"
"func:`str`, :func:`format` e :term:`f-string`\\s)."

#: ../../whatsnew/3.11.rst:673
msgid ""
"Changed :meth:`Enum.__format__() <enum.Enum.__format__>` (the default for :"
"func:`format`, :meth:`str.format` and :term:`f-string`\\s) to always produce "
"the same result as :meth:`Enum.__str__() <enum.Enum.__str__>`:  for enums "
"inheriting from :class:`~enum.ReprEnum` it will be the member's value; for "
"all other enums it will be the enum and member name (e.g. ``Color.RED``)."
msgstr ""
"Alterado :meth:`Enum.__format__() <enum.Enum.__format__>` (o padrão para :"
"func:`format`, :meth:`str.format` e :term:`f-string`\\s) para sempre produz "
"o mesmo resultado que :meth:`Enum.__str__() <enum.Enum.__str__>`: para enums "
"herdados de :class:`~enum.ReprEnum` será o valor do membro; para todos os "
"outros enums, será o enum e o nome do membro (por exemplo, ``Color.RED``)."

#: ../../whatsnew/3.11.rst:679
msgid ""
"Added a new *boundary* class parameter to :class:`~enum.Flag` enums and the :"
"class:`~enum.FlagBoundary` enum with its options, to control how to handle "
"out-of-range flag values."
msgstr ""
"Adicionado um novo parâmetro de classe *boundary* para enums :class:`~enum."
"Flag` e :class:`~enum.FlagBoundary` com suas opções, para controlar como "
"lidar com valores de sinalizadores fora do intervalo."

#: ../../whatsnew/3.11.rst:683
msgid ""
"Added the :func:`~enum.verify` enum decorator and the :class:`~enum."
"EnumCheck` enum with its options, to check enum classes against several "
"specific constraints."
msgstr ""
"Adicionado o decorador de enum :func:`~enum.verify` e o enum :class:`~enum."
"EnumCheck` com suas opções, para verificar classes de enum em relação a "
"várias restrições específicas."

#: ../../whatsnew/3.11.rst:687
msgid ""
"Added the :func:`~enum.member` and :func:`~enum.nonmember` decorators, to "
"ensure the decorated object is/is not converted to an enum member."
msgstr ""
"Adicionados os decoradores :func:`~enum.member` e :func:`~enum.nonmember`, "
"para garantir que o objeto decorado seja/não seja convertido em um membro "
"enum."

#: ../../whatsnew/3.11.rst:690
msgid ""
"Added the :func:`~enum.property` decorator, which works like :func:"
"`property` except for enums. Use this instead of :func:`types."
"DynamicClassAttribute`."
msgstr ""
"Adicionado o decorador :func:`~enum.property`, que funciona como :func:"
"`property` exceto para enums. Use isso em vez de :func:`types."
"DynamicClassAttribute`."

#: ../../whatsnew/3.11.rst:694
msgid ""
"Added the :func:`~enum.global_enum` enum decorator, which adjusts :meth:"
"`~object.__repr__` and :meth:`~object.__str__` to show values as members of "
"their module rather than the enum class. For example, ``'re.ASCII'`` for "
"the :const:`~re.ASCII` member of :class:`re.RegexFlag` rather than "
"``'RegexFlag.ASCII'``."
msgstr ""
"Adicionado o decorador enum :func:`~enum.global_enum`, que ajusta :meth:"
"`~object.__repr__` e :meth:`~object.__str__` para mostrar valores como "
"membros de seu módulo em vez da classe enum. Por exemplo, ``'re.ASCII'`` "
"para o membro :const:`~re.ASCII` de :class:`re.RegexFlag` em vez de "
"``'RegexFlag.ASCII'``."

#: ../../whatsnew/3.11.rst:700
msgid ""
"Enhanced :class:`~enum.Flag` to support :func:`len`, iteration and :keyword:"
"`in`/:keyword:`not in` on its members. For example, the following now works: "
"``len(AFlag(3)) == 2 and list(AFlag(3)) == (AFlag.ONE, AFlag.TWO)``"
msgstr ""
"Aprimorada :class:`~enum.Flag` para ter suporte a :func:`len`, iteração e :"
"keyword:`in`/:keyword:`not in` em seus membros. Por exemplo, o seguinte "
"agora funciona: ``len(AFlag(3)) == 2 and list(AFlag(3)) == (AFlag.ONE, AFlag."
"TWO)``"

#: ../../whatsnew/3.11.rst:705
msgid ""
"Changed :class:`~enum.Enum` and :class:`~enum.Flag` so that members are now "
"defined before :meth:`~object.__init_subclass__` is called; :func:`dir` now "
"includes methods, etc., from mixed-in data types."
msgstr ""
"Alterada :class:`~enum.Enum` e :class:`~enum.Flag` para que os membros sejam "
"agora definidos antes de :meth:`~object.__init_subclass__` ser chamado; :"
"func:`dir` agora inclui métodos, etc., de tipos de dados mistos."

#: ../../whatsnew/3.11.rst:710
msgid ""
"Changed :class:`~enum.Flag` to only consider primary values (power of two) "
"canonical while composite values (``3``, ``6``, ``10``, etc.) are considered "
"aliases; inverted flags are coerced to their positive equivalent."
msgstr ""
"Alterada :class:`~enum.Flag` para considerar apenas valores primários "
"(potência de dois) canônicos enquanto valores compostos (``3``, ``6``, "
"``10``, etc.) são considerados apelidos; bandeiras invertidas são coagidas "
"ao seu equivalente positivo."

#: ../../whatsnew/3.11.rst:719
msgid "fcntl"
msgstr "fcntl"

#: ../../whatsnew/3.11.rst:721
msgid ""
"On FreeBSD, the :data:`!F_DUP2FD` and :data:`!F_DUP2FD_CLOEXEC` flags "
"respectively are supported, the former equals to ``dup2`` usage while the "
"latter set the ``FD_CLOEXEC`` flag in addition."
msgstr ""
"No FreeBSD, os sinalizadores :data:`!F_DUP2FD` e :data:`!F_DUP2FD_CLOEXEC` "
"respectivamente são suportados, o primeiro é igual ao uso de ``dup2`` "
"enquanto o último define o sinalizador ``FD_CLOEXEC`` adicionalmente."

#: ../../whatsnew/3.11.rst:729
msgid "fractions"
msgstr "fractions"

#: ../../whatsnew/3.11.rst:731
msgid ""
"Support :PEP:`515`-style initialization of :class:`~fractions.Fraction` from "
"string.  (Contributed by Sergey B Kirpichev in :issue:`44258`.)"
msgstr ""
"Suporte à inicialização no estilo :PEP:`515` de :class:`~fractions.Fraction` "
"da string. (Contribuição de Sergey B Kirpichev em :issue:`44258`.)"

#: ../../whatsnew/3.11.rst:734
msgid ""
":class:`~fractions.Fraction` now implements an ``__int__`` method, so that "
"an ``isinstance(some_fraction, typing.SupportsInt)`` check passes. "
"(Contributed by Mark Dickinson in :issue:`44547`.)"
msgstr ""
":class:`~fractions.Fraction` agora implementa um método ``__int__``, para "
"que uma verificação de ``isinstance(some_fraction, typing.SupportsInt)`` "
"seja aprovada. (Contribuição de Mark Dickinson em :issue:`44547`.)"

#: ../../whatsnew/3.11.rst:742
msgid "functools"
msgstr "functools"

#: ../../whatsnew/3.11.rst:744
msgid ""
":func:`functools.singledispatch` now supports :data:`types.UnionType` and :"
"data:`typing.Union` as annotations to the dispatch argument.::"
msgstr ""
":func:`functools.singledispatch` agora suporta :data:`types.UnionType` e :"
"data:`typing.Union` como anotações para o argumento de dispatch.::"

#: ../../whatsnew/3.11.rst:769
msgid "(Contributed by Yurii Karabas in :issue:`46014`.)"
msgstr "(Contribuição de Yurii Karabas na :issue:`46014`.)"

#: ../../whatsnew/3.11.rst:775
msgid "gzip"
msgstr "gzip"

#: ../../whatsnew/3.11.rst:777
msgid ""
"The :func:`gzip.compress` function is now faster when used with the "
"**mtime=0** argument as it delegates the compression entirely to a single :"
"func:`zlib.compress` operation. There is one side effect of this change: The "
"gzip file header contains an \"OS\" byte in its header. That was "
"traditionally always set to a value of 255 representing \"unknown\" by the :"
"mod:`gzip` module. Now, when using :func:`~gzip.compress` with **mtime=0**, "
"it may be set to a different value by the underlying zlib C library Python "
"was linked against. (See :gh:`112346` for details on the side effect.)"
msgstr ""
"A função :func:`gzip.compress` agora é mais rápida quando usada com o "
"argumento **mtime=0**, pois delega a compactação inteiramente para uma única "
"operação :func:`zlib.compress`. Há um efeito colateral dessa mudança: o "
"cabeçalho do arquivo gzip contém um byte de \"OS\" em seu cabeçalho. "
"Tradicionalmente, isso sempre foi definido com um valor de 255 representando "
"\"desconhecido\" pelo módulo :mod:`gzip`. Agora, ao usar :func:`~gzip."
"compress` com **mtime=0**, ele pode ser definido com um valor diferente pela "
"biblioteca zlib C subjacente à qual o Python estava vinculado. (Veja :gh:"
"`112346` para detalhes sobre o efeito colateral.)"

#: ../../whatsnew/3.11.rst:790
msgid "hashlib"
msgstr "hashlib"

#: ../../whatsnew/3.11.rst:792
msgid ""
":func:`hashlib.blake2b` and :func:`hashlib.blake2s` now prefer `libb2`_ over "
"Python's vendored copy. (Contributed by Christian Heimes in :issue:`47095`.)"
msgstr ""
":func:`hashlib.blake2b` e :func:`hashlib.blake2s` agora preferem `libb2`_ em "
"vez da cópia do Python. (Contribuição de Christian Heimes em :issue:`47095`.)"

#: ../../whatsnew/3.11.rst:796
msgid ""
"The internal ``_sha3`` module with SHA3 and SHAKE algorithms now uses "
"*tiny_sha3* instead of the *Keccak Code Package* to reduce code and binary "
"size. The :mod:`hashlib` module prefers optimized SHA3 and SHAKE "
"implementations from OpenSSL. The change affects only installations without "
"OpenSSL support. (Contributed by Christian Heimes in :issue:`47098`.)"
msgstr ""
"O módulo interno ``_sha3`` com algoritmos SHA3 e SHAKE agora usa *tiny_sha3* "
"em vez do *Keccak Code Package* para reduzir o código e o tamanho binário. O "
"módulo :mod:`hashlib` prefere implementações otimizadas de SHA3 e SHAKE do "
"OpenSSL. A alteração afeta apenas instalações sem suporte a OpenSSL. "
"(Contribuição de Christian Heimes em :issue:`47098`.)"

#: ../../whatsnew/3.11.rst:803
msgid ""
"Add :func:`hashlib.file_digest`, a helper function for efficient hashing of "
"files or file-like objects. (Contributed by Christian Heimes in :gh:`89313`.)"
msgstr ""
"Adiciona :func:`hashlib.file_digest`, uma função auxiliar para hash "
"eficiente de arquivos ou objetos semelhantes a arquivos. (Contribuição de "
"Christian Heimes em :gh:`89313`.)"

#: ../../whatsnew/3.11.rst:811
msgid "IDLE and idlelib"
msgstr "IDLE e idlelib"

#: ../../whatsnew/3.11.rst:813
msgid ""
"Apply syntax highlighting to ``.pyi`` files. (Contributed by Alex Waygood "
"and Terry Jan Reedy in :issue:`45447`.)"
msgstr ""
"Aplica realce de sintaxe em arquivos ``.pyi``. (Contribuição de Alex Waygood "
"e Terry Jan Reedy em :issue:`45447`.)"

#: ../../whatsnew/3.11.rst:816
msgid ""
"Include prompts when saving Shell with inputs and outputs. (Contributed by "
"Terry Jan Reedy in :gh:`95191`.)"
msgstr ""
"Inclui prompts ao salvar o console com entradas e saídas. (Contribuição de "
"Terry Jan Reedy em :gh:`95191`.)"

#: ../../whatsnew/3.11.rst:823
msgid "inspect"
msgstr "inspect"

#: ../../whatsnew/3.11.rst:825
msgid ""
"Add :func:`~inspect.getmembers_static` to return all members without "
"triggering dynamic lookup via the descriptor protocol. (Contributed by "
"Weipeng Hong in :issue:`30533`.)"
msgstr ""
"Adiciona :func:`~inspect.getmembers_static` para retornar todos os membros "
"sem acionar a pesquisa dinâmica por meio do protocolo descritor. "
"(Contribuição de Weipeng Hong em :issue:`30533`.)"

#: ../../whatsnew/3.11.rst:829
msgid ""
"Add :func:`~inspect.ismethodwrapper` for checking if the type of an object "
"is a :class:`~types.MethodWrapperType`. (Contributed by Hakan Çelik in :"
"issue:`29418`.)"
msgstr ""
"Adiciona :func:`~inspect.ismethodwrapper` para verificar se o tipo de um "
"objeto é um :class:`~types.MethodWrapperType`. (Contribuição de Hakan Çelik "
"em :issue:`29418`.)"

#: ../../whatsnew/3.11.rst:833
msgid ""
"Change the frame-related functions in the :mod:`inspect` module to return "
"new :class:`~inspect.FrameInfo` and :class:`~inspect.Traceback` class "
"instances (backwards compatible with the previous :term:`named tuple`-like "
"interfaces) that includes the extended :pep:`657` position information (end "
"line number, column and end column). The affected functions are:"
msgstr ""
"Altera as funções relacionadas a quadros no módulo :mod:`inspect` para "
"retornar novas instâncias de classe :class:`~inspect.FrameInfo` e :class:"
"`~inspect.Traceback` (compatíveis com as anteriores interfaces do tipo :term:"
"`tupla nomeada`) que inclui as informações de posição estendidas :pep:`657` "
"(número da linha final, coluna e coluna final). As funções afetadas são:"

#: ../../whatsnew/3.11.rst:839
msgid ":func:`inspect.getframeinfo`"
msgstr ":func:`inspect.getframeinfo`"

#: ../../whatsnew/3.11.rst:840
msgid ":func:`inspect.getouterframes`"
msgstr ":func:`inspect.getouterframes`"

#: ../../whatsnew/3.11.rst:841
msgid ":func:`inspect.getinnerframes`,"
msgstr ":func:`inspect.getinnerframes`,"

#: ../../whatsnew/3.11.rst:842
msgid ":func:`inspect.stack`"
msgstr ":func:`inspect.stack`"

#: ../../whatsnew/3.11.rst:843
msgid ":func:`inspect.trace`"
msgstr ":func:`inspect.trace`"

#: ../../whatsnew/3.11.rst:845
msgid "(Contributed by Pablo Galindo in :gh:`88116`.)"
msgstr "(Contribuição por Pablo Galindo em :gh:`88116`.)"

#: ../../whatsnew/3.11.rst:851
msgid "locale"
msgstr "locale"

#: ../../whatsnew/3.11.rst:853
msgid ""
"Add :func:`locale.getencoding` to get the current locale encoding. It is "
"similar to ``locale.getpreferredencoding(False)`` but ignores the :ref:"
"`Python UTF-8 Mode <utf8-mode>`."
msgstr ""
"Adiciona :func:`locale.getencoding` para obter a codificação local atual. É "
"semelhante a ``locale.getpreferredencoding(False)``, mas ignora o :ref:`Modo "
"UTF-8 do Python <utf8-mode>`."

#: ../../whatsnew/3.11.rst:861
msgid "logging"
msgstr "logging"

#: ../../whatsnew/3.11.rst:863
msgid ""
"Added :func:`~logging.getLevelNamesMapping` to return a mapping from logging "
"level names (e.g. ``'CRITICAL'``) to the values of their corresponding :ref:"
"`levels` (e.g. ``50``, by default). (Contributed by Andrei Kulakovin in :gh:"
"`88024`.)"
msgstr ""
"Adicionada :func:`~logging.getLevelNamesMapping` para retornar um mapeamento "
"de nomes de nível de registro (por exemplo, ``'CRITICAL'``) para os valores "
"de seus :ref:`levels` correspondentes (por exemplo, ``50``, por padrão ). "
"(Contribuição de Andrei Kulakovin em :gh:`88024`.)"

#: ../../whatsnew/3.11.rst:868
msgid ""
"Added a :meth:`~logging.handlers.SysLogHandler.createSocket` method to :"
"class:`~logging.handlers.SysLogHandler`, to match :meth:`SocketHandler."
"createSocket() <logging.handlers.SocketHandler.createSocket>`. It is called "
"automatically during handler initialization and when emitting an event, if "
"there is no active socket. (Contributed by Kirill Pinchuk in :gh:`88457`.)"
msgstr ""
"Adicionado um método :meth:`~logging.handlers.SysLogHandler.createSocket` a :"
"class:`~logging.handlers.SysLogHandler`, para corresponder a :meth:"
"`SocketHandler.createSocket() <logging.handlers.SocketHandler."
"createSocket>` . Ele é chamado automaticamente durante a inicialização do "
"manipulador e ao emitir um evento, se não houver nenhum soquete ativo. "
"(Contribuição de Kirill Pinchuk em :gh:`88457`.)"

#: ../../whatsnew/3.11.rst:880
msgid "math"
msgstr "math"

#: ../../whatsnew/3.11.rst:882
msgid ""
"Add :func:`math.exp2`: return 2 raised to the power of x. (Contributed by "
"Gideon Mitchell in :issue:`45917`.)"
msgstr ""
"Adiciona :func:`math.exp2`: retorna 2 elevado à potência de x. (Contribuição "
"de Gideon Mitchell em :issue:`45917`.)"

#: ../../whatsnew/3.11.rst:885
msgid ""
"Add :func:`math.cbrt`: return the cube root of x. (Contributed by Ajith "
"Ramachandran in :issue:`44357`.)"
msgstr ""
"Adiciona :func:`math.cbrt`: retorna a raiz cúbica de x. (Contribuição de "
"Ajith Ramachandran em :issue:`44357`.)"

#: ../../whatsnew/3.11.rst:888
msgid ""
"The behaviour of two :func:`math.pow` corner cases was changed, for "
"consistency with the IEEE 754 specification. The operations ``math.pow(0.0, -"
"math.inf)`` and ``math.pow(-0.0, -math.inf)`` now return ``inf``. Previously "
"they raised :exc:`ValueError`. (Contributed by Mark Dickinson in :issue:"
"`44339`.)"
msgstr ""
"O comportamento de dois casos excepcionais :func:`math.pow` foi alterado, "
"para consistência com a especificação IEEE 754. As operações ``math.pow(0.0, "
"-math.inf)`` e ``math.pow(-0.0, -math.inf)`` agora retornam ``inf``. "
"Anteriormente eles levantavam :exc:`ValueError`. (Contribuição de Mark "
"Dickinson em :issue:`44339`.)"

#: ../../whatsnew/3.11.rst:894
msgid ""
"The :data:`math.nan` value is now always available. (Contributed by Victor "
"Stinner in :issue:`46917`.)"
msgstr ""
"O valor :data:`math.nan` agora está sempre disponível. (Contribuição de "
"Victor Stinner em :issue:`46917`.)"

#: ../../whatsnew/3.11.rst:901
msgid "operator"
msgstr "operador"

#: ../../whatsnew/3.11.rst:903
msgid ""
"A new function ``operator.call`` has been added, such that ``operator."
"call(obj, *args, **kwargs) == obj(*args, **kwargs)``. (Contributed by Antony "
"Lee in :issue:`44019`.)"
msgstr ""
"Uma nova função ``operator.call`` foi adicionada, tal que ``operator."
"call(obj, *args, **kwargs) == obj(*args, **kwargs)`` (Contribuição de Antony "
"Lee em :issue:`44019`.)"

#: ../../whatsnew/3.11.rst:911
msgid "os"
msgstr "os"

#: ../../whatsnew/3.11.rst:913
msgid ""
"On Windows, :func:`os.urandom` now uses ``BCryptGenRandom()``, instead of "
"``CryptGenRandom()`` which is deprecated. (Contributed by Donghee Na in :"
"issue:`44611`.)"
msgstr ""
"No Windows, :func:`os.urandom` agora usa ``BCryptGenRandom()``, em vez de "
"``CryptGenRandom()`` que foi descontinuado. (Contribuição de Dong-hee Na em :"
"issue:`44611`.)"

#: ../../whatsnew/3.11.rst:917
msgid ""
"As of 3.11.10, :func:`os.mkdir` and :func:`os.makedirs` on Windows now "
"support passing a *mode* value of ``0o700`` to apply access control to the "
"new directory. This implicitly affects :func:`tempfile.mkdtemp` and is a "
"mitigation for CVE-2024-4030. Other values for *mode* continue to be "
"ignored. (Contributed by Steve Dower in :gh:`118486`.)"
msgstr ""

#: ../../whatsnew/3.11.rst:928
msgid "pathlib"
msgstr "pathlib"

#: ../../whatsnew/3.11.rst:930
msgid ""
":meth:`~pathlib.Path.glob` and :meth:`~pathlib.Path.rglob` return only "
"directories if *pattern* ends with a pathname components separator: :data:"
"`~os.sep` or :data:`~os.altsep`. (Contributed by Eisuke Kawasima in :issue:"
"`22276` and :issue:`33392`.)"
msgstr ""
":meth:`~pathlib.Path.glob` e :meth:`~pathlib.Path.rglob` retornam apenas "
"diretórios se *pattern* terminar com um separador de componentes de nome de "
"caminho: :data:`~os.sep` ou :data:`~os.altsep`. (Contribuição de Eisuke "
"Kawasima em :issue:`22276` e :issue:`33392`.)"

#: ../../whatsnew/3.11.rst:939
msgid "re"
msgstr "re"

#: ../../whatsnew/3.11.rst:941
msgid ""
"Atomic grouping (``(?>...)``) and possessive quantifiers (``*+``, ``++``, ``?"
"+``, ``{m,n}+``) are now supported in regular expressions. (Contributed by "
"Jeffrey C. Jacobs and Serhiy Storchaka in :issue:`433030`.)"
msgstr ""
"Agrupamento atômico (``(?>...)``) e quantificadores possessivos (``*+``, ``+"
"+``, ``?+``, ``{m,n}+`` ) agora são suportados em expressões regulares. "
"(Contribuição de Jeffrey C. Jacobs e Serhiy Storchaka em :issue:`433030`.)"

#: ../../whatsnew/3.11.rst:949
msgid "shutil"
msgstr "shutil"

#: ../../whatsnew/3.11.rst:951
msgid ""
"Add optional parameter *dir_fd* in :func:`shutil.rmtree`. (Contributed by "
"Serhiy Storchaka in :issue:`46245`.)"
msgstr ""
"Adicione o parâmetro opcional *dir_fd* em :func:`shutil.rmtree`. "
"(Contribuição de Serhiy Storchaka em :issue:`46245`.)"

#: ../../whatsnew/3.11.rst:958
msgid "socket"
msgstr "socket"

#: ../../whatsnew/3.11.rst:960
msgid ""
"Add CAN Socket support for NetBSD. (Contributed by Thomas Klausner in :issue:"
"`30512`.)"
msgstr ""
"Adiciona suporte ao soquete CAN para NetBSD. (Contribuição de Thomas "
"Klausner em :issue:`30512`.)"

#: ../../whatsnew/3.11.rst:963
msgid ""
":meth:`~socket.create_connection` has an option to raise, in case of failure "
"to connect, an :exc:`ExceptionGroup` containing all errors instead of only "
"raising the last error. (Contributed by Irit Katriel in :issue:`29980`.)"
msgstr ""
":meth:`~socket.create_connection` tem a opção de levantar, em caso de falha "
"na conexão, um :exc:`ExceptionGroup` contendo todos os erros ao invés de "
"somente levantar o último erro. (Contribuição de Irit Katriel em :issue:"
"`29980`.)"

#: ../../whatsnew/3.11.rst:972
msgid "sqlite3"
msgstr "sqlite3"

#: ../../whatsnew/3.11.rst:974
msgid ""
"You can now disable the authorizer by passing :const:`None` to :meth:"
"`~sqlite3.Connection.set_authorizer`. (Contributed by Erlend E. Aasland in :"
"issue:`44491`.)"
msgstr ""
"Agora você pode desabilitar o autorizador passando :const:`None` para :meth:"
"`~sqlite3.Connection.set_authorizer`. (Contribuição de Erlend E. Aasland em :"
"issue:`44491`.)"

#: ../../whatsnew/3.11.rst:978
msgid ""
"Collation name :meth:`~sqlite3.Connection.create_collation` can now contain "
"any Unicode character.  Collation names with invalid characters now raise :"
"exc:`UnicodeEncodeError` instead of :exc:`sqlite3.ProgrammingError`. "
"(Contributed by Erlend E. Aasland in :issue:`44688`.)"
msgstr ""
"O nome do agrupamento :meth:`~sqlite3.Connection.create_collation` agora "
"pode conter qualquer caractere Unicode. Nomes de agrupamento com caracteres "
"inválidos agora levantar :exc:`UnicodeEncodeError` em vez de :exc:`sqlite3."
"ProgrammingError`. (Contribuição de Erlend E. Aasland em :issue:`44688`.)"

#: ../../whatsnew/3.11.rst:983
msgid ""
":mod:`sqlite3` exceptions now include the SQLite extended error code as :"
"attr:`~sqlite3.Error.sqlite_errorcode` and the SQLite error name as :attr:"
"`~sqlite3.Error.sqlite_errorname`. (Contributed by Aviv Palivoda, Daniel "
"Shahaf, and Erlend E. Aasland in :issue:`16379` and :issue:`24139`.)"
msgstr ""
"As exceções :mod:`sqlite3` agora incluem o código de erro estendido SQLite "
"como :attr:`~sqlite3.Error.sqlite_errorcode` e o nome do erro SQLite como :"
"attr:`~sqlite3.Error.sqlite_errorname`. (Contribuição de Aviv Palivoda, "
"Daniel Shahaf e Erlend E. Aasland em :issue:`16379` e :issue:`24139`.)"

#: ../../whatsnew/3.11.rst:989
msgid ""
"Add :meth:`~sqlite3.Connection.setlimit` and :meth:`~sqlite3.Connection."
"getlimit` to :class:`sqlite3.Connection` for setting and getting SQLite "
"limits by connection basis. (Contributed by Erlend E. Aasland in :issue:"
"`45243`.)"
msgstr ""
"Adiciona :meth:`~sqlite3.Connection.setlimit` e :meth:`~sqlite3.Connection."
"getlimit` a :class:`sqlite3.Connection` para definir e obter limites SQLite "
"por base de conexão. (Contribuição de Erlend E. Aasland em :issue:`45243`.)"

#: ../../whatsnew/3.11.rst:994
msgid ""
":mod:`sqlite3` now sets :attr:`sqlite3.threadsafety` based on the default "
"threading mode the underlying SQLite library has been compiled with. "
"(Contributed by Erlend E. Aasland in :issue:`45613`.)"
msgstr ""
":mod:`sqlite3` agora define :attr:`sqlite3.threadsafety` com base no modo de "
"threading padrão com o qual a biblioteca SQLite subjacente foi compilada. "
"(Contribuição de Erlend E. Aasland em :issue:`45613`.)"

#: ../../whatsnew/3.11.rst:998
msgid ""
":mod:`sqlite3` C callbacks now use unraisable exceptions if callback "
"tracebacks are enabled. Users can now register an :func:`unraisable hook "
"handler <sys.unraisablehook>` to improve their debug experience. "
"(Contributed by Erlend E. Aasland in :issue:`45828`.)"
msgstr ""
"O retorno de chamadas C :mod:`sqlite3` agora usam exceções que não podem ser "
"levantadas se os rastreamentos de retorno de chamada estiverem habilitados. "
"Os usuários agora podem registrar um :func:`unraisable hook handler <sys."
"unraisablehook>` para melhorar sua experiência de depuração. (Contribuição "
"de Erlend E. Aasland em :issue:`45828`.)"

#: ../../whatsnew/3.11.rst:1004
msgid ""
"Fetch across rollback no longer raises :exc:`~sqlite3.InterfaceError`. "
"Instead we leave it to the SQLite library to handle these cases. "
"(Contributed by Erlend E. Aasland in :issue:`44092`.)"
msgstr ""
"A busca por rollback não levanta mais :exc:`~sqlite3.InterfaceError`. Em vez "
"disso, deixamos para a biblioteca SQLite lidar com esses casos. "
"(Contribuição de Erlend E. Aasland em :issue:`44092`.)"

#: ../../whatsnew/3.11.rst:1008
msgid ""
"Add :meth:`~sqlite3.Connection.serialize` and :meth:`~sqlite3.Connection."
"deserialize` to :class:`sqlite3.Connection` for serializing and "
"deserializing databases. (Contributed by Erlend E. Aasland in :issue:"
"`41930`.)"
msgstr ""
"Adiciona :meth:`~sqlite3.Connection.serialize` e :meth:`~sqlite3.Connection."
"deserialize` a :class:`sqlite3.Connection` para serializar e desserializar "
"bancos de dados. (Contribuição de Erlend E. Aasland em :issue:`41930`.)"

#: ../../whatsnew/3.11.rst:1013
msgid ""
"Add :meth:`~sqlite3.Connection.create_window_function` to :class:`sqlite3."
"Connection` for creating aggregate window functions. (Contributed by Erlend "
"E. Aasland in :issue:`34916`.)"
msgstr ""
"Adiciona :meth:`~sqlite3.Connection.create_window_function` a :class:"
"`sqlite3.Connection` para criar funções de janela agregadas. (Contribuição "
"de Erlend E. Aasland em :issue:`34916`.)"

#: ../../whatsnew/3.11.rst:1017
msgid ""
"Add :meth:`~sqlite3.Connection.blobopen` to :class:`sqlite3.Connection`. :"
"class:`sqlite3.Blob` allows incremental I/O operations on blobs. "
"(Contributed by Aviv Palivoda and Erlend E. Aasland in :issue:`24905`.)"
msgstr ""
"Adiciona :meth:`~sqlite3.Connection.blobopen` a :class:`sqlite3."
"Connection`. :class:`sqlite3.Blob` permite operações de E/S incrementais em "
"blobs. (Contribuição de Aviv Palivoda e Erlend E. Aasland em :issue:`24905`.)"

#: ../../whatsnew/3.11.rst:1025
msgid "string"
msgstr "string"

#: ../../whatsnew/3.11.rst:1027
msgid ""
"Add :meth:`~string.Template.get_identifiers` and :meth:`~string.Template."
"is_valid` to :class:`string.Template`, which respectively return all valid "
"placeholders, and whether any invalid placeholders are present. (Contributed "
"by Ben Kehoe in :gh:`90465`.)"
msgstr ""
"Adiciona :meth:`~string.Template.get_identifiers` e :meth:`~string.Template."
"is_valid` a :class:`string.Template`, que respectivamente retornam todos os "
"marcadores de posição válidos e se quaisquer marcadores de posição inválidos "
"estão presentes. (Contribuição de Ben Kehoe em :gh:`90465`.)"

#: ../../whatsnew/3.11.rst:1037
msgid "sys"
msgstr "sys"

#: ../../whatsnew/3.11.rst:1039
msgid ""
":func:`sys.exc_info` now derives the ``type`` and ``traceback`` fields from "
"the ``value`` (the exception instance), so when an exception is modified "
"while it is being handled, the changes are reflected in the results of "
"subsequent calls to :func:`!exc_info`. (Contributed by Irit Katriel in :"
"issue:`45711`.)"
msgstr ""
":func:`sys.exc_info` agora deriva os campos ``type`` e ``traceback`` do "
"``value`` (a instância de exceção) de forma que quanto uma exceção é "
"modificada enquanto está sendo tratada, são refletidos nos resultados de "
"chamadas subsequentes para :func:`!exc_info`. (Contribuição de Irit Katriel "
"em :issue:`45711`.)"

#: ../../whatsnew/3.11.rst:1045
msgid ""
"Add :func:`sys.exception` which returns the active exception instance "
"(equivalent to ``sys.exc_info()[1]``). (Contributed by Irit Katriel in :"
"issue:`46328`.)"
msgstr ""
"Adiciona :func:`sys.exception` que retorna a instância de exceção ativa "
"(equivalente a ``sys.exc_info()[1]``). (Contribuição de Irit Katriel em :"
"issue:`46328`.)"

#: ../../whatsnew/3.11.rst:1049
msgid ""
"Add the :data:`sys.flags.safe_path <sys.flags>` flag. (Contributed by Victor "
"Stinner in :gh:`57684`.)"
msgstr ""
"Adiciona o sinalizador :data:`sys.flags.safe_path <sys.flags>`. "
"(Contribuição de Victor Stinner em :gh:`57684`.)"

#: ../../whatsnew/3.11.rst:1056
msgid "sysconfig"
msgstr "sysconfig"

#: ../../whatsnew/3.11.rst:1058
msgid ""
"Three new :ref:`installation schemes <installation_paths>` (*posix_venv*, "
"*nt_venv* and *venv*) were added and are used when Python creates new "
"virtual environments or when it is running from a virtual environment. The "
"first two schemes (*posix_venv* and *nt_venv*) are OS-specific for non-"
"Windows and Windows, the *venv* is essentially an alias to one of them "
"according to the OS Python runs on. This is useful for downstream "
"distributors who modify :func:`sysconfig.get_preferred_scheme`. Third party "
"code that creates new virtual environments should use the new *venv* "
"installation scheme to determine the paths, as does :mod:`venv`. "
"(Contributed by Miro Hrončok in :issue:`45413`.)"
msgstr ""
"Três novos :ref:`esquemas de instalação <installation_paths>` (*posix_venv*, "
"*nt_venv* e *venv*) foram adicionados e são usados quando o Python cria "
"novos ambientes virtuais ou quando está sendo executado a partir de um "
"ambiente virtual. Os dois primeiros esquemas (*posix_venv* e *nt_venv*) são "
"específicos do SO para não Windows e Windows, o *venv* é essencialmente um "
"apelido para um deles de acordo com o SO em que o Python é executado. Isso é "
"útil para distribuidores downstream que modificam :func:`sysconfig."
"get_preferred_scheme`. O código de terceiros que cria novos ambientes "
"virtuais deve usar o novo esquema de instalação *venv* para determinar os "
"caminhos, assim como :mod:`venv`. (Contribuição de Miro Hrončok em :issue:"
"`45413`.)"

#: ../../whatsnew/3.11.rst:1075
msgid "tempfile"
msgstr "tempfile"

#: ../../whatsnew/3.11.rst:1077
msgid ""
":class:`~tempfile.SpooledTemporaryFile` objects now fully implement the "
"methods of :class:`io.BufferedIOBase` or :class:`io.TextIOBase` (depending "
"on file mode). This lets them work correctly with APIs that expect file-like "
"objects, such as compression modules. (Contributed by Carey Metcalfe in :gh:"
"`70363`.)"
msgstr ""
"Objetos :class:`~tempfile.SpooledTemporaryFile` agora implementam totalmente "
"os métodos de :class:`io.BufferedIOBase` ou :class:`io.TextIOBase` "
"(dependendo do modo de arquivo). Isso permite que eles funcionem "
"corretamente com APIs que esperam objetos semelhantes a arquivos, como "
"módulos de compactação. (Contribuição de Carey Metcalfe em :gh:`70363`.)"

#: ../../whatsnew/3.11.rst:1084
msgid ""
"As of 3.11.10 on Windows, the default mode ``0o700`` used by :func:`tempfile."
"mkdtemp` now limits access to the new directory due to changes to :func:`os."
"mkdir`. This is a mitigation for CVE-2024-4030. (Contributed by Steve Dower "
"in :gh:`118486`.)"
msgstr ""

#: ../../whatsnew/3.11.rst:1093
msgid "threading"
msgstr "threading"

#: ../../whatsnew/3.11.rst:1095
msgid ""
"On Unix, if the ``sem_clockwait()`` function is available in the C library "
"(glibc 2.30 and newer), the :meth:`threading.Lock.acquire` method now uses "
"the monotonic clock (:const:`time.CLOCK_MONOTONIC`) for the timeout, rather "
"than using the system clock (:const:`time.CLOCK_REALTIME`), to not be "
"affected by system clock changes. (Contributed by Victor Stinner in :issue:"
"`41710`.)"
msgstr ""
"No Unix, se a função ``sem_clockwait()`` estiver disponível na biblioteca C "
"(glibc 2.30 e mais recente), o método :meth:`threading.Lock.acquire` agora "
"usa o relógio monotônico (:const:`time.CLOCK_MONOTONIC`) para o tempo "
"limite, em vez de usar o relógio do sistema (:const:`time.CLOCK_REALTIME`), "
"para não ser afetado pelas alterações do relógio do sistema. (Contribuição "
"de Victor Stinner em :issue:`41710`.)"

#: ../../whatsnew/3.11.rst:1106
msgid "time"
msgstr "time"

#: ../../whatsnew/3.11.rst:1108
msgid ""
"On Unix, :func:`time.sleep` now uses the ``clock_nanosleep()`` or "
"``nanosleep()`` function, if available, which has a resolution of 1 "
"nanosecond (10\\ :sup:`-9` seconds), rather than using ``select()`` which "
"has a resolution of 1 microsecond (10\\ :sup:`-6` seconds). (Contributed by "
"Benjamin Szőke and Victor Stinner in :issue:`21302`.)"
msgstr ""
"No Unix, :func:`time.sleep` agora usa a função ``clock_nanosleep()`` ou "
"``nanosleep()``, se disponível, que tem uma resolução de 1 nanossegundo "
"(10\\ :sup:`-9` segundos), em vez de usar ``select()`` que tem uma resolução "
"de 1 microssegundo (10\\ :sup:`-6` segundos). (Contribuição de Benjamin "
"Szőke e Victor Stinner em :issue:`21302`.)"

#: ../../whatsnew/3.11.rst:1114
msgid ""
"On Windows 8.1 and newer, :func:`time.sleep` now uses a waitable timer based "
"on `high-resolution timers <https://docs.microsoft.com/en-us/windows-"
"hardware/drivers/kernel/high-resolution-timers>`_ which has a resolution of "
"100 nanoseconds (10\\ :sup:`-7` seconds). Previously, it had a resolution of "
"1 millisecond (10\\ :sup:`-3` seconds). (Contributed by Benjamin Szőke, "
"Donghee Na, Eryk Sun and Victor Stinner in :issue:`21302` and :issue:"
"`45429`.)"
msgstr ""
"No Windows 8.1 e mais recente, :func:`time.sleep` agora usa um temporizador "
"aguardável baseado em `temporizadores de alta resolução <https://docs."
"microsoft.com/en-us/windows-hardware/drivers/kernel/high-resolution-"
"timers>`_ que tem uma resolução de 100 nanossegundos (10\\ :sup:`-7` "
"segundos). Anteriormente, tinha uma resolução de 1 milissegundo (10\\ :sup:"
"`-3` segundos). (Contribuição de Benjamin Szőke, Donghee Na, Eryk Sun e "
"Victor Stinner em :issue:`21302` e :issue:`45429`.)"

#: ../../whatsnew/3.11.rst:1125
msgid "tkinter"
msgstr "tkinter"

#: ../../whatsnew/3.11.rst:1127
msgid ""
"Added method ``info_patchlevel()`` which returns the exact version of the "
"Tcl library as a named tuple similar to :data:`sys.version_info`. "
"(Contributed by Serhiy Storchaka in :gh:`91827`.)"
msgstr ""
"Adicionado o método ``info_patchlevel()`` que retorna a versão exata da "
"biblioteca Tcl como uma tupla nomeada semelhante a :data:`sys.version_info`. "
"(Contribuição de Serhiy Storchaka em :gh:`91827`.)"

#: ../../whatsnew/3.11.rst:1135
msgid "traceback"
msgstr "traceback"

#: ../../whatsnew/3.11.rst:1137
msgid ""
"Add :func:`traceback.StackSummary.format_frame_summary` to allow users to "
"override which frames appear in the traceback, and how they are formatted. "
"(Contributed by Ammar Askar in :issue:`44569`.)"
msgstr ""
"Adiciona :func:`traceback.StackSummary.format_frame_summary` para permitir "
"que os usuários substituam quais quadros aparecem no traceback e como eles "
"são formatados. (Contribuição de Ammar Askar em :issue:`44569`.)"

#: ../../whatsnew/3.11.rst:1142
msgid ""
"Add :func:`traceback.TracebackException.print`, which prints the formatted :"
"exc:`~traceback.TracebackException` instance to a file. (Contributed by Irit "
"Katriel in :issue:`33809`.)"
msgstr ""
"Adiciona :func:`traceback.TracebackException.print`, que imprime a instância "
"formatada :exc:`~traceback.TracebackException` em um arquivo. (Contribuição "
"de Irit Katriel em :issue:`33809`.)"

#: ../../whatsnew/3.11.rst:1150
msgid "typing"
msgstr "typing"

#: ../../whatsnew/3.11.rst:1152
msgid "For major changes, see :ref:`new-feat-related-type-hints-311`."
msgstr ""
"Para alterações principais, veja :ref:`new-feat-related-type-hints-311`."

#: ../../whatsnew/3.11.rst:1154
msgid ""
"Add :func:`typing.assert_never` and :class:`typing.Never`. :func:`typing."
"assert_never` is useful for asking a type checker to confirm that a line of "
"code is not reachable. At runtime, it raises an :exc:`AssertionError`. "
"(Contributed by Jelle Zijlstra in :gh:`90633`.)"
msgstr ""
"Adiciona :func:`typing.assert_never` e :class:`typing.Never`. :func:`typing."
"assert_never` é útil para pedir a um verificador de tipo para confirmar que "
"uma linha de código não está acessível. Em tempo de execução, ele levanta "
"uma exceção :exc:`AssertionError`. (Contribuição de Jelle Zijlstra em :gh:"
"`90633`.)"

#: ../../whatsnew/3.11.rst:1160
msgid ""
"Add :func:`typing.reveal_type`. This is useful for asking a type checker "
"what type it has inferred for a given expression. At runtime it prints the "
"type of the received value. (Contributed by Jelle Zijlstra in :gh:`90572`.)"
msgstr ""
"Adiciona :func:`typing.reveal_type`. Isso é útil para perguntar a um "
"verificador de tipo qual tipo ele inferiu para uma determinada expressão. Em "
"tempo de execução imprime o tipo do valor recebido. (Contribuição de Jelle "
"Zijlstra em :gh:`90572`.)"

#: ../../whatsnew/3.11.rst:1165
msgid ""
"Add :func:`typing.assert_type`. This is useful for asking a type checker to "
"confirm that the type it has inferred for a given expression matches the "
"given type. At runtime it simply returns the received value. (Contributed by "
"Jelle Zijlstra in :gh:`90638`.)"
msgstr ""
"Adicione :func:`typing.assert_type`. Isso é útil para solicitar a um "
"verificador de tipos que confirme se o tipo que ele inferiu para uma "
"determinada expressão corresponde ao tipo fornecido. Em tempo de execução "
"ele simplesmente retorna o valor recebido. (Contribuição de Jelle Zijlstra "
"em :gh:`90638`.)"

#: ../../whatsnew/3.11.rst:1170
msgid ""
":data:`typing.TypedDict` types can now be generic. (Contributed by Samodya "
"Abeysiriwardane in :gh:`89026`.)"
msgstr ""
"Os tipos :data:`typing.TypedDict` agora podem ser genéricos. (Contribuição "
"de Samodya Abeysiriwardane em :gh:`89026`.)"

#: ../../whatsnew/3.11.rst:1173
msgid ""
":class:`~typing.NamedTuple` types can now be generic. (Contributed by Serhiy "
"Storchaka in :issue:`43923`.)"
msgstr ""
"Os tipos :class:`~typing.NamedTuple` agora podem ser genéricos. "
"(Contribuição de Serhiy Storchaka em :issue:`43923`.)"

#: ../../whatsnew/3.11.rst:1176
msgid ""
"Allow subclassing of :class:`typing.Any`. This is useful for avoiding type "
"checker errors related to highly dynamic class, such as mocks. (Contributed "
"by Shantanu Jain in :gh:`91154`.)"
msgstr ""
"Permite criar subclasse de :class:`typing.Any`. Isso é útil para evitar "
"erros de verificador de tipo relacionados a classes altamente dinâmicas, "
"como mocks. (Contribuição de Shantanu Jain em :gh:`91154`.)"

#: ../../whatsnew/3.11.rst:1180
msgid ""
"The :func:`typing.final` decorator now sets the ``__final__`` attributed on "
"the decorated object. (Contributed by Jelle Zijlstra in :gh:`90500`.)"
msgstr ""
"O decorador :func:`typing.final` agora define o ``__final__`` atribuído no "
"objeto decorado. (Contribuição de Jelle Zijlstra em :gh:`90500`.)"

#: ../../whatsnew/3.11.rst:1184
msgid ""
"The :func:`typing.get_overloads` function can be used for introspecting the "
"overloads of a function. :func:`typing.clear_overloads` can be used to clear "
"all registered overloads of a function. (Contributed by Jelle Zijlstra in :"
"gh:`89263`.)"
msgstr ""
"A função :func:`typing.get_overloads` pode ser usada para introspecção das "
"sobrecargas de uma função. :func:`typing.clear_overloads` pode ser usado "
"para limpar todas as sobrecargas registradas de uma função. (Contribuição de "
"Jelle Zijlstra em :gh:`89263`.)"

#: ../../whatsnew/3.11.rst:1189
msgid ""
"The :meth:`~object.__init__` method of :class:`~typing.Protocol` subclasses "
"is now preserved. (Contributed by Adrian Garcia Badarasco in :gh:`88970`.)"
msgstr ""
"O método :meth:`~object.__init__` das subclasses :class:`~typing.Protocol` "
"agora é preservado. (Contribuição de Adrian Garcia Badarasco em :gh:`88970`.)"

#: ../../whatsnew/3.11.rst:1192
msgid ""
"The representation of empty tuple types (``Tuple[()]``) is simplified. This "
"affects introspection, e.g. ``get_args(Tuple[()])`` now evaluates to ``()`` "
"instead of ``((),)``. (Contributed by Serhiy Storchaka in :gh:`91137`.)"
msgstr ""
"A representação de tipos de tupla vazias (``Tuple[()]``) está simplificada. "
"Isso afeta a introspecção, por exemplo. ``get_args(Tuple[()])`` agora é "
"avaliado como ``()`` em vez de ``((),)``. (Contribuição de Serhiy Storchaka "
"em :gh:`91137`.)"

#: ../../whatsnew/3.11.rst:1197
msgid ""
"Loosen runtime requirements for type annotations by removing the callable "
"check in the private ``typing._type_check`` function. (Contributed by "
"Gregory Beauregard in :gh:`90802`.)"
msgstr ""
"Afrouxa os requisitos de tempo de execução para anotações de tipo removendo "
"a verificação chamável na função privada ``typing._type_check``. "
"(Contribuição de Gregory Beauregard em :gh:`90802`.)"

#: ../../whatsnew/3.11.rst:1201
msgid ""
":func:`typing.get_type_hints` now supports evaluating strings as forward "
"references in :ref:`PEP 585 generic aliases <types-genericalias>`. "
"(Contributed by Niklas Rosenstein in :gh:`85542`.)"
msgstr ""
":func:`typing.get_type_hints` agora tem suporte à avaliação de strings como "
"referências diretas em :ref:`apelidos genéricos da PEP 585 <types-"
"genericalias>`. (Contribuição de Niklas Rosenstein em :gh:`85542`.)"

#: ../../whatsnew/3.11.rst:1205
msgid ""
":func:`typing.get_type_hints` no longer adds :data:`~typing.Optional` to "
"parameters with ``None`` as a default. (Contributed by Nikita Sobolev in :gh:"
"`90353`.)"
msgstr ""
":func:`typing.get_type_hints` não adiciona mais :data:`~typing.Optional` aos "
"parâmetros com ``None`` como padrão. (Contribuição de Nikita Sobolev em :gh:"
"`90353`.)"

#: ../../whatsnew/3.11.rst:1209
msgid ""
":func:`typing.get_type_hints` now supports evaluating bare stringified :data:"
"`~typing.ClassVar` annotations. (Contributed by Gregory Beauregard in :gh:"
"`90711`.)"
msgstr ""
":func:`typing.get_type_hints` agora tem suporte à avaliação de anotações :"
"data:`~typing.ClassVar` de strings simples. (Contribuição de Gregory "
"Beauregard em :gh:`90711`.)"

#: ../../whatsnew/3.11.rst:1213
msgid ""
":func:`typing.no_type_check` no longer modifies external classes and "
"functions. It also now correctly marks classmethods as not to be type "
"checked. (Contributed by Nikita Sobolev in :gh:`90729`.)"
msgstr ""
":func:`typing.no_type_check` não modifica mais classes e funções externas. "
"Agora também marca corretamente os métodos de classe para não serem "
"verificados quanto ao tipo. (Contribuição de Nikita Sobolev em :gh:`90729`.)"

#: ../../whatsnew/3.11.rst:1221
msgid "unicodedata"
msgstr "unicodedata"

#: ../../whatsnew/3.11.rst:1223
msgid ""
"The Unicode database has been updated to version 14.0.0. (Contributed by "
"Benjamin Peterson in :issue:`45190`)."
msgstr ""
"O banco de dados Unicode foi atualizado para a versão 14.0.0. (Contribuição "
"de Benjamin Peterson em :issue:`45190`)."

#: ../../whatsnew/3.11.rst:1230
msgid "unittest"
msgstr "unittest"

#: ../../whatsnew/3.11.rst:1232
msgid ""
"Added methods :meth:`~unittest.TestCase.enterContext` and :meth:`~unittest."
"TestCase.enterClassContext` of class :class:`~unittest.TestCase`, method :"
"meth:`~unittest.IsolatedAsyncioTestCase.enterAsyncContext` of class :class:"
"`~unittest.IsolatedAsyncioTestCase` and function :func:`unittest."
"enterModuleContext`. (Contributed by Serhiy Storchaka in :issue:`45046`.)"
msgstr ""
"Adicionados os métodos :meth:`~unittest.TestCase.enterContext` e :meth:"
"`~unittest.TestCase.enterClassContext` da classe :class:`~unittest."
"TestCase`, método :meth:`~unittest.IsolatedAsyncioTestCase."
"enterAsyncContext` da classe :class:`~unittest.IsolatedAsyncioTestCase` e a "
"função :func:`unittest.enterModuleContext`. (Contribuição de Serhiy "
"Storchaka em :issue:`45046`.)"

#: ../../whatsnew/3.11.rst:1244
msgid "venv"
msgstr "venv"

#: ../../whatsnew/3.11.rst:1246
msgid ""
"When new Python virtual environments are created, the *venv* :ref:`sysconfig "
"installation scheme <installation_paths>` is used to determine the paths "
"inside the environment. When Python runs in a virtual environment, the same "
"installation scheme is the default. That means that downstream distributors "
"can change the default sysconfig install scheme without changing behavior of "
"virtual environments. Third party code that also creates new virtual "
"environments should do the same. (Contributed by Miro Hrončok in :issue:"
"`45413`.)"
msgstr ""
"Quando novos ambientes virtuais Python são criados, o :ref:`esquema de "
"instalação do sysconfig <installation_paths>` do *venv* é usado para "
"determinar os caminhos dentro do ambiente. Quando o Python é executado em um "
"ambiente virtual, o mesmo esquema de instalação é o padrão. Isso significa "
"que os distribuidores downstream podem alterar o esquema de instalação "
"padrão do sysconfig sem alterar o comportamento dos ambientes virtuais. O "
"código de terceiros que também cria novos ambientes virtuais deve fazer o "
"mesmo. (Contribuição de Miro Hrončok em :issue:`45413`.)"

#: ../../whatsnew/3.11.rst:1260
msgid "warnings"
msgstr "avisos"

#: ../../whatsnew/3.11.rst:1262
msgid ""
":func:`warnings.catch_warnings` now accepts arguments for :func:`warnings."
"simplefilter`, providing a more concise way to locally ignore warnings or "
"convert them to errors. (Contributed by Zac Hatfield-Dodds in :issue:"
"`47074`.)"
msgstr ""
":func:`warnings.catch_warnings` agora aceita argumentos para :func:`warnings."
"simplefilter`, fornecendo uma maneira mais concisa de ignorar localmente "
"avisos ou convertê-los em erros. (Contribuição de Zac Hatfield-Dodds em :"
"issue:`47074`.)"

#: ../../whatsnew/3.11.rst:1270
msgid "zipfile"
msgstr "zipfile"

#: ../../whatsnew/3.11.rst:1272
msgid ""
"Added support for specifying member name encoding for reading metadata in a :"
"class:`~zipfile.ZipFile`'s directory and file headers. (Contributed by "
"Stephen J. Turnbull and Serhiy Storchaka in :issue:`28080`.)"
msgstr ""
"Adicionado suporte para especificar a codificação de nome de membro para "
"leitura de metadados em um diretório :class:`~zipfile.ZipFile` e cabeçalhos "
"de arquivo. (Contribuição de Stephen J. Turnbull e Serhiy Storchaka em :"
"issue:`28080`.)"

#: ../../whatsnew/3.11.rst:1276
msgid ""
"Added :meth:`ZipFile.mkdir() <zipfile.ZipFile.mkdir>` for creating new "
"directories inside ZIP archives. (Contributed by Sam Ezeh in :gh:`49083`.)"
msgstr ""
"Adicionado :meth:`ZipFile.mkdir() <zipfile.ZipFile.mkdir>` para criar novos "
"diretórios dentro de arquivos ZIP. (Contribuição de Sam Ezeh em :gh:`49083`.)"

#: ../../whatsnew/3.11.rst:1280
msgid ""
"Added :attr:`~zipfile.Path.stem`, :attr:`~zipfile.Path.suffix` and :attr:"
"`~zipfile.Path.suffixes` to :class:`zipfile.Path`. (Contributed by Miguel "
"Brito in :gh:`88261`.)"
msgstr ""
"Adicionado :attr:`~zipfile.Path.stem`, :attr:`~zipfile.Path.suffix` e :attr:"
"`~zipfile.Path.suffixes` a :class:`zipfile.Path`. (Contribuição de Miguel "
"Brito em :gh:`88261`.)"

#: ../../whatsnew/3.11.rst:1288
msgid "Optimizations"
msgstr "Otimizações"

#: ../../whatsnew/3.11.rst:1290
msgid ""
"This section covers specific optimizations independent of the :ref:"
"`whatsnew311-faster-cpython` project, which is covered in its own section."
msgstr ""
"Esta seção cobre otimizações específicas independentes do projeto :ref:"
"`whatsnew311-faster-cpython`, que é abordado em sua própria seção."

#: ../../whatsnew/3.11.rst:1293
msgid ""
"The compiler now optimizes simple :ref:`printf-style % formatting <old-"
"string-formatting>` on string literals containing only the format codes "
"``%s``, ``%r`` and ``%a`` and makes it as fast as a corresponding :term:`f-"
"string` expression. (Contributed by Serhiy Storchaka in :issue:`28307`.)"
msgstr ""
"O compilador agora otimiza a :ref:`formatação simples de % no estilo printf "
"<old-string-formatting>` em literais de string contendo apenas os códigos de "
"formato ``%s``, ``%r`` e ``%a`` e a torna tão rápida quanto uma expressão :"
"term:`f-string` correspondente. (Contribuição de Serhiy Storchaka em :issue:"
"`28307`.)"

#: ../../whatsnew/3.11.rst:1299
msgid ""
"Integer division (``//``) is better tuned for optimization by compilers. It "
"is now around 20% faster on x86-64 when dividing an :class:`int` by a value "
"smaller than ``2**30``. (Contributed by Gregory P. Smith and Tim Peters in :"
"gh:`90564`.)"
msgstr ""
"A divisão inteira (``//``) é melhor ajustada para otimização por "
"compiladores. Agora é cerca de 20% mais rápido em x86-64 ao dividir um :"
"class:`int` por um valor menor que ``2**30``. (Contribuição de Gregory P. "
"Smith e Tim Peters em :gh:`90564`.)"

#: ../../whatsnew/3.11.rst:1304
msgid ""
":func:`sum` is now nearly 30% faster for integers smaller than ``2**30``. "
"(Contributed by Stefan Behnel in :gh:`68264`.)"
msgstr ""
":func:`sum` agora é quase 30% mais rápida para inteiros menores que "
"``2**30``. (Contribuição de Stefan Behnel em :gh:`68264`.)"

#: ../../whatsnew/3.11.rst:1307
msgid ""
"Resizing lists is streamlined for the common case, speeding up :meth:`list."
"append` by ≈15% and simple :term:`list comprehension`\\s by up to 20-30% "
"(Contributed by Dennis Sweeney in :gh:`91165`.)"
msgstr ""
"O redimensionamento de listas é simplificado para o caso comum, acelerando :"
"meth:`list.append` em ≈15% e :term:`compreensão de listas <compreensão de "
"lista>` em até 20-30% (Contribuição de Dennis Sweeney em :gh: `91165`.)"

#: ../../whatsnew/3.11.rst:1312
msgid ""
"Dictionaries don't store hash values when all keys are Unicode objects, "
"decreasing :class:`dict` size. For example, ``sys.getsizeof(dict."
"fromkeys(\"abcdefg\"))`` is reduced from 352 bytes to 272 bytes (23% "
"smaller) on 64-bit platforms. (Contributed by Inada Naoki in :issue:`46845`.)"
msgstr ""
"Dicionários não armazenam valores de hash quando todas as chaves são objetos "
"Unicode, diminuindo o tamanho de :class:`dict`. Por exemplo, ``sys."
"getsizeof(dict.fromkeys(\"abcdefg\"))`` foi reduzido de 352 bytes para 272 "
"bytes (23% menor) em plataformas de 64 bits. (Contribuição de Inada Naoki "
"em :issue:`46845`.)"

#: ../../whatsnew/3.11.rst:1318
msgid ""
"Using :class:`asyncio.DatagramProtocol` is now orders of magnitude faster "
"when transferring large files over UDP, with speeds over 100 times higher "
"for a ≈60 MiB file. (Contributed by msoxzw in :gh:`91487`.)"
msgstr ""
"Usar :class:`asyncio.DatagramProtocol` agora é muito mais rápido ao "
"transferir arquivos grandes por UDP, com velocidades mais de 100 vezes "
"maiores para um arquivo de ≈60 MiB. (Contribuição de msoxzw em :gh:`91487`.)"

#: ../../whatsnew/3.11.rst:1323
msgid ""
":mod:`math` functions :func:`~math.comb` and :func:`~math.perm` are now ≈10 "
"times faster for large arguments (with a larger speedup for larger *k*). "
"(Contributed by Serhiy Storchaka in :issue:`37295`.)"
msgstr ""
"As funções :func:`~math.comb` e :func:`~math.perm` de :mod:`math` são agora "
"≈10 vezes mais rápidas para argumentos grandes (com uma aceleração maior "
"para *k* maiores). (Contribuição de Serhiy Storchaka em :issue:`37295`.)"

#: ../../whatsnew/3.11.rst:1327
msgid ""
"The :mod:`statistics` functions :func:`~statistics.mean`, :func:`~statistics."
"variance` and :func:`~statistics.stdev` now consume iterators in one pass "
"rather than converting them to a :class:`list` first. This is twice as fast "
"and can save substantial memory. (Contributed by Raymond Hettinger in :gh:"
"`90415`.)"
msgstr ""
"As funções :func:`~statistics.mean`, :func:`~statistics.variance` e :func:"
"`~statistics.stdev` do :mod:`statistics` agora consomem iteradores em uma "
"passagem em vez de convertê-los em uma :class:`list` primeiro. Isso é duas "
"vezes mais rápido e pode economizar memória de forma substancial. "
"(Contribuição de Raymond Hettinger em :gh:`90415`.)"

#: ../../whatsnew/3.11.rst:1333
msgid ""
":func:`unicodedata.normalize` now normalizes pure-ASCII strings in constant "
"time. (Contributed by Donghee Na in :issue:`44987`.)"
msgstr ""
":func:`unicodedata.normalize` agora normaliza strings de puro ASCII em tempo "
"constante. (Contribuição de Dong-hee Na em :issue:`44987`.)"

#: ../../whatsnew/3.11.rst:1341
msgid "Faster CPython"
msgstr "CPython mais rápido"

#: ../../whatsnew/3.11.rst:1343
msgid ""
"CPython 3.11 is an average of `25% faster <https://github.com/faster-cpython/"
"ideas#published-results>`_ than CPython 3.10 as measured with the "
"`pyperformance <https://github.com/python/pyperformance>`_ benchmark suite, "
"when compiled with GCC on Ubuntu Linux. Depending on your workload, the "
"overall speedup could be 10-60%."
msgstr ""
"O CPython 3.11 é em média `25% mais rápido <https://github.com/faster-"
"cpython/ideas#published-results>`_ que o CPython 3.10 medido com o conjunto "
"de ferramentas de benchmarks `pyperformance <https://github.com/python/"
"pyperformance>`_, quando compilado com GCC no Ubuntu Linux. Dependendo da "
"sua carga de trabalho, a aceleração geral pode ser de 10 a 60%."

#: ../../whatsnew/3.11.rst:1350
msgid ""
"This project focuses on two major areas in Python: :ref:`whatsnew311-faster-"
"startup` and :ref:`whatsnew311-faster-runtime`. Optimizations not covered by "
"this project are listed separately under :ref:`whatsnew311-optimizations`."
msgstr ""
"Este projeto se concentra em duas áreas principais em Python: :ref:"
"`whatsnew311-faster-startup` e :ref:`whatsnew311-faster-runtime`. "
"Otimizações que não são abordadas neste projeto estão listadas em :ref:"
"`whatsnew311-optimizations`."

#: ../../whatsnew/3.11.rst:1359
msgid "Faster Startup"
msgstr "Inicialização mais rápida"

#: ../../whatsnew/3.11.rst:1364
msgid "Frozen imports / Static code objects"
msgstr "Importações congeladas/objetos de código estático"

#: ../../whatsnew/3.11.rst:1366
msgid ""
"Python caches :term:`bytecode` in the :ref:`__pycache__ <tut-pycache>` "
"directory to speed up module loading."
msgstr ""
"O Python armazena o :term:`bytecode` no diretório :ref:`__pycache__ <tut-"
"pycache>` para acelerar o carregamento do módulo."

#: ../../whatsnew/3.11.rst:1369
msgid "Previously in 3.10, Python module execution looked like this:"
msgstr "Anteriormente na versão 3.10, a execução do módulo Python era assim:"

#: ../../whatsnew/3.11.rst:1375
msgid ""
"In Python 3.11, the core modules essential for Python startup are "
"\"frozen\". This means that their :ref:`codeobjects` (and bytecode) are "
"statically allocated by the interpreter. This reduces the steps in module "
"execution process to:"
msgstr ""
"No Python 3.11, os principais módulos essenciais para a inicialização do "
"Python são \"congelados\". Isso significa que seus :ref:`codeobjects` (e "
"bytecode) são alocados estaticamente pelo interpretador. Isso reduz as "
"etapas no processo de execução do módulo para isso:"

#: ../../whatsnew/3.11.rst:1384
msgid ""
"Interpreter startup is now 10-15% faster in Python 3.11. This has a big "
"impact for short-running programs using Python."
msgstr ""
"A inicialização do interpretador agora é 10-15% mais rápida no Python 3.11. "
"Isso tem um grande impacto para programas de execução curta usando Python."

#: ../../whatsnew/3.11.rst:1387
msgid ""
"(Contributed by Eric Snow, Guido van Rossum and Kumar Aditya in many issues.)"
msgstr ""
"(Contribuição de Eric Snow, Guido van Rossum e Kumar Aditya em vários "
"issues.)"

#: ../../whatsnew/3.11.rst:1393
msgid "Faster Runtime"
msgstr "Tempo de execução mais rápido"

#: ../../whatsnew/3.11.rst:1398
msgid "Cheaper, lazy Python frames"
msgstr "Quadros Python menos custosos e mais preguiçosos"

#: ../../whatsnew/3.11.rst:1400
msgid ""
"Python frames, holding execution information, are created whenever Python "
"calls a Python function. The following are new frame optimizations:"
msgstr ""
"Os quadros do Python, contendo informações de execução, são criados sempre "
"que o Python chama uma função do Python. A seguir estão as novas otimizações "
"de quadro:"

#: ../../whatsnew/3.11.rst:1404
msgid "Streamlined the frame creation process."
msgstr "Simplificado o processo de criação do quadro."

#: ../../whatsnew/3.11.rst:1405
msgid ""
"Avoided memory allocation by generously re-using frame space on the C stack."
msgstr ""
"Alocação de memória evitada reutilizando generosamente o espaço do quadro na "
"pilha C."

#: ../../whatsnew/3.11.rst:1406
msgid ""
"Streamlined the internal frame struct to contain only essential information. "
"Frames previously held extra debugging and memory management information."
msgstr ""
"Simplificada a estrutura interna do quadro para conter apenas as informações "
"essenciais. Os quadros anteriormente continham informações extras de "
"depuração e gerenciamento de memória."

#: ../../whatsnew/3.11.rst:1409
msgid ""
"Old-style :ref:`frame objects <frame-objects>` are now created only when "
"requested by debuggers or by Python introspection functions such as :func:"
"`sys._getframe` and :func:`inspect.currentframe`. For most user code, no "
"frame objects are created at all. As a result, nearly all Python functions "
"calls have sped up significantly. We measured a 3-7% speedup in "
"pyperformance."
msgstr ""
"Os antigos :ref:`objetos quadros <frame-objects>` agora são criados apenas "
"quando solicitados por depuradores ou por funções de introspecção do Python, "
"como :func:`sys._getframe` e :func:`inspect.currentframe`. Para a maioria "
"dos códigos de usuário, nenhum objeto quadro é criado. Como resultado, quase "
"todas as chamadas de funções do Python aceleraram significativamente. "
"Medimos uma aceleração de 3 a 7% no desempenho do py."

#: ../../whatsnew/3.11.rst:1416
msgid "(Contributed by Mark Shannon in :issue:`44590`.)"
msgstr "(Contribuição de Mark Shannon em :issue:`44590`.)"

#: ../../whatsnew/3.11.rst:1423
msgid "Inlined Python function calls"
msgstr "Chamadas de função Python em linha"

#: ../../whatsnew/3.11.rst:1425
msgid ""
"During a Python function call, Python will call an evaluating C function to "
"interpret that function's code. This effectively limits pure Python "
"recursion to what's safe for the C stack."
msgstr ""
"Durante a chamada de uma função Python, o Python chamará uma função C de "
"avaliação para interpretar o código dessa função. Isso efetivamente limita a "
"recursão Python pura ao que é seguro para a pilha C."

#: ../../whatsnew/3.11.rst:1429
msgid ""
"In 3.11, when CPython detects Python code calling another Python function, "
"it sets up a new frame, and \"jumps\" to the new code inside the new frame. "
"This avoids calling the C interpreting function altogether."
msgstr ""
"No 3.11, quando o CPython detecta o código Python chamando outra função "
"Python, ele configura um novo quadro e \"pula\" para o novo código dentro do "
"novo quadro. Isso evita chamar a função de interpretação C completamente."

#: ../../whatsnew/3.11.rst:1433
msgid ""
"Most Python function calls now consume no C stack space, speeding them up. "
"In simple recursive functions like fibonacci or factorial, we observed a "
"1.7x speedup. This also means recursive functions can recurse significantly "
"deeper (if the user increases the recursion limit with :func:`sys."
"setrecursionlimit`). We measured a 1-3% improvement in pyperformance."
msgstr ""
"A maioria das chamadas de função do Python agora não consome espaço de pilha "
"C, acelerando-as. Em funções recursivas simples como fibonacci ou fatorial, "
"observamos um aumento de velocidade de 1,7x. Isso também significa que as "
"funções recursivas podem recursar significativamente mais profundamente (se "
"o usuário aumentar o limite de recursão com :func:`sys.setrecursionlimit`). "
"Medimos uma melhoria de 1 a 3% no desempenho do py."

#: ../../whatsnew/3.11.rst:1440
msgid "(Contributed by Pablo Galindo and Mark Shannon in :issue:`45256`.)"
msgstr "(Contribuição de Pablo Galindo e Mark Shannon em :issue:`45256`.)"

#: ../../whatsnew/3.11.rst:1446
msgid "PEP 659: Specializing Adaptive Interpreter"
msgstr "PEP 659: Interpretador adaptativo especializado"

#: ../../whatsnew/3.11.rst:1448
msgid ""
":pep:`659` is one of the key parts of the Faster CPython project. The "
"general idea is that while Python is a dynamic language, most code has "
"regions where objects and types rarely change. This concept is known as "
"*type stability*."
msgstr ""
":pep:`659` é uma das partes principais do projeto Faster CPython. A ideia "
"geral é que, embora o Python seja uma linguagem dinâmica, a maior parte do "
"código possui regiões onde objetos e tipos raramente mudam. Este conceito é "
"conhecido como *estabilidade de tipo*."

#: ../../whatsnew/3.11.rst:1452
msgid ""
"At runtime, Python will try to look for common patterns and type stability "
"in the executing code. Python will then replace the current operation with a "
"more specialized one. This specialized operation uses fast paths available "
"only to those use cases/types, which generally outperform their generic "
"counterparts. This also brings in another concept called *inline caching*, "
"where Python caches the results of expensive operations directly in the :"
"term:`bytecode`."
msgstr ""
"Em tempo de execução, o Python tentará procurar padrões comuns e "
"estabilidade de tipo no código em execução. O Python substituirá a operação "
"atual por uma mais especializada. Essa operação especializada usa caminhos "
"rápidos disponíveis apenas para esses casos/tipos de uso, que geralmente "
"superam suas contrapartes genéricas. Isso também traz outro conceito chamado "
"*cache inline*, onde o Python armazena em cache os resultados de operações "
"caras diretamente no :term:`bytecode`."

#: ../../whatsnew/3.11.rst:1460
msgid ""
"The specializer will also combine certain common instruction pairs into one "
"superinstruction, reducing the overhead during execution."
msgstr ""
"O especializador também combinará certos pares de instruções comuns em uma "
"superinstrução, reduzindo a sobrecarga durante a execução."

#: ../../whatsnew/3.11.rst:1463
msgid ""
"Python will only specialize when it sees code that is \"hot\" (executed "
"multiple times). This prevents Python from wasting time on run-once code. "
"Python can also de-specialize when code is too dynamic or when the use "
"changes. Specialization is attempted periodically, and specialization "
"attempts are not too expensive, allowing specialization to adapt to new "
"circumstances."
msgstr ""
"O Python só se especializará quando vir um código \"quente\" (executado "
"várias vezes). Isso evita que o Python perca tempo com código de execução "
"única. O Python também pode se especializar quando o código é muito dinâmico "
"ou quando o uso muda. A especialização é tentada periodicamente e as "
"tentativas de especialização não são muito caras, permitindo que a "
"especialização se adapte às novas circunstâncias."

#: ../../whatsnew/3.11.rst:1470
msgid ""
"(PEP written by Mark Shannon, with ideas inspired by Stefan Brunthaler. See :"
"pep:`659` for more information. Implementation by Mark Shannon and Brandt "
"Bucher, with additional help from Irit Katriel and Dennis Sweeney.)"
msgstr ""
"(PEP escrita por Mark Shannon, com ideias inspiradas por Stefan Brunthaler. "
"Veja :pep:`659` para mais informações. Implementação por Mark Shannon e "
"Brandt Bucher, com ajuda adicional de Irit Katriel e Dennis Sweeney.)"

#: ../../whatsnew/3.11.rst:1478
msgid "Operation"
msgstr "Operação"

#: ../../whatsnew/3.11.rst:1478
msgid "Form"
msgstr "Forma"

#: ../../whatsnew/3.11.rst:1478
msgid "Specialization"
msgstr "Especialização"

#: ../../whatsnew/3.11.rst:1478
msgid "Operation speedup (up to)"
msgstr "Aceleração da operação"

#: ../../whatsnew/3.11.rst:1478
msgid "Contributor(s)"
msgstr "Contribuidor(es)"

#: ../../whatsnew/3.11.rst:1481
msgid "Binary operations"
msgstr "Operações binárias"

#: ../../whatsnew/3.11.rst:1481
msgid "``x + x``"
msgstr "``x + x``"

#: ../../whatsnew/3.11.rst:1483
msgid "``x - x``"
msgstr "``x - x``"

#: ../../whatsnew/3.11.rst:1485
msgid "``x * x``"
msgstr "``x * x``"

#: ../../whatsnew/3.11.rst:1481
msgid ""
"Binary add, multiply and subtract for common types such as :class:`int`, :"
"class:`float` and :class:`str` take custom fast paths for their underlying "
"types."
msgstr ""
"Adicionar, multiplicar e subtrair binários para tipos comuns como :class:"
"`int`, :class:`float` e :class:`str` usam caminhos rápidos personalizados "
"para seus tipos subjacentes."

#: ../../whatsnew/3.11.rst:1481
msgid "10%"
msgstr "10%"

#: ../../whatsnew/3.11.rst:1481
msgid "Mark Shannon, Donghee Na, Brandt Bucher, Dennis Sweeney"
msgstr "Mark Shannon, Donghee Na, Brandt Bucher, Dennis Sweeney"

#: ../../whatsnew/3.11.rst:1487
msgid "Subscript"
msgstr "Subscrição"

#: ../../whatsnew/3.11.rst:1487
msgid "``a[i]``"
msgstr "``a[i]``"

#: ../../whatsnew/3.11.rst:1487
msgid ""
"Subscripting container types such as :class:`list`, :class:`tuple` and :"
"class:`dict` directly index the underlying data structures."
msgstr ""
"Subscrever tipos contêineres como :class:`list`, :class:`tuple` e :class:"
"`dict` indexam diretamente as estruturas de dados subjacentes."

#: ../../whatsnew/3.11.rst:1491
msgid ""
"Subscripting custom :meth:`~object.__getitem__` is also inlined similar to :"
"ref:`inline-calls`."
msgstr ""
"Subscrever :meth:`~object.__getitem__` personalizado também é inserido em "
"linha de forma similar a :ref:`inline-calls`."

#: ../../whatsnew/3.11.rst:1487 ../../whatsnew/3.11.rst:1494
msgid "10-25%"
msgstr "10-25%"

#: ../../whatsnew/3.11.rst:1487
msgid "Irit Katriel, Mark Shannon"
msgstr "Irit Katriel, Mark Shannon"

#: ../../whatsnew/3.11.rst:1494
msgid "Store subscript"
msgstr "Armazenar com subscrição"

#: ../../whatsnew/3.11.rst:1494
msgid "``a[i] = z``"
msgstr "``a[i] = z``"

#: ../../whatsnew/3.11.rst:1494
msgid "Similar to subscripting specialization above."
msgstr "Similar à especialização de subscrição acima."

#: ../../whatsnew/3.11.rst:1494
msgid "Dennis Sweeney"
msgstr "Dennis Sweeney"

#: ../../whatsnew/3.11.rst:1497
msgid "Calls"
msgstr "Chamadas"

#: ../../whatsnew/3.11.rst:1497
msgid "``f(arg)``"
msgstr "``f(arg)``"

#: ../../whatsnew/3.11.rst:1499
msgid "``C(arg)``"
msgstr "``C(arg)``"

#: ../../whatsnew/3.11.rst:1497
msgid ""
"Calls to common builtin (C) functions and types such as :func:`len` and :"
"class:`str` directly call their underlying C version. This avoids going "
"through the internal calling convention."
msgstr ""
"Chamadas para funções e tipos (C) embutidos comuns como :func:`len` e :class:"
"`str` chamam diretamente sua versão C subjacente. Isso evita passar pela "
"convenção de chamada interna."

#: ../../whatsnew/3.11.rst:1497
msgid "20%"
msgstr "20%"

#: ../../whatsnew/3.11.rst:1497
msgid "Mark Shannon, Ken Jin"
msgstr "Mark Shannon, Ken Jin"

#: ../../whatsnew/3.11.rst:1502
msgid "Load global variable"
msgstr "Carregar variável global"

#: ../../whatsnew/3.11.rst:1502
msgid "``print``"
msgstr "``print``"

#: ../../whatsnew/3.11.rst:1504
msgid "``len``"
msgstr "``len``"

#: ../../whatsnew/3.11.rst:1502
msgid ""
"The object's index in the globals/builtins namespace is cached. Loading "
"globals and builtins require zero namespace lookups."
msgstr ""
"O índice do objeto no espaço de nomes globais/embutidas é armazenado em "
"cache. Carregar globais e embutidas requer zero pesquisas de espaço de nomes."

#: ../../whatsnew/3.11.rst:1502
msgid "[#load-global]_"
msgstr "[#load-global]_"

#: ../../whatsnew/3.11.rst:1502 ../../whatsnew/3.11.rst:1506
#: ../../whatsnew/3.11.rst:1515
msgid "Mark Shannon"
msgstr "Mark Shannon"

#: ../../whatsnew/3.11.rst:1506
msgid "Load attribute"
msgstr "Carregar atributo"

#: ../../whatsnew/3.11.rst:1506
msgid "``o.attr``"
msgstr "``o.attr``"

#: ../../whatsnew/3.11.rst:1506
msgid ""
"Similar to loading global variables. The attribute's index inside the class/"
"object's namespace is cached. In most cases, attribute loading will require "
"zero namespace lookups."
msgstr ""
"Semelhante ao carregamento de variáveis globais. O índice do atributo dentro "
"do espaço de nomes da classe/objeto é armazenado em cache. Na maioria dos "
"casos, o carregamento de atributos exigirá zero pesquisas de espaço de nomes."

#: ../../whatsnew/3.11.rst:1506
msgid "[#load-attr]_"
msgstr "[#load-attr]_"

#: ../../whatsnew/3.11.rst:1511
msgid "Load methods for call"
msgstr "Carregar métodos para chamada"

#: ../../whatsnew/3.11.rst:1511
msgid "``o.meth()``"
msgstr "``o.meth()``"

#: ../../whatsnew/3.11.rst:1511
msgid ""
"The actual address of the method is cached. Method loading now has no "
"namespace lookups -- even for classes with long inheritance chains."
msgstr ""
"O endereço real do método é armazenado em cache. O carregamento de método "
"agora não tem pesquisas de espaço de nomes -- mesmo para classes com longas "
"cadeias de herança."

#: ../../whatsnew/3.11.rst:1511
msgid "10-20%"
msgstr "10-20%"

#: ../../whatsnew/3.11.rst:1511
msgid "Ken Jin, Mark Shannon"
msgstr "Ken Jin, Mark Shannon"

#: ../../whatsnew/3.11.rst:1515
msgid "Store attribute"
msgstr "Armazenar atributo"

#: ../../whatsnew/3.11.rst:1515
msgid "``o.attr = z``"
msgstr "``o.attr = z``"

#: ../../whatsnew/3.11.rst:1515
msgid "Similar to load attribute optimization."
msgstr "Semelhante à otimização de carregamento de atributos."

#: ../../whatsnew/3.11.rst:1515
msgid "2% in pyperformance"
msgstr "2% no pyperformance"

#: ../../whatsnew/3.11.rst:1518
msgid "Unpack Sequence"
msgstr "Desempacotar sequência"

#: ../../whatsnew/3.11.rst:1518
msgid "``*seq``"
msgstr "``*seq``"

#: ../../whatsnew/3.11.rst:1518
msgid ""
"Specialized for common containers such as :class:`list` and :class:`tuple`. "
"Avoids internal calling convention."
msgstr ""
"Especializado para contêineres comuns como :class:`list` e :class:`tuple`. "
"Evita convenção de chamada interna."

#: ../../whatsnew/3.11.rst:1518
msgid "8%"
msgstr "8%"

#: ../../whatsnew/3.11.rst:1518
msgid "Brandt Bucher"
msgstr "Brandt Bucher"

#: ../../whatsnew/3.11.rst:1523
msgid ""
"A similar optimization already existed since Python 3.8. 3.11 specializes "
"for more forms and reduces some overhead."
msgstr ""
"Uma otimização semelhante já existia desde o Python 3.8. O 3.11 é "
"especializado em mais formas e reduz algumas despesas gerais."

#: ../../whatsnew/3.11.rst:1526
msgid ""
"A similar optimization already existed since Python 3.10. 3.11 specializes "
"for more forms. Furthermore, all attribute loads should be sped up by :issue:"
"`45947`."
msgstr ""
"Uma otimização semelhante já existia desde o Python 3.10. 3.11 é "
"especializado em mais formas. Além disso, todos os carregamentos de "
"atributos devem ser acelerados por :issue:`45947`."

#: ../../whatsnew/3.11.rst:1534
msgid "Misc"
msgstr "Diversos"

#: ../../whatsnew/3.11.rst:1536
msgid ""
"Objects now require less memory due to lazily created object namespaces. "
"Their namespace dictionaries now also share keys more freely. (Contributed "
"Mark Shannon in :issue:`45340` and :issue:`40116`.)"
msgstr ""
"Os objetos agora requerem menos memória devido aos espaços de nomes de "
"objetos criados lentamente. Seus dicionários de espaços de nomes agora "
"também compartilham chaves mais livremente. (Contribuição de Mark Shannon "
"em :issue:`45340` e :issue:`40116`.)"

#: ../../whatsnew/3.11.rst:1540
msgid ""
"\"Zero-cost\" exceptions are implemented, eliminating the cost of :keyword:"
"`try` statements when no exception is raised. (Contributed by Mark Shannon "
"in :issue:`40222`.)"
msgstr ""
"Exceções de \"custo zero\" estão implementadas, eliminando o custo das "
"instruções :keyword:`try` quando nenhuma exceção é gerada. (Contribuição de "
"Mark Shannon em :issue:`40222`.)"

#: ../../whatsnew/3.11.rst:1544
msgid ""
"A more concise representation of exceptions in the interpreter reduced the "
"time required for catching an exception by about 10%. (Contributed by Irit "
"Katriel in :issue:`45711`.)"
msgstr ""
"Uma representação mais concisa de exceções no interpretador reduziu o tempo "
"necessário para capturar uma exceção em cerca de 10%. (Contribuição de Irit "
"Katriel em :issue:`45711`.)"

#: ../../whatsnew/3.11.rst:1548
msgid ""
":mod:`re`'s regular expression matching engine has been partially "
"refactored, and now uses computed gotos (or \"threaded code\") on supported "
"platforms. As a result, Python 3.11 executes the `pyperformance regular "
"expression benchmarks <https://pyperformance.readthedocs.io/benchmarks."
"html#regex-dna>`_ up to 10% faster than Python 3.10. (Contributed by Brandt "
"Bucher in :gh:`91404`.)"
msgstr ""
"O mecanismo de correspondência de expressão regular do :mod:`re` foi "
"parcialmente refatorado e agora usa *gotos* computados (ou \"código "
"encadeado\") em plataformas suportadas. Como resultado, o Python 3.11 "
"executa os `benchmarks de expressão regular do pyperformance <https://"
"pyperformance.readthedocs.io/benchmarks.html#regex-dna>`_ até 10% mais "
"rápido que o Python 3.10. (Contribuição de Brandt Bucher em :gh:`91404`.)"

#: ../../whatsnew/3.11.rst:1559
msgid "FAQ"
msgstr "FAQ"

#: ../../whatsnew/3.11.rst:1564
msgid "How should I write my code to utilize these speedups?"
msgstr "Como devo escrever meu código para utilizar esses aceleradores?"

#: ../../whatsnew/3.11.rst:1566
msgid ""
"Write Pythonic code that follows common best practices; you don't have to "
"change your code. The Faster CPython project optimizes for common code "
"patterns we observe."
msgstr ""
"Escrever código pythônico que segue as melhores práticas comuns; você não "
"precisa alterar seu código. O projeto Faster CPython otimiza para padrões de "
"código comuns que observamos."

#: ../../whatsnew/3.11.rst:1574
msgid "Will CPython 3.11 use more memory?"
msgstr "O CPython 3.11 usará mais memória?"

#: ../../whatsnew/3.11.rst:1576
msgid ""
"Maybe not; we don't expect memory use to exceed 20% higher than 3.10. This "
"is offset by memory optimizations for frame objects and object dictionaries "
"as mentioned above."
msgstr ""
"Talvez não; não esperamos que o uso de memória exceda 20% a mais que 3.10. "
"Isso é compensado por otimizações de memória para objetos quadro e "
"dicionários de objetos, conforme mencionado acima."

#: ../../whatsnew/3.11.rst:1584
msgid "I don't see any speedups in my workload. Why?"
msgstr "Não vejo nenhuma aceleração em minha carga de trabalho. Por que?"

#: ../../whatsnew/3.11.rst:1586
msgid ""
"Certain code won't have noticeable benefits. If your code spends most of its "
"time on I/O operations, or already does most of its computation in a C "
"extension library like NumPy, there won't be significant speedups. This "
"project currently benefits pure-Python workloads the most."
msgstr ""
"Certos códigos não terão benefícios perceptíveis. Se seu código passa a "
"maior parte do tempo em operações de E/S ou já faz a maior parte de sua "
"computação em uma biblioteca de extensão C como NumPy, não haverá "
"acelerações significativas. Atualmente, esse projeto é o que mais beneficia "
"as cargas de trabalho Python puro."

#: ../../whatsnew/3.11.rst:1591
msgid ""
"Furthermore, the pyperformance figures are a geometric mean. Even within the "
"pyperformance benchmarks, certain benchmarks have slowed down slightly, "
"while others have sped up by nearly 2x!"
msgstr ""
"Além disso, os valores de desempenho py são uma média geométrica. Mesmo "
"dentro dos benchmarks de pyperformance, alguns benchmarks desaceleraram um "
"pouco, enquanto outros aceleraram quase 2x!"

#: ../../whatsnew/3.11.rst:1599
msgid "Is there a JIT compiler?"
msgstr "Existe um compilador JIT?"

#: ../../whatsnew/3.11.rst:1601
msgid "No. We're still exploring other optimizations."
msgstr "Não. Ainda estamos explorando outras otimizações."

#: ../../whatsnew/3.11.rst:1607
msgid "About"
msgstr "Sobre"

#: ../../whatsnew/3.11.rst:1609
msgid ""
"Faster CPython explores optimizations for :term:`CPython`. The main team is "
"funded by Microsoft to work on this full-time. Pablo Galindo Salgado is also "
"funded by Bloomberg LP to work on the project part-time. Finally, many "
"contributors are volunteers from the community."
msgstr ""
"O Faster CPython explora otimizações para o :term:`CPython`. A equipe "
"principal é financiada pela Microsoft para trabalhar nisso em tempo "
"integral. Pablo Galindo Salgado também é financiado pela Bloomberg LP para "
"trabalhar no projeto em tempo parcial. Finalmente, muitos colaboradores são "
"voluntários da comunidade."

#: ../../whatsnew/3.11.rst:1618
msgid "CPython bytecode changes"
msgstr "Alterações de bytecode do CPython"

#: ../../whatsnew/3.11.rst:1620
msgid ""
"The bytecode now contains inline cache entries, which take the form of the "
"newly-added :opcode:`CACHE` instructions. Many opcodes expect to be followed "
"by an exact number of caches, and instruct the interpreter to skip over them "
"at runtime. Populated caches can look like arbitrary instructions, so great "
"care should be taken when reading or modifying raw, adaptive bytecode "
"containing quickened data."
msgstr ""
"O bytecode agora contém entradas de cache inline, que assumem a forma das "
"instruções recém-adicionadas :opcode:`CACHE`. Muitos códigos de operações, "
"ou *opcodes*,  esperam ser seguidos por um número exato de caches e instruem "
"o interpretador a ignorá-los em tempo de execução. Os caches preenchidos "
"podem parecer instruções arbitrárias, portanto, muito cuidado deve ser "
"tomado ao ler ou modificar o bytecode adaptativo bruto que contém dados "
"acelerados."

#: ../../whatsnew/3.11.rst:1632
msgid "New opcodes"
msgstr "Novos opcodes"

#: ../../whatsnew/3.11.rst:1634
msgid ""
":opcode:`ASYNC_GEN_WRAP`, :opcode:`RETURN_GENERATOR` and :opcode:`SEND`, "
"used in generators and co-routines."
msgstr ""
":opcode:`ASYNC_GEN_WRAP`, :opcode:`RETURN_GENERATOR` e :opcode:`SEND`, "
"usados em geradores e corrotinas."

#: ../../whatsnew/3.11.rst:1637
msgid ""
":opcode:`COPY_FREE_VARS`, which avoids needing special caller-side code for "
"closures."
msgstr ""
":opcode:`COPY_FREE_VARS`, que evita precisar de código especial no lado do "
"chamado para fechamentos."

#: ../../whatsnew/3.11.rst:1640
msgid ""
":opcode:`JUMP_BACKWARD_NO_INTERRUPT`, for use in certain loops where "
"handling interrupts is undesirable."
msgstr ""
":opcode:`JUMP_BACKWARD_NO_INTERRUPT`, para usasr em certos loops nos quais o "
"tratamento de interrupções é indesejável."

#: ../../whatsnew/3.11.rst:1643
msgid ":opcode:`MAKE_CELL`, to create :ref:`cell-objects`."
msgstr ":opcode:`MAKE_CELL`, para criar :ref:`cell-objects`."

#: ../../whatsnew/3.11.rst:1645
msgid ""
":opcode:`CHECK_EG_MATCH`  and  :opcode:`PREP_RERAISE_STAR`, to handle the :"
"ref:`new exception groups and except* <whatsnew311-pep654>` added in :pep:"
"`654`."
msgstr ""
":opcode:`CHECK_EG_MATCH` e :opcode:`PREP_RERAISE_STAR`, para manipular :ref:"
"`novos grupos de exceção e except* <whatsnew311-pep654>` adicionados na :pep:"
"`654`."

#: ../../whatsnew/3.11.rst:1649
msgid ":opcode:`PUSH_EXC_INFO`, for use in exception handlers."
msgstr ":opcode:`PUSH_EXC_INFO`, para uso em manipuladores de exceção."

#: ../../whatsnew/3.11.rst:1651
msgid ""
":opcode:`RESUME`, a no-op, for internal tracing, debugging and optimization "
"checks."
msgstr ""
":opcode:`RESUME`, um *no-op*, para rastreamento interno, depuração e "
"verificações de otimização."

#: ../../whatsnew/3.11.rst:1658
msgid "Replaced opcodes"
msgstr "Opcodes substituídos"

#: ../../whatsnew/3.11.rst:1661
msgid "Replaced Opcode(s)"
msgstr "Opcode(s) substituído(s)"

#: ../../whatsnew/3.11.rst:1661
msgid "New Opcode(s)"
msgstr "Novo(s) opcode(s)"

#: ../../whatsnew/3.11.rst:1661
msgid "Notes"
msgstr "Notas"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`!BINARY_*`"
msgstr ":opcode:`!BINARY_*`"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`!INPLACE_*`"
msgstr ":opcode:`!INPLACE_*`"

#: ../../whatsnew/3.11.rst:1663
msgid ":opcode:`BINARY_OP`"
msgstr ":opcode:`BINARY_OP`"

#: ../../whatsnew/3.11.rst:1663
msgid "Replaced all numeric binary/in-place opcodes with a single opcode"
msgstr ""
"Substituiu todos os opcodes numéricos binários/no local por um único opcode"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`!CALL_FUNCTION`"
msgstr ":opcode:`!CALL_FUNCTION`"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`!CALL_FUNCTION_KW`"
msgstr ":opcode:`!CALL_FUNCTION_KW`"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`!CALL_METHOD`"
msgstr ":opcode:`!CALL_METHOD`"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`CALL`"
msgstr ":opcode:`CALL`"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`KW_NAMES`"
msgstr ":opcode:`KW_NAMES`"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`PRECALL`"
msgstr ":opcode:`PRECALL`"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`PUSH_NULL`"
msgstr ":opcode:`PUSH_NULL`"

#: ../../whatsnew/3.11.rst:1666
msgid ""
"Decouples argument shifting for methods from handling of keyword arguments; "
"allows better specialization of calls"
msgstr ""
"Separa a mudança de argumento para métodos da manipulação de argumentos "
"nomeados; permite uma melhor especialização dos atendimentos"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`!DUP_TOP`"
msgstr ":opcode:`!DUP_TOP`"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`!DUP_TOP_TWO`"
msgstr ":opcode:`!DUP_TOP_TWO`"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`!ROT_TWO`"
msgstr ":opcode:`!ROT_TWO`"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`!ROT_THREE`"
msgstr ":opcode:`!ROT_THREE`"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`!ROT_FOUR`"
msgstr ":opcode:`!ROT_FOUR`"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`!ROT_N`"
msgstr ":opcode:`!ROT_N`"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`COPY`"
msgstr ":opcode:`COPY`"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`SWAP`"
msgstr ":opcode:`SWAP`"

#: ../../whatsnew/3.11.rst:1671
msgid "Stack manipulation instructions"
msgstr "Instruções de manipulação de pilha"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`!JUMP_IF_NOT_EXC_MATCH`"
msgstr ":opcode:`!JUMP_IF_NOT_EXC_MATCH`"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`CHECK_EXC_MATCH`"
msgstr ":opcode:`CHECK_EXC_MATCH`"

#: ../../whatsnew/3.11.rst:1678
msgid "Now performs check but doesn't jump"
msgstr "Agora efetua verificações, mas não pula"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`!JUMP_ABSOLUTE`"
msgstr ":opcode:`!JUMP_ABSOLUTE`"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`!POP_JUMP_IF_FALSE`"
msgstr ":opcode:`!POP_JUMP_IF_FALSE`"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`!POP_JUMP_IF_TRUE`"
msgstr ":opcode:`!POP_JUMP_IF_TRUE`"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`JUMP_BACKWARD`"
msgstr ":opcode:`JUMP_BACKWARD`"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`POP_JUMP_BACKWARD_IF_* <POP_JUMP_BACKWARD_IF_TRUE>`"
msgstr ":opcode:`POP_JUMP_BACKWARD_IF_* <POP_JUMP_BACKWARD_IF_TRUE>`"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`POP_JUMP_FORWARD_IF_* <POP_JUMP_FORWARD_IF_TRUE>`"
msgstr ":opcode:`POP_JUMP_FORWARD_IF_* <POP_JUMP_FORWARD_IF_TRUE>`"

#: ../../whatsnew/3.11.rst:1680
msgid ""
"See [#bytecode-jump]_; ``TRUE``, ``FALSE``, ``NONE`` and ``NOT_NONE`` "
"variants for each direction"
msgstr ""
"Veja [#bytecode-jump]_. Variantes ``TRUE``, ``FALSE``, ``NONE`` e "
"``NOT_NONE`` para cada direção"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`!SETUP_WITH`"
msgstr ":opcode:`!SETUP_WITH`"

#: ../../whatsnew/3.11.rst:0
msgid ":opcode:`!SETUP_ASYNC_WITH`"
msgstr ":opcode:`!SETUP_ASYNC_WITH`"

#: ../../whatsnew/3.11.rst:1686
msgid ":opcode:`BEFORE_WITH`"
msgstr ":opcode:`BEFORE_WITH`"

#: ../../whatsnew/3.11.rst:1686
msgid ":keyword:`with` block setup"
msgstr "Configuração de bloco :keyword:`with`"

#: ../../whatsnew/3.11.rst:1690
msgid ""
"All jump opcodes are now relative, including the existing :opcode:"
"`JUMP_IF_TRUE_OR_POP` and :opcode:`JUMP_IF_FALSE_OR_POP`. The argument is "
"now an offset from the current instruction rather than an absolute location."
msgstr ""
"Todos os opcodes de salto agora são relativos, incluindo os existentes :"
"opcode:`JUMP_IF_TRUE_OR_POP` e :opcode:`JUMP_IF_FALSE_OR_POP`. O argumento "
"agora é um deslocamento da instrução atual em vez de um local absoluto."

#: ../../whatsnew/3.11.rst:1701
msgid "Changed/removed opcodes"
msgstr "Opcodes alterados/removidos"

#: ../../whatsnew/3.11.rst:1703
msgid ""
"Changed :opcode:`MATCH_CLASS` and :opcode:`MATCH_KEYS` to no longer push an "
"additional boolean value to indicate success/failure. Instead, ``None`` is "
"pushed on failure in place of the tuple of extracted values."
msgstr ""
"Alterados :opcode:`MATCH_CLASS` e :opcode:`MATCH_KEYS` para não enviar mais "
"um valor booleano adicional para indicar sucesso/falha. Em vez disso, "
"``None`` é enviado em caso de falha no lugar da tupla de valores extraídos."

#: ../../whatsnew/3.11.rst:1708
msgid ""
"Changed opcodes that work with exceptions to reflect them now being "
"represented as one item on the stack instead of three (see :gh:`89874`)."
msgstr ""
"Alterados opcodes que funcionam com exceções para refleti-los agora sendo "
"representados como um item na pilha em vez de três (consulte :gh:`89874`)."

#: ../../whatsnew/3.11.rst:1712
msgid ""
"Removed :opcode:`!COPY_DICT_WITHOUT_KEYS`, :opcode:`!GEN_START`, :opcode:`!"
"POP_BLOCK`, :opcode:`!SETUP_FINALLY` and :opcode:`!YIELD_FROM`."
msgstr ""
"Removidos :opcode:`!COPY_DICT_WITHOUT_KEYS`, :opcode:`!GEN_START`, :opcode:`!"
"POP_BLOCK`, :opcode:`!SETUP_FINALLY` e :opcode:`!YIELD_FROM`."

#: ../../whatsnew/3.11.rst:1720 ../../whatsnew/3.11.rst:2593
msgid "Deprecated"
msgstr "Descontinuados"

#: ../../whatsnew/3.11.rst:1722
msgid ""
"This section lists Python APIs that have been deprecated in Python 3.11."
msgstr ""
"Esta seção lista as APIs do Python que foram descontinuadas no Python 3.11."

#: ../../whatsnew/3.11.rst:1724
msgid ""
"Deprecated C APIs are :ref:`listed separately <whatsnew311-c-api-"
"deprecated>`."
msgstr ""
"As APIs C descontinuadas são :ref:`listadas separadamente <whatsnew311-c-api-"
"deprecated>`."

#: ../../whatsnew/3.11.rst:1731
msgid "Language/Builtins"
msgstr "Linguagem/Embutidos"

#: ../../whatsnew/3.11.rst:1733
msgid ""
"Chaining :class:`classmethod` descriptors (introduced in :issue:`19072`) is "
"now deprecated.  It can no longer be used to wrap other descriptors such as :"
"class:`property`.  The core design of this feature was flawed and caused a "
"number of downstream problems.  To \"pass-through\" a :class:`classmethod`, "
"consider using the :attr:`!__wrapped__` attribute that was added in Python "
"3.10. (Contributed by Raymond Hettinger in :gh:`89519`.)"
msgstr ""
"O encadeamento de descritores :class:`classmethod` (introduzido em :issue:"
"`19072`) agora foi descontinuado. Ele não pode mais ser usado para agrupar "
"outros descritores como :class:`property`. O design principal desse recurso "
"era falho e causava vários problemas posteriores. Para \"passar\" um :class:"
"`classmethod`, considere usar o atributo :attr:`!__wrapped__` que foi "
"adicionado no Python 3.10. (Contribuição de Raymond Hettinger em :gh:"
"`89519`.)"

#: ../../whatsnew/3.11.rst:1741
msgid ""
"Octal escapes in string and bytes literals with values larger than ``0o377`` "
"(255 in decimal) now produce a :exc:`DeprecationWarning`. In a future Python "
"version, they will raise a :exc:`SyntaxWarning` and eventually a :exc:"
"`SyntaxError`. (Contributed by Serhiy Storchaka in :gh:`81548`.)"
msgstr ""
"Escapes octais em strings e bytes literais com valores maiores que ``0o377`` "
"(255 em decimal) agora produzem um :exc:`DeprecationWarning`. Em uma versão "
"futura do Python, eles levantarão um :exc:`SyntaxWarning` e eventualmente "
"um :exc:`SyntaxError`. (Contribuição de Serhiy Storchaka em :gh:`81548`.)"

#: ../../whatsnew/3.11.rst:1747
msgid ""
"The delegation of :func:`int` to :meth:`~object.__trunc__` is now "
"deprecated. Calling ``int(a)`` when ``type(a)`` implements :meth:`!"
"__trunc__` but not :meth:`~object.__int__` or :meth:`~object.__index__` now "
"raises a :exc:`DeprecationWarning`. (Contributed by Zackery Spytz in :issue:"
"`44977`.)"
msgstr ""
"A delegação de :func:`int` para :meth:`~object.__trunc__` agora foi "
"descontinuada. Chamar ``int(a)`` quando ``type(a)`` implementa :meth:`!"
"__trunc__`, mas não :meth:`~object.__int__` ou :meth:`~object.__index__`, "
"agora levanta uma exceção :exc:`DeprecationWarning`. (Contribuição de "
"Zackery Spytz em :issue:`44977`.)"

#: ../../whatsnew/3.11.rst:1757
msgid "Modules"
msgstr "Módulos"

#: ../../whatsnew/3.11.rst:1761
msgid ""
":pep:`594` led to the deprecations of the following modules slated for "
"removal in Python 3.13:"
msgstr ""
":pep:`594` levou à descontinuação dos seguintes módulos programados para "
"remoção no Python 3.13:"

#: ../../whatsnew/3.11.rst:1765
msgid ":mod:`aifc`"
msgstr ":mod:`aifc`"

#: ../../whatsnew/3.11.rst:1765
msgid ":mod:`chunk`"
msgstr ":mod:`chunk`"

#: ../../whatsnew/3.11.rst:1765
msgid ":mod:`msilib`"
msgstr ":mod:`msilib`"

#: ../../whatsnew/3.11.rst:1765
msgid ":mod:`pipes`"
msgstr ":mod:`pipes`"

#: ../../whatsnew/3.11.rst:1765
msgid ":mod:`telnetlib`"
msgstr ":mod:`telnetlib`"

#: ../../whatsnew/3.11.rst:1767
msgid ":mod:`audioop`"
msgstr ":mod:`audioop`"

#: ../../whatsnew/3.11.rst:1767
msgid ":mod:`crypt`"
msgstr ":mod:`crypt`"

#: ../../whatsnew/3.11.rst:1767
msgid ":mod:`nis`"
msgstr ":mod:`nis`"

#: ../../whatsnew/3.11.rst:1767
msgid ":mod:`sndhdr`"
msgstr ":mod:`sndhdr`"

#: ../../whatsnew/3.11.rst:1767
msgid ":mod:`uu`"
msgstr ":mod:`uu`"

#: ../../whatsnew/3.11.rst:1769
msgid ":mod:`cgi`"
msgstr ":mod:`cgi`"

#: ../../whatsnew/3.11.rst:1769
msgid ":mod:`imghdr`"
msgstr ":mod:`imghdr`"

#: ../../whatsnew/3.11.rst:1769
msgid ":mod:`nntplib`"
msgstr ":mod:`nntplib`"

#: ../../whatsnew/3.11.rst:1769
msgid ":mod:`spwd`"
msgstr ":mod:`spwd`"

#: ../../whatsnew/3.11.rst:1769
msgid ":mod:`xdrlib`"
msgstr ":mod:`xdrlib`"

#: ../../whatsnew/3.11.rst:1771
msgid ":mod:`cgitb`"
msgstr ":mod:`cgitb`"

#: ../../whatsnew/3.11.rst:1771
msgid ":mod:`mailcap`"
msgstr ":mod:`mailcap`"

#: ../../whatsnew/3.11.rst:1771
msgid ":mod:`ossaudiodev`"
msgstr ":mod:`ossaudiodev`"

#: ../../whatsnew/3.11.rst:1771
msgid ":mod:`sunau`"
msgstr ":mod:`sunau`"

#: ../../whatsnew/3.11.rst:1774
msgid ""
"(Contributed by Brett Cannon in :issue:`47061` and Victor Stinner in :gh:"
"`68966`.)"
msgstr ""
"(Contribuição de Brett Cannon em :issue:`47061` e Victor Stinner em :gh:"
"`68966`.)"

#: ../../whatsnew/3.11.rst:1777
msgid ""
"The :mod:`asynchat`, :mod:`asyncore` and  :mod:`smtpd` modules have been "
"deprecated since at least Python 3.6. Their documentation and deprecation "
"warnings have now been updated to note they will be removed in Python 3.12. "
"(Contributed by Hugo van Kemenade in :issue:`47022`.)"
msgstr ""
"Os módulos :mod:`asynchat`, :mod:`asyncore` e :mod:`smtpd` foram "
"descontinuados desde pelo menos o Python 3.6. A documentação e os avisos de "
"descontinuação foram atualizados para observar que serão removidos no Python "
"3.12. (Contribuição de Hugo van Kemenade em :issue:`47022`.)"

#: ../../whatsnew/3.11.rst:1782
msgid ""
"The :mod:`lib2to3` package and :ref:`2to3 <2to3-reference>` tool are now "
"deprecated and may not be able to parse Python 3.10 or newer. See :pep:"
"`617`, introducing the new PEG parser, for details. (Contributed by Victor "
"Stinner in :issue:`40360`.)"
msgstr ""
"O pacote :mod:`lib2to3` e a ferramenta :ref:`2to3 <2to3-reference>` agora "
"foram descontinuados e podem não ser capazes de analisar o Python 3.10 ou "
"mais recente. Veja :pep:`617`, apresentando o novo analisador GASE, para "
"detalhes. (Contribuição de Victor Stinner em :issue:`40360`.)"

#: ../../whatsnew/3.11.rst:1787
msgid ""
"Undocumented modules :mod:`!sre_compile`, :mod:`!sre_constants` and :mod:`!"
"sre_parse` are now deprecated. (Contributed by Serhiy Storchaka in :issue:"
"`47152`.)"
msgstr ""
"Módulos não documentados :mod:`!sre_compile`, :mod:`!sre_constants` e :mod:`!"
"sre_parse` agora fora descontinuados. (Contribuição de Serhiy Storchaka em :"
"issue:`47152`.)"

#: ../../whatsnew/3.11.rst:1795
msgid "Standard Library"
msgstr "Biblioteca Padrão"

#: ../../whatsnew/3.11.rst:1797
msgid ""
"The following have been deprecated in :mod:`configparser` since Python 3.2. "
"Their deprecation warnings have now been updated to note they will be "
"removed in Python 3.12:"
msgstr ""
"Os itens a seguir foram descontinuados em :mod:`configparser` desde o Python "
"3.2. Seus avisos de descontinuação agora foram atualizados para observar que "
"serão removidos no Python 3.12:"

#: ../../whatsnew/3.11.rst:1801
msgid "the :class:`!configparser.SafeConfigParser` class"
msgstr "a classe :class:`!configparser.SafeConfigParser`"

#: ../../whatsnew/3.11.rst:1802
msgid "the :attr:`!configparser.ParsingError.filename` property"
msgstr "a propriedade :attr:`!configparser.ParsingError.filename`"

#: ../../whatsnew/3.11.rst:1803
msgid "the :meth:`!configparser.RawConfigParser.readfp` method"
msgstr "o método :meth:`!configparser.RawConfigParser.readfp`"

#: ../../whatsnew/3.11.rst:1805
msgid "(Contributed by Hugo van Kemenade in :issue:`45173`.)"
msgstr "(Contribuição de Hugo van Kemenade em :issue:`45173`.)"

#: ../../whatsnew/3.11.rst:1807
msgid ""
":class:`!configparser.LegacyInterpolation` has been deprecated in the "
"docstring since Python 3.2, and is not listed in the :mod:`configparser` "
"documentation. It now emits a :exc:`DeprecationWarning` and will be removed "
"in Python 3.13. Use :class:`configparser.BasicInterpolation` or :class:"
"`configparser.ExtendedInterpolation` instead. (Contributed by Hugo van "
"Kemenade in :issue:`46607`.)"
msgstr ""
":class:`!configparser.LegacyInterpolation` foi descontinuada na docstring "
"desde o Python 3.2, e não está listada na documentação do :mod:"
"`configparser`. Agora ela emite um :exc:`DeprecationWarning` e será removida "
"no Python 3.13. Use :class:`configparser.BasicInterpolation` ou :class:"
"`configparser.ExtendedInterpolation`. (Contribuição de Hugo van Kemenade em :"
"issue:`46607`.)"

#: ../../whatsnew/3.11.rst:1814
msgid ""
"The older set of :mod:`importlib.resources` functions were deprecated in "
"favor of the replacements added in Python 3.9 and will be removed in a "
"future Python version, due to not supporting resources located within "
"package subdirectories:"
msgstr ""
"O antigo conjunto de funções :mod:`importlib.resources` foi descontinuado em "
"favor das substituições adicionadas no Python 3.9 e será removido em uma "
"versão futura do Python, devido ao não suporte de recursos localizados nos "
"subdiretórios do pacote:"

#: ../../whatsnew/3.11.rst:1819
msgid ":func:`importlib.resources.contents`"
msgstr ":func:`importlib.resources.contents`"

#: ../../whatsnew/3.11.rst:1820
msgid ":func:`importlib.resources.is_resource`"
msgstr ":func:`importlib.resources.is_resource`"

#: ../../whatsnew/3.11.rst:1821
msgid ":func:`importlib.resources.open_binary`"
msgstr ":func:`importlib.resources.open_binary`"

#: ../../whatsnew/3.11.rst:1822
msgid ":func:`importlib.resources.open_text`"
msgstr ":func:`importlib.resources.open_text`"

#: ../../whatsnew/3.11.rst:1823
msgid ":func:`importlib.resources.read_binary`"
msgstr ":func:`importlib.resources.read_binary`"

#: ../../whatsnew/3.11.rst:1824
msgid ":func:`importlib.resources.read_text`"
msgstr ":func:`importlib.resources.read_text`"

#: ../../whatsnew/3.11.rst:1825
msgid ":func:`importlib.resources.path`"
msgstr ":func:`importlib.resources.path`"

#: ../../whatsnew/3.11.rst:1827
msgid ""
"The :func:`locale.getdefaultlocale` function is deprecated and will be "
"removed in Python 3.15. Use :func:`locale.setlocale`, :func:`locale."
"getpreferredencoding(False) <locale.getpreferredencoding>` and :func:`locale."
"getlocale` functions instead. (Contributed by Victor Stinner in :gh:`90817`.)"
msgstr ""
"A função :func:`locale.getdefaultlocale` foi descontinuada e será removida "
"no Python 3.15. Use as funções :func:`locale.setlocale`, :func:`locale."
"getpreferredencoding(False) <locale.getpreferredencoding>` e :func:`locale."
"getlocale`. (Contribuição de Victor Stinner em :gh:`90817`.)"

#: ../../whatsnew/3.11.rst:1833
msgid ""
"The :func:`locale.resetlocale` function is deprecated and will be removed in "
"Python 3.13. Use ``locale.setlocale(locale.LC_ALL, \"\")`` instead. "
"(Contributed by Victor Stinner in :gh:`90817`.)"
msgstr ""
"A função :func:`locale.resetlocale` foi descontinuada e será removida no "
"Python 3.13. Use ``locale.setlocale(locale.LC_ALL, \"\")``. (Contribuição de "
"Victor Stinner em :gh:`90817`.)"

#: ../../whatsnew/3.11.rst:1837
msgid ""
"Stricter rules will now be applied for numerical group references and group "
"names in :ref:`regular expressions <re-syntax>`. Only sequences of ASCII "
"digits will now be accepted as a numerical reference, and the group name in :"
"class:`bytes` patterns and replacement strings can only contain ASCII "
"letters, digits and underscores. For now, a deprecation warning is raised "
"for syntax violating these rules. (Contributed by Serhiy Storchaka in :gh:"
"`91760`.)"
msgstr ""
"Regras mais rígidas agora serão aplicadas para referências numéricas de "
"grupos e nomes de grupos em :ref:`expressões regulares <re-syntax>`. Apenas "
"sequências de dígitos ASCII serão aceitas como referência numérica, e o nome "
"do grupo em padrões :class:`bytes` e strings de substituição podem conter "
"apenas letras ASCII, dígitos e sublinhados. Por enquanto, um aviso de "
"descontinuação é levantado para a sintaxe que viola essas regras. "
"(Contribuição de Serhiy Storchaka em :gh:`91760`.)"

#: ../../whatsnew/3.11.rst:1845
msgid ""
"In the :mod:`re` module, the :func:`!re.template` function and the "
"corresponding :const:`!re.TEMPLATE` and :const:`!re.T` flags are deprecated, "
"as they were undocumented and lacked an obvious purpose. They will be "
"removed in Python 3.13. (Contributed by Serhiy Storchaka and Miro Hrončok "
"in :gh:`92728`.)"
msgstr ""
"No módulo :mod:`re`, a função :func:`!re.template` e os sinalizadores :const:"
"`!re.TEMPLATE` e :const:`!re.T` correspondentes foram descontinuados, pois "
"não foram documentados e careciam da um propósito óbvio. Eles serão "
"removidos no Python 3.13. (Contribuição de Serhiy Storchaka e Miro Hrončok "
"em :gh:`92728`.)"

#: ../../whatsnew/3.11.rst:1851
msgid ""
":func:`turtle.settiltangle` has been deprecated since Python 3.1; it now "
"emits a deprecation warning and will be removed in Python 3.13. Use :func:"
"`turtle.tiltangle` instead (it was earlier incorrectly marked as deprecated, "
"and its docstring is now corrected). (Contributed by Hugo van Kemenade in :"
"issue:`45837`.)"
msgstr ""
":func:`turtle.settiltangle` foi descontinuada desde o Python 3.1; ela agora "
"emite um aviso de descontinuação e será removida no Python 3.13. Em vez "
"dela, use :func:`turtle.tiltangle` (foi marcada anteriormente incorretamente "
"como descontinuada e sua docstring agora está corrigida). (Contribuição de "
"Hugo van Kemenade em :issue:`45837`.)"

#: ../../whatsnew/3.11.rst:1857
msgid ""
":class:`typing.Text`, which exists solely to provide compatibility support "
"between Python 2 and Python 3 code, is now deprecated. Its removal is "
"currently unplanned, but users are encouraged to use :class:`str` instead "
"wherever possible. (Contributed by Alex Waygood in :gh:`92332`.)"
msgstr ""
":class:`typing.Text`, que existe apenas para fornecer suporte de "
"compatibilidade entre o código Python 2 e Python 3, foi descontinuada nesta "
"versão. Sua remoção não está planejada, mas os usuários são encorajados a "
"usar :class:`str` sempre que possível. (Contribuição de Alex Waygood em :gh:"
"`92332`.)"

#: ../../whatsnew/3.11.rst:1863
msgid ""
"The keyword argument syntax for constructing :data:`typing.TypedDict` types "
"is now deprecated. Support will be removed in Python 3.13. (Contributed by "
"Jingchen Ye in :gh:`90224`.)"
msgstr ""
"A sintaxe do argumento nomeado para a construção de tipos :data:`typing."
"TypedDict` foi descontinuado neste versão. O suporte será removido no Python "
"3.13. (Contribuição de Jingchen Ye em :gh:`90224`.)"

#: ../../whatsnew/3.11.rst:1867
msgid ""
":class:`!webbrowser.MacOSX` is deprecated and will be removed in Python "
"3.13. It is untested, undocumented, and not used by :mod:`webbrowser` "
"itself. (Contributed by Donghee Na in :issue:`42255`.)"
msgstr ""
":class:`!webbrowser.MacOSX` foi descontinuada e será removida no Python "
"3.13. Ela não foi testada, não foi documentada e não é usada pelo próprio :"
"mod:`webbrowser`. (Contribuição de Dong-hee Na em :issue:`42255`.)"

#: ../../whatsnew/3.11.rst:1871
msgid ""
"The behavior of returning a value from a :class:`~unittest.TestCase` and :"
"class:`~unittest.IsolatedAsyncioTestCase` test methods (other than the "
"default ``None`` value) is now deprecated."
msgstr ""
"O comportamento de retornar um valor de um dos métodos de teste de :class:"
"`~unittest.TestCase` e :class:`~unittest.IsolatedAsyncioTestCase` (diferente "
"do valor padrão ``None``) foi descontinuado nesta versão."

#: ../../whatsnew/3.11.rst:1875
msgid ""
"Deprecated the following not-formally-documented :mod:`unittest` functions, "
"scheduled for removal in Python 3.13:"
msgstr ""
"Foram descontinuadas as seguintes funções :mod:`unittest` não formalmente "
"documentadas, agendadas para remoção no Python 3.13:"

#: ../../whatsnew/3.11.rst:1878
msgid ":func:`!unittest.findTestCases`"
msgstr ":func:`!unittest.findTestCases`"

#: ../../whatsnew/3.11.rst:1879
msgid ":func:`!unittest.makeSuite`"
msgstr ":func:`!unittest.makeSuite`"

#: ../../whatsnew/3.11.rst:1880
msgid ":func:`!unittest.getTestCaseNames`"
msgstr ":func:`!unittest.getTestCaseNames`"

#: ../../whatsnew/3.11.rst:1882
msgid "Use :class:`~unittest.TestLoader` methods instead:"
msgstr "Em vez delas, use os métodos de :class:`~unittest.TestLoader`:"

#: ../../whatsnew/3.11.rst:1884
msgid ":meth:`unittest.TestLoader.loadTestsFromModule`"
msgstr ":meth:`unittest.TestLoader.loadTestsFromModule`"

#: ../../whatsnew/3.11.rst:1885
msgid ":meth:`unittest.TestLoader.loadTestsFromTestCase`"
msgstr ":meth:`unittest.TestLoader.loadTestsFromTestCase`"

#: ../../whatsnew/3.11.rst:1886
msgid ":meth:`unittest.TestLoader.getTestCaseNames`"
msgstr ":meth:`unittest.TestLoader.getTestCaseNames`"

#: ../../whatsnew/3.11.rst:1888
msgid "(Contributed by Erlend E. Aasland in :issue:`5846`.)"
msgstr "(Contribuição de Erlend E. Aasland em :issue:`5846`.)"

#: ../../whatsnew/3.11.rst:1890
msgid ""
":meth:`!unittest.TestProgram.usageExit` is marked deprecated, to be removed "
"in 3.13. (Contributed by Carlos Damázio in :gh:`67048`.)"
msgstr ""
":meth:`!unittest.TestProgram.usageExit` foi marcado como descontinuado, para "
"ser removido em 3.13. (Contribuição de Carlos Damázio em :gh:`67048`.)"

#: ../../whatsnew/3.11.rst:1899 ../../whatsnew/3.11.rst:2621
msgid "Pending Removal in Python 3.12"
msgstr "Pendente remoção no Python 3.12"

#: ../../whatsnew/3.11.rst:1901
msgid ""
"The following Python APIs have been deprecated in earlier Python releases, "
"and will be removed in Python 3.12."
msgstr ""
"As seguintes APIs do Python foram descontinuadas em versões anteriores do "
"Python e serão removidas no Python 3.12."

#: ../../whatsnew/3.11.rst:1904
msgid ""
"C APIs pending removal are :ref:`listed separately <whatsnew311-c-api-"
"pending-removal>`."
msgstr ""
"As APIs C com remoção pendente são :ref:`listadas separadamente <whatsnew311-"
"c-api-pending-removal>`."

#: ../../whatsnew/3.11.rst:1907
msgid "The :mod:`asynchat` module"
msgstr "O módulo :mod:`asynchat`"

#: ../../whatsnew/3.11.rst:1908
msgid "The :mod:`asyncore` module"
msgstr "O módulo :mod:`asyncore`"

#: ../../whatsnew/3.11.rst:1909
msgid "The :ref:`entire distutils package <distutils-deprecated>`"
msgstr ":ref:`Todo o pacote distutils <distutils-deprecated>`"

#: ../../whatsnew/3.11.rst:1910
msgid "The :mod:`imp` module"
msgstr ""

#: ../../whatsnew/3.11.rst:1911
msgid "The :class:`typing.io <typing.IO>` namespace"
msgstr "O espaço de nomes :class:`typing.io <typing.IO>`"

#: ../../whatsnew/3.11.rst:1912
msgid "The :class:`typing.re <typing.Pattern>` namespace"
msgstr "O espaço de nomes :class:`typing.re <typing.Pattern>`"

#: ../../whatsnew/3.11.rst:1913
msgid ":func:`!cgi.log`"
msgstr ":func:`!cgi.log`"

#: ../../whatsnew/3.11.rst:1914
msgid ":func:`importlib.find_loader`"
msgstr ""

#: ../../whatsnew/3.11.rst:1915
msgid ":meth:`importlib.abc.Loader.module_repr`"
msgstr ""

#: ../../whatsnew/3.11.rst:1916
msgid ":meth:`importlib.abc.MetaPathFinder.find_module`"
msgstr ""

#: ../../whatsnew/3.11.rst:1917
msgid ":meth:`importlib.abc.PathEntryFinder.find_loader`"
msgstr ""

#: ../../whatsnew/3.11.rst:1918
msgid ":meth:`importlib.abc.PathEntryFinder.find_module`"
msgstr ""

#: ../../whatsnew/3.11.rst:1919
msgid ":meth:`!importlib.machinery.BuiltinImporter.find_module`"
msgstr ":meth:`!importlib.machinery.BuiltinImporter.find_module`"

#: ../../whatsnew/3.11.rst:1920
msgid ":meth:`!importlib.machinery.BuiltinLoader.module_repr`"
msgstr ":meth:`!importlib.machinery.BuiltinLoader.module_repr`"

#: ../../whatsnew/3.11.rst:1921
msgid ":meth:`!importlib.machinery.FileFinder.find_loader`"
msgstr ":meth:`!importlib.machinery.FileFinder.find_loader`"

#: ../../whatsnew/3.11.rst:1922
msgid ":meth:`!importlib.machinery.FileFinder.find_module`"
msgstr ":meth:`!importlib.machinery.FileFinder.find_module`"

#: ../../whatsnew/3.11.rst:1923
msgid ":meth:`!importlib.machinery.FrozenImporter.find_module`"
msgstr ":meth:`!importlib.machinery.FrozenImporter.find_module`"

#: ../../whatsnew/3.11.rst:1924
msgid ":meth:`!importlib.machinery.FrozenLoader.module_repr`"
msgstr ":meth:`!importlib.machinery.FrozenLoader.module_repr`"

#: ../../whatsnew/3.11.rst:1925
msgid ":meth:`importlib.machinery.PathFinder.find_module`"
msgstr ""

#: ../../whatsnew/3.11.rst:1926
msgid ":meth:`!importlib.machinery.WindowsRegistryFinder.find_module`"
msgstr ":meth:`!importlib.machinery.WindowsRegistryFinder.find_module`"

#: ../../whatsnew/3.11.rst:1927
msgid ":func:`importlib.util.module_for_loader`"
msgstr ""

#: ../../whatsnew/3.11.rst:1928
msgid ":func:`!importlib.util.set_loader_wrapper`"
msgstr ":func:`!importlib.util.set_loader_wrapper`"

#: ../../whatsnew/3.11.rst:1929
msgid ":func:`!importlib.util.set_package_wrapper`"
msgstr ":func:`!importlib.util.set_package_wrapper`"

#: ../../whatsnew/3.11.rst:1930
msgid ":class:`pkgutil.ImpImporter`"
msgstr ""

#: ../../whatsnew/3.11.rst:1931
msgid ":class:`pkgutil.ImpLoader`"
msgstr ""

#: ../../whatsnew/3.11.rst:1932
msgid ":meth:`pathlib.Path.link_to`"
msgstr ":meth:`pathlib.Path.link_to`"

#: ../../whatsnew/3.11.rst:1933
msgid ":func:`!sqlite3.enable_shared_cache`"
msgstr ":func:`!sqlite3.enable_shared_cache`"

#: ../../whatsnew/3.11.rst:1934
msgid ":func:`!sqlite3.OptimizedUnicode`"
msgstr ":func:`!sqlite3.OptimizedUnicode`"

#: ../../whatsnew/3.11.rst:1935
msgid ":envvar:`PYTHONTHREADDEBUG` environment variable"
msgstr "Variável de ambiente :envvar:`PYTHONTHREADDEBUG`"

#: ../../whatsnew/3.11.rst:1936
msgid "The following deprecated aliases in :mod:`unittest`:"
msgstr "Os seguintes aliases foram descontinuados no :mod:`unittest`:"

#: ../../whatsnew/3.11.rst:1939
msgid "Deprecated alias"
msgstr "Apelido descontinuado"

#: ../../whatsnew/3.11.rst:1939
msgid "Method Name"
msgstr "Método"

#: ../../whatsnew/3.11.rst:1939
msgid "Deprecated in"
msgstr "Descontinuado em"

#: ../../whatsnew/3.11.rst:1941
msgid "``failUnless``"
msgstr "``failUnless``"

#: ../../whatsnew/3.11.rst:1941 ../../whatsnew/3.11.rst:1948
msgid ":meth:`.assertTrue`"
msgstr ":meth:`.assertTrue`"

#: ../../whatsnew/3.11.rst:1941 ../../whatsnew/3.11.rst:1942
#: ../../whatsnew/3.11.rst:1943 ../../whatsnew/3.11.rst:1944
#: ../../whatsnew/3.11.rst:1945 ../../whatsnew/3.11.rst:1946
#: ../../whatsnew/3.11.rst:1947
msgid "3.1"
msgstr "3.1"

#: ../../whatsnew/3.11.rst:1942
msgid "``failIf``"
msgstr "``failIf``"

#: ../../whatsnew/3.11.rst:1942
msgid ":meth:`.assertFalse`"
msgstr ":meth:`.assertFalse`"

#: ../../whatsnew/3.11.rst:1943
msgid "``failUnlessEqual``"
msgstr "``failUnlessEqual``"

#: ../../whatsnew/3.11.rst:1943 ../../whatsnew/3.11.rst:1949
msgid ":meth:`.assertEqual`"
msgstr ":meth:`.assertEqual`"

#: ../../whatsnew/3.11.rst:1944
msgid "``failIfEqual``"
msgstr "``failIfEqual``"

#: ../../whatsnew/3.11.rst:1944 ../../whatsnew/3.11.rst:1950
msgid ":meth:`.assertNotEqual`"
msgstr ":meth:`.assertNotEqual`"

#: ../../whatsnew/3.11.rst:1945
msgid "``failUnlessAlmostEqual``"
msgstr "``failUnlessAlmostEqual``"

#: ../../whatsnew/3.11.rst:1945 ../../whatsnew/3.11.rst:1951
msgid ":meth:`.assertAlmostEqual`"
msgstr ":meth:`.assertAlmostEqual`"

#: ../../whatsnew/3.11.rst:1946
msgid "``failIfAlmostEqual``"
msgstr "``failIfAlmostEqual``"

#: ../../whatsnew/3.11.rst:1946 ../../whatsnew/3.11.rst:1952
msgid ":meth:`.assertNotAlmostEqual`"
msgstr ":meth:`.assertNotAlmostEqual`"

#: ../../whatsnew/3.11.rst:1947
msgid "``failUnlessRaises``"
msgstr "``failUnlessRaises``"

#: ../../whatsnew/3.11.rst:1947
msgid ":meth:`.assertRaises`"
msgstr ":meth:`.assertRaises`"

#: ../../whatsnew/3.11.rst:1948
msgid "``assert_``"
msgstr "``assert_``"

#: ../../whatsnew/3.11.rst:1948 ../../whatsnew/3.11.rst:1949
#: ../../whatsnew/3.11.rst:1950 ../../whatsnew/3.11.rst:1951
#: ../../whatsnew/3.11.rst:1952 ../../whatsnew/3.11.rst:1953
#: ../../whatsnew/3.11.rst:1954
msgid "3.2"
msgstr "3.2"

#: ../../whatsnew/3.11.rst:1949
msgid "``assertEquals``"
msgstr "``assertEquals``"

#: ../../whatsnew/3.11.rst:1950
msgid "``assertNotEquals``"
msgstr "``assertNotEquals``"

#: ../../whatsnew/3.11.rst:1951
msgid "``assertAlmostEquals``"
msgstr "``assertAlmostEquals``"

#: ../../whatsnew/3.11.rst:1952
msgid "``assertNotAlmostEquals``"
msgstr "``assertNotAlmostEquals``"

#: ../../whatsnew/3.11.rst:1953
msgid "``assertRegexpMatches``"
msgstr "``assertRegexpMatches``"

#: ../../whatsnew/3.11.rst:1953
msgid ":meth:`.assertRegex`"
msgstr ":meth:`.assertRegex`"

#: ../../whatsnew/3.11.rst:1954
msgid "``assertRaisesRegexp``"
msgstr "``assertRaisesRegexp``"

#: ../../whatsnew/3.11.rst:1954
msgid ":meth:`.assertRaisesRegex`"
msgstr ":meth:`.assertRaisesRegex`"

#: ../../whatsnew/3.11.rst:1955
msgid "``assertNotRegexpMatches``"
msgstr "``assertNotRegexpMatches``"

#: ../../whatsnew/3.11.rst:1955
msgid ":meth:`.assertNotRegex`"
msgstr ":meth:`.assertNotRegex`"

#: ../../whatsnew/3.11.rst:1955
msgid "3.5"
msgstr "3.5"

#: ../../whatsnew/3.11.rst:1962 ../../whatsnew/3.11.rst:2647
msgid "Removed"
msgstr "Removidos"

#: ../../whatsnew/3.11.rst:1964
msgid "This section lists Python APIs that have been removed in Python 3.11."
msgstr "Esta seção lista as APIs do Python que foram removidas no Python 3.11."

#: ../../whatsnew/3.11.rst:1966
msgid ""
"Removed C APIs are :ref:`listed separately <whatsnew311-c-api-removed>`."
msgstr ""
"As  APIs C removidas são :ref:`listadas separadamente <whatsnew311-c-api-"
"removed>`."

#: ../../whatsnew/3.11.rst:1968
msgid ""
"Removed the :func:`!@asyncio.coroutine` :term:`decorator` enabling legacy "
"generator-based coroutines to be compatible with :keyword:`async` / :keyword:"
"`await` code. The function has been deprecated since Python 3.8 and the "
"removal was initially scheduled for Python 3.10. Use :keyword:`async def` "
"instead. (Contributed by Illia Volochii in :issue:`43216`.)"
msgstr ""
"Removido o :term:`decorador` :func:`!@asyncio.coroutine` permitindo que "
"corrotinas baseadas em gerador legado sejam compatíveis com o código :"
"keyword:`async` / :keyword:`await`. A função foi descontinuada desde o "
"Python 3.8 e a remoção foi inicialmente agendada para o Python 3.10. Use :"
"keyword:`async def` em vez disso. (Contribuição de Illia Volochii em :issue:"
"`43216`.)"

#: ../../whatsnew/3.11.rst:1975
msgid ""
"Removed :class:`!asyncio.coroutines.CoroWrapper` used for wrapping legacy "
"generator-based coroutine objects in the debug mode. (Contributed by Illia "
"Volochii in :issue:`43216`.)"
msgstr ""
"Removida :class:`!asyncio.coroutines.CoroWrapper`, que era usada para "
"encapsular objetos de corrotina baseados em gerador legado no modo de "
"depuração. (Contribuição de Illia Volochii em :issue:`43216`.)"

#: ../../whatsnew/3.11.rst:1979
msgid ""
"Due to significant security concerns, the *reuse_address* parameter of :meth:"
"`asyncio.loop.create_datagram_endpoint`, disabled in Python 3.9, is now "
"entirely removed. This is because of the behavior of the socket option "
"``SO_REUSEADDR`` in UDP. (Contributed by Hugo van Kemenade in :issue:"
"`45129`.)"
msgstr ""
"Devido a preocupações significativas de segurança, o parâmetro "
"*reuse_address* de :meth:`asyncio.loop.create_datagram_endpoint`, "
"desabilitado no Python 3.9, agora foi totalmente removido. Isto é devido ao "
"comportamento da opção de socket ``SO_REUSEDDR`` no UDP. (Contribuição de "
"Hugo van Kemenade em :issue:`45129`.)"

#: ../../whatsnew/3.11.rst:1985
msgid ""
"Removed the :mod:`!binhex` module, deprecated in Python 3.9. Also removed "
"the related, similarly-deprecated :mod:`binascii` functions:"
msgstr ""
"Removido o módulo :mod:`!binhex`, descontinuado no Python 3.9. Também foram "
"removidas as funções :mod:`binascii` relacionadas e igualmente "
"descontinuadas:"

#: ../../whatsnew/3.11.rst:1988
msgid ":func:`!binascii.a2b_hqx`"
msgstr ":func:`!binascii.a2b_hqx`"

#: ../../whatsnew/3.11.rst:1989
msgid ":func:`!binascii.b2a_hqx`"
msgstr ":func:`!binascii.b2a_hqx`"

#: ../../whatsnew/3.11.rst:1990
msgid ":func:`!binascii.rlecode_hqx`"
msgstr ":func:`!binascii.rlecode_hqx`"

#: ../../whatsnew/3.11.rst:1991
msgid ":func:`!binascii.rldecode_hqx`"
msgstr ":func:`!binascii.rldecode_hqx`"

#: ../../whatsnew/3.11.rst:1993
msgid "The :func:`binascii.crc_hqx` function remains available."
msgstr "A função :func:`binascii.crc_hqx` continua disponível."

#: ../../whatsnew/3.11.rst:1995
msgid "(Contributed by Victor Stinner in :issue:`45085`.)"
msgstr "(Contribuição de Victor Stinner em :issue:`45085`.)"

#: ../../whatsnew/3.11.rst:1997
msgid ""
"Removed the :mod:`distutils` ``bdist_msi`` command deprecated in Python 3.9. "
"Use ``bdist_wheel`` (wheel packages) instead. (Contributed by Hugo van "
"Kemenade in :issue:`45124`.)"
msgstr ""
"Removido o comando ``bdist_msi`` do :mod:`distutils` que foi descontinuado "
"no Python 3.9. Em vez disso, use ``bdist_wheel`` (pacotes wheel). "
"(Contribuição de Hugo van Kemenade em :issue:`45124`.)"

#: ../../whatsnew/3.11.rst:2001
msgid ""
"Removed the :meth:`~object.__getitem__` methods of :class:`xml.dom.pulldom."
"DOMEventStream`, :class:`wsgiref.util.FileWrapper` and :class:`fileinput."
"FileInput`, deprecated since Python 3.9. (Contributed by Hugo van Kemenade "
"in :issue:`45132`.)"
msgstr ""
"Removidos os métodos :meth:`~object.__getitem__` das classes :class:`xml.dom."
"pulldom.DOMEventStream`, :class:`wsgiref.util.FileWrapper` e :class:"
"`fileinput.FileInput`, descontinuados desde o Python 3.9 . (Contribuição de "
"Hugo van Kemenade em :issue:`45132`.)"

#: ../../whatsnew/3.11.rst:2006
msgid ""
"Removed the deprecated :mod:`gettext` functions :func:`!lgettext`, :func:`!"
"ldgettext`, :func:`!lngettext` and :func:`!ldngettext`. Also removed the :"
"func:`!bind_textdomain_codeset` function, the :meth:`!NullTranslations."
"output_charset` and :meth:`!NullTranslations.set_output_charset` methods, "
"and the *codeset* parameter of :func:`!translation` and :func:`!install`, "
"since they are only used for the :func:`!l*gettext` functions. (Contributed "
"by Donghee Na and Serhiy Storchaka in :issue:`44235`.)"
msgstr ""
"Removidas as funções descontinuadas :func:`!lgettext`, :func:`!ldgettext`, :"
"func:`!lngettext` e :func:`!ldngettext` de :mod:`gettext`. Também removidas "
"a função :func:`!bind_textdomain_codeset`, os métodos :meth:`!"
"NullTranslations.output_charset` e :meth:`!NullTranslations."
"set_output_charset`, e o parâmetro *codeset* de :func:`!translation` e :func:"
"`!install`, já que eles são usados apenas para as funções :func:`!"
"l*gettext`. (Contribuição de Dong-hee Na e Serhiy Storchaka em :issue:"
"`44235`.)"

#: ../../whatsnew/3.11.rst:2016
msgid "Removed from the :mod:`inspect` module:"
msgstr "Removido do módulo :mod:`inspect`:"

#: ../../whatsnew/3.11.rst:2018
msgid ""
"The :func:`!getargspec` function, deprecated since Python 3.0; use :func:"
"`inspect.signature` or :func:`inspect.getfullargspec` instead."
msgstr ""
"A função :func:`!getargspec`, descontinuada desde o Python 3.0; use :func:"
"`inspect.signature` ou :func:`inspect.getfullargspec`."

#: ../../whatsnew/3.11.rst:2021
msgid ""
"The :func:`!formatargspec` function, deprecated since Python 3.5; use the :"
"func:`inspect.signature` function or the :class:`inspect.Signature` object "
"directly."
msgstr ""
"A função :func:`!formatargspec`, descontinuada desde o Python 3.5; use a "
"função :func:`inspect.signature` ou o objeto :class:`inspect.Signature` "
"diretamente."

#: ../../whatsnew/3.11.rst:2025
msgid ""
"The undocumented :meth:`!Signature.from_builtin` and :meth:`!Signature."
"from_function` methods, deprecated since Python 3.5; use the :meth:"
"`Signature.from_callable() <inspect.Signature.from_callable>` method instead."
msgstr ""
"Os métodos não documentados :meth:`!Signature.from_builtin` e :meth:`!"
"Signature.from_function`, descontinuados desde o Python 3.5; use o método :"
"meth:`Signature.from_callable() <inspect.Signature.from_callable>`."

#: ../../whatsnew/3.11.rst:2030
msgid "(Contributed by Hugo van Kemenade in :issue:`45320`.)"
msgstr "(Contribuição de Hugo van Kemenade em :issue:`45320`.)"

#: ../../whatsnew/3.11.rst:2032
msgid ""
"Removed the :meth:`~object.__class_getitem__` method from :class:`pathlib."
"PurePath`, because it was not used and added by mistake in previous "
"versions. (Contributed by Nikita Sobolev in :issue:`46483`.)"
msgstr ""
"Removido o método :meth:`~object.__class_getitem__` de :class:`pathlib."
"PurePath`, pois não era usado e foi adicionado por engano em versões "
"anteriores. (Contribuição de Nikita Sobolev em :issue:`46483`.)"

#: ../../whatsnew/3.11.rst:2037
msgid ""
"Removed the :class:`!MailmanProxy` class in the :mod:`smtpd` module, as it "
"is unusable without the external :mod:`!mailman` package. (Contributed by "
"Donghee Na in :issue:`35800`.)"
msgstr ""
"Removida a classe :class:`!MailmanProxy` do módulo :mod:`smtpd`, pois ela "
"não pode ser usada sem o pacote :mod:`!mailman` externo. (Contribuição de "
"Dong-hee Na em :issue:`35800`.)"

#: ../../whatsnew/3.11.rst:2041
msgid ""
"Removed the deprecated :meth:`!split` method of :class:`!_tkinter."
"TkappType`. (Contributed by Erlend E. Aasland in :issue:`38371`.)"
msgstr ""
"Removido o método descontinuado :meth:`!split` de :class:`!_tkinter."
"TkappType`. (Contribuição de Erlend E. Aasland em :issue:`38371`.)"

#: ../../whatsnew/3.11.rst:2044
msgid ""
"Removed namespace package support from :mod:`unittest` discovery. It was "
"introduced in Python 3.4 but has been broken since Python 3.7. (Contributed "
"by Inada Naoki in :issue:`23882`.)"
msgstr ""
"Removido o suporte a pacote de espaço de nomes da descoberta de :mod:"
"`unittest`. Foi introduzido no Python 3.4, mas está quebrado desde o Python "
"3.7. (Contribuição de Inada Naoki em :issue:`23882`.)"

#: ../../whatsnew/3.11.rst:2048
msgid ""
"Removed the undocumented private :meth:`!float.__set_format__()` method, "
"previously known as :meth:`!float.__setformat__()` in Python 3.7. Its "
"docstring said: \"You probably don't want to use this function. It exists "
"mainly to be used in Python's test suite.\" (Contributed by Victor Stinner "
"in :issue:`46852`.)"
msgstr ""
"Removido o método privado não documentado :meth:`!float.__set_format__()`, "
"anteriormente conhecido como :meth:`!float.__setformat__()` no Python 3.7. "
"Sua docstring dizia: \"Você provavelmente não quer usar esta função. Ela "
"existe principalmente para ser usada na conjunto de testes do Python."
"\" (Contribuição de Victor Stinner em :issue:`46852`.)"

#: ../../whatsnew/3.11.rst:2054
msgid ""
"The :option:`!--experimental-isolated-subinterpreters` configure flag (and "
"corresponding :c:macro:`!EXPERIMENTAL_ISOLATED_SUBINTERPRETERS` macro) have "
"been removed."
msgstr ""
"O sinalizador de configuração :option:`!--experimental-isolated-"
"subinterpreters` e a macro :c:macro:`!EXPERIMENTAL_ISOLATED_SUBINTERPRETERS` "
"correspondente foram removidos."

#: ../../whatsnew/3.11.rst:2058
msgid ""
"`Pynche <https://pypi.org/project/pynche/>`_ --- The Pythonically Natural "
"Color and Hue Editor --- has been moved out of ``Tools/scripts`` and is "
"`being developed independently <https://gitlab.com/warsaw/pynche/-/tree/"
"main>`_ from the Python source tree."
msgstr ""
"`Pynche <https://pypi.org/project/pynche/>`_ -- O Pythonically Natural Color "
"and Hue Editor -- foi removido de ``Tools/scripts`` e está `sendo "
"desenvolvido independentemente <https://gitlab.com/warsaw/pynche/-/tree/"
"main>`_ da árvore fonte do Python."

#: ../../whatsnew/3.11.rst:2068 ../../whatsnew/3.11.rst:2290
msgid "Porting to Python 3.11"
msgstr "Portando para Python 3.11"

#: ../../whatsnew/3.11.rst:2070
msgid ""
"This section lists previously described changes and other bugfixes in the "
"Python API that may require changes to your Python code."
msgstr ""
"Esta seção lista as alterações descritas anteriormente e outras correções de "
"bugs na API do Python que podem exigir alterações em seu código Python."

#: ../../whatsnew/3.11.rst:2073
msgid ""
"Porting notes for the C API are :ref:`listed separately <whatsnew311-c-api-"
"porting>`."
msgstr ""
"As notas de portabilidade para a API C são :ref:`listadas separadamente "
"<whatsnew311-c-api-porting>`."

#: ../../whatsnew/3.11.rst:2076
msgid ""
":func:`open`, :func:`io.open`, :func:`codecs.open` and :class:`fileinput."
"FileInput` no longer accept ``'U'`` (\"universal newline\") in the file "
"mode. In Python 3, \"universal newline\" mode is used by default whenever a "
"file is opened in text mode, and the ``'U'`` flag has been deprecated since "
"Python 3.3. The :ref:`newline parameter <open-newline-parameter>` to these "
"functions controls how universal newlines work. (Contributed by Victor "
"Stinner in :issue:`37330`.)"
msgstr ""
":func:`open`, :func:`io.open`, :func:`codecs.open` e :class:`fileinput."
"FileInput` não aceitam mais ``'U'`` (\"nova linha universal\") em o modo de "
"arquivo. No Python 3, o modo \"nova linha universal\" é usado por padrão "
"sempre que um arquivo é aberto no modo de texto, e o sinalizador ``'U'`` foi "
"descontinuado desde o Python 3.3. O :ref:`parâmetro de nova linha <open-"
"newline-parameter>` para essas funções controla como as novas linhas "
"universais funcionam. (Contribuição de Victor Stinner em :issue:`37330`.)"

#: ../../whatsnew/3.11.rst:2085
msgid ""
":class:`ast.AST` node positions are now validated when provided to :func:"
"`compile` and other related functions. If invalid positions are detected, a :"
"exc:`ValueError` will be raised. (Contributed by Pablo Galindo in :gh:"
"`93351`)"
msgstr ""
"As posições do nó da :class:`ast.AST` agora são validadas quando fornecidas "
"para :func:`compile` e outras funções relacionadas. Se posições inválidas "
"forem detectadas, uma exceção :exc:`ValueError` será levantado. "
"(Contribuição de Pablo Galindo em :gh:`93351`)"

#: ../../whatsnew/3.11.rst:2089
msgid ""
"Prohibited passing non-:class:`concurrent.futures.ThreadPoolExecutor` "
"executors to :meth:`asyncio.loop.set_default_executor` following a "
"deprecation in Python 3.8. (Contributed by Illia Volochii in :issue:`43234`.)"
msgstr ""
"Proibido passar executores que não sejam :class:`concurrent.futures."
"ThreadPoolExecutor` para :meth:`asyncio.loop.set_default_executor` após uma "
"descontinuação no Python 3.8. (Contribuição de Illia Volochii em :issue:"
"`43234`.)"

#: ../../whatsnew/3.11.rst:2094
msgid ""
":mod:`calendar`: The :class:`calendar.LocaleTextCalendar` and :class:"
"`calendar.LocaleHTMLCalendar` classes now use :func:`locale.getlocale`, "
"instead of using :func:`locale.getdefaultlocale`, if no locale is specified. "
"(Contributed by Victor Stinner in :issue:`46659`.)"
msgstr ""
":mod:`calendar`: As classes :class:`calendar.LocaleTextCalendar` e :class:"
"`calendar.LocaleHTMLCalendar` agora usam :func:`locale.getlocale`, em vez de "
"usar :func:`locale.getdefaultlocale`, se nenhuma localidade é especificada. "
"(Contribuição de Victor Stinner em :issue:`46659`.)"

#: ../../whatsnew/3.11.rst:2100
msgid ""
"The :mod:`pdb` module now reads the :file:`.pdbrc` configuration file with "
"the ``'UTF-8'`` encoding. (Contributed by Srinivas Reddy Thatiparthy (శ్రీనివాస్  "
"రెడ్డి తాటిపర్తి) in :issue:`41137`.)"
msgstr ""
"O módulo :mod:`pdb` agora lê o arquivo de configuração :file:`.pdbrc` com a "
"codificação ``'UTF-8'``. (Contribuição de Srinivas Reddy Thatiparty (శ్రీనివాస్ "
"రెడ్డి తాటిపర్తి) em :issue:`41137`.)"

#: ../../whatsnew/3.11.rst:2104
msgid ""
"The *population* parameter of :func:`random.sample` must be a sequence, and "
"automatic conversion of :class:`set`\\s to :class:`list`\\s is no longer "
"supported. Also, if the sample size is larger than the population size, a :"
"exc:`ValueError` is raised. (Contributed by Raymond Hettinger in :issue:"
"`40465`.)"
msgstr ""
"O parâmetro *population* de :func:`random.sample` deve ser uma sequência, e "
"a conversão automática de :class:`set`\\s para :class:`list`\\s não é mais "
"suportada. Além disso, se o tamanho da amostra for maior que o tamanho da "
"população, uma exceção :exc:`ValueError` é levantada. (Contribuição de "
"Raymond Hettinger em :issue:`40465`.)"

#: ../../whatsnew/3.11.rst:2110
msgid ""
"The *random* optional parameter of :func:`random.shuffle` was removed. It "
"was previously an arbitrary random function to use for the shuffle; now, :"
"func:`random.random` (its previous default) will always be used."
msgstr ""
"O parâmetro opcional *random* de :func:`random.shuffle` foi removido. "
"Anteriormente, era uma função aleatória arbitrária a ser usada para o "
"shuffle; agora, :func:`random.random` (seu padrão anterior) sempre será "
"usado."

#: ../../whatsnew/3.11.rst:2114
msgid ""
"In :mod:`re` :ref:`re-syntax`, global inline flags (e.g. ``(?i)``) can now "
"only be used at the start of regular expressions. Using them elsewhere has "
"been deprecated since Python 3.6. (Contributed by Serhiy Storchaka in :issue:"
"`47066`.)"
msgstr ""
"Em :ref:`re-syntax` do :mod:`re`, sinalizadores globais inline (por exemplo, "
"``(?i)``) agora só podem ser usados no início de expressões regulares. Se "
"uso em outro lugar foi descontinuado no Python 3.6. (Contribuição de Serhiy "
"Storchaka em :issue:`47066`.)"

#: ../../whatsnew/3.11.rst:2119
msgid ""
"In the :mod:`re` module, several long-standing bugs where fixed that, in "
"rare cases, could cause capture groups to get the wrong result. Therefore, "
"this could change the captured output in these cases. (Contributed by Ma Lin "
"in :issue:`35859`.)"
msgstr ""
"No módulo :mod:`re`, vários bugs de longa data foram corrigidos que, em "
"casos raros, poderiam fazer com que os grupos de captura obtivessem o "
"resultado errado. Portanto, isso pode alterar a saída capturada nesses "
"casos. (Contribuição de Ma Lin em :issue:`35859`.)"

#: ../../whatsnew/3.11.rst:2128
msgid "Build Changes"
msgstr "Alterações de compilação"

#: ../../whatsnew/3.11.rst:2130
msgid ""
"CPython now has :pep:`11` :pep:`Tier 3 support <11#tier-3>` for cross "
"compiling to the `WebAssembly <https://webassembly.org/>`_ platforms "
"`Emscripten <https://emscripten.org/>`_ (``wasm32-unknown-emscripten``, i.e. "
"Python in the browser) and `WebAssembly System Interface (WASI) <https://"
"wasi.dev/>`_ (``wasm32-unknown-wasi``). The effort is inspired by previous "
"work like `Pyodide <https://pyodide.org/>`_. These platforms provide a "
"limited subset of POSIX APIs; Python standard libraries features and modules "
"related to networking, processes, threading, signals, mmap, and users/groups "
"are not available or don't work. (Emscripten contributed by Christian Heimes "
"and Ethan Smith in :gh:`84461` and WASI contributed by Christian Heimes in :"
"gh:`90473`; platforms promoted in :gh:`95085`)"
msgstr ""
"CPython agora tem :pep:`suporte a Tier 3 <11#tier-3>` da :pep:`11` para "
"compilação cruzada para as plataformas `WebAssembly <https://webassembly.org/"
">`_ `Emscripten <https://emscripten.org/>`_ (``wasm32-unknown-emscripten``, "
"ou seja, Python no navegador) e `WebAssembly System Interface (WASI) "
"<https://wasi.dev/>`_ (``wasm32-unknown-wasi``). O esforço é inspirado em "
"trabalhos anteriores como `Pyodide <https://pyodide.org/>`_. Essas "
"plataformas fornecem um subconjunto limitado de APIs POSIX; Os recursos e "
"módulos das bibliotecas padrão do Python relacionados a redes, processos, "
"encadeamento, sinais, mmap e usuários/grupos não estão disponíveis ou não "
"funcionam. (Emscripten contribuído por Christian Heimes e Ethan Smith em :gh:"
"`84461` e WASI contribuído por Christian Heimes em :gh:`90473`; plataformas "
"promovidas em :gh:`95085`)"

#: ../../whatsnew/3.11.rst:2144
msgid "Building CPython now requires:"
msgstr "A construção do CPython agora requer:"

#: ../../whatsnew/3.11.rst:2146
msgid ""
"A `C11 <https://en.cppreference.com/w/c/11>`_ compiler and standard library. "
"`Optional C11 features <https://en.wikipedia.org/wiki/"
"C11_(C_standard_revision)#Optional_features>`_ are not required. "
"(Contributed by Victor Stinner in :issue:`46656`, :issue:`45440` and :issue:"
"`46640`.)"
msgstr ""
"Um compilador `C11 <https://en.cppreference.com/w/c/11>`_. `Recursos C11 "
"opcionais <https://en.wikipedia.org/wiki/"
"C11_(C_standard_revision)#Optional_features>`_ não são necessários. "
"(Contribuição de Victor Stinner em :issue:`46656`, :issue:`45440` e :issue:"
"`46640`.)"

#: ../../whatsnew/3.11.rst:2153
msgid ""
"Support for `IEEE 754 <https://en.wikipedia.org/wiki/IEEE_754>`_ floating "
"point numbers. (Contributed by Victor Stinner in :issue:`46917`.)"
msgstr ""
"Suporte para números de ponto flutuante `IEEE 754 <https://en.wikipedia.org/"
"wiki/IEEE_754>`_. (Contribuição de Victor Stinner em :issue:`46917`.)"

#: ../../whatsnew/3.11.rst:2157
msgid ""
"The :c:macro:`!Py_NO_NAN` macro has been removed. Since CPython now requires "
"IEEE 754 floats, NaN values are always available. (Contributed by Victor "
"Stinner in :issue:`46656`.)"
msgstr ""
"A macro :c:macro:`!Py_NO_NAN` foi removida. Como o CPython agora requer "
"pontos flutuantes de IEEE 754, os valores NaN estão sempre disponíveis. "
"(Contribuição de Victor Stinner em :issue:`46656`.)"

#: ../../whatsnew/3.11.rst:2161
msgid ""
"The :mod:`tkinter` package now requires `Tcl/Tk <https://www.tcl.tk>`_ "
"version 8.5.12 or newer. (Contributed by Serhiy Storchaka in :issue:`46996`.)"
msgstr ""
"O pacote :mod:`tkinter` agora requer `Tcl/Tk <https://www.tcl.tk>`_ versão "
"8.5.12 ou mais recente. (Contribuição de Serhiy Storchaka em :issue:`46996`.)"

#: ../../whatsnew/3.11.rst:2165
msgid ""
"Build dependencies, compiler flags, and linker flags for most stdlib "
"extension modules are now detected by :program:`configure`. libffi, libnsl, "
"libsqlite3, zlib, bzip2, liblzma, libcrypt, Tcl/Tk, and uuid flags are "
"detected by `pkg-config <https://www.freedesktop.org/wiki/Software/pkg-"
"config/>`_ (when available). :mod:`tkinter` now requires a pkg-config "
"command to detect development settings for `Tcl/Tk`_ headers and libraries. "
"(Contributed by Christian Heimes and Erlend Egeberg Aasland in :issue:"
"`45847`, :issue:`45747`, and :issue:`45763`.)"
msgstr ""
"Dependências de construção, sinalizadores de compilador e sinalizadores de "
"vinculador para a maioria dos módulos de extensão stdlib agora são "
"detectados pelo :program:`configure`. Os sinalizadores, ou *flags*, de "
"libffi, libnsl, libsqlite3, zlib, bzip2, liblzma, libcrypt, Tcl/Tk e uuid "
"são detectados por `pkg-config <https://www.freedesktop.org/wiki/Software/"
"pkg-config/>`_ (Quando disponível). :mod:`tkinter` agora requer um comando "
"pkg-config para detectar configurações de desenvolvimento para cabeçalhos e "
"bibliotecas `Tcl/Tk`_. (Contribuição de Christian Heimes e Erlend Egeberg "
"Aasland em :issue:`45847`, :issue:`45747` e :issue:`45763`.)"

#: ../../whatsnew/3.11.rst:2175
msgid ""
"libpython is no longer linked against libcrypt. (Contributed by Mike Gilbert "
"in :issue:`45433`.)"
msgstr ""
"libpython não está mais vinculado a libcrypt. (Contribuição de Mike Gilbert "
"em :issue:`45433`.)"

#: ../../whatsnew/3.11.rst:2178
msgid ""
"CPython can now be built with the `ThinLTO <https://clang.llvm.org/docs/"
"ThinLTO.html>`_ option via passing ``thin`` to :option:`--with-lto`, i.e. "
"``--with-lto=thin``. (Contributed by Donghee Na and Brett Holman in :issue:"
"`44340`.)"
msgstr ""
"O CPython agora pode ser construído com a opção `ThinLTO <https://clang.llvm."
"org/docs/ThinLTO.html>`_ passando ``thin`` para :option:`--with-lto`, ou "
"seja, ``--with-lto=thin``. (Contribuição de Donghee Na e Brett Holman em :"
"issue:`44340`.)"

#: ../../whatsnew/3.11.rst:2183
msgid ""
"Freelists for object structs can now be disabled. A new :program:`configure` "
"option :option:`!--without-freelists` can be used to disable all freelists "
"except empty tuple singleton. (Contributed by Christian Heimes in :issue:"
"`45522`.)"
msgstr ""

#: ../../whatsnew/3.11.rst:2188
msgid ""
"``Modules/Setup`` and ``Modules/makesetup`` have been improved and tied up. "
"Extension modules can now be built through ``makesetup``. All except some "
"test modules can be linked statically into a main binary or library. "
"(Contributed by Brett Cannon and Christian Heimes in :issue:`45548`, :issue:"
"`45570`, :issue:`45571`, and :issue:`43974`.)"
msgstr ""
"``Modules/Setup`` e ``Modules/makesetup`` foram melhorados e amarrados. "
"Módulos de extensão agora podem ser construídos através do ``makesetup``. "
"Todos, exceto alguns módulos de teste, podem ser vinculados estaticamente em "
"um binário principal ou biblioteca. (Contribuição de Brett Cannon e "
"Christian Heimes em :issue:`45548`, :issue:`45570`, :issue:`45571` e :issue:"
"`43974`.)"

#: ../../whatsnew/3.11.rst:2195
msgid ""
"Use the environment variables :envvar:`!TCLTK_CFLAGS` and :envvar:`!"
"TCLTK_LIBS` to manually specify the location of Tcl/Tk headers and "
"libraries. The :program:`configure` options :option:`!--with-tcltk-includes` "
"and :option:`!--with-tcltk-libs` have been removed."
msgstr ""
"Use as variáveis de ambiente :envvar:`!TCLTK_CFLAGS` e :envvar:`!TCLTK_LIBS` "
"para especificar manualmente a localização dos cabeçalhos e bibliotecas Tcl/"
"Tk. As opções :program:`configure` :option:`!--with-tcltk-includes` e :"
"option:`!--with-tcltk-libs` foram removidas."

#: ../../whatsnew/3.11.rst:2201
msgid ""
"On RHEL 7 and CentOS 7 the development packages do not provide ``tcl.pc`` "
"and ``tk.pc``; use ``TCLTK_LIBS=\"-ltk8.5 -ltkstub8.5 -ltcl8.5\"``. The "
"directory ``Misc/rhel7`` contains ``.pc`` files and instructions on how to "
"build Python with RHEL 7's and CentOS 7's Tcl/Tk and OpenSSL."
msgstr ""
"No RHEL 7 e CentOS 7 os pacotes de desenvolvimento não fornecem ``tcl.pc`` e "
"``tk.pc``; use ``TCLTK_LIBS=\"-ltk8.5 -ltkstub8.5 -ltcl8.5\"``. O diretório "
"``Misc/rhel7`` contém arquivos ``.pc`` e instruções sobre como construir "
"Python com RHEL 7's e CentOS 7's Tcl/Tk e OpenSSL."

#: ../../whatsnew/3.11.rst:2206
msgid ""
"CPython will now use 30-bit digits by default for the Python :class:`int` "
"implementation. Previously, the default was to use 30-bit digits on "
"platforms with ``SIZEOF_VOID_P >= 8``, and 15-bit digits otherwise. It's "
"still possible to explicitly request use of 15-bit digits via either the :"
"option:`--enable-big-digits` option to the configure script or (for Windows) "
"the ``PYLONG_BITS_IN_DIGIT`` variable in ``PC/pyconfig.h``, but this option "
"may be removed at some point in the future. (Contributed by Mark Dickinson "
"in :issue:`45569`.)"
msgstr ""
"O CPython agora usará dígitos de 30 bits por padrão para a implementação de :"
"class:`int` do Python. Anteriormente, o padrão era usar dígitos de 30 bits "
"em plataformas com ``SIZEOF_VOID_P >= 8`` e, caso contrário, dígitos de 15 "
"bits. Ainda é possível solicitar explicitamente o uso de dígitos de 15 bits "
"através da opção :option:`--enable-big-digits` para o script de configuração "
"ou (para Windows) a variável ``PYLONG_BITS_IN_DIGIT`` em ``PC/pyconfig.h``, "
"mas esta opção pode ser removida em algum momento no futuro. (Contribuição "
"de Mark Dickinson em :issue:`45569`.)"

#: ../../whatsnew/3.11.rst:2219
msgid "C API Changes"
msgstr "Alterações na API C"

#: ../../whatsnew/3.11.rst:2226
msgid ""
"Add a new :c:func:`PyType_GetName` function to get type's short name. "
"(Contributed by Hai Shi in :issue:`42035`.)"
msgstr ""
"Adiciona uma nova função :c:func:`PyType_GetName` para obter o nome curto do "
"tipo. (Contribuição de Hai Shi em :issue:`42035`.)"

#: ../../whatsnew/3.11.rst:2229
msgid ""
"Add a new :c:func:`PyType_GetQualName` function to get type's qualified "
"name. (Contributed by Hai Shi in :issue:`42035`.)"
msgstr ""
"Adiciona uma nova função :c:func:`PyType_GetQualName` para obter o nome "
"qualificado do tipo. (Contribuição de Hai Shi em :issue:`42035`.)"

#: ../../whatsnew/3.11.rst:2232
msgid ""
"Add new :c:func:`PyThreadState_EnterTracing` and :c:func:"
"`PyThreadState_LeaveTracing` functions to the limited C API to suspend and "
"resume tracing and profiling. (Contributed by Victor Stinner in :issue:"
"`43760`.)"
msgstr ""
"Adiciona novas funções :c:func:`PyThreadState_EnterTracing` e :c:func:"
"`PyThreadState_LeaveTracing` à API C limitada para suspender e retomar "
"rastreamento e criação de perfil. (Contribuição de Victor Stinner em :issue:"
"`43760`.)"

#: ../../whatsnew/3.11.rst:2237
msgid ""
"Added the :c:data:`Py_Version` constant which bears the same value as :c:"
"macro:`PY_VERSION_HEX`. (Contributed by  Gabriele N. Tornetta in :issue:"
"`43931`.)"
msgstr ""
"Adicionada a constante :c:data:`Py_Version` que possui o mesmo valor que :c:"
"macro:`PY_VERSION_HEX`. (Contribuição de Gabriele N. Tornetta em :issue:"
"`43931`.)"

#: ../../whatsnew/3.11.rst:2241
msgid ""
":c:type:`Py_buffer` and APIs are now part of the limited API and the stable "
"ABI:"
msgstr ""
":c:type:`Py_buffer` e APIs agora fazem parte da API limitada e da ABI "
"estável:"

#: ../../whatsnew/3.11.rst:2244
msgid ":c:func:`PyObject_CheckBuffer`"
msgstr ":c:func:`PyObject_CheckBuffer`"

#: ../../whatsnew/3.11.rst:2245
msgid ":c:func:`PyObject_GetBuffer`"
msgstr ":c:func:`PyObject_GetBuffer`"

#: ../../whatsnew/3.11.rst:2246
msgid ":c:func:`PyBuffer_GetPointer`"
msgstr ":c:func:`PyBuffer_GetPointer`"

#: ../../whatsnew/3.11.rst:2247
msgid ":c:func:`PyBuffer_SizeFromFormat`"
msgstr ":c:func:`PyBuffer_SizeFromFormat`"

#: ../../whatsnew/3.11.rst:2248
msgid ":c:func:`PyBuffer_ToContiguous`"
msgstr ":c:func:`PyBuffer_ToContiguous`"

#: ../../whatsnew/3.11.rst:2249
msgid ":c:func:`PyBuffer_FromContiguous`"
msgstr ":c:func:`PyBuffer_FromContiguous`"

#: ../../whatsnew/3.11.rst:2250
msgid ":c:func:`PyObject_CopyData`"
msgstr ":c:func:`PyObject_CopyData`"

#: ../../whatsnew/3.11.rst:2251
msgid ":c:func:`PyBuffer_IsContiguous`"
msgstr ":c:func:`PyBuffer_IsContiguous`"

#: ../../whatsnew/3.11.rst:2252
msgid ":c:func:`PyBuffer_FillContiguousStrides`"
msgstr ":c:func:`PyBuffer_FillContiguousStrides`"

#: ../../whatsnew/3.11.rst:2253
msgid ":c:func:`PyBuffer_FillInfo`"
msgstr ":c:func:`PyBuffer_FillInfo`"

#: ../../whatsnew/3.11.rst:2254
msgid ":c:func:`PyBuffer_Release`"
msgstr ":c:func:`PyBuffer_Release`"

#: ../../whatsnew/3.11.rst:2255
msgid ":c:func:`PyMemoryView_FromBuffer`"
msgstr ":c:func:`PyMemoryView_FromBuffer`"

#: ../../whatsnew/3.11.rst:2256
msgid ""
":c:member:`~PyBufferProcs.bf_getbuffer` and :c:member:`~PyBufferProcs."
"bf_releasebuffer` type slots"
msgstr ""
"Slotes de tipo :c:member:`~PyBufferProcs.bf_getbuffer` e :c:member:"
"`~PyBufferProcs.bf_releasebuffer`"

#: ../../whatsnew/3.11.rst:2259
msgid "(Contributed by Christian Heimes in :issue:`45459`.)"
msgstr "(Contribuição de Christian Heimes em :issue:`45459`.)"

#: ../../whatsnew/3.11.rst:2261
msgid ""
"Added the :c:func:`PyType_GetModuleByDef` function, used to get the module "
"in which a method was defined, in cases where this information is not "
"available directly (via :c:type:`PyCMethod`). (Contributed by Petr Viktorin "
"in :issue:`46613`.)"
msgstr ""
"Adicionada a função :c:func:`PyType_GetModuleByDef`, utilizada para obter o "
"módulo no qual um método foi definido, nos casos em que esta informação não "
"está disponível diretamente (via :c:type:`PyCMethod`). (Contribuição de Petr "
"Viktorin em :issue:`46613`.)"

#: ../../whatsnew/3.11.rst:2266
msgid ""
"Add new functions to pack and unpack C double (serialize and deserialize): :"
"c:func:`PyFloat_Pack2`, :c:func:`PyFloat_Pack4`, :c:func:`PyFloat_Pack8`, :c:"
"func:`PyFloat_Unpack2`, :c:func:`PyFloat_Unpack4` and :c:func:"
"`PyFloat_Unpack8`. (Contributed by Victor Stinner in :issue:`46906`.)"
msgstr ""
"Adiciona novas funções para compactar e desempacotar double C (serializar e "
"desserializar): :c:func:`PyFloat_Pack2`, :c:func:`PyFloat_Pack4`, :c:func:"
"`PyFloat_Pack8`, :c:func:`PyFloat_Unpack2` , :c:func:`PyFloat_Unpack4` e :c:"
"func:`PyFloat_Unpack8`. (Contribuição de Victor Stinner em :issue:`46906`.)"

#: ../../whatsnew/3.11.rst:2272
msgid ""
"Add new functions to get frame object attributes: :c:func:"
"`PyFrame_GetBuiltins`, :c:func:`PyFrame_GetGenerator`, :c:func:"
"`PyFrame_GetGlobals`, :c:func:`PyFrame_GetLasti`."
msgstr ""
"Adiciona novas funções para obter atributos do objeto quadro: :c:func:"
"`PyFrame_GetBuiltins`, :c:func:`PyFrame_GetGenerator`, :c:func:"
"`PyFrame_GetGlobals`, :c:func:`PyFrame_GetLasti`."

#: ../../whatsnew/3.11.rst:2276
msgid ""
"Added two new functions to get and set the active exception instance: :c:"
"func:`PyErr_GetHandledException` and :c:func:`PyErr_SetHandledException`. "
"These are alternatives to :c:func:`PyErr_SetExcInfo()` and :c:func:"
"`PyErr_GetExcInfo()` which work with the legacy 3-tuple representation of "
"exceptions. (Contributed by Irit Katriel in :issue:`46343`.)"
msgstr ""
"Adicionadas duas novas funções para obter e definir a instância de exceção "
"ativa: :c:func:`PyErr_GetHandledException` e :c:func:"
"`PyErr_SetHandledException`. Estas são alternativas para :c:func:"
"`PyErr_SetExcInfo()` e :c:func:`PyErr_GetExcInfo()` que funcionam com a "
"representação de tuplas de 3 elementos legadas de exceções. (Contribuição de "
"Irit Katriel em :issue:`46343`.)"

#: ../../whatsnew/3.11.rst:2283
msgid ""
"Added the :c:member:`PyConfig.safe_path` member. (Contributed by Victor "
"Stinner in :gh:`57684`.)"
msgstr ""
"Adicionada o membro :c:member:`PyConfig.safe_path`. (Contribuição de Victor "
"Stinner em :gh:`57684`.)"

#: ../../whatsnew/3.11.rst:2294
msgid ""
"Some macros have been converted to static inline functions to avoid `macro "
"pitfalls <https://gcc.gnu.org/onlinedocs/cpp/Macro-Pitfalls.html>`_. The "
"change should be mostly transparent to users, as the replacement functions "
"will cast their arguments to the expected types to avoid compiler warnings "
"due to static type checks. However, when the limited C API is set to >=3.11, "
"these casts are not done, and callers will need to cast arguments to their "
"expected types. See :pep:`670` for more details. (Contributed by Victor "
"Stinner and Erlend E. Aasland in :gh:`89653`.)"
msgstr ""
"Algumas macros foram convertidas em funções inline estáticas para evitar "
"`armadilhas de macro <https://gcc.gnu.org/onlinedocs/cpp/Macro-Pitfalls."
"html>`_. A alteração deve ser transparente para os usuários, pois as funções "
"de substituição converterão seus argumentos para os tipos esperados para "
"evitar avisos do compilador devido a verificações de tipo estático. No "
"entanto, quando a API C limitada é definida como >=3.11, essas conversões "
"não são feitas e os chamadores precisarão converter argumentos para seus "
"tipos esperados. Veja :pep:`670` para mais detalhes. (Contribuição de Victor "
"Stinner e Erlend E. Aasland em :gh:`89653`.)"

#: ../../whatsnew/3.11.rst:2305
msgid ""
":c:func:`PyErr_SetExcInfo()` no longer uses the ``type`` and ``traceback`` "
"arguments, the interpreter now derives those values from the exception "
"instance (the ``value`` argument). The function still steals references of "
"all three arguments. (Contributed by Irit Katriel in :issue:`45711`.)"
msgstr ""
":c:func:`PyErr_SetExcInfo()` não usa mais os argumentos ``type`` e "
"``traceback``, o interpretador agora deriva esses valores da instância de "
"exceção (o argumento ``value``). A função ainda rouba referências de todos "
"os três argumentos. (Contribuição de Irit Katriel em :issue:`45711`.)"

#: ../../whatsnew/3.11.rst:2311
msgid ""
":c:func:`PyErr_GetExcInfo()` now derives the ``type`` and ``traceback`` "
"fields of the result from the exception instance (the ``value`` field). "
"(Contributed by Irit Katriel in :issue:`45711`.)"
msgstr ""
":c:func:`PyErr_GetExcInfo()` agora deriva os campos ``type`` e ``traceback`` "
"do resultado da instância de exceção (o campo ``value``). (Contribuição de "
"Irit Katriel em :issue:`45711`.)"

#: ../../whatsnew/3.11.rst:2315
msgid ""
":c:struct:`_frozen` has a new ``is_package`` field to indicate whether or "
"not the frozen module is a package.  Previously, a negative value in the "
"``size`` field was the indicator.  Now only non-negative values be used for "
"``size``. (Contributed by Kumar Aditya in :issue:`46608`.)"
msgstr ""
":c:struct:`_frozen` tem um novo campo ``is_package`` para indicar se o "
"módulo frozen é ou não um pacote. Anteriormente, um valor negativo no campo "
"``size`` era o indicador. Agora apenas valores não negativos serão usados "
"para ``size``. (Contribuição de Kumar Aditya em :issue:`46608`.)"

#: ../../whatsnew/3.11.rst:2321
msgid ""
":c:func:`_PyFrameEvalFunction` now takes ``_PyInterpreterFrame*`` as its "
"second parameter, instead of ``PyFrameObject*``. See :pep:`523` for more "
"details of how to use this function pointer type."
msgstr ""
":c:func:`_PyFrameEvalFunction` agora usa ``_PyInterpreterFrame*`` como seu "
"segundo parâmetro, em vez de ``PyFrameObject*``. Veja :pep:`523` para mais "
"detalhes de como usar este tipo de ponteiro de função."

#: ../../whatsnew/3.11.rst:2325
msgid ""
":c:func:`PyCode_New` and :c:func:`PyCode_NewWithPosOnlyArgs` now take an "
"additional ``exception_table`` argument. Using these functions should be "
"avoided, if at all possible. To get a custom code object: create a code "
"object using the compiler, then get a modified version with the ``replace`` "
"method."
msgstr ""
":c:func:`PyCode_New` e :c:func:`PyCode_NewWithPosOnlyArgs` agora recebem um "
"argumento adicional ``exception_table``. O uso dessas funções deve ser "
"evitado, se possível. Para obter um objeto código personalizado: crie um "
"objeto código usando o compilador e obtenha uma versão modificada com o "
"método ``replace``."

#: ../../whatsnew/3.11.rst:2331
msgid ""
":c:type:`PyCodeObject` no longer has the ``co_code``, ``co_varnames``, "
"``co_cellvars`` and ``co_freevars`` fields.  Instead, use :c:func:"
"`PyCode_GetCode`, :c:func:`PyCode_GetVarnames`, :c:func:`PyCode_GetCellvars` "
"and :c:func:`PyCode_GetFreevars` respectively to access them via the C API. "
"(Contributed by Brandt Bucher in :issue:`46841` and Ken Jin in :gh:`92154` "
"and :gh:`94936`.)"
msgstr ""
":c:type:`PyCodeObject` não possui mais os campos ``co_code``, "
"``co_varnames``, ``co_cellvars`` e ``co_freevars``. Em vez disso, use :c:"
"func:`PyCode_GetCode`, :c:func:`PyCode_GetVarnames`, :c:func:"
"`PyCode_GetCellvars` e :c:func:`PyCode_GetFreevars` respectivamente para "
"acessá-los por meio da API C. (Contribuição de Brandt Bucher em :issue:"
"`46841` e Ken Jin em :gh:`92154` e :gh:`94936`.)"

#: ../../whatsnew/3.11.rst:2339
msgid ""
"The old trashcan macros (``Py_TRASHCAN_SAFE_BEGIN``/"
"``Py_TRASHCAN_SAFE_END``) are now deprecated. They should be replaced by the "
"new macros ``Py_TRASHCAN_BEGIN`` and ``Py_TRASHCAN_END``."
msgstr ""
"As antigas macros trashcan (``Py_TRASHCAN_SAFE_BEGIN``/"
"``Py_TRASHCAN_SAFE_END``) foram descontinuadas. Elas devem ser substituídas "
"pelas novas macros ``Py_TRASHCAN_BEGIN`` e ``Py_TRASHCAN_END``."

#: ../../whatsnew/3.11.rst:2343
msgid "A tp_dealloc function that has the old macros, such as::"
msgstr "Uma função tp_dealloc que possui as macros antigas, como::"

#: ../../whatsnew/3.11.rst:2354
msgid "should migrate to the new macros as follows::"
msgstr "deve migrar para as novas macros da seguinte forma::"

#: ../../whatsnew/3.11.rst:2365
msgid ""
"Note that ``Py_TRASHCAN_BEGIN`` has a second argument which should be the "
"deallocation function it is in."
msgstr ""
"Observe que ``Py_TRASHCAN_BEGIN`` tem um segundo argumento que deve ser a "
"função de desalocação em que está."

#: ../../whatsnew/3.11.rst:2368
msgid ""
"To support older Python versions in the same codebase, you can define the "
"following macros and use them throughout the code (credit: these were copied "
"from the ``mypy`` codebase)::"
msgstr ""
"Para oferecer suporte a versões mais antigas do Python na mesma base de "
"código, você pode definir as seguintes macros e usá-las em todo o código "
"(crédito: elas foram copiadas da base de código do ``mypy``)::"

#: ../../whatsnew/3.11.rst:2380
msgid ""
"The :c:func:`PyType_Ready` function now raises an error if a type is defined "
"with the :c:macro:`Py_TPFLAGS_HAVE_GC` flag set but has no traverse function "
"(:c:member:`PyTypeObject.tp_traverse`). (Contributed by Victor Stinner in :"
"issue:`44263`.)"
msgstr ""
"A função :c:func:`PyType_Ready` agora levanta um erro se um tipo é definido "
"com o sinalizador :c:macro:`Py_TPFLAGS_HAVE_GC` definido, mas não tem função "
"transversal (:c:member:`PyTypeObject.tp_traverse`). (Contribuição de Victor "
"Stinner em :issue:`44263`.)"

#: ../../whatsnew/3.11.rst:2385
msgid ""
"Heap types with the :c:macro:`Py_TPFLAGS_IMMUTABLETYPE` flag can now inherit "
"the :pep:`590` vectorcall protocol.  Previously, this was only possible for :"
"ref:`static types <static-types>`. (Contributed by Erlend E. Aasland in :"
"issue:`43908`)"
msgstr ""
"Tipos de heap com o sinalizador :c:macro:`Py_TPFLAGS_IMMUTABLETYPE` agora "
"podem herdar o protocolo vectorcall da :pep:`590`. Anteriormente, isso só "
"era possível para :ref:`tipos estáticos <static-types>`. (Contribuição de "
"Erlend E. Aasland em :issue:`43908`)"

#: ../../whatsnew/3.11.rst:2390
msgid ""
"Since :c:func:`Py_TYPE()` is changed to a inline static function, "
"``Py_TYPE(obj) = new_type`` must be replaced with ``Py_SET_TYPE(obj, "
"new_type)``: see the :c:func:`Py_SET_TYPE()` function (available since "
"Python 3.9). For backward compatibility, this macro can be used::"
msgstr ""
"Uma vez que :c:func:`Py_TYPE()` é alterada para uma função estática inline, "
"``Py_TYPE(obj) = new_type`` deve ser substituído por ``Py_SET_TYPE(obj, "
"new_type)``: consulte a função :c:func:`Py_SET_TYPE()` (disponível desde "
"Python 3.9). Para compatibilidade com versões anteriores, esta macro pode "
"ser usada::"

#: ../../whatsnew/3.11.rst:2402 ../../whatsnew/3.11.rst:2416
msgid "(Contributed by Victor Stinner in :issue:`39573`.)"
msgstr "(Contribuição de Victor Stinner em :issue:`39573`.)"

#: ../../whatsnew/3.11.rst:2404
msgid ""
"Since :c:func:`Py_SIZE()` is changed to a inline static function, "
"``Py_SIZE(obj) = new_size`` must be replaced with ``Py_SET_SIZE(obj, "
"new_size)``: see the :c:func:`Py_SET_SIZE()` function (available since "
"Python 3.9). For backward compatibility, this macro can be used::"
msgstr ""
"Uma vez que :c:func:`Py_SIZE()` é alterada para uma função estática inline, "
"``Py_SIZE(obj) = new_size`` deve ser substituído por ``Py_SET_SIZE(obj, "
"new_size)``: veja a função :c:func:`Py_SET_SIZE()` (disponível desde Python "
"3.9). Para compatibilidade com versões anteriores, esta macro pode ser "
"usada::"

#: ../../whatsnew/3.11.rst:2418
msgid ""
"``<Python.h>`` no longer includes the header files ``<stdlib.h>``, ``<stdio."
"h>``, ``<errno.h>`` and ``<string.h>`` when the ``Py_LIMITED_API`` macro is "
"set to ``0x030b0000`` (Python 3.11) or higher. C extensions should "
"explicitly include the header files after ``#include <Python.h>``. "
"(Contributed by Victor Stinner in :issue:`45434`.)"
msgstr ""
"``<Python.h>`` não inclui mais os arquivos de cabeçalho ``<stdlib.h>``, "
"``<stdio.h>``, ``<errno.h>`` e ``<string.h>`` quando a macro "
"``Py_LIMITED_API`` é definida como ``0x030b0000`` (Python 3.11) ou superior. "
"As extensões C devem incluir explicitamente os arquivos de cabeçalho após "
"``#include <Python.h>``. (Contribuição de Victor Stinner em :issue:`45434`.)"

#: ../../whatsnew/3.11.rst:2424
msgid ""
"The non-limited API files ``cellobject.h``, ``classobject.h``, ``code.h``, "
"``context.h``, ``funcobject.h``, ``genobject.h`` and ``longintrepr.h`` have "
"been moved to the ``Include/cpython`` directory. Moreover, the ``eval.h`` "
"header file was removed. These files must not be included directly, as they "
"are already included in ``Python.h``: :ref:`Include Files <api-includes>`. "
"If they have been included directly, consider including ``Python.h`` "
"instead. (Contributed by Victor Stinner in :issue:`35134`.)"
msgstr ""
"Os arquivos API não limitados ``cellobject.h``, ``classobject.h``, ``code."
"h``, ``context.h``, ``funcobject.h``, ``genobject.h`` e ``longintrepr.h`` "
"foram movidos para o diretório ``Include/cpython``. Além disso, o arquivo de "
"cabeçalho ``eval.h`` foi removido. Esses arquivos não devem ser incluídos "
"diretamente, pois já estão incluídos aos :ref:`arquivos de inclusão <api-"
"includes>` do ``Python.h``. Se eles foram incluídos diretamente, considere "
"incluir ``Python.h`` em seu lugar. (Contribuição de Victor Stinner em :issue:"
"`35134`.)"

#: ../../whatsnew/3.11.rst:2432
msgid ""
"The :c:func:`PyUnicode_CHECK_INTERNED` macro has been excluded from the "
"limited C API. It was never usable there, because it used internal "
"structures which are not available in the limited C API. (Contributed by "
"Victor Stinner in :issue:`46007`.)"
msgstr ""
"A macro :c:func:`PyUnicode_CHECK_INTERNED` foi excluída da API C limitada. "
"Nunca foi utilizável lá, porque usava estruturas internas que não estão "
"disponíveis na API C limitada. (Contribuição de Victor Stinner em :issue:"
"`46007`.)"

#: ../../whatsnew/3.11.rst:2437
msgid ""
"The following frame functions and type are now directly available with "
"``#include <Python.h>``, it's no longer needed to add ``#include "
"<frameobject.h>``:"
msgstr ""
"As seguintes funções e tipo de quadro agora estão disponíveis diretamente "
"com ``#include <Python.h>``, não é mais necessário adicionar ``#include "
"<frameobject.h>``:"

#: ../../whatsnew/3.11.rst:2441
msgid ":c:func:`PyFrame_Check`"
msgstr ":c:func:`PyFrame_Check`"

#: ../../whatsnew/3.11.rst:2442
msgid ":c:func:`PyFrame_GetBack`"
msgstr ":c:func:`PyFrame_GetBack`"

#: ../../whatsnew/3.11.rst:2443
msgid ":c:func:`PyFrame_GetBuiltins`"
msgstr ":c:func:`PyFrame_GetBuiltins`"

#: ../../whatsnew/3.11.rst:2444
msgid ":c:func:`PyFrame_GetGenerator`"
msgstr ":c:func:`PyFrame_GetGenerator`"

#: ../../whatsnew/3.11.rst:2445
msgid ":c:func:`PyFrame_GetGlobals`"
msgstr ":c:func:`PyFrame_GetGlobals`"

#: ../../whatsnew/3.11.rst:2446
msgid ":c:func:`PyFrame_GetLasti`"
msgstr ":c:func:`PyFrame_GetLasti`"

#: ../../whatsnew/3.11.rst:2447
msgid ":c:func:`PyFrame_GetLocals`"
msgstr ":c:func:`PyFrame_GetLocals`"

#: ../../whatsnew/3.11.rst:2448
msgid ":c:type:`PyFrame_Type`"
msgstr ":c:type:`PyFrame_Type`"

#: ../../whatsnew/3.11.rst:2450
msgid "(Contributed by Victor Stinner in :gh:`93937`.)"
msgstr "(Contribuição de Victor Stinner em :gh:`93937`.)"

#: ../../whatsnew/3.11.rst:2454
msgid ""
"The :c:type:`PyFrameObject` structure members have been removed from the "
"public C API."
msgstr ""
"Os membros da estrutura :c:type:`PyFrameObject` foram removidos da API C "
"pública."

#: ../../whatsnew/3.11.rst:2457
msgid ""
"While the documentation notes that the :c:type:`PyFrameObject` fields are "
"subject to change at any time, they have been stable for a long time and "
"were used in several popular extensions."
msgstr ""
"Embora a documentação observe que os campos :c:type:`PyFrameObject` estão "
"sujeitos a alterações a qualquer momento, eles permaneceram estáveis por um "
"longo tempo e foram usados em várias extensões populares."

#: ../../whatsnew/3.11.rst:2461
msgid ""
"In Python 3.11, the frame struct was reorganized to allow performance "
"optimizations. Some fields were removed entirely, as they were details of "
"the old implementation."
msgstr ""
"No Python 3.11, a estrutura do quadro foi reorganizada para permitir "
"otimizações de desempenho. Alguns campos foram totalmente removidos, pois "
"eram detalhes da antiga implementação."

#: ../../whatsnew/3.11.rst:2465
msgid ":c:type:`PyFrameObject` fields:"
msgstr "Campos do :c:type:`PyFrameObject`:"

#: ../../whatsnew/3.11.rst:2467
msgid "``f_back``: use :c:func:`PyFrame_GetBack`."
msgstr "``f_back``: use :c:func:`PyFrame_GetBack`."

#: ../../whatsnew/3.11.rst:2468
msgid "``f_blockstack``: removed."
msgstr "``f_blockstack``: removido."

#: ../../whatsnew/3.11.rst:2469
msgid "``f_builtins``: use :c:func:`PyFrame_GetBuiltins`."
msgstr "``f_builtins``: use :c:func:`PyFrame_GetBuiltins`."

#: ../../whatsnew/3.11.rst:2470
msgid "``f_code``: use :c:func:`PyFrame_GetCode`."
msgstr "``f_code``: use :c:func:`PyFrame_GetCode`."

#: ../../whatsnew/3.11.rst:2471
msgid "``f_gen``: use :c:func:`PyFrame_GetGenerator`."
msgstr "``f_gen``: use :c:func:`PyFrame_GetGenerator`."

#: ../../whatsnew/3.11.rst:2472
msgid "``f_globals``: use :c:func:`PyFrame_GetGlobals`."
msgstr "``f_globals``: use :c:func:`PyFrame_GetGlobals`."

#: ../../whatsnew/3.11.rst:2473
msgid "``f_iblock``: removed."
msgstr "``f_iblock``: removido."

#: ../../whatsnew/3.11.rst:2474
msgid ""
"``f_lasti``: use :c:func:`PyFrame_GetLasti`. Code using ``f_lasti`` with "
"``PyCode_Addr2Line()`` should use :c:func:`PyFrame_GetLineNumber` instead; "
"it may be faster."
msgstr ""
"``f_lasti``: use :c:func:`PyFrame_GetLasti`. Código usando ``f_lasti`` com "
"``PyCode_Addr2Line()`` deve usar :c:func:`PyFrame_GetLineNumber`, pois deve "
"ser mais rápido."

#: ../../whatsnew/3.11.rst:2477
msgid "``f_lineno``: use :c:func:`PyFrame_GetLineNumber`"
msgstr "``f_lineno``: use :c:func:`PyFrame_GetLineNumber`"

#: ../../whatsnew/3.11.rst:2478
msgid "``f_locals``: use :c:func:`PyFrame_GetLocals`."
msgstr "``f_locals``: use :c:func:`PyFrame_GetLocals`."

#: ../../whatsnew/3.11.rst:2479
msgid "``f_stackdepth``: removed."
msgstr "``f_stackdepth``: removido."

#: ../../whatsnew/3.11.rst:2480
msgid "``f_state``: no public API (renamed to ``f_frame.f_state``)."
msgstr "``f_state``: nenhuma API pública (renomeado para ``f_frame.f_state``)."

#: ../../whatsnew/3.11.rst:2481
msgid "``f_trace``: no public API."
msgstr "``f_trace``: nenhuma API pública."

#: ../../whatsnew/3.11.rst:2482
msgid ""
"``f_trace_lines``: use ``PyObject_GetAttrString((PyObject*)frame, "
"\"f_trace_lines\")``."
msgstr ""
"``f_trace_lines``: use ``PyObject_GetAttrString((PyObject*)frame, "
"\"f_trace_lines\")``."

#: ../../whatsnew/3.11.rst:2483
msgid ""
"``f_trace_opcodes``: use ``PyObject_GetAttrString((PyObject*)frame, "
"\"f_trace_opcodes\")``."
msgstr ""
"``f_trace_opcodes``: use ``PyObject_GetAttrString((PyObject*)frame, "
"\"f_trace_opcodes\")``."

#: ../../whatsnew/3.11.rst:2484
msgid "``f_localsplus``: no public API (renamed to ``f_frame.localsplus``)."
msgstr ""
"``f_localsplus``: nenhuma API pública (renomeado para ``f_frame."
"localsplus``)."

#: ../../whatsnew/3.11.rst:2485
msgid "``f_valuestack``: removed."
msgstr "``f_valuestack``: removido."

#: ../../whatsnew/3.11.rst:2487
msgid ""
"The Python frame object is now created lazily. A side effect is that the :"
"attr:`~frame.f_back` member must not be accessed directly, since its value "
"is now also computed lazily. The :c:func:`PyFrame_GetBack` function must be "
"called instead."
msgstr ""
"O objeto quadro do Python agora é criado de forma \"preguiçosa\" (*lazy*). "
"Um efeito colateral é que o membro :attr:`~frame.f_back` não deve ser "
"acessado diretamente, já que seu valor agora também é calculado de forma "
"\"preguiçosa\". A função :c:func:`PyFrame_GetBack` deve ser chamada em seu "
"lugar."

#: ../../whatsnew/3.11.rst:2493
msgid ""
"Debuggers that accessed the :attr:`~frame.f_locals` directly *must* call :c:"
"func:`PyFrame_GetLocals` instead. They no longer need to call :c:func:`!"
"PyFrame_FastToLocalsWithError` or :c:func:`!PyFrame_LocalsToFast`, in fact "
"they should not call those functions. The necessary updating of the frame is "
"now managed by the virtual machine."
msgstr ""
"Depuradores que acessam :attr:`~frame.f_locals` diretamente *devem* chamar :"
"c:func:`PyFrame_GetLocals`. Eles não precisam mais chamar :c:func:`!"
"PyFrame_FastToLocalsWithError` ou :c:func:`!PyFrame_LocalsToFast`. Na "
"verdade, eles não devem chamar essas funções. A atualização necessária do "
"quadro agora é gerenciada pela máquina virtual."

#: ../../whatsnew/3.11.rst:2499
msgid "Code defining ``PyFrame_GetCode()`` on Python 3.8 and older::"
msgstr "Código definindo ``PyFrame_GetCode()`` no Python 3.8 e anteriores::"

#: ../../whatsnew/3.11.rst:2509
msgid "Code defining ``PyFrame_GetBack()`` on Python 3.8 and older::"
msgstr "Código definindo ``PyFrame_GetBack()`` no Python 3.8 e anteriores::"

#: ../../whatsnew/3.11.rst:2519
msgid ""
"Or use the `pythoncapi_compat project <https://github.com/python/pythoncapi-"
"compat>`__ to get these two functions on older Python versions."
msgstr ""
"Ou use o projeto `pythoncapi_compat <https://github.com/python/pythoncapi-"
"compat>`__ para obter essas duas funções em versões mais antigas do Python."

#: ../../whatsnew/3.11.rst:2523
msgid "Changes of the :c:type:`PyThreadState` structure members:"
msgstr "Mudanças nos membros da estrutura :c:type:`PyThreadState`:"

#: ../../whatsnew/3.11.rst:2525
msgid ""
"``frame``: removed, use :c:func:`PyThreadState_GetFrame` (function added to "
"Python 3.9 by :issue:`40429`). Warning: the function returns a :term:`strong "
"reference`, need to call :c:func:`Py_XDECREF`."
msgstr ""
"``frame``: removido, use :c:func:`PyThreadState_GetFrame` (função adicionada "
"ao Python 3.9 por :issue:`40429`). Aviso: a função retorna um :term:"
"`referência forte`, precisa chamar :c:func:`Py_XDECREF`."

#: ../../whatsnew/3.11.rst:2529
msgid ""
"``tracing``: changed, use :c:func:`PyThreadState_EnterTracing` and :c:func:"
"`PyThreadState_LeaveTracing` (functions added to Python 3.11 by :issue:"
"`43760`)."
msgstr ""
"``tracing``: alterado, use :c:func:`PyThreadState_EnterTracing` e :c:func:"
"`PyThreadState_LeaveTracing` (funções adicionadas ao Python 3.11 por :issue:"
"`43760`)."

#: ../../whatsnew/3.11.rst:2532
msgid ""
"``recursion_depth``: removed, use ``(tstate->recursion_limit - tstate-"
">recursion_remaining)`` instead."
msgstr ""
"``recursion_depth``: removido, use ``(tstate->recursion_limit - tstate-"
">recursion_remaining)``."

#: ../../whatsnew/3.11.rst:2534
msgid "``stackcheck_counter``: removed."
msgstr "``stackcheck_counter``: removido."

#: ../../whatsnew/3.11.rst:2536
msgid "Code defining ``PyThreadState_GetFrame()`` on Python 3.8 and older::"
msgstr ""
"Código definindo ``PyThreadState_GetFrame()`` no Python 3.8 e anteriores::"

#: ../../whatsnew/3.11.rst:2546
msgid ""
"Code defining ``PyThreadState_EnterTracing()`` and "
"``PyThreadState_LeaveTracing()`` on Python 3.10 and older::"
msgstr ""
"Código definindo ``PyThreadState_EnterTracing()`` e "
"``PyThreadState_LeaveTracing()`` no Python 3.10 e anteriores::"

#: ../../whatsnew/3.11.rst:2572
msgid ""
"Or use `the pythoncapi-compat project <https://github.com/python/pythoncapi-"
"compat>`__ to get these functions on old Python functions."
msgstr ""
"Ou use `o projeto pythoncapi-compat <https://github.com/python/pythoncapi-"
"compat>`__ para obter essas funções em funções antigas do Python."

#: ../../whatsnew/3.11.rst:2576
msgid ""
"Distributors are encouraged to build Python with the optimized Blake2 "
"library `libb2`_."
msgstr ""
"Os distribuidores são encorajados a compilar o Python com a biblioteca "
"Blake2 otimizada `libb2`_."

#: ../../whatsnew/3.11.rst:2579
msgid ""
"The :c:member:`PyConfig.module_search_paths_set` field must now be set to 1 "
"for initialization to use :c:member:`PyConfig.module_search_paths` to "
"initialize :data:`sys.path`. Otherwise, initialization will recalculate the "
"path and replace any values added to ``module_search_paths``."
msgstr ""
"O campo :c:member:`PyConfig.module_search_paths_set` agora deve ser definido "
"como 1 para inicialização para usar :c:member:`PyConfig.module_search_paths` "
"para inicializar :data:`sys.path`. Caso contrário, a inicialização "
"recalculará o caminho e substituirá quaisquer valores adicionados a "
"``module_search_paths``."

#: ../../whatsnew/3.11.rst:2584
msgid ""
":c:func:`PyConfig_Read` no longer calculates the initial search path, and "
"will not fill any values into :c:member:`PyConfig.module_search_paths`. To "
"calculate default paths and then modify them, finish initialization and use :"
"c:func:`PySys_GetObject` to retrieve :data:`sys.path` as a Python list "
"object and modify it directly."
msgstr ""
":c:func:`PyConfig_Read` não calcula mais o caminho de pesquisa inicial e não "
"preencherá nenhum valor em :c:member:`PyConfig.module_search_paths`. Para "
"calcular caminhos padrão e modificá-los, termine a inicialização e use :c:"
"func:`PySys_GetObject` para recuperar :data:`sys.path` como um objeto lista "
"do Python e modifique-o diretamente."

#: ../../whatsnew/3.11.rst:2595
msgid ""
"Deprecate the following functions to configure the Python initialization:"
msgstr ""
"Descontinua as seguintes funções para configurar a inicialização do Python:"

#: ../../whatsnew/3.11.rst:2597
msgid ":c:func:`!PySys_AddWarnOptionUnicode`"
msgstr ":c:func:`!PySys_AddWarnOptionUnicode`"

#: ../../whatsnew/3.11.rst:2598
msgid ":c:func:`!PySys_AddWarnOption`"
msgstr ":c:func:`!PySys_AddWarnOption`"

#: ../../whatsnew/3.11.rst:2599
msgid ":c:func:`!PySys_AddXOption`"
msgstr ":c:func:`!PySys_AddXOption`"

#: ../../whatsnew/3.11.rst:2600
msgid ":c:func:`!PySys_HasWarnOptions`"
msgstr ":c:func:`!PySys_HasWarnOptions`"

#: ../../whatsnew/3.11.rst:2601
msgid ":c:func:`!PySys_SetArgvEx`"
msgstr ":c:func:`!PySys_SetArgvEx`"

#: ../../whatsnew/3.11.rst:2602
msgid ":c:func:`!PySys_SetArgv`"
msgstr ":c:func:`!PySys_SetArgv`"

#: ../../whatsnew/3.11.rst:2603
msgid ":c:func:`!PySys_SetPath`"
msgstr ":c:func:`!PySys_SetPath`"

#: ../../whatsnew/3.11.rst:2604
msgid ":c:func:`!Py_SetPath`"
msgstr ":c:func:`!Py_SetPath`"

#: ../../whatsnew/3.11.rst:2605
msgid ":c:func:`!Py_SetProgramName`"
msgstr ":c:func:`!Py_SetProgramName`"

#: ../../whatsnew/3.11.rst:2606
msgid ":c:func:`!Py_SetPythonHome`"
msgstr ":c:func:`!Py_SetPythonHome`"

#: ../../whatsnew/3.11.rst:2607
msgid ":c:func:`!Py_SetStandardStreamEncoding`"
msgstr ":c:func:`!Py_SetStandardStreamEncoding`"

#: ../../whatsnew/3.11.rst:2608
msgid ":c:func:`!_Py_SetProgramFullPath`"
msgstr ":c:func:`!_Py_SetProgramFullPath`"

#: ../../whatsnew/3.11.rst:2610
msgid ""
"Use the new :c:type:`PyConfig` API of the :ref:`Python Initialization "
"Configuration <init-config>` instead (:pep:`587`). (Contributed by Victor "
"Stinner in :gh:`88279`.)"
msgstr ""
"Em vez disso, use a nova API :c:type:`PyConfig` da :ref:`Configuração de "
"Inicialização do Python <init-config>` (:pep:`587`). (Contribuição de Victor "
"Stinner em :gh:`88279`.)"

#: ../../whatsnew/3.11.rst:2614
msgid ""
"Deprecate the ``ob_shash`` member of the :c:type:`PyBytesObject`. Use :c:"
"func:`PyObject_Hash` instead. (Contributed by Inada Naoki in :issue:`46864`.)"
msgstr ""
"Descontinua o membro ``ob_shash`` do :c:type:`PyBytesObject`. Use :c:func:"
"`PyObject_Hash` em vez disso. (Contribuição de Inada Naoki em :issue:"
"`46864`.)"

#: ../../whatsnew/3.11.rst:2623
msgid ""
"The following C APIs have been deprecated in earlier Python releases, and "
"will be removed in Python 3.12."
msgstr ""
"As seguintes APIs C foram descontinuadas em versões anteriores do Python e "
"serão removidas no Python 3.12."

#: ../../whatsnew/3.11.rst:2626
msgid ":c:func:`!PyUnicode_AS_DATA`"
msgstr ":c:func:`!PyUnicode_AS_DATA`"

#: ../../whatsnew/3.11.rst:2627
msgid ":c:func:`!PyUnicode_AS_UNICODE`"
msgstr ":c:func:`!PyUnicode_AS_UNICODE`"

#: ../../whatsnew/3.11.rst:2628
msgid ":c:func:`!PyUnicode_AsUnicodeAndSize`"
msgstr ":c:func:`!PyUnicode_AsUnicodeAndSize`"

#: ../../whatsnew/3.11.rst:2629
msgid ":c:func:`!PyUnicode_AsUnicode`"
msgstr ":c:func:`!PyUnicode_AsUnicode`"

#: ../../whatsnew/3.11.rst:2630
msgid ":c:func:`!PyUnicode_FromUnicode`"
msgstr ":c:func:`!PyUnicode_FromUnicode`"

#: ../../whatsnew/3.11.rst:2631
msgid ":c:func:`!PyUnicode_GET_DATA_SIZE`"
msgstr ":c:func:`!PyUnicode_GET_DATA_SIZE`"

#: ../../whatsnew/3.11.rst:2632
msgid ":c:func:`!PyUnicode_GET_SIZE`"
msgstr ":c:func:`!PyUnicode_GET_SIZE`"

#: ../../whatsnew/3.11.rst:2633
msgid ":c:func:`!PyUnicode_GetSize`"
msgstr ":c:func:`!PyUnicode_GetSize`"

#: ../../whatsnew/3.11.rst:2634
msgid ":c:func:`!PyUnicode_IS_COMPACT`"
msgstr ":c:func:`!PyUnicode_IS_COMPACT`"

#: ../../whatsnew/3.11.rst:2635
msgid ":c:func:`!PyUnicode_IS_READY`"
msgstr ":c:func:`!PyUnicode_IS_READY`"

#: ../../whatsnew/3.11.rst:2636
msgid ":c:func:`PyUnicode_READY`"
msgstr ":c:func:`PyUnicode_READY`"

#: ../../whatsnew/3.11.rst:2637
msgid ":c:func:`!PyUnicode_WSTR_LENGTH`"
msgstr ":c:func:`!PyUnicode_WSTR_LENGTH`"

#: ../../whatsnew/3.11.rst:2638
msgid ":c:func:`!_PyUnicode_AsUnicode`"
msgstr ":c:func:`!_PyUnicode_AsUnicode`"

#: ../../whatsnew/3.11.rst:2639
msgid ":c:macro:`!PyUnicode_WCHAR_KIND`"
msgstr ":c:macro:`!PyUnicode_WCHAR_KIND`"

#: ../../whatsnew/3.11.rst:2640
msgid ":c:type:`PyUnicodeObject`"
msgstr ":c:type:`PyUnicodeObject`"

#: ../../whatsnew/3.11.rst:2641
msgid ":c:func:`!PyUnicode_InternImmortal`"
msgstr ":c:func:`!PyUnicode_InternImmortal`"

#: ../../whatsnew/3.11.rst:2649
msgid ""
":c:func:`!PyFrame_BlockSetup` and :c:func:`!PyFrame_BlockPop` have been "
"removed. (Contributed by Mark Shannon in :issue:`40222`.)"
msgstr ""
":c:func:`!PyFrame_BlockSetup` e :c:func:`!PyFrame_BlockPop` foram removidas. "
"(Contribuição de Mark Shannon em :issue:`40222`.)"

#: ../../whatsnew/3.11.rst:2653
msgid "Remove the following math macros using the ``errno`` variable:"
msgstr "Remove as seguintes macros matemáticas usando a variável ``errno``:"

#: ../../whatsnew/3.11.rst:2655
msgid "``Py_ADJUST_ERANGE1()``"
msgstr "``Py_ADJUST_ERANGE1()``"

#: ../../whatsnew/3.11.rst:2656
msgid "``Py_ADJUST_ERANGE2()``"
msgstr "``Py_ADJUST_ERANGE2()``"

#: ../../whatsnew/3.11.rst:2657
msgid "``Py_OVERFLOWED()``"
msgstr "``Py_OVERFLOWED()``"

#: ../../whatsnew/3.11.rst:2658
msgid "``Py_SET_ERANGE_IF_OVERFLOW()``"
msgstr "``Py_SET_ERANGE_IF_OVERFLOW()``"

#: ../../whatsnew/3.11.rst:2659
msgid "``Py_SET_ERRNO_ON_MATH_ERROR()``"
msgstr "``Py_SET_ERRNO_ON_MATH_ERROR()``"

#: ../../whatsnew/3.11.rst:2661
msgid "(Contributed by Victor Stinner in :issue:`45412`.)"
msgstr "(Contribuição de Victor Stinner em :issue:`45412`.)"

#: ../../whatsnew/3.11.rst:2663
msgid ""
"Remove ``Py_UNICODE_COPY()`` and ``Py_UNICODE_FILL()`` macros, deprecated "
"since Python 3.3. Use ``PyUnicode_CopyCharacters()`` or ``memcpy()`` "
"(``wchar_t*`` string), and ``PyUnicode_Fill()`` functions instead. "
"(Contributed by Victor Stinner in :issue:`41123`.)"
msgstr ""
"Remove as macros ``Py_UNICODE_COPY()`` e ``Py_UNICODE_FILL()``, "
"descontinuadas desde o Python 3.3. Use ``PyUnicode_CopyCharacters()`` ou "
"``memcpy()`` (string ``wchar_t*``) e as funções ``PyUnicode_Fill()``. "
"(Contribuição de Victor Stinner em :issue:`41123`.)"

#: ../../whatsnew/3.11.rst:2668
msgid ""
"Remove the ``pystrhex.h`` header file. It only contains private functions. C "
"extensions should only include the main ``<Python.h>`` header file. "
"(Contributed by Victor Stinner in :issue:`45434`.)"
msgstr ""
"Remove o arquivo de cabeçalho ``pystrhex.h``. Ele contém apenas funções "
"privadas. As extensões C devem incluir apenas o arquivo principal ``<Python."
"h>``. (Contribuição de Victor Stinner em :issue:`45434`.)"

#: ../../whatsnew/3.11.rst:2672
msgid ""
"Remove the ``Py_FORCE_DOUBLE()`` macro. It was used by the "
"``Py_IS_INFINITY()`` macro. (Contributed by Victor Stinner in :issue:"
"`45440`.)"
msgstr ""
"Remove a macro ``Py_FORCE_DOUBLE()``. Era usada pela macro "
"``Py_IS_INFINITY()``. (Contribuição de Victor Stinner em :issue:`45440`.)"

#: ../../whatsnew/3.11.rst:2676
msgid ""
"The following items are no longer available when :c:macro:`Py_LIMITED_API` "
"is defined:"
msgstr ""
"Os seguintes itens não estão mais disponíveis quando :c:macro:"
"`Py_LIMITED_API` é definida:"

#: ../../whatsnew/3.11.rst:2679
msgid ":c:func:`PyMarshal_WriteLongToFile`"
msgstr ":c:func:`PyMarshal_WriteLongToFile`"

#: ../../whatsnew/3.11.rst:2680
msgid ":c:func:`PyMarshal_WriteObjectToFile`"
msgstr ":c:func:`PyMarshal_WriteObjectToFile`"

#: ../../whatsnew/3.11.rst:2681
msgid ":c:func:`PyMarshal_ReadObjectFromString`"
msgstr ":c:func:`PyMarshal_ReadObjectFromString`"

#: ../../whatsnew/3.11.rst:2682
msgid ":c:func:`PyMarshal_WriteObjectToString`"
msgstr ":c:func:`PyMarshal_WriteObjectToString`"

#: ../../whatsnew/3.11.rst:2683
msgid "the ``Py_MARSHAL_VERSION`` macro"
msgstr "a macro ``Py_MARSHAL_VERSION``"

#: ../../whatsnew/3.11.rst:2685
msgid "These are not part of the :ref:`limited API <limited-api-list>`."
msgstr "Eles não fazem parte da :ref:`API limitada <limited-api-list>`."

#: ../../whatsnew/3.11.rst:2687
msgid "(Contributed by Victor Stinner in :issue:`45474`.)"
msgstr "(Contribuição de Victor Stinner em :issue:`45474`.)"

#: ../../whatsnew/3.11.rst:2689
msgid ""
"Exclude :c:func:`PyWeakref_GET_OBJECT` from the limited C API. It never "
"worked since the :c:type:`!PyWeakReference` structure is opaque in the "
"limited C API. (Contributed by Victor Stinner in :issue:`35134`.)"
msgstr ""
"Exclui :c:func:`PyWeakref_GET_OBJECT` da API C limitada. Nunca funcionou "
"porque a estrutura :c:type:`!PyWeakReference` é opaca na API C limitada. "
"(Contribuição de Victor Stinner em :issue:`35134`.)"

#: ../../whatsnew/3.11.rst:2694
msgid ""
"Remove the ``PyHeapType_GET_MEMBERS()`` macro. It was exposed in the public "
"C API by mistake, it must only be used by Python internally. Use the "
"``PyTypeObject.tp_members`` member instead. (Contributed by Victor Stinner "
"in :issue:`40170`.)"
msgstr ""
"Remove a macro ``PyHeapType_GET_MEMBERS()``. Estava exposta na API C pública "
"por engano, deve ser usada apenas pelo Python internamente. Em vez disso, "
"use o membro ``PyTypeObject.tp_members``. (Contribuição de Victor Stinner "
"em :issue:`40170`.)"

#: ../../whatsnew/3.11.rst:2699
msgid ""
"Remove the ``HAVE_PY_SET_53BIT_PRECISION`` macro (moved to the internal C "
"API). (Contributed by Victor Stinner in :issue:`45412`.)"
msgstr ""
"Remove a macro ``HAVE_PY_SET_53BIT_PRECISION`` (movida para a API C "
"interna). (Contribuição de Victor Stinner em :issue:`45412`.)"

#: ../../whatsnew/3.11.rst:2705
msgid ""
"Remove the :c:type:`Py_UNICODE` encoder APIs, as they have been deprecated "
"since Python 3.3, are little used and are inefficient relative to the "
"recommended alternatives."
msgstr ""
"Remove as APIs de codificação :c:type:`Py_UNICODE`, pois foram "
"descontinuadas desde o Python 3.3, são pouco usadas e ineficientes em "
"relação às alternativas recomendadas."

#: ../../whatsnew/3.11.rst:2710
msgid "The removed functions are:"
msgstr "As funções removidas são:"

#: ../../whatsnew/3.11.rst:2712
msgid ":func:`!PyUnicode_Encode`"
msgstr ":func:`!PyUnicode_Encode`"

#: ../../whatsnew/3.11.rst:2713
msgid ":func:`!PyUnicode_EncodeASCII`"
msgstr ":func:`!PyUnicode_EncodeASCII`"

#: ../../whatsnew/3.11.rst:2714
msgid ":func:`!PyUnicode_EncodeLatin1`"
msgstr ":func:`!PyUnicode_EncodeLatin1`"

#: ../../whatsnew/3.11.rst:2715
msgid ":func:`!PyUnicode_EncodeUTF7`"
msgstr ":func:`!PyUnicode_EncodeUTF7`"

#: ../../whatsnew/3.11.rst:2716
msgid ":func:`!PyUnicode_EncodeUTF8`"
msgstr ":func:`!PyUnicode_EncodeUTF8`"

#: ../../whatsnew/3.11.rst:2717
msgid ":func:`!PyUnicode_EncodeUTF16`"
msgstr ":func:`!PyUnicode_EncodeUTF16`"

#: ../../whatsnew/3.11.rst:2718
msgid ":func:`!PyUnicode_EncodeUTF32`"
msgstr ":func:`!PyUnicode_EncodeUTF32`"

#: ../../whatsnew/3.11.rst:2719
msgid ":func:`!PyUnicode_EncodeUnicodeEscape`"
msgstr ":func:`!PyUnicode_EncodeUnicodeEscape`"

#: ../../whatsnew/3.11.rst:2720
msgid ":func:`!PyUnicode_EncodeRawUnicodeEscape`"
msgstr ":func:`!PyUnicode_EncodeRawUnicodeEscape`"

#: ../../whatsnew/3.11.rst:2721
msgid ":func:`!PyUnicode_EncodeCharmap`"
msgstr ":func:`!PyUnicode_EncodeCharmap`"

#: ../../whatsnew/3.11.rst:2722
msgid ":func:`!PyUnicode_TranslateCharmap`"
msgstr ":func:`!PyUnicode_TranslateCharmap`"

#: ../../whatsnew/3.11.rst:2723
msgid ":func:`!PyUnicode_EncodeDecimal`"
msgstr ":func:`!PyUnicode_EncodeDecimal`"

#: ../../whatsnew/3.11.rst:2724
msgid ":func:`!PyUnicode_TransformDecimalToASCII`"
msgstr ":func:`!PyUnicode_TransformDecimalToASCII`"

#: ../../whatsnew/3.11.rst:2726
msgid ""
"See :pep:`624` for details and :pep:`migration guidance <624#alternative-"
"apis>`. (Contributed by Inada Naoki in :issue:`44029`.)"
msgstr ""
"Veja a :pep:`624` para detalhes e :pep:`orientação sobre migração "
"<624#alternative-apis>`. (Contribuição de Inada Naoki em :issue:`44029`.)"

#: ../../whatsnew/3.11.rst:2732
msgid "Notable Changes in 3.11.4"
msgstr ""

#: ../../whatsnew/3.11.rst:2735
msgid "tarfile"
msgstr "tarfile"

#: ../../whatsnew/3.11.rst:2737
msgid ""
"The extraction methods in :mod:`tarfile`, and :func:`shutil.unpack_archive`, "
"have a new a *filter* argument that allows limiting tar features than may be "
"surprising or dangerous, such as creating files outside the destination "
"directory. See :ref:`tarfile-extraction-filter` for details. In Python 3.12, "
"use without the *filter* argument will show a :exc:`DeprecationWarning`. In "
"Python 3.14, the default will switch to ``'data'``. (Contributed by Petr "
"Viktorin in :pep:`706`.)"
msgstr ""
"Os métodos de extração em :mod:`tarfile` e :func:`shutil.unpack_archive`, "
"têm um novo argumento *filter* que permite limitar recursos do tar que podem "
"ser surpreendentes ou perigosos, como criar arquivos fora do diretório de "
"destino. Veja :ref:`tarfile-extraction-filter` para detalhes. No Python "
"3.12, usar sem o argumento *filter* mostrará um :exc:`DeprecationWarning`. "
"No Python 3.14, o padrão mudará para ``'data'``. (Contribuição de Petr "
"Viktorin em :pep:`706`.)"

#: ../../whatsnew/3.11.rst:2749
msgid "Notable Changes in 3.11.5"
msgstr ""

#: ../../whatsnew/3.11.rst:2752
msgid "OpenSSL"
msgstr "OpenSSL"

#: ../../whatsnew/3.11.rst:2754
msgid ""
"Windows builds and macOS installers from python.org now use OpenSSL 3.0."
msgstr ""
"Construções do Windows e instaladores do macOS em python.org agora usam "
"OpenSSL 3.0."

#: ../../whatsnew/3.11.rst:2760
msgid "Notable changes in 3.11.10"
msgstr ""

#: ../../whatsnew/3.11.rst:2763
msgid "ipaddress"
msgstr "ipaddress"

#: ../../whatsnew/3.11.rst:2765
msgid ""
"Fixed ``is_global`` and ``is_private`` behavior in ``IPv4Address``, "
"``IPv6Address``, ``IPv4Network`` and ``IPv6Network``."
msgstr ""
"Corrigido o comportamento de ``is_global`` e ``is_private`` em "
"``IPv4Address``, ``IPv6Address``, ``IPv4Network`` e ``IPv6Network``."

#: ../../whatsnew/3.11.rst:2769
msgid "email"
msgstr "email"

#: ../../whatsnew/3.11.rst:2771
msgid "Headers with embedded newlines are now quoted on output."
msgstr ""

#: ../../whatsnew/3.11.rst:2773
msgid ""
"The :mod:`~email.generator` will now refuse to serialize (write) headers "
"that are improperly folded or delimited, such that they would be parsed as "
"multiple headers or joined with adjacent data. If you need to turn this "
"safety feature off, set :attr:`~email.policy.Policy."
"verify_generated_headers`. (Contributed by Bas Bloemsaat and Petr Viktorin "
"in :gh:`121650`.)"
msgstr ""

#: ../../whatsnew/3.11.rst:2780
msgid ""
":func:`email.utils.getaddresses` and :func:`email.utils.parseaddr` now "
"return ``('', '')`` 2-tuples in more situations where invalid email "
"addresses are encountered, instead of potentially inaccurate values. An "
"optional *strict* parameter was added to these two functions: use "
"``strict=False`` to get the old behavior, accepting malformed inputs. "
"``getattr(email.utils, 'supports_strict_parsing', False)`` can be used to "
"check if the *strict* paramater is available. (Contributed by Thomas Dwyer "
"and Victor Stinner for :gh:`102988` to improve the CVE-2023-27043 fix.)"
msgstr ""
