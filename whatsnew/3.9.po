# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-06 15:04+0000\n"
"PO-Revision-Date: 2024-05-11 00:34+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../whatsnew/3.9.rst:3
msgid "What's New In Python 3.9"
msgstr "O que há de novo no Python 3.9"

#: ../../whatsnew/3.9.rst:0
msgid "Editor"
msgstr "Editor"

#: ../../whatsnew/3.9.rst:5
msgid "Łukasz Langa"
msgstr "Łukasz Langa"

#: ../../whatsnew/3.9.rst:45
msgid ""
"This article explains the new features in Python 3.9, compared to 3.8. "
"Python 3.9 was released on October 5, 2020. For full details, see the :ref:"
"`changelog <changelog>`."
msgstr ""
"Este artigo explica os novos recursos no Python 3.9, em comparação com 3.8. "
"Python 3.9 foi lançado em 15 de outubro de 2020. Veja o :ref:`changelog "
"<changelog>`. para uma lista completa de mudanças."

#: ../../whatsnew/3.9.rst:51
msgid ":pep:`596` - Python 3.9 Release Schedule"
msgstr ":pep:`596` - Python 3.9 Release Schedule"

#: ../../whatsnew/3.9.rst:55
msgid "Summary -- Release highlights"
msgstr "Resumo -- Destaques da versão"

#: ../../whatsnew/3.9.rst:60
msgid "New syntax features:"
msgstr "Novos recursos de sintaxe:"

#: ../../whatsnew/3.9.rst:62
msgid ":pep:`584`, union operators added to ``dict``;"
msgstr ":pep:`584`, operadores de união adicionados ao ``dict``;"

#: ../../whatsnew/3.9.rst:63
msgid ":pep:`585`, type hinting generics in standard collections;"
msgstr ":pep:`585`, type hinting genéricos em coleções comuns;"

#: ../../whatsnew/3.9.rst:64
msgid ":pep:`614`, relaxed grammar restrictions on decorators."
msgstr ":pep:`614`, restrições de gramática relaxadas em decoradores."

#: ../../whatsnew/3.9.rst:66
msgid "New built-in features:"
msgstr "Novos recursos embutidos:"

#: ../../whatsnew/3.9.rst:68
msgid ":pep:`616`, string methods to remove prefixes and suffixes."
msgstr ":pep:`616`, métodos de strings para remover prefixos e sufixos."

#: ../../whatsnew/3.9.rst:70
msgid "New features in the standard library:"
msgstr "Novos recursos na biblioteca padrão:"

#: ../../whatsnew/3.9.rst:72
msgid ":pep:`593`, flexible function and variable annotations;"
msgstr ":pep:`593`, anotações flexíveis de função e variável;"

#: ../../whatsnew/3.9.rst:73
msgid ""
":func:`os.pidfd_open` added that allows process management without races and "
"signals."
msgstr ""
":func:`os.pidfd_open` adicionada para permitidos gerenciamento de processo "
"sem corridas e sinais."

#: ../../whatsnew/3.9.rst:76
msgid "Interpreter improvements:"
msgstr "Melhorias no interpretador:"

#: ../../whatsnew/3.9.rst:78
msgid ""
":pep:`573`, fast access to module state from methods of C extension types;"
msgstr ""
":pep:`573`, acesso rápido ao estado do módulo a partir de métodos de tipos "
"de extensão C;"

#: ../../whatsnew/3.9.rst:80
msgid ":pep:`617`, CPython now uses a new parser based on PEG;"
msgstr ""
":pep:`617`, CPython agora usa um novo analisador sintático com base em GASE;"

#: ../../whatsnew/3.9.rst:81
msgid ""
"a number of Python builtins (range, tuple, set, frozenset, list, dict) are "
"now sped up using :pep:`590` vectorcall;"
msgstr ""
"vários tipos embutidos do Python (range, tuple, set, frozenset, list, dict) "
"estão agora mais rápidos usando vectorcall da :pep:`590`;"

#: ../../whatsnew/3.9.rst:83
msgid "garbage collection does not block on resurrected objects;"
msgstr "coleta de lixo não causa bloqueio em objetos ressuscitados;"

#: ../../whatsnew/3.9.rst:84
msgid ""
"a number of Python modules (:mod:`!_abc`, :mod:`audioop`, :mod:`!_bz2`, :mod:"
"`!_codecs`, :mod:`!_contextvars`, :mod:`!_crypt`, :mod:`!_functools`, :mod:`!"
"_json`, :mod:`!_locale`, :mod:`math`, :mod:`operator`, :mod:`resource`, :mod:"
"`time`, :mod:`!_weakref`) now use multiphase initialization as defined by "
"PEP 489;"
msgstr ""
"vários módulos do Python (:mod:`!_abc`, :mod:`audioop`, :mod:`!_bz2`, :mod:`!"
"_codecs`, :mod:`!_contextvars`, :mod:`!_crypt`, :mod:`!_functools`, :mod:`!"
"_json`, :mod:`!_locale`, :mod:`math`, :mod:`operator`, :mod:`resource`, :mod:"
"`time`, :mod:`!_weakref`) agora usam inicialização multifásica conforme "
"definido pela PEP 489;"

#: ../../whatsnew/3.9.rst:89
msgid ""
"a number of standard library modules (:mod:`audioop`, :mod:`ast`, :mod:"
"`grp`, :mod:`!_hashlib`, :mod:`pwd`, :mod:`!_posixsubprocess`, :mod:"
"`random`, :mod:`select`, :mod:`struct`, :mod:`termios`, :mod:`zlib`) are now "
"using the stable ABI defined by PEP 384."
msgstr ""
"vários módulos da biblioteca padrão (:mod:`audioop`, :mod:`ast`, :mod:"
"`grp`, :mod:`!_hashlib`, :mod:`pwd`, :mod:`!_posixsubprocess`, :mod:"
"`random`, :mod:`select`, :mod:`struct`, :mod:`termios`, :mod:`zlib`) estão "
"agora usando a ABI estável definida pela PEP 384."

#: ../../whatsnew/3.9.rst:94
msgid "New library modules:"
msgstr "Novos módulos de biblioteca:"

#: ../../whatsnew/3.9.rst:96
msgid ""
":pep:`615`, the IANA Time Zone Database is now present in the standard "
"library in the :mod:`zoneinfo` module;"
msgstr ""
":pep:`615`, o banco de dados de fusos horários da IANA é agora apresentado "
"na biblioteca padrão no módulo :mod:`zoneinfo`;"

#: ../../whatsnew/3.9.rst:98
msgid ""
"an implementation of a topological sort of a graph is now provided in the "
"new :mod:`graphlib` module."
msgstr ""
"uma implementação de um tipo topológico de um grafo agora é fornecida no "
"novo módulo :mod:`graphlib`."

#: ../../whatsnew/3.9.rst:101
msgid "Release process changes:"
msgstr "Alterações no processo de lançamento:"

#: ../../whatsnew/3.9.rst:103
msgid ":pep:`602`, CPython adopts an annual release cycle."
msgstr ":pep:`602`, CPython adota um ciclo de lançamento anual."

#: ../../whatsnew/3.9.rst:107
msgid "You should check for DeprecationWarning in your code"
msgstr "Você deve verificar DeprecationWarning no seu código"

#: ../../whatsnew/3.9.rst:109
msgid ""
"When Python 2.7 was still supported, a lot of functionality in Python 3 was "
"kept for backward compatibility with Python 2.7. With the end of Python 2 "
"support, these backward compatibility layers have been removed, or will be "
"removed soon. Most of them emitted a :exc:`DeprecationWarning` warning for "
"several years. For example, using ``collections.Mapping`` instead of "
"``collections.abc.Mapping`` emits a :exc:`DeprecationWarning` since Python "
"3.3, released in 2012."
msgstr ""
"Quando o Python 2.7 ainda tinha suporte, muitas funcionalidades do Python 3 "
"foram mantidas para compatibilidade com versões anteriores do Python 2.7. "
"Com o fim do suporte ao Python 2, essas camadas de compatibilidade com "
"versões anteriores foram removidas ou serão removidas em breve. A maioria "
"deles emitia um aviso de :exc:`DeprecationWarning` por vários anos. Por "
"exemplo, usar ``collections.Mapping`` em vez de ``collections.abc.Mapping`` "
"emite uma :exc:`DeprecationWarning` desde Python 3.3, lançado em 2012."

#: ../../whatsnew/3.9.rst:117
msgid ""
"Test your application with the :option:`-W` ``default`` command-line option "
"to see :exc:`DeprecationWarning` and :exc:`PendingDeprecationWarning`, or "
"even with :option:`-W` ``error`` to treat them as errors. :ref:`Warnings "
"Filter <warning-filter>` can be used to ignore warnings from third-party "
"code."
msgstr ""
"Teste sua aplicação com a opção de linha de comando :option:`-W` ``default`` "
"para ver :exc:`DeprecationWarning` e :exc:`PendingDeprecationWarning`, ou "
"mesmo com :option:`-W` ``error`` para tratá-los como erros. :ref:`Filtro de "
"avisos <warning-filter>` pode ser usado para ignorar avisos de código de "
"terceiros."

#: ../../whatsnew/3.9.rst:122
msgid ""
"Python 3.9 is the last version providing those Python 2 backward "
"compatibility layers, to give more time to Python projects maintainers to "
"organize the removal of the Python 2 support and add support for Python 3.9."
msgstr ""
"Python 3.9 é a última versão que fornece essas camadas de compatibilidade "
"com versões anteriores do Python 2, para dar mais tempo aos mantenedores de "
"projetos Python para organizar a remoção do suporte Python 2 e adicionar "
"suporte para Python 3.9."

#: ../../whatsnew/3.9.rst:126
msgid ""
"Aliases to :ref:`Abstract Base Classes <collections-abstract-base-classes>` "
"in the :mod:`collections` module, like ``collections.Mapping`` alias to :"
"class:`collections.abc.Mapping`, are kept for one last release for backward "
"compatibility. They will be removed from Python 3.10."
msgstr ""
"Aliases para :ref:`classes bases abstratas <collections-abstract-base-"
"classes>` no módulo :mod:`collections`, como o alias ``collections.Mapping`` "
"para :class:`collections.abc.Mapping`, são mantidos para uma última versão "
"para compatibilidade reversa. Eles serão removidos do Python 3.10."

#: ../../whatsnew/3.9.rst:131
msgid ""
"More generally, try to run your tests in the :ref:`Python Development Mode "
"<devmode>` which helps to prepare your code to make it compatible with the "
"next Python version."
msgstr ""
"De maneira mais geral, experimente executar seus testes no :ref:`Modo de "
"Desenvolvimento do Python <devmode>`, que ajuda a preparar seu código para "
"torná-lo compatível com a próxima versão do Python."

#: ../../whatsnew/3.9.rst:135
msgid ""
"Note: a number of pre-existing deprecations were removed in this version of "
"Python as well. Consult the :ref:`removed-in-python-39` section."
msgstr ""
"Observação: vários itens descontinuados pré-existentes também foram "
"removidos nesta versão do Python. Consulte a seção :ref:`removed-in-"
"python-39`."

#: ../../whatsnew/3.9.rst:140 ../../whatsnew/3.9.rst:1270
msgid "New Features"
msgstr "Novas funcionalidades"

#: ../../whatsnew/3.9.rst:143
msgid "Dictionary Merge & Update Operators"
msgstr "Operadores de mesclagem & atualização de dicionário"

#: ../../whatsnew/3.9.rst:145
msgid ""
"Merge (``|``) and update (``|=``) operators have been added to the built-in :"
"class:`dict` class. Those complement the existing ``dict.update`` and "
"``{**d1, **d2}`` methods of merging dictionaries."
msgstr ""
"Operadores de mesclagem (``|``) e atualização (``|=``) foram adicionados à "
"classe embutida :class:`dict`. Eles complementam o métodos ``dict.update`` e "
"``{**d1, **d2}`` existentes de mesclagem de dicionários."

#: ../../whatsnew/3.9.rst:149 ../../whatsnew/3.9.rst:282
msgid "Example::"
msgstr "Exemplo::"

#: ../../whatsnew/3.9.rst:151
msgid ""
">>> x = {\"key1\": \"value1 from x\", \"key2\": \"value2 from x\"}\n"
">>> y = {\"key2\": \"value2 from y\", \"key3\": \"value3 from y\"}\n"
">>> x | y\n"
"{'key1': 'value1 from x', 'key2': 'value2 from y', 'key3': 'value3 from y'}\n"
">>> y | x\n"
"{'key2': 'value2 from x', 'key3': 'value3 from y', 'key1': 'value1 from x'}"
msgstr ""

#: ../../whatsnew/3.9.rst:158
msgid ""
"See :pep:`584` for a full description. (Contributed by Brandt Bucher in :"
"issue:`36144`.)"
msgstr ""
"Veja :pep:`584` para uma descrição completa. (Contribuição de Brandt Bucher "
"em :issue:`36144`.)"

#: ../../whatsnew/3.9.rst:162
msgid "New String Methods to Remove Prefixes and Suffixes"
msgstr "Novos métodos de strings para remover prefixos e sufixos"

#: ../../whatsnew/3.9.rst:164
msgid ""
":meth:`str.removeprefix(prefix)<str.removeprefix>` and :meth:`str."
"removesuffix(suffix)<str.removesuffix>` have been added to easily remove an "
"unneeded prefix or a suffix from a string. Corresponding ``bytes``, "
"``bytearray``, and ``collections.UserString`` methods have also been added. "
"See :pep:`616` for a full description. (Contributed by Dennis Sweeney in :"
"issue:`39939`.)"
msgstr ""
":meth:`str.removeprefix(prefix)<str.removeprefix>` e :meth:`str."
"removesuffix(suffix)<str.removesuffix>` foram adicionados para remover "
"facilmente um prefixo ou sufixo desnecessário de uma string. Os métodos "
"correspondentes ``bytes``, ``bytearray`` e ``collections.UserString`` também "
"foram adicionados. Veja :pep:`616` para uma descrição completa. "
"(Contribuição de Dennis Sweeney em :issue:`39939`.)"

#: ../../whatsnew/3.9.rst:172
msgid "Type Hinting Generics in Standard Collections"
msgstr "Type hinting genéricos nas coleções padrão"

#: ../../whatsnew/3.9.rst:174
msgid ""
"In type annotations you can now use built-in collection types such as "
"``list`` and ``dict`` as generic types instead of importing the "
"corresponding capitalized types (e.g. ``List`` or ``Dict``) from "
"``typing``.  Some other types in the standard library are also now generic, "
"for example ``queue.Queue``."
msgstr ""
"Agora, nas anotações de tipo, você pode usar tipos de coleção embutidos como "
"``list`` e ``dict`` como tipos genéricos, em vez de importar os tipos de "
"letras maiúsculas correspondentes (por exemplo, ``List`` ou ``Dict``) de "
"``typing``. Agora, outros tipos na biblioteca padrão também são genéricos, "
"por exemplo, ``queue.Queue``."

#: ../../whatsnew/3.9.rst:180 ../../whatsnew/3.9.rst:1158
msgid "Example:"
msgstr "Exemplo:"

#: ../../whatsnew/3.9.rst:182
msgid ""
"def greet_all(names: list[str]) -> None:\n"
"    for name in names:\n"
"        print(\"Hello\", name)"
msgstr ""

#: ../../whatsnew/3.9.rst:188
msgid ""
"See :pep:`585` for more details.  (Contributed by Guido van Rossum, Ethan "
"Smith, and Batuhan Taşkaya in :issue:`39481`.)"
msgstr ""
"Consulte :pep:`585` para mais detalhes. (Contribuição de Guido van Rossum, "
"Ethan Smith e Batuhan Taşkaya em :issue:`39481`.)"

#: ../../whatsnew/3.9.rst:192
msgid "New Parser"
msgstr "Novo analisador sintático"

#: ../../whatsnew/3.9.rst:194
msgid ""
"Python 3.9 uses a new parser, based on `PEG <https://en.wikipedia.org/wiki/"
"Parsing_expression_grammar>`_ instead of `LL(1) <https://en.wikipedia.org/"
"wiki/LL_parser>`_.  The new parser's performance is roughly comparable to "
"that of the old parser, but the PEG formalism is more flexible than LL(1) "
"when it comes to designing new language features.  We'll start using this "
"flexibility in Python 3.10 and later."
msgstr ""
"O Python 3.9 usa um novo analisador, baseado em `GASE <https://pt.wikipedia."
"org/wiki/Gram%C3%A1tica_de_an%C3%A1lise_sint%C3%A1tica_de_express%C3%A3o>`_ "
"em vez de `LL(1) <https://pt.wikipedia.org/wiki/"
"Analisador_sint%C3%A1tico_LL>`_. O desempenho do novo analisador é "
"aproximadamente comparável ao do analisador antigo, mas o formalismo do GASE "
"é mais flexível que do LL(1) quando se trata de projetar novos recursos de "
"linguagem. Começaremos a usar essa flexibilidade no Python 3.10 e posterior."

#: ../../whatsnew/3.9.rst:202
msgid ""
"The :mod:`ast` module uses the new parser and produces the same AST as the "
"old parser."
msgstr ""
"O módulo :mod:`ast` usa o novo analisador e produz o mesmo AST que o "
"analisador antigo."

#: ../../whatsnew/3.9.rst:205
msgid ""
"In Python 3.10, the old parser will be deleted and so will all functionality "
"that depends on it (primarily the :mod:`!parser` module, which has long been "
"deprecated).  In Python 3.9 *only*, you can switch back to the LL(1) parser "
"using a command line switch (``-X oldparser``) or an environment variable "
"(``PYTHONOLDPARSER=1``)."
msgstr ""
"No Python 3.10, o analisador antigo será excluído e todas as funcionalidades "
"que dependem dele (principalmente o módulo :mod:`!parser`, que foi "
"descontinuado a muito tempo). No Python 3.9 *apenas*, você pode voltar ao "
"analisador LL(1) usando uma opção de linha de comando (``-X oldparser``) ou "
"uma variável de ambiente (``PYTHONOLDPARSER=1``)."

#: ../../whatsnew/3.9.rst:211
msgid ""
"See :pep:`617` for more details.  (Contributed by Guido van Rossum, Pablo "
"Galindo and Lysandros Nikolaou in :issue:`40334`.)"
msgstr ""
"Consulte :pep:`617` para mais detalhes. (Contribuição de Guido van Rossum, "
"Pablo Galindo e Lysandros Nikolaou em :issue:`40334`.)"

#: ../../whatsnew/3.9.rst:216
msgid "Other Language Changes"
msgstr "Outras mudanças na linguagem"

#: ../../whatsnew/3.9.rst:218
msgid ""
":func:`__import__` now raises :exc:`ImportError` instead of :exc:"
"`ValueError`, which used to occur when a relative import went past its top-"
"level package. (Contributed by Ngalim Siregar in :issue:`37444`.)"
msgstr ""
":func:`__import__` agora levanta :exc:`ImportError` em vez de :exc:"
"`ValueError`, o que é usado para ocorrer quando uma importação relativa "
"passou de seu um pacote de nível superior. (Contribuição de Ngalim Siregar "
"em :issue:`37444`.)"

#: ../../whatsnew/3.9.rst:223
msgid ""
"Python now gets the absolute path of the script filename specified on the "
"command line (ex: ``python3 script.py``): the ``__file__`` attribute of the :"
"mod:`__main__` module became an absolute path, rather than a relative path. "
"These paths now remain valid after the current directory is changed by :func:"
"`os.chdir`. As a side effect, the traceback also displays the absolute path "
"for :mod:`__main__` module frames in this case. (Contributed by Victor "
"Stinner in :issue:`20443`.)"
msgstr ""
"Agora, o Python obtém o caminho absoluto do nome do arquivo do script "
"especificado na linha de comando (p.ex., ``python3 script.py``): o atributo "
"``__file__`` do módulo :mod:`__main__` tornou-se um caminho absoluto, não um "
"caminho relativo. Esses caminhos agora permanecem válidos depois que o "
"diretório atual é alterado por :func:`os.chdir`. Como efeito colateral, o "
"traceback também exibe o caminho absoluto para quadros de módulos de :mod:"
"`__main__` neste caso. (Contribuição de Victor Stinner em :issue:`20443`.)"

#: ../../whatsnew/3.9.rst:231
msgid ""
"In the :ref:`Python Development Mode <devmode>` and in :ref:`debug build "
"<debug-build>`, the *encoding* and *errors* arguments are now checked for "
"string encoding and decoding operations. Examples: :func:`open`, :meth:`str."
"encode` and :meth:`bytes.decode`."
msgstr ""
"No :ref:`Modo de Desenvolvimento do Python <devmode>` e na :ref:`compilação "
"de depuração <debug-build>` , os argumentos *encoding* e *errors* agora são "
"verificados quanto às operações de codificação e decodificação de strings. "
"Exemplos: :func:`open`, :meth:`str.encode` e :meth:`bytes.decode`."

#: ../../whatsnew/3.9.rst:236
msgid ""
"By default, for best performance, the *errors* argument is only checked at "
"the first encoding/decoding error and the *encoding* argument is sometimes "
"ignored for empty strings. (Contributed by Victor Stinner in :issue:`37388`.)"
msgstr ""
"Por padrão, para obter o melhor desempenho, o argumento *errors* é "
"verificado apenas no primeiro erro de codificação/decodificação, e o "
"argumento *encoding* às vezes é ignorado para strings vazias. (Contribuição "
"de Victor Stinner em :issue:`37388`.)"

#: ../../whatsnew/3.9.rst:241
msgid ""
"``\"\".replace(\"\", s, n)`` now returns ``s`` instead of an empty string "
"for all non-zero ``n``.  It is now consistent with ``\"\".replace(\"\", "
"s)``. There are similar changes for :class:`bytes` and :class:`bytearray` "
"objects. (Contributed by Serhiy Storchaka in :issue:`28029`.)"
msgstr ""
"``\"\".replace(\"\", s, n)`` agora retorna ``s`` em vez de uma string vazia "
"para todos ``n`` não zero. Isso é agora consistente com ``\"\".replace(\"\", "
"s)``. Há alterações similares para objetos :class:`bytes` e :class:"
"`bytearray`. (Contribuição de Serhiy Storchaka em :issue:`28029`.)"

#: ../../whatsnew/3.9.rst:246
msgid ""
"Any valid expression can now be used as a :term:`decorator`.  Previously, "
"the grammar was much more restrictive.  See :pep:`614` for details. "
"(Contributed by Brandt Bucher in :issue:`39702`.)"
msgstr ""
"Qualquer expressão válida agora pode ser usada como :term:`decorador "
"<decorator>`. Anteriormente, a gramática era muito mais restritiva. Veja :"
"pep:`614` para detalhes. (Contribuição de Brandt Bucher em :issue:`39702`.)"

#: ../../whatsnew/3.9.rst:250
msgid ""
"Improved help for the :mod:`typing` module. Docstrings are now shown for all "
"special forms and special generic aliases (like ``Union`` and ``List``). "
"Using :func:`help` with generic alias like ``List[int]`` will show the help "
"for the correspondent concrete type (``list`` in this case). (Contributed by "
"Serhiy Storchaka in :issue:`40257`.)"
msgstr ""
"Aprimorada a ajuda para o módulo :mod:`digitando`. Agora, as linhas de "
"documento são mostradas para todos os formulários especiais e aliases "
"genéricos especiais (como ``Union`` e ``List``). Usando :func:`help` com "
"alias genérico como ``List[int]`` mostrará a ajuda para o tipo concreto "
"correspondente (neste caso, ``list``). (Contribuição de Serhiy Storchaka em :"
"issue:`40257`.)"

#: ../../whatsnew/3.9.rst:256
msgid ""
"Parallel running of :meth:`~agen.aclose` / :meth:`~agen.asend` / :meth:"
"`~agen.athrow` is now prohibited, and ``ag_running`` now reflects the actual "
"running status of the async generator. (Contributed by Yury Selivanov in :"
"issue:`30773`.)"
msgstr ""
"A execução paralela de :meth:`~agen.aclose` / :meth:`~agen.asend` / :meth:"
"`~agen.athrow` é agora proibida e ``ag_running`` agora reflete o status "
"atual de execução do gerador async. (Contribuição de Yury Selivanov em :"
"issue:`30773`.)"

#: ../../whatsnew/3.9.rst:261
msgid ""
"Unexpected errors in calling the ``__iter__`` method are no longer masked by "
"``TypeError`` in the :keyword:`in` operator and functions :func:`~operator."
"contains`, :func:`~operator.indexOf` and :func:`~operator.countOf` of the :"
"mod:`operator` module. (Contributed by Serhiy Storchaka in :issue:`40824`.)"
msgstr ""
"Erros inesperados ao chamar o método ``__iter__`` não são mais mascarados "
"por ``TypeError`` no operador :keyword:`in` e nas funções :func:`~operator."
"contains`, :func:`~operator.indexOf` e :func:`~operator.countOf` do módulo :"
"mod:`operator`. (Contribuição de Serhiy Storchaka em :issue:`40824`.)"

#: ../../whatsnew/3.9.rst:267
msgid ""
"Unparenthesized lambda expressions can no longer be the expression part in "
"an ``if`` clause in comprehensions and generator expressions. See :issue:"
"`41848` and :issue:`43755` for details."
msgstr ""
"Expressões lambda sem parênteses não podem mais ser a parte da expressão em "
"uma cláusula ``if`` em compreensões e expressões geradoras. Veja :issue:"
"`41848` e :issue:`43755` para detalhes."

#: ../../whatsnew/3.9.rst:273
msgid "New Modules"
msgstr "Novos módulos"

#: ../../whatsnew/3.9.rst:276
msgid "zoneinfo"
msgstr "zoneinfo"

#: ../../whatsnew/3.9.rst:278
msgid ""
"The :mod:`zoneinfo` module brings support for the IANA time zone database to "
"the standard library. It adds :class:`zoneinfo.ZoneInfo`, a concrete :class:"
"`datetime.tzinfo` implementation backed by the system's time zone data."
msgstr ""
"O módulo :mod:`zoneinfo` oferece suporte ao banco de dados de fuso horário "
"da IANA para a biblioteca padrão. Ele adiciona :class:`zoneinfo.ZoneInfo`, "
"uma implementação concreta :class:`datetime.tzinfo`, apoiada pelos dados do "
"fuso horário do sistema."

#: ../../whatsnew/3.9.rst:284
msgid ""
">>> from zoneinfo import ZoneInfo\n"
">>> from datetime import datetime, timedelta\n"
"\n"
">>> # Daylight saving time\n"
">>> dt = datetime(2020, 10, 31, 12, tzinfo=ZoneInfo(\"America/"
"Los_Angeles\"))\n"
">>> print(dt)\n"
"2020-10-31 12:00:00-07:00\n"
">>> dt.tzname()\n"
"'PDT'\n"
"\n"
">>> # Standard time\n"
">>> dt += timedelta(days=7)\n"
">>> print(dt)\n"
"2020-11-07 12:00:00-08:00\n"
">>> print(dt.tzname())\n"
"PST"
msgstr ""

#: ../../whatsnew/3.9.rst:302
msgid ""
"As a fall-back source of data for platforms that don't ship the IANA "
"database, the :pypi:`tzdata` module was released as a first-party package -- "
"distributed via PyPI and maintained by the CPython core team."
msgstr ""
"Como fonte alternativa de dados para plataformas que não entregam o banco de "
"dados da IANA, o módulo :pypi:`tzdata` foi lançado como um pacote inicial -- "
"distribuído via PyPI e mantido pela equipe principal do CPython."

#: ../../whatsnew/3.9.rst:308
msgid ""
":pep:`615` -- Support for the IANA Time Zone Database in the Standard Library"
msgstr ""
":pep:`615` -- Suporte ao banco de dados de fuso horário da IANA na "
"biblioteca padrão"

#: ../../whatsnew/3.9.rst:309
msgid "PEP written and implemented by Paul Ganssle"
msgstr "PEP escrita e implementada por Paul Ganssle"

#: ../../whatsnew/3.9.rst:313
msgid "graphlib"
msgstr "graphlib"

#: ../../whatsnew/3.9.rst:315
msgid ""
"A new module, :mod:`graphlib`, was added that contains the :class:`graphlib."
"TopologicalSorter` class to offer functionality to perform topological "
"sorting of graphs. (Contributed by Pablo Galindo, Tim Peters and Larry "
"Hastings in :issue:`17005`.)"
msgstr ""
"Um novo módulo, :mod:`graphlib`, foi adicionado contendo a classe :class:"
"`graphlib.TopologicalSorter` para oferecer funcionalidade de realizar "
"classificação topológica de grafos. (Contribuição de Pablo Galindo, Tim "
"Peters e Larry Hastings em :issue:`17005`.)"

#: ../../whatsnew/3.9.rst:322
msgid "Improved Modules"
msgstr "Módulos melhorados"

#: ../../whatsnew/3.9.rst:325
msgid "ast"
msgstr "ast"

#: ../../whatsnew/3.9.rst:327
msgid ""
"Added the *indent* option to :func:`~ast.dump` which allows it to produce a "
"multiline indented output. (Contributed by Serhiy Storchaka in :issue:"
"`37995`.)"
msgstr ""
"Adicionada a opção *indent* a :func:`~ast.dump`, que permite produzir uma "
"saída indentada com várias linhas. (Contribuição de Serhiy Storchaka em :"
"issue:`37995`.)"

#: ../../whatsnew/3.9.rst:331
msgid ""
"Added :func:`ast.unparse` as a function in the :mod:`ast` module that can be "
"used to unparse an :class:`ast.AST` object and produce a string with code "
"that would produce an equivalent :class:`ast.AST` object when parsed. "
"(Contributed by Pablo Galindo and Batuhan Taskaya in :issue:`38870`.)"
msgstr ""
"Adicionada :func:`ast.unparse` como uma função no módulo :mod:`ast` que pode "
"ser usado para remover um objeto :class:`ast.AST` e produzir uma string com "
"código que produziria um objeto :class:`ast.AST` equivalente quando "
"analisado. (Contribuição de Pablo Galindo e Batuhan Taskaya em :issue:"
"`38870`.)"

#: ../../whatsnew/3.9.rst:336
msgid ""
"Added docstrings to AST nodes that contains the ASDL signature used to "
"construct that node. (Contributed by Batuhan Taskaya in :issue:`39638`.)"
msgstr ""
"Adicionadas docstrings aos nós AST que contêm a assinatura ASDL usada para "
"construir esse nó. (Contribuição de Batuhan Taskaya em :issue:`39638`.)"

#: ../../whatsnew/3.9.rst:340
msgid "asyncio"
msgstr "asyncio"

#: ../../whatsnew/3.9.rst:342
msgid ""
"Due to significant security concerns, the *reuse_address* parameter of :meth:"
"`asyncio.loop.create_datagram_endpoint` is no longer supported. This is "
"because of the behavior of the socket option ``SO_REUSEADDR`` in UDP. For "
"more details, see the documentation for ``loop.create_datagram_endpoint()``. "
"(Contributed by Kyle Stanley, Antoine Pitrou, and Yury Selivanov in :issue:"
"`37228`.)"
msgstr ""
"Devido a significativas preocupações de segurança, o parâmetro "
"*reuse_address* de :meth:`asyncio.loop.create_datagram_endpoint` não é mais "
"suportado. Isso ocorre devido ao comportamento da opção de soquete "
"``SO_REUSEADDR`` no UDP. Para mais detalhes, consulte a documentação de "
"``loop.create_datagram_endpoint()``. (Contribuição de Kyle Stanley, Antoine "
"Pitrou e Yury Selivanov em :issue:`37228`.)"

#: ../../whatsnew/3.9.rst:349
msgid ""
"Added a new :term:`coroutine` :meth:`~asyncio.loop."
"shutdown_default_executor` that schedules a shutdown for the default "
"executor that waits on the :class:`~concurrent.futures.ThreadPoolExecutor` "
"to finish closing. Also, :func:`asyncio.run` has been updated to use the "
"new :term:`coroutine`. (Contributed by Kyle Stanley in :issue:`34037`.)"
msgstr ""
"Adicionada uma nova :term:`corrotina <coroutine>` :meth:`~asyncio.loop."
"shutdown_default_executor` que agenda um desligamento para o executor padrão "
"que espera na :class:`~concurrent.futures.ThreadPoolExecutor` para concluir "
"o fechamento. Além disso, :func:`asyncio.run` foi atualizada para usar o "
"novo :term:`corrotina <coroutine>`. (Contribuição de Kyle Stanley em :issue:"
"`34037`.)"

#: ../../whatsnew/3.9.rst:355
msgid ""
"Added :class:`asyncio.PidfdChildWatcher`, a Linux-specific child watcher "
"implementation that polls process file descriptors. (:issue:`38692`)"
msgstr ""
"Adicionada :class:`asyncio.PidfdChildWatcher`, uma implementação de "
"monitorador de filhos específica do Linux que controla descritores de "
"arquivo de processo. (:issue:`38692`)"

#: ../../whatsnew/3.9.rst:358
msgid ""
"Added a new :term:`coroutine` :func:`asyncio.to_thread`. It is mainly used "
"for running IO-bound functions in a separate thread to avoid blocking the "
"event loop, and essentially works as a high-level version of :meth:`~asyncio."
"loop.run_in_executor` that can directly take keyword arguments. (Contributed "
"by Kyle Stanley and Yury Selivanov in :issue:`32309`.)"
msgstr ""
"Adicionada uma nova :term:`corrotina <coroutine>` :func:`asyncio.to_thread`. "
"É usada principalmente para executar funções vinculadas à E/S em uma thread "
"separada para evitar o bloqueio do loop de eventos e funciona essencialmente "
"como uma versão de alto nível de :meth:`~asyncio.loop.run_in_executor` que "
"pode receber argumentos nomeados diretamente. (Contribuição de Kyle Stanley "
"e Yury Selivanov em :issue:`32309`.)"

#: ../../whatsnew/3.9.rst:364
msgid ""
"When cancelling the task due to a timeout, :meth:`asyncio.wait_for` will now "
"wait until the cancellation is complete also in the case when *timeout* is "
"<= 0, like it does with positive timeouts. (Contributed by Elvis "
"Pranskevichus in :issue:`32751`.)"
msgstr ""
"Ao cancelar a tarefa devido a um tempo limite, :meth:`asyncio.wait_for` irá "
"agora esperar até que o cancelamento seja concluído também no caso quando "
"*timeout* é <= 0, como acontece com tempos limite positivos. (Contribuição "
"de Elvis Pranskevichus em :issue:`32751`.)"

#: ../../whatsnew/3.9.rst:369
msgid ""
":mod:`asyncio` now raises :exc:`TypeError` when calling incompatible methods "
"with an :class:`ssl.SSLSocket` socket. (Contributed by Ido Michael in :issue:"
"`37404`.)"
msgstr ""
":mod:`asyncio` agora levanta :exc:`TypeError` ao chamar métodos "
"incompatíveis com um soquete :class:`ssl.SSLSocket`. (Contribuição de Ido "
"Michael em :issue:`37404`.)"

#: ../../whatsnew/3.9.rst:374
msgid "compileall"
msgstr "compileall"

#: ../../whatsnew/3.9.rst:376
msgid ""
"Added new possibility to use hardlinks for duplicated ``.pyc`` files: "
"*hardlink_dupes* parameter and --hardlink-dupes command line option. "
"(Contributed by  Lumír 'Frenzy' Balhar in :issue:`40495`.)"
msgstr ""
"Adicionada nova possibilidade de usar hardlinks para arquivos ``.pyc`` "
"duplicados: parâmetro *hardlink_dupes* e opção de linha de comando --"
"hardlink-dupes. (Contribuição de Lumír 'Frenzy' Balhar em :issue:`40495`.)"

#: ../../whatsnew/3.9.rst:379
msgid ""
"Added new options for path manipulation in resulting ``.pyc`` files: "
"*stripdir*, *prependdir*, *limit_sl_dest* parameters and -s, -p, -e command "
"line options. Added the possibility to specify the option for an "
"optimization level multiple times. (Contributed by Lumír 'Frenzy' Balhar in :"
"issue:`38112`.)"
msgstr ""
"Adicionadas novas opções para manipulação de caminho nos arquivos ``.pyc`` "
"resultantes: parâmetros *stripdir*, *prependdir*, *limit_sl_dest* e opções "
"de linha de comando -s, -p, -e. Foi adicionada a possibilidade de "
"especificar a opção para um nível de otimização várias vezes. (Contribuição "
"de Lumír 'Frenzy' Balhar em :issue:`38112`.)"

#: ../../whatsnew/3.9.rst:384
msgid "concurrent.futures"
msgstr "concurrent.futures"

#: ../../whatsnew/3.9.rst:386
msgid ""
"Added a new *cancel_futures* parameter to :meth:`concurrent.futures.Executor."
"shutdown` that cancels all pending futures which have not started running, "
"instead of waiting for them to complete before shutting down the executor. "
"(Contributed by Kyle Stanley in :issue:`39349`.)"
msgstr ""
"Adicionado um novo parâmetro *cancel_futures* em :meth:`concurrent.futures."
"Executor.shutdown` que cancela todos os futuros pendentes que ainda não "
"começaram a ser executados, em vez de esperar que eles sejam concluídos "
"antes de desligar o executor. (Contribuição de Kyle Stanley em :issue:"
"`39349`.)"

#: ../../whatsnew/3.9.rst:392
msgid ""
"Removed daemon threads from :class:`~concurrent.futures.ThreadPoolExecutor` "
"and :class:`~concurrent.futures.ProcessPoolExecutor`. This improves "
"compatibility with subinterpreters and predictability in their shutdown "
"processes. (Contributed by Kyle Stanley in :issue:`39812`.)"
msgstr ""
"Removidos as threads do daemon de :class:`~concurrent.futures."
"ThreadPoolExecutor` e :class:`~concurrent.futures.ProcessPoolExecutor`. Isso "
"melhora a compatibilidade com subinterpretadores e a previsibilidade em seus "
"processos de desligamento. (Contribuição de Kyle Stanley em :issue:`39812`.)"

#: ../../whatsnew/3.9.rst:397
msgid ""
"Workers in :class:`~concurrent.futures.ProcessPoolExecutor` are now spawned "
"on demand, only when there are no available idle workers to reuse. This "
"optimizes startup overhead and reduces the amount of lost CPU time to idle "
"workers. (Contributed by Kyle Stanley in :issue:`39207`.)"
msgstr ""
"Workers em :class:`~concurrent.futures.ProcessPoolExecutor` agora são "
"gerados sob demanda, apenas quando não há workers ociosos disponíveis para "
"reutilização. Isso otimiza a sobrecarga da inicialização e reduz a "
"quantidade de tempo perdido da CPU para os workers ociosos. (Contribuição de "
"Kyle Stanley em :issue:`39207`.)"

#: ../../whatsnew/3.9.rst:403
msgid "curses"
msgstr "curses"

#: ../../whatsnew/3.9.rst:405
msgid ""
"Added :func:`curses.get_escdelay`, :func:`curses.set_escdelay`, :func:"
"`curses.get_tabsize`, and :func:`curses.set_tabsize` functions. (Contributed "
"by Anthony Sottile in :issue:`38312`.)"
msgstr ""
"Adicionadas as funções :func:`curses.get_escdelay`, :func:`curses."
"set_escdelay`, :func:`curses.get_tabsize` e :func:`curses.set_tabsize`. "
"(Contribuição de Anthony Sottile em :issue:`38312`.)"

#: ../../whatsnew/3.9.rst:410
msgid "datetime"
msgstr "datetime"

#: ../../whatsnew/3.9.rst:411
msgid ""
"The :meth:`~datetime.date.isocalendar` of :class:`datetime.date` and :meth:"
"`~datetime.datetime.isocalendar` of :class:`datetime.datetime` methods now "
"returns a :func:`~collections.namedtuple` instead of a :class:`tuple`. "
"(Contributed by Donghee Na in :issue:`24416`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:417
msgid "distutils"
msgstr "distutils"

#: ../../whatsnew/3.9.rst:419
msgid ""
"The :command:`upload` command now creates SHA2-256 and Blake2b-256 hash "
"digests. It skips MD5 on platforms that block MD5 digest. (Contributed by "
"Christian Heimes in :issue:`40698`.)"
msgstr ""
"O comando :command:`upload` agora cria digests de hash SHA2-256 e "
"Blake2b-256. Ele pula o MD5 em plataformas que bloqueiam digest do MD5. "
"(Contribuição de Christian Heimes em :issue:`40698`.)"

#: ../../whatsnew/3.9.rst:424
msgid "fcntl"
msgstr "fcntl"

#: ../../whatsnew/3.9.rst:426
msgid ""
"Added constants :const:`~fcntl.F_OFD_GETLK`, :const:`~fcntl.F_OFD_SETLK` "
"and :const:`~fcntl.F_OFD_SETLKW`. (Contributed by Donghee Na in :issue:"
"`38602`.)"
msgstr ""
"Adicionadas as constantes :const:`~fcntl.F_OFD_GETLK`, :const:`~fcntl."
"F_OFD_SETLK` e :const:`~fcntl.F_OFD_SETLKW`. (Contribuição de Donghee Na em :"
"issue:`38602`.)"

#: ../../whatsnew/3.9.rst:431
msgid "ftplib"
msgstr "ftplib"

#: ../../whatsnew/3.9.rst:433
msgid ""
":class:`~ftplib.FTP` and :class:`~ftplib.FTP_TLS` now raise a :class:"
"`ValueError` if the given timeout for their constructor is zero to prevent "
"the creation of a non-blocking socket. (Contributed by Donghee Na in :issue:"
"`39259`.)"
msgstr ""
":class:`~ftplib.FTP` e :class:`~ftplib.FTP_TLS` agora levantam a :class:"
"`ValueError` se o tempo limite especificado para o construtor for zero para "
"impedir a criação de um soquete não-bloqueante. (Contribuição de Donghee Na "
"em :issue:`39259`.)"

#: ../../whatsnew/3.9.rst:438
msgid "gc"
msgstr "gc"

#: ../../whatsnew/3.9.rst:440
msgid ""
"When the garbage collector makes a collection in which some objects "
"resurrect (they are reachable from outside the isolated cycles after the "
"finalizers have been executed), do not block the collection of all objects "
"that are still unreachable. (Contributed by Pablo Galindo and Tim Peters in :"
"issue:`38379`.)"
msgstr ""
"Quando o coletor de lixo faz uma coleção na qual alguns objetos ressuscitam "
"(são alcançáveis fora dos ciclos isolados após a execução dos "
"finalizadores), não bloqueia a coleção de todos os objetos que ainda estão "
"inacessíveis. (Contribuição de Pablo Galindo e Tim Peters em :issue:`38379`.)"

#: ../../whatsnew/3.9.rst:445
msgid ""
"Added a new function :func:`gc.is_finalized` to check if an object has been "
"finalized by the garbage collector. (Contributed by Pablo Galindo in :issue:"
"`39322`.)"
msgstr ""
"Adicionada uma nova função :func:`gc.is_finalized` para verificar se um "
"objeto foi finalizado pelo coletor de lixo. (Contribuição de Pablo Galindo "
"em :issue:`39322`.)"

#: ../../whatsnew/3.9.rst:450
msgid "hashlib"
msgstr "hashlib"

#: ../../whatsnew/3.9.rst:452
msgid ""
"The :mod:`hashlib` module can now use SHA3 hashes and SHAKE XOF from OpenSSL "
"when available. (Contributed by Christian Heimes in :issue:`37630`.)"
msgstr ""
"O módulo :mod:`hashlib` pode agora usar hashes SHA3 e SHAKE XOF de OpenSSL "
"quando disponível. (Contribuição de Christian Heimes em :issue:`37630`.)"

#: ../../whatsnew/3.9.rst:456
msgid ""
"Builtin hash modules can now be disabled with ``./configure --without-"
"builtin-hashlib-hashes`` or selectively enabled with e.g. ``./configure --"
"with-builtin-hashlib-hashes=sha3,blake2`` to force use of OpenSSL based "
"implementation. (Contributed by Christian Heimes in :issue:`40479`)"
msgstr ""
"Os módulos hash integrados agora podem ser desativados com ``./configure --"
"without-builtin-hashlib-hashes`` ou ativados seletivamente com por exemplo "
"``./configure --with-builtin-hashlib-hashes=sha3,blake2`` para forçar o uso "
"da implementação baseada em OpenSSL. (Contribuição de Christian Heimes em :"
"issue:`40479`)"

#: ../../whatsnew/3.9.rst:464
msgid "http"
msgstr "http"

#: ../../whatsnew/3.9.rst:466
msgid ""
"HTTP status codes ``103 EARLY_HINTS``, ``418 IM_A_TEAPOT`` and ``425 "
"TOO_EARLY`` are added to :class:`http.HTTPStatus`. (Contributed by Donghee "
"Na in :issue:`39509` and Ross Rhodes in :issue:`39507`.)"
msgstr ""
"Códigos de status HTTP ``103 EARLY_HINTS``, ``418 IM_A_TEAPOT`` e ``425 "
"TOO_EARLY`` foram adicionados a :class:`http.HTTPStatus`. (Contribuição de "
"Donghee Na em :issue:`39509` e Ross Rhodes em :issue:`39507`.)"

#: ../../whatsnew/3.9.rst:470
msgid "IDLE and idlelib"
msgstr "IDLE e idlelib"

#: ../../whatsnew/3.9.rst:472
msgid ""
"Added option to toggle cursor blink off.  (Contributed by Zackery Spytz in :"
"issue:`4603`.)"
msgstr ""
"Adicionada a opção para ativar e desativar o piscar do cursor. (Contribuição "
"de Zackery Spytz na :issue:`4603`.)"

#: ../../whatsnew/3.9.rst:475
msgid ""
"Escape key now closes IDLE completion windows.  (Contributed by Johnny "
"Najera in :issue:`38944`.)"
msgstr ""
"A tecla Escape agora fecha as janelas de conclusão IDLE. (Contribuição de "
"Johnny Najera em :issue:`38944`.)"

#: ../../whatsnew/3.9.rst:478
msgid ""
"Added keywords to module name completion list.  (Contributed by Terry J. "
"Reedy in :issue:`37765`.)"
msgstr ""
"Adicionada argumentos nomeados à lista de completamento de nome de módulo. "
"(Contribuição de Terry J. Reedy em :issue:`37765`.)"

#: ../../whatsnew/3.9.rst:481
msgid "New in 3.9 maintenance releases"
msgstr "Novo nas versões de manutenção 3.9."

#: ../../whatsnew/3.9.rst:483
msgid ""
"Make IDLE invoke :func:`sys.excepthook` (when started without '-n'). User "
"hooks were previously ignored.  (Contributed by Ken Hilton in :issue:"
"`43008`.)"
msgstr ""
"Faz o IDLE invocar :func:`sys.excepthook` (quando iniciado sem '-n'). "
"Ganchos de usuário eram ignorados anteriormente. (Contribuição de Ken Hilton "
"em :issue:`43008`.)"

#: ../../whatsnew/3.9.rst:487
msgid "The changes above have been backported to 3.8 maintenance releases."
msgstr "As alterações acima foram portadas para versões de manutenção do 3.8."

#: ../../whatsnew/3.9.rst:489
msgid ""
"Rearrange the settings dialog.  Split the General tab into Windows and Shell/"
"Ed tabs.  Move help sources, which extend the Help menu, to the Extensions "
"tab.  Make space for new options and shorten the dialog. The latter makes "
"the dialog better fit small screens.  (Contributed by Terry Jan Reedy in :"
"issue:`40468`.)  Move the indent space setting from the Font tab to the new "
"Windows tab.  (Contributed by Mark Roseman and Terry Jan Reedy in :issue:"
"`33962`.)"
msgstr ""
"Reorganiza a caixa de diálogo de configurações. Divide a aba General nas "
"abas Windows e Shell/Ed. Move as fontes de ajuda, que estendem o menu Help, "
"para a aba Extensions. Abre espaço para novas opções e encurta a caixa de "
"diálogo. O último faz com que o diálogo se ajuste melhor a telas pequenas. "
"(Contribuição de Terry Jan Reedy em :issue:`40468`.) Move a configuração do "
"espaço de recuo da aba Font para a nova aba Windows. (Contribuição de Mark "
"Roseman e Terry Jan Reedy em :issue:`33962`.)"

#: ../../whatsnew/3.9.rst:497
msgid ""
"Apply syntax highlighting to ``.pyi`` files. (Contributed by Alex Waygood "
"and Terry Jan Reedy in :issue:`45447`.)"
msgstr ""
"Aplica realce de sintaxe em arquivos ``.pyi``. (Contribuição de Alex Waygood "
"e Terry Jan Reedy em :issue:`45447`.)"

#: ../../whatsnew/3.9.rst:501
msgid "imaplib"
msgstr "imaplib"

#: ../../whatsnew/3.9.rst:503
msgid ""
":class:`~imaplib.IMAP4` and :class:`~imaplib.IMAP4_SSL` now have an optional "
"*timeout* parameter for their constructors. Also, the :meth:`~imaplib.IMAP4."
"open` method now has an optional *timeout* parameter with this change. The "
"overridden methods of :class:`~imaplib.IMAP4_SSL` and :class:`~imaplib."
"IMAP4_stream` were applied to this change. (Contributed by Donghee Na in :"
"issue:`38615`.)"
msgstr ""
":class:`~imaplib.IMAP4` e :class:`~imaplib.IMAP4_SSL` agora possuem o "
"parâmetro opcional *timeout* para seus construtores. Também, o método :meth:"
"`~imaplib.IMAP4.open` agora possui um parâmetro opcional *timeout* com esta "
"alteração. Os métodos substituídos de :class:`~imaplib.IMAP4_SSL` e :class:"
"`~imaplib.IMAP4_stream` foram aplicados nesta alteração. (Contribuição de "
"Dong-hee Na em :issue:`38615`.)"

#: ../../whatsnew/3.9.rst:510
msgid ""
":meth:`imaplib.IMAP4.unselect` is added. :meth:`imaplib.IMAP4.unselect` "
"frees server's resources associated with the selected mailbox and returns "
"the server to the authenticated state. This command performs the same "
"actions as :meth:`imaplib.IMAP4.close`, except that no messages are "
"permanently removed from the currently selected mailbox. (Contributed by "
"Donghee Na in :issue:`40375`.)"
msgstr ""
":meth:`imaplib.IMAP4.unselect` foi adicionado. :meth:`imaplib.IMAP4."
"unselect` libera os recursos do servidor associados à caixa de correio "
"selecionada e retorna o servidor ao estado autenticado. Este comando executa "
"as mesmas ações que :meth:`imaplib.IMAP4.close`, exceto que nenhuma mensagem "
"é removida permanentemente da caixa de correio selecionada no momento. "
"(Contribuição de Dong-hee Na em :issue:`40375`.)"

#: ../../whatsnew/3.9.rst:518
msgid "importlib"
msgstr "importlib"

#: ../../whatsnew/3.9.rst:520
msgid ""
"To improve consistency with import statements, :func:`importlib.util."
"resolve_name` now raises :exc:`ImportError` instead of :exc:`ValueError` for "
"invalid relative import attempts. (Contributed by Ngalim Siregar in :issue:"
"`37444`.)"
msgstr ""
"Para melhorar a consistência com as instruções de importação,  :func:"
"`importlib.util.resolve_name` agora levanta :exc:`ImportError` em vez de :"
"exc:`ValueError` para tentativas de importação relativas inválidas. "
"(Contribuição de Ngalim Siregar em :issue:`37444`.)"

#: ../../whatsnew/3.9.rst:525
msgid ""
"Import loaders which publish immutable module objects can now publish "
"immutable packages in addition to individual modules. (Contributed by Dino "
"Viehland in :issue:`39336`.)"
msgstr ""
"Carregadores de importação que publicam objetos de módulo imutáveis agora "
"podem publicar pacotes imutáveis além de módulos individuais. (Contribuição "
"de Dino Viehland em :issue:`39336`.)"

#: ../../whatsnew/3.9.rst:529
msgid ""
"Added :func:`importlib.resources.files` function with support for "
"subdirectories in package data, matching backport in ``importlib_resources`` "
"version 1.5. (Contributed by Jason R. Coombs in :issue:`39791`.)"
msgstr ""
"Adicionada a função :func:`importlib.resources.files` com suporte a "
"subdiretórios nos dados do pacote, correspondendo ao backport na versão 1.5 "
"do ``importlib_resources``. (Contribuição de Jason R. Coombs em :issue:"
"`39791`.)"

#: ../../whatsnew/3.9.rst:534
msgid ""
"Refreshed ``importlib.metadata`` from ``importlib_metadata`` version 1.6.1."
msgstr ""
"Renovado ``importlib.metadata`` de ``importlib_metadata`` versão 1.6.1."

#: ../../whatsnew/3.9.rst:537
msgid "inspect"
msgstr "inspect"

#: ../../whatsnew/3.9.rst:539
msgid ""
":attr:`inspect.BoundArguments.arguments` is changed from ``OrderedDict`` to "
"regular dict.  (Contributed by Inada Naoki in :issue:`36350` and :issue:"
"`39775`.)"
msgstr ""
":attr:`inspect.BoundArguments.arguments` foi alterado de ``OrderedDict`` "
"para dict regular. (Contribuição de Inada Naoki em :issue:`36350` e :issue:"
"`39775`.)"

#: ../../whatsnew/3.9.rst:543
msgid "ipaddress"
msgstr "ipaddress"

#: ../../whatsnew/3.9.rst:545
msgid ""
":mod:`ipaddress` now supports IPv6 Scoped Addresses (IPv6 address with "
"suffix ``%<scope_id>``)."
msgstr ""
":mod:`ipaddress` agora suporta endereços IPv6 com escopo definido (endereço "
"IPv6 com sufixo ``%<scope_id>``)."

#: ../../whatsnew/3.9.rst:547
msgid ""
"Scoped IPv6 addresses can be parsed using :class:`ipaddress.IPv6Address`. If "
"present, scope zone ID is available through the :attr:`~ipaddress."
"IPv6Address.scope_id` attribute. (Contributed by Oleksandr Pavliuk in :issue:"
"`34788`.)"
msgstr ""
"Os endereços IPv6 com escopo definido podem ser analisados usando :class:"
"`ipaddress.IPv6Address`. Se presente, o ID da zona de escopo está disponível "
"através do atributo :attr:`~ipaddress.IPv6Address.scope_id`. (Contribuição "
"de Oleksandr Pavliuk em :issue:`34788`.)"

#: ../../whatsnew/3.9.rst:551
msgid ""
"Starting with Python 3.9.5 the :mod:`ipaddress` module no longer accepts any "
"leading zeros in IPv4 address strings. (Contributed by Christian Heimes in :"
"issue:`36384`)."
msgstr ""
"A partir do Python 3.9.5, o módulo :mod:`ipaddress` não aceita mais zeros à "
"esquerda em strings de endereço IPv4. (Contribuição de Christian Heimes em :"
"issue:`36384`)."

#: ../../whatsnew/3.9.rst:556
msgid "math"
msgstr "math"

#: ../../whatsnew/3.9.rst:558
msgid ""
"Expanded the :func:`math.gcd` function to handle multiple arguments. "
"Formerly, it only supported two arguments. (Contributed by Serhiy Storchaka "
"in :issue:`39648`.)"
msgstr ""
"Expandida a função :func:`math.gcd` para manipular vários argumentos. "
"Anteriormente, tinha suporte apenas a dois argumentos. (Contribuição de "
"Serhiy Storchaka em :issue:`39648`.)"

#: ../../whatsnew/3.9.rst:562
msgid ""
"Added :func:`math.lcm`: return the least common multiple of specified "
"arguments. (Contributed by Mark Dickinson, Ananthakrishnan and Serhiy "
"Storchaka in :issue:`39479` and :issue:`39648`.)"
msgstr ""
"Adicionada :func:`math.lcm`: retorna o menor múltiplo comum dos argumentos "
"especificados. (Contribuição de Mark Dickinson, Ananthakrishnan e Serhiy "
"Storchaka em :issue:`39479` e :issue:` 39648`.)"

#: ../../whatsnew/3.9.rst:566
msgid ""
"Added :func:`math.nextafter`: return the next floating-point value after *x* "
"towards *y*. (Contributed by Victor Stinner in :issue:`39288`.)"
msgstr ""
"Adicionada :func:`math.nextafter`: retorna o próximo valor de ponto "
"flutuante após *x* em direção a *y*. (Contribuição de Victor Stinner em :"
"issue:`39288`.)"

#: ../../whatsnew/3.9.rst:570
msgid ""
"Added :func:`math.ulp`: return the value of the least significant bit of a "
"float. (Contributed by Victor Stinner in :issue:`39310`.)"
msgstr ""
"Adicionada :func:`math.ulp`: retorna o valor do bit menos significativo de "
"um ponto flutuante. (Contribuição de Victor Stinner em :issue:`39310`.)"

#: ../../whatsnew/3.9.rst:575
msgid "multiprocessing"
msgstr "multiprocessing"

#: ../../whatsnew/3.9.rst:577
msgid ""
"The :class:`multiprocessing.SimpleQueue` class has a new :meth:"
"`~multiprocessing.SimpleQueue.close` method to explicitly close the queue. "
"(Contributed by Victor Stinner in :issue:`30966`.)"
msgstr ""
"A classe :class:`multiprocessing.SimpleQueue` tem um novo método :meth:"
"`~multiprocessing.SimpleQueue.close` para fechar explicitamente a fila. "
"(Contribuição de Victor Stinner em :issue:`30966`.)"

#: ../../whatsnew/3.9.rst:583
msgid "nntplib"
msgstr "nntplib"

#: ../../whatsnew/3.9.rst:585
msgid ""
":class:`~nntplib.NNTP` and :class:`~nntplib.NNTP_SSL` now raise a :class:"
"`ValueError` if the given timeout for their constructor is zero to prevent "
"the creation of a non-blocking socket. (Contributed by Donghee Na in :issue:"
"`39259`.)"
msgstr ""
":class:`~nntplib.NNTP` e :class:`~nntplib.NNTP_SSL` agora levantam uma "
"exceção :class:`ValueError` se o tempo limite fornecido ao construtor é "
"zero, para prevenir a criação de um socket não-bloqueante. (Contribuição de "
"Donghee Na em :issue:`39259`.)"

#: ../../whatsnew/3.9.rst:590
msgid "os"
msgstr "os"

#: ../../whatsnew/3.9.rst:592
msgid ""
"Added :const:`~os.CLD_KILLED` and :const:`~os.CLD_STOPPED` for :attr:`!"
"si_code`. (Contributed by Donghee Na in :issue:`38493`.)"
msgstr ""
"Adicionadas as constantes :const:`~os.CLD_KILLED` e :const:`~os.CLD_STOPPED` "
"para :attr:`!si_code`. (Contribuição de Donghee Na em :issue:`38493`.)"

#: ../../whatsnew/3.9.rst:595
msgid ""
"Exposed the Linux-specific :func:`os.pidfd_open` (:issue:`38692`) and :const:"
"`os.P_PIDFD` (:issue:`38713`) for process management with file descriptors."
msgstr ""
"Exposta :func:`os.pidfd_open` específica do Linux (:issue:`38692`) e :const:"
"`os.P_PIDFD` (:issue:`38713`) para gerenciamento de processos com "
"descritores de arquivo."

#: ../../whatsnew/3.9.rst:599
msgid ""
"The :func:`os.unsetenv` function is now also available on Windows. "
"(Contributed by Victor Stinner in :issue:`39413`.)"
msgstr ""
"A função :func:`os.unsetenv` agora também está disponível no Windows. "
"(Contribuição de Victor Stinner em :issue:`39413`.)"

#: ../../whatsnew/3.9.rst:602
msgid ""
"The :func:`os.putenv` and :func:`os.unsetenv` functions are now always "
"available. (Contributed by Victor Stinner in :issue:`39395`.)"
msgstr ""
"As funções :func:`os.putenv` e :func:`os.unsetenv` estão agora sempre "
"disponíveis. (Contribuição de Victor Stinner em :issue:`39395`.)"

#: ../../whatsnew/3.9.rst:606
msgid ""
"Added :func:`os.waitstatus_to_exitcode` function: convert a wait status to "
"an exit code. (Contributed by Victor Stinner in :issue:`40094`.)"
msgstr ""
"Adicionada a função :func:`os.waitstatus_to_exitcode`: converte um status de "
"espera em um código de saída. (Contribuição de Victor Stinner em :issue:"
"`40094`.)"

#: ../../whatsnew/3.9.rst:611
msgid "pathlib"
msgstr "pathlib"

#: ../../whatsnew/3.9.rst:613
msgid ""
"Added :meth:`pathlib.Path.readlink` which acts similarly to :func:`os."
"readlink`. (Contributed by Girts Folkmanis in :issue:`30618`)"
msgstr ""

#: ../../whatsnew/3.9.rst:618
msgid "pdb"
msgstr "pdb"

#: ../../whatsnew/3.9.rst:620
msgid ""
"On Windows now :class:`~pdb.Pdb` supports ``~/.pdbrc``. (Contributed by Tim "
"Hopper and Dan Lidral-Porter in :issue:`20523`.)"
msgstr ""
"No Windows, agora :class:`~pdb.Pdb` tem suporte a ``~/.pdbrc``. "
"(Contribuição de Tim Hopper e Dan Lidral-Porter em :issue:`20523`.)"

#: ../../whatsnew/3.9.rst:624
msgid "poplib"
msgstr "poplib"

#: ../../whatsnew/3.9.rst:626
msgid ""
":class:`~poplib.POP3` and :class:`~poplib.POP3_SSL` now raise a :class:"
"`ValueError` if the given timeout for their constructor is zero to prevent "
"the creation of a non-blocking socket. (Contributed by Donghee Na in :issue:"
"`39259`.)"
msgstr ""
":class:`~poplib.POP3` e :class:`~poplib.POP3_SSL` agora levantam a :class:"
"`ValueError` se o tempo limite especificado para o construtor for zero para "
"impedir a criação de um soquete sem bloqueio. (Contribuição de Donghee Na "
"em :issue:`39259`.)"

#: ../../whatsnew/3.9.rst:631
msgid "pprint"
msgstr "pprint"

#: ../../whatsnew/3.9.rst:633
msgid ""
":mod:`pprint` can now pretty-print :class:`types.SimpleNamespace`. "
"(Contributed by Carl Bordum Hansen in :issue:`37376`.)"
msgstr ""
":mod:`pprint` agora pode imprimir :class:`types.SimpleNamespace`. "
"(Contribuição de Carl Bordum Hansen em :issue:`37376`.)"

#: ../../whatsnew/3.9.rst:637
msgid "pydoc"
msgstr "pydoc"

#: ../../whatsnew/3.9.rst:639
msgid ""
"The documentation string is now shown not only for class, function, method "
"etc, but for any object that has its own ``__doc__`` attribute. (Contributed "
"by Serhiy Storchaka in :issue:`40257`.)"
msgstr ""
"A string de documentação agora é mostrada não apenas para classe, função, "
"método etc, mas para qualquer objeto que tenha seu próprio atributo "
"``__doc__``. (Contribuição de Serhiy Storchaka em :issue:`40257`.)"

#: ../../whatsnew/3.9.rst:644
msgid "random"
msgstr "random"

#: ../../whatsnew/3.9.rst:646
msgid ""
"Added a new :attr:`random.Random.randbytes` method: generate random bytes. "
"(Contributed by Victor Stinner in :issue:`40286`.)"
msgstr ""
"Adicionado um novo método :attr:`random.Random.randbytes`: gera bytes "
"aleatórios. (Contribuição de Victor Stinner em :issue:`40286`.)"

#: ../../whatsnew/3.9.rst:650
msgid "signal"
msgstr "signal"

#: ../../whatsnew/3.9.rst:652
msgid ""
"Exposed the Linux-specific :func:`signal.pidfd_send_signal` for sending to "
"signals to a process using a file descriptor instead of a pid. (:issue:"
"`38712`)"
msgstr ""
"Exposta a :func:`signal.pidfd_send_signal` específica do Linux para enviar "
"sinais a um processo usando um descritor de arquivo em vez de um pid. (:"
"issue:`38712`)"

#: ../../whatsnew/3.9.rst:656
msgid "smtplib"
msgstr "smtplib"

#: ../../whatsnew/3.9.rst:658
msgid ""
":class:`~smtplib.SMTP` and :class:`~smtplib.SMTP_SSL` now raise a :class:"
"`ValueError` if the given timeout for their constructor is zero to prevent "
"the creation of a non-blocking socket. (Contributed by Donghee Na in :issue:"
"`39259`.)"
msgstr ""
":class:`~smtplib.SMTP` e :class:`~smtplib.SMTP_SSL` agora levantam uma :"
"class:`ValueError` se o tempo limite especificado para seu construtor for "
"zero para impedir a criação de um soquete sem bloqueio. (Contribuição de "
"Dong-hee Na em :issue:`39259`.)"

#: ../../whatsnew/3.9.rst:662
msgid ""
":class:`~smtplib.LMTP` constructor  now has an optional *timeout* parameter. "
"(Contributed by Donghee Na in :issue:`39329`.)"
msgstr ""
"O construtor de :class:`~smtplib.LMTP` agora tem um parâmetro opcional "
"*timeout*. (Contribuição de Dong-hee Na em :issue:`39329`.)"

#: ../../whatsnew/3.9.rst:666
msgid "socket"
msgstr "socket"

#: ../../whatsnew/3.9.rst:668
msgid ""
"The :mod:`socket` module now exports the :const:`~socket."
"CAN_RAW_JOIN_FILTERS` constant on Linux 4.1 and greater. (Contributed by "
"Stefan Tatschner and Zackery Spytz in :issue:`25780`.)"
msgstr ""
"O módulo :mod:`socket` agora exporta a constante :const:`~socket."
"CAN_RAW_JOIN_FILTERS` no Linux 4.1 e superior. (Contribuição de Stefan "
"Tatschner e Zackery Spytz em :issue:`25780`.)"

#: ../../whatsnew/3.9.rst:672
msgid ""
"The socket module now supports the :const:`~socket.CAN_J1939` protocol on "
"platforms that support it.  (Contributed by Karl Ding in :issue:`40291`.)"
msgstr ""
"O módulo socket agora suporta o protocolo :const:`~socket.CAN_J1939` nas "
"plataformas que o suportam. (Contribuição de Karl Ding em :issue:`40291`.)"

#: ../../whatsnew/3.9.rst:675
msgid ""
"The socket module now has the :func:`socket.send_fds` and :func:`socket."
"recv_fds` functions. (Contributed by Joannah Nanjekye, Shinya Okano and "
"Victor Stinner in :issue:`28724`.)"
msgstr ""
"O módulo socket agora tem as funções :func:`socket.send_fds` e :func:`socket."
"recv_fds`. (Contribuição de Joannah Nanjekye, Shinya Okano e Victor Stinner "
"em :issue:`28724`.)"

#: ../../whatsnew/3.9.rst:681
msgid "time"
msgstr "time"

#: ../../whatsnew/3.9.rst:683
msgid ""
"On AIX, :func:`~time.thread_time` is now implemented with "
"``thread_cputime()`` which has nanosecond resolution, rather than "
"``clock_gettime(CLOCK_THREAD_CPUTIME_ID)`` which has a resolution of 10 "
"milliseconds. (Contributed by Batuhan Taskaya in :issue:`40192`)"
msgstr ""
"No AIX, :func:`~time.thread_time` agora é implementado com "
"``thread_cputime()`` que possui resolução de nanossegundos, em vez de "
"``clock_gettime(CLOCK_THREAD_CPUTIME_ID)``, que tem uma resolução de 10 "
"milissegundos. (Contribuição de Batuhan Taskaya em :issue:`40192`)"

#: ../../whatsnew/3.9.rst:689
msgid "sys"
msgstr "sys"

#: ../../whatsnew/3.9.rst:691
msgid ""
"Added a new :data:`sys.platlibdir` attribute: name of the platform-specific "
"library directory. It is used to build the path of standard library and the "
"paths of installed extension modules. It is equal to ``\"lib\"`` on most "
"platforms.  On Fedora and SuSE, it is equal to ``\"lib64\"`` on 64-bit "
"platforms. (Contributed by Jan Matějek, Matěj Cepl, Charalampos Stratakis "
"and Victor Stinner in :issue:`1294959`.)"
msgstr ""
"Adicionado um novo atributo :data:`sys.platlibdir`: nome do diretório da "
"biblioteca específica da plataforma. É usado para construir o caminho da "
"biblioteca padrão e os caminhos dos módulos de extensão instalados. É igual "
"a ``\"lib\"`` na maioria das plataformas. No Fedora e SuSE, é igual a "
"``\"lib64\"`` nas plataformas de 64 bits. (Contribuição de Jan Matějek, "
"Matěj Cepl, Charalampos Stratakis e Victor Stinner em :issue:`1294959`.)"

#: ../../whatsnew/3.9.rst:697
msgid ""
"Previously, :data:`sys.stderr` was block-buffered when non-interactive. Now "
"``stderr`` defaults to always being line-buffered. (Contributed by Jendrik "
"Seipp in :issue:`13601`.)"
msgstr ""
"Anteriormente, :data:`sys.stderr` era armazenado em buffer quando não "
"interativo. Agora, ``stderr`` assume como padrão sempre o buffer de linha. "
"(Contribuição de Jendrik Seipp em :issue:`13601`.)"

#: ../../whatsnew/3.9.rst:702
msgid "tracemalloc"
msgstr "tracemalloc"

#: ../../whatsnew/3.9.rst:704
msgid ""
"Added :func:`tracemalloc.reset_peak` to set the peak size of traced memory "
"blocks to the current size, to measure the peak of specific pieces of code. "
"(Contributed by Huon Wilson in :issue:`40630`.)"
msgstr ""
"Adicionada :func:`tracemalloc.reset_peak` para definir o tamanho do pico dos "
"blocos de memória rastreados para o tamanho atual, para medir o pico de "
"partes específicas do código. (Contribuição de Huon Wilson em :issue:"
"`40630`.)"

#: ../../whatsnew/3.9.rst:709 ../../whatsnew/3.9.rst:1492
msgid "typing"
msgstr "typing"

#: ../../whatsnew/3.9.rst:711
msgid ""
":pep:`593` introduced an :data:`typing.Annotated` type to decorate existing "
"types with context-specific metadata and new ``include_extras`` parameter "
"to :func:`typing.get_type_hints` to access the metadata at runtime. "
"(Contributed by Till Varoquaux and Konstantin Kashin.)"
msgstr ""
":pep:`593` introduziu um tipo :data:`typing.Annotated` para decorar tipos "
"existentes com metadados específicos de contexto e o novo parâmetro "
"``include_extras`` para :func:`typing.get_type_hints` para acessar os "
"metadados em tempo de execução. (Contribuição de Till Varoquaux e Konstantin "
"Kashin.)"

#: ../../whatsnew/3.9.rst:717
msgid "unicodedata"
msgstr "unicodedata"

#: ../../whatsnew/3.9.rst:719
msgid ""
"The Unicode database has been updated to version 13.0.0. (:issue:`39926`)."
msgstr ""
"O banco de dados Unicode foi atualizado para a versão 13.0.0. (:issue:"
"`39926`)."

#: ../../whatsnew/3.9.rst:722
msgid "venv"
msgstr "venv"

#: ../../whatsnew/3.9.rst:724
msgid ""
"The activation scripts provided by :mod:`venv` now all specify their prompt "
"customization consistently by always using the value specified by "
"``__VENV_PROMPT__``. Previously some scripts unconditionally used "
"``__VENV_PROMPT__``, others only if it happened to be set (which was the "
"default case), and one used ``__VENV_NAME__`` instead. (Contributed by Brett "
"Cannon in :issue:`37663`.)"
msgstr ""
"Os scripts de ativação fornecidos por :mod:`venv` agora especificam sua "
"personalização de prompt de forma consistente, sempre usando o valor "
"especificado por ``__VENV_PROMPT__``. Anteriormente, alguns scripts usavam "
"incondicionalmente ``__VENV_PROMPT__``, outros apenas se fosse definido (que "
"era o caso padrão) e um usava ``__VENV_NAME__``. (Contribuição de Brett "
"Cannon em :issue:`37663`.)"

#: ../../whatsnew/3.9.rst:732
msgid "xml"
msgstr "xml"

#: ../../whatsnew/3.9.rst:734
msgid ""
"White space characters within attributes are now preserved when serializing :"
"mod:`xml.etree.ElementTree` to XML file. EOLNs are no longer normalized to "
"\"\\n\". This is the result of discussion about how to interpret section "
"2.11 of XML spec. (Contributed by Mefistotelis in :issue:`39011`.)"
msgstr ""
"Os caracteres de espaço em branco nos atributos agora são preservados ao "
"serializar :mod:`xml.etree.ElementTree` para o arquivo XML. EOLNs não são "
"mais normalizados para \"\\n\". Este é o resultado da discussão sobre como "
"interpretar a seção 2.11 da especificação XML. (Contribuição de Mefistotelis "
"em :issue:`39011`.)"

#: ../../whatsnew/3.9.rst:742
msgid "Optimizations"
msgstr "Otimizações"

#: ../../whatsnew/3.9.rst:744
msgid ""
"Optimized the idiom for assignment a temporary variable in comprehensions. "
"Now ``for y in [expr]`` in comprehensions is as fast as a simple assignment "
"``y = expr``.  For example:"
msgstr ""
"Otimizado o idioma para atribuição de uma variável temporária nas "
"compreensões. Agora ``for y in [expr]`` nas compreensões é tão rápido quanto "
"uma atribuição simples ``y = expr``. Por exemplo:"

#: ../../whatsnew/3.9.rst:748
msgid "sums = [s for s in [0] for x in data for s in [s + x]]"
msgstr "sums = [s for s in [0] for x in data for s in [s + x]]"

#: ../../whatsnew/3.9.rst:750
msgid ""
"Unlike the ``:=`` operator this idiom does not leak a variable to the outer "
"scope."
msgstr ""
"Ao contrário do operador ``:=``, este idioma não vaza uma variável para o "
"escopo externo."

#: ../../whatsnew/3.9.rst:753
msgid "(Contributed by Serhiy Storchaka in :issue:`32856`.)"
msgstr "(Contribuição de Serhiy Storchaka em :issue:`32856`.)"

#: ../../whatsnew/3.9.rst:755
msgid ""
"Optimized signal handling in multithreaded applications. If a thread "
"different than the main thread gets a signal, the bytecode evaluation loop "
"is no longer interrupted at each bytecode instruction to check for pending "
"signals which cannot be handled. Only the main thread of the main "
"interpreter can handle signals."
msgstr ""
"Otimizada a manipulação de sinais em aplicações multithread. Se uma thread "
"diferente da thread principal obtiver um sinal, o loop de avaliação do "
"bytecode não será mais interrompido a cada instrução de bytecode para "
"verificar se há sinais pendentes que não podem ser manipulados. Somente o "
"segmento principal do interpretador principal pode manipular sinais."

#: ../../whatsnew/3.9.rst:761
msgid ""
"Previously, the bytecode evaluation loop was interrupted at each instruction "
"until the main thread handles signals. (Contributed by Victor Stinner in :"
"issue:`40010`.)"
msgstr ""
"Anteriormente, o loop de avaliação do bytecode era interrompido em cada "
"instrução até que a thread principal lidasse com os sinais. (Contribuição de "
"Victor Stinner em :issue:`40010`.)"

#: ../../whatsnew/3.9.rst:765
msgid ""
"Optimized the :mod:`subprocess` module on FreeBSD using ``closefrom()``. "
"(Contributed by Ed Maste, Conrad Meyer, Kyle Evans, Kubilay Kocak and Victor "
"Stinner in :issue:`38061`.)"
msgstr ""
"Otimizado o módulo :mod:`subprocess` no FreeBSD usando ``closefrom()``. "
"(Contribuição de Ed Maste, Conrad Meyer, Kyle Evans, Kubilay Kocak e Victor "
"Stinner em :issue:`38061`.)"

#: ../../whatsnew/3.9.rst:769
msgid ""
":c:func:`PyLong_FromDouble` is now up to 1.87x faster for values that fit "
"into :c:expr:`long`. (Contributed by Sergey Fedoseev in :issue:`37986`.)"
msgstr ""
":c:func:`PyLong_FromDouble` está agora até 1.87x mais rápido para valores "
"que cabem em um :c:expr:`long`. (Contribuição de Sergey Fedoseev em :issue:"
"`37986`.)"

#: ../../whatsnew/3.9.rst:773
msgid ""
"A number of Python builtins (:class:`range`, :class:`tuple`, :class:`set`, :"
"class:`frozenset`, :class:`list`, :class:`dict`) are now sped up by using :"
"pep:`590` vectorcall protocol. (Contributed by Donghee Na, Mark Shannon, "
"Jeroen Demeyer and Petr Viktorin in :issue:`37207`.)"
msgstr ""
"Vários componentes embutidos do Python (:class:`range`, :class:`tuple`, :"
"class:`set`, :class:`frozenset`, :class:`list`, :class:`dict`) agora são "
"acelerados usando o protocolo vectorcall da :pep:`590`. (Contribuição de "
"Donghee Na, Mark Shannon, Jeroen Demeyer e Petr Viktorin em :issue:`37207`.)"

#: ../../whatsnew/3.9.rst:778
msgid ""
"Optimized :func:`~set.difference_update` for the case when the other set is "
"much larger than the base set. (Suggested by Evgeny Kapun with code "
"contributed by Michele Orrù in :issue:`8425`.)"
msgstr ""
"Otimizada a :func:`~set.difference_update` para o caso em que o outro "
"conjunto é muito maior do que o conjunto base. (Sugestão de Evgeny Kapun com "
"contribuição de código de Michele Orrù em :issue:`8425`.)"

#: ../../whatsnew/3.9.rst:782
msgid ""
"Python's small object allocator (``obmalloc.c``) now allows (no more than) "
"one empty arena to remain available for immediate reuse, without returning "
"it to the OS.  This prevents thrashing in simple loops where an arena could "
"be created and destroyed anew on each iteration. (Contributed by Tim Peters "
"in :issue:`37257`.)"
msgstr ""
"O alocador de pequenos objetos do Python (``obmalloc.c``) agora permite (não "
"mais que) uma arena vazia para permanecer disponível para reutilização "
"imediata, sem retorná-la ao sistema operacional. Isso evita o desperdiçar "
"loops simples, onde uma arena pode ser criada e destruída novamente em cada "
"iteração. (Contribuição de Tim Peters em :issue:`37257`.)"

#: ../../whatsnew/3.9.rst:788
msgid ""
":term:`floor division` of float operation now has a better performance. Also "
"the message of :exc:`ZeroDivisionError` for this operation is updated. "
"(Contributed by Donghee Na in :issue:`39434`.)"
msgstr ""
":term:`divisão pelo piso <floor division>` de operação flutuante agora tem "
"um melhor desempenho. Além disso, a mensagem de :exc:`ZeroDivisionError` "
"para esta operação foi atualizada. (Contribuição de Donghee Na em :issue:"
"`39434`.)"

#: ../../whatsnew/3.9.rst:792
msgid ""
"Decoding short ASCII strings with UTF-8 and ascii codecs is now about 15% "
"faster.  (Contributed by Inada Naoki in :issue:`37348`.)"
msgstr ""
"A decodificação de strings curtas ASCII com codecs UTF-8 e ascii é agora "
"cerca de 15% mais rápida. (Contribuição de Inada Naoki em :issue:`37348`.)"

#: ../../whatsnew/3.9.rst:795
msgid ""
"Here's a summary of performance improvements from Python 3.4 through Python "
"3.9:"
msgstr ""
"Aqui está um resumo das melhorias de desempenho do Python 3.4 ao Python 3.9:"

#: ../../whatsnew/3.9.rst:797
msgid ""
"Python version                       3.4     3.5     3.6     3.7     3.8    "
"3.9\n"
"--------------                       ---     ---     ---     ---     ---    "
"---\n"
"\n"
"Variable and attribute read access:\n"
"    read_local                       7.1     7.1     5.4     5.1     3.9    "
"3.9\n"
"    read_nonlocal                    7.1     8.1     5.8     5.4     4.4    "
"4.5\n"
"    read_global                     15.5    19.0    14.3    13.6     7.6    "
"7.8\n"
"    read_builtin                    21.1    21.6    18.5    19.0     7.5    "
"7.8\n"
"    read_classvar_from_class        25.6    26.5    20.7    19.5    18.4   "
"17.9\n"
"    read_classvar_from_instance     22.8    23.5    18.8    17.1    16.4   "
"16.9\n"
"    read_instancevar                32.4    33.1    28.0    26.3    25.4   "
"25.3\n"
"    read_instancevar_slots          27.8    31.3    20.8    20.8    20.2   "
"20.5\n"
"    read_namedtuple                 73.8    57.5    45.0    46.8    18.4   "
"18.7\n"
"    read_boundmethod                37.6    37.9    29.6    26.9    27.7   "
"41.1\n"
"\n"
"Variable and attribute write access:\n"
"    write_local                      8.7     9.3     5.5     5.3     4.3    "
"4.3\n"
"    write_nonlocal                  10.5    11.1     5.6     5.5     4.7    "
"4.8\n"
"    write_global                    19.7    21.2    18.0    18.0    15.8   "
"16.7\n"
"    write_classvar                  92.9    96.0   104.6   102.1    39.2   "
"39.8\n"
"    write_instancevar               44.6    45.8    40.0    38.9    35.5   "
"37.4\n"
"    write_instancevar_slots         35.6    36.1    27.3    26.6    25.7   "
"25.8\n"
"\n"
"Data structure read access:\n"
"    read_list                       24.2    24.5    20.8    20.8    19.0   "
"19.5\n"
"    read_deque                      24.7    25.5    20.2    20.6    19.8   "
"20.2\n"
"    read_dict                       24.3    25.7    22.3    23.0    21.0   "
"22.4\n"
"    read_strdict                    22.6    24.3    19.5    21.2    18.9   "
"21.5\n"
"\n"
"Data structure write access:\n"
"    write_list                      27.1    28.5    22.5    21.6    20.0   "
"20.0\n"
"    write_deque                     28.7    30.1    22.7    21.8    23.5   "
"21.7\n"
"    write_dict                      31.4    33.3    29.3    29.2    24.7   "
"25.4\n"
"    write_strdict                   28.4    29.9    27.5    25.2    23.1   "
"24.5\n"
"\n"
"Stack (or queue) operations:\n"
"    list_append_pop                 93.4   112.7    75.4    74.2    50.8   "
"50.6\n"
"    deque_append_pop                43.5    57.0    49.4    49.2    42.5   "
"44.2\n"
"    deque_append_popleft            43.7    57.3    49.7    49.7    42.8   "
"46.4\n"
"\n"
"Timing loop:\n"
"    loop_overhead                    0.5     0.6     0.4     0.3     0.3    "
"0.3"
msgstr ""

#: ../../whatsnew/3.9.rst:842
msgid ""
"These results were generated from the variable access benchmark script at: "
"``Tools/scripts/var_access_benchmark.py``. The benchmark script displays "
"timings in nanoseconds.  The benchmarks were measured on an `Intel® Core™ "
"i7-4960HQ processor <https://ark.intel.com/content/www/us/en/ark/"
"products/76088/intel-core-i7-4960hq-processor-6m-cache-up-to-3-80-ghz."
"html>`_ running the macOS 64-bit builds found at `python.org <https://www."
"python.org/downloads/macos/>`_."
msgstr ""
"Estes resultados foram gerados a partir do script de benchmark de acesso "
"variável em: ``Tools/scripts/var_access_benchmark.py``. O script de "
"benchmark exibe tempos em nanossegundos. Os benchmarks foram medidos em um "
"processador `Intel® Core ™ i7-4960HQ <https://ark.intel.com/content/www/us/"
"en/ark/products/76088/intel-core-i7-4960hq-processor-6m-cache-up-to-3-80-ghz."
"html>`_ executando as compilações do macOS de 64 bits encontradas em `python."
"org <https://www.python.org/downloads/macos/>`_."

#: ../../whatsnew/3.9.rst:852
msgid "Deprecated"
msgstr "Descontinuados"

#: ../../whatsnew/3.9.rst:854
msgid ""
"The distutils ``bdist_msi`` command is now deprecated, use ``bdist_wheel`` "
"(wheel packages) instead. (Contributed by Hugo van Kemenade in :issue:"
"`39586`.)"
msgstr ""
"O comando ``bdist_msi`` do distutils está agora descontinuado, use "
"``bdist_wheel`` (pacotes wheel). (Contribuição de Hugo van Kemenade em :"
"issue:`39586`.)"

#: ../../whatsnew/3.9.rst:858
msgid ""
"Currently :func:`math.factorial` accepts :class:`float` instances with non-"
"negative integer values (like ``5.0``).  It raises a :exc:`ValueError` for "
"non-integral and negative floats.  It is now deprecated.  In future Python "
"versions it will raise a :exc:`TypeError` for all floats. (Contributed by "
"Serhiy Storchaka in :issue:`37315`.)"
msgstr ""
"Atualmente :func:`math.factorial` aceita instâncias da :class:`float` com "
"valores inteiros não negativos (como ``5.0``). Ela levanta uma :exc:"
"`ValueError` para flutuadores não integrais e negativos. Agora está "
"descontinuado. Nas versões futuras do Python, será levantada uma :exc:"
"`TypeError` para todos os flutuadores. (Contribuição de Serhiy Storchaka em :"
"issue:`37315`.)"

#: ../../whatsnew/3.9.rst:864
msgid ""
"The :mod:`!parser` and :mod:`!symbol` modules are deprecated and will be "
"removed in future versions of Python. For the majority of use cases, users "
"can leverage the Abstract Syntax Tree (AST) generation and compilation "
"stage, using the :mod:`ast` module."
msgstr ""
"Os módulos :mod:`!parser` e :mod:`!symbol` foram descontinuados e serão "
"removidos em versões futuras do Python. Para a maioria dos casos de uso, os "
"usuários podem aproveitar o estágio de geração e compilação da Árvore de "
"Sintaxe Abstrata (AST), usando o módulo :mod:`ast`."

#: ../../whatsnew/3.9.rst:869
msgid ""
"The Public C API functions :c:func:`!PyParser_SimpleParseStringFlags`, :c:"
"func:`!PyParser_SimpleParseStringFlagsFilename`, :c:func:`!"
"PyParser_SimpleParseFileFlags` and :c:func:`!PyNode_Compile` are deprecated "
"and will be removed in Python 3.10 together with the old parser."
msgstr ""
"As funções públicas de API C :c:func:`!PyParser_SimpleParseStringFlags`, :c:"
"func:`!PyParser_SimpleParseStringFlagsFilename`, :c:func:`!"
"PyParser_SimpleParseFileFlags` e :c:func:`!PyNode_Compile` foram "
"descontinuados e serão removidos no Python 3.10 junto com o analisador "
"sintático antigo."

#: ../../whatsnew/3.9.rst:874
msgid ""
"Using :data:`NotImplemented` in a boolean context has been deprecated, as it "
"is almost exclusively the result of incorrect rich comparator "
"implementations. It will be made a :exc:`TypeError` in a future version of "
"Python. (Contributed by Josh Rosenberg in :issue:`35712`.)"
msgstr ""
"O uso de :data:`NotImplemented` em um contexto booleano foi descontinuado, "
"pois é quase exclusivamente o resultado de implementações incorretas de "
"comparadores avançados. Isso será tornado em uma :exc:`TypeError` em uma "
"versão futura do Python. (Contribuição de Josh Rosenberg em :issue:`35712`.)"

#: ../../whatsnew/3.9.rst:880
msgid ""
"The :mod:`random` module currently accepts any hashable type as a possible "
"seed value.  Unfortunately, some of those types are not guaranteed to have a "
"deterministic hash value.  After Python 3.9, the module will restrict its "
"seeds to :const:`None`, :class:`int`, :class:`float`, :class:`str`, :class:"
"`bytes`, and :class:`bytearray`."
msgstr ""
"O módulo :mod:`random` atualmente aceita qualquer tipo hasheável como um "
"possível valor inicial. Infelizmente, alguns desses tipos não têm garantia "
"de ter um valor de hash determinístico. Após o Python 3.9, o módulo "
"restringirá suas sementes a :const:`None`, :class:`int`, :class:`float`, :"
"class:`str`, :class:`bytes` e :class:`bytearray`."

#: ../../whatsnew/3.9.rst:886
msgid ""
"Opening the :class:`~gzip.GzipFile` file for writing without specifying the "
"*mode* argument is deprecated.  In future Python versions it will always be "
"opened for reading by default.  Specify the *mode* argument for opening it "
"for writing and silencing a warning. (Contributed by Serhiy Storchaka in :"
"issue:`28286`.)"
msgstr ""
"A abertura do arquivo :class:`~gzip.GzipFile` para escrita sem especificar o "
"argumento *mode* foi descontinuado. Nas versões futuras do Python, ele "
"sempre será aberto para leitura por padrão. Especifique o argumento *mode* "
"para abri-lo para escrever e silenciar um aviso. (Contribuição de Serhiy "
"Storchaka em :issue:`28286`.)"

#: ../../whatsnew/3.9.rst:892
msgid ""
"Deprecated the ``split()`` method of :class:`!_tkinter.TkappType` in favour "
"of the ``splitlist()`` method which has more consistent and predictable "
"behavior. (Contributed by Serhiy Storchaka in :issue:`38371`.)"
msgstr ""
"Descontinuado o método ``split()`` de :class:`!_tkinter.TkappType` a favor "
"do método ``splitlist()`` que possui um comportamento mais consistente e "
"previsível. (Contribuição de Serhiy Storchaka em :issue:`38371`.)"

#: ../../whatsnew/3.9.rst:897
msgid ""
"The explicit passing of coroutine objects to :func:`asyncio.wait` has been "
"deprecated and will be removed in version 3.11. (Contributed by Yury "
"Selivanov and Kyle Stanley in :issue:`34790`.)"
msgstr ""
"A passagem explícita dos objetos da corrotina para :func:`asyncio.wait` foi "
"descontinuada e será removida na versão 3.11. (Contribuição de Yury "
"Selivanov e Kyle Stanley em :issue:`34790`.)"

#: ../../whatsnew/3.9.rst:901
msgid ""
"binhex4 and hexbin4 standards are now deprecated. The :mod:`!binhex` module "
"and the following :mod:`binascii` functions are now deprecated:"
msgstr ""
"Os padrões binhex4 e hexbin4 agora foram descontinuados. O módulo :mod:`!"
"binhex` e as seguintes funções :mod:`binascii` foram descontinuadas:"

#: ../../whatsnew/3.9.rst:904
msgid ":func:`!b2a_hqx`, :func:`!a2b_hqx`"
msgstr ":func:`!b2a_hqx`, :func:`!a2b_hqx`"

#: ../../whatsnew/3.9.rst:905
msgid ":func:`!rlecode_hqx`, :func:`!rledecode_hqx`"
msgstr ":func:`!rlecode_hqx`, :func:`!rledecode_hqx`"

#: ../../whatsnew/3.9.rst:907
msgid "(Contributed by Victor Stinner in :issue:`39353`.)"
msgstr "(Contribuição de Victor Stinner em :issue:`39353`.)"

#: ../../whatsnew/3.9.rst:909
msgid ""
":mod:`ast` classes ``slice``, ``Index`` and ``ExtSlice`` are considered "
"deprecated and will be removed in future Python versions.  ``value`` itself "
"should be used instead of ``Index(value)``.  ``Tuple(slices, Load())`` "
"should be used instead of ``ExtSlice(slices)``. (Contributed by Serhiy "
"Storchaka in :issue:`34822`.)"
msgstr ""
"As classes ``slice``, ``Index`` e ``ExtSlice`` de :mod:`ast` são "
"consideradas descontinuadas e serão removidas nas versões futuras do Python. "
"O próprio ``value`` deve ser usado em vez de ``Index(value)``. "
"``Tuple(slices, Load())`` deve ser usada em vez de ``ExtSlice(slices)``. "
"(Contribuição de Serhiy Storchaka em  :issue:`34822`.)"

#: ../../whatsnew/3.9.rst:915
msgid ""
":mod:`ast` classes ``Suite``, ``Param``, ``AugLoad`` and ``AugStore`` are "
"considered deprecated and will be removed in future Python versions. They "
"were not generated by the parser and not accepted by the code generator in "
"Python 3. (Contributed by Batuhan Taskaya in :issue:`39639` and :issue:"
"`39969` and Serhiy Storchaka in :issue:`39988`.)"
msgstr ""
"As classes ``Suite``, ``Param``, ``AugLoad`` e ``AugStore`` de :mod:`ast` "
"são consideradas descontinuadas e serão removidas nas versões futuras do "
"Python. Elas não foram geradas pelo analisador sintático e não foram aceitos "
"pelo gerador de código no Python 3. (Contribuição de Batuhan Taskaya em :"
"issue:`39639` e :issue:`39969` e Serhiy Storchaka em :issue:`39988`.)"

#: ../../whatsnew/3.9.rst:922
msgid ""
"The :c:func:`!PyEval_InitThreads` and :c:func:`!PyEval_ThreadsInitialized` "
"functions are now deprecated and will be removed in Python 3.11. Calling :c:"
"func:`!PyEval_InitThreads` now does nothing. The :term:`GIL` is initialized "
"by :c:func:`Py_Initialize` since Python 3.7. (Contributed by Victor Stinner "
"in :issue:`39877`.)"
msgstr ""
"As funções :c:func:`!PyEval_InitThreads` e :c:func:`!"
"PyEval_ThreadsInitialized` agora estão descontinuadas e serão removidas no "
"Python 3.11. Chamar :c:func:`!PyEval_InitThreads` agora não faz nada. A :"
"term:`GIL` é inicializada por :c:func:`Py_Initialize` desde o Python 3.7. "
"(Contribuição de Victor Stinner em :issue:`39877`.)"

#: ../../whatsnew/3.9.rst:928
msgid ""
"Passing ``None`` as the first argument to the :func:`shlex.split` function "
"has been deprecated.  (Contributed by Zackery Spytz in :issue:`33262`.)"
msgstr ""
"Passar ``None`` como o primeiro argumento para a função :func:`shlex.split` "
"foi descontinuada.  (Contribuição de Zackery Spytz em :issue:`33262`.)"

#: ../../whatsnew/3.9.rst:931
msgid ""
":func:`!smtpd.MailmanProxy` is now deprecated as it is unusable without an "
"external module, ``mailman``.  (Contributed by Samuel Colvin in :issue:"
"`35800`.)"
msgstr ""
":func:`!smtpd.MailmanProxy` está agora descontinuado, pois está inutilizável "
"sem um módulo externo, ``mailman``.  (Contribuição de Samuel Colvin em :"
"issue:`35800`.)"

#: ../../whatsnew/3.9.rst:934
msgid ""
"The :mod:`lib2to3` module now emits a :exc:`PendingDeprecationWarning`. "
"Python 3.9 switched to a PEG parser (see :pep:`617`), and Python 3.10 may "
"include new language syntax that is not parsable by lib2to3's LL(1) parser. "
"The ``lib2to3`` module may be removed from the standard library in a future "
"Python version. Consider third-party alternatives such as `LibCST`_ or "
"`parso`_. (Contributed by Carl Meyer in :issue:`40360`.)"
msgstr ""
"O módulo :mod:`lib2to3` agora emite um :exc:`PendingDeprecationWarning`. "
"Python 3.9 mudou para um analisador sintático GASE (veja :pep:`617`) e "
"Python 3.10 pode incluir uma nova sintaxe de linguagem que não é analisável "
"pelo analisador sintático LL(1) de lib2to3. O módulo ``lib2to3`` pode ser "
"removido da biblioteca padrão em uma versão futura do Python. Considere "
"alternativas de terceiros, como `LibCST`_ ou `parso`_. (Contribuição de Carl "
"Meyer em :issue:`40360`.)"

#: ../../whatsnew/3.9.rst:942
msgid ""
"The *random* parameter of :func:`random.shuffle` has been deprecated. "
"(Contributed by Raymond Hettinger in :issue:`40465`)"
msgstr ""
"Adicionado o parâmetro *random* da :func:`random.shuffle` foi descontinuado. "
"(Contribuição de Raymond Hettinger em :issue:`40465`)"

#: ../../whatsnew/3.9.rst:951 ../../whatsnew/3.9.rst:1406
msgid "Removed"
msgstr "Removidos"

#: ../../whatsnew/3.9.rst:953
msgid ""
"The erroneous version at :data:`!unittest.mock.__version__` has been removed."
msgstr "A versão errônea em :data:`!unittest.mock.__version__` foi removida."

#: ../../whatsnew/3.9.rst:955
msgid ""
":class:`nntplib.NNTP`: ``xpath()`` and ``xgtitle()`` methods have been "
"removed. These methods are deprecated since Python 3.3. Generally, these "
"extensions are not supported or not enabled by NNTP server administrators. "
"For ``xgtitle()``, please use :meth:`nntplib.NNTP.descriptions` or :meth:"
"`nntplib.NNTP.description` instead. (Contributed by Donghee Na in :issue:"
"`39366`.)"
msgstr ""
":class:`nntplib.NNTP`: os métodos ``xpath()`` e ``xgtitle()`` foram "
"removidos. Esses métodos foram descontinuados desde Python 3.3. Geralmente, "
"essas extensões não são suportadas ou não são habilitadas pelos "
"administradores do servidor NNTP. Para ``xgtitle()``, use :meth:`nntplib."
"NNTP.descriptions` ou :meth:`nntplib.NNTP.description`. (Contribuição de "
"Donghee Na em :issue:`39366`.)"

#: ../../whatsnew/3.9.rst:962
msgid ""
":class:`array.array`: ``tostring()`` and ``fromstring()`` methods have been "
"removed. They were aliases to ``tobytes()`` and ``frombytes()``, deprecated "
"since Python 3.2. (Contributed by Victor Stinner in :issue:`38916`.)"
msgstr ""
":class:`array.array`: os métodos ``tostring()`` e ``fromstring()`` foram "
"removidos. Eles eram aliases para ``tobytes()`` e ``frombytes()``, "
"descontinuado desde Python 3.2. (Contribuição de Victor Stinner em :issue:"
"`38916`.)"

#: ../../whatsnew/3.9.rst:967
msgid ""
"The undocumented ``sys.callstats()`` function has been removed. Since Python "
"3.7, it was deprecated and always returned :const:`None`. It required a "
"special build option ``CALL_PROFILE`` which was already removed in Python "
"3.7. (Contributed by Victor Stinner in :issue:`37414`.)"
msgstr ""
"A função ``sys.callstats()`` não documentada foi removida. Desde o Python "
"3.7, ela foi descontinuada e sempre retornou :const:`None`. É necessária uma "
"opção de compilação especial ``CALL_PROFILE`` que já foi removida no Python "
"3.7. (Contribuição de Victor Stinner em :issue:`37414`.)"

#: ../../whatsnew/3.9.rst:972
msgid ""
"The ``sys.getcheckinterval()`` and ``sys.setcheckinterval()`` functions have "
"been removed. They were deprecated since Python 3.2. Use :func:`sys."
"getswitchinterval` and :func:`sys.setswitchinterval` instead. (Contributed "
"by Victor Stinner in :issue:`37392`.)"
msgstr ""
"As funções ``sys.getcheckinterval()`` e ``sys.setcheckinterval()`` foram "
"removidas. Elas foram descontinuadas desde o Python 3.2. Use :func:`sys."
"getswitchinterval` e :func:`sys.setswitchinterval` em seu lugar. "
"(Contribuição de Victor Stinner em :issue:`37392`.)"

#: ../../whatsnew/3.9.rst:977
msgid ""
"The C function ``PyImport_Cleanup()`` has been removed. It was documented "
"as: \"Empty the module table.  For internal use only.\" (Contributed by "
"Victor Stinner in :issue:`36710`.)"
msgstr ""
"A função C ``PyImport_Cleanup()`` foi removida. Foi documentada como: "
"\"Esvazia a tabela do módulo. Apenas para uso interno.\" (Contribuição de "
"Victor Stinner em :issue:`36710`.)"

#: ../../whatsnew/3.9.rst:981
msgid ""
"``_dummy_thread`` and ``dummy_threading`` modules have been removed. These "
"modules were deprecated since Python 3.7 which requires threading support. "
"(Contributed by Victor Stinner in :issue:`37312`.)"
msgstr ""
"Os módulos ``_dummy_thread`` e ``dummy_threading`` foram removidos. Esses "
"módulos foram descontinuados desde o Python 3.7, que requer suporte a "
"threading. (Contribuição de Victor Stinner em :issue:`37312`.)"

#: ../../whatsnew/3.9.rst:985
msgid ""
"``aifc.openfp()`` alias to ``aifc.open()``, ``sunau.openfp()`` alias to "
"``sunau.open()``, and ``wave.openfp()`` alias to :func:`wave.open` have been "
"removed. They were deprecated since Python 3.7. (Contributed by Victor "
"Stinner in :issue:`37320`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:990
msgid ""
"The :meth:`!isAlive` method of :class:`threading.Thread` has been removed. "
"It was deprecated since Python 3.8. Use :meth:`~threading.Thread.is_alive` "
"instead. (Contributed by Donghee Na in :issue:`37804`.)"
msgstr ""

#: ../../whatsnew/3.9.rst:995
msgid ""
"Methods ``getchildren()`` and ``getiterator()`` of classes :class:`~xml."
"etree.ElementTree.ElementTree` and :class:`~xml.etree.ElementTree.Element` "
"in the :mod:`~xml.etree.ElementTree` module have been removed.  They were "
"deprecated in Python 3.2. Use ``iter(x)`` or ``list(x)`` instead of ``x."
"getchildren()`` and ``x.iter()`` or ``list(x.iter())`` instead of ``x."
"getiterator()``. (Contributed by Serhiy Storchaka in :issue:`36543`.)"
msgstr ""
"Os métodos ``getchildren()`` e ``getiterator()`` das classes :class:`~xml."
"etree.ElementTree.ElementTree` e :class:`~xml.etree.ElementTree.Element` no "
"módulo :mod:`~xml.etree.ElementTree` foram removidos.  Eles foram "
"descontinuados no Python 3.2. Use ``iter(x)`` ou ``list(x)`` em vez de ``x."
"getchildren()`` e ``x.iter()`` ou ``list(x.iter())`` em vez de ``x."
"getiterator()``. (Contribuição Serhiy Storchaka no :issue:`36543`.)"

#: ../../whatsnew/3.9.rst:1003
msgid ""
"The old :mod:`plistlib` API has been removed, it was deprecated since Python "
"3.4. Use the :func:`~plistlib.load`, :func:`~plistlib.loads`, :func:"
"`~plistlib.dump`, and :func:`~plistlib.dumps` functions. Additionally, the "
"*use_builtin_types* parameter was removed, standard :class:`bytes` objects "
"are always used instead. (Contributed by Jon Janzen in :issue:`36409`.)"
msgstr ""
"A API antiga :mod:`plistlib` foi removida. Ela tinha sido descontinuada "
"desde o Python 3.4. Use as funções :func:`~plistlib.load`, :func:`~plistlib."
"loads`, :func:`~plistlib.dump` e :func:`~plistlib.dumps`. Além disso, o "
"parâmetro *use_builtin_types* foi removido, os objetos padrão :class:`bytes` "
"são sempre usados em seu lugar. (Contribuição de Jon Janzen em :issue:"
"`36409`.)"

#: ../../whatsnew/3.9.rst:1009
msgid ""
"The C function ``PyGen_NeedsFinalizing`` has been removed. It was not "
"documented, tested, or used anywhere within CPython after the implementation "
"of :pep:`442`. Patch by Joannah Nanjekye. (Contributed by Joannah Nanjekye "
"in :issue:`15088`)"
msgstr ""
"A função C ``PyGen_NeedsFinalizing`` foi removida. Ela não foi documentada, "
"testada ou usada em qualquer lugar dentro do CPython após a implementação "
"de :pep:`442`. Patch de Joannah Nanjekye. (Contribuição de Joannah Nanjekye "
"em :issue:`15088`)"

#: ../../whatsnew/3.9.rst:1014
msgid ""
"``base64.encodestring()`` and ``base64.decodestring()``, aliases deprecated "
"since Python 3.1, have been removed: use :func:`base64.encodebytes` and :"
"func:`base64.decodebytes` instead. (Contributed by Victor Stinner in :issue:"
"`39351`.)"
msgstr ""
"``base64.encodestring()`` e ``base64.decodestring()``, aliases "
"descontinuados desde Python 3.1, foram removidos: use :func:`base64."
"encodebytes` e :func:`base64.decodebytes`. (Contribuição de Victor Stinner "
"em :issue:`39351`.)"

#: ../../whatsnew/3.9.rst:1019
msgid ""
"``fractions.gcd()`` function has been removed, it was deprecated since "
"Python 3.5 (:issue:`22486`): use :func:`math.gcd` instead. (Contributed by "
"Victor Stinner in :issue:`39350`.)"
msgstr ""
"A função ``fractions.gcd()`` foi removida, foi descontinuado desde Python "
"3.5 (:issue:`22486`): use :func:`math.gcd` em seu lugar. (Contribuição de "
"Victor Stinner em :issue:`39350`.)"

#: ../../whatsnew/3.9.rst:1023
msgid ""
"The *buffering* parameter of :class:`bz2.BZ2File` has been removed. Since "
"Python 3.0, it was ignored and using it emitted a :exc:`DeprecationWarning`. "
"Pass an open file object to control how the file is opened. (Contributed by "
"Victor Stinner in :issue:`39357`.)"
msgstr ""
"O parâmetro *buffering* de :class:`bz2.BZ2File` foi removido. Desde Python "
"3.0, ele era ignorado e ao usá-lo emitia uma :exc:`DeprecationWarning`. "
"Passe um objeto arquivo aberto para controlar como o arquivo é aberto. "
"(Contribuição de Victor Stinner em :issue:`39357`.)"

#: ../../whatsnew/3.9.rst:1028
msgid ""
"The *encoding* parameter of :func:`json.loads` has been removed. As of "
"Python 3.1, it was deprecated and ignored; using it has emitted a :exc:"
"`DeprecationWarning` since Python 3.8. (Contributed by Inada Naoki in :issue:"
"`39377`)"
msgstr ""
"O parâmetro *encoding* de :func:`json.loads` foi removido. A partir do "
"Python 3.1, ele foi descontinuado e ignorado; usá-lo emitia uma :exc:"
"`DeprecationWarning` desde Python 3.8. (Contribuição de Inada Naoki em :"
"issue:`39377`)"

#: ../../whatsnew/3.9.rst:1033
msgid ""
"``with (await asyncio.lock):`` and ``with (yield from asyncio.lock):`` "
"statements are not longer supported, use ``async with lock`` instead.  The "
"same is correct for ``asyncio.Condition`` and ``asyncio.Semaphore``. "
"(Contributed by Andrew Svetlov in :issue:`34793`.)"
msgstr ""
"As instruções ``with (await asyncio.lock):`` e ``with (yield from asyncio."
"lock):`` não são mais suportadas, use ``async with lock``. O mesmo é se "
"aplica para ``asyncio.Condition`` e ``asyncio.Semaphore``. (Contribuição de "
"Andrew Svetlov em :issue:`34793`.)"

#: ../../whatsnew/3.9.rst:1038
msgid ""
"The :func:`!sys.getcounts` function, the ``-X showalloccount`` command line "
"option and the ``show_alloc_count`` field of the C structure :c:type:"
"`PyConfig` have been removed. They required a special Python build by "
"defining ``COUNT_ALLOCS`` macro. (Contributed by Victor Stinner in :issue:"
"`39489`.)"
msgstr ""
"A função :func:`!sys.getcounts`, a opção de linha de comando ``-X "
"showalloccount`` e o campo ``show_alloc_count`` da estrutura C :c:type:"
"`PyConfig` foram removidos. Eles exigiam uma construção especial do Python "
"definindo a macro ``COUNT_ALLOCS``. (Contribuição de Victor Stinner em :"
"issue:`39489`.)"

#: ../../whatsnew/3.9.rst:1044
msgid ""
"The ``_field_types`` attribute of the :class:`typing.NamedTuple` class has "
"been removed.  It was deprecated since Python 3.8.  Use the "
"``__annotations__`` attribute instead. (Contributed by Serhiy Storchaka in :"
"issue:`40182`.)"
msgstr ""
"O atributo ``_field_types`` da classe :class:`typing.NamedTuple` foi "
"removido. Ele foi descontinuado desde o Python 3.8. Use o atributo "
"``__annotations__``. (Contribuição de Serhiy Storchaka em :issue:`40182`.)"

#: ../../whatsnew/3.9.rst:1049
msgid ""
"The :meth:`!symtable.SymbolTable.has_exec` method has been removed. It was "
"deprecated since 2006, and only returning ``False`` when it's called. "
"(Contributed by Batuhan Taskaya in :issue:`40208`)"
msgstr ""
"O método :meth:`!symtable.SymbolTable.has_exec` foi removido. Ele foi "
"descontinuado desde 2006, e retornando apenas ``False`` quando é chamado. "
"(Contribuição de Batuhan Taskaya em :issue:`40208`)"

#: ../../whatsnew/3.9.rst:1053
msgid ""
"The :meth:`!asyncio.Task.current_task` and :meth:`!asyncio.Task.all_tasks` "
"have been removed. They were deprecated since Python 3.7 and you can use :"
"func:`asyncio.current_task` and :func:`asyncio.all_tasks` instead. "
"(Contributed by Rémi Lapeyre in :issue:`40967`)"
msgstr ""
"Os métodos :meth:`!asyncio.Task.current_task` e :meth:`!asyncio.Task."
"all_tasks` foram removidos. Eles foram descontinuados desde o Python 3.7 e "
"você pode usar :func:`asyncio.current_task` e :func:`asyncio.all_tasks` em "
"seu lugar. (Contribuição de Rémi Lapeyre em :issue:`40967`)"

#: ../../whatsnew/3.9.rst:1058
msgid ""
"The ``unescape()`` method in the :class:`html.parser.HTMLParser` class has "
"been removed (it was deprecated since Python 3.4).  :func:`html.unescape` "
"should be used for converting character references to the corresponding "
"unicode characters."
msgstr ""
"O método ``unescape()`` na classe :class:`html.parser.HTMLParser` foi "
"removido (foi descontinuado desde o Python 3.4). :func:`html.unescape` deve "
"ser usada para converter referências de caracteres para os caracteres "
"Unicode correspondentes."

#: ../../whatsnew/3.9.rst:1065 ../../whatsnew/3.9.rst:1332
msgid "Porting to Python 3.9"
msgstr "Portando para Python 3.9"

#: ../../whatsnew/3.9.rst:1067
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"Esta seção lista as alterações descritas anteriormente e outras correções "
"que podem exigir alterações no seu código."

#: ../../whatsnew/3.9.rst:1072
msgid "Changes in the Python API"
msgstr "Alterações na API Python"

#: ../../whatsnew/3.9.rst:1074
msgid ""
":func:`__import__` and :func:`importlib.util.resolve_name` now raise :exc:"
"`ImportError` where it previously raised :exc:`ValueError`. Callers catching "
"the specific exception type and supporting both Python 3.9 and earlier "
"versions will need to catch both using ``except (ImportError, ValueError):``."
msgstr ""
":func:`__import__` e :func:`importlib.util.resolve_name` agora levanta :exc:"
"`ImportError` onde anteriormente levantava :exc:`ValueError`. Os chamadores "
"capturando o tipo de exceção específico e suportando Python 3.9 e versões "
"anteriores precisarão capturar ambas usando ``except (ImportError, "
"ValueError):``."

#: ../../whatsnew/3.9.rst:1079
msgid ""
"The :mod:`venv` activation scripts no longer special-case when "
"``__VENV_PROMPT__`` is set to ``\"\"``."
msgstr ""
"Os scripts de ativação :mod:`venv` não são mais casos especiais quando "
"``__VENV_PROMPT__`` está definido como ``\"\"``."

#: ../../whatsnew/3.9.rst:1082
msgid ""
"The :meth:`select.epoll.unregister` method no longer ignores the :const:"
"`~errno.EBADF` error. (Contributed by Victor Stinner in :issue:`39239`.)"
msgstr ""
"O método :meth:`select.epoll.unregister` não ignora mais o erro :const:"
"`~errno.EBADF`. (Contribuição de Victor Stinner em :issue:`39239`.)"

#: ../../whatsnew/3.9.rst:1086
msgid ""
"The *compresslevel* parameter of :class:`bz2.BZ2File` became keyword-only, "
"since the *buffering* parameter has been removed. (Contributed by Victor "
"Stinner in :issue:`39357`.)"
msgstr ""
"O parâmetro *compresslevel* de :class:`bz2.BZ2File` tornou-se uma parâmetro "
"somente-nomeado, uma vez que o parâmetro *buffering* foi removido. "
"(Contribuição de Victor Stinner em :issue:`39357`.)"

#: ../../whatsnew/3.9.rst:1090
msgid ""
"Simplified AST for subscription. Simple indices will be represented by their "
"value, extended slices will be represented as tuples. ``Index(value)`` will "
"return a ``value`` itself, ``ExtSlice(slices)`` will return ``Tuple(slices, "
"Load())``. (Contributed by Serhiy Storchaka in :issue:`34822`.)"
msgstr ""
"AST simplificada para assinatura. Índices simples serão representados por "
"seus valores, fatias estendidas serão representadas como tuplas. "
"``Index(value)`` retornará um ``value`` em si, ``ExtSlice(slices)`` "
"retornará ``Tuple(slices, Load())``. (Contribuição de Serhiy Storchaka em :"
"issue:`34822`.)"

#: ../../whatsnew/3.9.rst:1096
msgid ""
"The :mod:`importlib` module now ignores the :envvar:`PYTHONCASEOK` "
"environment variable when the :option:`-E` or :option:`-I` command line "
"options are being used."
msgstr ""
"O módulo :mod:`importlib` agora ignora a variável de ambiente :envvar:"
"`PYTHONCASEOK` quando as opções de linha de comando :option:`-E` ou :option:"
"`-I` estão sendo usadas."

#: ../../whatsnew/3.9.rst:1100
msgid ""
"The *encoding* parameter has been added to the classes :class:`ftplib.FTP` "
"and :class:`ftplib.FTP_TLS` as a keyword-only parameter, and the default "
"encoding is changed from Latin-1 to UTF-8 to follow :rfc:`2640`."
msgstr ""
"O parâmetro *encoding* foi adicionado às classes :class:`ftplib.FTP` e :"
"class:`ftplib.FTP_TLS` como um parâmetro somente-nomeado, e a codificação "
"padrão foi alterada de Latin-1 para UTF-8 para siga :rfc:`2640`."

#: ../../whatsnew/3.9.rst:1104
msgid ""
":meth:`asyncio.loop.shutdown_default_executor` has been added to :class:"
"`~asyncio.AbstractEventLoop`, meaning alternative event loops that inherit "
"from it should have this method defined. (Contributed by Kyle Stanley in :"
"issue:`34037`.)"
msgstr ""
":meth:`asyncio.loop.shutdown_default_executor` foi adicionado a :class:"
"`~asyncio.AbstractEventLoop`, significando que laços de eventos alternativos "
"que herdam dele devem ter este método definido. (Contribuição de Kyle "
"Stanley em :issue:`34037`.)"

#: ../../whatsnew/3.9.rst:1109
msgid ""
"The constant values of future flags in the :mod:`__future__` module is "
"updated in order to prevent collision with compiler flags. Previously "
"``PyCF_ALLOW_TOP_LEVEL_AWAIT`` was clashing with ``CO_FUTURE_DIVISION``. "
"(Contributed by Batuhan Taskaya in :issue:`39562`)"
msgstr ""
"Os valores constantes de futuras sinalizações no módulo :mod:`__future__` "
"são atualizados para evitar colisão com sinalizações do compilador. "
"Anteriormente, ``PyCF_ALLOW_TOP_LEVEL_AWAIT`` estava em conflito com "
"``CO_FUTURE_DIVISION``. (Contribuição de Batuhan Taskaya em :issue:`39562`)"

#: ../../whatsnew/3.9.rst:1114
msgid ""
"``array('u')`` now uses :c:type:`wchar_t` as C type instead of "
"``Py_UNICODE``. This change doesn't affect to its behavior because "
"``Py_UNICODE`` is alias of :c:type:`wchar_t` since Python 3.3. (Contributed "
"by Inada Naoki in :issue:`34538`.)"
msgstr ""
"``array('u')`` agora usa :c:type:`wchar_t` como tipo C em vez de "
"``Py_UNICODE``. Esta mudança não afeta seu comportamento porque "
"``Py_UNICODE`` é um apelido de :c:type:`wchar_t` desde Python 3.3. "
"(Contribuição de Inada Naoki em :issue:`34538`.)"

#: ../../whatsnew/3.9.rst:1119
msgid ""
"The :func:`logging.getLogger` API now returns the root logger when passed "
"the name ``'root'``, whereas previously it returned a non-root logger named "
"``'root'``. This could affect cases where user code explicitly wants a non-"
"root logger named ``'root'``, or instantiates a logger using ``logging."
"getLogger(__name__)`` in some top-level module called ``'root.py'``. "
"(Contributed by Vinay Sajip in :issue:`37742`.)"
msgstr ""
"A API de :func:`logging.getLogger` agora retorna o logger raiz quando "
"passado o nome ``'root'``, enquanto anteriormente retornava um logger não-"
"raiz chamado ``'root'``. Isso pode afetar casos onde o código do usuário "
"deseja explicitamente um logger não-root chamado ``'root'``, ou instancia um "
"logger usando ``logging.getLogger(__name__)`` em algum módulo de nível "
"superior chamado ``'root.py'``. (Contribuição de Vinay Sajip em :issue:"
"`37742`.)"

#: ../../whatsnew/3.9.rst:1126
msgid ""
"Division handling of :class:`~pathlib.PurePath` now returns :data:"
"`NotImplemented` instead of raising a :exc:`TypeError` when passed something "
"other than an instance of ``str`` or :class:`~pathlib.PurePath`.  This "
"allows creating compatible classes that don't inherit from those mentioned "
"types. (Contributed by Roger Aiudi in :issue:`34775`)."
msgstr ""
"O tratamento de divisão de :class:`~pathlib.PurePath` agora retorna :data:"
"`NotImplemented` ao invés de levantar um :exc:`TypeError` quando passado "
"algo diferente de uma instância de ``str`` ou :class:`~pathlib.PurePath`. "
"Isso permite a criação de classes compatíveis que não herdam desses tipos "
"mencionados. (Contribuição de Roger Aiudi em :issue:`34775`)."

#: ../../whatsnew/3.9.rst:1132
msgid ""
"Starting with Python 3.9.5 the :mod:`ipaddress` module no longer accepts any "
"leading zeros in IPv4 address strings. Leading zeros are ambiguous and "
"interpreted as octal notation by some libraries. For example the legacy "
"function :func:`socket.inet_aton` treats leading zeros as octal notatation. "
"glibc implementation of modern :func:`~socket.inet_pton` does not accept any "
"leading zeros. (Contributed by Christian Heimes in :issue:`36384`)."
msgstr ""
"A partir do Python 3.9.5, o módulo :mod:`ipaddress` não aceita mais zeros à "
"esquerda em strings de endereço IPv4. Os zeros à esquerda são ambíguos e "
"interpretados como notação octal por algumas bibliotecas. Por exemplo, a "
"função legada :func:`socket.inet_aton` trata os zeros à esquerda como "
"notação octal. A implementação glibc de :func:`~socket.inet_pton` moderna "
"não aceita nenhum zeros à esquerda. (Contribuição de Christian Heimes em :"
"issue:`36384`)."

#: ../../whatsnew/3.9.rst:1140
msgid ""
":func:`codecs.lookup` now normalizes the encoding name the same way as :func:"
"`encodings.normalize_encoding`, except that :func:`codecs.lookup` also "
"converts the name to lower case. For example, ``\"latex+latin1\"`` encoding "
"name is now normalized to ``\"latex_latin1\"``. (Contributed by Jordon Xu "
"in :issue:`37751`.)"
msgstr ""
":func:`codecs.lookup` agora normaliza o nome da codificação da mesma forma "
"que :func:`encodings.normalize_encoding`, exceto que :func:`codecs.lookup` "
"também converte o nome para minúsculas. Por exemplo, ``\"latex+latin1\"`` "
"nome de codificação agora está normalizado para ``\"latex_latin1\"``. "
"(Contribuição de Jordon Xu em :issue:`37751`.)"

#: ../../whatsnew/3.9.rst:1148
msgid "Changes in the C API"
msgstr "Alterações na API C"

#: ../../whatsnew/3.9.rst:1150
msgid ""
"Instances of :ref:`heap-allocated types <heap-types>` (such as those created "
"with :c:func:`PyType_FromSpec` and similar APIs) hold a reference to their "
"type object since Python 3.8. As indicated in the \"Changes in the C API\" "
"of Python 3.8, for the vast majority of cases, there should be no side "
"effect but for types that have a custom :c:member:`~PyTypeObject."
"tp_traverse` function, ensure that all custom ``tp_traverse`` functions of "
"heap-allocated types visit the object's type."
msgstr ""
"Instâncias de :ref:`tipos alocados por heap <heap-types>` (como aquelas "
"criadas com :c:func:`PyType_FromSpec` e APIs semelhantes) mantêm uma "
"referência para seu objeto de tipo desde o Python 3.8. Conforme indicado nas "
"\"Mudanças na API C\" do Python 3.8, para a grande maioria dos casos, não "
"deve haver nenhum efeito colateral, mas para os tipos que têm uma função "
"personalizada :c:member:`~PyTypeObject.tp_traverse`, certifique-se de que "
"todas as funções ``tp_traverse`` personalizadas de tipos alocados por heap "
"visitam o tipo do objeto."

#: ../../whatsnew/3.9.rst:1160
msgid ""
"int\n"
"foo_traverse(foo_struct *self, visitproc visit, void *arg) {\n"
"// Rest of the traverse function\n"
"#if PY_VERSION_HEX >= 0x03090000\n"
"    // This was not needed before Python 3.9 (Python issue 35810 and 40217)\n"
"    Py_VISIT(Py_TYPE(self));\n"
"#endif\n"
"}"
msgstr ""

#: ../../whatsnew/3.9.rst:1171
msgid ""
"If your traverse function delegates to ``tp_traverse`` of its base class (or "
"another type), ensure that ``Py_TYPE(self)`` is visited only once. Note that "
"only :ref:`heap type <heap-types>` are expected to visit the type in "
"``tp_traverse``."
msgstr ""
"Se sua função transversal delega para ``tp_traverse`` de sua classe base (ou "
"outro tipo), certifique-se de que ``Py_TYPE(self)`` seja visitado apenas uma "
"vez. Observe que apenas os :ref:`tipos de heap <heap-types>` devem visitar o "
"tipo em ``tp_traverse``."

#: ../../whatsnew/3.9.rst:1176
msgid "For example, if your ``tp_traverse`` function includes:"
msgstr "Por exemplo, se sua função ``tp_traverse`` inclui:"

#: ../../whatsnew/3.9.rst:1178
msgid "base->tp_traverse(self, visit, arg)"
msgstr ""

#: ../../whatsnew/3.9.rst:1182
msgid "then add:"
msgstr "adicione:"

#: ../../whatsnew/3.9.rst:1184
msgid ""
"#if PY_VERSION_HEX >= 0x03090000\n"
"    // This was not needed before Python 3.9 (bpo-35810 and bpo-40217)\n"
"    if (base->tp_flags & Py_TPFLAGS_HEAPTYPE) {\n"
"        // a heap type's tp_traverse already visited Py_TYPE(self)\n"
"    } else {\n"
"        Py_VISIT(Py_TYPE(self));\n"
"    }\n"
"#else"
msgstr ""

#: ../../whatsnew/3.9.rst:1195
msgid "(See :issue:`35810` and :issue:`40217` for more information.)"
msgstr "(Veja :issue:`35810` e :issue:`40217` para mais informações.)"

#: ../../whatsnew/3.9.rst:1197
msgid ""
"The functions ``PyEval_CallObject``, ``PyEval_CallFunction``, "
"``PyEval_CallMethod`` and ``PyEval_CallObjectWithKeywords`` are deprecated. "
"Use :c:func:`PyObject_Call` and its variants instead. (See more details in :"
"issue:`29548`.)"
msgstr ""
"As funções ``PyEval_CallObject``, ``PyEval_CallFunction``, "
"``PyEval_CallMethod`` e ``PyEval_CallObjectWithKeywords`` foram "
"descontinuadas. Use :c:func:`PyObject_Call` e suas variantes. (Veja mais "
"detalhes em :issue:`29548`.)"

#: ../../whatsnew/3.9.rst:1203
msgid "CPython bytecode changes"
msgstr "Alterações de bytecode do CPython"

#: ../../whatsnew/3.9.rst:1205
msgid ""
"The :opcode:`LOAD_ASSERTION_ERROR` opcode was added for handling the :"
"keyword:`assert` statement. Previously, the assert statement would not work "
"correctly if the :exc:`AssertionError` exception was being shadowed. "
"(Contributed by Zackery Spytz in :issue:`34880`.)"
msgstr ""
"O opcode :opcode:`LOAD_ASSERTION_ERROR` foi adicionado para tratar a "
"instrução :keyword:`assert`. Anteriormente, a instrução assert não "
"funcionava corretamente se a exceção :exc:`AssertionError` estivesse sendo "
"ocultada. (Contribuição de Zackery Spytz em :issue:`34880`.)"

#: ../../whatsnew/3.9.rst:1210
msgid ""
"The :opcode:`COMPARE_OP` opcode was split into four distinct instructions:"
msgstr ""
"O código de operação :opcode:`COMPARE_OP` foi dividido em quatro instruções "
"distintas:"

#: ../../whatsnew/3.9.rst:1212
msgid "``COMPARE_OP`` for rich comparisons"
msgstr "``COMPARE_OP`` para comparações ricas"

#: ../../whatsnew/3.9.rst:1213
msgid "``IS_OP`` for 'is' and 'is not' tests"
msgstr "``IS_OP`` para testes \"is\" e \"is not\""

#: ../../whatsnew/3.9.rst:1214
msgid "``CONTAINS_OP`` for 'in' and 'not in' tests"
msgstr "``CONTAINS_OP`` para testes \"in\" e \"not in\""

#: ../../whatsnew/3.9.rst:1215
msgid ""
"``JUMP_IF_NOT_EXC_MATCH`` for checking exceptions in 'try-except' statements."
msgstr ""
"``JUMP_IF_NOT_EXC_MATCH`` para verificar exceções em instruções \"try-"
"except\"."

#: ../../whatsnew/3.9.rst:1218
msgid "(Contributed by Mark Shannon in :issue:`39156`.)"
msgstr "(Contribuição de Mark Shannon em :issue:`39156`.)"

#: ../../whatsnew/3.9.rst:1222
msgid "Build Changes"
msgstr "Alterações de compilação"

#: ../../whatsnew/3.9.rst:1224
msgid ""
"Added ``--with-platlibdir`` option to the ``configure`` script: name of the "
"platform-specific library directory, stored in the new :data:`sys."
"platlibdir` attribute. See :data:`sys.platlibdir` attribute for more "
"information. (Contributed by Jan Matějek, Matěj Cepl, Charalampos Stratakis "
"and Victor Stinner in :issue:`1294959`.)"
msgstr ""
"Adicionada a opção ``--with-platlibdir`` ao script ``configure``: nome do "
"diretório de biblioteca específico da plataforma, armazenado no novo "
"atributo :data:`sys.platlibdir`. Veja o atributo :data:`sys.platlibdir` para "
"mais informações. (Contribuição de Jan Matějek, Matěj Cepl, Charalampos "
"Stratakis e Victor Stinner em :issue:`1294959`.)"

#: ../../whatsnew/3.9.rst:1230
msgid ""
"The ``COUNT_ALLOCS`` special build macro has been removed. (Contributed by "
"Victor Stinner in :issue:`39489`.)"
msgstr ""
"A macro especial de construção ``COUNT_ALLOCS`` foi removida. (Contribuição "
"de Victor Stinner em :issue:`39489`.)"

#: ../../whatsnew/3.9.rst:1233
msgid ""
"On non-Windows platforms, the :c:func:`!setenv` and :c:func:`!unsetenv` "
"functions are now required to build Python. (Contributed by Victor Stinner "
"in :issue:`39395`.)"
msgstr ""
"Em plataformas não Windows, as funções :c:func:`!setenv` e :c:func:`!"
"unsetenv` agora são necessárias para construir o Python. (Contribuição de "
"Victor Stinner em :issue:`39395`.)"

#: ../../whatsnew/3.9.rst:1237
msgid ""
"On non-Windows platforms, creating ``bdist_wininst`` installers is now "
"officially unsupported.  (See :issue:`10945` for more details.)"
msgstr ""
"Em plataformas não-Windows, a criação de instaladores ``bdist_wininst`` não "
"possui mais suporte oficial. (Veja :issue:`10945` para mais detalhes.)"

#: ../../whatsnew/3.9.rst:1240
msgid ""
"When building Python on macOS from source, ``_tkinter`` now links with non-"
"system Tcl and Tk frameworks if they are installed in ``/Library/"
"Frameworks``, as had been the case on older releases of macOS. If a macOS "
"SDK is explicitly configured, by using :option:`--enable-universalsdk` or ``-"
"isysroot``, only the SDK itself is searched. The default behavior can still "
"be overridden with ``--with-tcltk-includes`` and ``--with-tcltk-libs``. "
"(Contributed by Ned Deily in :issue:`34956`.)"
msgstr ""
"Ao compilar Python no macOS a partir do código-fonte, ``_tkinter`` agora se "
"vincula a frameworks Tcl e Tk não pertencentes ao sistema se eles estiverem "
"instalados em ``/Library/Frameworks``, como era o caso em versões mais "
"antigas do macOS. Se um macOS SDK for explicitamente configurado, usando :"
"option:`--enable-universalsdk` ou ``-isysroot``, somente o SDK em si será "
"procurado. Esse comportamento padrão pode ser sobreposto com ``--with-tcltk-"
"include`` e ``--with-tcltk-libs``. (Contribuição de Ned Deily em :issue:"
"`34956`.)"

#: ../../whatsnew/3.9.rst:1249
msgid ""
"Python can now be built for Windows 10 ARM64. (Contributed by Steve Dower "
"in :issue:`33125`.)"
msgstr ""
"Python pode agora ser construído para Windows 10 ARM64. (Contribuição de "
"Steve Dower em :issue:`33125`.)"

#: ../../whatsnew/3.9.rst:1252
msgid ""
"Some individual tests are now skipped when ``--pgo`` is used.  The tests in "
"question increased the PGO task time significantly and likely didn't help "
"improve optimization of the final executable. This speeds up the task by a "
"factor of about 15x.  Running the full unit test suite is slow.  This change "
"may result in a slightly less optimized build since not as many code "
"branches will be executed.  If you are willing to wait for the much slower "
"build, the old behavior can be restored using ``./configure [..] "
"PROFILE_TASK=\"-m test --pgo-extended\"``.  We make no guarantees as to "
"which PGO task set produces a faster build.  Users who care should run their "
"own relevant benchmarks as results can depend on the environment, workload, "
"and compiler tool chain. (See :issue:`36044` and :issue:`37707` for more "
"details.)"
msgstr ""
"Alguns testes individuais agora são ignorados quando ``--pgo`` é usada. Os "
"testes em questão aumentaram significativamente o tempo da tarefa de PGO e "
"provavelmente não ajudaram a melhorar a otimização do executável final. Isso "
"acelera a tarefa por um fator de cerca de 15x. A execução de todo o conjunto "
"de testes de unidade é lenta. Esta mudança pode resultar em uma construção "
"um pouco menos otimizada, uma vez que nem tantos ramos de código serão "
"executados. Se você estiver disposto a esperar por uma construção muito mais "
"lenta, o comportamento antigo pode ser restaurado usando ``./configure [..] "
"PROFILE_TASK=\"-m test --pgo-extended\"``. Não oferecemos garantia de qual "
"conjunto de tarefas de PGO produz uma construção mais rápida. Os usuários "
"que se importam devem executar seus próprios benchmarks relevantes, pois os "
"resultados podem depender do ambiente, da carga de trabalho e da cadeia de "
"ferramentas do compilador. (Veja :issue:`36044` e :issue:`37707` para mais "
"detalhes.)"

#: ../../whatsnew/3.9.rst:1267
msgid "C API Changes"
msgstr "Alterações na API C"

#: ../../whatsnew/3.9.rst:1272
msgid ""
":pep:`573`: Added :c:func:`PyType_FromModuleAndSpec` to associate a module "
"with a class; :c:func:`PyType_GetModule` and :c:func:`PyType_GetModuleState` "
"to retrieve the module and its state; and :c:type:`PyCMethod` and :c:macro:"
"`METH_METHOD` to allow a method to access the class it was defined in. "
"(Contributed by Marcel Plch and Petr Viktorin in :issue:`38787`.)"
msgstr ""
":pep:`573`: Adicionada :c:func:`PyType_FromModuleAndSpec` para associar um "
"módulo a uma classe; :c:func:`PyType_GetModule` e :c:func:"
"`PyType_GetModuleState` para obter o módulo e seu estado; e :c:type:"
"`PyCMethod` e :c:macro:`METH_METHOD` para permitir que um método acesse a "
"classe na qual ela foi definida. (Contribuição de Marcel Plch e Petr "
"Viktorin em :issue:`38787`.)"

#: ../../whatsnew/3.9.rst:1279
msgid ""
"Added :c:func:`PyFrame_GetCode` function: get a frame code. Added :c:func:"
"`PyFrame_GetBack` function: get the frame next outer frame. (Contributed by "
"Victor Stinner in :issue:`40421`.)"
msgstr ""
"Adicionada a função :c:func:`PyFrame_GetCode`: obtém um código de quadro. "
"Adiciona a função :c:func:`PyFrame_GetBack`: obtém o próximo quadro externo. "
"(Contribuição de Victor Stinner em :issue:`40421`.)"

#: ../../whatsnew/3.9.rst:1283
msgid ""
"Added :c:func:`PyFrame_GetLineNumber` to the limited C API. (Contributed by "
"Victor Stinner in :issue:`40421`.)"
msgstr ""
"Adicionada :c:func:`PyFrame_GetLineNumber` à API C limitada. (Contribuição "
"de Victor Stinner em :issue:`40421`.)"

#: ../../whatsnew/3.9.rst:1286
msgid ""
"Added :c:func:`PyThreadState_GetInterpreter` and :c:func:"
"`PyInterpreterState_Get` functions to get the interpreter. Added :c:func:"
"`PyThreadState_GetFrame` function to get the current frame of a Python "
"thread state. Added :c:func:`PyThreadState_GetID` function: get the unique "
"identifier of a Python thread state. (Contributed by Victor Stinner in :"
"issue:`39947`.)"
msgstr ""
"Adicionada as funções :c:func:`PyThreadState_GetInterpreter` e :c:func:"
"`PyInterpreterState_Get` para obter o interpretador. Adiciona a função :c:"
"func:`PyThreadState_GetFrame` para obter o quadro atual de um estado de "
"thread do Python. Adiciona a função :c:func:`PyThreadState_GetID`: obtém o "
"identificador único de um estado de thread do Python. (Contribuição de "
"Victor Stinner em :issue:`39947`.)"

#: ../../whatsnew/3.9.rst:1294
msgid ""
"Added a new public :c:func:`PyObject_CallNoArgs` function to the C API, "
"which calls a callable Python object without any arguments. It is the most "
"efficient way to call a callable Python object without any argument. "
"(Contributed by Victor Stinner in :issue:`37194`.)"
msgstr ""
"Adicionada uma nova função pública :c:func:`PyObject_CallNoArgs` à API C, "
"que chama um objeto chamável Python sem nenhum argumento. É a maneira mais "
"eficiente de chamar um objeto chamável Python sem nenhum argumento. "
"(Contribuição de Victor Stinner em :issue:`37194`.)"

#: ../../whatsnew/3.9.rst:1299 ../../whatsnew/3.9.rst:1417
msgid "Changes in the limited C API (if ``Py_LIMITED_API`` macro is defined):"
msgstr ""
"Alterações na API C limitada (se a macro ``Py_LIMITED_API`` estiver "
"definida):"

#: ../../whatsnew/3.9.rst:1301
msgid ""
"Provide :c:func:`Py_EnterRecursiveCall` and :c:func:`Py_LeaveRecursiveCall` "
"as regular functions for the limited API. Previously, there were defined as "
"macros, but these macros didn't compile with the limited C API which cannot "
"access ``PyThreadState.recursion_depth`` field (the structure is opaque in "
"the limited C API)."
msgstr ""
"Fornece :c:func:`Py_EnterRecursiveCall` e :c:func:`Py_LeaveRecursiveCall` "
"como funções regulares para a API limitada. Anteriormente, eram definidas "
"como macros, mas essas macros não compilavam com a API C limitada, que não "
"pode acessar o campo ``PyThreadState.recursion_depth`` (a estrutura não é "
"visível na API C limitada)."

#: ../../whatsnew/3.9.rst:1307
msgid ""
"``PyObject_INIT()`` and ``PyObject_INIT_VAR()`` become regular \"opaque\" "
"function to hide implementation details."
msgstr ""
"``PyObject_INIT()`` e ``PyObject_INIT_VAR()`` se uma função regular não "
"visível para ocultar os detalhes da implementação."

#: ../../whatsnew/3.9.rst:1310 ../../whatsnew/3.9.rst:1444
msgid "(Contributed by Victor Stinner in :issue:`38644` and :issue:`39542`.)"
msgstr "(Contribuição de Victor Stinner em :issue:`38644` e :issue:`39542`.)"

#: ../../whatsnew/3.9.rst:1312
msgid ""
"The :c:func:`PyModule_AddType` function is added to help adding a type to a "
"module. (Contributed by Donghee Na in :issue:`40024`.)"
msgstr ""
"A função :c:func:`PyModule_AddType` é adicionado para ajudar a adicionar um "
"tipo a um módulo. (Contribuição de Donghee Na em :issue:`40024`.)"

#: ../../whatsnew/3.9.rst:1316
msgid ""
"Added the functions :c:func:`PyObject_GC_IsTracked` and :c:func:"
"`PyObject_GC_IsFinalized` to the public API to allow to query if Python "
"objects are being currently tracked or have been already finalized by the "
"garbage collector respectively. (Contributed by Pablo Galindo Salgado in :"
"issue:`40241`.)"
msgstr ""
"Adicionadas as funções :c:func:`PyObject_GC_IsTracked` e :c:func:"
"`PyObject_GC_IsFinalized` para a API pública para permitir a consulta se os "
"objetos Python estão sendo rastreados ou já foram finalizados pelo coletor "
"de lixo, respectivamente. (Contribuição de Pablo Galindo em :issue:`40241`.)"

#: ../../whatsnew/3.9.rst:1322
msgid ""
"Added :c:func:`!_PyObject_FunctionStr` to get a user-friendly string "
"representation of a function-like object. (Patch by Jeroen Demeyer in :issue:"
"`37645`.)"
msgstr ""
"Adicionada a :c:func:`!_PyObject_FunctionStr` para obter uma representação "
"amigável para o usuário de strings de um objeto função ou similar. (Patch "
"por Jeroen Demeyer em :issue:`37645`.)"

#: ../../whatsnew/3.9.rst:1326
msgid ""
"Added :c:func:`PyObject_CallOneArg` for calling an object with one "
"positional argument (Patch by Jeroen Demeyer in :issue:`37483`.)"
msgstr ""
"Adicionada :c:func:`PyObject_CallOneArg` para chamar um objeto com um "
"argumento posicional (Patch de Jeroen Demeyer em :issue:`37483`.)"

#: ../../whatsnew/3.9.rst:1334
msgid ""
"``PyInterpreterState.eval_frame`` (:pep:`523`) now requires a new mandatory "
"*tstate* parameter (``PyThreadState*``). (Contributed by Victor Stinner in :"
"issue:`38500`.)"
msgstr ""
"``PyInterpreterState.eval_frame`` (:pep:`523`) agora exige um novo parâmetro "
"*tstate* obrigatório (``PyThreadState*``). (Contribuição de Victor Stinner "
"em :issue:`38500`.)"

#: ../../whatsnew/3.9.rst:1338
msgid ""
"Extension modules: :c:member:`~PyModuleDef.m_traverse`, :c:member:"
"`~PyModuleDef.m_clear` and :c:member:`~PyModuleDef.m_free` functions of :c:"
"type:`PyModuleDef` are no longer called if the module state was requested "
"but is not allocated yet. This is the case immediately after the module is "
"created and before the module is executed (:c:data:`Py_mod_exec` function). "
"More precisely, these functions are not called if :c:member:`~PyModuleDef."
"m_size` is greater than 0 and the module state (as returned by :c:func:"
"`PyModule_GetState`) is ``NULL``."
msgstr ""
"Módulos de extensão: As funções :c:member:`~PyModuleDef.m_traverse`, :c:"
"member:`~PyModuleDef.m_clear` e :c:member:`~PyModuleDef.m_free` de :c:type:"
"`PyModuleDef` não são mais chamados se o estado do módulo foi solicitado, "
"mas ainda não está alocado. Este é o caso imediatamente após o módulo ser "
"criado e antes de o módulo ser executado (função :c:data:`Py_mod_exec`). "
"Mais precisamente, estas funções são são chamados se :c:member:`~PyModuleDef."
"m_size` for maior que 0 e o estado do módulo (como retornado por :c:func:"
"`PyModule_GetState`) for ``NULL``."

#: ../../whatsnew/3.9.rst:1347
msgid ""
"Extension modules without module state (``m_size <= 0``) are not affected."
msgstr ""
"Módulos de extensão sem um estado de módulo (``m_size <= 0``) não são "
"afetados."

#: ../../whatsnew/3.9.rst:1349
msgid ""
"If :c:func:`Py_AddPendingCall` is called in a subinterpreter, the function "
"is now scheduled to be called from the subinterpreter, rather than being "
"called from the main interpreter. Each subinterpreter now has its own list "
"of scheduled calls. (Contributed by Victor Stinner in :issue:`39984`.)"
msgstr ""
"Se :c:func:`Py_AddPendingCall` for chamada em um subinterpretador, a função "
"agora está programada para ser chamada a partir do subinterpretador, em vez "
"de ser chamada a partir do interpretador principal. Cada subinterpretador "
"agora tem sua própria lista de chamadas programadas. (Contribuição de Victor "
"Stinner em :issue:`39984`.)"

#: ../../whatsnew/3.9.rst:1355
msgid ""
"The Windows registry is no longer used to initialize :data:`sys.path` when "
"the ``-E`` option is used (if :c:member:`PyConfig.use_environment` is set to "
"``0``). This is significant when embedding Python on Windows. (Contributed "
"by Zackery Spytz in :issue:`8901`.)"
msgstr ""
"O registro do Windows não é mais usado para inicializar :data:`sys.path` "
"quando a opção ``-E`` é usada (se :c:member:`PyConfig.use_environment` "
"estiver definido como ``0``). Isso é significativo ao incorporar Python no "
"Windows. (Contribuição de Zackery Spytz na :issue:`8901`.)"

#: ../../whatsnew/3.9.rst:1360
msgid ""
"The global variable :c:data:`PyStructSequence_UnnamedField` is now a "
"constant and refers to a constant string. (Contributed by Serhiy Storchaka "
"in :issue:`38650`.)"
msgstr ""
"A variável global :c:data:`PyStructSequence_UnnamedField` agora é uma "
"constante e se refere a uma string constante. (Contribuição de Serhiy "
"Storchaka em :issue:`38650`.)"

#: ../../whatsnew/3.9.rst:1364
msgid ""
"The :c:type:`!PyGC_Head` structure is now opaque. It is only defined in the "
"internal C API (``pycore_gc.h``). (Contributed by Victor Stinner in :issue:"
"`40241`.)"
msgstr ""
"A estrutura :c:type:`!PyGC_Head` agora é opaca. Ela só é definida na API C "
"interna (``pycore_gc.h``). (Contribuição de Victor Stinner em :issue:"
"`40241`.)"

#: ../../whatsnew/3.9.rst:1368
msgid ""
"The ``Py_UNICODE_COPY``, ``Py_UNICODE_FILL``, ``PyUnicode_WSTR_LENGTH``, :c:"
"func:`!PyUnicode_FromUnicode`, :c:func:`!PyUnicode_AsUnicode`, "
"``_PyUnicode_AsUnicode``, and :c:func:`!PyUnicode_AsUnicodeAndSize` are "
"marked as deprecated in C.  They have been deprecated by :pep:`393` since "
"Python 3.3. (Contributed by Inada Naoki in :issue:`36346`.)"
msgstr ""
"``Py_UNICODE_COPY``, ``Py_UNICODE_FILL``, , ``PyUnicode_WSTR_LENGTH``, :c:"
"func:`!PyUnicode_FromUnicode`, :c:func:`!PyUnicode_AsUnicode`, "
"``_PyUnicode_AsUnicode`` e :c:func:`!PyUnicode_AsUnicodeAndSize` estão "
"marcadas como descontinuadas no C. Elas foram descontinuadas pela :pep:`393` "
"desde Python 3.3. (Contribuição de Inada Naoki em :issue:`36346`.)"

#: ../../whatsnew/3.9.rst:1375
msgid ""
"The :c:func:`Py_FatalError` function is replaced with a macro which logs "
"automatically the name of the current function, unless the "
"``Py_LIMITED_API`` macro is defined. (Contributed by Victor Stinner in :"
"issue:`39882`.)"
msgstr ""
"A função :c:func:`Py_FatalError` é substituída por uma macro que registra "
"automaticamente o nome da função atual, a menos que a macro "
"``Py_LIMITED_API`` seja definida. (Contribuição de Victor Stinner em :issue:"
"`39882`.)"

#: ../../whatsnew/3.9.rst:1380
msgid ""
"The vectorcall protocol now requires that the caller passes only strings as "
"keyword names. (See :issue:`37540` for more information.)"
msgstr ""
"O protocolo vectorcall agora exige que o chamador passe apenas strings como "
"nomes de argumentos. (Veja :issue:`37540` para mais informações.)"

#: ../../whatsnew/3.9.rst:1383
msgid ""
"Implementation details of a number of macros and functions are now hidden:"
msgstr ""
"Os detalhes de implementação de uma série de macros e funções agora estão "
"ocultos:"

#: ../../whatsnew/3.9.rst:1385
msgid ":c:func:`PyObject_IS_GC` macro was converted to a function."
msgstr "A macro :c:func:`PyObject_IS_GC` foi convertida para uma função."

#: ../../whatsnew/3.9.rst:1387
msgid ""
"The :c:func:`!PyObject_NEW` macro becomes an alias to the :c:macro:"
"`PyObject_New` macro, and the :c:func:`!PyObject_NEW_VAR` macro becomes an "
"alias to the :c:macro:`PyObject_NewVar` macro. They no longer access "
"directly the :c:member:`PyTypeObject.tp_basicsize` member."
msgstr ""
"A macro :c:func:`!PyObject_NEW` se torna um apelido para a macro :c:macro:"
"`PyObject_New` e a macro :c:func:`!PyObject_NEW_VAR` se torna um apelido "
"para a macro :c:macro:`PyObject_NewVar`. Elas não acessam mais diretamente o "
"membro :c:member:`PyTypeObject.tp_basicsize`."

#: ../../whatsnew/3.9.rst:1392
msgid ""
":c:func:`!PyObject_GET_WEAKREFS_LISTPTR` macro was converted to a function: "
"the macro accessed directly the :c:member:`PyTypeObject.tp_weaklistoffset` "
"member."
msgstr ""
"A macro :c:func:`!PyObject_GET_WEAKREFS_LISTPTR` foi convertida para uma "
"função: a macro acessava diretamente o membro :c:member:`PyTypeObject."
"tp_weaklistoffset`."

#: ../../whatsnew/3.9.rst:1396
msgid ""
":c:func:`PyObject_CheckBuffer` macro was converted to a function: the macro "
"accessed directly the :c:member:`PyTypeObject.tp_as_buffer` member."
msgstr ""
"A macro :c:func:`PyObject_CheckBuffer` foi convertida para uma função: a "
"macro acessava diretamente o membro :c:member:`PyTypeObject.tp_as_buffer`."

#: ../../whatsnew/3.9.rst:1399
msgid ""
":c:func:`PyIndex_Check` is now always declared as an opaque function to hide "
"implementation details: removed the ``PyIndex_Check()`` macro. The macro "
"accessed directly the :c:member:`PyTypeObject.tp_as_number` member."
msgstr ""
":c:func:`PyIndex_Check` está agora declarada como uma função \"opaca\" para "
"ocultar detalhes da implementação: removida a macro ``PyIndex_Check()``. A "
"macro acessava diretamente o membro :c:member:`PyTypeObject.tp_as_number`."

#: ../../whatsnew/3.9.rst:1403
msgid "(See :issue:`40170` for more details.)"
msgstr "(Veja :issue:`40170` para mais detalhes.)"

#: ../../whatsnew/3.9.rst:1408
msgid ""
"Excluded ``PyFPE_START_PROTECT()`` and ``PyFPE_END_PROTECT()`` macros of "
"``pyfpe.h`` from the limited C API. (Contributed by Victor Stinner in :issue:"
"`38835`.)"
msgstr ""
"Excluídas as macros ``PyFPE_START_PROTECT()`` e ``PyFPE_END_PROTECT()`` de "
"``pyfpe.h`` da API C limitada. (Contribuição por Victor Stinner em :issue:"
"`38835`.)"

#: ../../whatsnew/3.9.rst:1412
msgid ""
"The ``tp_print`` slot of :ref:`PyTypeObject <type-structs>` has been "
"removed. It was used for printing objects to files in Python 2.7 and before. "
"Since Python 3.0, it has been ignored and unused. (Contributed by Jeroen "
"Demeyer in :issue:`36974`.)"
msgstr ""
"O slot ``tp_print`` de :ref:`PyTypeObject <type-structs>` foi removido. Ele "
"era usado para imprimir objetos em arquivos no Python 2.7 e anteriores. "
"Desde Python 3.0, ele era ignorado e não utilizado. (Contribuição de Jeroen "
"Demeyer em :issue:`36974`.)"

#: ../../whatsnew/3.9.rst:1419
msgid "Excluded the following functions from the limited C API:"
msgstr "Excluídas as seguintes funções da API C limitada:"

#: ../../whatsnew/3.9.rst:1421
msgid ""
"``PyThreadState_DeleteCurrent()`` (Contributed by Joannah Nanjekye in :issue:"
"`37878`.)"
msgstr ""
"``PyThreadState_DeleteCurrent()`` (Contribuição de Joannah Nanjekye em :"
"issue:`37878`.)"

#: ../../whatsnew/3.9.rst:1423
msgid "``_Py_CheckRecursionLimit``"
msgstr "``_Py_CheckRecursionLimit``"

#: ../../whatsnew/3.9.rst:1424
msgid "``_Py_NewReference()``"
msgstr "``_Py_NewReference()``"

#: ../../whatsnew/3.9.rst:1425
msgid "``_Py_ForgetReference()``"
msgstr "``_Py_ForgetReference()``"

#: ../../whatsnew/3.9.rst:1426
msgid "``_PyTraceMalloc_NewReference()``"
msgstr "``_PyTraceMalloc_NewReference()``"

#: ../../whatsnew/3.9.rst:1427
msgid "``_Py_GetRefTotal()``"
msgstr "``_Py_GetRefTotal()``"

#: ../../whatsnew/3.9.rst:1428
msgid "The trashcan mechanism which never worked in the limited C API."
msgstr "O mecanismo trashcan que nunca funcionou na API C limitada."

#: ../../whatsnew/3.9.rst:1429
msgid "``PyTrash_UNWIND_LEVEL``"
msgstr "``PyTrash_UNWIND_LEVEL``"

#: ../../whatsnew/3.9.rst:1430
msgid "``Py_TRASHCAN_BEGIN_CONDITION``"
msgstr "``Py_TRASHCAN_BEGIN_CONDITION``"

#: ../../whatsnew/3.9.rst:1431
msgid "``Py_TRASHCAN_BEGIN``"
msgstr "``Py_TRASHCAN_BEGIN``"

#: ../../whatsnew/3.9.rst:1432
msgid "``Py_TRASHCAN_END``"
msgstr "``Py_TRASHCAN_END``"

#: ../../whatsnew/3.9.rst:1433
msgid "``Py_TRASHCAN_SAFE_BEGIN``"
msgstr "``Py_TRASHCAN_SAFE_BEGIN``"

#: ../../whatsnew/3.9.rst:1434
msgid "``Py_TRASHCAN_SAFE_END``"
msgstr "``Py_TRASHCAN_SAFE_END``"

#: ../../whatsnew/3.9.rst:1436
msgid "Moved following functions and definitions to the internal C API:"
msgstr "Movidas as seguintes funções e definições para a API C interna:"

#: ../../whatsnew/3.9.rst:1438
msgid "``_PyDebug_PrintTotalRefs()``"
msgstr "``_PyDebug_PrintTotalRefs()``"

#: ../../whatsnew/3.9.rst:1439
msgid "``_Py_PrintReferences()``"
msgstr "``_Py_PrintReferences()``"

#: ../../whatsnew/3.9.rst:1440
msgid "``_Py_PrintReferenceAddresses()``"
msgstr "``_Py_PrintReferenceAddresses()``"

#: ../../whatsnew/3.9.rst:1441
msgid "``_Py_tracemalloc_config``"
msgstr "``_Py_tracemalloc_config``"

#: ../../whatsnew/3.9.rst:1442
msgid "``_Py_AddToAllObjects()`` (specific to ``Py_TRACE_REFS`` build)"
msgstr ""
"``_Py_AddToAllObjects()`` (específico para construção de ``Py_TRACE_REFS``)"

#: ../../whatsnew/3.9.rst:1446
msgid ""
"Removed ``_PyRuntime.getframe`` hook and removed ``_PyThreadState_GetFrame`` "
"macro which was an alias to ``_PyRuntime.getframe``. They were only exposed "
"by the internal C API. Removed also ``PyThreadFrameGetter`` type. "
"(Contributed by Victor Stinner in :issue:`39946`.)"
msgstr ""
"Removido o gancho ``_PyRuntime.getframe`` e removida a macro "
"``_PyThreadState_GetFrame`` que era um alias para ``_PyRuntime.getframe``. "
"Eles eram os únicos expostos pela API C interna. Removido também o tipo "
"``PyThreadFrameGetter``. (Contribuição de Victor Stinner em :issue:`39946`.)"

#: ../../whatsnew/3.9.rst:1451
msgid ""
"Removed the following functions from the C API. Call :c:func:`PyGC_Collect` "
"explicitly to clear all free lists. (Contributed by Inada Naoki and Victor "
"Stinner in :issue:`37340`, :issue:`38896` and :issue:`40428`.)"
msgstr ""
"Removidas as funções a seguir da API C. Chame :c:func:`PyGC_Collect` "
"explicitamente para limpar todas as listas livres. (Contribuição de Inada "
"Naoki e Victor Stinner em :issue:`37340`, :issue:`38896` e :issue:`40428`.)"

#: ../../whatsnew/3.9.rst:1456
msgid "``PyAsyncGen_ClearFreeLists()``"
msgstr "``PyAsyncGen_ClearFreeLists()``"

#: ../../whatsnew/3.9.rst:1457
msgid "``PyContext_ClearFreeList()``"
msgstr "``PyContext_ClearFreeList()``"

#: ../../whatsnew/3.9.rst:1458
msgid "``PyDict_ClearFreeList()``"
msgstr "``PyDict_ClearFreeList()``"

#: ../../whatsnew/3.9.rst:1459
msgid "``PyFloat_ClearFreeList()``"
msgstr "``PyFloat_ClearFreeList()``"

#: ../../whatsnew/3.9.rst:1460
msgid "``PyFrame_ClearFreeList()``"
msgstr "``PyFrame_ClearFreeList()``"

#: ../../whatsnew/3.9.rst:1461
msgid "``PyList_ClearFreeList()``"
msgstr "``PyList_ClearFreeList()``"

#: ../../whatsnew/3.9.rst:1462
msgid ""
"``PyMethod_ClearFreeList()`` and ``PyCFunction_ClearFreeList()``: the free "
"lists of bound method objects have been removed."
msgstr ""
"``PyMethod_ClearFreeList()`` e ``PyCFunction_ClearFreeList()``: as listas "
"livres de objetos de método vinculado foram removidas."

#: ../../whatsnew/3.9.rst:1464
msgid ""
"``PySet_ClearFreeList()``: the set free list has been removed in Python 3.4."
msgstr ""
"``PySet_ClearFreeList()``: a definição de lista livres foi removida no "
"Python 3.4."

#: ../../whatsnew/3.9.rst:1466
msgid "``PyTuple_ClearFreeList()``"
msgstr "``PyTuple_ClearFreeList()``"

#: ../../whatsnew/3.9.rst:1467
msgid ""
"``PyUnicode_ClearFreeList()``: the Unicode free list has been removed in "
"Python 3.3."
msgstr ""
"``PyUnicode_ClearFreeList()``: a lista livre de Unicode foi removida no "
"Python 3.3."

#: ../../whatsnew/3.9.rst:1470
msgid ""
"Removed ``_PyUnicode_ClearStaticStrings()`` function. (Contributed by Victor "
"Stinner in :issue:`39465`.)"
msgstr ""
"Removida a função ``_PyUnicode_ClearStaticStrings()``. (Contribuição de "
"Victor Stinner em :issue:`39465`.)"

#: ../../whatsnew/3.9.rst:1473
msgid ""
"Removed ``Py_UNICODE_MATCH``. It has been deprecated by :pep:`393`, and "
"broken since Python 3.3. The :c:func:`PyUnicode_Tailmatch` function can be "
"used instead. (Contributed by Inada Naoki in :issue:`36346`.)"
msgstr ""
"Removido ``Py_UNICODE_MATCH``. Ele foi descontinuado por :pep:`393` e "
"quebrado desde o Python 3.3. A função :c:func:`PyUnicode_Tailmatch` pode ser "
"usada em seu lugar. (Contribuição de Inada Naoki em :issue:`36346`.)"

#: ../../whatsnew/3.9.rst:1478
msgid ""
"Cleaned header files of interfaces defined but with no implementation. The "
"public API symbols being removed are: "
"``_PyBytes_InsertThousandsGroupingLocale``, "
"``_PyBytes_InsertThousandsGrouping``, ``_Py_InitializeFromArgs``, "
"``_Py_InitializeFromWideArgs``, ``_PyFloat_Repr``, ``_PyFloat_Digits``, "
"``_PyFloat_DigitsInit``, ``PyFrame_ExtendStack``, ``_PyAIterWrapper_Type``, "
"``PyNullImporter_Type``, ``PyCmpWrapper_Type``, ``PySortWrapper_Type``, "
"``PyNoArgsFunction``. (Contributed by Pablo Galindo Salgado in :issue:"
"`39372`.)"
msgstr ""
"Limpados os arquivos de cabeçalho de interfaces definidas, mas sem "
"implementação. Os símbolos públicos da API sendo removidos são: "
"``_PyBytes_InsertThousandsGroupingLocale``, "
"``_PyBytes_InsertThousandsGrouping``, ``_Py_InitializeFromArgs``, "
"``_Py_InitializeFromWideArgs``, ``_PyFloat_Repr``, ``_PyFloat_Digits``, "
"``_PyFloat_DigitsInit``, ``PyFrame_ExtendStack``, ``_PyAIterWrapper_Type``, "
"``PyNullImporter_Type``, ``PyCmpWrapper_Type``, ``PySortWrapper_Type``, "
"``PyNoArgsFunction``. (Contribuição de Pablo Galindo Salgado em :issue:"
"`39372`.)"

#: ../../whatsnew/3.9.rst:1489
msgid "Notable changes in Python 3.9.1"
msgstr "Alterações notáveis no Python 3.9.1"

#: ../../whatsnew/3.9.rst:1494
msgid ""
"The behavior of :class:`typing.Literal` was changed to conform with :pep:"
"`586` and to match the behavior of static type checkers specified in the PEP."
msgstr ""
"O comportamento de :class:`typing.Literal` foi alterado para ficar em "
"conformidade com a :pep:`586` e para corresponder ao comportamento de "
"verificadores de tipo estático especificados na PEP."

#: ../../whatsnew/3.9.rst:1497
msgid "``Literal`` now de-duplicates parameters."
msgstr "``Literal`` agora elimina a duplicação de parâmetros."

#: ../../whatsnew/3.9.rst:1498
msgid ""
"Equality comparisons between ``Literal`` objects are now order independent."
msgstr ""
"Comparações de igualdade entre objetos ``Literal`` agora são independentes "
"da ordem."

#: ../../whatsnew/3.9.rst:1499
msgid ""
"``Literal`` comparisons now respect types.  For example, ``Literal[0] == "
"Literal[False]`` previously evaluated to ``True``.  It is now ``False``.  To "
"support this change, the internally used type cache now supports "
"differentiating types."
msgstr ""
"Comparações de ``Literal`` agora respeitam os tipos. Por exemplo, "
"``Literal[0] == Literal[False]`` avaliava anteriormente como ``True``. Agora "
"é ``False``. Para oferecer suporte a essa mudança, o cache de tipo usado "
"internamente agora oferece suporte a tipos de diferenciação."

#: ../../whatsnew/3.9.rst:1503
msgid ""
"``Literal`` objects will now raise a :exc:`TypeError` exception during "
"equality comparisons if any of their parameters are not :term:`hashable`. "
"Note that declaring ``Literal`` with mutable parameters will not throw an "
"error::"
msgstr ""
"Objetos ``Literal`` agora irão levantar uma exceção :exc:`TypeError` durante "
"as comparações de igualdade se algum de seus parâmetros não for :term:"
"`hasheável`. Observe que declarar ``Literal`` com parâmetros mutáveis não "
"gerará um erro::"

#: ../../whatsnew/3.9.rst:1508
msgid ""
">>> from typing import Literal\n"
">>> Literal[{0}]\n"
">>> Literal[{0}] == Literal[{False}]\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"TypeError: unhashable type: 'set'"
msgstr ""

#: ../../whatsnew/3.9.rst:1515
msgid "(Contributed by Yurii Karabas in :issue:`42345`.)"
msgstr "(Contribuição de Yurii Karabas em :issue:`42345`.)"

#: ../../whatsnew/3.9.rst:1518
msgid "macOS 11.0 (Big Sur) and Apple Silicon Mac support"
msgstr "Suporte a macOS 11.0 (Big Sur) e Apple Silicon Mac"

#: ../../whatsnew/3.9.rst:1520
msgid ""
"As of 3.9.1, Python now fully supports building and running on macOS 11.0 "
"(Big Sur) and on Apple Silicon Macs (based on the ``ARM64`` architecture). A "
"new universal build variant, ``universal2``, is now available to natively "
"support both ``ARM64`` and ``Intel 64`` in one set of executables. Binaries "
"can also now be built on current versions of macOS to be deployed on a range "
"of older macOS versions (tested to 10.9) while making some newer OS "
"functions and options conditionally available based on the operating system "
"version in use at runtime (\"weaklinking\")."
msgstr ""
"A partir do 3.9.1, o Python agora oferece suporte total à construção e "
"execução no macOS 11.0 (Big Sur) e no Apple Silicon Macs (baseado na "
"arquitetura ``ARM64``). Uma nova variante de compilação universal, "
"``universal2``, está agora disponível para suportar nativamente ambos "
"``ARM64`` e ``Intel 64`` em um conjunto de executáveis. Os binários também "
"podem ser construídos em versões atuais do macOS para serem implantados em "
"uma variedade de versões mais antigas do macOS (testado para 10.9), enquanto "
"algumas funções e opções do sistema operacional mais recentes estão "
"disponíveis condicionalmente com base na versão do sistema operacional em "
"uso no tempo de execução (\"ligação fraca\")"

#: ../../whatsnew/3.9.rst:1529
msgid "(Contributed by Ronald Oussoren and Lawrence D'Anna in :issue:`41100`.)"
msgstr "(Contribuição de Ronald Oussoren e Lawrence D'Anna em :issue:`41100`.)"

#: ../../whatsnew/3.9.rst:1532
msgid "Notable changes in Python 3.9.2"
msgstr "Alterações notáveis no Python 3.9.2"

#: ../../whatsnew/3.9.rst:1535
msgid "collections.abc"
msgstr "collections.abc"

#: ../../whatsnew/3.9.rst:1537
msgid ""
":class:`collections.abc.Callable` generic now flattens type parameters, "
"similar to what :data:`typing.Callable` currently does.  This means that "
"``collections.abc.Callable[[int, str], str]`` will have ``__args__`` of "
"``(int, str, str)``; previously this was ``([int, str], str)``.  To allow "
"this change, :class:`types.GenericAlias` can now be subclassed, and a "
"subclass will be returned when subscripting the :class:`collections.abc."
"Callable` type. Code which accesses the arguments via :func:`typing."
"get_args` or ``__args__`` need to account for this change.  A :exc:"
"`DeprecationWarning` may be emitted for invalid forms of parameterizing :"
"class:`collections.abc.Callable` which may have passed silently in Python "
"3.9.1.  This :exc:`DeprecationWarning` will become a :exc:`TypeError` in "
"Python 3.10. (Contributed by Ken Jin in :issue:`42195`.)"
msgstr ""
":class:`collections.abc.Callable` genérica agora nivela os parâmetros de "
"tipo, semelhante ao que :data:`typing.Callable` faz atualmente. Isso "
"significa que ``collections.abc.Callable[[int, str], str]`` terá "
"``__args__`` de ``(int, str, str)``; anteriormente era ``([int, str], "
"str)``. Para permitir esta mudança, :class:`types.GenericAlias` agora pode "
"ter uma subclasse, e uma subclasse será retornada ao subscrever o tipo :"
"class:`Collections.abc.Callable`. O código que acessa os argumentos via :"
"func:`typing.get_args` ou ``__args__`` precisa levar em conta esta mudança. "
"Um :exc:`DeprecationWarning` pode ser emitido para formas inválidas de "
"parametrização :class:`Collections.abc.Callable` que pode ter passado "
"silenciosamente no Python 3.9.1. Esta :exc:`DeprecationWarning` se tornará "
"uma :exc:`TypeError` no Python 3.10. (Contribuição de Ken Jin em :issue:"
"`42195`.)"

#: ../../whatsnew/3.9.rst:1551 ../../whatsnew/3.9.rst:1576
msgid "urllib.parse"
msgstr "urllib.parse"

#: ../../whatsnew/3.9.rst:1553
msgid ""
"Earlier Python versions allowed using both ``;`` and ``&`` as query "
"parameter separators in :func:`urllib.parse.parse_qs` and :func:`urllib."
"parse.parse_qsl`.  Due to security concerns, and to conform with newer W3C "
"recommendations, this has been changed to allow only a single separator key, "
"with ``&`` as the default.  This change also affects :func:`cgi.parse` and :"
"func:`cgi.parse_multipart` as they use the affected functions internally. "
"For more details, please see their respective documentation. (Contributed by "
"Adam Goldschmidt, Senthil Kumaran and Ken Jin in :issue:`42967`.)"
msgstr ""
"Versões anteriores do Python permitiam o uso de ``;`` e ``&`` como "
"separadores de parâmetros de consulta nas funções :func:`urllib.parse."
"parse_qs` e :func:`urllib.parse.parse_qsl`. Devido a questões de segurança, "
"e em conformidade com as recomendações mais recentes do W3C, isso foi "
"alterado para permitir apenas uma única chave separadora, com ``&`` como "
"padrão. Esta mudança também afeta as funções :func:`cgi.parse` e :func:`cgi."
"parse_multipart` já que elas usam as funções afetadas internamente. Para "
"obter mais detalhes, consulte sua respectiva documentação. (Contribuição de "
"Adam Goldschmidt, Senthil Kumaran e Ken Jin em :issue:`42967`.)"

#: ../../whatsnew/3.9.rst:1564
msgid "Notable changes in Python 3.9.3"
msgstr "Alterações notáveis no Python 3.9.3"

#: ../../whatsnew/3.9.rst:1566
msgid ""
"A security fix alters the :class:`ftplib.FTP` behavior to not trust the IPv4 "
"address sent from the remote server when setting up a passive data channel.  "
"We reuse the ftp server IP address instead.  For unusual code requiring the "
"old behavior, set a ``trust_server_pasv_ipv4_address`` attribute on your FTP "
"instance to ``True``.  (See :gh:`87451`)"
msgstr ""
"Uma correção de segurança altera o comportamento :class:`ftplib.FTP` para "
"não confiar no endereço IPv4 enviado do servidor remoto ao configurar um "
"canal de dados passivo. Em vez disso, reutilizamos o endereço IP do servidor "
"ftp. Para códigos incomuns que requerem o comportamento antigo, defina um "
"atributo ``trust_server_pasv_ipv4_address`` em sua instância de FTP para "
"``True``. (Veja :gh:`87451`)"

#: ../../whatsnew/3.9.rst:1573
msgid "Notable changes in Python 3.9.5"
msgstr "Alterações notáveis no Python 3.9.5"

#: ../../whatsnew/3.9.rst:1578
msgid ""
"The presence of newline or tab characters in parts of a URL allows for some "
"forms of attacks. Following the WHATWG specification that updates :rfc:"
"`3986`, ASCII newline ``\\n``, ``\\r`` and tab ``\\t`` characters are "
"stripped from the URL by the parser in :mod:`urllib.parse` preventing such "
"attacks. The removal characters are controlled by a new module level "
"variable ``urllib.parse._UNSAFE_URL_BYTES_TO_REMOVE``. (See :gh:`88048`)"
msgstr ""
"A presença de caracteres de nova linha ou tab em partes de um URL permite "
"algumas formas de ataques. Seguindo a especificação WHATWG que atualiza :rfc:"
"`3986`, nova linha ASCII ``\\n``, ``\\r`` e os caracteres de tabulação "
"``\\t`` são retirados da URL pelo analisador sintático em :mod:`urllib."
"parse` impedindo tais ataques. Os caracteres de remoção são controlados por "
"uma nova variável de nível de módulo ``urllib.parse."
"_UNSAFE_URL_BYTES_TO_REMOVE``. (Veja :gh:`88048`)"

#: ../../whatsnew/3.9.rst:1586
msgid "Notable security feature in 3.9.14"
msgstr "Recursos de segurança notáveis no 3.9.14"

#: ../../whatsnew/3.9.rst:1588
msgid ""
"Converting between :class:`int` and :class:`str` in bases other than 2 "
"(binary), 4, 8 (octal), 16 (hexadecimal), or 32 such as base 10 (decimal) "
"now raises a :exc:`ValueError` if the number of digits in string form is "
"above a limit to avoid potential denial of service attacks due to the "
"algorithmic complexity. This is a mitigation for :cve:`2020-10735`. This "
"limit can be configured or disabled by environment variable, command line "
"flag, or :mod:`sys` APIs. See the :ref:`integer string conversion length "
"limitation <int_max_str_digits>` documentation.  The default limit is 4300 "
"digits in string form."
msgstr ""
"Converter entre :class:`int` e :class:`str` em bases diferentes de 2 "
"(binário), 4, 8 (octal), 16 (hexadecimal) ou 32 como base 10 (decimal) agora "
"levanta uma exceção :exc:`ValueError` se o número de dígitos em forma de "
"string estiver acima de um limite para evitar possíveis ataques de negação "
"de serviço devido à complexidade algorítmica. Esta é uma mitigação para :cve:"
"`2020-10735`. Este limite pode ser configurado ou desabilitado por variável "
"de ambiente, sinalizador de linha de comando ou APIs de :mod:`sys`. Veja a "
"documentação de :ref:`limitação de comprimento de conversão de string "
"inteira <int_max_str_digits>`. O limite padrão é de 4300 dígitos em forma de "
"string."

#: ../../whatsnew/3.9.rst:1599
msgid "Notable changes in 3.9.17"
msgstr "Alterações notáveis no 3.9.17"

#: ../../whatsnew/3.9.rst:1602
msgid "tarfile"
msgstr "tarfile"

#: ../../whatsnew/3.9.rst:1604
msgid ""
"The extraction methods in :mod:`tarfile`, and :func:`shutil.unpack_archive`, "
"have a new a *filter* argument that allows limiting tar features than may be "
"surprising or dangerous, such as creating files outside the destination "
"directory. See :ref:`tarfile-extraction-filter` for details. In Python 3.12, "
"use without the *filter* argument will show a :exc:`DeprecationWarning`. In "
"Python 3.14, the default will switch to ``'data'``. (Contributed by Petr "
"Viktorin in :pep:`706`.)"
msgstr ""
"Os métodos de extração em :mod:`tarfile` e :func:`shutil.unpack_archive`, "
"têm um novo argumento *filter* que permite limitar recursos do tar que podem "
"ser surpreendentes ou perigosos, como criar arquivos fora do diretório de "
"destino. Veja :ref:`tarfile-extraction-filter` para detalhes. No Python "
"3.12, usar sem o argumento *filter* mostrará um :exc:`DeprecationWarning`. "
"No Python 3.14, o padrão mudará para ``'data'``. (Contribuição de Petr "
"Viktorin em :pep:`706`.)"
