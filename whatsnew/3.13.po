# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Vinícius Muniz de Melo <viniciusdesk@icloud.com>, 2024
# Victor Matheus Castro <victormatheuscastro@gmail.com>, 2024
# Welington Carlos <wcarlos3@gmail.com>, 2024
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2024
# Adorilson Bezerra <adorilson@gmail.com>, 2024
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-10-25 14:17+0000\n"
"PO-Revision-Date: 2024-05-11 01:09+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../whatsnew/3.13.rst:4
msgid "What's New In Python 3.13"
msgstr "O que há de novo no Python 3.13"

#: ../../whatsnew/3.13.rst:0
msgid "Editors"
msgstr "Editores"

#: ../../whatsnew/3.13.rst:6
msgid "Adam Turner and Thomas Wouters"
msgstr "Adam Turner e Thomas Wouters"

#: ../../whatsnew/3.13.rst:48
msgid ""
"This article explains the new features in Python 3.13, compared to 3.12. "
"Python 3.13 was released on October 7, 2024. For full details, see the :ref:"
"`changelog <changelog>`."
msgstr ""
"Este artigo explica os novos recursos no Python 3.13, em comparação com "
"3.12. Python 3.13 foi lançado em 7 de outubro de 2024. Veja :ref:`changelog "
"<changelog>` para uma lista completa de mudanças."

#: ../../whatsnew/3.13.rst:54
msgid ":pep:`719` -- Python 3.13 Release Schedule"
msgstr ":pep:`719` -- Cronograma de lançamento do Python 3.13"

#: ../../whatsnew/3.13.rst:58
msgid "Summary -- Release Highlights"
msgstr "Resumo -- Destaques da versão"

#: ../../whatsnew/3.13.rst:63
msgid ""
"Python 3.13 is the latest stable release of the Python programming language, "
"with a mix of changes to the language, the implementation and the standard "
"library. The biggest changes include a new `interactive interpreter "
"<whatsnew313-better-interactive-interpreter_>`_, experimental support for "
"running in a `free-threaded mode <whatsnew313-free-threaded-cpython_>`_ (:"
"pep:`703`), and a `Just-In-Time compiler <whatsnew313-jit-compiler_>`_ (:pep:"
"`744`)."
msgstr ""
"O Python 3.13 é a versão estável mais recente da linguagem de programação "
"Python, com uma mistura de mudanças na linguagem, na implementação e na "
"biblioteca padrão. As maiores mudanças incluem um novo `interpretador "
"interativo <whatsnew313-better-interactive-interpreter_>`_, suporte "
"experimental para execução em um `modo de threads livres <whatsnew313-free-"
"threaded-cpython_>`_ (:pep:`703`) e um `compilador Just-In-Time <whatsnew313-"
"jit-compiler_>`_ (:pep:`744`)."

#: ../../whatsnew/3.13.rst:72
msgid ""
"Error messages continue to improve, with tracebacks now highlighted in color "
"by default. The :func:`locals` builtin now has :ref:`defined semantics "
"<whatsnew313-locals-semantics>` for changing the returned mapping, and type "
"parameters now support default values."
msgstr ""
"As mensagens de erro continuam a melhorar, com tracebacks (situação da pilha "
"de execução) agora realçados em cores por padrão. A função embutida :func:"
"`locals` agora tem :ref:`semânticas definidas <whatsnew313-locals-"
"semantics>` para alterar o mapeamento retornado, e os parâmetros de tipo "
"agora oferecem suporte a valores padrão."

#: ../../whatsnew/3.13.rst:77
msgid ""
"The library changes contain removal of deprecated APIs and modules, as well "
"as the usual improvements in user-friendliness and correctness. Several "
"legacy standard library modules have now `been removed <whatsnew313-"
"pep594_>`_ following their deprecation in Python 3.11 (:pep:`594`)."
msgstr ""
"As alterações da biblioteca contêm a remoção de APIs e módulos "
"descontinuados, bem como as melhorias usuais em facilidade de uso e "
"correção. Vários módulos da biblioteca padrão legados agora `foram removidos "
"<whatsnew313-pep594_>`_ após sua descontinuação no Python 3.11 (:pep:`594`)."

#: ../../whatsnew/3.13.rst:82
msgid ""
"This article doesn't attempt to provide a complete specification of all new "
"features, but instead gives a convenient overview. For full details refer to "
"the documentation, such as the :ref:`Library Reference <library-index>` and :"
"ref:`Language Reference <reference-index>`. To understand the complete "
"implementation and design rationale for a change, refer to the PEP for a "
"particular new feature; but note that PEPs usually are not kept up-to-date "
"once a feature has been fully implemented. See `Porting to Python 3.13`_ for "
"guidance on upgrading from earlier versions of Python."
msgstr ""
"Este artigo não tenta fornecer uma especificação completa de todos os novos "
"recursos, mas fornece uma visão geral conveniente. Para detalhes completos, "
"consulte a documentação, como :ref:`Referência da Biblioteca <library-"
"index>` e :ref:`Referência da Linguagem <reference-index>`. Para entender a "
"implementação completa e a justificativa do design para uma mudança, "
"consulte a PEP para um novo recurso específico; mas observe que as PEPs "
"geralmente não são mantidas atualizadas depois que um recurso é totalmente "
"implementado. Veja `Portando para o Python 3.13`_ para orientação sobre "
"atualização a partir de versões anteriores do Python."

#: ../../whatsnew/3.13.rst:98
msgid "Interpreter improvements:"
msgstr "Melhorias no interpretador:"

#: ../../whatsnew/3.13.rst:100
msgid ""
"A greatly improved :ref:`interactive interpreter <whatsnew313-better-"
"interactive-interpreter>` and :ref:`improved error messages <whatsnew313-"
"improved-error-messages>`."
msgstr ""
"Um :ref:`interpretador interativo <whatsnew313-better-interactive-"
"interpreter>` bastante aprimorado e :ref:`mensagens de erro aprimoradas "
"<whatsnew313-improved-error-messages>`."

#: ../../whatsnew/3.13.rst:103
msgid ""
":pep:`667`: The :func:`locals` builtin now has :ref:`defined semantics "
"<whatsnew313-locals-semantics>` when mutating the returned mapping. Python "
"debuggers and similar tools may now more reliably update local variables in "
"optimized scopes even during concurrent code execution."
msgstr ""
":pep:`667`: a função embutida :func:`locals` agora tem :ref:`semântica "
"definida <whatsnew313-locals-semantics>` ao fazer a mutação do mapeamento "
"retornado. Os depuradores do Python e ferramentas semelhantes agora podem "
"atualizar variáveis locais de maneira mais confiável em escopos otimizados, "
"mesmo durante a execução simultânea de código."

#: ../../whatsnew/3.13.rst:108
msgid ""
":pep:`703`: CPython 3.13 has experimental support for running with the :term:"
"`global interpreter lock` disabled. See :ref:`Free-threaded CPython "
"<whatsnew313-free-threaded-cpython>` for more details."
msgstr ""
":pep:`703`: CPython 3.13 tem suporte experimental para ser executado com a :"
"term:`trava global do interpretador`, ou GIL, desabilitada. Veja :ref:"
"`CPython com threads livres <whatsnew313-free-threaded-cpython>` para mais "
"detalhes."

#: ../../whatsnew/3.13.rst:111
msgid ""
":pep:`744`: A basic :ref:`JIT compiler <whatsnew313-jit-compiler>` was "
"added. It is currently disabled by default (though we may turn it on later). "
"Performance improvements are modest -- we expect to improve this over the "
"next few releases."
msgstr ""
":pep:`744`: um :ref:`compilador JIT <whatsnew313-jit-compiler>` básico foi "
"adicionado. Atualmente está desativado por padrão (embora possamos ativá-lo "
"mais tarde). As melhorias de desempenho são modestas -- esperamos melhorar "
"isso nas próximas versões."

#: ../../whatsnew/3.13.rst:115
msgid ""
"Color support in the new :ref:`interactive interpreter <whatsnew313-better-"
"interactive-interpreter>`, as well as in :ref:`tracebacks <whatsnew313-"
"improved-error-messages>` and :ref:`doctest <whatsnew313-doctest>` output. "
"This can be disabled through the :envvar:`PYTHON_COLORS` and |NO_COLOR|_ "
"environment variables."
msgstr ""
"Suporte a cores no novo :ref:`interpretador interativo <whatsnew313-better-"
"interactive-interpreter>`, bem como na saída de :ref:`tracebacks "
"<whatsnew313-improved-error-messages>` e de :ref:`doctest <whatsnew313-"
"doctest>`. Isso pode ser desabilitado através das variáveis de ambiente :"
"envvar:`PYTHON_COLORS` e |NO_COLOR|_."

#: ../../whatsnew/3.13.rst:122
msgid "Python data model improvements:"
msgstr "Melhorias no modelo de dados Python:"

#: ../../whatsnew/3.13.rst:124
msgid ""
":attr:`~type.__static_attributes__` stores the names of attributes accessed "
"through ``self.X`` in any function in a class body."
msgstr ""
":attr:`~type.__static_attributes__` armazena os nomes dos atributos "
"acessados ​​por meio de ``self.X`` em qualquer função no corpo da classe."

#: ../../whatsnew/3.13.rst:126
msgid ""
":attr:`~type.__firstlineno__` records the first line number of a class "
"definition."
msgstr ""
":attr:`~type.__firstlineno__` registra o número da primeira linha da "
"definição de classe."

#: ../../whatsnew/3.13.rst:129
msgid "Significant improvements in the standard library:"
msgstr "Melhorias significativas na biblioteca padrão:"

#: ../../whatsnew/3.13.rst:131
msgid ""
"Add a new :exc:`PythonFinalizationError` exception, raised when an operation "
"is blocked during :term:`finalization <interpreter shutdown>`."
msgstr ""
"Adiciona uma nova exceção :exc:`PythonFinalizationError`, levantada quando "
"uma operação é bloqueada durante a :term:`finalização <interpreter "
"shutdown>`."

#: ../../whatsnew/3.13.rst:133
msgid ""
"The :mod:`argparse` module now supports deprecating command-line options, "
"positional arguments, and subcommands."
msgstr ""
"O módulo :mod:`argparse` agora oferece suporte a descontinuar opções de "
"linha de comando, argumentos posicionais e subcomandos."

#: ../../whatsnew/3.13.rst:135
msgid ""
"The new functions :func:`base64.z85encode` and :func:`base64.z85decode` "
"support encoding and decoding `Z85 data`_."
msgstr ""
"As novas funções :func:`base64.z85encode` e :func:`base64.z85decode` "
"oferecem suporte à codificação e decodificação de `dados Z85`_."

#: ../../whatsnew/3.13.rst:137
msgid ""
"The :mod:`copy` module now has a :func:`copy.replace` function, with support "
"for many builtin types and any class defining the :func:`~object."
"__replace__` method."
msgstr ""
"O módulo :mod:`copy` agora tem uma função :func:`copy.replace`, com suporte "
"para muitos tipos embutidos e qualquer classe que defina o método :func:"
"`~object.__replace__`."

#: ../../whatsnew/3.13.rst:140
msgid ""
"The new :mod:`dbm.sqlite3` module is now the default :mod:`dbm` backend."
msgstr "O novo módulo :mod:`dbm.sqlite3` agora é o backend :mod:`dbm` padrão."

#: ../../whatsnew/3.13.rst:141
msgid ""
"The :mod:`os` module has a :ref:`suite of new functions <os-timerfd>` for "
"working with Linux's timer notification file descriptors."
msgstr ""
"O módulo :mod:`os` tem um :ref:`conjunto de novas funções <os-timerfd>` para "
"trabalhar com os descritores de arquivo de notificação de temporizador do "
"Linux."

#: ../../whatsnew/3.13.rst:143
msgid ""
"The :mod:`random` module now has a :ref:`command-line interface <random-"
"cli>`."
msgstr ""
"O módulo :mod:`random` agora tem uma :ref:`interface de linha de comando "
"<random-cli>`."

#: ../../whatsnew/3.13.rst:145
msgid "Security improvements:"
msgstr "Melhorias de segurança:"

#: ../../whatsnew/3.13.rst:147
msgid ""
":func:`ssl.create_default_context` sets :data:`ssl."
"VERIFY_X509_PARTIAL_CHAIN` and :data:`ssl.VERIFY_X509_STRICT` as default "
"flags."
msgstr ""
":func:`ssl.create_default_context` define :data:`ssl."
"VERIFY_X509_PARTIAL_CHAIN` e :data:`ssl.VERIFY_X509_STRICT` como "
"sinalizadores padrão."

#: ../../whatsnew/3.13.rst:150
msgid "C API improvements:"
msgstr "Melhorias na API C:"

#: ../../whatsnew/3.13.rst:152
msgid ""
"The :c:data:`Py_mod_gil` slot is now used to indicate that an extension "
"module supports running with the :term:`GIL` disabled."
msgstr ""
"O slot :c:data:`Py_mod_gil` agora é usado para indicar que um módulo de "
"extensão oferece suporte à execução com a :term:`GIL` desabilitada."

#: ../../whatsnew/3.13.rst:154
msgid ""
"The :doc:`PyTime C API </c-api/time>` has been added, providing access to "
"system clocks."
msgstr ""
"A :doc:`API C PyTime </c-api/time>` foi adicionada, fornecendo acesso aos "
"relógios do sistema."

#: ../../whatsnew/3.13.rst:156
msgid ""
":c:type:`PyMutex` is a new lightweight mutex that occupies a single byte."
msgstr ":c:type:`PyMutex` é um novo mutex leve que ocupa um único byte."

#: ../../whatsnew/3.13.rst:157
msgid ""
"There is a new :ref:`suite of functions <c-api-monitoring>` for generating :"
"pep:`669` monitoring events in the C API."
msgstr ""
"Há um novo :ref:`conjunto de funções <c-api-monitoring>` para gerar eventos "
"de monitoramento da :pep:`669` na API C."

#: ../../whatsnew/3.13.rst:160
msgid "New typing features:"
msgstr "Novos recursos de tipagem:"

#: ../../whatsnew/3.13.rst:162
msgid ""
":pep:`696`: Type parameters (:data:`typing.TypeVar`, :data:`typing."
"ParamSpec`, and :data:`typing.TypeVarTuple`) now support defaults."
msgstr ""
":pep:`696`: parâmetros de tipo (:data:`typing.TypeVar`, :data:`typing."
"ParamSpec` e :data:`typing.TypeVarTuple`) agora oferecem suporte a valores "
"padrão."

#: ../../whatsnew/3.13.rst:164
msgid ""
":pep:`702`: The new :func:`warnings.deprecated` decorator adds support for "
"marking deprecations in the type system and at runtime."
msgstr ""
":pep:`702`: o novo decorador :func:`warnings.deprecated` adiciona suporte "
"para marcar descontinuações no sistema de tipos e ambiente de execução."

#: ../../whatsnew/3.13.rst:166
msgid ""
":pep:`705`: :data:`typing.ReadOnly` can be used to mark an item of a :class:"
"`typing.TypedDict` as read-only for type checkers."
msgstr ""
":pep:`705`: :data:`typing.ReadOnly` pode ser usado para marcar um item de :"
"class:`typing.TypedDict` como somente leitura para verificadores de tipo."

#: ../../whatsnew/3.13.rst:168
msgid ""
":pep:`742`: :data:`typing.TypeIs` provides more intuitive type narrowing "
"behavior, as an alternative to :data:`typing.TypeGuard`."
msgstr ""
":pep:`742`: :data:`typing.TypeIs` fornece um comportamento de estreitamento "
"de tipo mais intuitivo, como uma alternativa ao :data:`typing.TypeGuard`."

#: ../../whatsnew/3.13.rst:171
msgid "Platform support:"
msgstr "Suporte à plataforma:"

#: ../../whatsnew/3.13.rst:173
msgid ""
":pep:`730`: Apple's iOS is now an :ref:`officially supported platform "
"<whatsnew313-platform-support>`, at :pep:`tier 3 <11#tier-3>`."
msgstr ""
":pep:`730`: iOS da Apple agora é uma :ref:`plataforma oficialmente com "
"suporte <whatsnew313-platform-support>`, no :pep:`tier 3 <11#tier-3>`."

#: ../../whatsnew/3.13.rst:175
msgid ""
":pep:`738`: Android is now an :ref:`officially supported platform "
"<whatsnew313-platform-support>`, at :pep:`tier 3 <11#tier-3>`."
msgstr ""
":pep:`738`: Android é agora uma  :ref:`plataforma oficialmente com suporte  "
"<whatsnew313-platform-support>`, no :pep:`tier 3 <11#tier-3>`."

#: ../../whatsnew/3.13.rst:177
msgid ""
"``wasm32-wasi`` is now supported as a :pep:`tier 2 <11#tier-2>` platform."
msgstr ""
"``wasm32-wasi`` agora é uma plataforma com suporte :pep:`tier 2 <11#tier-2>`."

#: ../../whatsnew/3.13.rst:178
msgid "``wasm32-emscripten`` is no longer an officially supported platform."
msgstr ""
"``wasm32-emscripten`` não é mais uma plataforma oficialmente com suporte."

#: ../../whatsnew/3.13.rst:180
msgid "Important removals:"
msgstr "Remoções importantes:"

#: ../../whatsnew/3.13.rst:182
msgid ""
":ref:`PEP 594 <whatsnew313-pep594>`: The remaining 19 \"dead "
"batteries\" (legacy stdlib modules) have been removed from the standard "
"library: :mod:`!aifc`, :mod:`!audioop`, :mod:`!cgi`, :mod:`!cgitb`, :mod:`!"
"chunk`, :mod:`!crypt`, :mod:`!imghdr`, :mod:`!mailcap`, :mod:`!msilib`, :mod:"
"`!nis`, :mod:`!nntplib`, :mod:`!ossaudiodev`, :mod:`!pipes`, :mod:`!"
"sndhdr`, :mod:`!spwd`, :mod:`!sunau`, :mod:`!telnetlib`, :mod:`!uu` and :mod:"
"`!xdrlib`."
msgstr ""
":ref:`PEP 594 <whatsnew313-pep594>`: as 19 \"baterias "
"descarregadas\" (módulos legados da biblioteca padrão) restantes foram "
"removidas da biblioteca padrão: :mod:`!aifc`, :mod:`!audioop`, :mod:`!cgi`, :"
"mod:`!cgitb`, :mod:`!chunk`, :mod:`!crypt`, :mod:`!imghdr`, :mod:`!"
"mailcap`, :mod:`!msilib`, :mod:`!nis`, :mod:`!nntplib`, :mod:`!"
"ossaudiodev`, :mod:`!pipes`, :mod:`!sndhdr`, :mod:`!spwd`, :mod:`!sunau`, :"
"mod:`!telnetlib`, :mod:`!uu` e :mod:`!xdrlib`."

#: ../../whatsnew/3.13.rst:188
msgid ""
"Remove the :program:`2to3` tool and :mod:`!lib2to3` module (deprecated in "
"Python 3.11)."
msgstr ""
"Remove a ferramenta :program:`2to3` e o módulo :mod:`!lib2to3` "
"(descontinuados no Python 3.11)."

#: ../../whatsnew/3.13.rst:190
msgid "Remove the :mod:`!tkinter.tix` module (deprecated in Python 3.6)."
msgstr "Remove o módulo :mod:`!tkinter.tix` (descontinuado no Python 3.6)."

#: ../../whatsnew/3.13.rst:191
msgid "Remove the :func:`!locale.resetlocale` function."
msgstr "Remove a função :func:`!locale.resetlocale`."

#: ../../whatsnew/3.13.rst:192
msgid "Remove the :mod:`!typing.io` and :mod:`!typing.re` namespaces."
msgstr "Remove os espaços de nomes :mod:`!typing.io` e :mod:`!typing.re`."

#: ../../whatsnew/3.13.rst:193
msgid "Remove chained :class:`classmethod` descriptors."
msgstr "Remove descritores encadeados de :class:`classmethod`."

#: ../../whatsnew/3.13.rst:195
msgid "Release schedule changes:"
msgstr "Mudanças no cronograma de lançamento:"

#: ../../whatsnew/3.13.rst:197
msgid ""
":pep:`602` (\"Annual Release Cycle for Python\") has been updated to extend "
"the full support ('bugfix') period for new releases to two years. This "
"updated policy means that:"
msgstr ""
":pep:`602` (\"Ciclo de Lançamento Anual para Python\") foi atualizado para "
"estender o período de suporte total (\"bugfix\") para novos lançamentos para "
"dois anos. Esta política atualizada significa que:"

#: ../../whatsnew/3.13.rst:201
msgid ""
"Python 3.9--3.12 have one and a half years of full support, followed by "
"three and a half years of security fixes."
msgstr ""
"O Python 3.9--3.12 tem um ano e meio de suporte total, seguido por três anos "
"e meio de correções de segurança."

#: ../../whatsnew/3.13.rst:203
msgid ""
"Python 3.13 and later have two years of full support, followed by three "
"years of security fixes."
msgstr ""
"Python 3.13 e posteriores têm dois anos de suporte total, seguidos de três "
"anos de correções de segurança."

#: ../../whatsnew/3.13.rst:208 ../../whatsnew/3.13.rst:1968
msgid "New Features"
msgstr "Novas funcionalidades"

#: ../../whatsnew/3.13.rst:214
msgid "A better interactive interpreter"
msgstr "Um melhor interpretador interativo"

#: ../../whatsnew/3.13.rst:216
msgid ""
"Python now uses a new :term:`interactive` shell by default, based on code "
"from the `PyPy project`_. When the user starts the :term:`REPL` from an "
"interactive terminal, the following new features are now supported:"
msgstr ""
"Python agora usa um novo console :term:`interativo` por padrão, com base no "
"código do `projeto PyPy`_. Quando o usuário inicia o :term:`REPL` de um "
"terminal interativo, agora os seguintes novos recursos estão disponíveis:"

#: ../../whatsnew/3.13.rst:221
msgid "Multiline editing with history preservation."
msgstr "Edição multilinha com preservação do histórico."

#: ../../whatsnew/3.13.rst:222
msgid ""
"Direct support for REPL-specific commands like :kbd:`help`, :kbd:`exit`, "
"and :kbd:`quit`, without the need to call them as functions."
msgstr ""
"Suporte direto para comandos específicos do REPL, como :kbd:`help`, :kbd:"
"`exit` e :kbd:`quit`, sem a necessidade de chamá-los como funções."

#: ../../whatsnew/3.13.rst:224
msgid ""
"Prompts and tracebacks with :ref:`color enabled by default <using-on-"
"controlling-color>`."
msgstr ""
"Prompts e tracebacks com :ref:`cores habilitadas por padrão <using-on-"
"controlling-color>`."

#: ../../whatsnew/3.13.rst:226
msgid ""
"Interactive help browsing using :kbd:`F1` with a separate command history."
msgstr ""
"Ajuda interativa para navegar usando :kbd:`F1` com um histórico de comandos "
"separado."

#: ../../whatsnew/3.13.rst:228
msgid ""
"History browsing using :kbd:`F2` that skips output as well as the :term:"
"`>>>` and :term:`...` prompts."
msgstr ""
"Navegação no histórico usando :kbd:`F2` que ignora a saída, bem como os "
"prompts :term:`>>>` e :term:`...`."

#: ../../whatsnew/3.13.rst:230
msgid ""
"\"Paste mode\" with :kbd:`F3` that makes pasting larger blocks of code "
"easier (press :kbd:`F3` again to return to the regular prompt)."
msgstr ""
"\"Modo de colagem\" com :kbd:`F3` que facilita colar blocos de código "
"maiores (pressione :kbd:`F3` novamente para retornar ao prompt normal)."

#: ../../whatsnew/3.13.rst:233
msgid ""
"To disable the new interactive shell, set the :envvar:`PYTHON_BASIC_REPL` "
"environment variable. For more on interactive mode, see :ref:`tut-interac`."
msgstr ""
"Para desabilitar o novo console interativo, defina a variável de ambiente :"
"envvar:`PYTHON_BASIC_REPL`. Para mais informações sobre o modo interativo, "
"veja :ref:`tut-interac`."

#: ../../whatsnew/3.13.rst:237
msgid ""
"(Contributed by Pablo Galindo Salgado, Łukasz Langa, and Lysandros Nikolaou "
"in :gh:`111201` based on code from the PyPy project. Windows support "
"contributed by Dino Viehland and Anthony Shaw.)"
msgstr ""
"(Contribuição de Pablo Galindo Salgado, Łukasz Langa e Lysandros Nikolaou "
"em :gh:`111201` baseado no código do projeto PyPy. Suporte ao Windows foi "
"uma contribuição de Dino Viehland e Anthony Shaw.)"

#: ../../whatsnew/3.13.rst:247
msgid "Improved error messages"
msgstr "Mensagens de erro melhoradas"

#: ../../whatsnew/3.13.rst:249
msgid ""
"The interpreter now uses color by default when displaying tracebacks in the "
"terminal. This feature :ref:`can be controlled <using-on-controlling-color>` "
"via the new :envvar:`PYTHON_COLORS` environment variable as well as the "
"canonical |NO_COLOR|_ and |FORCE_COLOR|_ environment variables. (Contributed "
"by Pablo Galindo Salgado in :gh:`112730`.)"
msgstr ""
"O interpretador agora usa cores por padrão ao exibir tracebacks no terminal. "
"Este recurso :ref:`pode ser controlado <using-on-controlling-color>` por "
"meio da nova variável de ambiente :envvar:`PYTHON_COLORS`, bem como das "
"variáveis ​​de ambiente canônicas |NO_COLOR|_ e |FORCE_COLOR|_. (Contribuição "
"de Pablo Galindo Salgado em :gh:`112730`.)"

#: ../../whatsnew/3.13.rst:264
msgid ""
"A common mistake is to write a script with the same name as a standard "
"library module. When this results in errors, we now display a more helpful "
"error message:"
msgstr ""
"Um erro comum é escrever um script com o mesmo nome de um módulo de "
"biblioteca padrão. Quando isso resulta em erros, agora exibimos uma mensagem "
"de erro mais útil:"

#: ../../whatsnew/3.13.rst:268
msgid ""
"$ python random.py\n"
"Traceback (most recent call last):\n"
"  File \"/home/me/random.py\", line 1, in <module>\n"
"    import random\n"
"  File \"/home/me/random.py\", line 3, in <module>\n"
"    print(random.randint(5))\n"
"          ^^^^^^^^^^^^^^\n"
"AttributeError: module 'random' has no attribute 'randint' (consider "
"renaming '/home/me/random.py' since it has the same name as the standard "
"library module named 'random' and prevents importing that standard library "
"module)"
msgstr ""
"$ python random.py\n"
"Traceback (most recent call last):\n"
"  File \"/home/me/random.py\", line 1, in <module>\n"
"    import random\n"
"  File \"/home/me/random.py\", line 3, in <module>\n"
"    print(random.randint(5))\n"
"          ^^^^^^^^^^^^^^\n"
"AttributeError: module 'random' has no attribute 'randint' (consider "
"renaming '/home/me/random.py' since it has the same name as the standard "
"library module named 'random' and prevents importing that standard library "
"module)"

#: ../../whatsnew/3.13.rst:279
msgid ""
"Similarly, if a script has the same name as a third-party module that it "
"attempts to import and this results in errors, we also display a more "
"helpful error message:"
msgstr ""
"Da mesma forma, se um script tiver o mesmo nome de um módulo de terceiros "
"que ele tentar importar e isso resultar em erros, também exibiremos uma "
"mensagem de erro mais útil:"

#: ../../whatsnew/3.13.rst:283
msgid ""
"$ python numpy.py\n"
"Traceback (most recent call last):\n"
"  File \"/home/me/numpy.py\", line 1, in <module>\n"
"    import numpy as np\n"
"  File \"/home/me/numpy.py\", line 3, in <module>\n"
"    np.array([1, 2, 3])\n"
"    ^^^^^^^^\n"
"AttributeError: module 'numpy' has no attribute 'array' (consider renaming '/"
"home/me/numpy.py' if it has the same name as a library you intended to "
"import)"
msgstr ""
"$ python numpy.py\n"
"Traceback (most recent call last):\n"
"  File \"/home/me/numpy.py\", line 1, in <module>\n"
"    import numpy as np\n"
"  File \"/home/me/numpy.py\", line 3, in <module>\n"
"    np.array([1, 2, 3])\n"
"    ^^^^^^^^\n"
"AttributeError: module 'numpy' has no attribute 'array' (consider renaming '/"
"home/me/numpy.py' if it has the same name as a library you intended to "
"import)"

#: ../../whatsnew/3.13.rst:294
msgid "(Contributed by Shantanu Jain in :gh:`95754`.)"
msgstr "(Contribuição de Shantanu Jain em :gh:`95754`.)"

#: ../../whatsnew/3.13.rst:296
msgid ""
"The error message now tries to suggest the correct keyword argument when an "
"incorrect keyword argument is passed to a function."
msgstr ""
"A mensagem de erro agora tenta sugerir o argumento nomeado correto quando um "
"argumento nomeado incorreto é passado para uma função."

#: ../../whatsnew/3.13.rst:299
msgid ""
">>> \"Better error messages!\".split(max_split=1)\n"
"Traceback (most recent call last):\n"
"  File \"<python-input-0>\", line 1, in <module>\n"
"    \"Better error messages!\".split(max_split=1)\n"
"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^\n"
"TypeError: split() got an unexpected keyword argument 'max_split'. Did you "
"mean 'maxsplit'?"
msgstr ""
">>> \"Better error messages!\".split(max_split=1)\n"
"Traceback (most recent call last):\n"
"  File \"<python-input-0>\", line 1, in <module>\n"
"    \"Better error messages!\".split(max_split=1)\n"
"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^\n"
"TypeError: split() got an unexpected keyword argument 'max_split'. Did you "
"mean 'maxsplit'?"

#: ../../whatsnew/3.13.rst:308
msgid ""
"(Contributed by Pablo Galindo Salgado and Shantanu Jain in :gh:`107944`.)"
msgstr ""
"(Contribuição de Pablo Galindo Salgado e Shantanu Jain em :gh:`107944`.)"

#: ../../whatsnew/3.13.rst:314
msgid "Free-threaded CPython"
msgstr "CPython com threads livres"

#: ../../whatsnew/3.13.rst:316
msgid ""
"CPython now has experimental support for running in a free-threaded mode, "
"with the :term:`global interpreter lock` (GIL) disabled. This is an "
"experimental feature and therefore is not enabled by default. The free-"
"threaded mode requires a different executable, usually called "
"``python3.13t`` or ``python3.13t.exe``. Pre-built binaries marked as *free-"
"threaded* can be installed as part of the official :ref:`Windows <install-"
"freethreaded-windows>` and :ref:`macOS <install-freethreaded-macos>` "
"installers, or CPython can be built from source with the :option:`--disable-"
"gil` option."
msgstr ""
"O CPython agora tem suporte experimental para execução em modo de threads "
"livres, com a :term:`trava global do interpretador` (GIL) desabilitada. Este "
"é um recurso experimental e, portanto, não é habilitado por padrão. O modo "
"de threads livres requer um executável diferente, geralmente chamado de "
"``python3.13t`` ou ``python3.13t.exe``. Binários pré-construídos marcados "
"como *free-threaded* podem ser instalados como parte dos instaladores "
"oficiais :ref:`Windows <install-freethreaded-windows>` e :ref:`macOS "
"<getting-and-installing-macpython>`, ou o CPython pode ser construído a "
"partir da fonte com a opção :option:`--disable-gil`."

#: ../../whatsnew/3.13.rst:326
msgid ""
"Free-threaded execution allows for full utilization of the available "
"processing power by running threads in parallel on available CPU cores. "
"While not all software will benefit from this automatically, programs "
"designed with threading in mind will run faster on multi-core hardware. "
"**The free-threaded mode is experimental** and work is ongoing to improve "
"it: expect some bugs and a substantial single-threaded performance hit. Free-"
"threaded builds of CPython support optionally running with the GIL enabled "
"at runtime using the environment variable :envvar:`PYTHON_GIL` or the "
"command-line option :option:`-X gil=1`."
msgstr ""
"A execução de threads livres permite a utilização total do poder de "
"processamento disponível ao executar threads em paralelo nos núcleos de CPU "
"disponíveis. Embora nem todos os softwares se beneficiem disso "
"automaticamente, programas projetados com threading em mente serão "
"executados mais rapidamente em hardware multi-core. **O modo de threads "
"livres é experimental** e o trabalho está em andamento para melhorá-lo: "
"espere alguns bugs e um impacto substancial no desempenho de thread único. "
"As construções de threads livres do CPython oferecem suporte à execução "
"opcional com a GIL habilitada no tempo de execução usando a variável de "
"ambiente :envvar:`PYTHON_GIL` ou a opção de linha de comando :option:`-X "
"gil=1`."

#: ../../whatsnew/3.13.rst:336
msgid ""
"To check if the current interpreter supports free-threading, :option:`python "
"-VV <-V>` and :attr:`sys.version` contain \"experimental free-threading "
"build\". The new :func:`!sys._is_gil_enabled` function can be used to check "
"whether the GIL is actually disabled in the running process."
msgstr ""
"Para verificar se o interpretador atual oferece suporte a threads livres, :"
"option:`python -VV <-V>` e :attr:`sys.version` contêm \"experimental free-"
"threading build\". A nova função :func:`!sys._is_gil_enabled` pode ser usada "
"para verificar se a GIL está realmente desabilitada no processo em execução."

#: ../../whatsnew/3.13.rst:341
msgid ""
"C-API extension modules need to be built specifically for the free-threaded "
"build. Extensions that support running with the :term:`GIL` disabled should "
"use the :c:data:`Py_mod_gil` slot. Extensions using single-phase init should "
"use :c:func:`PyUnstable_Module_SetGIL` to indicate whether they support "
"running with the GIL disabled. Importing C extensions that don't use these "
"mechanisms will cause the GIL to be enabled, unless the GIL was explicitly "
"disabled with the :envvar:`PYTHON_GIL` environment variable or the :option:`-"
"X gil=0` option. pip 24.1 or newer is required to install packages with C "
"extensions in the free-threaded build."
msgstr ""
"Os módulos de extensão da API C precisam ser construídos especificamente "
"para a construção com threads livres. Extensões que oferecem suporte à "
"execução com :term:`GIL` desabilitada devem usar o slot :c:data:"
"`Py_mod_gil`. Extensões que usam inicialização monofásica devem usar :c:func:"
"`PyUnstable_Module_SetGIL` para indicar se oferecem suporte à execução com a "
"GIL desabilitada. A importação de extensões C que não usam esses mecanismos "
"fará com que a GIL seja habilitada, a menos que a GIL tenha sido "
"explicitamente desabilitada com a variável de ambiente :envvar:`PYTHON_GIL` "
"ou a opção :option:`-X gil=0`. pip 24.1 ou mais recentes é necessário para "
"instalar pacotes com extensões C na construção de threads livres."

#: ../../whatsnew/3.13.rst:352
msgid ""
"This work was made possible thanks to many individuals and organizations, "
"including the large community of contributors to Python and third-party "
"projects to test and enable free-threading support. Notable contributors "
"include: Sam Gross, Ken Jin, Donghee Na, Itamar Oren, Matt Page, Brett "
"Simmers, Dino Viehland, Carl Meyer, Nathan Goldbaum, Ralf Gommers, Lysandros "
"Nikolaou, and many others. Many of these contributors are employed by Meta, "
"which has provided significant engineering resources to support this project."
msgstr ""
"Este trabalho foi possível graças a muitos indivíduos e organizações, "
"incluindo a grande comunidade de colaboradores do Python e projetos de "
"terceiros para testar e habilitar o suporte para threads livres. "
"Colaboradores notáveis ​​incluem: Sam Gross, Ken Jin, Donghee Na, Itamar Oren, "
"Matt Page, Brett Simmers, Dino Viehland, Carl Meyer, Nathan Goldbaum, Ralf "
"Gommers, Lysandros Nikolaou e muitos outros. Muitos desses colaboradores são "
"empregados pela Meta, que forneceu recursos de engenharia significativos "
"para dar suporte a este projeto."

#: ../../whatsnew/3.13.rst:364
msgid ""
":pep:`703` \"Making the Global Interpreter Lock Optional in CPython\" "
"contains rationale and information surrounding this work."
msgstr ""
":pep:`703` \"Tornando a trava global do interpretador opcional no CPython\" "
"contém justificativa e informações sobre este trabalho."

#: ../../whatsnew/3.13.rst:367
msgid ""
"`Porting Extension Modules to Support Free-Threading <https://py-free-"
"threading.github.io/porting/>`_: A community-maintained porting guide for "
"extension authors."
msgstr ""
"`Portando módulos de extensão para oferecer suporte a threads livres "
"<https://py-free-threading.github.io/porting/>`_: um guia de portabilidade "
"mantido pela comunidade para autores de extensões."

#: ../../whatsnew/3.13.rst:375
msgid "An experimental just-in-time (JIT) compiler"
msgstr "Um compilador just-in-time (JIT) experimental"

#: ../../whatsnew/3.13.rst:377
msgid ""
"When CPython is configured and built using the :option:`!--enable-"
"experimental-jit` option, a just-in-time (JIT) compiler is added which may "
"speed up some Python programs. On Windows, use ``PCbuild/build.bat --"
"experimental-jit`` to enable the JIT or ``--experimental-jit-interpreter`` "
"to enable the Tier 2 interpreter. Build requirements and further supporting "
"information `are contained at`__ :file:`Tools/jit/README.md`."
msgstr ""
"Quando o CPython é configurado e construído usando a opção :option:`!--"
"enable-experimental-jit`, um compilador just-in-time (JIT) é adicionado, o "
"que pode acelerar alguns programas Python. No Windows, use ``PCbuild/build."
"bat --experimental-jit`` para habilitar o JIT ou ``--experimental-jit-"
"interpreter`` para habilitar o interpretador Tier 2. Os requisitos de "
"construção e outras informações de suporte `estão contidos em`__ :file:"
"`Tools/jit/README.md`."

#: ../../whatsnew/3.13.rst:387
msgid ""
"The :option:`!--enable-experimental-jit` option takes these (optional) "
"values, defaulting to ``yes`` if :option:`!--enable-experimental-jit` is "
"present without the optional value."
msgstr ""
"A opção :option:`!--enable-experimental-jit` aceita esses valores "
"(opcionais), assumindo como padrão ``yes`` se :option:`!--enable-"
"experimental-jit` estiver presente sem o valor opcional."

#: ../../whatsnew/3.13.rst:391
msgid "``no``: Disable the entire Tier 2 and JIT pipeline."
msgstr "``no``: desativa todo o pipeline de Tier 2 e JIT."

#: ../../whatsnew/3.13.rst:392
msgid ""
"``yes``: Enable the JIT. To disable the JIT at runtime, pass the environment "
"variable ``PYTHON_JIT=0``."
msgstr ""
"``yes``: habilita o JIT. Para desabilitar o JIT em tempo de execução, passe "
"a variável de ambiente ``PYTHON_JIT=0``."

#: ../../whatsnew/3.13.rst:394
msgid ""
"``yes-off``: Build the JIT but disable it by default. To enable the JIT at "
"runtime, pass the environment variable ``PYTHON_JIT=1``."
msgstr ""
"``yes-off``: constrói o JIT, mas desabilita-o por padrão. Para habilitar o "
"JIT em tempo de execução, passe a variável de ambiente ``PYTHON_JIT=1``."

#: ../../whatsnew/3.13.rst:396
msgid ""
"``interpreter``: Enable the Tier 2 interpreter but disable the JIT. The "
"interpreter can be disabled by running with ``PYTHON_JIT=0``."
msgstr ""
"``interpreter``: habilita o interpretador Tier 2, mas desabilita o JIT. O "
"interpretador pode ser desabilitado executando com ``PYTHON_JIT=0``."

#: ../../whatsnew/3.13.rst:399
msgid "The internal architecture is roughly as follows:"
msgstr "A arquitetura interna é aproximadamente a seguinte:"

#: ../../whatsnew/3.13.rst:401
msgid ""
"We start with specialized *Tier 1 bytecode*. See :ref:`What's new in 3.11 "
"<whatsnew311-pep659>` for details."
msgstr ""
"Começamos com especializado *bytecode de Tier 1*. Veja :ref:`O que há de "
"novo no 3.11 <whatsnew311-pep659>` para detalhes."

#: ../../whatsnew/3.13.rst:403
msgid ""
"When the Tier 1 bytecode gets hot enough, it gets translated to a new purely "
"internal intermediate representation (IR), called the *Tier 2 IR*, and "
"sometimes referred to as micro-ops (\"uops\")."
msgstr ""
"Quando o bytecode Tier 1 fica quente o suficiente, ele é traduzido para uma "
"nova representação intermediária (IR) puramente interna, também chamado de "
"*IR Tier 2*, e às vezes chamada de micro-ops (\"uops\")."

#: ../../whatsnew/3.13.rst:406
msgid ""
"The Tier 2 IR uses the same stack-based virtual machine as Tier 1, but the "
"instruction format is better suited to translation to machine code."
msgstr ""
"O IR Tier 2 usa a mesma máquina virtual baseada em pilha que o Tier 1, mas o "
"formato de instrução é mais adequado para tradução em código de máquina."

#: ../../whatsnew/3.13.rst:408
msgid ""
"We have several optimization passes for Tier 2 IR, which are applied before "
"it is interpreted or translated to machine code."
msgstr ""
"Temos vários passes de otimização para IR Tier 2, que são aplicados antes de "
"serem interpretados ou traduzidos em código de máquina."

#: ../../whatsnew/3.13.rst:410
msgid ""
"There is a Tier 2 interpreter, but it is mostly intended for debugging the "
"earlier stages of the optimization pipeline. The Tier 2 interpreter can be "
"enabled by configuring Python with ``--enable-experimental-jit=interpreter``."
msgstr ""
"Existe um interpretador de Tier 2, mas ele se destina principalmente à "
"depuração dos estágios iniciais do pipeline de otimização. O interpretador "
"Tier 2 pode ser habilitado configurando o Python com ``--enable-experimental-"
"jit=interpreter``."

#: ../../whatsnew/3.13.rst:414
msgid ""
"When the JIT is enabled, the optimized Tier 2 IR is translated to machine "
"code, which is then executed."
msgstr ""
"Quando o JIT está habilitado, o IR Tier 2 otimizado é traduzido em código de "
"máquina, que é então executado."

#: ../../whatsnew/3.13.rst:416
msgid ""
"The machine code translation process uses a technique called *copy-and-"
"patch*. It has no runtime dependencies, but there is a new build-time "
"dependency on LLVM."
msgstr ""
"O processo de tradução de código de máquina usa uma técnica chamada *copiar "
"e corrigir*. Não possui dependências de tempo de execução, mas há uma nova "
"dependência de tempo de construção no LLVM."

#: ../../whatsnew/3.13.rst:420
msgid ":pep:`744`"
msgstr ":pep:`744`"

#: ../../whatsnew/3.13.rst:422
msgid ""
"(JIT by Brandt Bucher, inspired by a paper by Haoran Xu and Fredrik "
"Kjolstad. Tier 2 IR by Mark Shannon and Guido van Rossum. Tier 2 optimizer "
"by Ken Jin.)"
msgstr ""
"(JIT de Brandt Bucher, inspirado em um artigo de Haoran Xu e Fredrik "
"Kjolstad. Tier 2 IR de Mark Shannon e Guido van Rossum. Otimizador Tier 2 de "
"Ken Jin.)"

#: ../../whatsnew/3.13.rst:430
msgid "Defined mutation semantics for :py:func:`locals`"
msgstr "Definidas semânticas de mutação para :py:func:`locals`"

#: ../../whatsnew/3.13.rst:432
msgid ""
"Historically, the expected result of mutating the return value of :func:"
"`locals` has been left to individual Python implementations to define. "
"Starting from Python 3.13, :pep:`667` standardises the historical behavior "
"of CPython for most code execution scopes, but changes :term:`optimized "
"scopes <optimized scope>` (functions, generators, coroutines, "
"comprehensions, and generator expressions) to explicitly return independent "
"snapshots of the currently assigned local variables, including locally "
"referenced nonlocal variables captured in closures."
msgstr ""
"Historicamente, o resultado esperado da mutação do valor de retorno de :func:"
"`locals` foi deixada para as implementações individuais de Python definirem. "
"A partir do Python 3.13, :pep:`667` padroniza o comportamento histórico do "
"CPython para a maioria dos escopos de execução de código, mas altera :term:"
"`escopos otimizados <optimized scope>` (funções, geradores, corrotinas, "
"compreensões e expressões geradoras) para retornar explicitamente "
"instantâneos independentes das variáveis ​​locais atualmente atribuídas, "
"incluindo variáveis ​​não locais referenciadas localmente capturadas em "
"encerramentos."

#: ../../whatsnew/3.13.rst:441
msgid ""
"This change to the semantics of :func:`locals` in optimized scopes also "
"affects the default behavior of code execution functions that implicitly "
"target :func:`!locals` if no explicit namespace is provided (such as :func:"
"`exec` and :func:`eval`). In previous versions, whether or not changes could "
"be accessed by calling :func:`!locals` after calling the code execution "
"function was implementation-dependent. In CPython specifically, such code "
"would typically appear to work as desired, but could sometimes fail in "
"optimized scopes based on other code (including debuggers and code execution "
"tracing tools) potentially resetting the shared snapshot in that scope. Now, "
"the code will always run against an independent snapshot of the local "
"variables in optimized scopes, and hence the changes will never be visible "
"in subsequent calls to :func:`!locals`. To access the changes made in these "
"cases, an explicit namespace reference must now be passed to the relevant "
"function. Alternatively, it may make sense to update affected code to use a "
"higher level code execution API that returns the resulting code execution "
"namespace (e.g. :func:`runpy.run_path` when executing Python files from "
"disk)."
msgstr ""
"Esta mudança na semântica de :func:`locals` em escopos otimizados também "
"afeta o comportamento padrão das funções de execução de código que visam "
"implicitamente :func:`!locals` se nenhum espaço de nomes explícito for "
"fornecido (como :func:`exec` e :func:`eval`). Nas versões anteriores, se as "
"alterações podiam ou não ser acessadas chamando :func:`!locals` após chamar "
"a função de execução de código dependia da implementação. Especificamente no "
"CPython, esse código normalmente parece funcionar conforme desejado, mas às "
"vezes pode falhar em escopos otimizados com base em outro código (incluindo "
"depuradores e ferramentas de rastreamento de execução de código), "
"redefinindo potencialmente o instantâneo compartilhado nesse escopo. Agora, "
"o código sempre será executado em um instantâneo independente das variáveis ​​"
"locais em escopos otimizados e, portanto, as alterações nunca serão visíveis "
"em chamadas subsequentes para :func:`!locals`. Para acessar as alterações "
"feitas nesses casos, uma referência explícita de espaço de nomes deve agora "
"ser passada para a função relevante. Alternativamente, pode fazer sentido "
"atualizar o código afetado para usar uma API de execução de código de nível "
"superior que retorne o espaço de nomes de execução de código resultante (por "
"exemplo, :func:`runpy.run_path` ao executar arquivos Python do disco)."

#: ../../whatsnew/3.13.rst:460
msgid ""
"To ensure debuggers and similar tools can reliably update local variables in "
"scopes affected by this change, :attr:`FrameType.f_locals <frame.f_locals>` "
"now returns a write-through proxy to the frame's local and locally "
"referenced nonlocal variables in these scopes, rather than returning an "
"inconsistently updated shared ``dict`` instance with undefined runtime "
"semantics."
msgstr ""
"Para garantir que depuradores e ferramentas semelhantes possam atualizar de "
"forma confiável variáveis ​​locais em escopos afetados por esta mudança, :attr:"
"`FrameType.f_locals <frame.f_locals>` agora retorna um proxy write-through "
"para as variáveis ​​locais e não locais referenciadas localmente do quadro "
"nesses escopos, em vez de retornar uma instância ``dict`` compartilhada "
"atualizada inconsistentemente com semântica de tempo de execução indefinida."

#: ../../whatsnew/3.13.rst:466
msgid ""
"See :pep:`667` for more details, including related C API changes and "
"deprecations. Porting notes are also provided below for the affected :ref:"
"`Python APIs <pep667-porting-notes-py>` and :ref:`C APIs <pep667-porting-"
"notes-c>`."
msgstr ""
"Veja :pep:`667` para mais detalhes, incluindo alterações e descontinuações "
"relacionadas à API C. Notas de portabilidade também são fornecidas abaixo "
"para as :ref:`APIs de Python <pep667-porting-notes-py>` e as :ref:`APIs de C "
"<pep667-porting-notes-c>` afetadas."

#: ../../whatsnew/3.13.rst:471
msgid ""
"(PEP and implementation contributed by Mark Shannon and Tian Gao in :gh:"
"`74929`. Documentation updates provided by Guido van Rossum and Alyssa "
"Coghlan.)"
msgstr ""
"(PEP e implementação são contribuição de Mark Shannon e Tian Gao em :gh:"
"`74929`. Atualizações da documentação fornecidas por Guido van Rossum e "
"Alyssa Coghlan.)"

#: ../../whatsnew/3.13.rst:479
msgid "Support for mobile platforms"
msgstr "Suporte para plataformas móveis"

#: ../../whatsnew/3.13.rst:481
msgid ""
":pep:`730`: iOS is now a :pep:`11` supported platform, with the ``arm64-"
"apple-ios`` and ``arm64-apple-ios-simulator`` targets at tier 3 (iPhone and "
"iPad devices released after 2013 and the Xcode iOS simulator running on "
"Apple silicon hardware, respectively). ``x86_64-apple-ios-simulator`` (the "
"Xcode iOS simulator running on older ``x86_64`` hardware) is not a tier 3 "
"supported platform, but will have best-effort support. (PEP written and "
"implementation contributed by Russell Keith-Magee in :gh:`114099`.)"
msgstr ""
":pep:`730`: iOS agora é uma plataforma com suporte conforme a :pep:`11`, com "
"os alvos ``arm64-apple-ios`` e ``arm64-apple-ios-simulator`` no nível 3 "
"(dispositivos iPhone e iPad lançados após 2013 e o simulador Xcode iOS sendo "
"executado em hardware Apple Silicon, respectivamente). ``x86_64-apple-ios-"
"simulator`` (o simulador Xcode iOS sendo executado em hardware ``x86_64`` "
"mais antigo) não é uma plataforma com suporte nível 3, mas terá o melhor "
"suporte possível. (PEP escrita e implementação como contribuição de Russell "
"Keith-Magee em :gh:`114099`.)"

#: ../../whatsnew/3.13.rst:491
msgid ""
":pep:`738`: Android is now a :pep:`11` supported platform, with the "
"``aarch64-linux-android`` and ``x86_64-linux-android`` targets at tier 3. "
"The 32-bit targets ``arm-linux-androideabi`` and ``i686-linux-android`` are "
"not tier 3 supported platforms, but will have best-effort support. (PEP "
"written and implementation contributed by Malcolm Smith in :gh:`116622`.)"
msgstr ""
":pep:`738`: Android agora é uma plataforma com suporte conforme a :pep:`11`, "
"com os alvos ``aarch64-linux-android`` e ``x86_64-linux-android`` no nível "
"3. Os alvos de 32 bits ``arm-linux-androideabi`` e ``i686-linux-android`` "
"não são plataformas com suporte de nível 3, mas terão o melhor suporte "
"possível. (PEP escrita e implementação como contribuição de Malcolm Smith "
"em :gh:`116622`.)"

#: ../../whatsnew/3.13.rst:498
msgid ":pep:`730`, :pep:`738`"
msgstr ":pep:`730`, :pep:`738`"

#: ../../whatsnew/3.13.rst:502
msgid "Other Language Changes"
msgstr "Outras mudanças na linguagem"

#: ../../whatsnew/3.13.rst:504
msgid ""
"The compiler now strips common leading whitespace from every line in a "
"docstring. This reduces the size of the :term:`bytecode cache <bytecode>` "
"(such as ``.pyc`` files), with reductions in file size of around 5%, for "
"example in :mod:`!sqlalchemy.orm.session` from SQLAlchemy 2.0. This change "
"affects tools that use docstrings, such as :mod:`doctest`."
msgstr ""
"O compilador agora remove espaços em branco comuns de cada linha em uma "
"docstring. Isso reduz o tamanho do :term:`cache de bytecode <bytecode>` "
"(como arquivos ``.pyc``), com reduções no tamanho do arquivo de cerca de 5%, "
"por exemplo, em :mod:`!sqlalchemy.orm.session` do SQLAlchemy 2.0. Essa "
"alteração afeta ferramentas que usam docstrings, como :mod:`doctest`."

#: ../../whatsnew/3.13.rst:511
msgid ""
">>> def spam():\n"
"...     \"\"\"\n"
"...         This is a docstring with\n"
"...           leading whitespace.\n"
"...\n"
"...         It even has multiple paragraphs!\n"
"...     \"\"\"\n"
"...\n"
">>> spam.__doc__\n"
"'\\nThis is a docstring with\\n  leading whitespace.\\n\\nIt even has "
"multiple paragraphs!\\n'"
msgstr ""
">>> def spam():\n"
"...     \"\"\"\n"
"...         Esta é uma docstring com\n"
"...           espaços em branco no começo.\n"
"...\n"
"...         Ela atém mesmo tem vários parágrafos!\n"
"...     \"\"\"\n"
"...\n"
">>> spam.__doc__\n"
"'\\n\\nEsta é uma docstring com\\n\\n espaços em branco no começo."
"\\n\\n\\nEla atém mesmo tem vários parágrafos!\\n\\n'"

#: ../../whatsnew/3.13.rst:524
msgid "(Contributed by Inada Naoki in :gh:`81283`.)"
msgstr "(Contribuição de Inada Naoki em :gh:`81283`.)"

#: ../../whatsnew/3.13.rst:526
msgid ""
":ref:`Annotation scopes <annotation-scopes>` within class scopes can now "
"contain lambdas and comprehensions. Comprehensions that are located within "
"class scopes are not inlined into their parent scope."
msgstr ""
":ref:`Escopos de anotação <annotation-scopes>` dentro dos escopos de classe "
"agora pode conter lambdas e compreensões. As compreensões localizadas nos "
"escopos de classe não são incorporadas ao escopo pai."

#: ../../whatsnew/3.13.rst:531
msgid ""
"class C[T]:\n"
"    type Alias = lambda: T"
msgstr ""
"class C[T]:\n"
"    type Alias = lambda: T"

#: ../../whatsnew/3.13.rst:536
msgid "(Contributed by Jelle Zijlstra in :gh:`109118` and :gh:`118160`.)"
msgstr "(Contribuição de Jelle Zijlstra em :gh:`109118` e :gh:`118160`.)"

#: ../../whatsnew/3.13.rst:538
msgid ""
":ref:`Future statements <future>` are no longer triggered by relative "
"imports of the :mod:`__future__` module, meaning that statements of the form "
"``from .__future__ import ...`` are now simply standard relative imports, "
"with no special features activated. (Contributed by Jeremiah Gabriel Pascual "
"in :gh:`118216`.)"
msgstr ""
":ref:`Instruções future <future>` não são mais acionadas por importações "
"relativas do módulo :mod:`__future__`, o que significa que instruções no "
"formato ``from .__future__ import ...`` agora são simplesmente importações "
"relativas padrão, sem recursos especiais ativados. (Contribuição de Jeremiah "
"Gabriel Pascual em :gh:`118216`.)"

#: ../../whatsnew/3.13.rst:544
msgid ""
":keyword:`global` declarations are now permitted in :keyword:`except` blocks "
"when that global is used in the :keyword:`else` block. Previously this "
"raised an erroneous :exc:`SyntaxError`. (Contributed by Irit Katriel in :gh:"
"`111123`.)"
msgstr ""
"Declarações :keyword:`global` agora são permitidas em blocos :keyword:"
"`except` quando esse global é usado no bloco :keyword:`else`. Anteriormente, "
"isso erroneamente levantava uma exceção :exc:`SyntaxError`. (Contribuição de "
"Irit Katriel em :gh:`111123`.)"

#: ../../whatsnew/3.13.rst:549
msgid ""
"Add :envvar:`PYTHON_FROZEN_MODULES`, a new environment variable that "
"determines whether frozen modules are ignored by the import machinery, "
"equivalent to the :option:`-X frozen_modules <-X>` command-line option. "
"(Contributed by Yilei Yang in :gh:`111374`.)"
msgstr ""
"Adiciona :envvar:`PYTHON_FROZEN_MODULES`, uma nova variável de ambiente que "
"determina se os módulos congelados são ignorados pelo maquinário de "
"importação, equivalente à opção de linha de comando :option:`-X "
"frozen_modules <-X>`. (Contribuição de Yilei Yang em :gh:`111374`.)"

#: ../../whatsnew/3.13.rst:554
msgid ""
"Add :ref:`support for the perf profiler <perf_profiling>` working without "
"`frame pointers <https://en.wikipedia.org/wiki/Call_stack>`_ through the new "
"environment variable :envvar:`PYTHON_PERF_JIT_SUPPORT` and command-line "
"option :option:`-X perf_jit <-X>`. (Contributed by Pablo Galindo in :gh:"
"`118518`.)"
msgstr ""
"Adicionado :ref:`suporte ao perfilador perf <perf_profiling>` funcionando "
"sem `ponteiros de quadro <https://pt.wikipedia.org/wiki/Pilha_de_chamada>`_ "
"através da nova variável de ambiente :envvar:`PYTHON_PERF_JIT_SUPPORT` e "
"opção de linha de comando :option:`-X perf_jit <-X>`. (Contribuição de Pablo "
"Galindo em :gh:`118518`.)"

#: ../../whatsnew/3.13.rst:560
msgid ""
"The location of a :file:`.python_history` file can be changed via the new :"
"envvar:`PYTHON_HISTORY` environment variable. (Contributed by Levi Sabah, "
"Zackery Spytz and Hugo van Kemenade in :gh:`73965`.)"
msgstr ""
"A localização de um arquivo :file:`.python_history` pode ser alterada por "
"meio da nova variável de ambiente :envvar:`PYTHON_HISTORY`. (Contribuição de "
"Levi Sabah, Zackery Spytz e Hugo van Kemenade em :gh:`73965`.)"

#: ../../whatsnew/3.13.rst:565
msgid ""
"Classes have a new :attr:`~type.__static_attributes__` attribute. This is "
"populated by the compiler with a tuple of the class's attribute names which "
"are assigned through ``self.<name>`` from any function in its body. "
"(Contributed by Irit Katriel in :gh:`115775`.)"
msgstr ""
"As classes têm um novo atributo :attr:`~type.__static_attributes__`. Isso é "
"preenchido pelo compilador, com uma tupla de nomes de atributos da classe "
"que são atribuídos através de ``self.<name>`` de qualquer função em seu "
"corpo. (Contribuição de Irit Katriel em :gh:`115775`.)"

#: ../../whatsnew/3.13.rst:570
msgid ""
"The compiler now creates a :attr:`!__firstlineno__` attribute on classes "
"with the line number of the first line of the class definition. (Contributed "
"by Serhiy Storchaka in :gh:`118465`.)"
msgstr ""
"O compilador agora cria um atributo :attr:`!__firstlineno__` em classes com "
"o número da primeira linha da definição de classe. (Contribuição de Serhiy "
"Storchaka em :gh:`118465`.)"

#: ../../whatsnew/3.13.rst:574
msgid ""
"The :func:`exec` and :func:`eval` builtins now accept the *globals* and "
"*locals* arguments as keywords. (Contributed by Raphael Gaschignard in :gh:"
"`105879`)"
msgstr ""
"As funções embutidas :func:`exec` e :func:`eval` agora aceitam os argumentos "
"*globals* e *locals* como nomeados. (Contribuição de Raphael Gaschignard em :"
"gh:`105879`)"

#: ../../whatsnew/3.13.rst:578
msgid ""
"The :func:`compile` builtin now accepts a new flag, ``ast."
"PyCF_OPTIMIZED_AST``, which is similar to ``ast.PyCF_ONLY_AST`` except that "
"the returned AST is optimized according to the value of the *optimize* "
"argument. (Contributed by Irit Katriel in :gh:`108113`)."
msgstr ""
"A função embutida :func:`compile` agora aceita um novo sinalizador, ``ast."
"PyCF_OPTIMIZED_AST``, que é semelhante a ``ast.PyCF_ONLY_AST`` exceto que a "
"AST retornada é otimizada de acordo com o valor do argumento *optimize*. "
"(Contribuição de Irit Katriel em :gh:`108113`)."

#: ../../whatsnew/3.13.rst:584
msgid ""
"Add a :attr:`~property.__name__` attribute on :class:`property` objects. "
"(Contributed by Eugene Toder in :gh:`101860`.)"
msgstr ""
"Adiciona um atributo :attr:`~property.__name__` em objetos :class:"
"`property`. (Contribuição de Eugene Toder em :gh:`101860`.)"

#: ../../whatsnew/3.13.rst:587
msgid ""
"Add :exc:`PythonFinalizationError`, a new exception derived from :exc:"
"`RuntimeError` and used to signal when operations are blocked during :term:"
"`finalization <interpreter shutdown>`. The following callables now raise :"
"exc:`!PythonFinalizationError`, instead of :exc:`RuntimeError`:"
msgstr ""
"Adiciona :exc:`PythonFinalizationError`, uma nova exceção derivada de :exc:"
"`RuntimeError` e usada para sinalizar quando as operações são bloqueadas "
"durante a :term:`finalização <interpreter shutdown>`. Os seguintes chamáveis "
"agora levantam :exc:`!PythonFinalizationError`, em vez de :exc:"
"`RuntimeError`:"

#: ../../whatsnew/3.13.rst:593
msgid ":func:`_thread.start_new_thread`"
msgstr ":func:`_thread.start_new_thread`"

#: ../../whatsnew/3.13.rst:594
msgid ":func:`os.fork`"
msgstr ":func:`os.fork`"

#: ../../whatsnew/3.13.rst:595
msgid ":func:`os.forkpty`"
msgstr ":func:`os.forkpty`"

#: ../../whatsnew/3.13.rst:596
msgid ":class:`subprocess.Popen`"
msgstr ":class:`subprocess.Popen`"

#: ../../whatsnew/3.13.rst:598
msgid "(Contributed by Victor Stinner in :gh:`114570`.)"
msgstr "(Contribuição de Victor Stinner em :gh:`114570`.)"

#: ../../whatsnew/3.13.rst:600
msgid ""
"Allow the *count* argument of :meth:`str.replace` to be a keyword. "
"(Contributed by Hugo van Kemenade in :gh:`106487`.)"
msgstr ""
"Permite que o argumento *count* de :meth:`str.replace` seja um argumento "
"nomeado. (Contribuição de Hugo van Kemenade em :gh:`106487`.)"

#: ../../whatsnew/3.13.rst:603
msgid ""
"Many functions now emit a warning if a boolean value is passed as a file "
"descriptor argument. This can help catch some errors earlier. (Contributed "
"by Serhiy Storchaka in :gh:`82626`.)"
msgstr ""
"Muitas funções agora emitem um aviso se um valor booleano for passado como "
"argumento do descritor de arquivo. Isso pode ajudar a detectar alguns erros "
"mais cedo. (Contribuição de Serhiy Storchaka em :gh:`82626`.)"

#: ../../whatsnew/3.13.rst:608
msgid ""
"Added :attr:`!name` and :attr:`!mode` attributes for compressed and archived "
"file-like objects in the :mod:`bz2`, :mod:`lzma`, :mod:`tarfile`, and :mod:"
"`zipfile` modules. (Contributed by Serhiy Storchaka in :gh:`115961`.)"
msgstr ""
"Adicionados atributos :attr:`!name` e :attr:`!mode` para objetos arquivo ou "
"similar compactados e arquivados nos módulos :mod:`bz2`, :mod:`lzma`, :mod:"
"`tarfile` e :mod:`zipfile`. (Contribuição de Serhiy Storchaka em :gh:"
"`115961`.)"

#: ../../whatsnew/3.13.rst:615
msgid "New Modules"
msgstr "Novos módulos"

#: ../../whatsnew/3.13.rst:617
msgid ""
":mod:`dbm.sqlite3`: An SQLite backend for :mod:`dbm`. (Contributed by "
"Raymond Hettinger and Erlend E. Aasland in :gh:`100414`.)"
msgstr ""
":mod:`dbm.sqlite3`: um backend SQLite para :mod:`dbm`. (Contribuição de "
"Raymond Hettinger e Erlend E. Aasland em :gh:`100414`.)"

#: ../../whatsnew/3.13.rst:622
msgid "Improved Modules"
msgstr "Módulos melhorados"

#: ../../whatsnew/3.13.rst:626
msgid "argparse"
msgstr "argparse"

#: ../../whatsnew/3.13.rst:628
msgid ""
"Add the *deprecated* parameter to the :meth:`~argparse.ArgumentParser."
"add_argument` and :meth:`!add_parser` methods, to enable deprecating command-"
"line options, positional arguments, and subcommands. (Contributed by Serhiy "
"Storchaka in :gh:`83648`.)"
msgstr ""
"Adiciona o parâmetro *deprecated* aos métodos :meth:`~argparse."
"ArgumentParser.add_argument` e :meth:`!add_parser`, o qual permite "
"descontinuar opções de linha de comando, argumentos posicionais e "
"subcomandos. (Contribuição de Serhiy Storchaka em :gh:`83648`.)"

#: ../../whatsnew/3.13.rst:636
msgid "array"
msgstr "array"

#: ../../whatsnew/3.13.rst:638
msgid ""
"Add the ``'w'`` type code (``Py_UCS4``) for Unicode characters. It should be "
"used instead of the deprecated ``'u'`` type code. (Contributed by Inada "
"Naoki in :gh:`80480`.)"
msgstr ""
"Adiciona o código do tipo ``'w'`` (``Py_UCS4``) para caracteres Unicode. Ele "
"deve ser usado no lugar do descontinuado código do tipo ``'u'``. "
"(Contribuição de Inada Naoki em :gh:`80480`.)"

#: ../../whatsnew/3.13.rst:642
msgid ""
"Register :class:`array.array` as a :class:`~collections.abc.MutableSequence` "
"by implementing the :meth:`~array.array.clear` method. (Contributed by Mike "
"Zimin in :gh:`114894`.)"
msgstr ""
"Registra :class:`array.array` como :class:`~collections.abc.MutableSequence` "
"implementando o método :meth:`~array.array.clear`. (Contribuição de Mike "
"Zimin em :gh:`114894`.)"

#: ../../whatsnew/3.13.rst:648
msgid "ast"
msgstr "ast"

#: ../../whatsnew/3.13.rst:650
msgid ""
"The constructors of node types in the :mod:`ast` module are now stricter in "
"the arguments they accept, with more intuitive behavior when arguments are "
"omitted."
msgstr ""
"Os construtores dos tipos de nós no módulo :mod:`ast` agora são mais rígidos "
"nos argumentos que aceitam, com um comportamento mais intuitivo quando os "
"argumentos são omitidos."

#: ../../whatsnew/3.13.rst:654
msgid ""
"If an optional field on an AST node is not included as an argument when "
"constructing an instance, the field will now be set to ``None``. Similarly, "
"if a list field is omitted, that field will now be set to an empty list, and "
"if an :class:`!expr_context` field is omitted, it defaults to :class:`Load() "
"<ast.Load>`. (Previously, in all cases, the attribute would be missing on "
"the newly constructed AST node instance.)"
msgstr ""
"Se um campo opcional em um nó AST não for incluído como argumento ao "
"construir uma instância, o campo agora será definido como ``None``. Da mesma "
"forma, se um campo de lista for omitido, esse campo será agora definido como "
"uma lista vazia, e se um campo :class:`!expr_context` for omitido, o padrão "
"será :class:`Load() <ast.Load>`. (Anteriormente, em todos os casos, o "
"atributo estaria ausente na instância do nó de AST recém-construída.)"

#: ../../whatsnew/3.13.rst:662
msgid ""
"In all other cases, where a required argument is omitted, the node "
"constructor will emit a :exc:`DeprecationWarning`. This will raise an "
"exception in Python 3.15. Similarly, passing a keyword argument to the "
"constructor that does not map to a field on the AST node is now deprecated, "
"and will raise an exception in Python 3.15."
msgstr ""
"Em todos os outros casos, nos quais um argumento é omitido, o construtor de "
"nós vai emitir uma :exc:`DeprecationWarning`. Isso vai levantar uma exceção "
"no Python 3.15. Da mesma forma, passar um argumento nomeado para o "
"construtor que não mapeia para um campo no nó AST agora está descontinuado e "
"vai levantar uma exceção no Python 3.15."

#: ../../whatsnew/3.13.rst:669
msgid ""
"These changes do not apply to user-defined subclasses of :class:`ast.AST` "
"unless the class opts in to the new behavior by defining the :attr:`.AST."
"_field_types` mapping."
msgstr ""
"Estas mudanças não se aplicam às subclasses definidas pelo usuário de :class:"
"`ast.AST`, a menos que a classe opte pelo novo comportamento definindo o "
"mapeamento :attr:`.AST._field_types`."

#: ../../whatsnew/3.13.rst:673
msgid ""
"(Contributed by Jelle Zijlstra in :gh:`105858`, :gh:`117486`, and :gh:"
"`118851`.)"
msgstr ""
"(Contribuição de Jelle Zijlstra em :gh:`105858`, :gh:`117486` e :gh:"
"`118851`.)"

#: ../../whatsnew/3.13.rst:675
msgid ""
":func:`ast.parse` now accepts an optional argument *optimize* which is "
"passed on to :func:`compile`. This makes it possible to obtain an optimized "
"AST. (Contributed by Irit Katriel in :gh:`108113`.)"
msgstr ""
":func:`ast.parse` agora aceita um argumento opcional *optimize* que é "
"passado para :func:`compile`. Isto torna possível obter um AST otimizado. "
"(Contribuição de Irit Katriel em :gh:`108113`.)"

#: ../../whatsnew/3.13.rst:682
msgid "asyncio"
msgstr "asyncio"

#: ../../whatsnew/3.13.rst:684
msgid ""
":func:`asyncio.as_completed` now returns an object that is both an :term:"
"`asynchronous iterator` and a plain :term:`iterator` of :term:`awaitables "
"<awaitable>`. The awaitables yielded by asynchronous iteration include "
"original task or future objects that were passed in, making it easier to "
"associate results with the tasks being completed. (Contributed by Justin "
"Arthur in :gh:`77714`.)"
msgstr ""
":func:`asyncio.as_completed` agora retorna um objeto que é ao mesmo tempo "
"um :term:`iterador assíncrono` e um :term:`iterator` simples de :term:"
"`aguardáveis <awaitable>`. Os aguardáveis ​​gerados pela iteração assíncrona "
"incluem tarefas originais ou objetos futuros que foram passados, facilitando "
"a associação dos resultados às tarefas que estão sendo concluídas. "
"(Contribuição de Justin Arthur em :gh:`77714`.)"

#: ../../whatsnew/3.13.rst:692
msgid ""
":meth:`asyncio.loop.create_unix_server` will now automatically remove the "
"Unix socket when the server is closed. (Contributed by Pierre Ossman in :gh:"
"`111246`.)"
msgstr ""
":meth:`asyncio.loop.create_unix_server` agora removerá automaticamente o "
"soquete Unix quando o servidor for fechado. (Contribuição de Pierre Ossman "
"em :gh:`111246`.)"

#: ../../whatsnew/3.13.rst:696
msgid ""
":meth:`.DatagramTransport.sendto` will now send zero-length datagrams if "
"called with an empty bytes object. The transport flow control also now "
"accounts for the datagram header when calculating the buffer size. "
"(Contributed by Jamie Phan in :gh:`115199`.)"
msgstr ""
":meth:`.DatagramTransport.sendto` agora enviará datagramas de comprimento "
"zero se for chamado com um objeto de bytes vazios. O controle de fluxo de "
"transporte agora também leva em conta o cabeçalho do datagrama ao calcular o "
"tamanho do buffer. (Contribuição de Jamie Phan em :gh:`115199`.)"

#: ../../whatsnew/3.13.rst:702
msgid ""
"Add :meth:`Queue.shutdown <asyncio.Queue.shutdown>` and :exc:`~asyncio."
"QueueShutDown` to manage queue termination. (Contributed by Laurie Opperman "
"and Yves Duprat in :gh:`104228`.)"
msgstr ""
"Adiciona :meth:`Queue.shutdown <asyncio.Queue.shutdown>` e :exc:`~asyncio."
"QueueShutDown` para gerenciar a terminação da fila. (Contribuição de Laurie "
"Opperman e Yves Duprat em :gh:`104228`.)"

#: ../../whatsnew/3.13.rst:706
msgid ""
"Add the :meth:`.Server.close_clients` and :meth:`.Server.abort_clients` "
"methods, which more forcefully close an asyncio server. (Contributed by "
"Pierre Ossman in :gh:`113538`.)"
msgstr ""
"Adiciona os métodos :meth:`.Server.close_clients` e :meth:`.Server."
"abort_clients`, que fecham de forma mais forçada um servidor asyncio. "
"(Contribuição de Pierre Ossman em :gh:`113538`.)"

#: ../../whatsnew/3.13.rst:710
msgid ""
"Accept a tuple of separators in :meth:`.StreamReader.readuntil`, stopping "
"when any one of them is encountered. (Contributed by Bruce Merry in :gh:"
"`81322`.)"
msgstr ""
"Aceita uma tupla de separadores em :meth:`.StreamReader.readuntil`, parando "
"quando qualquer um deles for encontrado. (Contribuição de Bruce Merry em :gh:"
"`81322`.)"

#: ../../whatsnew/3.13.rst:714
msgid ""
"Improve the behavior of :class:`~asyncio.TaskGroup` when an external "
"cancellation collides with an internal cancellation. For example, when two "
"task groups are nested and both experience an exception in a child task "
"simultaneously, it was possible that the outer task group would hang, "
"because its internal cancellation was swallowed by the inner task group."
msgstr ""
"Melhora o comportamento de :class:`~asyncio.TaskGroup` quando um "
"cancelamento externo colide com um cancelamento interno. Por exemplo, quando "
"dois grupos de tarefas estão aninhados e ambos experimentam uma exceção em "
"uma tarefa filho simultaneamente, é possível que o grupo de tarefas externo "
"seja interrompido, porque seu cancelamento interno foi engolido pelo grupo "
"de tarefas interno."

#: ../../whatsnew/3.13.rst:721
msgid ""
"In the case where a task group is cancelled externally and also must raise "
"an :exc:`ExceptionGroup`, it will now call the parent task's :meth:`~asyncio."
"Task.cancel` method. This ensures that a :exc:`~asyncio.CancelledError` will "
"be raised at the next :keyword:`await`, so the cancellation is not lost."
msgstr ""
"No caso em que um grupo de tarefas é cancelado externamente e também deve "
"levantar :exc:`ExceptionGroup`, ele agora chamará o método :meth:`~asyncio."
"Task.cancel` da tarefa pai. Isso garante que uma :exc:`~asyncio."
"CancelledError` será levantada no próximo :keyword:`await`, para que o "
"cancelamento não seja perdido."

#: ../../whatsnew/3.13.rst:727
msgid ""
"An added benefit of these changes is that task groups now preserve the "
"cancellation count (:meth:`~asyncio.Task.cancelling`)."
msgstr ""
"Um benefício adicional dessas mudanças é que os grupos de tarefas agora "
"preservam a contagem de cancelamentos (:meth:`~asyncio.Task.cancelling`)."

#: ../../whatsnew/3.13.rst:730
msgid ""
"In order to handle some corner cases, :meth:`~asyncio.Task.uncancel` may now "
"reset the undocumented ``_must_cancel`` flag when the cancellation count "
"reaches zero."
msgstr ""
"Para lidar com alguns casos extremos, :meth:`~asyncio.Task.uncancel` agora "
"pode redefinir o sinalizador não documentado ``_must_cancel`` quando a "
"contagem de cancelamentos chegar a zero."

#: ../../whatsnew/3.13.rst:734
msgid "(Inspired by an issue reported by Arthur Tacca in :gh:`116720`.)"
msgstr ""
"(Inspirado por um relatório de problema relatado por Arthur Tacca em :gh:"
"`116720`.)"

#: ../../whatsnew/3.13.rst:736
msgid ""
"When :meth:`.TaskGroup.create_task` is called on an inactive :class:"
"`~asyncio.TaskGroup`, the given coroutine will be closed (which prevents a :"
"exc:`RuntimeWarning` about the given coroutine being never awaited). "
"(Contributed by Arthur Tacca and Jason Zhang in :gh:`115957`.)"
msgstr ""
"Quando :meth:`.TaskGroup.create_task` é chamado em um :class:`~asyncio."
"TaskGroup` inativo, a corrotina fornecida será fechada (o que evita que um :"
"exc:`RuntimeWarning` sobre a corrotina fornecida nunca seja aguardado). "
"(Contribuição de Arthur Tacca e Jason Zhang em :gh:`115957`.)"

#: ../../whatsnew/3.13.rst:744
msgid "base64"
msgstr "base64"

#: ../../whatsnew/3.13.rst:746
msgid ""
"Add :func:`~base64.z85encode` and :func:`~base64.z85decode` functions for "
"encoding :class:`bytes` as `Z85 data`_ and decoding Z85-encoded data to :"
"class:`!bytes`. (Contributed by Matan Perelman in :gh:`75299`.)"
msgstr ""
"Adiciona as funções :func:`~base64.z85encode` e :func:`~base64.z85decode` "
"para codificar :class:`bytes` como `dados Z85`_ e decodificar dados "
"codificados em Z85 para :class:`!bytes`. (Contribuição de Matan Perelman em :"
"gh:`75299`.)"

#: ../../whatsnew/3.13.rst:755
msgid "compileall"
msgstr "compileall"

#: ../../whatsnew/3.13.rst:757 ../../whatsnew/3.13.rst:765
#: ../../whatsnew/3.13.rst:1017
msgid ""
"The default number of worker threads and processes is now selected using :"
"func:`os.process_cpu_count` instead of :func:`os.cpu_count`. (Contributed by "
"Victor Stinner in :gh:`109649`.)"
msgstr ""
"O número padrão de threads e processos de trabalho é agora selecionado "
"usando :func:`os.process_cpu_count` em vez de :func:`os.cpu_count`. "
"(Contribuição de Victor Stinner em :gh:`109649`.)"

#: ../../whatsnew/3.13.rst:763
msgid "concurrent.futures"
msgstr "concurrent.futures"

#: ../../whatsnew/3.13.rst:771 ../../whatsnew/3.13.rst:1612
msgid "configparser"
msgstr "configparser"

#: ../../whatsnew/3.13.rst:773
msgid ""
":class:`~configparser.ConfigParser` now has support for unnamed sections, "
"which allows for top-level key-value pairs. This can be enabled with the new "
"*allow_unnamed_section* parameter. (Contributed by Pedro Sousa Lacerda in :"
"gh:`66449`.)"
msgstr ""
":class:`~configparser.ConfigParser` agora tem suporte para seções sem nome, "
"o que permite pares de chave-valor de nível superior. Isso pode ser "
"habilitado com o novo parâmetro *allow_unnamed_section*. (Contribuição de "
"Pedro Sousa Lacerda em :gh:`66449`.)"

#: ../../whatsnew/3.13.rst:780
msgid "copy"
msgstr "copy"

#: ../../whatsnew/3.13.rst:782
msgid ""
"The new :func:`~copy.replace` function and the :meth:`replace protocol "
"<object.__replace__>` make creating modified copies of objects much simpler. "
"This is especially useful when working with immutable objects. The following "
"types support the :func:`~copy.replace` function and implement the replace "
"protocol:"
msgstr ""
"A nova função :func:`~copy.replace` e o protocolo :meth:`replace <object."
"__replace__>` tornam a criação de cópias modificadas de objetos muito mais "
"simples. Isso é especialmente útil ao trabalhar com objetos imutáveis. Os "
"seguintes tipos dão suporte à função :func:`~copy.replace` e implementam o "
"protocolo replace:"

#: ../../whatsnew/3.13.rst:788
msgid ":func:`collections.namedtuple`"
msgstr ":func:`collections.namedtuple`"

#: ../../whatsnew/3.13.rst:789
msgid ":class:`dataclasses.dataclass`"
msgstr ":class:`dataclasses.dataclass`"

#: ../../whatsnew/3.13.rst:790
msgid ""
":class:`datetime.datetime`, :class:`datetime.date`, :class:`datetime.time`"
msgstr ""
":class:`datetime.datetime`, :class:`datetime.date`, :class:`datetime.time`"

#: ../../whatsnew/3.13.rst:791
msgid ":class:`inspect.Signature`, :class:`inspect.Parameter`"
msgstr ":class:`inspect.Signature`, :class:`inspect.Parameter`"

#: ../../whatsnew/3.13.rst:792
msgid ":class:`types.SimpleNamespace`"
msgstr ":class:`types.SimpleNamespace`"

#: ../../whatsnew/3.13.rst:793
msgid ":ref:`code objects <code-objects>`"
msgstr ":ref:`objetos código <code-objects>`"

#: ../../whatsnew/3.13.rst:795
msgid ""
"Any user-defined class can also support :func:`copy.replace` by defining "
"the :meth:`~object.__replace__` method. (Contributed by Serhiy Storchaka in :"
"gh:`108751`.)"
msgstr ""
"Qualquer classe definida pelo usuário também pode têm suporte :func:`copy."
"replace` definindo o método :meth:`~object.__replace__`. (Contribuição de "
"Serhiy Storchaka em :gh:`108751`.)"

#: ../../whatsnew/3.13.rst:801
msgid "ctypes"
msgstr "ctypes"

#: ../../whatsnew/3.13.rst:803
msgid ""
"As a consequence of necessary internal refactoring, initialization of "
"internal metaclasses now happens in ``__init__`` rather than in ``__new__``. "
"This affects projects that subclass these internal metaclasses to provide "
"custom initialization. Generally:"
msgstr ""
"Como consequência da refatoração interna necessária, a inicialização de "
"metaclasses internas agora acontece em ``__init__`` em vez de ``__new__``. "
"Isso afeta projetos que fazem subclasse dessas metaclasses internas para "
"fornecer inicialização personalizada. De forma geral:"

#: ../../whatsnew/3.13.rst:809
msgid ""
"Custom logic that was done in ``__new__`` after calling ``super().__new__`` "
"should be moved to ``__init__``."
msgstr ""
"A lógica personalizada que foi feita em ``__new__`` após chamar ``super()."
"__new__`` deve ser movida para ``__init__``."

#: ../../whatsnew/3.13.rst:811
msgid ""
"To create a class, call the metaclass, not only the metaclass's ``__new__`` "
"method."
msgstr ""
"Para criar uma classe, chame a metaclasse, não apenas o método ``__new__`` "
"da metaclasse."

#: ../../whatsnew/3.13.rst:814
msgid ""
"See :gh:`124520` for discussion and links to changes in some affected "
"projects."
msgstr ""
"Veja :gh:`124520` para discussão e links para mudanças em alguns projetos "
"afetados."

#: ../../whatsnew/3.13.rst:817
msgid ""
":class:`ctypes.Structure` objects have a new :attr:`~ctypes.Structure."
"_align_` attribute which allows the alignment of the structure being packed "
"to/from memory to be specified explicitly. (Contributed by Matt Sanderson "
"in :gh:`112433`)"
msgstr ""
"Os objetos :class:`ctypes.Structure` têm um novo atributo :attr:`~ctypes."
"Structure._align_` que permite que o alinhamento da estrutura que está sendo "
"empacotada para/da memória seja especificado explicitamente. (Contribuição "
"de Matt Sanderson em :gh:`112433`)"

#: ../../whatsnew/3.13.rst:823
msgid "dbm"
msgstr "dbm"

#: ../../whatsnew/3.13.rst:825
msgid ""
"Add :mod:`dbm.sqlite3`, a new module which implements an SQLite backend, and "
"make it the default :mod:`!dbm` backend. (Contributed by Raymond Hettinger "
"and Erlend E. Aasland in :gh:`100414`.)"
msgstr ""
"Adiciona :mod:`dbm.sqlite3`, um novo módulo que implementa um backend "
"SQLite, e torna-o o backend padrão :mod:`!dbm`. (Contribuição de Raymond "
"Hettinger e Erlend E. Aasland em :gh:`100414`.)"

#: ../../whatsnew/3.13.rst:829
msgid ""
"Allow removing all items from the database through the new :meth:`.gdbm."
"clear` and :meth:`.ndbm.clear` methods. (Contributed by Donghee Na in :gh:"
"`107122`.)"
msgstr ""
"Permite a remoção de todos os itens do banco de dados por meio dos novos "
"métodos :meth:`.gdbm.clear` e :meth:`.ndbm.clear`. (Contribuição de Donghee "
"Na em :gh:`107122`.)"

#: ../../whatsnew/3.13.rst:835
msgid "dis"
msgstr "dis"

#: ../../whatsnew/3.13.rst:837
msgid ""
"Change the output of :mod:`dis` module functions to show logical labels for "
"jump targets and exception handlers, rather than offsets. The offsets can be "
"added with the new :option:`-O <dis --show-offsets>` command-line option or "
"the *show_offsets* argument. (Contributed by Irit Katriel in :gh:`112137`.)"
msgstr ""
"Altera a saída das funções do módulo :mod:`dis` para mostrar rótulos lógicos "
"para alvos de salto e manipuladores de exceção, em vez de deslocamentos. Os "
"deslocamentos podem ser adicionados com a nova opção de linha de comando :"
"option:`-O <dis --show-offsets>` ou o argumento *show_offsets*. "
"(Contribuição de Irit Katriel em :gh:`112137`.)"

#: ../../whatsnew/3.13.rst:844
msgid ""
":meth:`~dis.get_instructions` no longer represents cache entries as separate "
"instructions. Instead, it returns them as part of the :class:`~dis."
"Instruction`, in the new *cache_info* field. The *show_caches* argument to :"
"meth:`~dis.get_instructions` is deprecated and no longer has any effect. "
"(Contributed by Irit Katriel in :gh:`112962`.)"
msgstr ""
":meth:`~dis.get_instructions` não representa mais entradas de cache como "
"instruções separadas. Em vez disso, ele os retorna como parte de :class:"
"`~dis.Instruction`, no novo campo *cache_info*. O argumento *show_caches* "
"para :meth:`~dis.get_instructions` foi descontinuado e não tem mais nenhum "
"efeito. (Contribuição de Irit Katriel em :gh:`112962`.)"

#: ../../whatsnew/3.13.rst:856
msgid "doctest"
msgstr "doctest"

#: ../../whatsnew/3.13.rst:858
msgid ""
":mod:`doctest` output is now colored by default. This can be controlled via "
"the new :envvar:`PYTHON_COLORS` environment variable as well as the "
"canonical |NO_COLOR|_ and |FORCE_COLOR|_ environment variables. See also :"
"ref:`using-on-controlling-color`. (Contributed by Hugo van Kemenade in :gh:"
"`117225`.)"
msgstr ""
"A saída :mod:`doctest` é agora colorida por padrão. Isso pode ser controlado "
"através da nova variável de ambiente :envvar:`PYTHON_COLORS`, bem como das "
"variáveis ​​de ambiente canônicas |NO_COLOR|_ e |FORCE_COLOR|_. Veja também :"
"ref:`using-on-controlling-color`. (Contribuição de Hugo van Kemenade em :gh:"
"`117225`.)"

#: ../../whatsnew/3.13.rst:865
msgid ""
"The :meth:`.DocTestRunner.run` method now counts the number of skipped "
"tests. Add the :attr:`.DocTestRunner.skips` and :attr:`.TestResults.skipped` "
"attributes. (Contributed by Victor Stinner in :gh:`108794`.)"
msgstr ""
"O método :meth:`.DocTestRunner.run` agora conta o número de testes "
"ignorados. Adiciona os atributos :attr:`.DocTestRunner.skips` e :attr:`."
"TestResults.skipped`. (Contribuição de Victor Stinner em :gh:`108794`.)"

#: ../../whatsnew/3.13.rst:871
msgid "email"
msgstr "email"

#: ../../whatsnew/3.13.rst:873
msgid ""
"Headers with embedded newlines are now quoted on output. The :mod:`~email."
"generator` will now refuse to serialize (write) headers that are improperly "
"folded or delimited, such that they would be parsed as multiple headers or "
"joined with adjacent data. If you need to turn this safety feature off, set :"
"attr:`~email.policy.Policy.verify_generated_headers`. (Contributed by Bas "
"Bloemsaat and Petr Viktorin in :gh:`121650`.)"
msgstr ""
"Cabeçalhos com novas linhas embutidas são agora colocadas entre aspas na "
"saída. O :mod:`~email.generator` agora se recusará a serializar (escrever) "
"cabeçalhos que são dobrados ou delimitados incorretamente, de modo que eles "
"seriam analisados ​​como vários cabeçalhos ou unidos a dados adjacentes. Se "
"você precisar desativar esse recurso de segurança, defina :attr:`~email."
"policy.Policy.verify_generated_headers`. (Contribuição de Bas Bloemsaat e "
"Petr Viktorin em :gh:`121650`.)"

#: ../../whatsnew/3.13.rst:881
msgid ""
":func:`~email.utils.getaddresses` and :func:`~email.utils.parseaddr` now "
"return ``('', '')`` pairs in more situations where invalid email addresses "
"are encountered instead of potentially inaccurate values. The two functions "
"have a new optional *strict* parameter (default ``True``). To get the old "
"behavior (accepting malformed input), use ``strict=False``. ``getattr(email."
"utils, 'supports_strict_parsing', False)`` can be used to check if the "
"*strict* parameter is available. (Contributed by Thomas Dwyer and Victor "
"Stinner for :gh:`102988` to improve the :cve:`2023-27043` fix.)"
msgstr ""
":func:`~email.utils.getaddresses` e :func:`~email.utils.parseaddr` agora "
"retornam pares ``('', '')`` em mais situações onde endereços de e-mail "
"inválidos são encontrados em vez de valores potencialmente imprecisos. As "
"duas funções têm agora um novo parâmetro opcional *strict* (padrão "
"``True``). Para obter o comportamento antigo (aceitar entrada malformada), "
"``strict=False``. ``getattr(email.utils, 'supports_strict_parsing', False)`` "
"pode ser usado para verificar se o parâmetro *strict* está disponível. "
"(Contribuição de Thomas Dwyer e Victor Stinner para :gh:`102988` para "
"melhorar a correção :cve:`2023-27043`.)"

#: ../../whatsnew/3.13.rst:893
msgid "fractions"
msgstr "fractions"

#: ../../whatsnew/3.13.rst:895
msgid ""
":class:`~fractions.Fraction` objects now support the standard :ref:`format "
"specification mini-language <formatspec>` rules for fill, alignment, sign "
"handling, minimum width, and grouping. (Contributed by Mark Dickinson in :gh:"
"`111320`.)"
msgstr ""
"Os objetos :class:`~fractions.Fraction` agora oferecem suporte às regras "
"padrão de :ref:`minilinguagem de especificação de formato <formatspec>` para "
"preenchimento, alinhamento, manipulação de sinais, largura mínima e "
"agrupamento. (Contribuição de Mark Dickinson em :gh:`111320`.)"

#: ../../whatsnew/3.13.rst:902
msgid "glob"
msgstr "glob"

#: ../../whatsnew/3.13.rst:904
msgid ""
"Add :func:`~glob.translate`, a function to convert a path specification with "
"shell-style wildcards to a regular expression. (Contributed by Barney Gale "
"in :gh:`72904`.)"
msgstr ""
"Adiciona :func:`~glob.translate`, uma função que converte uma especificação "
"de caminho com curingas estilo shell em uma expressão regular. (Contribuição "
"de Barney Gale em :gh:`72904`.)"

#: ../../whatsnew/3.13.rst:910
msgid "importlib"
msgstr "importlib"

#: ../../whatsnew/3.13.rst:912
msgid ""
"The following functions in :mod:`importlib.resources` now allow accessing a "
"directory (or tree) of resources, using multiple positional arguments (the "
"*encoding* and *errors* arguments in the text-reading functions are now "
"keyword-only):"
msgstr ""
"As seguintes funções em :mod:`importlib.resources` agora permitem acessar um "
"diretório (ou árvore) de recursos, usando múltiplos argumentos posicionais "
"(os argumentos *encoding* e *errors* nas funções de leitura de texto agora "
"são somente-nomeados):"

#: ../../whatsnew/3.13.rst:917
msgid ":func:`~importlib.resources.is_resource`"
msgstr ":func:`~importlib.resources.is_resource`"

#: ../../whatsnew/3.13.rst:918
msgid ":func:`~importlib.resources.open_binary`"
msgstr ":func:`~importlib.resources.open_binary`"

#: ../../whatsnew/3.13.rst:919
msgid ":func:`~importlib.resources.open_text`"
msgstr ":func:`~importlib.resources.open_text`"

#: ../../whatsnew/3.13.rst:920
msgid ":func:`~importlib.resources.path`"
msgstr ":func:`~importlib.resources.path`"

#: ../../whatsnew/3.13.rst:921
msgid ":func:`~importlib.resources.read_binary`"
msgstr ":func:`~importlib.resources.read_binary`"

#: ../../whatsnew/3.13.rst:922
msgid ":func:`~importlib.resources.read_text`"
msgstr ":func:`~importlib.resources.read_text`"

#: ../../whatsnew/3.13.rst:924
msgid ""
"These functions are no longer deprecated and are not scheduled for removal. "
"(Contributed by Petr Viktorin in :gh:`116608`.)"
msgstr ""
"Essas funções não estão mais descontinuadas e não estão programadas para "
"remoção. (Contribuição de Petr Viktorin em :gh:`116608`.)"

#: ../../whatsnew/3.13.rst:927
msgid ""
":func:`~importlib.resources.contents` remains deprecated in favor of the "
"fully-featured :class:`~importlib.resources.abc.Traversable` API. However, "
"there is now no plan to remove it. (Contributed by Petr Viktorin in :gh:"
"`116608`.)"
msgstr ""
"A :func:`~importlib.resources.contents` permanece descontinuada em favor da "
"API completa :class:`~importlib.resources.abc.Traversable`. No entanto, "
"agora não há planos para removê-la. (Contribuição de Petr Viktorin em :gh:"
"`116608`.)"

#: ../../whatsnew/3.13.rst:934
msgid "io"
msgstr "io"

#: ../../whatsnew/3.13.rst:936
msgid ""
"The :class:`~io.IOBase` finalizer now logs any errors raised by the :meth:"
"`~io.IOBase.close` method with :data:`sys.unraisablehook`. Previously, "
"errors were ignored silently by default, and only logged in :ref:`Python "
"Development Mode <devmode>` or when using a :ref:`Python debug build <debug-"
"build>`. (Contributed by Victor Stinner in :gh:`62948`.)"
msgstr ""
"O finalizador :class:`~io.IOBase` agora registra quaisquer erros levantados "
"pelo método :meth:`~io.IOBase.close` com :data:`sys.unraisablehook`. "
"Anteriormente, os erros eram ignorados silenciosamente por padrão e "
"registrados apenas em :ref:`Modo de Desenvolvimento do Python <devmode>` ou "
"ao usar uma :ref:`construção de depuração do Python <debug-build>`. "
"(Contribuição de Victor Stinner em :gh:`62948`.)"

#: ../../whatsnew/3.13.rst:945
msgid "ipaddress"
msgstr "ipaddress"

#: ../../whatsnew/3.13.rst:947
msgid ""
"Add the :attr:`.IPv4Address.ipv6_mapped` property, which returns the IPv4-"
"mapped IPv6 address. (Contributed by Charles Machalow in :gh:`109466`.)"
msgstr ""
"Adiciona a propriedade :attr:`.IPv4Address.ipv6_mapped`, que retorna o "
"endereço IPv6 mapeado para IPv4. (Contribuição de Charles Machalow em :gh:"
"`109466`.)"

#: ../../whatsnew/3.13.rst:951
msgid ""
"Fix ``is_global`` and ``is_private`` behavior in :class:`~ipaddress."
"IPv4Address`, :class:`~ipaddress.IPv6Address`, :class:`~ipaddress."
"IPv4Network`, and :class:`~ipaddress.IPv6Network`. (Contributed by Jakub "
"Stasiak in :gh:`113171`.)"
msgstr ""
"Corrige os comportamentos ``is_global`` e ``is_private`` em :class:"
"`~ipaddress.IPv4Address`, :class:`~ipaddress.IPv6Address`, :class:"
"`~ipaddress.IPv4Network` e :class:`~ipaddress.IPv6Network`. (Contribuição de "
"Jakub Stasiak em :gh:`113171`.)"

#: ../../whatsnew/3.13.rst:958
msgid "itertools"
msgstr "itertools"

#: ../../whatsnew/3.13.rst:960
msgid ""
":func:`~itertools.batched` has a new *strict* parameter, which raises a :exc:"
"`ValueError` if the final batch is shorter than the specified batch size. "
"(Contributed by Raymond Hettinger in :gh:`113202`.)"
msgstr ""
":func:`~itertools.batched` tem um novo parâmetro *strict*, que levanta uma :"
"exc:`ValueError` se o lote final for menor que o tamanho do lote "
"especificado. (Contribuição de Raymond Hettinger em :gh:`113202`.)"

#: ../../whatsnew/3.13.rst:967
msgid "marshal"
msgstr "marshal"

#: ../../whatsnew/3.13.rst:969
msgid ""
"Add the *allow_code* parameter in module functions. Passing "
"``allow_code=False`` prevents serialization and de-serialization of code "
"objects which are incompatible between Python versions. (Contributed by "
"Serhiy Storchaka in :gh:`113626`.)"
msgstr ""
"Adiciona o parâmetro *allow_code* nas funções do módulo. Passar "
"``allow_code=False`` evita a serialização e desserialização de objetos de "
"código que são incompatíveis entre versões do Python. (Contribuição de "
"Serhiy Storchaka em :gh:`113626`.)"

#: ../../whatsnew/3.13.rst:976
msgid "math"
msgstr "math"

#: ../../whatsnew/3.13.rst:978
msgid ""
"The new function :func:`~math.fma` performs fused multiply-add operations. "
"This computes ``x * y + z`` with only a single round, and so avoids any "
"intermediate loss of precision. It wraps the ``fma()`` function provided by "
"C99, and follows the specification of the IEEE 754 \"fusedMultiplyAdd\" "
"operation for special cases. (Contributed by Mark Dickinson and Victor "
"Stinner in :gh:`73468`.)"
msgstr ""
"A nova função :func:`~math.fma` realiza operações fundidas de multiplicação "
"e adição. Ela calcula ``x * y + z`` com apenas uma única rodada e, portanto, "
"evita qualquer perda intermediária de precisão. Ele envolve a função "
"``fma()`` fornecida pelo C99 e segue a especificação da operação IEEE 754 "
"\"fusedMultiplyAdd\" para casos especiais. (Contribuição de Mark Dickinson e "
"Victor Stinner em :gh:`73468`.)"

#: ../../whatsnew/3.13.rst:988
msgid "mimetypes"
msgstr "mimetypes"

#: ../../whatsnew/3.13.rst:990
msgid ""
"Add the :func:`~mimetypes.guess_file_type` function to guess a MIME type "
"from a filesystem path. Using paths with :func:`~mimetypes.guess_type` is "
"now :term:`soft deprecated`. (Contributed by Serhiy Storchaka in :gh:"
"`66543`.)"
msgstr ""
"Adiciona a função :func:`~mimetypes.guess_file_type` para adivinhar um tipo "
"MIME de um caminho do sistema de arquivos. Usar caminhos com :func:"
"`~mimetypes.guess_type` agora está :term:`suavemente descontinuada "
"<suavemente descontinuado>`. (Contribuição de Serhiy Storchaka em :gh:"
"`66543`.)"

#: ../../whatsnew/3.13.rst:997
msgid "mmap"
msgstr "mmap"

#: ../../whatsnew/3.13.rst:999
msgid ""
":class:`~mmap.mmap` is now protected from crashing on Windows when the "
"mapped memory is inaccessible due to file system errors or access "
"violations. (Contributed by Jannis Weigend in :gh:`118209`.)"
msgstr ""
":class:`~mmap.mmap` agora está protegida contra travamentos no Windows "
"quando a memória mapeada está inacessível devido a erros no sistema de "
"arquivos ou violações de acesso. (Contribuição de Jannis Weigend em :gh:"
"`118209`.)"

#: ../../whatsnew/3.13.rst:1003
msgid ""
":class:`~mmap.mmap` has a new :meth:`~mmap.mmap.seekable` method that can be "
"used when a seekable file-like object is required. The :meth:`~mmap.mmap."
"seek` method now returns the new absolute position. (Contributed by Donghee "
"Na and Sylvie Liberman in :gh:`111835`.)"
msgstr ""
":class:`~mmap.mmap` tem um novo método :meth:`~mmap.mmap.seekable` que pode "
"ser usado quando um objeto pesquisável arquivo ou similar é necessário. O "
"método :meth:`~mmap.mmap.seek` agora retorna a nova posição absoluta. "
"(Contribuição de Donghee Na e Sylvie Liberman em :gh:`111835`.)"

#: ../../whatsnew/3.13.rst:1008
msgid ""
"The new UNIX-only *trackfd* parameter for :class:`~mmap.mmap` controls file "
"descriptor duplication; if false, the file descriptor specified by *fileno* "
"will not be duplicated. (Contributed by Zackery Spytz and Petr Viktorin in :"
"gh:`78502`.)"
msgstr ""
"O novo parâmetro *trackfd* somente para UNIX para :class:`~mmap.mmap` "
"controla a duplicação do descritor de arquivo; se falso, o descritor de "
"arquivo especificado por *fileno* não será duplicado. (Contribuição de "
"Zackery Spytz e Petr Viktorin em :gh:`78502`.)"

#: ../../whatsnew/3.13.rst:1015
msgid "multiprocessing"
msgstr "multiprocessing"

#: ../../whatsnew/3.13.rst:1023
msgid "os"
msgstr "os"

#: ../../whatsnew/3.13.rst:1025
msgid ""
"Add :func:`~os.process_cpu_count` function to get the number of logical CPU "
"cores usable by the calling thread of the current process. (Contributed by "
"Victor Stinner in :gh:`109649`.)"
msgstr ""
"Adiciona a função :func:`~os.process_cpu_count` para obter o número de "
"núcleos lógicos de CPU utilizáveis ​​pela thread de chamada do processo atual. "
"(Contribuição de Victor Stinner em :gh:`109649`.)"

#: ../../whatsnew/3.13.rst:1029
msgid ""
":func:`~os.cpu_count` and :func:`~os.process_cpu_count` can be overridden "
"through the new environment variable :envvar:`PYTHON_CPU_COUNT` or the new "
"command-line option :option:`-X cpu_count <-X>`. This option is useful for "
"users who need to limit CPU resources of a container system without having "
"to modify application code or the container itself. (Contributed by Donghee "
"Na in :gh:`109595`.)"
msgstr ""
":func:`~os.cpu_count` e :func:`~os.process_cpu_count` podem ser substituídos "
"através da nova variável de ambiente :envvar:`PYTHON_CPU_COUNT` ou da nova "
"opção de linha de comando :option:`-X cpu_count <-X>`. Esta opção é útil "
"para usuários que precisam limitar os recursos da CPU de um sistema "
"contêiner sem precisar modificar código da aplicação ou o contêiner em si. "
"(Contribuição de Donghee Na em :gh:`109595`.)"

#: ../../whatsnew/3.13.rst:1037
msgid ""
"Add a :ref:`low level interface <os-timerfd>` to Linux's :manpage:`timer "
"file descriptors <timerfd_create(2)>` via :func:`~os.timerfd_create`, :func:"
"`~os.timerfd_settime`, :func:`~os.timerfd_settime_ns`, :func:`~os."
"timerfd_gettime`, :func:`~os.timerfd_gettime_ns`, :const:`~os."
"TFD_NONBLOCK`, :const:`~os.TFD_CLOEXEC`, :const:`~os.TFD_TIMER_ABSTIME`, "
"and :const:`~os.TFD_TIMER_CANCEL_ON_SET` (Contributed by Masaru Tsuchiyama "
"in :gh:`108277`.)"
msgstr ""
"Adiciona uma :ref:`interface de baixo nível <os-timerfd>` aos :manpage:"
"`descritores de arquivo de temporizador <timerfd_create(2)>` do Linux via :"
"func:`~os.timerfd_create`, :func:`~os.timerfd_settime`, :func:`~os."
"timerfd_settime_ns`, :func:`~os.timerfd_gettime`, :func:`~os."
"timerfd_gettime_ns`, :const:`~os.TFD_NONBLOCK`, :const:`~os.TFD_CLOEXEC`, :"
"const:`~os.TFD_TIMER_ABSTIME` e :const:`~os.TFD_TIMER_CANCEL_ON_SET` "
"(Contribuição de Masaru Tsuchiyama em :gh:`108277`.)"

#: ../../whatsnew/3.13.rst:1046
msgid ""
":func:`~os.lchmod` and the *follow_symlinks* argument of :func:`~os.chmod` "
"are both now available on Windows. Note that the default value of "
"*follow_symlinks* in :func:`!lchmod` is ``False`` on Windows. (Contributed "
"by Serhiy Storchaka in :gh:`59616`.)"
msgstr ""
":func:`~os.lchmod` e o argumento *follow_symlinks* em :func:`~os.chmod` "
"estão agora disponíveis no Windows. Observe que o valor padrão de "
"*follow_symlinks* em :func:`!lchmod` é ``False`` no Windows. (Contribuição "
"de Serhiy Storchaka em :gh:`59616`.)"

#: ../../whatsnew/3.13.rst:1052
msgid ""
":func:`~os.fchmod` and support for file descriptors in :func:`~os.chmod` are "
"both now available on Windows. (Contributed by Serhiy Storchaka in :gh:"
"`113191`.)"
msgstr ""
":func:`~os.fchmod` e suporte para descritores de arquivo em :func:`~os."
"chmod` estão agora disponíveis no Windows. (Contribuição de Serhiy Storchaka "
"em :gh:`113191`.)"

#: ../../whatsnew/3.13.rst:1056
msgid ""
"On Windows, :func:`~os.mkdir` and :func:`~os.makedirs` now support passing a "
"*mode* value of ``0o700`` to apply access control to the new directory. This "
"implicitly affects :func:`tempfile.mkdtemp` and is a mitigation for :cve:"
"`2024-4030`. Other values for *mode* continue to be ignored. (Contributed by "
"Steve Dower in :gh:`118486`.)"
msgstr ""
"No Windows, :func:`~os.mkdir` e :func:`~os.makedirs` agora oferecem suporte "
"a passar um valor *mode* de ``0o700`` para aplicar controle de acesso ao "
"novo diretório. Isso afeta implicitamente :func:`tempfile.mkdtemp` e é uma "
"mitigação para :cve:`2024-4030`. Outros valores para *mode* continuam a ser "
"ignorados. (Contribuição de Steve Dower em :gh:`118486`.)"

#: ../../whatsnew/3.13.rst:1063
msgid ""
":func:`~os.posix_spawn` now accepts ``None`` for the *env* argument, which "
"makes the newly spawned process use the current process environment. "
"(Contributed by Jakub Kulik in :gh:`113119`.)"
msgstr ""
":func:`~os.posix_spawn` agora aceita ``None`` para o argumento *env*, o que "
"faz com que o processo recém-gerado use o ambiente de processo atual. "
"(Contribuição de Jakub Kulik em :gh:`113119`.)"

#: ../../whatsnew/3.13.rst:1067
msgid ""
":func:`~os.posix_spawn` can now use the :attr:`~os.POSIX_SPAWN_CLOSEFROM` "
"attribute in the *file_actions* parameter on platforms that support :c:func:"
"`!posix_spawn_file_actions_addclosefrom_np`. (Contributed by Jakub Kulik in :"
"gh:`113117`.)"
msgstr ""
":func:`~os.posix_spawn` agora pode usar o atributo :attr:`~os."
"POSIX_SPAWN_CLOSEFROM` no parâmetro *file_actions* em plataformas que "
"oferecem suporte a :c:func:`!posix_spawn_file_actions_addclosefrom_np`. "
"(Contribuição de Jakub Kulik em :gh:`113117`.)"

#: ../../whatsnew/3.13.rst:1074
msgid "os.path"
msgstr "os.path"

#: ../../whatsnew/3.13.rst:1076
msgid ""
"Add :func:`~os.path.isreserved` to check if a path is reserved on the "
"current system. This function is only available on Windows. (Contributed by "
"Barney Gale in :gh:`88569`.)"
msgstr ""
"Adiciona :func:`~os.path.isreserved` para verificar se um caminho está "
"reservado no sistema atual. Esta função está disponível apenas no Windows. "
"(Contribuição de Barney Gale em :gh:`88569`.)"

#: ../../whatsnew/3.13.rst:1081
msgid ""
"On Windows, :func:`~os.path.isabs` no longer considers paths starting with "
"exactly one slash (``\\`` or ``/``) to be absolute. (Contributed by Barney "
"Gale and Jon Foster in :gh:`44626`.)"
msgstr ""
"No Windows, :func:`~os.path.isabs` não considera mais caminhos que começam "
"com exatamente uma barra (``\\`` ou ``/``) como absolutos. (Contribuição de "
"Barney Gale e Jon Foster em :gh:`44626`.)"

#: ../../whatsnew/3.13.rst:1085
msgid ""
":func:`~os.path.realpath` now resolves MS-DOS style file names even if the "
"file is not accessible. (Contributed by Moonsik Park in :gh:`82367`.)"
msgstr ""
":func:`~os.path.realpath` agora resolve nomes de arquivos no estilo MS-DOS, "
"mesmo que o arquivo não esteja acessível. (Contribuição de Moonsik Park em :"
"gh:`82367`.)"

#: ../../whatsnew/3.13.rst:1091 ../../whatsnew/3.13.rst:1652
msgid "pathlib"
msgstr "pathlib"

#: ../../whatsnew/3.13.rst:1093
msgid ""
"Add :exc:`~pathlib.UnsupportedOperation`, which is raised instead of :exc:"
"`NotImplementedError` when a path operation isn't supported. (Contributed by "
"Barney Gale in :gh:`89812`.)"
msgstr ""
"Adiciona :exc:`~pathlib.UnsupportedOperation`, que é levantada em vez de :"
"exc:`NotImplementedError` quando uma operação de caminho não é possível. "
"(Contribuição de Barney Gale em :gh:`89812`.)"

#: ../../whatsnew/3.13.rst:1097
msgid ""
"Add a new constructor for creating :class:`~pathlib.Path` objects from "
"'file' URIs (``file:///``), :meth:`.Path.from_uri`. (Contributed by Barney "
"Gale in :gh:`107465`.)"
msgstr ""
"Adiciona um novo construtor para criar objetos :class:`~pathlib.Path` a "
"partir de URIs 'file' (``file:///``), :meth:`.Path.from_uri`. (Contribuição "
"de Barney Gale em :gh:`107465`.)"

#: ../../whatsnew/3.13.rst:1101
msgid ""
"Add :meth:`.PurePath.full_match` for matching paths with shell-style "
"wildcards, including the recursive wildcard \"``**``\". (Contributed by "
"Barney Gale in :gh:`73435`.)"
msgstr ""
"Adiciona :meth:`.PurePath.full_match` para corresponder caminhos com "
"curingas do tipo shell, incluindo o curinga recursivo \"``**``\". "
"(Contribuição de Barney Gale em :gh:`73435`.)"

#: ../../whatsnew/3.13.rst:1105
msgid ""
"Add the :attr:`.PurePath.parser` class attribute to store the implementation "
"of :mod:`os.path` used for low-level path parsing and joining. This will be "
"either :mod:`!posixpath` or :mod:`!ntpath`."
msgstr ""
"Adiciona o atributo de classe :attr:`.PurePath.parser` para armazenar a "
"implementação de :mod:`os.path` usada para análise e junção de caminhos de "
"baixo nível. Isso vai ser :mod:`!posixpath` ou :mod:`!ntpath`."

#: ../../whatsnew/3.13.rst:1110
msgid ""
"Add *recurse_symlinks* keyword-only argument to :meth:`.Path.glob` and :meth:"
"`~pathlib.Path.rglob`. (Contributed by Barney Gale in :gh:`77609`.)"
msgstr ""
"Adiciona o argumento somente-nomeado *recurse_symlinks* a :meth:`.Path.glob` "
"e :meth:`~pathlib.Path.rglob`. (Contribuição de Barney Gale em :gh:`77609`.)"

#: ../../whatsnew/3.13.rst:1114
msgid ""
":meth:`.Path.glob` and :meth:`~pathlib.Path.rglob` now return files and "
"directories when given a pattern that ends with \"``**``\". Previously, only "
"directories were returned. (Contributed by Barney Gale in :gh:`70303`.)"
msgstr ""
":meth:`.Path.glob` e :meth:`~pathlib.Path.rglob` agora retornam arquivos e "
"diretórios quando recebem um padrão que termina com \"``**``\". "
"Anteriormente, apenas os diretórios eram retornados. (Contribuição de Barney "
"Gale em :gh:`70303`.)"

#: ../../whatsnew/3.13.rst:1119
msgid ""
"Add the *follow_symlinks* keyword-only argument to :meth:`Path.is_file "
"<pathlib.Path.is_file>`, :meth:`Path.is_dir <pathlib.Path.is_dir>`, :meth:`."
"Path.owner`, and :meth:`.Path.group`. (Contributed by Barney Gale in :gh:"
"`105793` and Kamil Turek in :gh:`107962`.)"
msgstr ""
"Adiciona o argumento somente-nomeado *follow_symlinks* a :meth:`Path.is_file "
"<pathlib.Path.is_file>`, :meth:`Path.is_dir <pathlib.Path.is_dir>`, :meth:`."
"Path.owner` e :meth:`.Path.group`. (Contribuição de Barney Gale em :gh:"
"`105793` e Kamil Turek em :gh:`107962`.)"

#: ../../whatsnew/3.13.rst:1127
msgid "pdb"
msgstr "pdb"

#: ../../whatsnew/3.13.rst:1129
msgid ""
":func:`breakpoint` and :func:`~pdb.set_trace` now enter the debugger "
"immediately rather than on the next line of code to be executed. This change "
"prevents the debugger from breaking outside of the context when :func:`!"
"breakpoint` is positioned at the end of the context. (Contributed by Tian "
"Gao in :gh:`118579`.)"
msgstr ""
":func:`breakpoint` e :func:`~pdb.set_trace` agora entram no depurador "
"imediatamente em vez de na próxima linha de código a ser executada. Esta "
"mudança evita que o depurador quebre fora do contexto quando :func:`!"
"breakpoint` estiver posicionado no final do contexto. (Contribuição de Tian "
"Gao em :gh:`118579`.)"

#: ../../whatsnew/3.13.rst:1135
msgid ""
"``sys.path[0]`` is no longer replaced by the directory of the script being "
"debugged when :attr:`sys.flags.safe_path` is set. (Contributed by Tian Gao "
"and Christian Walther in :gh:`111762`.)"
msgstr ""
"``sys.path[0]`` não mais é substituído pelo diretório do script que está "
"sendo depurado quando :attr:`sys.flags.safe_path` está definido."
"(Contribuição de Tian Gao e Christian Walther em :gh:`111762`.)"

#: ../../whatsnew/3.13.rst:1139
msgid ""
":mod:`zipapp` is now supported as a debugging target. (Contributed by Tian "
"Gao in :gh:`118501`.)"
msgstr ""
":mod:`zipapp` agora é suportado como alvo de depuração. (Contribuição de "
"Tian Gao em :gh:`118501`.)"

#: ../../whatsnew/3.13.rst:1142
msgid ""
"Add ability to move between chained exceptions during post-mortem debugging "
"in :func:`~pdb.pm` using the new :pdbcmd:`exceptions [exc_number] "
"<exceptions>` command for Pdb. (Contributed by Matthias Bussonnier in :gh:"
"`106676`.)"
msgstr ""
"Adiciona a capacidade de mover entre exceções encadeadas durante a depuração "
"post-mortem em :func:`~pdb.pm` usando o novo comando :pdbcmd:`exceptions "
"[número_exc] <exceptions>` para Pdb. (Contribuição de Matthias Bussonnier "
"em :gh:`106676`.)"

#: ../../whatsnew/3.13.rst:1147
msgid ""
"Expressions and statements whose prefix is a pdb command are now correctly "
"identified and executed. (Contributed by Tian Gao in :gh:`108464`.)"
msgstr ""
"Expressões e instruções cujo prefixo é um comando pdb agora são "
"identificadas e executadas corretamente. (Contribuição de Tian Gao em :gh:"
"`108464`.)"

#: ../../whatsnew/3.13.rst:1153
msgid "queue"
msgstr "queue"

#: ../../whatsnew/3.13.rst:1155
msgid ""
"Add :meth:`Queue.shutdown <queue.Queue.shutdown>` and :exc:`~queue.ShutDown` "
"to manage queue termination. (Contributed by Laurie Opperman and Yves Duprat "
"in :gh:`104750`.)"
msgstr ""
"Adiciona :meth:`Queue.shutdown <queue.Queue.shutdown>` e :exc:`~queue."
"ShutDown` para gerenciar a terminação da fila. (Contribuição de Laurie "
"Opperman e Yves Duprat em :gh:`104750`.)"

#: ../../whatsnew/3.13.rst:1161
msgid "random"
msgstr "random"

#: ../../whatsnew/3.13.rst:1163
msgid ""
"Add a :ref:`command-line interface <random-cli>`. (Contributed by Hugo van "
"Kemenade in :gh:`118131`.)"
msgstr ""
"Adiciona uma :ref:`interface de linha de comando <random-cli>`. "
"(Contribuição de Hugo van Kemenade em :gh:`118131`.)"

#: ../../whatsnew/3.13.rst:1168 ../../whatsnew/3.13.rst:1660
msgid "re"
msgstr "re"

#: ../../whatsnew/3.13.rst:1170
msgid ""
"Rename :exc:`!re.error` to :exc:`~re.PatternError` for improved clarity. :"
"exc:`!re.error` is kept for backward compatibility."
msgstr ""
"Renomeia :exc:`!re.error` para :exc:`~re.PatternError` para maior clareza. :"
"exc:`!re.error` é mantido para compatibilidade com versões anteriores."

#: ../../whatsnew/3.13.rst:1175
msgid "shutil"
msgstr "shutil"

#: ../../whatsnew/3.13.rst:1177
msgid ""
"Support the *dir_fd* and *follow_symlinks* keyword arguments in :func:"
"`~shutil.chown`. (Contributed by Berker Peksag and Tahia K in :gh:`62308`)"
msgstr ""
"Suporte aos argumentos nomeados *dir_fd* e *follow_symlinks* em :func:"
"`~shutil.chown`. (Contribuição de Berker Peksag e Tahia K em :gh:`62308`)"

#: ../../whatsnew/3.13.rst:1183
msgid "site"
msgstr "site"

#: ../../whatsnew/3.13.rst:1185
msgid ""
":file:`.pth` files are now decoded using UTF-8 first, and then with the :"
"term:`locale encoding` if UTF-8 decoding fails. (Contributed by Inada Naoki "
"in :gh:`117802`.)"
msgstr ""
"Os arquivos :file:`.pth` agora são decodificados primeiro usando UTF-8 e "
"depois usando :term:`codificação da localidade` se a decodificação UTF-8 "
"falhar. (Contribuição de Inada Naoki em :gh:`117802`.)"

#: ../../whatsnew/3.13.rst:1191
msgid "sqlite3"
msgstr "sqlite3"

#: ../../whatsnew/3.13.rst:1193
msgid ""
"A :exc:`ResourceWarning` is now emitted if a :class:`~sqlite3.Connection` "
"object is not :meth:`closed <sqlite3.Connection.close>` explicitly. "
"(Contributed by Erlend E. Aasland in :gh:`105539`.)"
msgstr ""
"Uma :exc:`ResourceWarning` agora é emitida se um objeto :class:`~sqlite3."
"Connection` não for explicitamente :meth:`fechado <sqlite3.Connection."
"close>`. (Contribuição de Erlend E. Aasland em :gh:`105539`.)"

#: ../../whatsnew/3.13.rst:1197
msgid ""
"Add the *filter* keyword-only parameter to :meth:`.Connection.iterdump` for "
"filtering database objects to dump. (Contributed by Mariusz Felisiak in :gh:"
"`91602`.)"
msgstr ""
"Adiciona o parâmetro somente-nomeado *filter* a :meth:`.Connection.iterdump` "
"para filtrar objetos de banco de dados para despejo. (Contribuição de "
"Mariusz Felisiak em :gh:`91602`.)"

#: ../../whatsnew/3.13.rst:1203
msgid "ssl"
msgstr "ssl"

#: ../../whatsnew/3.13.rst:1205
msgid ""
"The :func:`~ssl.create_default_context` API now includes :data:`~ssl."
"VERIFY_X509_PARTIAL_CHAIN` and :data:`~ssl.VERIFY_X509_STRICT` in its "
"default flags."
msgstr ""
"A API :func:`~ssl.create_default_context` agora inclui :data:`~ssl."
"VERIFY_X509_PARTIAL_CHAIN` e :data:`~ssl.VERIFY_X509_STRICT` em seus "
"sinalizadores padrão."

#: ../../whatsnew/3.13.rst:1211
msgid ""
":data:`~ssl.VERIFY_X509_STRICT` may reject pre-:rfc:`5280` or malformed "
"certificates that the underlying OpenSSL implementation might otherwise "
"accept. Whilst disabling this is not recommended, you can do so using:"
msgstr ""
":data:`~ssl.VERIFY_X509_STRICT` pode rejeitar certificados pré-:rfc:`5280` "
"ou malformados que a implementação OpenSSL subjacente poderia aceitar. "
"Embora não seja recomendado desativar isso, você pode fazer isso usando::"

#: ../../whatsnew/3.13.rst:1216
msgid ""
"import ssl\n"
"\n"
"ctx = ssl.create_default_context()\n"
"ctx.verify_flags &= ~ssl.VERIFY_X509_STRICT"
msgstr ""
"import ssl\n"
"\n"
"ctx = ssl.create_default_context()\n"
"ctx.verify_flags &= ~ssl.VERIFY_X509_STRICT"

#: ../../whatsnew/3.13.rst:1223
msgid "(Contributed by William Woodruff in :gh:`112389`.)"
msgstr "(Contribuição de William Woodruff em :gh:`112389`.)"

#: ../../whatsnew/3.13.rst:1227
msgid "statistics"
msgstr "statistics"

#: ../../whatsnew/3.13.rst:1229
msgid ""
"Add :func:`~statistics.kde` for kernel density estimation. This makes it "
"possible to estimate a continuous probability density function from a fixed "
"number of discrete samples. (Contributed by Raymond Hettinger in :gh:"
"`115863`.)"
msgstr ""
"Adiciona :func:`~statistics.kde` para estimativa de densidade do núcleo. "
"Isto torna possível estimar uma função de densidade de probabilidade "
"contínua a partir de um número fixo de amostras discretas. (Contribuição de "
"Raymond Hettinger em :gh:`115863`.)"

#: ../../whatsnew/3.13.rst:1234
msgid ""
"Add :func:`~statistics.kde_random` for sampling from an estimated "
"probability density function created by :func:`~statistics.kde`. "
"(Contributed by Raymond Hettinger in :gh:`115863`.)"
msgstr ""
"Adiciona :func:`~statistics.kde_random` para amostragem de uma função de "
"densidade de probabilidade estimada criada por :func:`~statistics.kde`. "
"(Contribuição de Raymond Hettinger em :gh:`115863`.)"

#: ../../whatsnew/3.13.rst:1242
msgid "subprocess"
msgstr "subprocess"

#: ../../whatsnew/3.13.rst:1244
msgid ""
"The :mod:`subprocess` module now uses the :func:`~os.posix_spawn` function "
"in more situations."
msgstr ""
"O módulo :mod:`subprocess` agora usa a função :func:`~os.posix_spawn` em "
"mais situações."

#: ../../whatsnew/3.13.rst:1247
msgid ""
"Notably, when *close_fds* is ``True`` (the default), :func:`~os.posix_spawn` "
"will be used when the C library provides :c:func:`!"
"posix_spawn_file_actions_addclosefrom_np`, which includes recent versions of "
"Linux, FreeBSD, and Solaris. On Linux, this should perform similarly to the "
"existing Linux :c:func:`!vfork` based code."
msgstr ""
"Notavelmente, quando *close_fds* é ``True`` (o padrão), :func:`~os."
"posix_spawn` será usado quando a biblioteca C fornecer :c:func:`!"
"posix_spawn_file_actions_addclosefrom_np`, que inclui versões recentes do "
"Linux, FreeBSD e Solaris. No Linux, isso deve ter um desempenho semelhante "
"ao código existente baseado em :c:func:`!vfork` do Linux."

#: ../../whatsnew/3.13.rst:1254
msgid ""
"A private control knob :attr:`!subprocess._USE_POSIX_SPAWN` can be set to "
"``False`` if you need to force :mod:`subprocess` to never use :func:`~os."
"posix_spawn`. Please report your reason and platform details in the :ref:"
"`issue tracker <using-the-tracker>` if you set this so that we can improve "
"our API selection logic for everyone. (Contributed by Jakub Kulik in :gh:"
"`113117`.)"
msgstr ""
"Um botão de controle privado :attr:`!subprocess._USE_POSIX_SPAWN` pode ser "
"definido como ``False`` se você precisar forçar :mod:`subprocess` a nunca "
"usar :func:`~os.posix_spawn`. Por favor, informe o motivo e os detalhes da "
"plataforma no :ref:`rastreador de problemas <using-the-tracker>` se você "
"definir isso para que possamos melhorar nossa lógica de seleção de API para "
"todos. (Contribuído por Jakub Kulik em :gh:`113117`.)"

#: ../../whatsnew/3.13.rst:1264
msgid "sys"
msgstr "sys"

#: ../../whatsnew/3.13.rst:1266
msgid ""
"Add the :func:`~sys._is_interned` function to test if a string was interned. "
"This function is not guaranteed to exist in all implementations of Python. "
"(Contributed by Serhiy Storchaka in :gh:`78573`.)"
msgstr ""
"Adiciona a função :func:`~sys._is_interned` para testar se uma string foi "
"internada. Não há garantia de que esta função exista em todas as "
"implementações do Python. (Contribuição de Serhiy Storchaka em :gh:`78573`.)"

#: ../../whatsnew/3.13.rst:1272
msgid "tempfile"
msgstr "tempfile"

#: ../../whatsnew/3.13.rst:1274
msgid ""
"On Windows, the default mode ``0o700`` used by :func:`tempfile.mkdtemp` now "
"limits access to the new directory due to changes to :func:`os.mkdir`. This "
"is a mitigation for :cve:`2024-4030`. (Contributed by Steve Dower in :gh:"
"`118486`.)"
msgstr ""
"No Windows, o modo padrão ``0o700`` usado por :func:`tempfile.mkdtemp` agora "
"limita o acesso ao novo diretório devido a alterações em :func:`os.mkdir`. "
"Esta é uma mitigação para :cve:`2024-4030`. (Contribuição de Steve Dower em :"
"gh:`118486`.)"

#: ../../whatsnew/3.13.rst:1281
msgid "time"
msgstr "time"

#: ../../whatsnew/3.13.rst:1283
msgid ""
"On Windows, :func:`~time.monotonic` now uses the "
"``QueryPerformanceCounter()`` clock for a resolution of 1 microsecond, "
"instead of the ``GetTickCount64()`` clock which has a resolution of 15.6 "
"milliseconds. (Contributed by Victor Stinner in :gh:`88494`.)"
msgstr ""
"No Windows, :func:`~time.monotonic` agora usa o relógio "
"``QueryPerformanceCounter()`` para uma resolução de 1 microssegundo, em vez "
"do relógio ``GetTickCount64()`` que tem uma resolução de 15.6 milissegundos. "
"(Contribuição de Victor Stinner em :gh:`88494`.)"

#: ../../whatsnew/3.13.rst:1289
msgid ""
"On Windows, :func:`~time.time` now uses the "
"``GetSystemTimePreciseAsFileTime()`` clock for a resolution of 1 "
"microsecond, instead of the ``GetSystemTimeAsFileTime()`` clock which has a "
"resolution of 15.6 milliseconds. (Contributed by Victor Stinner in :gh:"
"`63207`.)"
msgstr ""
"No Windows, :func:`~time.time` agora usa o relógio "
"``GetSystemTimePreciseAsFileTime()`` para uma resolução de 1 microssegundo, "
"em vez do relógio ``GetSystemTimeAsFileTime()`` que tem uma resolução de "
"15.6 milissegundos. (Contribuição de Victor Stinner em :gh:`63207`.)"

#: ../../whatsnew/3.13.rst:1297
msgid "tkinter"
msgstr "tkinter"

#: ../../whatsnew/3.13.rst:1299
msgid ""
"Add :mod:`tkinter` widget methods: :meth:`!tk_busy_hold`, :meth:`!"
"tk_busy_configure`, :meth:`!tk_busy_cget`, :meth:`!tk_busy_forget`, :meth:`!"
"tk_busy_current`, and :meth:`!tk_busy_status`. (Contributed by Miguel, "
"klappnase and Serhiy Storchaka in :gh:`72684`.)"
msgstr ""
"Adiciona métodos de widget :mod:`tkinter`: :meth:`!tk_busy_hold`, :meth:`!"
"tk_busy_configure`, :meth:`!tk_busy_cget`, :meth:`!tk_busy_forget`, :meth:`!"
"tk_busy_current` e :meth:`!tk_busy_status`. (Contribuição de Miguel, "
"klappnase e Serhiy Storchaka em :gh:`72684`.)"

#: ../../whatsnew/3.13.rst:1305
msgid ""
"The :mod:`tkinter` widget method :meth:`!wm_attributes` now accepts the "
"attribute name without the minus prefix to get window attributes, for "
"example ``w.wm_attributes('alpha')`` and allows specifying attributes and "
"values to set as keyword arguments, for example ``w."
"wm_attributes(alpha=0.5)``. (Contributed by Serhiy Storchaka in :gh:`43457`.)"
msgstr ""
"O método :meth:`!wm_attributes` de widget :mod:`tkinter` agora aceita o nome "
"do atributo sem o prefixo negativo para obter atributos de janela (por "
"exemplo, ``w.wm_attributes('alpha')``) e permite especificar atributos e "
"valores para definir como argumentos nomeados (por exemplo, ``w."
"wm_attributes(alpha=0.5)``). (Contribuição de Serhiy Storchaka em :gh:"
"`43457`.)"

#: ../../whatsnew/3.13.rst:1312
msgid ""
":meth:`!wm_attributes` can now return attributes as a :class:`dict`, by "
"using the new optional keyword-only parameter *return_python_dict*. "
"(Contributed by Serhiy Storchaka in :gh:`43457`.)"
msgstr ""
":meth:`!wm_attributes` agora pode retornar atributos como um :class:`dict`, "
"usando o novo parâmetro somente-nomeado opcional *return_python_dict*. "
"(Contribuição de Serhiy Storchaka em :gh:`43457`.)"

#: ../../whatsnew/3.13.rst:1316
msgid ""
":meth:`!Text.count` can now return a simple :class:`int` when the new "
"optional keyword-only parameter *return_ints* is used. Otherwise, the single "
"count is returned as a 1-tuple or ``None``. (Contributed by Serhiy Storchaka "
"in :gh:`97928`.)"
msgstr ""
":meth:`!Text.count` agora pode retornar um :class:`int` simples quando o "
"novo parâmetro somente-nomeado opcional *return_ints* é usado. Caso "
"contrário, a contagem única é retornada como uma tupla de 1 elemento ou "
"``None``. (Contribuição de Serhiy Storchaka em :gh:`97928`.)"

#: ../../whatsnew/3.13.rst:1321
msgid ""
"Support the \"vsapi\" element type in the :meth:`~tkinter.ttk.Style."
"element_create` method of :class:`tkinter.ttk.Style`. (Contributed by Serhiy "
"Storchaka in :gh:`68166`.)"
msgstr ""
"Suporte ao tipo de elemento \"vsapi\" no método :meth:`~tkinter.ttk.Style."
"element_create` de :class:`tkinter.ttk.Style`. (Contribuição de Serhiy "
"Storchaka em :gh:`68166`.)"

#: ../../whatsnew/3.13.rst:1326
msgid ""
"Add the :meth:`!after_info` method for Tkinter widgets. (Contributed by "
"Cheryl Sabella in :gh:`77020`.)"
msgstr ""
"Adiciona o método :meth:`!after_info` para widgets do Tkinter. (Contribuição "
"de Cheryl Sabella em :gh:`77020`.)"

#: ../../whatsnew/3.13.rst:1329
msgid ""
"Add a new :meth:`!copy_replace` method to :class:`!PhotoImage` to copy a "
"region from one image to another, possibly with pixel zooming, subsampling, "
"or both. (Contributed by Serhiy Storchaka in :gh:`118225`.)"
msgstr ""
"Adiciona um novo método :meth:`!copy_replace` a :class:`!PhotoImage` para "
"copiar uma região de uma imagem para outra, possivelmente com zoom de pixel, "
"subamostragem ou ambos. (Contribuição de Serhiy Storchaka em :gh:`118225`.)"

#: ../../whatsnew/3.13.rst:1334
msgid ""
"Add *from_coords* parameter to the :class:`!PhotoImage` methods :meth:`!"
"copy`, :meth:`!zoom` and :meth:`!subsample`. Add *zoom* and *subsample* "
"parameters to the :class:`!PhotoImage` method :meth:`!copy`. (Contributed by "
"Serhiy Storchaka in :gh:`118225`.)"
msgstr ""
"Adiciona parâmetro *from_coords* para os métodos :meth:`!copy`, :meth:`!"
"zoom` e :meth:`!subsample` da classe :class:`!PhotoImage`. Adiciona "
"parâmetros *zoom* e *subsample* para o método :meth:`!copy` da classe :class:"
"`!PhotoImage`. (Contribuição de Serhiy Storchaka em :gh:`118225`.)"

#: ../../whatsnew/3.13.rst:1340
msgid ""
"Add the :class:`!PhotoImage` methods :meth:`!read` to read an image from a "
"file and :meth:`!data` to get the image data. Add *background* and "
"*grayscale* parameters to the :meth:`!write` method. (Contributed by Serhiy "
"Storchaka in :gh:`118271`.)"
msgstr ""
"Adiciona os métodos :class:`!PhotoImage` :meth:`!read` para ler uma imagem "
"de um arquivo e :meth:`!data` para obter os dados da imagem. Adiciona os "
"parâmetros *background* e *grayscale* ao método :meth:`!write`. "
"(Contribuição de Serhiy Storchaka em :gh:`118271`.)"

#: ../../whatsnew/3.13.rst:1348
msgid "traceback"
msgstr "traceback"

#: ../../whatsnew/3.13.rst:1350
msgid ""
"Add the :attr:`~traceback.TracebackException.exc_type_str` attribute to :"
"class:`~traceback.TracebackException`, which holds a string display of the "
"*exc_type*. Deprecate the :attr:`~traceback.TracebackException.exc_type` "
"attribute, which holds the type object itself. Add parameter *save_exc_type* "
"(default ``True``) to indicate whether ``exc_type`` should be saved. "
"(Contributed by Irit Katriel in :gh:`112332`.)"
msgstr ""
"Adiciona o atributo :attr:`~traceback.TracebackException.exc_type_str` a :"
"class:`~traceback.TracebackException`, que contém uma exibição de string do "
"*exc_type*. Descontinua o atributo :attr:`~traceback.TracebackException."
"exc_type`, que contém o próprio objeto de tipo. Adicione o parâmetro "
"*save_exc_type* (padrão ``True``) para indicar se ``exc_type`` deve ser "
"salvo. (Contribuição de Irit Katriel em :gh:`112332`.)"

#: ../../whatsnew/3.13.rst:1359
msgid ""
"Add a new *show_group* keyword-only parameter to :meth:`.TracebackException."
"format_exception_only` to (recursively) format the nested exceptions of a :"
"exc:`BaseExceptionGroup` instance. (Contributed by Irit Katriel in :gh:"
"`105292`.)"
msgstr ""
"Adiciona um novo parâmetro somente-nomeado *show_group* a :meth:`."
"TracebackException.format_exception_only` para formatar (recursivamente) as "
"exceções aninhadas de uma instância :exc:`BaseExceptionGroup`. (Contribuição "
"de Irit Katriel em :gh:`105292`.)"

#: ../../whatsnew/3.13.rst:1366
msgid "types"
msgstr "types"

#: ../../whatsnew/3.13.rst:1368
msgid ""
":class:`~types.SimpleNamespace` can now take a single positional argument to "
"initialise the namespace's arguments. This argument must either be a mapping "
"or an iterable of key-value pairs. (Contributed by Serhiy Storchaka in :gh:"
"`108191`.)"
msgstr ""
":class:`~types.SimpleNamespace` agora pode receber um único argumento "
"posicional para inicializar os argumentos do espaço de nomes. Este argumento "
"deve ser um mapeamento ou um iterável de pares chave-valor. (Contribuição de "
"Serhiy Storchaka em :gh:`108191`.)"

#: ../../whatsnew/3.13.rst:1375 ../../whatsnew/3.13.rst:1685
msgid "typing"
msgstr "typing"

#: ../../whatsnew/3.13.rst:1377
msgid ""
":pep:`705`: Add :data:`~typing.ReadOnly`, a special typing construct to mark "
"a :class:`~typing.TypedDict` item as read-only for type checkers."
msgstr ""
":pep:`705`: adiciona :data:`~typing.ReadOnly`, uma construção especial de "
"tipagem para marcar um item :class:`~typing.TypedDict` como somente leitura "
"para verificadores de tipo."

#: ../../whatsnew/3.13.rst:1380
msgid ""
":pep:`742`: Add :data:`~typing.TypeIs`, a typing construct that can be used "
"to instruct a type checker how to narrow a type."
msgstr ""
":pep:`742`: adiciona :data:`~typing.TypeIs`, uma construção de tipagem que "
"pode ser usada para instruir um verificador de tipos sobre como restringir "
"um tipo."

#: ../../whatsnew/3.13.rst:1383
msgid ""
"Add :data:`~typing.NoDefault`, a sentinel object used to represent the "
"defaults of some parameters in the :mod:`typing` module. (Contributed by "
"Jelle Zijlstra in :gh:`116126`.)"
msgstr ""
"Adiciona :data:`~typing.NoDefault`, um objeto sinalizador usado para "
"representar os padrões de alguns parâmetros no módulo :mod:`typing`. "
"(Contribuição de Jelle Zijlstra em :gh:`116126`.)"

#: ../../whatsnew/3.13.rst:1387
msgid ""
"Add :func:`~typing.get_protocol_members` to return the set of members "
"defining a :class:`typing.Protocol`. (Contributed by Jelle Zijlstra in :gh:"
"`104873`.)"
msgstr ""
"Adicione :func:`~typing.get_protocol_members` para retornar o conjunto de "
"membros que definem uma :class:`typing.Protocol`. (Contribuição de Jelle "
"Zijlstra em :gh:`104873`.)"

#: ../../whatsnew/3.13.rst:1391
msgid ""
"Add :func:`~typing.is_protocol` to check whether a class is a :class:"
"`~typing.Protocol`. (Contributed by Jelle Zijlstra in :gh:`104873`.)"
msgstr ""
"Adiciona :func:`~typing.is_protocol` para verificar se uma classe é uma :"
"class:`~typing.Protocol`. (Contribuição de Jelle Zijlstra em :gh:`104873`.)"

#: ../../whatsnew/3.13.rst:1395
msgid ""
":data:`~typing.ClassVar` can now be nested in :data:`~typing.Final`, and "
"vice versa. (Contributed by Mehdi Drissi in :gh:`89547`.)"
msgstr ""
":data:`~typing.ClassVar` agora pode ser aninhado em :data:`~typing.Final`, e "
"vice-versa. (Contribuição de Mehdi Drissi em :gh:`89547`.)"

#: ../../whatsnew/3.13.rst:1401
msgid "unicodedata"
msgstr "unicodedata"

#: ../../whatsnew/3.13.rst:1403
msgid ""
"Update the Unicode database to `version 15.1.0`__. (Contributed by James "
"Gerity in :gh:`109559`.)"
msgstr ""
"Atualiza o banco de dados Unicode para a `versão 15.1.0`__. (Contribuição de "
"James Gerity em :gh:`109559`.)"

#: ../../whatsnew/3.13.rst:1410
msgid "venv"
msgstr "venv"

#: ../../whatsnew/3.13.rst:1412
msgid ""
"Add support for creating source control management (SCM) ignore files in a "
"virtual environment's directory. By default, Git is supported. This is "
"implemented as opt-in via the API, which can be extended to support other "
"SCMs (:class:`~venv.EnvBuilder` and :func:`~venv.create`), and opt-out via "
"the CLI, using :option:`!--without-scm-ignore-files`. (Contributed by Brett "
"Cannon in :gh:`108125`.)"
msgstr ""
"Adiciona suporte para criar arquivos ignorados pelo gerenciamento de "
"controle de fontes (SCM) no diretório de um ambiente virtual. Por padrão, o "
"Git é compatível. Isso está implementado como ativado por padrão por meio da "
"API, que pode ser estendido para oferecer suporte a outros SCMs (:class:"
"`~venv.EnvBuilder` e :func:`~venv.create`) e desativado por padrão por meio "
"da CLI, usando :option:`!--without-scm-ignore-files`. (Contribuição de Brett "
"Cannon em :gh:`108125`.)"

#: ../../whatsnew/3.13.rst:1423
msgid "warnings"
msgstr "warnings"

#: ../../whatsnew/3.13.rst:1425
msgid ""
":pep:`702`: The new :func:`warnings.deprecated` decorator provides a way to "
"communicate deprecations to a :term:`static type checker` and to warn on "
"usage of deprecated classes and functions. A :exc:`DeprecationWarning` may "
"also be emitted when a decorated function or class is used at runtime. "
"(Contributed by Jelle Zijlstra in :gh:`104003`.)"
msgstr ""
":pep:`702`: O novo decorador :func:`warnings.deprecated` fornece uma maneira "
"de comunicar descontinuações para um :term:`verificador de tipo estático` e "
"avisar sobre o uso de classes e funções obsoletas. Um :exc:"
"`DeprecationWarning` também pode ser emitido quando uma função ou classe "
"decorada é usada em tempo de execução. (Contribuição de Jelle Zijlstra em :"
"gh:`104003`.)"

#: ../../whatsnew/3.13.rst:1434
msgid "xml"
msgstr "xml"

#: ../../whatsnew/3.13.rst:1436
msgid ""
"Allow controlling Expat >=2.6.0 reparse deferral (:cve:`2023-52425`) by "
"adding five new methods:"
msgstr ""
"Permite controlar o adiamento da nova análise do Expat >=2.6.0 (:cve:"
"`2023-52425`) adicionando cinco novos métodos:"

#: ../../whatsnew/3.13.rst:1439
msgid ":meth:`xml.etree.ElementTree.XMLParser.flush`"
msgstr ":meth:`xml.etree.ElementTree.XMLParser.flush`"

#: ../../whatsnew/3.13.rst:1440
msgid ":meth:`xml.etree.ElementTree.XMLPullParser.flush`"
msgstr ":meth:`xml.etree.ElementTree.XMLPullParser.flush`"

#: ../../whatsnew/3.13.rst:1441
msgid ":meth:`xml.parsers.expat.xmlparser.GetReparseDeferralEnabled`"
msgstr ":meth:`xml.parsers.expat.xmlparser.GetReparseDeferralEnabled`"

#: ../../whatsnew/3.13.rst:1442
msgid ":meth:`xml.parsers.expat.xmlparser.SetReparseDeferralEnabled`"
msgstr ":meth:`xml.parsers.expat.xmlparser.SetReparseDeferralEnabled`"

#: ../../whatsnew/3.13.rst:1443
msgid ":meth:`!xml.sax.expatreader.ExpatParser.flush`"
msgstr ":meth:`!xml.sax.expatreader.ExpatParser.flush`"

#: ../../whatsnew/3.13.rst:1445
msgid "(Contributed by Sebastian Pipping in :gh:`115623`.)"
msgstr "(Contribuição de Sebastian Pipping em :gh:`115623`.)"

#: ../../whatsnew/3.13.rst:1447
msgid ""
"Add the :meth:`!close` method for the iterator returned by :func:`~xml.etree."
"ElementTree.iterparse` for explicit cleanup. (Contributed by Serhiy "
"Storchaka in :gh:`69893`.)"
msgstr ""
"Adiciona o método :meth:`!close` para o iterador retornado por :func:`~xml."
"etree.ElementTree.iterparse` para limpeza explícita. (Contribuição de Serhiy "
"Storchaka em :gh:`69893`.)"

#: ../../whatsnew/3.13.rst:1453
msgid "zipimport"
msgstr "zipimport"

#: ../../whatsnew/3.13.rst:1455
msgid ""
"Add support for ZIP64_ format files. Everybody loves huge data, right? "
"(Contributed by Tim Hatch in :gh:`94146`.)"
msgstr ""
"Adiciona suporte para arquivos no formato ZIP64_. Todo mundo adora dados "
"enormes, certo? (Contribuição de Tim Hatch em :gh:`94146`.)"

#: ../../whatsnew/3.13.rst:1463
msgid "Optimizations"
msgstr "Otimizações"

#: ../../whatsnew/3.13.rst:1465
msgid ""
"Several standard library modules have had their import times significantly "
"improved. For example, the import time of the :mod:`typing` module has been "
"reduced by around a third by removing dependencies on :mod:`re` and :mod:"
"`contextlib`. Other modules to enjoy import-time speedups include :mod:"
"`email.utils`, :mod:`enum`, :mod:`functools`, :mod:`importlib.metadata`, "
"and :mod:`threading`. (Contributed by Alex Waygood, Shantanu Jain, Adam "
"Turner, Daniel Hollas, and others in :gh:`109653`.)"
msgstr ""
"Vários módulos de biblioteca padrão tiveram seus tempos de importação "
"significativamente melhorados. Por exemplo, o tempo de importação do módulo :"
"mod:`typing` foi reduzido em cerca de um terço pela remoção de dependências "
"em :mod:`re` e :mod:`contextlib`. Outros módulos para aproveitar a "
"aceleração no tempo de importação incluem :mod:`email.utils`, :mod:`enum`, :"
"mod:`functools`, :mod:`importlib.metadata` e :mod:`threading`. (Contribuição "
"de Alex Waygood, Shantanu Jain, Adam Turner, Daniel Hollas e outros em :gh:"
"`109653`.)"

#: ../../whatsnew/3.13.rst:1476
msgid ""
":func:`textwrap.indent` is now around 30% faster than before for large "
"input. (Contributed by Inada Naoki in :gh:`107369`.)"
msgstr ""
":func:`textwrap.indent` agora é cerca de 30% mais rápido do que antes para "
"entradas grandes. (Contribuição de Inada Naoki em :gh:`107369`.)"

#: ../../whatsnew/3.13.rst:1479
msgid ""
"The :mod:`subprocess` module now uses the :func:`~os.posix_spawn` function "
"in more situations, including when *close_fds* is ``True`` (the default) on "
"many modern platforms. This should provide a notable performance increase "
"when launching processes on FreeBSD and Solaris. See the :ref:`subprocess "
"<whatsnew313-subprocess>` section above for details. (Contributed by Jakub "
"Kulik in :gh:`113117`.)"
msgstr ""
"O módulo :mod:`subprocess` agora a função :func:`~os.posix_spawn` em mais "
"situações, incluindo quando *close_fds* é ``True`` (o padrão) em muitas "
"plataformas. Isto deve fornecer um aumento notável de desempenho ao iniciar "
"processos no FreeBSD e Solaris. Veja a seção de :ref:`subprocess "
"<whatsnew313-subprocess>` acima para detalhes. (Contribuição de Jakub Kulik "
"em :gh:`113117`.)"

#: ../../whatsnew/3.13.rst:1489
msgid "Removed Modules And APIs"
msgstr "Módulos e APIs removidas"

#: ../../whatsnew/3.13.rst:1495
msgid "PEP 594: Remove \"dead batteries\" from the standard library"
msgstr "PEP 594: remove \"baterias descarregadas\" da biblioteca padrão"

#: ../../whatsnew/3.13.rst:1497
msgid ""
":pep:`594` proposed removing 19 modules from the standard library, "
"colloquially referred to as 'dead batteries' due to their historic, "
"obsolete, or insecure status. All of the following modules were deprecated "
"in Python 3.11, and are now removed:"
msgstr ""
":pep:`594` propôs remover 19 módulos da biblioteca padrão, coloquialmente "
"chamados de \"baterias descarregadas\" devido ao seu status histórico, "
"obsoleto ou inseguro. Todos os módulos a seguir foram descontinuados no "
"Python 3.11 e agora foram removidos:"

#: ../../whatsnew/3.13.rst:1503
msgid ":mod:`!aifc`"
msgstr ":mod:`!aifc`"

#: ../../whatsnew/3.13.rst:1504
msgid ":mod:`!audioop`"
msgstr ":mod:`!audioop`"

#: ../../whatsnew/3.13.rst:1505
msgid ":mod:`!chunk`"
msgstr ":mod:`!chunk`"

#: ../../whatsnew/3.13.rst:1506
msgid ":mod:`!cgi` and :mod:`!cgitb`"
msgstr ":mod:`!cgi` e :mod:`!cgitb`"

#: ../../whatsnew/3.13.rst:1508
msgid ""
":class:`!cgi.FieldStorage` can typically be replaced with :func:`urllib."
"parse.parse_qsl` for ``GET`` and ``HEAD`` requests, and the :mod:`email."
"message` module or the :pypi:`multipart` library for ``POST`` and ``PUT`` "
"requests."
msgstr ""
":class:`!cgi.FieldStorage` normalmente pode ser substituído por :func:"
"`urllib.parse.parse_qsl` para solicitações ``GET`` e ``HEAD``, e o módulo :"
"mod:`email.message` ou a biblioteca :pypi:`multipart` para solicitações "
"``POST`` e ``PUT``."

#: ../../whatsnew/3.13.rst:1513
msgid ""
":func:`!cgi.parse` can be replaced by calling :func:`urllib.parse.parse_qs` "
"directly on the desired query string, unless the input is ``multipart/form-"
"data``, which should be replaced as described below for :func:`!cgi."
"parse_multipart`."
msgstr ""
":func:`!cgi.parse` pode ser substituído chamando :func:`urllib.parse."
"parse_qs` diretamente na string de consulta desejada, a menos que a entrada "
"seja ``multipart/form-data``, que deve ser substituída conforme descrito "
"abaixo para :func:`!cgi.parse_multipart`."

#: ../../whatsnew/3.13.rst:1518
msgid ""
":func:`!cgi.parse_header` can be replaced with the functionality in the :mod:"
"`email` package, which implements the same MIME RFCs. For example, with :"
"class:`email.message.EmailMessage`:"
msgstr ""
":func:`!cgi.parse_header` pode ser substituído pela funcionalidade do "
"pacote :mod:`email`, que implementa os mesmos RFCs MIME. Por exemplo, com :"
"class:`email.message.EmailMessage`::"

#: ../../whatsnew/3.13.rst:1522
msgid ""
"from email.message import EmailMessage\n"
"\n"
"msg = EmailMessage()\n"
"msg['content-type'] = 'application/json; charset=\"utf8\"'\n"
"main, params = msg.get_content_type(), msg['content-type'].params"
msgstr ""
"from email.message import EmailMessage\n"
"\n"
"msg = EmailMessage()\n"
"msg['content-type'] = 'application/json; charset=\"utf8\"'\n"
"main, params = msg.get_content_type(), msg['content-type'].params"

#: ../../whatsnew/3.13.rst:1530
msgid ""
":func:`!cgi.parse_multipart` can be replaced with the functionality in the :"
"mod:`email` package, which implements the same MIME RFCs, or with the :pypi:"
"`multipart` library. For example, the :class:`email.message.EmailMessage` "
"and :class:`email.message.Message` classes."
msgstr ""
":func:`!cgi.parse_multipart` pode ser substituído pela funcionalidade no "
"pacote :mod:`email`, que implementa os mesmos RFCs de MIME, ou pela "
"biblioteca :pypi:`multipart`. Por exemplo, as classes :class:`email.message."
"EmailMessage` e :class:`email.message.Message`."

#: ../../whatsnew/3.13.rst:1536
msgid ""
":mod:`!crypt` and the private :mod:`!_crypt` extension. The :mod:`hashlib` "
"module may be an appropriate replacement when simply hashing a value is "
"required. Otherwise, various third-party libraries on PyPI are available:"
msgstr ""
":mod:`!crypt` e a extensão privada :mod:`!_crypt`. O módulo :mod:`hashlib` "
"pode ser uma substituição apropriada quando simplesmente fazer hash de um "
"valor é necessário. Caso contrário, várias bibliotecas de terceiros no PyPI "
"estão disponíveis:"

#: ../../whatsnew/3.13.rst:1541
msgid ""
":pypi:`bcrypt`: Modern password hashing for your software and your servers."
msgstr ""
":pypi:`bcrypt`: hashing de senha moderno para seu software e servidores."

#: ../../whatsnew/3.13.rst:1543
msgid ""
":pypi:`passlib`: Comprehensive password hashing framework supporting over 30 "
"schemes."
msgstr ""
":pypi:`passlib`: framework abrangente de hash de senha com suporte para mais "
"de 30 esquemas."

#: ../../whatsnew/3.13.rst:1545
msgid ":pypi:`argon2-cffi`: The secure Argon2 password hashing algorithm."
msgstr ":pypi:`argon2-cffi`: algoritmo seguro de hashing de senha Argon2."

#: ../../whatsnew/3.13.rst:1547
msgid ""
":pypi:`legacycrypt`: :mod:`ctypes` wrapper to the POSIX crypt library call "
"and associated functionality."
msgstr ""
":pypi:`legacycrypt`: envólucro ao :mod:`ctypes` para a chamada POSIX da "
"biblioteca de criptografia e funcionalidade associada."

#: ../../whatsnew/3.13.rst:1550
msgid ""
":pypi:`crypt_r`: Fork of the :mod:`!crypt` module, wrapper to the :manpage:"
"`crypt_r(3)` library call and associated functionality."
msgstr ""
":pypi:`crypt_r`: fork do módulo :mod:`!crypt`, um envólucro para a chamada "
"da biblioteca :manpage:`crypt_r(3)` e funcionalidade associada."

#: ../../whatsnew/3.13.rst:1555
msgid ""
":mod:`!imghdr`: The :pypi:`filetype`, :pypi:`puremagic`, or :pypi:`python-"
"magic` libraries should be used as replacements. For example, the :func:`!"
"puremagic.what` function can be used to replace the :func:`!imghdr.what` "
"function for all file formats that were supported by :mod:`!imghdr`."
msgstr ""
":mod:`!imghdr`: as bibliotecas :pypi:`filetype`, :pypi:`puremagic` ou :pypi:"
"`python-magic` devem ser usadas como substituições. Por exemplo, a função :"
"func:`!puremagic.what` pode ser usada para substituir a função :func:`!"
"imghdr.what` para todos os formatos de arquivo que tinham suporte de :mod:`!"
"imghdr`."

#: ../../whatsnew/3.13.rst:1561
msgid ":mod:`!mailcap`: Use the :mod:`mimetypes` module instead."
msgstr ":mod:`!mailcap`: use o módulo :mod:`mimetypes`."

#: ../../whatsnew/3.13.rst:1563
msgid ":mod:`!msilib`"
msgstr ":mod:`!msilib`"

#: ../../whatsnew/3.13.rst:1564
msgid ":mod:`!nis`"
msgstr ":mod:`!nis`"

#: ../../whatsnew/3.13.rst:1565
msgid ":mod:`!nntplib`: Use the :pypi:`pynntp` library from PyPI instead."
msgstr ":mod:`!nntplib`: use a biblioteca :pypi:`pynntp` do PyPI."

#: ../../whatsnew/3.13.rst:1567
msgid ""
":mod:`!ossaudiodev`: For audio playback, use the :pypi:`pygame` library from "
"PyPI instead."
msgstr ""
":mod:`!ossaudiodev`: para reprodução de áudio, use a biblioteca :pypi:"
"`pygame` do PyPI."

#: ../../whatsnew/3.13.rst:1569
msgid ":mod:`!pipes`: Use the :mod:`subprocess` module instead."
msgstr ":mod:`!pipes`: use o módulo :mod:`subprocess`."

#: ../../whatsnew/3.13.rst:1571
msgid ""
":mod:`!sndhdr`: The :pypi:`filetype`, :pypi:`puremagic`, or :pypi:`python-"
"magic` libraries should be used as replacements."
msgstr ""
":mod:`!sndhdr`: as bibliotecas :pypi:`filetype`, :pypi:`puremagic` ou :pypi:"
"`python-magic` devem ser usadas como substitutas."

#: ../../whatsnew/3.13.rst:1574
msgid ":mod:`!spwd`: Use the :pypi:`python-pam` library from PyPI instead."
msgstr ":mod:`!spwd`: use a biblioteca :pypi:`python-pam` do PyPI."

#: ../../whatsnew/3.13.rst:1576
msgid ":mod:`!sunau`"
msgstr ":mod:`!sunau`"

#: ../../whatsnew/3.13.rst:1577
msgid ""
":mod:`!telnetlib`, Use the :pypi:`telnetlib3` or :pypi:`Exscript` libraries "
"from PyPI instead."
msgstr ""
":mod:`!telnetlib`: use as bibliotecas :pypi:`telnetlib3` ou :pypi:`Exscript` "
"do PyPI."

#: ../../whatsnew/3.13.rst:1579
msgid ""
":mod:`!uu`: Use the :mod:`base64` module instead, as a modern alternative."
msgstr ":mod:`!uu`: use o módulo :mod:`base64` como uma alternativa moderna."

#: ../../whatsnew/3.13.rst:1581
msgid ":mod:`!xdrlib`"
msgstr ":mod:`!xdrlib`"

#: ../../whatsnew/3.13.rst:1583
msgid ""
"(Contributed by Victor Stinner and Zachary Ware in :gh:`104773` and :gh:"
"`104780`.)"
msgstr ""
"(Contribuição de Victor Stinner e Zachary Ware em :gh:`104773` e :gh:"
"`104780`.)"

#: ../../whatsnew/3.13.rst:1587
msgid "2to3"
msgstr "2to3"

#: ../../whatsnew/3.13.rst:1589
msgid ""
"Remove the :program:`2to3` program and the :mod:`!lib2to3` module, "
"previously deprecated in Python 3.11. (Contributed by Victor Stinner in :gh:"
"`104780`.)"
msgstr ""
"Remove o programa :program:`2to3` e o módulo :mod:`!lib2to3`, já "
"descontinuados no Python 3.11. (Contribuição de Victor Stinner em :gh:"
"`104780`.)"

#: ../../whatsnew/3.13.rst:1595
msgid "builtins"
msgstr "embutidos"

#: ../../whatsnew/3.13.rst:1597
msgid ""
"Remove support for chained :class:`classmethod` descriptors (introduced in :"
"gh:`63272`). These can no longer be used to wrap other descriptors, such as :"
"class:`property`. The core design of this feature was flawed and led to "
"several problems. To \"pass-through\" a :class:`classmethod`, consider using "
"the :attr:`!__wrapped__` attribute that was added in Python 3.10. "
"(Contributed by Raymond Hettinger in :gh:`89519`.)"
msgstr ""
"Remove suporte aos descritores :class:`classmethod` encadeados (introduzidos "
"em :gh:`63272`). Eles não podem mais serem usados para agrupar outros "
"descritores como :class:`property`. O design central desse recurso "
"apresentava falhas e levou a problemas. Para \"passar\" um :class:"
"`classmethod`, considere usar o atributo :attr:`!__wrapped__` que foi "
"adicionado no Python 3.10. (Contribuição de Raymond Hettinger em :gh:"
"`89519`.)"

#: ../../whatsnew/3.13.rst:1606
msgid ""
"Raise a :exc:`RuntimeError` when calling :meth:`frame.clear` on a suspended "
"frame (as has always been the case for an executing frame). (Contributed by "
"Irit Katriel in :gh:`79932`.)"
msgstr ""
"Chamar :meth:`frame.clear` em um quadro suspenso levanta :exc:`RuntimeError` "
"(como sempre foi o caso para um quadro em execução). (Contribuição de Irit "
"Katriel em :gh:`79932`.)"

#: ../../whatsnew/3.13.rst:1614
msgid ""
"Remove the undocumented :class:`!LegacyInterpolation` class, deprecated in "
"the docstring since Python 3.2, and at runtime since Python 3.11. "
"(Contributed by Hugo van Kemenade in :gh:`104886`.)"
msgstr ""
"Remove a classe não documentada :class:`!LegacyInterpolation`, descontinuada "
"na docstring desde Python 3.2 e em tempo de execução desde Python 3.11. "
"(Contribuição de Hugo van Kemenade em :gh:`104886`.)"

#: ../../whatsnew/3.13.rst:1621
msgid "importlib.metadata"
msgstr "importlib.metadata"

#: ../../whatsnew/3.13.rst:1623
msgid ""
"Remove deprecated subscript (:meth:`~object.__getitem__`) access for :ref:"
"`EntryPoint <entry-points>` objects. (Contributed by Jason R. Coombs in :gh:"
"`113175`.)"
msgstr ""
"Remove o acesso descontinuado a subscrito (:meth:`~object.__getitem__`) para "
"objetos :ref:`EntryPoint <entry-points>`. (Contribuição de Jason R. Coombs "
"em :gh:`113175`.)"

#: ../../whatsnew/3.13.rst:1629
msgid "locale"
msgstr "locale"

#: ../../whatsnew/3.13.rst:1631
msgid ""
"Remove the :func:`!locale.resetlocale` function, deprecated in Python 3.11. "
"Use ``locale.setlocale(locale.LC_ALL, \"\")`` instead. (Contributed by "
"Victor Stinner in :gh:`104783`.)"
msgstr ""
"Remove a função :func:`!locale.resetlocale`, descontinuada no Python 3.11. "
"Use ``locale.setlocale(locale.LC_ALL, \"\")``. (Contribuição de Victor "
"Stinner em :gh:`104783`.)"

#: ../../whatsnew/3.13.rst:1637
msgid "opcode"
msgstr "opcode"

#: ../../whatsnew/3.13.rst:1639
msgid ""
"Move :attr:`!opcode.ENABLE_SPECIALIZATION` to :attr:`!_opcode."
"ENABLE_SPECIALIZATION`. This field was added in 3.12, it was never "
"documented, and is not intended for external use. (Contributed by Irit "
"Katriel in :gh:`105481`.)"
msgstr ""
"Move :attr:`!opcode.ENABLE_SPECIALIZATION` para :attr:`!_opcode."
"ENABLE_SPECIALIZATION`. Este campo foi adicionado na versão 3.12, nunca foi "
"documentado e não se destina ao uso externo. (Contribuição de Irit Katriel "
"em :gh:`105481`.)"

#: ../../whatsnew/3.13.rst:1644
msgid ""
"Remove :func:`!opcode.is_pseudo`, :attr:`!opcode.MIN_PSEUDO_OPCODE`, and :"
"attr:`!opcode.MAX_PSEUDO_OPCODE`, which were added in Python 3.12, but were "
"neither documented nor exposed through :mod:`dis`, and were not intended to "
"be used externally. (Contributed by Irit Katriel in :gh:`105481`.)"
msgstr ""
"Remove :func:`!opcode.is_pseudo`, :attr:`!opcode.MIN_PSEUDO_OPCODE` e :attr:"
"`!opcode.MAX_PSEUDO_OPCODE`, que foram adicionados no Python 3.12, mas nunca "
"foram documentados nem expostos através de :mod:`dis`, e não foram "
"planejados para serem usados externamente. (Contribuição de Irit Katriel em :"
"gh:`105481`.)"

#: ../../whatsnew/3.13.rst:1654
msgid ""
"Remove the ability to use :class:`~pathlib.Path` objects as context "
"managers. This functionality was deprecated and has had no effect since "
"Python 3.9. (Contributed by Barney Gale in :gh:`83863`.)"
msgstr ""
"Remove a capacidade de usar objetos :class:`~pathlib.Path` como "
"gerenciadores de contexto. Essa funcionalidade foi descontinuada e não tinha "
"efeito desde o Python 3.9. (Contribuição de Barney Gale em :gh:`83863`.)"

#: ../../whatsnew/3.13.rst:1662
msgid ""
"Remove the undocumented, deprecated, and broken :func:`!re.template` "
"function and :attr:`!re.TEMPLATE` / :attr:`!re.T` flag. (Contributed by "
"Serhiy Storchaka and Nikita Sobolev in :gh:`105687`.)"
msgstr ""
"Remove a função :func:`!re.template` não documentada, descontinuada e "
"quebrada e o sinalizador :attr:`!re.TEMPLATE` / :attr:`!re.T`. (Contribuição "
"de Serhiy Storchaka e Nikita Sobolev em :gh:`105687`.)"

#: ../../whatsnew/3.13.rst:1668
msgid "tkinter.tix"
msgstr "tkinter.tix"

#: ../../whatsnew/3.13.rst:1670
msgid ""
"Remove the :mod:`!tkinter.tix` module, deprecated in Python 3.6. The third-"
"party Tix library which the module wrapped is unmaintained. (Contributed by "
"Zachary Ware in :gh:`75552`.)"
msgstr ""
"Remove o módulo :mod:`!tkinter.tix`, descontinuado no Python 3.6. A "
"biblioteca Tix de terceiros que o módulo empacota não é mantida. "
"(Contribuição de Zachary Ware em :gh:`75552`.)"

#: ../../whatsnew/3.13.rst:1676
msgid "turtle"
msgstr "turtle"

#: ../../whatsnew/3.13.rst:1678
msgid ""
"Remove the :meth:`!RawTurtle.settiltangle` method, deprecated in the "
"documentation since Python 3.1 and at runtime since Python 3.11. "
"(Contributed by Hugo van Kemenade in :gh:`104876`.)"
msgstr ""
"Remove o método :meth:`!RawTurtle.settiltangle`, descontinuado na "
"documentação desde o Python 3.1 e em tempo de execução desde o Python 3.11. "
"(Contribuição de Hugo van Kemenade em :gh:`104876`.)"

#: ../../whatsnew/3.13.rst:1687
msgid ""
"Remove the :mod:`!typing.io` and :mod:`!typing.re` namespaces, deprecated "
"since Python 3.8. The items in those namespaces can be imported directly "
"from the :mod:`typing` module. (Contributed by Sebastian Rittau in :gh:"
"`92871`.)"
msgstr ""
"Remove os espaços de nomes :mod:`!typing.io` e :mod:`!typing.re`, "
"descontinuados desde o Python 3.8. Os itens nesses espaços de nomes podem "
"ser importados diretamente do módulo :mod:`typing`. (Contribuição de "
"Sebastian Rittau em :gh:`92871`.)"

#: ../../whatsnew/3.13.rst:1693
msgid ""
"Remove the keyword-argument method of creating :class:`~typing.TypedDict` "
"types, deprecated in Python 3.11. (Contributed by Tomas Roun in :gh:"
"`104786`.)"
msgstr ""
"Remove o método de argumento nomeado de criação de tipos :class:`~typing."
"TypedDict`, descontinuados no Python 3.11. (Contribuição de Tomas Roun em :"
"gh:`104786`.)"

#: ../../whatsnew/3.13.rst:1699
msgid "unittest"
msgstr "unittest"

#: ../../whatsnew/3.13.rst:1701
msgid ""
"Remove the following :mod:`unittest` functions, deprecated in Python 3.11:"
msgstr ""
"Remove as seguintes funções :mod:`unittest`, descontinuadas no Python 3.11:"

#: ../../whatsnew/3.13.rst:1703
msgid ":func:`!unittest.findTestCases`"
msgstr ":func:`!unittest.findTestCases`"

#: ../../whatsnew/3.13.rst:1704
msgid ":func:`!unittest.makeSuite`"
msgstr ":func:`!unittest.makeSuite`"

#: ../../whatsnew/3.13.rst:1705
msgid ":func:`!unittest.getTestCaseNames`"
msgstr ":func:`!unittest.getTestCaseNames`"

#: ../../whatsnew/3.13.rst:1707
msgid "Use :class:`~unittest.TestLoader` methods instead:"
msgstr "Em vez delas, use os métodos de :class:`~unittest.TestLoader`:"

#: ../../whatsnew/3.13.rst:1709
msgid ":meth:`~unittest.TestLoader.loadTestsFromModule`"
msgstr ":meth:`~unittest.TestLoader.loadTestsFromModule`"

#: ../../whatsnew/3.13.rst:1710
msgid ":meth:`~unittest.TestLoader.loadTestsFromTestCase`"
msgstr ":meth:`~unittest.TestLoader.loadTestsFromTestCase`"

#: ../../whatsnew/3.13.rst:1711
msgid ":meth:`~unittest.TestLoader.getTestCaseNames`"
msgstr ":meth:`~unittest.TestLoader.getTestCaseNames`"

#: ../../whatsnew/3.13.rst:1713
msgid "(Contributed by Hugo van Kemenade in :gh:`104835`.)"
msgstr "(Contribuição de Hugo van Kemenade em :gh:`104835`.)"

#: ../../whatsnew/3.13.rst:1715
msgid ""
"Remove the untested and undocumented :meth:`!TestProgram.usageExit` method, "
"deprecated in Python 3.11. (Contributed by Hugo van Kemenade in :gh:"
"`104992`.)"
msgstr ""
"Remove o método :meth:`!TestProgram.usageExit` não testado e não "
"documentado, descontinuado no Python 3.11. (Contribuição de Hugo van "
"Kemenade em :gh:`104992`.)"

#: ../../whatsnew/3.13.rst:1721
msgid "urllib"
msgstr "urllib"

#: ../../whatsnew/3.13.rst:1723
msgid ""
"Remove the *cafile*, *capath*, and *cadefault* parameters of the :func:"
"`urllib.request.urlopen` function, deprecated in Python 3.6. Use the "
"*context* parameter instead with an :class:`~ssl.SSLContext` instance. The :"
"meth:`ssl.SSLContext.load_cert_chain` function can be used to load specific "
"certificates, or let :func:`ssl.create_default_context` select the operating "
"system's trusted certificate authority (CA) certificates. (Contributed by "
"Victor Stinner in :gh:`105382`.)"
msgstr ""
"Remove os parâmetros *cafile*, *capath* e *cadefault* da função :func:"
"`urllib.request.urlopen`, descontinuada no Python 3.6. Em vez disso, use o "
"parâmetro *context* com uma instância de :class:`~ssl.SSLContext`. A função :"
"meth:`ssl.SSLContext.load_cert_chain` pode ser usada para carregar "
"certificados específicos ou deixe :func:`ssl.create_default_context` "
"selecionar os certificados de autoridade certificadora (AC) confiável ​​do "
"sistema operacional. (Contribuição de Victor Stinner em :gh:`105382`.)"

#: ../../whatsnew/3.13.rst:1734
msgid "webbrowser"
msgstr "webbrowser"

#: ../../whatsnew/3.13.rst:1736
msgid ""
"Remove the untested and undocumented :class:`!MacOSX` class, deprecated in "
"Python 3.11. Use the :class:`!MacOSXOSAScript` class (introduced in Python "
"3.2) instead. (Contributed by Hugo van Kemenade in :gh:`104804`.)"
msgstr ""
"Remove a classe :class:`!MacOSX` não testada e não documentada, "
"descontinuada no Python 3.11. Use a classe :class:`!MacOSXOSAScript` "
"(introduzida no Python 3.2). (Contribuição de Hugo van Kemenade em :gh:"
"`104804`.)"

#: ../../whatsnew/3.13.rst:1741
msgid ""
"Remove the deprecated :attr:`!MacOSXOSAScript._name` attribute. Use the :"
"attr:`MacOSXOSAScript.name <webbrowser.controller.name>` attribute instead. "
"(Contributed by Nikita Sobolev in :gh:`105546`.)"
msgstr ""
"Remove o atributo descontinuado :attr:`!MacOSXOSAScript._name`. Use o "
"atributo :attr:`MacOSXOSAScript.name <webbrowser.controller.name>`. "
"(Contribuição de Nikita Sobolev em :gh:`105546`.)"

#: ../../whatsnew/3.13.rst:1748
msgid "New Deprecations"
msgstr "Novas descontinuações"

#: ../../whatsnew/3.13.rst:1750
msgid ":ref:`User-defined functions <user-defined-funcs>`:"
msgstr ":ref:`Funções definidas pelo usuário <user-defined-funcs>`:"

#: ../../whatsnew/3.13.rst:1752
msgid ""
"Deprecate assignment to a function's :attr:`~function.__code__` attribute, "
"where the new code object's type does not match the function's type. The "
"different types are: plain function, generator, async generator, and "
"coroutine. (Contributed by Irit Katriel in :gh:`81137`.)"
msgstr ""
"A atribuição ao atributo :attr:`~function.__code__` de uma função onde o "
"tipo do novo objeto código não corresponde ao tipo da função está "
"descontinuada. Os diferentes tipos são: função simples, gerador, gerador "
"assíncrono e corrotina. (Contribuição de Irit Katriel em :gh:`81137`.)"

#: ../../whatsnew/3.13.rst:1758
#: ../../deprecations/pending-removal-in-3.16.rst:13
msgid ":mod:`array`:"
msgstr ":mod:`array`:"

#: ../../whatsnew/3.13.rst:1760
msgid ""
"Deprecate the ``'u'`` format code (:c:type:`wchar_t`) at runtime. This "
"format code has been deprecated in documentation since Python 3.3, and will "
"be removed in Python 3.16. Use the ``'w'`` format code (:c:type:`Py_UCS4`) "
"for Unicode characters instead. (Contributed by Hugo van Kemenade in :gh:"
"`80480`.)"
msgstr ""
"Descontinua o código de formato ``'u'`` (:c:type:`wchar_t`). Este código de "
"formato foi descontinuado na documentação desde o Python 3.3 e será removido "
"no Python 3.16. Use o código de formato ``'w'`` (:c:type:`Py_UCS4`) para "
"caracteres Unicode. (Contribuição de Hugo van Kemenade em :gh:`80480`.)"

#: ../../whatsnew/3.13.rst:1767
#: ../../deprecations/pending-removal-in-3.15.rst:16
msgid ":mod:`ctypes`:"
msgstr ":mod:`ctypes`:"

#: ../../whatsnew/3.13.rst:1769
msgid ""
"Deprecate the undocumented :func:`!SetPointerType` function, to be removed "
"in Python 3.15. (Contributed by Victor Stinner in :gh:`105733`.)"
msgstr ""
"Descontinua a função não documentada :func:`!SetPointerType`, que será "
"removida no Python 3.15. (Contribuição de Victor Stinner em :gh:`105733`.)"

#: ../../whatsnew/3.13.rst:1773
msgid ""
":term:`Soft-deprecate <soft deprecated>` the :func:`~ctypes.ARRAY` function "
"in favour of ``type * length`` multiplication. (Contributed by Victor "
"Stinner in :gh:`105733`.)"
msgstr ""
":term:`Descontinua suavemente <soft deprecated>` a função :func:`~ctypes."
"ARRAY` em favor da multiplicação ``type * length``. (Contribuição de Victor "
"Stinner em :gh:`105733`.)"

#: ../../whatsnew/3.13.rst:1777
msgid ":mod:`decimal`:"
msgstr ":mod:`decimal`:"

#: ../../whatsnew/3.13.rst:1779
msgid ""
"Deprecate the non-standard and undocumented :class:`~decimal.Decimal` format "
"specifier ``'N'``, which is only supported in the :mod:`!decimal` module's C "
"implementation. (Contributed by Serhiy Storchaka in :gh:`89902`.)"
msgstr ""
"Descontinua o especificador de formato de :class:`~decimal.Decimal` não "
"padrão e não documentado ``'N'``, que só é suportado na implementação C do "
"módulo :mod:`!decimal`. (Contribuição de Serhiy Storchaka em :gh:`89902`.)"

#: ../../whatsnew/3.13.rst:1784
msgid ":mod:`dis`:"
msgstr ":mod:`dis`:"

#: ../../whatsnew/3.13.rst:1786
msgid ""
"Deprecate the :attr:`!HAVE_ARGUMENT` separator. Check membership in :data:"
"`~dis.hasarg` instead. (Contributed by Irit Katriel in :gh:`109319`.)"
msgstr ""
"Descontinua o separador :attr:`!HAVE_ARGUMENT`. Em vez disso, Verifique a "
"associação em :data:`~dis.hasarg`. (Contribuição de Irit Katriel em :gh:"
"`109319`.)"

#: ../../whatsnew/3.13.rst:1790
msgid ":mod:`getopt` and :mod:`optparse`:"
msgstr ":mod:`getopt` e :mod:`optparse`:"

#: ../../whatsnew/3.13.rst:1792
msgid ""
"Both modules are now :term:`soft deprecated`, with :mod:`argparse` preferred "
"for new projects. This is a new soft-deprecation for the :mod:`!getopt` "
"module, whereas the :mod:`!optparse` module was already *de facto* soft "
"deprecated. (Contributed by Victor Stinner in :gh:`106535`.)"
msgstr ""
"Ambos os módulos agora estão :term:`suavemente descontinuado`\\ s, com :mod:"
"`argparse` preferido para novos projetos. Esta é uma nova descontinuação "
"suave para o módulo :mod:`!getopt`, enquanto o módulo :mod:`!optparse` já "
"estava *de fato* suavemente descontinuado. (Contribuição de Victor Stinner "
"em :gh:`106535`.)"

#: ../../whatsnew/3.13.rst:1798
msgid ":mod:`gettext`:"
msgstr ":mod:`gettext`:"

#: ../../whatsnew/3.13.rst:1800
msgid ""
"Deprecate non-integer numbers as arguments to functions and methods that "
"consider plural forms in the :mod:`!gettext` module, even if no translation "
"was found. (Contributed by Serhiy Storchaka in :gh:`88434`.)"
msgstr ""
"Descontinua números não inteiros como argumentos para funções e métodos que "
"consideram formas plurais no módulo :mod:`!gettext`, ainda que nenhuma "
"tradução tenha sido encontrada. (Contribuição de Serhiy Storchaka em :gh:"
"`88434`.)"

#: ../../whatsnew/3.13.rst:1805
msgid ":mod:`glob`:"
msgstr ":mod:`glob`:"

#: ../../whatsnew/3.13.rst:1807
msgid ""
"Deprecate the undocumented :func:`!glob0` and :func:`!glob1` functions. Use :"
"func:`~glob.glob` and pass a :term:`path-like object` specifying the root "
"directory to the *root_dir* parameter instead. (Contributed by Barney Gale "
"in :gh:`117337`.)"
msgstr ""
"Descontinua as funções não documentadas :func:`!glob0` e :func:`!glob1`. Em "
"vez disso, use :func:`~glob.glob` e passe um :term:`objeto caminho ou "
"similar` especificando o diretório raiz para o parâmetro *root_dir*. "
"(Contribuição de Barney Gale em :gh:`117337`.)"

#: ../../whatsnew/3.13.rst:1812
#: ../../deprecations/pending-removal-in-3.15.rst:21
msgid ":mod:`http.server`:"
msgstr ":mod:`http.server`:"

#: ../../whatsnew/3.13.rst:1814
msgid ""
"Deprecate :class:`~http.server.CGIHTTPRequestHandler`, to be removed in "
"Python 3.15. Process-based CGI HTTP servers have been out of favor for a "
"very long time. This code was outdated, unmaintained, and rarely used. It "
"has a high potential for both security and functionality bugs. (Contributed "
"by Gregory P. Smith in :gh:`109096`.)"
msgstr ""
"Descontinua :class:`~http.server.CGIHTTPRequestHandler`, a ser removido no "
"Python 3.15. Servidores HTTP CGI baseados em processos estão fora de moda há "
"muito tempo. Este código estava desatualizado, sem manutenção e raramente "
"era usado. Ele tem um alto potencial para bugs de segurança e "
"funcionalidade. (Contribuição de Gregory P. Smith em :gh:`109096`.)"

#: ../../whatsnew/3.13.rst:1821
msgid ""
"Deprecate the :option:`!--cgi` flag to the :program:`python -m http.server` "
"command-line interface, to be removed in Python 3.15. (Contributed by "
"Gregory P. Smith in :gh:`109096`.)"
msgstr ""
"Descontinua o sinalizador :option:`!--cgi` para a interface de linha de "
"comando :program:`python -m http.server`, a ser removido no Python 3.15. "
"(Contribuição de Gregory P. Smith em :gh:`109096`.)"

#: ../../whatsnew/3.13.rst:1826
msgid ":mod:`mimetypes`:"
msgstr ":mod:`mimetypes`:"

#: ../../whatsnew/3.13.rst:1828
msgid ""
":term:`Soft-deprecate <soft deprecated>` file path arguments to :func:"
"`~mimetypes.guess_type`, use :func:`~mimetypes.guess_file_type` instead. "
"(Contributed by Serhiy Storchaka in :gh:`66543`.)"
msgstr ""
":term:`Descontinua suavemente <soft deprecated>` argumentos caminho de "
"arquivo para :func:`~mimetypes.guess_type`, use :func:`~mimetypes."
"guess_file_type` em vez disso. (Contribuição de Serhiy Storchaka em :gh:"
"`66543`.)"

#: ../../whatsnew/3.13.rst:1833
msgid ":mod:`re`:"
msgstr ":mod:`re`:"

#: ../../whatsnew/3.13.rst:1835
msgid ""
"Deprecate passing the optional *maxsplit*, *count*, or *flags* arguments as "
"positional arguments to the module-level :func:`~re.split`, :func:`~re.sub`, "
"and :func:`~re.subn` functions. These parameters will become :ref:`keyword-"
"only <keyword-only_parameter>` in a future version of Python. (Contributed "
"by Serhiy Storchaka in :gh:`56166`.)"
msgstr ""
"Descontinua a passagem dos argumentos opcionais *maxsplit*, *count* ou "
"*flags* como argumentos posicionais para as funções de nível de módulo :func:"
"`~re.split`, :func:`~re.sub` e :func:`~re.subn`. Esses parâmetros se "
"tornarão :ref:`somente-nomeados <keyword-only_parameter>` em uma versão "
"futura do Python. (Contribuição de Serhiy Storchaka em :gh:`56166`.)"

#: ../../whatsnew/3.13.rst:1842
#: ../../deprecations/pending-removal-in-3.15.rst:42
msgid ":mod:`pathlib`:"
msgstr ":mod:`pathlib`:"

#: ../../whatsnew/3.13.rst:1844
msgid ""
"Deprecate :meth:`.PurePath.is_reserved`, to be removed in Python 3.15. Use :"
"func:`os.path.isreserved` to detect reserved paths on Windows. (Contributed "
"by Barney Gale in :gh:`88569`.)"
msgstr ""
"Descontinua :meth:`.PurePath.is_reserved`, a ser removido no Python 3.15. "
"Use :func:`os.path.isreserved` para detectar caminhos reservados no Windows. "
"(Contribuição de Barney Gale em :gh:`88569`.)"

#: ../../whatsnew/3.13.rst:1849
#: ../../deprecations/pending-removal-in-3.15.rst:48
msgid ":mod:`platform`:"
msgstr ":mod:`platform`:"

#: ../../whatsnew/3.13.rst:1851
msgid ""
"Deprecate :func:`~platform.java_ver`, to be removed in Python 3.15. This "
"function is only useful for Jython support, has a confusing API, and is "
"largely untested. (Contributed by Nikita Sobolev in :gh:`116349`.)"
msgstr ""
"Descontinua :func:`~platform.java_ver`, a ser removida no Python 3.15. Esta "
"função é útil apenas para suporte a Jython, tem uma API confusa e é "
"amplamente não testada. (Contribuição de Nikita Sobolev em :gh:`116349`.)"

#: ../../whatsnew/3.13.rst:1857
msgid ":mod:`pydoc`:"
msgstr ":mod:`pydoc`:"

#: ../../whatsnew/3.13.rst:1859
msgid ""
"Deprecate the undocumented :func:`!ispackage` function. (Contributed by "
"Zackery Spytz in :gh:`64020`.)"
msgstr ""
"Descontinua a função não documentada :func:`!ispackage`. (Contribuição de "
"Zackery Spytz em :gh:`64020`.)"

#: ../../whatsnew/3.13.rst:1862
#: ../../deprecations/pending-removal-in-3.14.rst:98
msgid ":mod:`sqlite3`:"
msgstr ":mod:`sqlite3`:"

#: ../../whatsnew/3.13.rst:1864
msgid ""
"Deprecate passing more than one positional argument to the :func:`~sqlite3."
"connect` function and the :class:`~sqlite3.Connection` constructor. The "
"remaining parameters will become keyword-only in Python 3.15. (Contributed "
"by Erlend E. Aasland in :gh:`107948`.)"
msgstr ""
"Descontinua a passagem de mais de um argumento posicional para a função :"
"func:`~sqlite3.connect` e o construtor :class:`~sqlite3.Connection`. Os "
"parâmetros restantes se tornarão somente-nomeados no Python 3.15. "
"(Contribuição de Erlend E. Aasland em :gh:`107948`.)"

#: ../../whatsnew/3.13.rst:1870
msgid ""
"Deprecate passing name, number of arguments, and the callable as keyword "
"arguments for :meth:`.Connection.create_function` and :meth:`.Connection."
"create_aggregate` These parameters will become positional-only in Python "
"3.15. (Contributed by Erlend E. Aasland in :gh:`108278`.)"
msgstr ""
"Descontinua a passagem de nome, número de argumentos e o chamável como "
"argumentos nomeados para :meth:`.Connection.create_function` e :meth:`."
"Connection.create_aggregate` Esses parâmetros se tornarão somente-"
"posicionais no Python 3.15. (Contribuição de Erlend E. Aasland em :gh:"
"`108278`.)"

#: ../../whatsnew/3.13.rst:1876
msgid ""
"Deprecate passing the callback callable by keyword for the :meth:`~sqlite3."
"Connection.set_authorizer`, :meth:`~sqlite3.Connection."
"set_progress_handler`, and :meth:`~sqlite3.Connection.set_trace_callback` :"
"class:`~sqlite3.Connection` methods. The callback callables will become "
"positional-only in Python 3.15. (Contributed by Erlend E. Aasland in :gh:"
"`108278`.)"
msgstr ""
"Descontinua a passagem do chamável de função de retorno como argumento "
"nomeado para os métodos :meth:`~sqlite3.Connection.set_authorizer`, :meth:"
"`~sqlite3.Connection.set_progress_handler` e :meth:`~sqlite3.Connection."
"set_trace_callback` da classe :class:`~sqlite3.Connection`. Os chamáveis de "
"função de retorno se tornarão somente-posicionais no Python 3.15. "
"(Contribuição de Erlend E. Aasland em :gh:`108278`.)"

#: ../../whatsnew/3.13.rst:1884
#: ../../deprecations/pending-removal-in-3.16.rst:33
msgid ":mod:`sys`:"
msgstr ":mod:`sys`:"

#: ../../whatsnew/3.13.rst:1886
msgid ""
"Deprecate the :func:`~sys._enablelegacywindowsfsencoding` function, to be "
"removed in Python 3.16. Use the :envvar:`PYTHONLEGACYWINDOWSFSENCODING` "
"environment variable instead. (Contributed by Inada Naoki in :gh:`73427`.)"
msgstr ""
"Descontinua a função :func:`~sys._enablelegacywindowsfsencoding`, para ser "
"removida no Python 3.16. Em vez disso, use a variável de ambiente :envvar:"
"`PYTHONLEGACYWINDOWSFSENCODING`. (Contribuição de Inada Naoki em :gh:"
"`73427`.)"

#: ../../whatsnew/3.13.rst:1891
#: ../../deprecations/pending-removal-in-3.16.rst:39
msgid ":mod:`tarfile`:"
msgstr ":mod:`tarfile`:"

#: ../../whatsnew/3.13.rst:1893
msgid ""
"Deprecate the undocumented and unused :attr:`!TarFile.tarfile` attribute, to "
"be removed in Python 3.16. (Contributed in :gh:`115256`.)"
msgstr ""
"Descontinua o atributo :attr:`!TarFile.tarfile` não documentado e não "
"utilizado, a ser removido no Python 3.16. (Contribuição em :gh:`115256`.)"

#: ../../whatsnew/3.13.rst:1897
msgid ":mod:`traceback`:"
msgstr ":mod:`traceback`:"

#: ../../whatsnew/3.13.rst:1899
msgid ""
"Deprecate the :attr:`.TracebackException.exc_type` attribute. Use :attr:`."
"TracebackException.exc_type_str` instead. (Contributed by Irit Katriel in :"
"gh:`112332`.)"
msgstr ""
"Descontinua o atributo :attr:`.TracebackException.exc_type`. Em vez disso, "
"use :attr:`.TracebackException.exc_type_str`. (Contribuição de Irit Katriel "
"em :gh:`112332`.)"

#: ../../whatsnew/3.13.rst:1903
#: ../../deprecations/pending-removal-in-3.15.rst:62
msgid ":mod:`typing`:"
msgstr ":mod:`typing`:"

#: ../../whatsnew/3.13.rst:1905
msgid ""
"Deprecate the undocumented keyword argument syntax for creating :class:"
"`~typing.NamedTuple` classes (e.g. ``Point = NamedTuple(\"Point\", x=int, "
"y=int)``), to be removed in Python 3.15. Use the class-based syntax or the "
"functional syntax instead. (Contributed by Alex Waygood in :gh:`105566`.)"
msgstr ""
"Descontinua a não-documentada sintaxe de argumento nomeado para criação de "
"classes :class:`~typing.NamedTuple` (por exemplo, ``Point = "
"NamedTuple(\"Point\", x=int, y=int)``), para ser removido no Python 3.15. Em "
"vez disso, use as sintaxes baseada em classe ou a funcional. (Contribuição "
"de Alex Waygood in :gh:`105566`.)"

#: ../../whatsnew/3.13.rst:1912
msgid ""
"Deprecate omitting the *fields* parameter when creating a :class:`~typing."
"NamedTuple` or :class:`typing.TypedDict` class, and deprecate passing "
"``None`` to the *fields* parameter of both types. Python 3.15 will require a "
"valid sequence for the *fields* parameter. To create a NamedTuple class with "
"zero fields, use ``class NT(NamedTuple): pass`` or ``NT = NamedTuple(\"NT\", "
"())``. To create a TypedDict class with zero fields, use ``class "
"TD(TypedDict): pass`` or ``TD = TypedDict(\"TD\", {})``. (Contributed by "
"Alex Waygood in :gh:`105566` and :gh:`105570`.)"
msgstr ""
"Descontinua a omissão do parâmetro *fields* ao criar uma classe :class:"
"`~typing.NamedTuple` ou :class:`typing.TypedDict` e descontinua a passagem "
"de ``None`` para o parâmetro *fields* de ambos os tipos. O Python 3.15 "
"exigirá uma sequência válida para o parâmetro *fields*. Para criar uma "
"classe NamedTuple com zero campos, use ``class NT(NamedTuple): pass`` ou "
"``NT = NamedTuple(\"NT\", ())``. Para criar uma classe TypedDict com zero "
"campos, use ``class TD(TypedDict): pass`` ou ``TD = TypedDict(\"TD\", {})``. "
"(Contribuição de Alex Waygood em :gh:`105566` e :gh:`105570`.)"

#: ../../whatsnew/3.13.rst:1922
msgid ""
"Deprecate the :func:`typing.no_type_check_decorator` decorator function, to "
"be removed in in Python 3.15. After eight years in the :mod:`typing` module, "
"it has yet to be supported by any major type checker. (Contributed by Alex "
"Waygood in :gh:`106309`.)"
msgstr ""
"Descontinua o decorador de função :func:`typing.no_type_check_decorator` "
"para ser removido no Python 3.15. Depois de oito anos no módulo :mod:"
"`typing`, ele ainda não foi implementado por nenhum dos principais "
"verificadores de tipos. (Contribuição de Alex Waygood em :gh:`106309`.)"

#: ../../whatsnew/3.13.rst:1928
msgid ""
"Deprecate :data:`typing.AnyStr`. In Python 3.16, it will be removed from "
"``typing.__all__``, and a :exc:`DeprecationWarning` will be emitted at "
"runtime when it is imported or accessed. It will be removed entirely in "
"Python 3.18. Use the new :ref:`type parameter syntax <type-params>` instead. "
"(Contributed by Michael The in :gh:`107116`.)"
msgstr ""
"Descontinua :data:`typing.AnyStr`. No Python 3.16, isso será removido de "
"``typing.__all__``, e uma :exc:`DeprecationWarning` será levantada em tempo "
"de execução quando isso for importado ou acessado. Será removido "
"completamente em Python 3.18. Em vez disso, use a nova :ref:`sintaxe de "
"parâmetro de tipo <type-params>`. (Contribuição de Michael The em :gh:"
"`107116`.)"

#: ../../whatsnew/3.13.rst:1936
#: ../../deprecations/pending-removal-in-3.15.rst:75
msgid ":mod:`wave`:"
msgstr ":mod:`wave`:"

#: ../../whatsnew/3.13.rst:1938
msgid ""
"Deprecate the :meth:`~wave.Wave_read.getmark`, :meth:`!setmark`, and :meth:"
"`~wave.Wave_read.getmarkers` methods of the :class:`~wave.Wave_read` and :"
"class:`~wave.Wave_write` classes, to be removed in Python 3.15. (Contributed "
"by Victor Stinner in :gh:`105096`.)"
msgstr ""
"Descontinua os métodos :meth:`~wave.Wave_read.getmark`, :meth:`!setmark` e :"
"meth:`~wave.Wave_read.getmarkers` das classes :class:`~wave.Wave_read` e :"
"class:`~wave.Wave_write`, a serem removidos no Python 3.15. (Contribuição de "
"Victor Stinner em :gh:`105096`.)"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:2
#: ../../deprecations/pending-removal-in-3.14.rst:2
msgid "Pending Removal in Python 3.14"
msgstr "Remoção pendente no Python 3.14"

#: ../../deprecations/pending-removal-in-3.14.rst:4
#: ../../deprecations/pending-removal-in-3.15.rst:4
msgid "The import system:"
msgstr "O sistema de importação:"

#: ../../deprecations/pending-removal-in-3.14.rst:6
msgid ""
"Setting :attr:`~module.__loader__` on a module while failing to set :attr:"
"`__spec__.loader <importlib.machinery.ModuleSpec.loader>` is deprecated. In "
"Python 3.14, :attr:`!__loader__` will cease to be set or taken into "
"consideration by the import system or the standard library."
msgstr ""
"A definição de :attr:`~module.__loader__` em um módulo enquanto falha na "
"definição de :attr:`__spec__.loader <importlib.machinery.ModuleSpec.loader>` "
"está descontinuado. No Python 3.14, :attr:`!__loader__` deixará de ser "
"definido ou levado em consideração pelo sistema de importação ou pela "
"biblioteca padrão."

#: ../../deprecations/pending-removal-in-3.14.rst:11
msgid ""
":mod:`argparse`: The *type*, *choices*, and *metavar* parameters of :class:`!"
"argparse.BooleanOptionalAction` are deprecated and will be removed in 3.14. "
"(Contributed by Nikita Sobolev in :gh:`92248`.)"
msgstr ""
":mod:`argparse`: Os parâmetros *type*, *choices* e *metavar* de :class:`!"
"argparse.BooleanOptionalAction` foram descontinuados e serão removidos na "
"versão 3.14. (Contribuição de Nikita Sobolev em :gh:`92248`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:16
msgid ""
":mod:`ast`: The following features have been deprecated in documentation "
"since Python 3.8, now cause a :exc:`DeprecationWarning` to be emitted at "
"runtime when they are accessed or used, and will be removed in Python 3.14:"
msgstr ""
":mod:`ast`: os seguintes recursos foram descontinuados na documentação desde "
"Python 3.8, agora fazem com que um :exc:`DeprecationWarning` seja emitido em "
"tempo de execução quando eles são acessados ou usados, e serão removidos no "
"Python 3.14:"

#: ../../deprecations/pending-removal-in-3.14.rst:20
msgid ":class:`!ast.Num`"
msgstr ":class:`!ast.Num`"

#: ../../deprecations/pending-removal-in-3.14.rst:21
msgid ":class:`!ast.Str`"
msgstr ":class:`!ast.Str`"

#: ../../deprecations/pending-removal-in-3.14.rst:22
msgid ":class:`!ast.Bytes`"
msgstr ":class:`!ast.Bytes`"

#: ../../deprecations/pending-removal-in-3.14.rst:23
msgid ":class:`!ast.NameConstant`"
msgstr ":class:`!ast.NameConstant`"

#: ../../deprecations/pending-removal-in-3.14.rst:24
msgid ":class:`!ast.Ellipsis`"
msgstr ":class:`!ast.Ellipsis`"

#: ../../deprecations/pending-removal-in-3.14.rst:26
msgid ""
"Use :class:`ast.Constant` instead. (Contributed by Serhiy Storchaka in :gh:"
"`90953`.)"
msgstr ""
"Em vez disso, use :class:`ast.Constant`. (Contribuição de Serhiy Storchaka "
"em :gh:`90953`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:29
msgid ":mod:`asyncio`:"
msgstr ":mod:`asyncio`:"

#: ../../deprecations/pending-removal-in-3.14.rst:31
msgid ""
"The child watcher classes :class:`~asyncio.MultiLoopChildWatcher`, :class:"
"`~asyncio.FastChildWatcher`, :class:`~asyncio.AbstractChildWatcher` and :"
"class:`~asyncio.SafeChildWatcher` are deprecated and will be removed in "
"Python 3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""
"As classes filhas dos observadores :class:`~asyncio.MultiLoopChildWatcher`, :"
"class:`~asyncio.FastChildWatcher`, :class:`~asyncio.AbstractChildWatcher` e :"
"class:`~asyncio.SafeChildWatcher` foram descontinuadas e serão removidas no "
"Python 3.14. (Contribuição de Kumar Aditya em :gh:`94597`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:37
msgid ""
":func:`asyncio.set_child_watcher`, :func:`asyncio.get_child_watcher`, :meth:"
"`asyncio.AbstractEventLoopPolicy.set_child_watcher` and :meth:`asyncio."
"AbstractEventLoopPolicy.get_child_watcher` are deprecated and will be "
"removed in Python 3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""
":func:`asyncio.set_child_watcher`, :func:`asyncio.get_child_watcher`, :meth:"
"`asyncio.AbstractEventLoopPolicy.set_child_watcher` e :meth:`asyncio."
"AbstractEventLoopPolicy.get_child_watcher` foram descontinuados e serão "
"removidos no Python 3.14. (Contribuição de Kumar Aditya em :gh:`94597`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:43
msgid ""
"The :meth:`~asyncio.get_event_loop` method of the default event loop policy "
"now emits a :exc:`DeprecationWarning` if there is no current event loop set "
"and it decides to create one. (Contributed by Serhiy Storchaka and Guido van "
"Rossum in :gh:`100160`.)"
msgstr ""
"O método :meth:`~asyncio.get_event_loop` da política de laço de eventos "
"padrão agora emite um :exc:`DeprecationWarning` se não houver nenhum laço de "
"eventos atual definido e decidir criar um. (Contribuição de Serhiy Storchaka "
"e Guido van Rossum em :gh:`100160`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:48
msgid ""
":mod:`collections.abc`: Deprecated :class:`~collections.abc.ByteString`. "
"Prefer :class:`!Sequence` or :class:`~collections.abc.Buffer`. For use in "
"typing, prefer a union, like ``bytes | bytearray``, or :class:`collections."
"abc.Buffer`. (Contributed by Shantanu Jain in :gh:`91896`.)"
msgstr ""
":mod:`collections.abc`: :class:`~collections.abc.ByteString` foi "
"descontinuado. Prefira :class:`!Sequence` ou :class:`~collections.abc."
"Buffer` Para uso em tipagem, prefira uma união, como ``bytes | bytearray`` "
"ou :class:`collections.abc.Buffer`. (Contribuição de Shantanu Jain em :gh:"
"`91896`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:54
msgid ""
":mod:`email`: Deprecated the *isdst* parameter in :func:`email.utils."
"localtime`. (Contributed by Alan Williams in :gh:`72346`.)"
msgstr ""
":mod:`email`: Descontinua o parâmetro *isdst* em :func:`email.utils."
"localtime`. (Contribuição de Alan Williams em :gh:`72346`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:57
msgid ":mod:`importlib.abc` deprecated classes:"
msgstr ":mod:`importlib.abc` descontinuou as classes:"

#: ../../deprecations/pending-removal-in-3.14.rst:59
msgid ":class:`!importlib.abc.ResourceReader`"
msgstr ":class:`!importlib.abc.ResourceReader`"

#: ../../deprecations/pending-removal-in-3.14.rst:60
msgid ":class:`!importlib.abc.Traversable`"
msgstr ":class:`!importlib.abc.Traversable`"

#: ../../deprecations/pending-removal-in-3.14.rst:61
msgid ":class:`!importlib.abc.TraversableResources`"
msgstr ":class:`!importlib.abc.TraversableResources`"

#: ../../deprecations/pending-removal-in-3.14.rst:63
msgid "Use :mod:`importlib.resources.abc` classes instead:"
msgstr "Em vez disso, use classes de :mod:`importlib.resources.abc`:"

#: ../../deprecations/pending-removal-in-3.14.rst:65
msgid ":class:`importlib.resources.abc.Traversable`"
msgstr ":class:`importlib.resources.abc.Traversable`"

#: ../../deprecations/pending-removal-in-3.14.rst:66
msgid ":class:`importlib.resources.abc.TraversableResources`"
msgstr ":class:`importlib.resources.abc.TraversableResources`"

#: ../../deprecations/pending-removal-in-3.14.rst:68
msgid "(Contributed by Jason R. Coombs and Hugo van Kemenade in :gh:`93963`.)"
msgstr "(Contribuição de Jason R. Coombs e Hugo van Kemenade em :gh:`93963`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:70
msgid ""
":mod:`itertools` had undocumented, inefficient, historically buggy, and "
"inconsistent support for copy, deepcopy, and pickle operations. This will be "
"removed in 3.14 for a significant reduction in code volume and maintenance "
"burden. (Contributed by Raymond Hettinger in :gh:`101588`.)"
msgstr ""
":mod:`itertools` tinha suporte não documentado, ineficiente, historicamente "
"cheio de bugs e inconsistente para operações de cópia, cópia profunda e "
"serialização com pickle. Isso será removido na versão 3.14 para uma redução "
"significativa no volume de código e na carga de manutenção. (Contribuição de "
"Raymond Hettinger em :gh:`101588`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:76
msgid ""
":mod:`multiprocessing`: The default start method will change to a safer one "
"on Linux, BSDs, and other non-macOS POSIX platforms where ``'fork'`` is "
"currently the default (:gh:`84559`). Adding a runtime warning about this was "
"deemed too disruptive as the majority of code is not expected to care. Use "
"the :func:`~multiprocessing.get_context` or :func:`~multiprocessing."
"set_start_method` APIs to explicitly specify when your code *requires* "
"``'fork'``.  See :ref:`multiprocessing-start-methods`."
msgstr ""
":mod:`multiprocessing`: o método de inicialização padrão será alterado para "
"um mais seguro no Linux, BSDs e outras plataformas POSIX não-macOS onde "
"``'fork'`` é atualmente o padrão (:gh:`84559`). Adicionar um aviso de tempo "
"de execução sobre isso foi considerado muito perturbador, pois não se espera "
"que a maior parte do código se importe. Use as APIs :func:`~multiprocessing."
"get_context` ou :func:`~multiprocessing.set_start_method` para especificar "
"explicitamente quando seu código *requer* ``'fork'``. Veja :ref:"
"`multiprocessing-start-methods`."

#: ../../deprecations/pending-removal-in-3.14.rst:84
msgid ""
":mod:`pathlib`: :meth:`~pathlib.PurePath.is_relative_to` and :meth:`~pathlib."
"PurePath.relative_to`: passing additional arguments is deprecated."
msgstr ""
":mod:`pathlib`: :meth:`~pathlib.PurePath.is_relative_to` e :meth:`~pathlib."
"PurePath.relative_to`: passar argumentos adicionais foi descontinuado."

#: ../../deprecations/pending-removal-in-3.14.rst:88
msgid ""
":mod:`pkgutil`: :func:`~pkgutil.find_loader` and :func:`~pkgutil.get_loader` "
"now raise :exc:`DeprecationWarning`; use :func:`importlib.util.find_spec` "
"instead. (Contributed by Nikita Sobolev in :gh:`97850`.)"
msgstr ""
":mod:`pkgutil`: :func:`~pkgutil.find_loader` e :func:`~pkgutil.get_loader` "
"agora levantam :exc:`DeprecationWarning`; use :func:`importlib.util."
"find_spec`. (Contribuição de Nikita Sobolev em :gh:`97850`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:93
msgid ":mod:`pty`:"
msgstr ":mod:`pty`:"

#: ../../deprecations/pending-removal-in-3.14.rst:95
msgid "``master_open()``: use :func:`pty.openpty`."
msgstr "``master_open()``: use :func:`pty.openpty`."

#: ../../deprecations/pending-removal-in-3.14.rst:96
msgid "``slave_open()``: use :func:`pty.openpty`."
msgstr "``slave_open()``: use :func:`pty.openpty`."

#: ../../deprecations/pending-removal-in-3.14.rst:100
msgid ":data:`~sqlite3.version` and :data:`~sqlite3.version_info`."
msgstr ":data:`~sqlite3.version` e :data:`~sqlite3.version_info`."

#: ../../deprecations/pending-removal-in-3.14.rst:102
msgid ""
":meth:`~sqlite3.Cursor.execute` and :meth:`~sqlite3.Cursor.executemany` if :"
"ref:`named placeholders <sqlite3-placeholders>` are used and *parameters* is "
"a sequence instead of a :class:`dict`."
msgstr ""
":meth:`~sqlite3.Cursor.execute` e :meth:`~sqlite3.Cursor.executemany` se :"
"ref:`espaços reservados nomeados <sqlite3-placeholders>` forem usados ​​e "
"*parameters* for uma sequência em vez de um :class:`dict` ."

#: ../../deprecations/pending-removal-in-3.14.rst:106
msgid ""
"date and datetime adapter, date and timestamp converter: see the :mod:"
"`sqlite3` documentation for suggested replacement recipes."
msgstr ""
"adaptador de data e hora, conversor de registro de data e hora: veja a "
"documentação de :mod:`sqlite3` para receitas de substituição sugeridas."

#: ../../deprecations/pending-removal-in-3.14.rst:109
msgid ""
":class:`types.CodeType`: Accessing :attr:`~codeobject.co_lnotab` was "
"deprecated in :pep:`626` since 3.10 and was planned to be removed in 3.12, "
"but it only got a proper :exc:`DeprecationWarning` in 3.12. May be removed "
"in 3.14. (Contributed by Nikita Sobolev in :gh:`101866`.)"
msgstr ""
":class:`types.CodeType`: o acesso a :attr:`~codeobject.co_lnotab` foi "
"descontinuado na :pep:`626` desde 3.10 e foi planejado para ser removido em "
"3.12, mas só recebeu uma :exc:`DeprecationWarning` adequada em 3.12. Pode "
"ser removido em 3.14. (Contribuição de Nikita Sobolev em :gh:`101866`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:116
msgid ""
":mod:`typing`: :class:`~typing.ByteString`, deprecated since Python 3.9, now "
"causes a :exc:`DeprecationWarning` to be emitted when it is used."
msgstr ""
":mod:`typing`: :class:`~typing.ByteString`, descontinuado desde Python 3.9, "
"agora faz com que uma :exc:`DeprecationWarning` seja emitida quando é usado."

#: ../../deprecations/pending-removal-in-3.14.rst:119
msgid ""
":mod:`urllib`: :class:`!urllib.parse.Quoter` is deprecated: it was not "
"intended to be a public API. (Contributed by Gregory P. Smith in :gh:"
"`88168`.)"
msgstr ""
":mod:`urllib`: :class:`!urllib.parse.Quoter` está obsoleto: não foi "
"planejado para ser uma API pública. (Contribuição de Gregory P. Smith em :gh:"
"`88168`.)"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:2
#: ../../deprecations/pending-removal-in-3.15.rst:2
msgid "Pending Removal in Python 3.15"
msgstr "Remoção pendente no Python 3.15"

#: ../../deprecations/pending-removal-in-3.15.rst:6
msgid ""
"Setting :attr:`~module.__cached__` on a module while failing to set :attr:"
"`__spec__.cached <importlib.machinery.ModuleSpec.cached>` is deprecated. In "
"Python 3.15, :attr:`!__cached__` will cease to be set or take into "
"consideration by the import system or standard library. (:gh:`97879`)"
msgstr ""
"A definição de :attr:`~module.__cached__` em um módulo enquanto falha na "
"definição de :attr:`__spec__.loader <importlib.machinery.ModuleSpec.cached>` "
"está descontinuado. No Python 3.15, :attr:`!__cached__` deixará de ser "
"definido ou levado em consideração pelo sistema de importação ou pela "
"biblioteca padrão. (:gh:`97879`)"

#: ../../deprecations/pending-removal-in-3.15.rst:11
msgid ""
"Setting :attr:`~module.__package__` on a module while failing to set :attr:"
"`__spec__.parent <importlib.machinery.ModuleSpec.parent>` is deprecated. In "
"Python 3.15, :attr:`!__package__` will cease to be set or take into "
"consideration by the import system or standard library. (:gh:`97879`)"
msgstr ""
"A definição de :attr:`~module.__package__` em um módulo enquanto falha na "
"definição de :attr:`__spec__.parent <importlib.machinery.ModuleSpec.parent>` "
"está descontinuado. No Python 3.15, :attr:`!__package__` deixará de ser "
"definido ou levado em consideração pelo sistema de importação ou pela "
"biblioteca padrão. (:gh:`97879`)"

#: ../../deprecations/pending-removal-in-3.15.rst:18
msgid ""
"The undocumented :func:`!ctypes.SetPointerType` function has been deprecated "
"since Python 3.13."
msgstr ""
"A função não documentada :func:`!ctypes.SetPointerType` foi descontinuada "
"desde o Python 3.13."

#: ../../deprecations/pending-removal-in-3.15.rst:23
msgid ""
"The obsolete and rarely used :class:`~http.server.CGIHTTPRequestHandler` has "
"been deprecated since Python 3.13. No direct replacement exists. *Anything* "
"is better than CGI to interface a web server with a request handler."
msgstr ""
"A classe obsoleta e raramente usada :class:`~http.server."
"CGIHTTPRequestHandler` foi descontinuada desde o Python 3.13. Não existe "
"substituição direta. *Qualquer coisa* é melhor que CGI para fazer a "
"interface de um servidor web com um manipulador de requisição."

#: ../../deprecations/pending-removal-in-3.15.rst:29
msgid ""
"The :option:`!--cgi` flag to the :program:`python -m http.server` command-"
"line interface has been deprecated since Python 3.13."
msgstr ""
"O sinalizador :option:`!--cgi` para a interface de linha de comando :program:"
"`python -m http.server` foi descontinuado desde o Python 3.13."

#: ../../deprecations/pending-removal-in-3.15.rst:32
msgid ":class:`locale`:"
msgstr ":class:`locale`:"

#: ../../deprecations/pending-removal-in-3.15.rst:34
msgid ""
"The :func:`~locale.getdefaultlocale` function has been deprecated since "
"Python 3.11. Its removal was originally planned for Python 3.13 (:gh:"
"`90817`), but has been postponed to Python 3.15. Use :func:`~locale."
"getlocale`, :func:`~locale.setlocale`, and :func:`~locale.getencoding` "
"instead. (Contributed by Hugo van Kemenade in :gh:`111187`.)"
msgstr ""
"A função :func:`~locale.getdefaultlocale` foi descontinuada desde o Python "
"3.11. Sua remoção foi planejada originalmente para o Python 3.13 (:gh:"
"`90817`), mas foi adiada para o Python 3.15. Em vez disso, use :func:"
"`~locale.getlocale`, :func:`~locale.setlocale` e :func:`~locale."
"getencoding`. (Contribuição de Hugo van Kemenade em :gh:`111187`.)"

#: ../../deprecations/pending-removal-in-3.15.rst:44
msgid ""
":meth:`.PurePath.is_reserved` has been deprecated since Python 3.13. Use :"
"func:`os.path.isreserved` to detect reserved paths on Windows."
msgstr ""
":meth:`.PurePath.is_reserved` foi descontinuado desde o Python 3.13. Use :"
"func:`os.path.isreserved` para detectar caminhos reservados no Windows."

#: ../../deprecations/pending-removal-in-3.15.rst:50
msgid ""
":func:`~platform.java_ver` has been deprecated since Python 3.13. This "
"function is only useful for Jython support, has a confusing API, and is "
"largely untested."
msgstr ""
":func:`~platform.java_ver` foi descontinuada desde o Python 3.13. Esta "
"função é útil apenas para suporte Jython, tem uma API confusa e é amplamente "
"não testada."

#: ../../deprecations/pending-removal-in-3.15.rst:54
msgid ":mod:`threading`:"
msgstr ":mod:`threading`:"

#: ../../deprecations/pending-removal-in-3.15.rst:56
msgid ""
":func:`~threading.RLock` will take no arguments in Python 3.15. Passing any "
"arguments has been deprecated since Python 3.14, as the  Python version does "
"not permit any arguments, but the C version allows any number of positional "
"or keyword arguments, ignoring every argument."
msgstr ""
":func:`~threading.RLock` não aceitará argumentos no Python 3.15. A passagem "
"quaisquer argumentos foi descontinuada desde o Python 3.14, pois a versão "
"Python não permite nenhum argumento, mas a versão C permite qualquer número "
"de argumentos posicionais ou nomeados, ignorando todos os argumentos."

#: ../../deprecations/pending-removal-in-3.15.rst:64
msgid ""
"The undocumented keyword argument syntax for creating :class:`~typing."
"NamedTuple` classes (e.g. ``Point = NamedTuple(\"Point\", x=int, y=int)``) "
"has been deprecated since Python 3.13. Use the class-based syntax or the "
"functional syntax instead."
msgstr ""
"A não-documentada sintaxe de argumento nomeado para criar classes :class:"
"`~typing.NamedTuple` (por exemplo, ``Point = NamedTuple(\"Point\", x=int, "
"y=int)``) foi descontinuada desde o Python 3.13. Em vez disso, use as "
"sintaxes baseada em classe ou funcional."

#: ../../deprecations/pending-removal-in-3.15.rst:70
msgid ""
"The :func:`typing.no_type_check_decorator` decorator function has been "
"deprecated since Python 3.13. After eight years in the :mod:`typing` module, "
"it has yet to be supported by any major type checker."
msgstr ""
"A função decoradora :func:`typing.no_type_check_decorator` foi descontinuada "
"desde o Python 3.13. Após oito anos no módulo :mod:`typing`, ela ainda não "
"foi suportada por nenhum verificador de tipo importante."

#: ../../deprecations/pending-removal-in-3.15.rst:77
msgid ""
"The :meth:`~wave.Wave_read.getmark`, :meth:`!setmark`, and :meth:`~wave."
"Wave_read.getmarkers` methods of the :class:`~wave.Wave_read` and :class:"
"`~wave.Wave_write` classes have been deprecated since Python 3.13."
msgstr ""
"Os métodos :meth:`~wave.Wave_read.getmark`, :meth:`!setmark` e :meth:`~wave."
"Wave_read.getmarkers` das classes :class:`~wave.Wave_read` e :class:`~wave."
"Wave_write` foram descontinuados desde o Python 3.13."

#: ../../deprecations/pending-removal-in-3.16.rst:2
msgid "Pending Removal in Python 3.16"
msgstr "Remoção pendente no Python 3.16"

#: ../../deprecations/pending-removal-in-3.16.rst:4
#: ../../deprecations/pending-removal-in-future.rst:12
msgid ":mod:`builtins`:"
msgstr ":mod:`builtins`:"

#: ../../deprecations/pending-removal-in-3.16.rst:6
msgid ""
"Bitwise inversion on boolean types, ``~True`` or ``~False`` has been "
"deprecated since Python 3.12, as it produces surprising and unintuitive "
"results (``-2`` and ``-1``). Use ``not x`` instead for the logical negation "
"of a Boolean. In the rare case that you need the bitwise inversion of the "
"underlying integer, convert to ``int`` explicitly (``~int(x)``)."
msgstr ""
"A inversão bit a bit em tipos booleanos, ``~True`` ou ``~False`` foi "
"descontinuada desde o Python 3.12, pois produz resultados surpreendentes e "
"não intuitivos (``-2`` e ``-1``). Em vez disso, use ``not x`` para a negação "
"lógica de um booleano. No caso raro de você precisar da inversão bit a bit "
"do inteiro subjacente, converta para ``int`` explicitamente (``~int(x)``)."

#: ../../deprecations/pending-removal-in-3.16.rst:15
msgid ""
"The ``'u'`` format code (:c:type:`wchar_t`) has been deprecated in "
"documentation since Python 3.3 and at runtime since Python 3.13. Use the "
"``'w'`` format code (:c:type:`Py_UCS4`) for Unicode characters instead."
msgstr ""
"O código de formato ``'u'`` (:c:type:`wchar_t`) foi descontinuado na "
"documentação desde o Python 3.3 e do ambiente de execução desde o Python "
"3.13. Em vez disso, use o código de formato ``'w'`` (:c:type:`Py_UCS4`) para "
"caracteres Unicode."

#: ../../deprecations/pending-removal-in-3.16.rst:21
msgid ":mod:`shutil`:"
msgstr ":mod:`shutil`:"

#: ../../deprecations/pending-removal-in-3.16.rst:23
msgid ""
"The :class:`!ExecError` exception has been deprecated since Python 3.14. It "
"has not been used by any function in :mod:`!shutil` since Python 3.4, and is "
"now an alias of :exc:`RuntimeError`."
msgstr ""
"A exceção :class:`!ExecError` foi descontinuada desde o Python 3.14. Ela não "
"foi usada por nenhuma função em :mod:`!shutil` desde o Python 3.4, e agora é "
"um alias de :exc:`RuntimeError`."

#: ../../deprecations/pending-removal-in-3.16.rst:28
msgid ":mod:`symtable`:"
msgstr ":mod:`symtable`:"

#: ../../deprecations/pending-removal-in-3.16.rst:30
msgid ""
"The :meth:`Class.get_methods <symtable.Class.get_methods>` method has been "
"deprecated since Python 3.14."
msgstr ""
"O método :meth:`Class.get_methods <symtable.Class.get_methods>` foi "
"descontinuado desde o Python 3.14."

#: ../../deprecations/pending-removal-in-3.16.rst:35
msgid ""
"The :func:`~sys._enablelegacywindowsfsencoding` function has been deprecated "
"since Python 3.13. Use the :envvar:`PYTHONLEGACYWINDOWSFSENCODING` "
"environment variable instead."
msgstr ""
"A função :func:`~sys._enablelegacywindowsfsencoding` foi descontinuada desde "
"o Python 3.13. Em vez disso, use a variável de ambiente :envvar:"
"`PYTHONLEGACYWINDOWSFSENCODING`."

#: ../../deprecations/pending-removal-in-3.16.rst:41
msgid ""
"The undocumented and unused :attr:`!TarFile.tarfile` attribute has been "
"deprecated since Python 3.13."
msgstr ""
"O atributo não documentado e não utilizado :attr:`!TarFile.tarfile` foi "
"descontinuado desde o Python 3.13."

#: ../../deprecations/c-api-pending-removal-in-future.rst:2
#: ../../deprecations/pending-removal-in-future.rst:2
msgid "Pending Removal in Future Versions"
msgstr "Remoção pendente em versões futuras"

#: ../../deprecations/pending-removal-in-future.rst:4
msgid ""
"The following APIs will be removed in the future, although there is "
"currently no date scheduled for their removal."
msgstr ""
"As APIs a seguir serão removidas no futuro, embora atualmente não haja uma "
"data agendada para sua remoção."

#: ../../deprecations/pending-removal-in-future.rst:7
msgid ""
":mod:`argparse`: Nesting argument groups and nesting mutually exclusive "
"groups are deprecated."
msgstr ""
":mod:`argparse`: o aninhamento de grupos de argumentos e o aninhamento de "
"grupos mutuamente exclusivos estão descontinuados."

#: ../../deprecations/pending-removal-in-future.rst:10
msgid ":mod:`array`'s ``'u'`` format code (:gh:`57281`)"
msgstr "código de formatação ``'u'`` do :mod:`array` (:gh:`57281`)"

#: ../../deprecations/pending-removal-in-future.rst:14
msgid "``bool(NotImplemented)``."
msgstr "``bool(NotImplemented)``."

#: ../../deprecations/pending-removal-in-future.rst:15
msgid ""
"Generators: ``throw(type, exc, tb)`` and ``athrow(type, exc, tb)`` signature "
"is deprecated: use ``throw(exc)`` and ``athrow(exc)`` instead, the single "
"argument signature."
msgstr ""
"Geradores: a assinatura ``throw(type, exc, tb)`` e ``athrow(type, exc, tb)`` "
"está descontinuada: use ``throw(exc)`` e ``athrow(exc)``, a assinatura com "
"um único argumento."

#: ../../deprecations/pending-removal-in-future.rst:18
msgid ""
"Currently Python accepts numeric literals immediately followed by keywords, "
"for example ``0in x``, ``1or x``, ``0if 1else 2``.  It allows confusing and "
"ambiguous expressions like ``[0x1for x in y]`` (which can be interpreted as "
"``[0x1 for x in y]`` or ``[0x1f or x in y]``).  A syntax warning is raised "
"if the numeric literal is immediately followed by one of keywords :keyword:"
"`and`, :keyword:`else`, :keyword:`for`, :keyword:`if`, :keyword:`in`, :"
"keyword:`is` and :keyword:`or`.  In a future release it will be changed to a "
"syntax error. (:gh:`87999`)"
msgstr ""
"Atualmente Python aceita literais numéricos imediatamente seguidos por "
"palavras reservadas como, por exemplo, ``0in x``, ``1or x``, ``0if 1else "
"2``. Ele permite expressões confusas e ambíguas como ``[0x1for x in y]`` "
"(que pode ser interpretada como ``[0x1 for x in y]`` ou ``[0x1f or x in "
"y]``). Um aviso de sintaxe é levantado se o literal numérico for "
"imediatamente seguido por uma das palavras reservadas :keyword:`and`, :"
"keyword:`else`, :keyword:`for`, :keyword:`if`, :keyword:`in` , :keyword:`is` "
"e :keyword:`or`. Em uma versão futura, será alterado para um erro de "
"sintaxe. (:gh:`87999`)"

#: ../../deprecations/pending-removal-in-future.rst:26
msgid ""
"Support for ``__index__()`` and ``__int__()`` method returning non-int type: "
"these methods will be required to return an instance of a strict subclass "
"of :class:`int`."
msgstr ""
"Suporte para métodos ``__index__()`` e ``__int__()`` retornando tipo não-"
"int: esses métodos serão necessários para retornar uma instância de uma "
"subclasse estrita de :class:`int`."

#: ../../deprecations/pending-removal-in-future.rst:29
msgid ""
"Support for ``__float__()`` method returning a strict subclass of :class:"
"`float`: these methods will be required to return an instance of :class:"
"`float`."
msgstr ""
"Suporte para o método ``__float__()`` retornando uma subclasse estrita de :"
"class:`float`: esses métodos serão necessários para retornar uma instância "
"de :class:`float`."

#: ../../deprecations/pending-removal-in-future.rst:32
msgid ""
"Support for ``__complex__()`` method returning a strict subclass of :class:"
"`complex`: these methods will be required to return an instance of :class:"
"`complex`."
msgstr ""
"Suporte para o método ``__complex__()`` retornando uma subclasse estrita de :"
"class:`complex`: esses métodos serão necessários para retornar uma instância "
"de :class:`complex`."

#: ../../deprecations/pending-removal-in-future.rst:35
msgid "Delegation of ``int()`` to ``__trunc__()`` method."
msgstr "Delegação do método ``int()`` para o ``__trunc__()``."

#: ../../deprecations/pending-removal-in-future.rst:36
msgid ""
"Passing a complex number as the *real* or *imag* argument in the :func:"
"`complex` constructor is now deprecated; it should only be passed as a "
"single positional argument. (Contributed by Serhiy Storchaka in :gh:"
"`109218`.)"
msgstr ""
"Passar um número complexo como argumento *real* ou *imag* no construtor :"
"func:`complex` agora está descontinuado; deve ser passado apenas como um "
"único argumento posicional. (Contribuição de Serhiy Storchaka em :gh:"
"`109218`.)"

#: ../../deprecations/pending-removal-in-future.rst:41
msgid ""
":mod:`calendar`: ``calendar.January`` and ``calendar.February`` constants "
"are deprecated and replaced by :data:`calendar.JANUARY` and :data:`calendar."
"FEBRUARY`. (Contributed by Prince Roshan in :gh:`103636`.)"
msgstr ""
":mod:`calendar`: as constantes ``calendar.January`` e ``calendar.February`` "
"foram descontinuadas e substituídas por :data:`calendar.JANUARY` e :data:"
"`calendar.FEBRUARY`. (Contribuição de Prince Roshan em :gh:`103636`.)"

#: ../../deprecations/pending-removal-in-future.rst:46
msgid ""
":attr:`codeobject.co_lnotab`: use the :meth:`codeobject.co_lines` method "
"instead."
msgstr ""
":attr:`codeobject.co_lnotab`: use o método :meth:`codeobject.co_lines`."

#: ../../deprecations/pending-removal-in-future.rst:49
msgid ":mod:`datetime`:"
msgstr ":mod:`datetime`:"

#: ../../deprecations/pending-removal-in-future.rst:51
msgid ""
":meth:`~datetime.datetime.utcnow`: use ``datetime.datetime.now(tz=datetime."
"UTC)``."
msgstr ""
":meth:`~datetime.datetime.utcnow`: use ``datetime.datetime.now(tz=datetime."
"UTC)``."

#: ../../deprecations/pending-removal-in-future.rst:53
msgid ""
":meth:`~datetime.datetime.utcfromtimestamp`: use ``datetime.datetime."
"fromtimestamp(timestamp, tz=datetime.UTC)``."
msgstr ""
":meth:`~datetime.datetime.utcfromtimestamp`: use ``datetime.datetime."
"fromtimestamp(timestamp, tz=datetime.UTC)``."

#: ../../deprecations/pending-removal-in-future.rst:56
msgid ":mod:`gettext`: Plural value must be an integer."
msgstr ":mod:`gettext`: o valor de plural deve ser um número inteiro."

#: ../../deprecations/pending-removal-in-future.rst:58
msgid ":mod:`importlib`:"
msgstr ":mod:`importlib`:"

#: ../../deprecations/pending-removal-in-future.rst:60
msgid "``load_module()`` method: use ``exec_module()`` instead."
msgstr "Método ``load_module()``: use ``exec_module()``."

#: ../../deprecations/pending-removal-in-future.rst:61
msgid ""
":func:`~importlib.util.cache_from_source` *debug_override* parameter is "
"deprecated: use the *optimization* parameter instead."
msgstr ""
"O parâmetro *debug_override* de :func:`~importlib.util.cache_from_source` "
"foi descontinuado: use o parâmetro *optimization*."

#: ../../deprecations/pending-removal-in-future.rst:64
msgid ":mod:`importlib.metadata`:"
msgstr ":mod:`importlib.metadata`:"

#: ../../deprecations/pending-removal-in-future.rst:66
msgid "``EntryPoints`` tuple interface."
msgstr "Interface de tupla ``EntryPoints``."

#: ../../deprecations/pending-removal-in-future.rst:67
msgid "Implicit ``None`` on return values."
msgstr "``None`` implícito nos valores de retorno."

#: ../../deprecations/pending-removal-in-future.rst:69
msgid ""
":mod:`logging`: the ``warn()`` method has been deprecated since Python 3.3, "
"use :meth:`~logging.warning` instead."
msgstr ""
":mod:`logging`: o método ``warn()`` foi descontinuado desde o Python 3.3, "
"use :meth:`~logging.warning`."

#: ../../deprecations/pending-removal-in-future.rst:72
msgid ""
":mod:`mailbox`: Use of StringIO input and text mode is deprecated, use "
"BytesIO and binary mode instead."
msgstr ""
":mod:`mailbox`: o uso da entrada StringIO e do modo de texto foi "
"descontinuado, use BytesIO e o modo binário."

#: ../../deprecations/pending-removal-in-future.rst:75
msgid ""
":mod:`os`: Calling :func:`os.register_at_fork` in multi-threaded process."
msgstr ":mod:`os`: chamar :func:`os.register_at_fork` em processo multithread."

#: ../../deprecations/pending-removal-in-future.rst:77
msgid ""
":class:`!pydoc.ErrorDuringImport`: A tuple value for *exc_info* parameter is "
"deprecated, use an exception instance."
msgstr ""
":class:`!pydoc.ErrorDuringImport`: Um valor de tupla para o parâmetro "
"*exc_info* foi descontinuado, use uma instância de exceção."

#: ../../deprecations/pending-removal-in-future.rst:80
msgid ""
":mod:`re`: More strict rules are now applied for numerical group references "
"and group names in regular expressions.  Only sequence of ASCII digits is "
"now accepted as a numerical reference.  The group name in bytes patterns and "
"replacement strings can now only contain ASCII letters and digits and "
"underscore. (Contributed by Serhiy Storchaka in :gh:`91760`.)"
msgstr ""
":mod:`re`: regras mais rigorosas agora são aplicadas para referências "
"numéricas de grupos e nomes de grupos em expressões regulares. Apenas a "
"sequência de dígitos ASCII agora é aceita como referência numérica. O nome "
"do grupo em padrões de bytes e strings de substituição agora pode conter "
"apenas letras e dígitos ASCII e sublinhado. (Contribuição de Serhiy "
"Storchaka em :gh:`91760`.)"

#: ../../deprecations/pending-removal-in-future.rst:87
msgid ""
":mod:`!sre_compile`, :mod:`!sre_constants` and :mod:`!sre_parse` modules."
msgstr ""
"Módulos :mod:`!sre_compile`, :mod:`!sre_constants` e :mod:`!sre_parse`."

#: ../../deprecations/pending-removal-in-future.rst:89
msgid ""
":mod:`shutil`: :func:`~shutil.rmtree`'s *onerror* parameter is deprecated in "
"Python 3.12; use the *onexc* parameter instead."
msgstr ""
":mod:`shutil`: o parâmetro *onerror* de :func:`~shutil.rmtree` foi "
"descontinuado no Python 3.12; use o parâmetro *onexc*."

#: ../../deprecations/pending-removal-in-future.rst:92
msgid ":mod:`ssl` options and protocols:"
msgstr "Protocolos e opções de :mod:`ssl`"

#: ../../deprecations/pending-removal-in-future.rst:94
msgid ":class:`ssl.SSLContext` without protocol argument is deprecated."
msgstr ":class:`ssl.SSLContext` sem argumento de protocolo foi descontinuado."

#: ../../deprecations/pending-removal-in-future.rst:95
msgid ""
":class:`ssl.SSLContext`: :meth:`~ssl.SSLContext.set_npn_protocols` and :meth:"
"`!selected_npn_protocol` are deprecated: use ALPN instead."
msgstr ""
":class:`ssl.SSLContext`: :meth:`~ssl.SSLContext.set_npn_protocols` e :meth:`!"
"selected_npn_protocol` foram descontinuados, use ALPN."

#: ../../deprecations/pending-removal-in-future.rst:98
msgid "``ssl.OP_NO_SSL*`` options"
msgstr "Opções de ``ssl.OP_NO_SSL*``"

#: ../../deprecations/pending-removal-in-future.rst:99
msgid "``ssl.OP_NO_TLS*`` options"
msgstr "Opções de ``ssl.OP_NO_TLS*``"

#: ../../deprecations/pending-removal-in-future.rst:100
msgid "``ssl.PROTOCOL_SSLv3``"
msgstr "``ssl.PROTOCOL_SSLv3``"

#: ../../deprecations/pending-removal-in-future.rst:101
msgid "``ssl.PROTOCOL_TLS``"
msgstr "``ssl.PROTOCOL_TLS``"

#: ../../deprecations/pending-removal-in-future.rst:102
msgid "``ssl.PROTOCOL_TLSv1``"
msgstr "``ssl.PROTOCOL_TLSv1``"

#: ../../deprecations/pending-removal-in-future.rst:103
msgid "``ssl.PROTOCOL_TLSv1_1``"
msgstr "``ssl.PROTOCOL_TLSv1_1``"

#: ../../deprecations/pending-removal-in-future.rst:104
msgid "``ssl.PROTOCOL_TLSv1_2``"
msgstr "``ssl.PROTOCOL_TLSv1_2``"

#: ../../deprecations/pending-removal-in-future.rst:105
msgid "``ssl.TLSVersion.SSLv3``"
msgstr "``ssl.TLSVersion.SSLv3``"

#: ../../deprecations/pending-removal-in-future.rst:106
msgid "``ssl.TLSVersion.TLSv1``"
msgstr "``ssl.TLSVersion.TLSv1``"

#: ../../deprecations/pending-removal-in-future.rst:107
msgid "``ssl.TLSVersion.TLSv1_1``"
msgstr "``ssl.TLSVersion.TLSv1_1``"

#: ../../deprecations/pending-removal-in-future.rst:109
msgid ""
":func:`sysconfig.is_python_build` *check_home* parameter is deprecated and "
"ignored."
msgstr ""
"O parâmetro *check_home* de :func:`sysconfig.is_python_build` foi "
"descontinuado e é ignorado."

#: ../../deprecations/pending-removal-in-future.rst:112
msgid ":mod:`threading` methods:"
msgstr "Métodos de :mod:`threading`:"

#: ../../deprecations/pending-removal-in-future.rst:114
msgid ""
":meth:`!threading.Condition.notifyAll`: use :meth:`~threading.Condition."
"notify_all`."
msgstr ""
":meth:`!threading.Condition.notifyAll`: use :meth:`~threading.Condition."
"notify_all`."

#: ../../deprecations/pending-removal-in-future.rst:115
msgid ":meth:`!threading.Event.isSet`: use :meth:`~threading.Event.is_set`."
msgstr ":meth:`!threading.Event.isSet`: use :meth:`~threading.Event.is_set`."

#: ../../deprecations/pending-removal-in-future.rst:116
msgid ""
":meth:`!threading.Thread.isDaemon`, :meth:`threading.Thread.setDaemon`: use :"
"attr:`threading.Thread.daemon` attribute."
msgstr ""
":meth:`!threading.Thread.isDaemon`, :meth:`threading.Thread.setDaemon`: use "
"o atributo :attr:`threading.Thread.daemon`."

#: ../../deprecations/pending-removal-in-future.rst:118
msgid ""
":meth:`!threading.Thread.getName`, :meth:`threading.Thread.setName`: use :"
"attr:`threading.Thread.name` attribute."
msgstr ""
":meth:`!threading.Thread.getName`, :meth:`threading.Thread.setName`: use o "
"atributo :attr:`threading.Thread.name`."

#: ../../deprecations/pending-removal-in-future.rst:120
msgid ":meth:`!threading.currentThread`: use :meth:`threading.current_thread`."
msgstr ""
":meth:`!threading.currentThread`: use :meth:`threading.current_thread`."

#: ../../deprecations/pending-removal-in-future.rst:121
msgid ":meth:`!threading.activeCount`: use :meth:`threading.active_count`."
msgstr ":meth:`!threading.activeCount`: use :meth:`threading.active_count`."

#: ../../deprecations/pending-removal-in-future.rst:123
msgid ":class:`typing.Text` (:gh:`92332`)."
msgstr ":class:`typing.Text` (:gh:`92332`)."

#: ../../deprecations/pending-removal-in-future.rst:125
msgid ""
":class:`unittest.IsolatedAsyncioTestCase`: it is deprecated to return a "
"value that is not ``None`` from a test case."
msgstr ""
":class:`unittest.IsolatedAsyncioTestCase`: foi descontinuado retornar um "
"valor que não seja ``None`` de um caso de teste."

#: ../../deprecations/pending-removal-in-future.rst:128
msgid ""
":mod:`urllib.parse` deprecated functions: :func:`~urllib.parse.urlparse` "
"instead"
msgstr ""
"Funções descontinuadas de :mod:`urllib.parse`: use :func:`~urllib.parse."
"urlparse`"

#: ../../deprecations/pending-removal-in-future.rst:130
msgid "``splitattr()``"
msgstr "``splitattr()``"

#: ../../deprecations/pending-removal-in-future.rst:131
msgid "``splithost()``"
msgstr "``splithost()``"

#: ../../deprecations/pending-removal-in-future.rst:132
msgid "``splitnport()``"
msgstr "``splitnport()``"

#: ../../deprecations/pending-removal-in-future.rst:133
msgid "``splitpasswd()``"
msgstr "``splitpasswd()``"

#: ../../deprecations/pending-removal-in-future.rst:134
msgid "``splitport()``"
msgstr "``splitport()``"

#: ../../deprecations/pending-removal-in-future.rst:135
msgid "``splitquery()``"
msgstr "``splitquery()``"

#: ../../deprecations/pending-removal-in-future.rst:136
msgid "``splittag()``"
msgstr "``splittag()``"

#: ../../deprecations/pending-removal-in-future.rst:137
msgid "``splittype()``"
msgstr "``splittype()``"

#: ../../deprecations/pending-removal-in-future.rst:138
msgid "``splituser()``"
msgstr "``splituser()``"

#: ../../deprecations/pending-removal-in-future.rst:139
msgid "``splitvalue()``"
msgstr "``splitvalue()``"

#: ../../deprecations/pending-removal-in-future.rst:140
msgid "``to_bytes()``"
msgstr "``to_bytes()``"

#: ../../deprecations/pending-removal-in-future.rst:142
msgid ""
":mod:`urllib.request`: :class:`~urllib.request.URLopener` and :class:"
"`~urllib.request.FancyURLopener` style of invoking requests is deprecated. "
"Use newer :func:`~urllib.request.urlopen` functions and methods."
msgstr ""
":mod:`urllib.request`: o estilo de :class:`~urllib.request.URLopener` e :"
"class:`~urllib.request.FancyURLopener` de invocar solicitações foi "
"descontinuado. Use as mais novas funções e métodos :func:`~urllib.request."
"urlopen`."

#: ../../deprecations/pending-removal-in-future.rst:146
msgid ""
":mod:`wsgiref`: ``SimpleHandler.stdout.write()`` should not do partial "
"writes."
msgstr ""
":mod:`wsgiref`: ``SimpleHandler.stdout.write()`` não deve fazer gravações "
"parciais."

#: ../../deprecations/pending-removal-in-future.rst:149
msgid ""
":mod:`xml.etree.ElementTree`: Testing the truth value of an :class:`~xml."
"etree.ElementTree.Element` is deprecated. In a future release it will always "
"return ``True``. Prefer explicit ``len(elem)`` or ``elem is not None`` tests "
"instead."
msgstr ""
":mod:`xml.etree.ElementTree`: testar o valor verdade de um :class:`~xml."
"etree.ElementTree.Element` está descontinuado. Em um lançamento futuro isso "
"sempre retornará ``True``. Em vez disso, prefira os testes explícitos "
"``len(elem)`` ou ``elem is not None``."

#: ../../deprecations/pending-removal-in-future.rst:154
msgid ""
":meth:`zipimport.zipimporter.load_module` is deprecated: use :meth:"
"`~zipimport.zipimporter.exec_module` instead."
msgstr ""
":meth:`zipimport.zipimporter.load_module` foi descontinuado: use :meth:"
"`~zipimport.zipimporter.exec_module`."

#: ../../whatsnew/3.13.rst:1955
msgid "CPython Bytecode Changes"
msgstr "Alterações de bytecode do CPython"

#: ../../whatsnew/3.13.rst:1957
msgid ""
"The oparg of :opcode:`YIELD_VALUE` is now ``1`` if the yield is part of a "
"yield-from or await, and ``0`` otherwise. The oparg of :opcode:`RESUME` was "
"changed to add a bit indicating if the except-depth is 1, which is needed to "
"optimize closing of generators. (Contributed by Irit Katriel in :gh:"
"`111354`.)"
msgstr ""
"O oparg de :opcode:`YIELD_VALUE` agora é ``1`` se o yield fizer parte de um "
"yield-from ou um await, e ``0`` caso contrário. O oparg de :opcode:`RESUME` "
"foi alterado para adicionar um bit indicando se a profundidade de exceção é "
"1, o que é necessário para otimizar o fechamento dos geradores. "
"(Contribuição de Irit Katriel em :gh:`111354`.)"

#: ../../whatsnew/3.13.rst:1965
msgid "C API Changes"
msgstr "Alterações na API C"

#: ../../whatsnew/3.13.rst:1970
msgid ""
"Add the :ref:`PyMonitoring C API <c-api-monitoring>` for generating :pep:"
"`669` monitoring events:"
msgstr ""
"Adiciona a :ref:`API C PyMonitoring C <c-api-monitoring>` para gerar eventos "
"de monitoramento da :pep:`669`:"

#: ../../whatsnew/3.13.rst:1973
msgid ":c:type:`PyMonitoringState`"
msgstr ":c:type:`PyMonitoringState`"

#: ../../whatsnew/3.13.rst:1974
msgid ":c:func:`PyMonitoring_FirePyStartEvent`"
msgstr ":c:func:`PyMonitoring_FirePyStartEvent`"

#: ../../whatsnew/3.13.rst:1975
msgid ":c:func:`PyMonitoring_FirePyResumeEvent`"
msgstr ":c:func:`PyMonitoring_FirePyResumeEvent`"

#: ../../whatsnew/3.13.rst:1976
msgid ":c:func:`PyMonitoring_FirePyReturnEvent`"
msgstr ":c:func:`PyMonitoring_FirePyReturnEvent`"

#: ../../whatsnew/3.13.rst:1977
msgid ":c:func:`PyMonitoring_FirePyYieldEvent`"
msgstr ":c:func:`PyMonitoring_FirePyYieldEvent`"

#: ../../whatsnew/3.13.rst:1978
msgid ":c:func:`PyMonitoring_FireCallEvent`"
msgstr ":c:func:`PyMonitoring_FireCallEvent`"

#: ../../whatsnew/3.13.rst:1979
msgid ":c:func:`PyMonitoring_FireLineEvent`"
msgstr ":c:func:`PyMonitoring_FireLineEvent`"

#: ../../whatsnew/3.13.rst:1980
msgid ":c:func:`PyMonitoring_FireJumpEvent`"
msgstr ":c:func:`PyMonitoring_FireJumpEvent`"

#: ../../whatsnew/3.13.rst:1981
msgid ":c:func:`PyMonitoring_FireBranchEvent`"
msgstr ":c:func:`PyMonitoring_FireBranchEvent`"

#: ../../whatsnew/3.13.rst:1982
msgid ":c:func:`PyMonitoring_FireCReturnEvent`"
msgstr ":c:func:`PyMonitoring_FireCReturnEvent`"

#: ../../whatsnew/3.13.rst:1983
msgid ":c:func:`PyMonitoring_FirePyThrowEvent`"
msgstr ":c:func:`PyMonitoring_FirePyThrowEvent`"

#: ../../whatsnew/3.13.rst:1984
msgid ":c:func:`PyMonitoring_FireRaiseEvent`"
msgstr ":c:func:`PyMonitoring_FireRaiseEvent`"

#: ../../whatsnew/3.13.rst:1985
msgid ":c:func:`PyMonitoring_FireCRaiseEvent`"
msgstr ":c:func:`PyMonitoring_FireCRaiseEvent`"

#: ../../whatsnew/3.13.rst:1986
msgid ":c:func:`PyMonitoring_FireReraiseEvent`"
msgstr ":c:func:`PyMonitoring_FireReraiseEvent`"

#: ../../whatsnew/3.13.rst:1987
msgid ":c:func:`PyMonitoring_FireExceptionHandledEvent`"
msgstr ":c:func:`PyMonitoring_FireExceptionHandledEvent`"

#: ../../whatsnew/3.13.rst:1988
msgid ":c:func:`PyMonitoring_FirePyUnwindEvent`"
msgstr ":c:func:`PyMonitoring_FirePyUnwindEvent`"

#: ../../whatsnew/3.13.rst:1989
msgid ":c:func:`PyMonitoring_FireStopIterationEvent`"
msgstr ":c:func:`PyMonitoring_FireStopIterationEvent`"

#: ../../whatsnew/3.13.rst:1990
msgid ":c:func:`PyMonitoring_EnterScope`"
msgstr ":c:func:`PyMonitoring_EnterScope`"

#: ../../whatsnew/3.13.rst:1991
msgid ":c:func:`PyMonitoring_ExitScope`"
msgstr ":c:func:`PyMonitoring_ExitScope`"

#: ../../whatsnew/3.13.rst:1993
msgid "(Contributed by Irit Katriel in :gh:`111997`)."
msgstr "(Contribuição de Irit Katriel em :gh:`111997`)."

#: ../../whatsnew/3.13.rst:1995
msgid ""
"Add :c:type:`PyMutex`, a lightweight mutex that occupies a single byte, and "
"the new :c:func:`PyMutex_Lock` and :c:func:`PyMutex_Unlock` functions. :c:"
"func:`!PyMutex_Lock` will release the :term:`GIL` (if currently held) if the "
"operation needs to block. (Contributed by Sam Gross in :gh:`108724`.)"
msgstr ""
"Adiciona :c:type:`PyMutex`, um mutex leve que ocupa um único byte, e as "
"novas funções :c:func:`PyMutex_Lock` e :c:func:`PyMutex_Unlock`. :c:func:`!"
"PyMutex_Lock` irá liberar a GIL (se atualmente mantida) se a operação "
"precisar de bloqueio. (Contribuição de Sam Gross em :gh:`108724`.)"

#: ../../whatsnew/3.13.rst:2001
msgid ""
"Add the :ref:`PyTime C API <c-api-time>` to provide access to system clocks:"
msgstr ""
"Adiciona a :doc:`API C PyTime </c-api/time>`, fornecendo acesso aos relógios "
"do sistema."

#: ../../whatsnew/3.13.rst:2003
msgid ":c:type:`PyTime_t`."
msgstr ":c:type:`PyTime_t`."

#: ../../whatsnew/3.13.rst:2004
msgid ":c:var:`PyTime_MIN` and :c:var:`PyTime_MAX`."
msgstr ":c:var:`PyTime_MIN` e :c:var:`PyTime_MAX`."

#: ../../whatsnew/3.13.rst:2005
msgid ":c:func:`PyTime_AsSecondsDouble`."
msgstr ":c:func:`PyTime_AsSecondsDouble`."

#: ../../whatsnew/3.13.rst:2006
msgid ":c:func:`PyTime_Monotonic`."
msgstr ":c:func:`PyTime_Monotonic`."

#: ../../whatsnew/3.13.rst:2007
msgid ":c:func:`PyTime_MonotonicRaw`."
msgstr ":c:func:`PyTime_MonotonicRaw`."

#: ../../whatsnew/3.13.rst:2008
msgid ":c:func:`PyTime_PerfCounter`."
msgstr ":c:func:`PyTime_PerfCounter`."

#: ../../whatsnew/3.13.rst:2009
msgid ":c:func:`PyTime_PerfCounterRaw`."
msgstr ":c:func:`PyTime_PerfCounterRaw`."

#: ../../whatsnew/3.13.rst:2010
msgid ":c:func:`PyTime_Time`."
msgstr ":c:func:`PyTime_Time`."

#: ../../whatsnew/3.13.rst:2011
msgid ":c:func:`PyTime_TimeRaw`."
msgstr ":c:func:`PyTime_TimeRaw`."

#: ../../whatsnew/3.13.rst:2013
msgid "(Contributed by Victor Stinner and Petr Viktorin in :gh:`110850`.)"
msgstr "(Contribuição de Victor Stinner e Petr Viktorin em :gh:`110850`.)"

#: ../../whatsnew/3.13.rst:2015
msgid ""
"Add the :c:func:`PyDict_ContainsString` function with the same behavior as :"
"c:func:`PyDict_Contains`, but *key* is specified as a :c:expr:`const char*` "
"UTF-8 encoded bytes string, rather than a :c:expr:`PyObject*`. (Contributed "
"by Victor Stinner in :gh:`108314`.)"
msgstr ""
"Adiciona a função :c:func:`PyDict_ContainsString` com o mesmo comportamento "
"de :c:func:`PyDict_Contains`, mas *key* é especificada como uma string de "
"bytes :c:expr:`const char*` codificada em UTF-8, em vez de um :c:expr:"
"`PyObject*`. (Contribuição de Victor Stinner em :gh:`108314`.)"

#: ../../whatsnew/3.13.rst:2021
msgid ""
"Add the :c:func:`PyDict_GetItemRef` and :c:func:`PyDict_GetItemStringRef` "
"functions, which behave similarly to :c:func:`PyDict_GetItemWithError`, but "
"return a  :term:`strong reference` instead of a :term:`borrowed reference`. "
"Moreover, these functions return ``-1`` on error, removing the need to "
"check :c:func:`!PyErr_Occurred`. (Contributed by Victor Stinner in :gh:"
"`106004`.)"
msgstr ""
"Adiciona as funções :c:func:`PyDict_GetItemRef` e :c:func:"
"`PyDict_GetItemStringRef` functions, que são semelhantes a :c:func:"
"`PyDict_GetItemWithError`, mas retornam uma  :term:`referência forte` em vez "
"de uma :term:`referência emprestada`. Além disso, essas funções retornam "
"``-1`` em caso de erro, dispensando a necessidade de checar :c:func:`!"
"PyErr_Occurred`. (Contribuição de Victor Stinner em :gh:`106004`.)"

#: ../../whatsnew/3.13.rst:2029
msgid ""
"Add the :c:func:`PyDict_SetDefaultRef` function, which behaves similarly to :"
"c:func:`PyDict_SetDefault`, but returns a :term:`strong reference` instead "
"of a :term:`borrowed reference`. This function returns ``-1`` on error, "
"``0`` on insertion, and ``1`` if the key was already present in the "
"dictionary. (Contributed by Sam Gross in :gh:`112066`.)"
msgstr ""
"Adiciona a função :c:func:`PyDict_SetDefaultRef`, que é semelhante a :c:func:"
"`PyDict_SetDefault`, mas retorna uma :term:`referência forte` em vez de uma :"
"term:`referência emprestada`. Esta função retorna ``-1`` em caso de erro, "
"``0`` na inserção e ``1`` se a chave já estivesse presente no dicionário. "
"(Contribuição de Sam Gross em :gh:`112066`.)"

#: ../../whatsnew/3.13.rst:2037
msgid ""
"Add the :c:func:`PyDict_Pop` and :c:func:`PyDict_PopString` functions to "
"remove a key from a dictionary and optionally return the removed value. This "
"is similar to :meth:`dict.pop`, though there is no default value, and :exc:"
"`KeyError` is not raised for missing keys. (Contributed by Stefan Behnel and "
"Victor Stinner in :gh:`111262`.)"
msgstr ""
"Adiciona as funções :c:func:`PyDict_Pop` e :c:func:`PyDict_PopString` para "
"remover uma chave de um dicionário e, opcionalmente, retornam o valor "
"removido. Isto é semelhante a :meth:`dict.pop`, mas sem o valor padrão e sem "
"levantar :exc:`KeyError` se a chave estiver ausente. (Contribuição de Stefan "
"Behnel e Victor Stinner em :gh:`111262`.)"

#: ../../whatsnew/3.13.rst:2044
msgid ""
"Add the :c:func:`PyMapping_GetOptionalItem` and :c:func:"
"`PyMapping_GetOptionalItemString` functions as alternatives to :c:func:"
"`PyObject_GetItem` and :c:func:`PyMapping_GetItemString` respectively. The "
"new functions do not raise :exc:`KeyError` if the requested key is missing "
"from the mapping. These variants are more convenient and faster if a missing "
"key should not be treated as a failure. (Contributed by Serhiy Storchaka in :"
"gh:`106307`.)"
msgstr ""
"Adiciona as funções :c:func:`PyMapping_GetOptionalItem` e :c:func:"
"`PyMapping_GetOptionalItemString` como alternativas a :c:func:"
"`PyObject_GetAttr` e :c:func:`PyObject_GetAttrString`, respectivamente. As "
"novas funções não levantam :exc:`KeyError` se o atributo não for encontrado "
"no mapeamento. Essas variantes são mais convenientes e rápidas se o atributo "
"ausente não for tratado como uma falha. (Contribuição de Serhiy Storchaka "
"em :gh:`106307`.)"

#: ../../whatsnew/3.13.rst:2054
msgid ""
"Add the :c:func:`PyObject_GetOptionalAttr` and :c:func:"
"`PyObject_GetOptionalAttrString` functions as alternatives to  :c:func:"
"`PyObject_GetAttr` and :c:func:`PyObject_GetAttrString` respectively. The "
"new functions do not raise :exc:`AttributeError` if the requested attribute "
"is not found on the object. These variants are more convenient and faster if "
"the missing attribute should not be treated as a failure. (Contributed by "
"Serhiy Storchaka in :gh:`106521`.)"
msgstr ""
"Adiciona as funções :c:func:`PyObject_GetOptionalAttr` e :c:func:"
"`PyObject_GetOptionalAttrString`, variantes de :c:func:`PyObject_GetAttr` e :"
"c:func:`PyObject_GetAttrString`, respectivamente. Essas novas funções não "
"levantam :exc:`AttributeError` se o atributo não for encontrado. Essas "
"variantes são mais convenientes e rápidas se o atributo ausente não for "
"tratado como uma falha. (Contribuição de Serhiy Storchaka em :gh:`106521`.)"

#: ../../whatsnew/3.13.rst:2064
msgid ""
"Add the :c:func:`PyErr_FormatUnraisable` function as an extension to :c:func:"
"`PyErr_WriteUnraisable` that allows customizing the warning message. "
"(Contributed by Serhiy Storchaka in :gh:`108082`.)"
msgstr ""
"Adiciona a função :c:func:`PyErr_FormatUnraisable` como uma extensão para :c:"
"func:`PyErr_WriteUnraisable`, que permite personalizar a mensagem de aviso. "
"(Contribuição de Serhiy Storchaka em :gh:`108082`.)"

#: ../../whatsnew/3.13.rst:2069
msgid ""
"Add new functions that return a :term:`strong reference` instead of a :term:"
"`borrowed reference` for frame locals, globals, and builtins, as part of :"
"ref:`PEP 667 <whatsnew313-locals-semantics>`:"
msgstr ""
"Adiciona novas funções que retornam uma :term:`referência forte` em vez de "
"uma :term:`referência emprestada` para quadros locais, globais, e embutidos, "
"como parte de :ref:`PEP 667 <whatsnew313-locals-semantics>`:"

#: ../../whatsnew/3.13.rst:2073
msgid ":c:func:`PyEval_GetFrameBuiltins` replaces :c:func:`PyEval_GetBuiltins`"
msgstr ""
":c:func:`PyEval_GetFrameBuiltins` substitui :c:func:`PyEval_GetBuiltins`"

#: ../../whatsnew/3.13.rst:2074
msgid ":c:func:`PyEval_GetFrameGlobals` replaces :c:func:`PyEval_GetGlobals`"
msgstr ":c:func:`PyEval_GetFrameGlobals` substitui :c:func:`PyEval_GetGlobals`"

#: ../../whatsnew/3.13.rst:2075
msgid ":c:func:`PyEval_GetFrameLocals` replaces :c:func:`PyEval_GetLocals`"
msgstr ":c:func:`PyEval_GetFrameLocals` substitui :c:func:`PyEval_GetLocals`"

#: ../../whatsnew/3.13.rst:2077
msgid "(Contributed by Mark Shannon and Tian Gao in :gh:`74929`.)"
msgstr "(Contribuição de Mark Shannon e Tian Gao em :gh:`74929`.)"

#: ../../whatsnew/3.13.rst:2079
msgid ""
"Add the :c:func:`Py_GetConstant` and :c:func:`Py_GetConstantBorrowed` "
"functions to get :term:`strong <strong reference>` or :term:`borrowed "
"<borrowed reference>` references to constants. For example, "
"``Py_GetConstant(Py_CONSTANT_ZERO)`` returns a strong reference to the "
"constant zero. (Contributed by Victor  Stinner in :gh:`115754`.)"
msgstr ""
"Adiciona as funções :c:func:`Py_GetConstant` e :c:func:"
"`Py_GetConstantBorrowed` para referências :term:`fortes <strong reference>` "
"ou :term:`emprestadas <borrowed reference>` para constantes. Por exemplo, "
"``Py_GetConstant(Py_CONSTANT_ZERO)`` retorna uma :term:`referência forte` "
"para a constante zero. (Contribuição de Victor Stinner em :gh:`115754`.)"

#: ../../whatsnew/3.13.rst:2086
msgid ""
"Add the :c:func:`PyImport_AddModuleRef` function as a replacement for :c:"
"func:`PyImport_AddModule` that returns a :term:`strong reference` instead of "
"a :term:`borrowed reference`. (Contributed by Victor Stinner in :gh:"
"`105922`.)"
msgstr ""
"Adiciona a função :c:func:`PyImport_AddModuleRef` como uma substituta para :"
"c:func:`PyImport_AddModule` mas retorna uma :term:`referência forte` em vez "
"de uma :term:`referência emprestada`. (Contribuição de Victor Stinner em :gh:"
"`105922`.)"

#: ../../whatsnew/3.13.rst:2091
msgid ""
"Add the :c:func:`Py_IsFinalizing` function to check whether the main Python "
"interpreter is :term:`shutting down <interpreter shutdown>`. (Contributed by "
"Victor Stinner in :gh:`108014`.)"
msgstr ""
"Adiciona a função :c:func:`Py_IsFinalizing` para verificar se o "
"interpretador Python principal está :term:`sendo desligado <interpreter "
"shutdown>`. (Contribuição de Victor Stinner em :gh:`108014`.)"

#: ../../whatsnew/3.13.rst:2096
msgid ""
"Add the :c:func:`PyList_GetItemRef` function as a replacement for :c:func:"
"`PyList_GetItem` that returns a :term:`strong reference` instead of a :term:"
"`borrowed reference`. (Contributed by Sam Gross in :gh:`114329`.)"
msgstr ""
"Adiciona a função :c:func:`PyList_GetItemRef` como uma substituta para :c:"
"func:`PyList_GetItem` mas que retorna uma :term:`referência forte` em vez de "
"uma :term:`referência emprestada`. (Contribuição de Sam Gross em :gh:"
"`114329`.)"

#: ../../whatsnew/3.13.rst:2101
msgid ""
"Add the :c:func:`PyList_Extend` and :c:func:`PyList_Clear` functions, "
"mirroring the Python :meth:`!list.extend` and :meth:`!list.clear` methods. "
"(Contributed by Victor Stinner in :gh:`111138`.)"
msgstr ""
"Adiciona as funções :c:func:`PyList_Extend` e :c:func:`PyList_Clear`, "
"espelhando os métodos :meth:`!list.extend` e :meth:`!list.clear` do Python. "
"(Contribuição de Victor Stinner em :gh:`111138`.)"

#: ../../whatsnew/3.13.rst:2105
msgid ""
"Add the :c:func:`PyLong_AsInt` function. It behaves similarly to :c:func:"
"`PyLong_AsLong`, but stores the result in a C :c:expr:`int` instead of a C :"
"c:expr:`long`. (Contributed by Victor Stinner in :gh:`108014`.)"
msgstr ""
"Adiciona a função :c:func:`PyLong_AsInt`, semelhante à :c:func:"
"`PyLong_AsLong`, mas armazena o resultado em um :c:expr:`int` em vez de um :"
"c:expr:`long` em C. (Contribuição de Victor Stinner em :gh:`108014`.)"

#: ../../whatsnew/3.13.rst:2110
msgid ""
"Add the :c:func:`PyLong_AsNativeBytes`, :c:func:`PyLong_FromNativeBytes`, "
"and :c:func:`PyLong_FromUnsignedNativeBytes` functions to simplify "
"converting between native integer types and Python :class:`int` objects. "
"(Contributed by Steve Dower in :gh:`111140`.)"
msgstr ""
"Adiciona as funções :c:func:`PyLong_AsNativeBytes`, :c:func:"
"`PyLong_FromNativeBytes` e :c:func:`PyLong_FromUnsignedNativeBytes` para "
"simplificar a conversão entre tipos inteiros nativos e objetos :class:`int` "
"do Python. (Contribuição de Steve Dower em :gh:`111140`.)"

#: ../../whatsnew/3.13.rst:2116
msgid ""
"Add :c:func:`PyModule_Add` function, which is similar to :c:func:"
"`PyModule_AddObjectRef` and :c:func:`PyModule_AddObject`, but always steals "
"a reference to the value. (Contributed by Serhiy Storchaka in :gh:`86493`.)"
msgstr ""
"Adiciona a função :c:func:`PyModule_Add`, que é semelhante a :c:func:"
"`PyModule_AddObjectRef` e :c:func:`PyModule_AddObject`, mas sempre rouba uma "
"referência ao valor. (Contribuição de Serhiy Storchaka em :gh:`86493`.)"

#: ../../whatsnew/3.13.rst:2121
msgid ""
"Add the :c:func:`PyObject_GenericHash` function that implements the default "
"hashing function of a Python object. (Contributed by Serhiy Storchaka in :gh:"
"`113024`.)"
msgstr ""
"Adiciona a função :c:func:`PyObject_GenericHash` que implementa a função "
"hashing padrão de um objeto Python. (Contribuição de Serhiy Storchaka em :gh:"
"`113024`.)"

#: ../../whatsnew/3.13.rst:2125
msgid ""
"Add the :c:func:`Py_HashPointer` function to hash a raw pointer. "
"(Contributed by Victor Stinner in :gh:`111545`.)"
msgstr ""
"Adiciona a função :c:func:`Py_HashPointer` para fazer hash de um ponteiro. "
"(Contribuição de Victor Stinner em :gh:`111545`.)"

#: ../../whatsnew/3.13.rst:2128
msgid ""
"Add the :c:func:`PyObject_VisitManagedDict` and :c:func:"
"`PyObject_ClearManagedDict` functions. which must be called by the traverse "
"and clear functions of a type using the :c:macro:`Py_TPFLAGS_MANAGED_DICT` "
"flag. The `pythoncapi-compat project`_ can be used to use these functions "
"with Python 3.11 and 3.12. (Contributed by Victor Stinner in :gh:`107073`.)"
msgstr ""
"Adiciona as funções :c:func:`PyObject_VisitManagedDict` e :c:func:"
"`PyObject_ClearManagedDict` que devem ser chamadas pelas funções traverse e "
"clear de um tipo usando o sinalizador :c:macro:`Py_TPFLAGS_MANAGED_DICT`. O "
"projeto `pythoncapi-compat <https://github.com/python/pythoncapi-compat/>`__ "
"pode ser usado para obter essas funções no Python 3.11 e 3.12. (Contribuição "
"de Victor Stinner em :gh:`107073`.)"

#: ../../whatsnew/3.13.rst:2136
msgid ""
"Add the :c:func:`PyRefTracer_SetTracer` and :c:func:`PyRefTracer_GetTracer` "
"functions, which enable tracking object creation and destruction in the same "
"way that the :mod:`tracemalloc` module does. (Contributed by Pablo Galindo "
"in :gh:`93502`.)"
msgstr ""
"Adiciona as funções :c:func:`PyRefTracer_SetTracer` e :c:func:"
"`PyRefTracer_GetTracer`, que permitem rastrear a criação e destruição de "
"objetos da mesma forma que o módulo :mod:`tracemalloc`. (Contribuição de "
"Pablo Galindo em :gh:`93502`.)"

#: ../../whatsnew/3.13.rst:2142
msgid ""
"Add the :c:func:`PySys_AuditTuple` function as an alternative to :c:func:"
"`PySys_Audit` that takes event arguments as a Python :class:`tuple` object. "
"(Contributed by Victor Stinner in :gh:`85283`.)"
msgstr ""
"Adiciona a função :c:func:`PySys_AuditTuple` como uma alternativa à :c:func:"
"`PySys_Audit`, que recebe argumentos de evento como um objeto :class:`tuple` "
"do Python. (Contribuição de Victor Stinner em :gh:`85283`.)"

#: ../../whatsnew/3.13.rst:2147
msgid ""
"Add the :c:func:`PyThreadState_GetUnchecked()` function as an alternative "
"to :c:func:`PyThreadState_Get()` that doesn't kill the process with a fatal "
"error if it is ``NULL``. The caller is responsible for checking if the "
"result is ``NULL``. (Contributed by Victor Stinner in :gh:`108867`.)"
msgstr ""
"Adiciona a função :c:func:`PyThreadState_GetUnchecked()` como uma "
"alternativa a :c:func:`PyThreadState_Get()` que não mata o processo com um "
"erro fatal se for ``NULL``. O chamador é responsável por verificar se o "
"resultado é ``NULL``. (Contribuição de Victor Stinner em :gh:`108867`.)"

#: ../../whatsnew/3.13.rst:2153
msgid ""
"Add the :c:func:`PyType_GetFullyQualifiedName` function to get the type's "
"fully qualified name. The module name is prepended if :attr:`type."
"__module__` is a string and is not equal to either ``'builtins'`` or "
"``'__main__'``. (Contributed by Victor Stinner in :gh:`111696`.)"
msgstr ""
"Adiciona a função :c:func:`PyType_GetFullyQualifiedName` para obter o nome "
"totalmente qualificado do tipo. O nome do módulo é prefixado se :attr:`type."
"__module__` for uma string e não for igual a ``'builtins'`` ou "
"``'__main__'``. (Contribuição de Victor Stinner em :gh:`111696`.)"

#: ../../whatsnew/3.13.rst:2159
msgid ""
"Add the :c:func:`PyType_GetModuleName` function to get the type's module "
"name. This is equivalent to getting the :attr:`type.__module__` attribute. "
"(Contributed by Eric Snow and Victor Stinner in :gh:`111696`.)"
msgstr ""
"Adiciona a função :c:func:`PyType_GetModuleName` para obter o nome do módulo "
"do tipo. Isto é equivalente a obter o atributo :attr:`type.__module__`. "
"(Contribuição de Eric Snow e Victor Stinner em :gh:`111696`.)"

#: ../../whatsnew/3.13.rst:2164
msgid ""
"Add the :c:func:`PyUnicode_EqualToUTF8AndSize` and :c:func:"
"`PyUnicode_EqualToUTF8` functions to compare a Unicode object with a :c:expr:"
"`const char*` UTF-8 encoded string and ``1`` if they are equal or ``0`` "
"otherwise. These functions do not raise exceptions. (Contributed by Serhiy "
"Storchaka in :gh:`110289`.)"
msgstr ""
"Adiciona as funções :c:func:`PyUnicode_EqualToUTF8AndSize` e :c:func:"
"`PyUnicode_EqualToUTF8`: comparam o objeto Unicode com uma string :c:expr:"
"`const char*` codificada em UTF-8 e retornam ``1`` se forem iguais ou ``0`` "
"caso contrário. Essas funções não levantam exceções. (Contribuição de Serhiy "
"Storchaka em :gh:`110289`.)"

#: ../../whatsnew/3.13.rst:2171
msgid ""
"Add the :c:func:`PyWeakref_GetRef` function as an alternative to  :c:func:"
"`PyWeakref_GetObject` that returns a :term:`strong reference` or ``NULL`` if "
"the referent is no longer live. (Contributed by Victor Stinner in :gh:"
"`105927`.)"
msgstr ""
"Adiciona a função :c:func:`PyWeakref_GetRef` como uma alternativa a :c:func:"
"`PyWeakref_GetObject`, mas retorna uma :term:`referência forte`, ou ``NULL`` "
"se o referente não mais existir. (Contribuição de Victor Stinner em :gh:"
"`105927`.)"

#: ../../whatsnew/3.13.rst:2177
msgid "Add fixed variants of functions which silently ignore errors:"
msgstr "Adiciona variantes fixas de funções que ignoram erros silenciosamente:"

#: ../../whatsnew/3.13.rst:2179
msgid ""
":c:func:`PyObject_HasAttrWithError` replaces :c:func:`PyObject_HasAttr`."
msgstr ""
":c:func:`PyObject_HasAttrWithError` substitui :c:func:`PyObject_HasAttr`."

#: ../../whatsnew/3.13.rst:2180
msgid ""
":c:func:`PyObject_HasAttrStringWithError` replaces :c:func:"
"`PyObject_HasAttrString`."
msgstr ""
":c:func:`PyObject_HasAttrStringWithError` substitui :c:func:"
"`PyObject_HasAttrString`."

#: ../../whatsnew/3.13.rst:2182
msgid ""
":c:func:`PyMapping_HasKeyWithError` replaces :c:func:`PyMapping_HasKey`."
msgstr ""
":c:func:`PyMapping_HasKeyWithError` substitui :c:func:`PyMapping_HasKey`."

#: ../../whatsnew/3.13.rst:2183
msgid ""
":c:func:`PyMapping_HasKeyStringWithError` replaces :c:func:"
"`PyMapping_HasKeyString`."
msgstr ""
":c:func:`PyMapping_HasKeyStringWithError` substitui :c:func:"
"`PyMapping_HasKeyString`."

#: ../../whatsnew/3.13.rst:2186
msgid ""
"The new functions return ``-1`` for errors and the standard ``1`` for true "
"and ``0`` for false."
msgstr ""
"As novas funções retornam ``-1`` para erros e o padrão ``1`` para verdadeiro "
"e ``0`` para falso."

#: ../../whatsnew/3.13.rst:2189
msgid "(Contributed by Serhiy Storchaka in :gh:`108511`.)"
msgstr "(Contribuição de Serhiy Storchaka em :gh:`108511`.)"

#: ../../whatsnew/3.13.rst:2193
msgid "Changed C APIs"
msgstr "Alterações na API C"

#: ../../whatsnew/3.13.rst:2195
msgid ""
"The *keywords* parameter of :c:func:`PyArg_ParseTupleAndKeywords` and :c:"
"func:`PyArg_VaParseTupleAndKeywords` now has type :c:expr:`char * const *` "
"in C and :c:expr:`const char * const *` in C++, instead of :c:expr:`char "
"**`. In C++, this makes these functions compatible with arguments of type :c:"
"expr:`const char * const *`, :c:expr:`const char **`, or :c:expr:`char * "
"const *` without an explicit type cast. In C, the functions only support "
"arguments of type :c:expr:`char * const *`. This can be overridden with the :"
"c:macro:`PY_CXX_CONST` macro. (Contributed by Serhiy Storchaka in :gh:"
"`65210`.)"
msgstr ""
"O parâmetro *keywords* das funções :c:func:`PyArg_ParseTupleAndKeywords` e :"
"c:func:`PyArg_VaParseTupleAndKeywords` agora é do tipo :c:expr:`char * const "
"*` em C e :c:expr:`const char * const *` em C++, em vez de :c:expr:`char "
"**`. Em C++, isso torna essas funções compatíveis com argumentos dos tipos :"
"c:expr:`const char * const *`, :c:expr:`const char **`, ou :c:expr:`char * "
"const *` sem uma conversão de tipo explícita. Em C, as funções aceitam "
"apenas argumentos do tipo :c:expr:`char * const *`. Isso pode ser "
"sobrescrito com a macro :c:macro:`PY_CXX_CONST`. (Contribuição de Serhiy "
"Storchaka em :gh:`65210`.)"

#: ../../whatsnew/3.13.rst:2207
msgid ""
":c:func:`PyArg_ParseTupleAndKeywords` now supports non-ASCII keyword "
"parameter names. (Contributed by Serhiy Storchaka in :gh:`110815`.)"
msgstr ""
":c:func:`PyArg_ParseTupleAndKeywords` agora oferece suporte a nomes de "
"parâmetros nomeados não-ASCII. (Contribuição de Serhiy Storchaka em :gh:"
"`110815`.)"

#: ../../whatsnew/3.13.rst:2211
msgid ""
"The :c:func:`!PyCode_GetFirstFree` function is now unstable API and is now "
"named :c:func:`PyUnstable_Code_GetFirstFree`. (Contributed by Bogdan "
"Romanyuk in :gh:`115781`.)"
msgstr ""
"A função :c:func:`!PyCode_GetFirstFree` é agora uma API instável e foi "
"renomeada para :c:func:`PyUnstable_Code_GetFirstFree`. (Contribuição de "
"Bogdan Romanyuk em :gh:`115781`.)"

#: ../../whatsnew/3.13.rst:2215
msgid ""
"The :c:func:`PyDict_GetItem`, :c:func:`PyDict_GetItemString`, :c:func:"
"`PyMapping_HasKey`, :c:func:`PyMapping_HasKeyString`, :c:func:"
"`PyObject_HasAttr`, :c:func:`PyObject_HasAttrString`, and :c:func:"
"`PySys_GetObject` functions, each of which clears all errors which occurred "
"when calling them now reports these errors using :func:`sys.unraisablehook`. "
"You may replace them with other functions as recommended in the "
"documentation. (Contributed by Serhiy Storchaka in :gh:`106672`.)"
msgstr ""
"As funções :c:func:`PyDict_GetItem`, :c:func:`PyDict_GetItemString`, :c:func:"
"`PyMapping_HasKey`, :c:func:`PyMapping_HasKeyString`, :c:func:"
"`PyObject_HasAttr`, :c:func:`PyObject_HasAttrString`, e :c:func:"
"`PySys_GetObject`, que apagam todos os erros que ocorrem ao chamá-las, agora "
"reportam tais erros usando :func:`sys.unraisablehook`. Você pode substituí-"
"las por outras funções conforme recomendado na documentação. (Contribuição "
"de Serhiy Storchaka em :gh:`106672`.)"

#: ../../whatsnew/3.13.rst:2224
msgid ""
"Add support for the ``%T``, ``%#T``, ``%N`` and ``%#N`` formats to :c:func:"
"`PyUnicode_FromFormat`:"
msgstr ""
"Adiciona suporte para os formatos ``%T``, ``%#T``, ``%N`` e ``%#N`` a :c:"
"func:`PyUnicode_FromFormat`:"

#: ../../whatsnew/3.13.rst:2227
msgid "``%T``: Get the fully qualified name of an object type"
msgstr "``%T``: Obtém o nome totalmente qualificado de um tipo de objeto"

#: ../../whatsnew/3.13.rst:2228
msgid "``%#T``: As above, but use a colon as the separator"
msgstr "``%#T``: Como acima, mas usa dois pontos como separador"

#: ../../whatsnew/3.13.rst:2229
msgid "``%N``: Get the fully qualified name of a type"
msgstr "``%N``: Obtém o nome totalmente qualificado de um tipo"

#: ../../whatsnew/3.13.rst:2230
msgid "``%#N``: As above, but use a colon as the separator"
msgstr "``%#N``: Como acima, mas usa dois pontos como separador"

#: ../../whatsnew/3.13.rst:2232
msgid ""
"See :pep:`737` for more information. (Contributed by Victor Stinner in :gh:"
"`111696`.)"
msgstr ""
"Veja :pep:`737` para uma descrição completa. (Contribuição de Victor Stinner "
"em :gh:`111696`.)"

#: ../../whatsnew/3.13.rst:2235
msgid ""
"You no longer have to define the ``PY_SSIZE_T_CLEAN`` macro before "
"including :file:`Python.h` when using ``#`` formats in :ref:`format codes "
"<arg-parsing-string-and-buffers>`. APIs accepting the format codes always "
"use ``Py_ssize_t`` for ``#`` formats. (Contributed by Inada Naoki in :gh:"
"`104922`.)"
msgstr ""
"Você não precisa mais definir a macro ``PY_SSIZE_T_CLEAN`` antes de incluir :"
"file:`Python.h` ao usar formatos ``#`` em :ref:`códigos de formato <arg-"
"parsing-string-and-buffers>`. APIs que aceitam os códigos de formato sempre "
"usam ``Py_ssize_t`` para formatos ``#``. (Contribuição de Inada Naoki em :gh:"
"`104922`.)"

#: ../../whatsnew/3.13.rst:2241
msgid ""
"If Python is built in :ref:`debug mode <debug-build>` or :option:`with "
"assertions <--with-assertions>`, :c:func:`PyTuple_SET_ITEM` and :c:func:"
"`PyList_SET_ITEM` now check the index argument with an assertion. "
"(Contributed by Victor Stinner in :gh:`106168`.)"
msgstr ""
"Se Python for construído em :ref:`modo de depuração <debug-build>` ou :"
"option:`com asserções <--with-assertions>`, :c:func:`PyTuple_SET_ITEM` e :c:"
"func:`PyList_SET_ITEM` agora verificam o argumento do índice com uma "
"asserção. (Contribuição de Victor Stinner em :gh:`106168`.)"

#: ../../whatsnew/3.13.rst:2249
msgid "Limited C API Changes"
msgstr "Mudanças na API C Limitada"

#: ../../whatsnew/3.13.rst:2251
msgid "The following functions are now included in the Limited C API:"
msgstr "As seguintes funções agora estão incluídas na API C limitada:"

#: ../../whatsnew/3.13.rst:2253
msgid ":c:func:`PyMem_RawMalloc`"
msgstr ":c:func:`PyMem_RawMalloc`"

#: ../../whatsnew/3.13.rst:2254
msgid ":c:func:`PyMem_RawCalloc`"
msgstr ":c:func:`PyMem_RawCalloc`"

#: ../../whatsnew/3.13.rst:2255
msgid ":c:func:`PyMem_RawRealloc`"
msgstr ":c:func:`PyMem_RawRealloc`"

#: ../../whatsnew/3.13.rst:2256
msgid ":c:func:`PyMem_RawFree`"
msgstr ":c:func:`PyMem_RawFree`"

#: ../../whatsnew/3.13.rst:2257
msgid ":c:func:`PySys_Audit`"
msgstr ":c:func:`PySys_Audit`"

#: ../../whatsnew/3.13.rst:2258
msgid ":c:func:`PySys_AuditTuple`"
msgstr ":c:func:`PySys_AuditTuple`"

#: ../../whatsnew/3.13.rst:2259
msgid ":c:func:`PyType_GetModuleByDef`"
msgstr ":c:func:`PyType_GetModuleByDef`"

#: ../../whatsnew/3.13.rst:2261
msgid ""
"(Contributed by Victor Stinner in :gh:`85283`, :gh:`85283`, and :gh:"
"`116936`.)"
msgstr ""
"(Contribuição de Victor Stinner em :gh:`85283`, :gh:`85283` e :gh:`116936`.)"

#: ../../whatsnew/3.13.rst:2263
msgid ""
"Python built with :option:`--with-trace-refs` (tracing references) now "
"supports the :ref:`Limited API <limited-c-api>`. (Contributed by Victor "
"Stinner in :gh:`108634`.)"
msgstr ""
"Python construído com :option:`--with-trace-refs` (referências de "
"rastreamento) agora oferece suporte à :ref:`API Limitada <limited-c-api>`. "
"(Contribuição de Victor Stinner em :gh:`108634`.)"

#: ../../whatsnew/3.13.rst:2269
msgid "Removed C APIs"
msgstr "APIs C removidas"

#: ../../whatsnew/3.13.rst:2271
msgid ""
"Remove several functions, macros, variables, etc with names prefixed by "
"``_Py`` or ``_PY`` (which are considered private). If your project is "
"affected  by one of these removals and you believe that the removed API "
"should remain available, please :ref:`open a new issue <using-the-tracker>` "
"to request a public C API and add ``cc: @vstinner`` to the issue to notify "
"Victor Stinner. (Contributed by Victor Stinner in :gh:`106320`.)"
msgstr ""
"Remove diversas funções, macros, variáveis, etc com nomes prefixados por "
"``_Py`` ou ``_PY`` (consideradas como API privada). Se o seu projeto for "
"afetado por uma dessas remoções e você acreditar que a API removida deve "
"permanecer disponível, por favor :ref:`abra um novo relatório de problema "
"<using-the-tracker>` para solicitar uma API C pública e adicione ``cc: "
"@vstinner`` ao problema para notificar Victor Stinner. (Contribuição de "
"Victor Stinner em :gh:`106320`.)"

#: ../../whatsnew/3.13.rst:2279
msgid ""
"Remove old buffer protocols deprecated in Python 3.0. Use :ref:"
"`bufferobjects` instead."
msgstr ""
"Remove protocolos de buffer antigos descontinuados no Python 3.0: use :ref:"
"`bufferobjects`."

#: ../../whatsnew/3.13.rst:2282
msgid ""
":c:func:`!PyObject_CheckReadBuffer`: Use :c:func:`PyObject_CheckBuffer` to "
"test whether the object supports the buffer protocol. Note that :c:func:"
"`PyObject_CheckBuffer` doesn't guarantee that :c:func:`PyObject_GetBuffer` "
"will succeed. To test if the object is actually readable, see the next "
"example of :c:func:`PyObject_GetBuffer`."
msgstr ""
":c:func:`!PyObject_CheckReadBuffer`: use :c:func:`PyObject_CheckBuffer` para "
"testar se o objeto oferece suporte ao protocolo de buffer. Observe que :c:"
"func:`PyObject_CheckBuffer` não garante que :c:func:`PyObject_GetBuffer` "
"terá sucesso. Para testar se o objeto é realmente legível, veja o próximo "
"exemplo de :c:func:`PyObject_GetBuffer`."

#: ../../whatsnew/3.13.rst:2290
msgid ""
":c:func:`!PyObject_AsCharBuffer`, :c:func:`!PyObject_AsReadBuffer`: Use :c:"
"func:`PyObject_GetBuffer` and :c:func:`PyBuffer_Release` instead:"
msgstr ""
":c:func:`!PyObject_AsCharBuffer`, :c:func:`!PyObject_AsReadBuffer`: use :c:"
"func:`PyObject_GetBuffer` e :c:func:`PyBuffer_Release`:"

#: ../../whatsnew/3.13.rst:2293
msgid ""
"Py_buffer view;\n"
"if (PyObject_GetBuffer(obj, &view, PyBUF_SIMPLE) < 0) {\n"
"    return NULL;\n"
"}\n"
"// Use `view.buf` and `view.len` to read from the buffer.\n"
"// You may need to cast buf as `(const char*)view.buf`.\n"
"PyBuffer_Release(&view);"
msgstr ""
"Py_buffer view;\n"
"if (PyObject_GetBuffer(obj, &view, PyBUF_SIMPLE) < 0) {\n"
"    return NULL;\n"
"}\n"
"// Usa `view.buf` e `view.len` para ler do buffer.\n"
"// Você pode precisar converter buf como `(const char*)view.buf`.\n"
"PyBuffer_Release(&view);"

#: ../../whatsnew/3.13.rst:2303
msgid ""
":c:func:`!PyObject_AsWriteBuffer`: Use :c:func:`PyObject_GetBuffer` and :c:"
"func:`PyBuffer_Release` instead:"
msgstr ""
":c:func:`!PyObject_AsWriteBuffer`: use :c:func:`PyObject_GetBuffer` e :c:"
"func:`PyBuffer_Release`:"

#: ../../whatsnew/3.13.rst:2306
msgid ""
"Py_buffer view;\n"
"if (PyObject_GetBuffer(obj, &view, PyBUF_WRITABLE) < 0) {\n"
"    return NULL;\n"
"}\n"
"// Use `view.buf` and `view.len` to write to the buffer.\n"
"PyBuffer_Release(&view);"
msgstr ""
"Py_buffer view;\n"
"if (PyObject_GetBuffer(obj, &view, PyBUF_WRITABLE) < 0) {\n"
"    return NULL;\n"
"}\n"
"// Usa `view.buf` e `view.len` para gravar no buffer.\n"
"PyBuffer_Release(&view);"

#: ../../whatsnew/3.13.rst:2315
msgid "(Contributed by Inada Naoki in :gh:`85275`.)"
msgstr "(Contribuição de Inada Naoki in :gh:`85275`.)"

#: ../../whatsnew/3.13.rst:2317
msgid "Remove various functions deprecated in Python 3.9:"
msgstr "Remove diversas funções descontinuadas no Python 3.9:"

#: ../../whatsnew/3.13.rst:2319
msgid ""
":c:func:`!PyEval_CallObject`, :c:func:`!PyEval_CallObjectWithKeywords`: Use :"
"c:func:`PyObject_CallNoArgs` or :c:func:`PyObject_Call` instead."
msgstr ""
":c:func:`!PyEval_CallObject`, :c:func:`!PyEval_CallObjectWithKeywords`: use :"
"c:func:`PyObject_CallNoArgs` ou :c:func:`PyObject_Call`."

#: ../../whatsnew/3.13.rst:2324
msgid ""
"In :c:func:`PyObject_Call`, positional arguments must be a :class:`tuple` "
"and must not be ``NULL``, and keyword arguments must be a :class:`dict` or "
"``NULL``, whereas the removed functions checked argument types and accepted "
"``NULL`` positional and keyword arguments. To replace "
"``PyEval_CallObjectWithKeywords(func, NULL, kwargs)`` with :c:func:"
"`PyObject_Call`, pass an empty tuple as positional arguments using :c:func:"
"`PyTuple_New(0) <PyTuple_New>`."
msgstr ""
"Os argumentos posicionais de :c:func:`PyObject_Call` devem ser uma :class:"
"`tuple` e não podem ser ``NULL``, os argumentos nomeados devem ser :class:"
"`dict` ou ``NULL``, enquanto funções removidas verificavam o tipo de "
"argumentos e aceitavam argumentos posicionais e nomeados ``NULL``. Para "
"substituir ``PyEval_CallObjectWithKeywords(func, NULL, kwargs)`` por :c:func:"
"`PyObject_Call`, passe uma tupla vazia como argumentos posicionais usando :c:"
"func:`PyTuple_New(0) <PyTuple_New>`."

#: ../../whatsnew/3.13.rst:2334
msgid ""
":c:func:`!PyEval_CallFunction`: Use :c:func:`PyObject_CallFunction` instead."
msgstr ":c:func:`!PyEval_CallFunction`: use :c:func:`PyObject_CallFunction`."

#: ../../whatsnew/3.13.rst:2336
msgid ""
":c:func:`!PyEval_CallMethod`: Use :c:func:`PyObject_CallMethod` instead."
msgstr ":c:func:`!PyEval_CallMethod`: use :c:func:`PyObject_CallMethod`."

#: ../../whatsnew/3.13.rst:2338
msgid ":c:func:`!PyCFunction_Call`: Use :c:func:`PyObject_Call` instead."
msgstr ":c:func:`!PyCFunction_Call`: use :c:func:`PyObject_Call`."

#: ../../whatsnew/3.13.rst:2341
msgid "(Contributed by Victor Stinner in :gh:`105107`.)"
msgstr "(Contribuição de Victor Stinner em :gh:`105107`.)"

#: ../../whatsnew/3.13.rst:2343
msgid ""
"Remove the following old functions to configure the Python initialization, "
"deprecated in Python 3.11:"
msgstr ""
"Remove as seguintes funções antigas da configuração de inicialização do "
"Python, descontinuadas no Python 3.11:"

#: ../../whatsnew/3.13.rst:2346
msgid ""
":c:func:`!PySys_AddWarnOptionUnicode`: Use :c:member:`PyConfig.warnoptions` "
"instead."
msgstr ""
":c:func:`!PySys_AddWarnOptionUnicode`: use :c:member:`PyConfig.warnoptions`."

#: ../../whatsnew/3.13.rst:2348
msgid ""
":c:func:`!PySys_AddWarnOption`: Use :c:member:`PyConfig.warnoptions` instead."
msgstr ":c:func:`!PySys_AddWarnOption`: use :c:member:`PyConfig.warnoptions`."

#: ../../whatsnew/3.13.rst:2350
msgid ":c:func:`!PySys_AddXOption`: Use :c:member:`PyConfig.xoptions` instead."
msgstr ":c:func:`!PySys_AddXOption`: use :c:member:`PyConfig.xoptions`."

#: ../../whatsnew/3.13.rst:2352
msgid ""
":c:func:`!PySys_HasWarnOptions`: Use :c:member:`PyConfig.xoptions` instead."
msgstr ":c:func:`!PySys_HasWarnOptions`: use :c:member:`PyConfig.xoptions`."

#: ../../whatsnew/3.13.rst:2354
msgid ""
":c:func:`!PySys_SetPath`: Set :c:member:`PyConfig.module_search_paths` "
"instead."
msgstr ""
":c:func:`!PySys_SetPath`: defina :c:member:`PyConfig.module_search_paths`."

#: ../../whatsnew/3.13.rst:2356
msgid ""
":c:func:`!Py_SetPath`: Set :c:member:`PyConfig.module_search_paths` instead."
msgstr ""
":c:func:`!Py_SetPath`: defina :c:member:`PyConfig.module_search_paths`."

#: ../../whatsnew/3.13.rst:2358
msgid ""
":c:func:`!Py_SetStandardStreamEncoding`: Set :c:member:`PyConfig."
"stdio_encoding` instead, and set also maybe :c:member:`PyConfig."
"legacy_windows_stdio` (on Windows)."
msgstr ""
":c:func:`!Py_SetStandardStreamEncoding`: defina :c:member:`PyConfig."
"stdio_encoding`, e também talvez :c:member:`PyConfig.legacy_windows_stdio` "
"(no Windows)."

#: ../../whatsnew/3.13.rst:2361
msgid ""
":c:func:`!_Py_SetProgramFullPath`: Set :c:member:`PyConfig.executable` "
"instead."
msgstr ""
":c:func:`!_Py_SetProgramFullPath`: defina :c:member:`PyConfig.executable`."

#: ../../whatsnew/3.13.rst:2364
msgid ""
"Use the new :c:type:`PyConfig` API of the :ref:`Python Initialization "
"Configuration <init-config>` instead (:pep:`587`), added to Python 3.8. "
"(Contributed by Victor Stinner in :gh:`105145`.)"
msgstr ""
"Em vez disso, use a nova API :c:type:`PyConfig` da :ref:`Configuração de "
"Inicialização do Python <init-config>` (:pep:`587`), adicionada ao Python "
"3.8. (Contribuição de Victor Stinner em :gh:`105145`.)"

#: ../../whatsnew/3.13.rst:2368
msgid ""
"Remove :c:func:`!PyEval_AcquireLock` and :c:func:`!PyEval_ReleaseLock` "
"functions, deprecated in Python 3.2. They didn't update the current thread "
"state. They can be replaced with:"
msgstr ""
"Remove as funções :c:func:`!PyEval_AcquireLock` e :c:func:`!"
"PyEval_ReleaseLock`, descontinuadas no Python 3.2. Eles não atualizavam o "
"estado atual da thread. Elas podem ser substituídas por:"

#: ../../whatsnew/3.13.rst:2373
msgid ":c:func:`PyEval_SaveThread` and :c:func:`PyEval_RestoreThread`;"
msgstr ":c:func:`PyEval_SaveThread` e :c:func:`PyEval_RestoreThread`;"

#: ../../whatsnew/3.13.rst:2374
msgid ""
"low-level :c:func:`PyEval_AcquireThread` and :c:func:`PyEval_RestoreThread`;"
msgstr ""
":c:func:`PyEval_AcquireThread` e :c:func:`PyEval_RestoreThread` de baixo "
"nível;"

#: ../../whatsnew/3.13.rst:2375
msgid "or :c:func:`PyGILState_Ensure` and :c:func:`PyGILState_Release`."
msgstr "ou :c:func:`PyGILState_Ensure` e :c:func:`PyGILState_Release`."

#: ../../whatsnew/3.13.rst:2377
msgid "(Contributed by Victor Stinner in :gh:`105182`.)"
msgstr "(Contribuição de Victor Stinner em :gh:`105182`.)"

#: ../../whatsnew/3.13.rst:2379
msgid ""
"Remove the :c:func:`!PyEval_ThreadsInitialized` function, deprecated in "
"Python 3.9. Since Python 3.7, :c:func:`!Py_Initialize` always creates the "
"GIL: calling :c:func:`!PyEval_InitThreads` does nothing and :c:func:`!"
"PyEval_ThreadsInitialized` always returns non-zero. (Contributed by Victor "
"Stinner in :gh:`105182`.)"
msgstr ""
"Remove a função :c:func:`!PyEval_ThreadsInitialized`, descontinuada no "
"Python 3.9. Desde Python 3.7, :c:func:`!Py_Initialize` sempre cria a GIL: "
"chamar :c:func:`!PyEval_InitThreads` não faz nada e :c:func:`!"
"PyEval_ThreadsInitialized` sempre retorna diferente de zero. (Contribuição "
"de Victor Stinner em :gh:`105182`.)"

#: ../../whatsnew/3.13.rst:2386
msgid ""
"Remove the :c:func:`!_PyInterpreterState_Get` alias to :c:func:"
"`PyInterpreterState_Get()` which was kept for backward compatibility with "
"Python 3.8. The `pythoncapi-compat project`_ can be used to get :c:func:"
"`PyInterpreterState_Get()` on Python 3.8 and older. (Contributed by Victor "
"Stinner in :gh:`106320`.)"
msgstr ""
"Remove o apelido :c:func:`!_PyInterpreterState_Get` de :c:func:"
"`PyInterpreterState_Get()` que era mantido para compatibilidade com versões "
"anteriores do Python 3.8. O projeto `pythoncapi-compat`_  pode ser usado "
"para obter :c:func:`PyInterpreterState_Get()` no Python 3.8 e versões "
"anteriores. (Contribuição de Victor Stinner em :gh:`106320`.)"

#: ../../whatsnew/3.13.rst:2393
msgid ""
"Remove the private :c:func:`!_PyObject_FastCall` function: use :c:func:`!"
"PyObject_Vectorcall` which is available since Python 3.8 (:pep:`590`). "
"(Contributed by Victor Stinner in :gh:`106023`.)"
msgstr ""
"Remove a função privada :c:func:`!_PyObject_FastCall`: use :c:func:`!"
"PyObject_Vectorcall`, a qual está disponível desde Python 3.8 (:pep:`590`). "
"(Contribuição de Victor Stinner em :gh:`106023`.)"

#: ../../whatsnew/3.13.rst:2398
msgid ""
"Remove the ``cpython/pytime.h`` header file, which only contained private "
"functions. (Contributed by Victor Stinner in :gh:`106316`.)"
msgstr ""
"Remove o arquivo de cabeçalho ``cpython/pytime.h``, que continha apenas "
"funções privadas. (Contribuição de Victor Stinner em :gh:`106316`.)"

#: ../../whatsnew/3.13.rst:2402
msgid ""
"Remove the undocumented ``PY_TIMEOUT_MAX`` constant from the limited C API. "
"(Contributed by Victor Stinner in :gh:`110014`.)"
msgstr ""
"Remove a constante ​​não documentada ``PY_TIMEOUT_MAX`` da API C limitada. "
"(Contribuição de Victor Stinner em :gh:`110014`.)"

#: ../../whatsnew/3.13.rst:2405
msgid ""
"Remove the old trashcan macros ``Py_TRASHCAN_SAFE_BEGIN`` and "
"``Py_TRASHCAN_SAFE_END``. Replace both with the new macros "
"``Py_TRASHCAN_BEGIN`` and ``Py_TRASHCAN_END``. (Contributed by Irit Katriel "
"in :gh:`105111`.)"
msgstr ""
"Remove as antigas macros de trashcan ``Py_TRASHCAN_SAFE_BEGIN`` e "
"``Py_TRASHCAN_SAFE_END``. Substitua ambas pelas novas macros "
"``Py_TRASHCAN_BEGIN`` e ``Py_TRASHCAN_END``. (Contribuição de Irit Katriel "
"em :gh:`105111`.)"

#: ../../whatsnew/3.13.rst:2412
msgid "Deprecated C APIs"
msgstr "APIs C descontinuadas"

#: ../../whatsnew/3.13.rst:2414
msgid "Deprecate old Python initialization functions:"
msgstr "Descontinua antigas funções de inicialização do Python:"

#: ../../whatsnew/3.13.rst:2416
#: ../../deprecations/c-api-pending-removal-in-3.15.rst:13
msgid ""
":c:func:`PySys_ResetWarnOptions`: Clear :data:`sys.warnoptions` and :data:`!"
"warnings.filters` instead."
msgstr ""
":c:func:`PySys_ResetWarnOptions`: apague :data:`sys.warnoptions` e :data:`!"
"warnings.filters`."

#: ../../whatsnew/3.13.rst:2418
msgid ":c:func:`Py_GetExecPrefix`: Get :data:`sys.exec_prefix` instead."
msgstr ":c:func:`Py_GetExecPrefix`: leia :data:`sys.exec_prefix`."

#: ../../whatsnew/3.13.rst:2420
#: ../../deprecations/c-api-pending-removal-in-3.15.rst:17
msgid ":c:func:`Py_GetPath`: Get :data:`sys.path` instead."
msgstr ":c:func:`Py_GetPath`: leia :data:`sys.path`."

#: ../../whatsnew/3.13.rst:2422
msgid ":c:func:`Py_GetPrefix`: Get :data:`sys.prefix` instead."
msgstr ":c:func:`Py_GetPrefix`: leia :data:`sys.prefix`."

#: ../../whatsnew/3.13.rst:2424
#: ../../deprecations/c-api-pending-removal-in-3.15.rst:21
msgid ":c:func:`Py_GetProgramFullPath`: Get :data:`sys.executable` instead."
msgstr ":c:func:`Py_GetProgramFullPath`: leia :data:`sys.executable`."

#: ../../whatsnew/3.13.rst:2426
#: ../../deprecations/c-api-pending-removal-in-3.15.rst:23
msgid ":c:func:`Py_GetProgramName`: Get :data:`sys.executable` instead."
msgstr ":c:func:`Py_GetProgramName`: leia :data:`sys.executable`."

#: ../../whatsnew/3.13.rst:2428
#: ../../deprecations/c-api-pending-removal-in-3.15.rst:25
msgid ""
":c:func:`Py_GetPythonHome`: Get :c:member:`PyConfig.home` or the :envvar:"
"`PYTHONHOME` environment variable instead."
msgstr ""
":c:func:`Py_GetPythonHome`: leia :c:member:`PyConfig.home` ou a variável de "
"ambiente :envvar:`PYTHONHOME`."

#: ../../whatsnew/3.13.rst:2432
msgid "(Contributed by Victor Stinner in :gh:`105145`.)"
msgstr "(Contribuição de Victor Stinner em :gh:`105145`.)"

#: ../../whatsnew/3.13.rst:2434
msgid ""
":term:`Soft deprecate <soft deprecated>` the :c:func:`PyEval_GetBuiltins`, :"
"c:func:`PyEval_GetGlobals`, and :c:func:`PyEval_GetLocals` functions, which "
"return a :term:`borrowed reference`. (Soft deprecated as part of :pep:`667`.)"
msgstr ""
":term:`Descontinua suavemente <soft deprecated>` as funções :c:func:"
"`PyEval_GetBuiltins`, :c:func:`PyEval_GetGlobals` e :c:func:"
"`PyEval_GetLocals`, que retornam uma :term:`referência emprestada`. "
"(Suavemente descontinuadas como parte da :pep:`667`.)"

#: ../../whatsnew/3.13.rst:2440
msgid ""
"Deprecate the :c:func:`PyImport_ImportModuleNoBlock` function, which is just "
"an alias to :c:func:`PyImport_ImportModule` since Python 3.3. (Contributed "
"by Victor Stinner in :gh:`105396`.)"
msgstr ""
"Descontinua a função :c:func:`PyImport_ImportModuleNoBlock` que é apenas um "
"apelido para :c:func:`PyImport_ImportModule` desde o Python 3.3. "
"(Contribuição de Victor Stinner em :gh:`105396`.)"

#: ../../whatsnew/3.13.rst:2444
msgid ""
":term:`Soft deprecate <soft deprecated>` the :c:func:`PyModule_AddObject` "
"function. It should be replaced with :c:func:`PyModule_Add` or :c:func:"
"`PyModule_AddObjectRef`. (Contributed by Serhiy Storchaka in :gh:`86493`.)"
msgstr ""
":term:`Descontinua suavemente <soft deprecated>` a função :c:func:"
"`PyModule_AddObject`. Ela deve ser substituída por :c:func:`PyModule_Add` "
"ou :c:func:`PyModule_AddObjectRef`. (Contribuição de Serhiy Storchaka em :gh:"
"`86493`.)"

#: ../../whatsnew/3.13.rst:2450
msgid ""
"Deprecate the old ``Py_UNICODE`` and ``PY_UNICODE_TYPE`` types and the :c:"
"macro:`!Py_UNICODE_WIDE` define. Use the :c:type:`wchar_t` type directly "
"instead. Since Python 3.3, ``Py_UNICODE`` and ``PY_UNICODE_TYPE`` are just "
"aliases to :c:type:`!wchar_t`. (Contributed by Victor Stinner in :gh:"
"`105156`.)"
msgstr ""
"Descontinua os tipos antigos ``Py_UNICODE`` e ``PY_UNICODE_TYPE`` e define :"
"c:macro:`!Py_UNICODE_WIDE`. Em vez disso, use o tipo :c:type:`wchar_t` "
"diretamente. Desde Python 3.3, ``Py_UNICODE`` e ``PY_UNICODE_TYPE`` são "
"apenas apelidos para :c:type:`!wchar_t`. (Contribuição de Victor Stinner em :"
"gh:`105156`.)"

#: ../../whatsnew/3.13.rst:2457
msgid ""
"Deprecate the :c:func:`PyWeakref_GetObject` and :c:func:"
"`PyWeakref_GET_OBJECT` functions, which return a :term:`borrowed reference`. "
"Replace them with the new :c:func:`PyWeakref_GetRef` function, which returns "
"a :term:`strong reference`. The `pythoncapi-compat project`_ can be used to "
"get :c:func:`PyWeakref_GetRef` on Python 3.12 and older. (Contributed by "
"Victor Stinner in :gh:`105927`.)"
msgstr ""
"Descontinua as funções :c:func:`PyWeakref_GetObject` e :c:func:"
"`PyWeakref_GET_OBJECT`, que retornam uma :term:`referência emprestada`. Em "
"vez disso, use a nova função :c:func:`PyWeakref_GetRef`, que retorna uma :"
"term:`referência forte`. O projeto `pythoncapi-compat <https://github.com/"
"python/pythoncapi-compat/>`__ pode ser usado para obter :c:func:"
"`PyWeakref_GetRef` no Python 3.12 e versões anteriores. (Contribuição de "
"Victor Stinner em :gh:`105927`.)"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:4
msgid ""
"The ``ma_version_tag`` field in :c:type:`PyDictObject` for extension modules "
"(:pep:`699`; :gh:`101193`)."
msgstr ""
"O campo ``ma_version_tag`` em :c:type:`PyDictObject` para módulos de "
"extensão (:pep:`699`; :gh:`101193`)."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:7
msgid ""
"Creating :c:data:`immutable types <Py_TPFLAGS_IMMUTABLETYPE>` with mutable "
"bases (:gh:`95388`)."
msgstr ""
"A criação de :c:data:`tipos imutáveis <Py_TPFLAGS_IMMUTABLETYPE>` com bases "
"mutáveis (:gh:`95388`)."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:10
msgid ""
"Functions to configure Python's initialization, deprecated in Python 3.11:"
msgstr ""
"Funções para configurar a inicialização do Python, descontinuadas no Python "
"3.11:"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:12
msgid ":c:func:`!PySys_SetArgvEx()`: Set :c:member:`PyConfig.argv` instead."
msgstr ":c:func:`!PySys_SetArgvEx()`: defina :c:member:`PyConfig.argv`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:14
msgid ":c:func:`!PySys_SetArgv()`: Set :c:member:`PyConfig.argv` instead."
msgstr ":c:func:`!PySys_SetArgv()`: defina :c:member:`PyConfig.argv`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:16
msgid ""
":c:func:`!Py_SetProgramName()`: Set :c:member:`PyConfig.program_name` "
"instead."
msgstr ""
":c:func:`!Py_SetProgramName()`: defina :c:member:`PyConfig.program_name`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:18
msgid ":c:func:`!Py_SetPythonHome()`: Set :c:member:`PyConfig.home` instead."
msgstr ":c:func:`!Py_SetPythonHome()`: defina :c:member:`PyConfig.home`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:21
#: ../../deprecations/c-api-pending-removal-in-3.14.rst:71
msgid ""
"The :c:func:`Py_InitializeFromConfig` API should be used with :c:type:"
"`PyConfig` instead."
msgstr ""
"Em vez disso, a API :c:func:`Py_InitializeFromConfig` deve ser usada com :c:"
"type:`PyConfig`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:24
msgid "Global configuration variables:"
msgstr "Variáveis de configuração globais"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:26
msgid ":c:var:`Py_DebugFlag`: Use :c:member:`PyConfig.parser_debug` instead."
msgstr ":c:var:`Py_DebugFlag`: use :c:member:`PyConfig.parser_debug`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:28
msgid ":c:var:`Py_VerboseFlag`: Use :c:member:`PyConfig.verbose` instead."
msgstr ":c:var:`Py_VerboseFlag`: use :c:member:`PyConfig.verbose`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:30
msgid ":c:var:`Py_QuietFlag`: Use :c:member:`PyConfig.quiet` instead."
msgstr ":c:var:`Py_QuietFlag`: use :c:member:`PyConfig.quiet`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:32
msgid ""
":c:var:`Py_InteractiveFlag`: Use :c:member:`PyConfig.interactive` instead."
msgstr ":c:var:`Py_InteractiveFlag`: use :c:member:`PyConfig.interactive`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:34
msgid ":c:var:`Py_InspectFlag`: Use :c:member:`PyConfig.inspect` instead."
msgstr ":c:var:`Py_InspectFlag`: use :c:member:`PyConfig.inspect`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:36
msgid ""
":c:var:`Py_OptimizeFlag`: Use :c:member:`PyConfig.optimization_level` "
"instead."
msgstr ":c:var:`Py_OptimizeFlag`: use :c:member:`PyConfig.optimization_level`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:38
msgid ":c:var:`Py_NoSiteFlag`: Use :c:member:`PyConfig.site_import` instead."
msgstr ":c:var:`Py_NoSiteFlag`: use :c:member:`PyConfig.site_import`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:40
msgid ""
":c:var:`Py_BytesWarningFlag`: Use :c:member:`PyConfig.bytes_warning` instead."
msgstr ":c:var:`Py_BytesWarningFlag`: use :c:member:`PyConfig.bytes_warning`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:42
msgid ""
":c:var:`Py_FrozenFlag`: Use :c:member:`PyConfig.pathconfig_warnings` instead."
msgstr ":c:var:`Py_FrozenFlag`: use :c:member:`PyConfig.pathconfig_warnings`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:44
msgid ""
":c:var:`Py_IgnoreEnvironmentFlag`: Use :c:member:`PyConfig.use_environment` "
"instead."
msgstr ""
":c:var:`Py_IgnoreEnvironmentFlag`: use :c:member:`PyConfig.use_environment`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:46
msgid ""
":c:var:`Py_DontWriteBytecodeFlag`: Use :c:member:`PyConfig.write_bytecode` "
"instead."
msgstr ""
":c:var:`Py_DontWriteBytecodeFlag`: use :c:member:`PyConfig.write_bytecode`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:48
msgid ""
":c:var:`Py_NoUserSiteDirectory`: Use :c:member:`PyConfig."
"user_site_directory` instead."
msgstr ""
":c:var:`Py_NoUserSiteDirectory`: use :c:member:`PyConfig."
"user_site_directory`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:50
msgid ""
":c:var:`Py_UnbufferedStdioFlag`: Use :c:member:`PyConfig.buffered_stdio` "
"instead."
msgstr ""
":c:var:`Py_UnbufferedStdioFlag`: use :c:member:`PyConfig.buffered_stdio`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:52
msgid ""
":c:var:`Py_HashRandomizationFlag`: Use :c:member:`PyConfig.use_hash_seed` "
"and :c:member:`PyConfig.hash_seed` instead."
msgstr ""
":c:var:`Py_HashRandomizationFlag`: use :c:member:`PyConfig.use_hash_seed` e :"
"c:member:`PyConfig.hash_seed`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:55
msgid ":c:var:`Py_IsolatedFlag`: Use :c:member:`PyConfig.isolated` instead."
msgstr ":c:var:`Py_IsolatedFlag`: use :c:member:`PyConfig.isolated`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:57
msgid ""
":c:var:`Py_LegacyWindowsFSEncodingFlag`: Use :c:member:`PyPreConfig."
"legacy_windows_fs_encoding` instead."
msgstr ""
":c:var:`Py_LegacyWindowsFSEncodingFlag`: use :c:member:`PyPreConfig."
"legacy_windows_fs_encoding`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:59
msgid ""
":c:var:`Py_LegacyWindowsStdioFlag`: Use :c:member:`PyConfig."
"legacy_windows_stdio` instead."
msgstr ""
":c:var:`Py_LegacyWindowsStdioFlag`: use :c:member:`PyConfig."
"legacy_windows_stdio`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:61
msgid ""
":c:var:`!Py_FileSystemDefaultEncoding`: Use :c:member:`PyConfig."
"filesystem_encoding` instead."
msgstr ""
":c:var:`!Py_FileSystemDefaultEncoding`: use :c:member:`PyConfig."
"filesystem_encoding`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:63
msgid ""
":c:var:`!Py_HasFileSystemDefaultEncoding`: Use :c:member:`PyConfig."
"filesystem_encoding` instead."
msgstr ""
":c:var:`!Py_HasFileSystemDefaultEncoding`: use :c:member:`PyConfig."
"filesystem_encoding`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:65
msgid ""
":c:var:`!Py_FileSystemDefaultEncodeErrors`: Use :c:member:`PyConfig."
"filesystem_errors` instead."
msgstr ""
":c:var:`!Py_FileSystemDefaultEncodeErrors`: use :c:member:`PyConfig."
"filesystem_errors`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:67
msgid ""
":c:var:`!Py_UTF8Mode`: Use :c:member:`PyPreConfig.utf8_mode` instead. (see :"
"c:func:`Py_PreInitialize`)"
msgstr ""
":c:var:`!Py_UTF8Mode`: use :c:member:`PyPreConfig.utf8_mode`. (veja :c:func:"
"`Py_PreInitialize`)"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:4
msgid "The bundled copy of ``libmpdecimal``."
msgstr "A cópia empacotada do ``libmpdecimal``."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:5
msgid ""
"The :c:func:`PyImport_ImportModuleNoBlock`: Use :c:func:"
"`PyImport_ImportModule` instead."
msgstr ""
":c:func:`PyImport_ImportModuleNoBlock`: use :c:func:`PyImport_ImportModule`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:7
msgid ""
":c:func:`PyWeakref_GetObject` and :c:func:`PyWeakref_GET_OBJECT`: Use :c:"
"func:`PyWeakref_GetRef` instead."
msgstr ""
":c:func:`PyWeakref_GetObject` e :c:func:`PyWeakref_GET_OBJECT`: use :c:func:"
"`PyWeakref_GetRef`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:9
msgid ""
":c:type:`Py_UNICODE` type and the :c:macro:`!Py_UNICODE_WIDE` macro: Use :c:"
"type:`wchar_t` instead."
msgstr ""
"O tipo :c:type:`Py_UNICODE` e a macro :c:macro:`!Py_UNICODE_WIDE`: use :c:"
"type:`wchar_t`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:11
msgid "Python initialization functions:"
msgstr "Funções de inicialização do Python"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:15
msgid ""
":c:func:`Py_GetExecPrefix`: Get :data:`sys.base_exec_prefix` and :data:`sys."
"exec_prefix` instead."
msgstr ""
":c:func:`Py_GetExecPrefix`: obtenha :data:`sys.base_exec_prefix` e :data:"
"`sys.exec_prefix`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:19
msgid ""
":c:func:`Py_GetPrefix`: Get :data:`sys.base_prefix` and :data:`sys.prefix` "
"instead."
msgstr ""
":c:func:`Py_GetPrefix`: obtenha :data:`sys.base_prefix` e :data:`sys.prefix`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:4
msgid ""
"The following APIs are deprecated and will be removed, although there is "
"currently no date scheduled for their removal."
msgstr ""
"As APIs a seguir foram descontinuadas e serão removidas, embora atualmente "
"não haja uma data agendada para sua remoção."

#: ../../deprecations/c-api-pending-removal-in-future.rst:7
msgid ":c:macro:`Py_TPFLAGS_HAVE_FINALIZE`: Unneeded since Python 3.8."
msgstr ":c:macro:`Py_TPFLAGS_HAVE_FINALIZE`: desnecessária desde o Python 3.8."

#: ../../deprecations/c-api-pending-removal-in-future.rst:9
msgid ":c:func:`PyErr_Fetch`: Use :c:func:`PyErr_GetRaisedException` instead."
msgstr ":c:func:`PyErr_Fetch`: use :c:func:`PyErr_GetRaisedException`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:11
msgid ""
":c:func:`PyErr_NormalizeException`: Use :c:func:`PyErr_GetRaisedException` "
"instead."
msgstr ""
":c:func:`PyErr_NormalizeException`: use :c:func:`PyErr_GetRaisedException`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:13
msgid ""
":c:func:`PyErr_Restore`: Use :c:func:`PyErr_SetRaisedException` instead."
msgstr ":c:func:`PyErr_Restore`: use :c:func:`PyErr_SetRaisedException`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:15
msgid ""
":c:func:`PyModule_GetFilename`: Use :c:func:`PyModule_GetFilenameObject` "
"instead."
msgstr ""
":c:func:`PyModule_GetFilename`: use :c:func:`PyModule_GetFilenameObject`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:17
msgid ":c:func:`PyOS_AfterFork`: Use :c:func:`PyOS_AfterFork_Child` instead."
msgstr ":c:func:`PyOS_AfterFork`: use :c:func:`PyOS_AfterFork_Child`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:19
msgid ""
":c:func:`PySlice_GetIndicesEx`: Use :c:func:`PySlice_Unpack` and :c:func:"
"`PySlice_AdjustIndices` instead."
msgstr ""
":c:func:`PySlice_GetIndicesEx`: use :c:func:`PySlice_Unpack` e :c:func:"
"`PySlice_AdjustIndices`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:21
msgid ""
":c:func:`!PyUnicode_AsDecodedObject`: Use :c:func:`PyCodec_Decode` instead."
msgstr ":c:func:`!PyUnicode_AsDecodedObject`: use :c:func:`PyCodec_Decode`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:23
msgid ""
":c:func:`!PyUnicode_AsDecodedUnicode`: Use :c:func:`PyCodec_Decode` instead."
msgstr ":c:func:`!PyUnicode_AsDecodedUnicode`: use :c:func:`PyCodec_Decode`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:25
msgid ""
":c:func:`!PyUnicode_AsEncodedObject`: Use :c:func:`PyCodec_Encode` instead."
msgstr ":c:func:`!PyUnicode_AsEncodedObject`: use :c:func:`PyCodec_Encode`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:27
msgid ""
":c:func:`!PyUnicode_AsEncodedUnicode`: Use :c:func:`PyCodec_Encode` instead."
msgstr ":c:func:`!PyUnicode_AsEncodedUnicode`: use :c:func:`PyCodec_Encode`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:29
msgid ":c:func:`PyUnicode_READY`: Unneeded since Python 3.12"
msgstr ":c:func:`PyUnicode_READY`: desnecessário desde o Python 3.12"

#: ../../deprecations/c-api-pending-removal-in-future.rst:31
msgid ":c:func:`!PyErr_Display`: Use :c:func:`PyErr_DisplayException` instead."
msgstr ":c:func:`!PyErr_Display`: use :c:func:`PyErr_DisplayException`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:33
msgid ""
":c:func:`!_PyErr_ChainExceptions`: Use :c:func:`!_PyErr_ChainExceptions1` "
"instead."
msgstr ""
":c:func:`!_PyErr_ChainExceptions`: use :c:func:`!_PyErr_ChainExceptions1`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:35
msgid ""
":c:member:`!PyBytesObject.ob_shash` member: call :c:func:`PyObject_Hash` "
"instead."
msgstr ""
"O membro :c:member:`!PyBytesObject.ob_shash`: chame :c:func:`PyObject_Hash`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:37
msgid ":c:member:`!PyDictObject.ma_version_tag` member."
msgstr "O membro :c:member:`!PyDictObject.ma_version_tag`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:38
msgid "Thread Local Storage (TLS) API:"
msgstr "API do Thread Local Storage (TLS):"

#: ../../deprecations/c-api-pending-removal-in-future.rst:40
msgid ""
":c:func:`PyThread_create_key`: Use :c:func:`PyThread_tss_alloc` instead."
msgstr ":c:func:`PyThread_create_key`: use :c:func:`PyThread_tss_alloc`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:42
msgid ":c:func:`PyThread_delete_key`: Use :c:func:`PyThread_tss_free` instead."
msgstr ":c:func:`PyThread_delete_key`: use :c:func:`PyThread_tss_free`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:44
msgid ""
":c:func:`PyThread_set_key_value`: Use :c:func:`PyThread_tss_set` instead."
msgstr ":c:func:`PyThread_set_key_value`: use :c:func:`PyThread_tss_set`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:46
msgid ""
":c:func:`PyThread_get_key_value`: Use :c:func:`PyThread_tss_get` instead."
msgstr ":c:func:`PyThread_get_key_value`: use :c:func:`PyThread_tss_get`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:48
msgid ""
":c:func:`PyThread_delete_key_value`: Use :c:func:`PyThread_tss_delete` "
"instead."
msgstr ""
":c:func:`PyThread_delete_key_value`: use :c:func:`PyThread_tss_delete`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:50
msgid ":c:func:`PyThread_ReInitTLS`: Unneeded since Python 3.7."
msgstr ":c:func:`PyThread_ReInitTLS`: desnecessário desde o Python 3.7."

#: ../../whatsnew/3.13.rst:2477
msgid "Build Changes"
msgstr "Mudanças na construção"

#: ../../whatsnew/3.13.rst:2479
msgid ""
"``arm64-apple-ios`` and ``arm64-apple-ios-simulator`` are both now :pep:`11` "
"tier 3 platforms. (:ref:`PEP 730 <whatsnew313-platform-support>` written and "
"implementation contributed by Russell Keith-Magee in :gh:`114099`.)"
msgstr ""
"``arm64-apple-ios`` e ``arm64-apple-ios-simulator`` são agora plataformas de "
"nível 3 da :pep:`11`. (Escrita e implementação da :ref:`PEP 730 <whatsnew313-"
"platform-support>` foi uma contribuição de Russell Keith-Magee em :gh:"
"`114099`.)"

#: ../../whatsnew/3.13.rst:2484
msgid ""
"``aarch64-linux-android`` and ``x86_64-linux-android`` are both now :pep:"
"`11` tier 3 platforms. (:ref:`PEP 738 <whatsnew313-platform-support>` "
"written and implementation contributed by Malcolm Smith in :gh:`116622`.)"
msgstr ""
"``aarch64-linux-android`` e ``x86_64-linux-android`` são agora plataformas "
"de nível 3 da :pep:`11`. (Escrita e implementação da :ref:`PEP 738 "
"<whatsnew313-platform-support>` foi uma contribuição de Malcolm Smith em :gh:"
"`116622`.)"

#: ../../whatsnew/3.13.rst:2489
msgid ""
"``wasm32-wasi`` is now a :pep:`11` tier 2 platform. (Contributed by Brett "
"Cannon in :gh:`115192`.)"
msgstr ""
"``wasm32-wasi`` agora é uma plataforma de nível 2 segundo a :pep:`11`. "
"(Contribuição de Brett Cannon em :gh:`115192`.)"

#: ../../whatsnew/3.13.rst:2492
msgid ""
"``wasm32-emscripten`` is no longer a :pep:`11` supported platform. "
"(Contributed by Brett Cannon in :gh:`115192`.)"
msgstr ""
"``wasm32-emscripten`` não é mais uma plataforma suportada pela :pep:`11`. "
"(Contribuição de Brett Cannon em :gh:`115192`.)"

#: ../../whatsnew/3.13.rst:2495
msgid ""
"Building CPython now requires a compiler with support for the C11 atomic "
"library, GCC built-in atomic functions, or MSVC interlocked intrinsics."
msgstr ""
"Construir CPython agora requer um compilador com suporte para a biblioteca "
"atômica C11, funções atômicas embutidas do GCC ou intrínsecos interligados "
"MSVC."

#: ../../whatsnew/3.13.rst:2498
msgid ""
"Autoconf 2.71 and aclocal 1.16.5 are now required to regenerate the :file:"
"`configure` script. (Contributed by Christian Heimes in :gh:`89886` and by "
"Victor Stinner in :gh:`112090`.)"
msgstr ""
"Autoconf 2.71 e aclocal 1.16.5 agora são necessários para regerar o script :"
"file:`configure`. (Contribuição de Christian Heimes em :gh:`89886` e de "
"Victor Stinner em :gh:`112090`.)"

#: ../../whatsnew/3.13.rst:2502
msgid ""
"SQLite 3.15.2 or newer is required to build the :mod:`sqlite3` extension "
"module. (Contributed by Erlend Aasland in :gh:`105875`.)"
msgstr ""
"SQLite 3.15.2 ou mais recente é necessário para construir o módulo de "
"extensão :mod:`sqlite3`. (Contribuição de Erlend Aasland em :gh:`105875`.)"

#: ../../whatsnew/3.13.rst:2506
msgid ""
"CPython now bundles the `mimalloc library`_ by default. It is licensed under "
"the MIT license; see :ref:`mimalloc license <mimalloc-license>`. The bundled "
"mimalloc has custom changes, see :gh:`113141` for details. (Contributed by "
"Dino Viehland in :gh:`109914`.)"
msgstr ""
"CPython agora inclui a `biblioteca mimalloc <https://github.com/microsoft/"
"mimalloc>`__ por padrão. Está licenciada sob a licença do MIT; veja :ref:"
"`licença do mimalloc <mimalloc-license>`. O mimalloc incluído tem alterações "
"personalizadas, veja :gh:`113141` para detalhes. (Contribuição de Dino "
"Viehland em :gh:`109914`.)"

#: ../../whatsnew/3.13.rst:2514
msgid ""
"The :file:`configure` option :option:`--with-system-libmpdec` now defaults "
"to ``yes``. The bundled copy of ``libmpdecimal`` will be removed in Python "
"3.15."
msgstr ""
"A opção :option:`--with-system-libmpdec` do :file:`configure` agora tem como "
"padrão ``yes``. A cópia empacotada de ``libmpdecimal`` será removida no "
"Python 3.15."

#: ../../whatsnew/3.13.rst:2518
msgid ""
"Python built with :file:`configure` :option:`--with-trace-refs` (tracing "
"references) is now ABI compatible with the Python release build and :ref:"
"`debug build <debug-build>`. (Contributed by Victor Stinner in :gh:`108634`.)"
msgstr ""
"Python construído com :option:`--with-trace-refs` (referências de "
"rastreamento) do :file:`configure` tem compatibilidade de ABI com a "
"construção de lançamento do Python e a :ref:`construção de depuração <debug-"
"build>`. (Contribuição de Victor Stinner em :gh:`108634`.)"

#: ../../whatsnew/3.13.rst:2523
msgid ""
"On POSIX systems, the pkg-config (``.pc``) filenames now include the ABI "
"flags.  For example, the free-threaded build generates ``python-3.13t.pc`` "
"and the debug build generates ``python-3.13d.pc``."
msgstr ""
"Em sistemas POSIX, os nomes de arquivos pkg-config (``.pc``) agora incluem "
"os sinalizadores de ABI. Por exemplo, a construção com threads livres gera "
"``python-3.13t.pc`` e a construção de depuração gera ``python-3.13d.pc``."

#: ../../whatsnew/3.13.rst:2527
msgid ""
"The ``errno``, ``fcntl``, ``grp``, ``md5``, ``pwd``, ``resource``, "
"``termios``, ``winsound``, ``_ctypes_test``, ``_multiprocessing."
"posixshmem``, ``_scproxy``, ``_stat``, ``_statistics``, ``_testconsole``, "
"``_testimportmultiple`` and ``_uuid`` C extensions are now built with the :"
"ref:`limited C API <limited-c-api>`. (Contributed by Victor Stinner in :gh:"
"`85283`.)"
msgstr ""
"As extensões C ``errno``, ``fcntl``, ``grp``, ``md5``, ``pwd``, "
"``resource``, ``termios``, ``winsound``, ``_ctypes_test``, "
"``_multiprocessing.posixshmem``, ``_scproxy``, ``_stat``, ``_statistics``, "
"``_testconsole``, ``_testimportmultiple`` e ``_uuid`` são agora construídas "
"com a :ref:`API C limitada <limited-c-api>`. (Contribuição de Victor Stinner "
"em :gh:`85283`.)"

#: ../../whatsnew/3.13.rst:2536
msgid "Porting to Python 3.13"
msgstr "Portando para o Python 3.13"

#: ../../whatsnew/3.13.rst:2538
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"Esta seção lista as alterações descritas anteriormente e outras correções "
"que podem exigir alterações no seu código."

#: ../../whatsnew/3.13.rst:2542
msgid "Changes in the Python API"
msgstr "Alterações na API Python"

#: ../../whatsnew/3.13.rst:2546
msgid ""
":ref:`PEP 667 <whatsnew313-locals-semantics>` introduces several changes to "
"the semantics of :func:`locals` and :attr:`f_locals <frame.f_locals>`:"
msgstr ""
":ref:`PEP 667 <whatsnew313-locals-semantics>` introduz várias mudanças na "
"semântica de :func:`locals` e :attr:`f_locals <frame.f_locals>`:"

#: ../../whatsnew/3.13.rst:2549
msgid ""
"Calling :func:`locals` in an :term:`optimized scope` now produces an "
"independent snapshot on each call, and hence no longer implicitly updates "
"previously returned references. Obtaining the legacy CPython behavior now "
"requires explicit calls to update the initially returned dictionary with the "
"results of subsequent calls to :func:`!locals`. Code execution functions "
"that implicitly target :func:`!locals` (such as ``exec`` and ``eval``) must "
"be passed an explicit namespace to access their results in an optimized "
"scope. (Changed as part of :pep:`667`.)"
msgstr ""
"Chamar :func:`locals` em um :term:`escopo otimizado` agora produz uma "
"captura independente em cada chamada e, portanto, não atualiza mais "
"implicitamente as referências retornadas anteriormente. Obter o "
"comportamento legado do CPython agora requer chamadas explícitas para "
"atualizar o dicionário inicialmente retornado com os resultados de chamadas "
"subsequentes para :func:`!locals`. Funções de execução de código que visam "
"implicitamente :func:`!locals` (como ``exec`` e ``eval``) devem receber um "
"espaço de nomes explícito para acessar seus resultados em um escopo "
"otimizado. (Alterado como parte da :pep:`667`.)"

#: ../../whatsnew/3.13.rst:2558
msgid ""
"Calling :func:`locals` from a comprehension at module or class scope "
"(including via ``exec`` or ``eval``) once more behaves as if the "
"comprehension were running as an independent nested function (i.e. the local "
"variables from the containing scope are not included). In Python 3.12, this "
"had changed to include the local variables from the containing scope when "
"implementing :pep:`709`. (Changed as part of :pep:`667`.)"
msgstr ""
"Chamar :func:`locals` de uma compreensão no módulo ou escopo de classe "
"(inclusive via ``exec`` ou ``eval``) mais uma vez se comporta como se a "
"compreensão estivesse sendo executada como uma função aninhada independente "
"(isto é, as variáveis ​​locais de o escopo que contém não está incluído). No "
"Python 3.12, isso mudou para incluir as variáveis ​​locais do escopo que o "
"contém ao implementar a :pep:`709`. (Alterado como parte da :pep:`667`.)"

#: ../../whatsnew/3.13.rst:2565
msgid ""
"Accessing :attr:`FrameType.f_locals <frame.f_locals>` in an :term:`optimized "
"scope` now returns a write-through proxy rather than a snapshot that gets "
"updated at ill-specified times. If a snapshot is desired, it must be created "
"explicitly with ``dict`` or the proxy's ``.copy()`` method. (Changed as part "
"of :pep:`667`.)"
msgstr ""
"Acessar :attr:`FrameType.f_locals <frame.f_locals>` em um :term:`escopo "
"otimizado` agora retorna um proxy de \"write-through\" em vez de uma captura "
"que é atualizado em horários mal especificados. Se uma captura for desejada, "
"ela deve ser criada explicitamente com ``dict`` ou com o método ``.copy()`` "
"do proxy. (Alterado como parte da :pep:`667`.)"

#: ../../whatsnew/3.13.rst:2571
msgid ""
":class:`functools.partial` now emits a :exc:`FutureWarning` when used as a "
"method. The behavior will change in future Python versions. Wrap it in :func:"
"`staticmethod` if you want to preserve the old behavior. (Contributed by "
"Serhiy Storchaka in :gh:`121027`.)"
msgstr ""
":class:`functools.partial` agora emite uma :exc:`FutureWarning` quando é "
"usado como método. Seu comportamento será alterado em versões futuras do "
"Python. Envolva-a em :func:`staticmethod` se quiser preservar o "
"comportamento antigo. (Contribuição de Serhiy Storchaka em :gh:`121027`.)"

#: ../../whatsnew/3.13.rst:2577
msgid ""
"An :exc:`OSError` is now raised by :func:`getpass.getuser` for any failure "
"to retrieve a username, instead of :exc:`ImportError` on non-Unix platforms "
"or :exc:`KeyError` on Unix platforms where the password database is empty."
msgstr ""
"Uma exceção :exc:`OSError` agora é levantada por :func:`getpass.getuser` "
"para qualquer falha na recuperação de um nome de usuário, em vez de :exc:"
"`ImportError` em plataformas não-Unix ou :exc:`KeyError` em plataformas Unix "
"onde o banco de dados de senhas está vazio."

#: ../../whatsnew/3.13.rst:2582
msgid ""
"The value of the :attr:`!mode` attribute of :class:`gzip.GzipFile` is now a "
"string (``'rb'`` or ``'wb'``) instead of an integer (``1`` or ``2``). The "
"value of the :attr:`!mode` attribute of the readable file-like object "
"returned by :meth:`zipfile.ZipFile.open` is now ``'rb'`` instead of ``'r'``. "
"(Contributed by Serhiy Storchaka in :gh:`115961`.)"
msgstr ""
"O valor do atributo :attr:`!mode` de :class:`gzip.GzipFile` agora é uma "
"string (``'rb'`` ou ``'wb'``) e não mais um inteiro (``1`` ou ``2``). O "
"valor do atributo :attr:`!mode` do objeto arquivo ou similar legível "
"retornado por :meth:`zipfile.ZipFile.open` é agora ``'rb'`` e não mais "
"``'r'``. (Contribuição de Serhiy Storchaka em :gh:`115961`.)"

#: ../../whatsnew/3.13.rst:2588
msgid ""
":class:`mailbox.Maildir` now ignores files with a leading dot (``.``). "
"(Contributed by Zackery Spytz in :gh:`65559`.)"
msgstr ""
":class:`mailbox.Maildir` agora ignora arquivos com um ponto inicial (``.``). "
"(Contribuição de Zackery Spytz em :gh:`65559`.)"

#: ../../whatsnew/3.13.rst:2591
msgid ""
":meth:`pathlib.Path.glob` and :meth:`~pathlib.Path.rglob` now return both "
"files and directories if a pattern that ends with \"``**``\" is given, "
"rather than directories only. Add a trailing slash to keep the previous "
"behavior and only match directories."
msgstr ""
":meth:`pathlib.Path.glob` e :meth:`~pathlib.Path.rglob` agora retornam "
"arquivos e diretórios se um padrão que termina com \"``**``\" for fornecido, "
"em vez de apenas diretórios. Os usuários podem adicionar uma barra final "
"para manter o comportamento anterior e corresponder apenas aos diretórios."

#: ../../whatsnew/3.13.rst:2596
msgid ""
"The :mod:`threading` module now expects the :mod:`!_thread` module to have "
"an :func:`!_is_main_interpreter` function. This function takes no arguments "
"and returns ``True`` if the current interpreter is the main interpreter."
msgstr ""
"O módulo :mod:`threading` agora espera que o módulo :mod:`!_thread` tenha "
"uma função ``_is_main_interpreter``. É uma função sem argumentos que retorna "
"``True`` se o interpretador atual for o interpretador principal."

#: ../../whatsnew/3.13.rst:2601
msgid ""
"Any library or application that provides a custom :mod:`!_thread` module "
"must provide :func:`!_is_main_interpreter`, just like the module's other "
"\"private\" attributes. (:gh:`112826`.)"
msgstr ""
"Qualquer biblioteca ou aplicação que forneça um módulo :mod:`!_thread` "
"personalizado deve obrigatoriamente fornecer :func:`!_is_main_interpreter`, "
"da mesma forma que outros atributos \"privados\" do módulo. (Veja :gh:"
"`112826`.)"

#: ../../whatsnew/3.13.rst:2608
msgid "Changes in the C API"
msgstr "Alterações na API C"

#: ../../whatsnew/3.13.rst:2610
msgid ""
"``Python.h`` no longer includes the ``<ieeefp.h>`` standard header. It was "
"included for the :c:func:`!finite` function which is now provided by the "
"``<math.h>`` header. It should now be included explicitly if needed. Remove "
"also the ``HAVE_IEEEFP_H`` macro. (Contributed by Victor Stinner in :gh:"
"`108765`.)"
msgstr ""
"``Python.h`` não inclui mais o cabeçalho padrão ``<ieeefp.h>``. Ele foi "
"incluído para a função :c:func:`!finite` que agora é fornecida pelo "
"cabeçalho ``<math.h>``. Agora deve ser incluído explicitamente, se "
"necessário. Remove também a macro ``HAVE_IEEEFP_H``. (Contribuição de Victor "
"Stinner em :gh:`108765`.)"

#: ../../whatsnew/3.13.rst:2616
msgid ""
"``Python.h`` no longer includes these standard header files: ``<time.h>``, "
"``<sys/select.h>`` and ``<sys/time.h>``. If needed, they should now be "
"included explicitly. For example, ``<time.h>`` provides the :c:func:`!clock` "
"and :c:func:`!gmtime` functions, ``<sys/select.h>`` provides the :c:func:`!"
"select` function, and ``<sys/time.h>`` provides the :c:func:`!futimes`, :c:"
"func:`!gettimeofday` and :c:func:`!setitimer` functions. (Contributed by "
"Victor Stinner in :gh:`108765`.)"
msgstr ""
"``Python.h`` não inclui mais estes arquivos de cabeçalho padrão: ``<time."
"h>``, ``<sys/select.h>`` e ``<sys/time.h>``. Se necessário, deverão agora "
"ser incluídos explicitamente. Por exemplo, ``<time.h>`` fornece as funções :"
"c:func:`!clock` e :c:func:`!gmtime`, ``<sys/select.h>`` fornece o :c:func:`!"
"select`, e ``<sys/time.h>`` fornece as funções :c:func:`!futimes`, :c:func:`!"
"gettimeofday` e :c:func:`!setitimer`. (Contribuição de Victor Stinner em :gh:"
"`108765`.)"

#: ../../whatsnew/3.13.rst:2624
msgid ""
"On Windows, ``Python.h`` no longer includes the ``<stddef.h>`` standard "
"header file. If needed, it should now be included explicitly. For example, "
"it provides :c:func:`!offsetof` function, and ``size_t`` and ``ptrdiff_t`` "
"types. Including ``<stddef.h>`` explicitly was already needed by all other "
"platforms, the ``HAVE_STDDEF_H`` macro is only defined on Windows. "
"(Contributed by Victor Stinner in :gh:`108765`.)"
msgstr ""
"No Windows, ``Python.h`` não inclui mais o arquivo de cabeçalho padrão "
"``<stddef.h>``. Se necessário, deverá agora ser incluído explicitamente. Por "
"exemplo, ele fornece a função :c:func:`!offsetof` e os tipos ``size_t`` e "
"``ptrdiff_t``. Incluindo ``<stddef.h>`` explicitamente já era necessário "
"para todas as outras plataformas, a macro ``HAVE_STDDEF_H`` só é definida no "
"Windows. (Contribuição de Victor Stinner em :gh:`108765`.)"

#: ../../whatsnew/3.13.rst:2631
msgid ""
"If the :c:macro:`Py_LIMITED_API` macro is defined, :c:macro:`!"
"Py_BUILD_CORE`, :c:macro:`!Py_BUILD_CORE_BUILTIN` and :c:macro:`!"
"Py_BUILD_CORE_MODULE` macros are now undefined by ``<Python.h>``. "
"(Contributed by Victor Stinner in :gh:`85283`.)"
msgstr ""
"Se a macro :c:macro:`Py_LIMITED_API` estiver definida, as macros :c:macro:`!"
"Py_BUILD_CORE`, :c:macro:`!Py_BUILD_CORE_BUILTIN` e :c:macro:`!"
"Py_BUILD_CORE_MODULE` agora são indefinidas por ``<Python.h>``. "
"(Contribuição de Victor Stinner em :gh:`85283`.)"

#: ../../whatsnew/3.13.rst:2636
msgid ""
"The old trashcan macros ``Py_TRASHCAN_SAFE_BEGIN`` and "
"``Py_TRASHCAN_SAFE_END`` were removed. They should be replaced by the new "
"macros ``Py_TRASHCAN_BEGIN`` and ``Py_TRASHCAN_END``."
msgstr ""
"As macros antigas da lixeira ``Py_TRASHCAN_SAFE_BEGIN`` e "
"``Py_TRASHCAN_SAFE_END`` foram removidas. Elas devem ser substituídas pelas "
"novas macros ``Py_TRASHCAN_BEGIN`` e ``Py_TRASHCAN_END``."

#: ../../whatsnew/3.13.rst:2640
msgid "A ``tp_dealloc`` function that has the old macros, such as::"
msgstr "Uma função ``tp_dealloc`` que contém as macros antigas, como::"

#: ../../whatsnew/3.13.rst:2642
msgid ""
"static void\n"
"mytype_dealloc(mytype *p)\n"
"{\n"
"    PyObject_GC_UnTrack(p);\n"
"    Py_TRASHCAN_SAFE_BEGIN(p);\n"
"    ...\n"
"    Py_TRASHCAN_SAFE_END\n"
"}"
msgstr ""
"static void\n"
"dealocador_de_meutipo(meutipo *p)\n"
"{\n"
"    PyObject_GC_UnTrack(p);\n"
"    Py_TRASHCAN_SAFE_BEGIN(p);\n"
"    ...\n"
"    Py_TRASHCAN_SAFE_END\n"
"}"

#: ../../whatsnew/3.13.rst:2651
msgid "should migrate to the new macros as follows::"
msgstr "deve migrar para as novas macros da seguinte forma::"

#: ../../whatsnew/3.13.rst:2653
msgid ""
"static void\n"
"mytype_dealloc(mytype *p)\n"
"{\n"
"    PyObject_GC_UnTrack(p);\n"
"    Py_TRASHCAN_BEGIN(p, mytype_dealloc)\n"
"    ...\n"
"    Py_TRASHCAN_END\n"
"}"
msgstr ""
"static void\n"
"dealocador_de_meutipo(meutipo *p)\n"
"{\n"
"    PyObject_GC_UnTrack(p);\n"
"    Py_TRASHCAN_BEGIN(p, dealocador_de_meutipo);\n"
"    ...\n"
"    Py_TRASHCAN_END\n"
"}"

#: ../../whatsnew/3.13.rst:2662
msgid ""
"Note that ``Py_TRASHCAN_BEGIN`` has a second argument which should be the "
"deallocation function it is in. The new macros were added in Python 3.8 and "
"the old macros were deprecated in Python 3.11. (Contributed by Irit Katriel "
"in :gh:`105111`.)"
msgstr ""
"Observe que ``Py_TRASHCAN_BEGIN`` tem um segundo argumento que deve ser a "
"função de desalocação em que está. As novas macros foram adicionadas no "
"Python 3.8 e as macros antigas foram descontinuadas no Python 3.11. "
"(Contribuição de Irit Katriel em :gh:`105111`.)"

#: ../../whatsnew/3.13.rst:2669
msgid ""
":ref:`PEP 667 <whatsnew313-locals-semantics>` introduces several changes to "
"frame-related functions:"
msgstr ""
":ref:`PEP 667 <whatsnew313-locals-semantics>` introduz várias mudanças em "
"funções relacionadas a quadro:"

#: ../../whatsnew/3.13.rst:2672
msgid ""
"The effects of mutating the dictionary returned from :c:func:"
"`PyEval_GetLocals` in an :term:`optimized scope` have changed. New dict "
"entries added this way will now *only* be visible to subsequent :c:func:"
"`PyEval_GetLocals` calls in that frame, as :c:func:`PyFrame_GetLocals`, :"
"func:`locals`, and :attr:`FrameType.f_locals <frame.f_locals>` no longer "
"access the same underlying cached dictionary. Changes made to entries for "
"actual variable names and names added via the write-through proxy interfaces "
"will be overwritten on subsequent calls to :c:func:`PyEval_GetLocals` in "
"that frame. The recommended code update depends on how the function was "
"being used, so refer to the deprecation notice on the function for details."
msgstr ""
"Os efeitos da mutação do dicionário retornado de :c:func:`PyEval_GetLocals` "
"em um :term:`escopo otimizado` foram alterados. Novas entradas de dict "
"adicionadas desta forma agora *apenas* ficarão visíveis para chamadas :c:"
"func:`PyEval_GetLocals` subsequentes nesse quadro, como :c:func:"
"`PyFrame_GetLocals`, :func:`locals` e :attr:`FrameType.f_locals <frame."
"f_locals>` não acessa mais o mesmo dicionário armazenado em cache "
"subjacente. As alterações feitas nas entradas para nomes de variáveis ​​reais "
"e nomes adicionados através das interfaces proxy de \"write-through\" serão "
"substituídas em chamadas subsequentes para :c:func:`PyEval_GetLocals` nesse "
"quadro. A atualização de código recomendada depende de como a função estava "
"sendo usada, portanto, consulte o aviso de descontinuação na função para "
"obter detalhes."

#: ../../whatsnew/3.13.rst:2685
msgid ""
"Calling :c:func:`PyFrame_GetLocals` in an :term:`optimized scope` now "
"returns a write-through proxy rather than a snapshot that gets updated at "
"ill-specified times. If a snapshot is desired, it must be created explicitly "
"(e.g. with :c:func:`PyDict_Copy`), or by calling the new :c:func:"
"`PyEval_GetFrameLocals` API."
msgstr ""
"Chamar :c:func:`PyFrame_GetLocals` em um :term:`escopo otimizado` agora "
"retorna um proxy de \"write-through\" em vez de uma captura que é atualizada "
"em horários mal especificados. Se uma captura for desejada, ela deve ser "
"criada explicitamente (por exemplo, com :c:func:`PyDict_Copy`) ou chamando a "
"nova API :c:func:`PyEval_GetFrameLocals`."

#: ../../whatsnew/3.13.rst:2692
msgid ""
":c:func:`!PyFrame_FastToLocals` and :c:func:`!PyFrame_FastToLocalsWithError` "
"no longer have any effect. Calling these functions has been redundant since "
"Python 3.11, when :c:func:`PyFrame_GetLocals` was first introduced."
msgstr ""
":c:func:`!PyFrame_FastToLocals` e :c:func:`!PyFrame_FastToLocalsWithError` "
"não têm mais nenhum efeito. Chamar essas funções tem sido redundante desde o "
"Python 3.11, quando :c:func:`PyFrame_GetLocals` foi introduzido pela "
"primeira vez."

#: ../../whatsnew/3.13.rst:2697
msgid ""
":c:func:`!PyFrame_LocalsToFast` no longer has any effect. Calling this "
"function is redundant now that :c:func:`PyFrame_GetLocals` returns a write-"
"through proxy for :term:`optimized scopes <optimized scope>`."
msgstr ""
":c:func:`!PyFrame_LocalsToFast` não tem mais efeito. Chamar esta função é "
"redundante agora que :c:func:`PyFrame_GetLocals` retorna um proxy de \"write-"
"through\" para :term:`escopos otimizados <escopo otimizado>`."

#: ../../whatsnew/3.13.rst:2702
msgid "Regression Test Changes"
msgstr "Mudanças em teste de regressão"

#: ../../whatsnew/3.13.rst:2704
msgid ""
"Python built with :file:`configure` :option:`--with-pydebug` now supports a :"
"option:`-X presite=package.module <-X>` command-line option. If used, it "
"specifies a module that should be imported early in the lifecycle of the "
"interpreter, before ``site.py`` is executed. (Contributed by Łukasz Langa "
"in :gh:`110769`.)"
msgstr ""
"Python construído com :option:`--with-pydebug` do :file:`configure` agora "
"oferece suporte a uma opção de linha de comando :option:`-X presite=pacote."
"módulo <-X>`. Se usado, especifica um módulo que deve ser importado no "
"início do ciclo de vida do interpretador, antes que ``site.py`` seja "
"executado. (Contribuição de Łukasz Langa em :gh:`110769`.)"
