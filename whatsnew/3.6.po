# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-11 15:45+0000\n"
"PO-Revision-Date: 2024-05-11 00:34+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../whatsnew/3.6.rst:3
msgid "What's New In Python 3.6"
msgstr "What's New In Python 3.6"

#: ../../whatsnew/3.6.rst:0
msgid "Editors"
msgstr "Editores"

#: ../../whatsnew/3.6.rst:5
msgid "Elvis Pranskevichus <elvis@magic.io>, Yury Selivanov <yury@magic.io>"
msgstr "Elvis Pranskevichus <elvis@magic.io>, Yury Selivanov <yury@magic.io>"

#: ../../whatsnew/3.6.rst:47
msgid ""
"This article explains the new features in Python 3.6, compared to 3.5. "
"Python 3.6 was released on December 23, 2016.  See the `changelog <https://"
"docs.python.org/3.6/whatsnew/changelog.html>`_ for a full list of changes."
msgstr ""
"This article explains the new features in Python 3.6, compared to 3.5. "
"Python 3.6 was released on December 23, 2016.  See the `changelog <https://"
"docs.python.org/3.6/whatsnew/changelog.html>`_ for a full list of changes."

#: ../../whatsnew/3.6.rst:54
msgid ":pep:`494` - Python 3.6 Release Schedule"
msgstr ":pep:`494` - Python 3.6 Release Schedule"

#: ../../whatsnew/3.6.rst:58
msgid "Summary -- Release highlights"
msgstr "Resumo -- Destaques da versão"

#: ../../whatsnew/3.6.rst:60
msgid "New syntax features:"
msgstr "Novos recursos de sintaxe:"

#: ../../whatsnew/3.6.rst:62
msgid ":ref:`PEP 498 <whatsnew36-pep498>`, formatted string literals."
msgstr ":ref:`PEP 498 <whatsnew36-pep498>`, formatted string literals."

#: ../../whatsnew/3.6.rst:64
msgid ":ref:`PEP 515 <whatsnew36-pep515>`, underscores in numeric literals."
msgstr ":ref:`PEP 515 <whatsnew36-pep515>`, underscores in numeric literals."

#: ../../whatsnew/3.6.rst:66
msgid ":ref:`PEP 526 <whatsnew36-pep526>`, syntax for variable annotations."
msgstr ":ref:`PEP 526 <whatsnew36-pep526>`, syntax for variable annotations."

#: ../../whatsnew/3.6.rst:68
msgid ":ref:`PEP 525 <whatsnew36-pep525>`, asynchronous generators."
msgstr ":ref:`PEP 525 <whatsnew36-pep525>`, asynchronous generators."

#: ../../whatsnew/3.6.rst:70
msgid ":ref:`PEP 530 <whatsnew36-pep530>`: asynchronous comprehensions."
msgstr ":ref:`PEP 530 <whatsnew36-pep530>`: asynchronous comprehensions."

#: ../../whatsnew/3.6.rst:73
msgid "New library modules:"
msgstr "Novos módulos de biblioteca:"

#: ../../whatsnew/3.6.rst:75
msgid ""
":mod:`secrets`: :ref:`PEP 506 -- Adding A Secrets Module To The Standard "
"Library <whatsnew36-pep506>`."
msgstr ""
":mod:`secrets`: :ref:`PEP 506 -- Adding A Secrets Module To The Standard "
"Library <whatsnew36-pep506>`."

#: ../../whatsnew/3.6.rst:78
msgid "CPython implementation improvements:"
msgstr "Melhorias na implementação do CPython:"

#: ../../whatsnew/3.6.rst:80
msgid ""
"The :ref:`dict <typesmapping>` type has been reimplemented to use a :ref:"
"`more compact representation <whatsnew36-compactdict>` based on `a proposal "
"by Raymond Hettinger <https://mail.python.org/pipermail/python-dev/2012-"
"December/123028.html>`_ and similar to the `PyPy dict implementation`_.  "
"This resulted in dictionaries using 20% to 25% less memory when compared to "
"Python 3.5."
msgstr ""
"The :ref:`dict <typesmapping>` type has been reimplemented to use a :ref:"
"`more compact representation <whatsnew36-compactdict>` based on `a proposal "
"by Raymond Hettinger <https://mail.python.org/pipermail/python-dev/2012-"
"December/123028.html>`_ and similar to the `PyPy dict implementation`_. This "
"resulted in dictionaries using 20% to 25% less memory when compared to "
"Python 3.5."

#: ../../whatsnew/3.6.rst:87
msgid ""
"Customization of class creation has been simplified with the :ref:`new "
"protocol <whatsnew36-pep487>`."
msgstr ""
"Customization of class creation has been simplified with the :ref:`new "
"protocol <whatsnew36-pep487>`."

#: ../../whatsnew/3.6.rst:90
msgid ""
"The class attribute definition order is :ref:`now preserved  <whatsnew36-"
"pep520>`."
msgstr ""
"The class attribute definition order is :ref:`now preserved <whatsnew36-"
"pep520>`."

#: ../../whatsnew/3.6.rst:93
msgid ""
"The order of elements in ``**kwargs`` now :ref:`corresponds to the order "
"<whatsnew36-pep468>` in which keyword arguments were passed to the function."
msgstr ""
"The order of elements in ``**kwargs`` now :ref:`corresponds to the order "
"<whatsnew36-pep468>` in which keyword arguments were passed to the function."

#: ../../whatsnew/3.6.rst:97
msgid ""
"DTrace and SystemTap :ref:`probing support <whatsnew36-tracing>` has been "
"added."
msgstr ""
"DTrace and SystemTap :ref:`probing support <whatsnew36-tracing>` has been "
"added."

#: ../../whatsnew/3.6.rst:100
msgid ""
"The new :ref:`PYTHONMALLOC <whatsnew36-pythonmalloc>` environment variable "
"can now be used to debug the interpreter memory allocation and access errors."
msgstr ""
"The new :ref:`PYTHONMALLOC <whatsnew36-pythonmalloc>` environment variable "
"can now be used to debug the interpreter memory allocation and access errors."

#: ../../whatsnew/3.6.rst:105
msgid "Significant improvements in the standard library:"
msgstr "Melhorias significativas na biblioteca padrão:"

#: ../../whatsnew/3.6.rst:107
msgid ""
"The :mod:`asyncio` module has received new features, significant usability "
"and performance improvements, and a fair amount of bug fixes. Starting with "
"Python 3.6 the ``asyncio`` module is no longer provisional and its API is "
"considered stable."
msgstr ""
"The :mod:`asyncio` module has received new features, significant usability "
"and performance improvements, and a fair amount of bug fixes. Starting with "
"Python 3.6 the ``asyncio`` module is no longer provisional and its API is "
"considered stable."

#: ../../whatsnew/3.6.rst:112
msgid ""
"A new :ref:`file system path protocol <whatsnew36-pep519>` has been "
"implemented to support :term:`path-like objects <path-like object>`. All "
"standard library functions operating on paths have been updated to work with "
"the new protocol."
msgstr ""
"A new :ref:`file system path protocol <whatsnew36-pep519>` has been "
"implemented to support :term:`path-like objects <path-like object>`. All "
"standard library functions operating on paths have been updated to work with "
"the new protocol."

#: ../../whatsnew/3.6.rst:117
msgid ""
"The :mod:`datetime` module has gained support for :ref:`Local Time "
"Disambiguation <whatsnew36-pep495>`."
msgstr ""
"The :mod:`datetime` module has gained support for :ref:`Local Time "
"Disambiguation <whatsnew36-pep495>`."

#: ../../whatsnew/3.6.rst:120
msgid ""
"The :mod:`typing` module received a number of :ref:`improvements <whatsnew36-"
"typing>`."
msgstr ""
"The :mod:`typing` module received a number of :ref:`improvements <whatsnew36-"
"typing>`."

#: ../../whatsnew/3.6.rst:123
msgid ""
"The :mod:`tracemalloc` module has been significantly reworked and is now "
"used to provide better output for :exc:`ResourceWarning` as well as provide "
"better diagnostics for memory allocation errors. See the :ref:`PYTHONMALLOC "
"section <whatsnew36-pythonmalloc>` for more information."
msgstr ""
"The :mod:`tracemalloc` module has been significantly reworked and is now "
"used to provide better output for :exc:`ResourceWarning` as well as provide "
"better diagnostics for memory allocation errors. See the :ref:`PYTHONMALLOC "
"section <whatsnew36-pythonmalloc>` for more information."

#: ../../whatsnew/3.6.rst:130
msgid "Security improvements:"
msgstr "Melhorias de Segurança:"

#: ../../whatsnew/3.6.rst:132
msgid ""
"The new :mod:`secrets` module has been added to simplify the generation of "
"cryptographically strong pseudo-random numbers suitable for managing secrets "
"such as account authentication, tokens, and similar."
msgstr ""
"The new :mod:`secrets` module has been added to simplify the generation of "
"cryptographically strong pseudo-random numbers suitable for managing secrets "
"such as account authentication, tokens, and similar."

#: ../../whatsnew/3.6.rst:136 ../../whatsnew/3.6.rst:1283
msgid ""
"On Linux, :func:`os.urandom` now blocks until the system urandom entropy "
"pool is initialized to increase the security. See the :pep:`524` for the "
"rationale."
msgstr ""
"On Linux, :func:`os.urandom` now blocks until the system urandom entropy "
"pool is initialized to increase the security. See the :pep:`524` for the "
"rationale."

#: ../../whatsnew/3.6.rst:140
msgid "The :mod:`hashlib` and :mod:`ssl` modules now support OpenSSL 1.1.0."
msgstr "Модулі :mod:`hashlib` і :mod:`ssl` тепер підтримують OpenSSL 1.1.0."

#: ../../whatsnew/3.6.rst:142
msgid ""
"The default settings and feature set of the :mod:`ssl` module have been "
"improved."
msgstr ""
"The default settings and feature set of the :mod:`ssl` module have been "
"improved."

#: ../../whatsnew/3.6.rst:145
msgid ""
"The :mod:`hashlib` module received support for the BLAKE2, SHA-3 and SHAKE "
"hash algorithms and the :func:`~hashlib.scrypt` key derivation function."
msgstr ""
"The :mod:`hashlib` module received support for the BLAKE2, SHA-3 and SHAKE "
"hash algorithms and the :func:`~hashlib.scrypt` key derivation function."

#: ../../whatsnew/3.6.rst:149
msgid "Windows improvements:"
msgstr "Melhorias do Windows:"

#: ../../whatsnew/3.6.rst:151
msgid ""
":ref:`PEP 528 <whatsnew36-pep528>` and :ref:`PEP 529 <whatsnew36-pep529>`, "
"Windows filesystem and console encoding changed to UTF-8."
msgstr ""
":ref:`PEP 528 <whatsnew36-pep528>` і :ref:`PEP 529 <whatsnew36-pep529>`, "
"файлову систему Windows і кодування консолі змінено на UTF-8."

#: ../../whatsnew/3.6.rst:154
msgid ""
"The ``py.exe`` launcher, when used interactively, no longer prefers Python 2 "
"over Python 3 when the user doesn't specify a version (via command line "
"arguments or a config file).  Handling of shebang lines remains unchanged - "
"\"python\" refers to Python 2 in that case."
msgstr ""
"The ``py.exe`` launcher, when used interactively, no longer prefers Python 2 "
"over Python 3 when the user doesn't specify a version (via command line "
"arguments or a config file). Handling of shebang lines remains unchanged - "
"\"python\" refers to Python 2 in that case."

#: ../../whatsnew/3.6.rst:159
msgid ""
"``python.exe`` and ``pythonw.exe`` have been marked as long-path aware, "
"which means that the 260 character path limit may no longer apply. See :ref:"
"`removing the MAX_PATH limitation <max-path>` for details."
msgstr ""
"``python.exe`` and ``pythonw.exe`` have been marked as long-path aware, "
"which means that the 260 character path limit may no longer apply. See :ref:"
"`removing the MAX_PATH limitation <max-path>` for details."

#: ../../whatsnew/3.6.rst:163
msgid ""
"A ``._pth`` file can be added to force isolated mode and fully specify all "
"search paths to avoid registry and environment lookup. See :ref:`the "
"documentation <windows_finding_modules>` for more information."
msgstr ""
"Файл ``._pth`` может быть добавлен для принудительного изолированного режима "
"и полностью указать все пути поиска, чтобы избежать поиска в реестре и "
"среде. Дополнительную информацию см. в документации "
"<windows_finding_modules>."

#: ../../whatsnew/3.6.rst:167
msgid ""
"A ``python36.zip`` file now works as a landmark to infer :envvar:"
"`PYTHONHOME`. See :ref:`the documentation <windows_finding_modules>` for "
"more information."
msgstr ""
"Файл ``python36.zip`` теперь служит ориентиром для вывода:envvar:"
"`PYTHONHOME`. Дополнительную информацию см. в документации "
"<windows_finding_modules>."

#: ../../whatsnew/3.6.rst:176
msgid "New Features"
msgstr "Novas funcionalidades"

#: ../../whatsnew/3.6.rst:181
msgid "PEP 498: Formatted string literals"
msgstr "PEP 498: Formatted string literals"

#: ../../whatsnew/3.6.rst:183
msgid ""
":pep:`498` introduces a new kind of string literals: *f-strings*, or :ref:"
"`formatted string literals <f-strings>`."
msgstr ""
":pep:`498` introduces a new kind of string literals: *f-strings*, or :ref:"
"`formatted string literals <f-strings>`."

#: ../../whatsnew/3.6.rst:186
msgid ""
"Formatted string literals are prefixed with ``'f'`` and are similar to the "
"format strings accepted by :meth:`str.format`.  They contain replacement "
"fields surrounded by curly braces.  The replacement fields are expressions, "
"which are evaluated at run time, and then formatted using the :func:`format` "
"protocol::"
msgstr ""
"Formatted string literals are prefixed with ``'f'`` and are similar to the "
"format strings accepted by :meth:`str.format`. They contain replacement "
"fields surrounded by curly braces. The replacement fields are expressions, "
"which are evaluated at run time, and then formatted using the :func:`format` "
"protocol::"

#: ../../whatsnew/3.6.rst:192
msgid ""
">>> name = \"Fred\"\n"
">>> f\"He said his name is {name}.\"\n"
"'He said his name is Fred.'\n"
">>> width = 10\n"
">>> precision = 4\n"
">>> value = decimal.Decimal(\"12.34567\")\n"
">>> f\"result: {value:{width}.{precision}}\"  # nested fields\n"
"'result:      12.35'"
msgstr ""
">>> name = \"Fred\"\n"
">>> f\"He said his name is {name}.\"\n"
"'He said his name is Fred.'\n"
">>> width = 10\n"
">>> precision = 4\n"
">>> value = decimal.Decimal(\"12.34567\")\n"
">>> f\"result: {value:{width}.{precision}}\"  # nested fields\n"
"'result:      12.35'"

#: ../../whatsnew/3.6.rst:203
msgid ":pep:`498` -- Literal String Interpolation."
msgstr ":pep:`498` -- Literal String Interpolation."

#: ../../whatsnew/3.6.rst:204
msgid "PEP written and implemented by Eric V. Smith."
msgstr "PEP написаний і реалізований Еріком В. Смітом."

#: ../../whatsnew/3.6.rst:206
msgid ":ref:`Feature documentation <f-strings>`."
msgstr ":ref:`Feature documentation <f-strings>`."

#: ../../whatsnew/3.6.rst:212
msgid "PEP 526: Syntax for variable annotations"
msgstr "PEP 526: Syntax for variable annotations"

#: ../../whatsnew/3.6.rst:214
msgid ""
":pep:`484` introduced the standard for type annotations of function "
"parameters, a.k.a. type hints. This PEP adds syntax to Python for annotating "
"the types of variables including class variables and instance variables::"
msgstr ""
":pep:`484` introduced the standard for type annotations of function "
"parameters, a.k.a. type hints. This PEP adds syntax to Python for annotating "
"the types of variables including class variables and instance variables::"

#: ../../whatsnew/3.6.rst:218
msgid ""
"primes: List[int] = []\n"
"\n"
"captain: str  # Note: no initial value!\n"
"\n"
"class Starship:\n"
"    stats: Dict[str, int] = {}"
msgstr ""
"primes: List[int] = []\n"
"\n"
"captain: str  # Note: no initial value!\n"
"\n"
"class Starship:\n"
"    stats: Dict[str, int] = {}"

#: ../../whatsnew/3.6.rst:225
msgid ""
"Just as for function annotations, the Python interpreter does not attach any "
"particular meaning to variable annotations and only stores them in the "
"``__annotations__`` attribute of a class or module."
msgstr ""
"Just as for function annotations, the Python interpreter does not attach any "
"particular meaning to variable annotations and only stores them in the "
"``__annotations__`` attribute of a class or module."

#: ../../whatsnew/3.6.rst:229
msgid ""
"In contrast to variable declarations in statically typed languages, the goal "
"of annotation syntax is to provide an easy way to specify structured type "
"metadata for third party tools and libraries via the abstract syntax tree "
"and the ``__annotations__`` attribute."
msgstr ""
"In contrast to variable declarations in statically typed languages, the goal "
"of annotation syntax is to provide an easy way to specify structured type "
"metadata for third party tools and libraries via the abstract syntax tree "
"and the ``__annotations__`` attribute."

#: ../../whatsnew/3.6.rst:236
msgid ":pep:`526` -- Syntax for variable annotations."
msgstr ":pep:`526` -- Syntax for variable annotations."

#: ../../whatsnew/3.6.rst:237
msgid ""
"PEP written by Ryan Gonzalez, Philip House, Ivan Levkivskyi, Lisa Roach, and "
"Guido van Rossum. Implemented by Ivan Levkivskyi."
msgstr ""
"PEP written by Ryan Gonzalez, Philip House, Ivan Levkivskyi, Lisa Roach, and "
"Guido van Rossum. Implemented by Ivan Levkivskyi."

#: ../../whatsnew/3.6.rst:240
msgid ""
"Tools that use or will use the new syntax: `mypy <https://www.mypy-lang.org/"
">`_, `pytype <https://github.com/google/pytype>`_, PyCharm, etc."
msgstr ""
"Инструменты, которые используют или будут использовать новый синтаксис: "
"`mypy <https://www.mypy-lang.org/>`_, `pytype <https://github.com/google/"
"pytype>`_, PyCharm и т. д. ."

#: ../../whatsnew/3.6.rst:248
msgid "PEP 515: Underscores in Numeric Literals"
msgstr "PEP 515: Underscores in Numeric Literals"

#: ../../whatsnew/3.6.rst:250
msgid ""
":pep:`515` adds the ability to use underscores in numeric literals for "
"improved readability.  For example::"
msgstr ""
":pep:`515` adds the ability to use underscores in numeric literals for "
"improved readability. For example::"

#: ../../whatsnew/3.6.rst:253
msgid ""
">>> 1_000_000_000_000_000\n"
"1000000000000000\n"
">>> 0x_FF_FF_FF_FF\n"
"4294967295"
msgstr ""
">>> 1_000_000_000_000_000\n"
"1000000000000000\n"
">>> 0x_FF_FF_FF_FF\n"
"4294967295"

#: ../../whatsnew/3.6.rst:258
msgid ""
"Single underscores are allowed between digits and after any base specifier.  "
"Leading, trailing, or multiple underscores in a row are not allowed."
msgstr ""
"Single underscores are allowed between digits and after any base specifier. "
"Leading, trailing, or multiple underscores in a row are not allowed."

#: ../../whatsnew/3.6.rst:262
msgid ""
"The :ref:`string formatting <formatspec>` language also now has support for "
"the ``'_'`` option to signal the use of an underscore for a thousands "
"separator for floating-point presentation types and for integer presentation "
"type ``'d'``.  For integer presentation types ``'b'``, ``'o'``, ``'x'``, and "
"``'X'``, underscores will be inserted every 4 digits::"
msgstr ""
"The :ref:`string formatting <formatspec>` language also now has support for "
"the ``'_'`` option to signal the use of an underscore for a thousands "
"separator for floating-point presentation types and for integer presentation "
"type ``'d'``.  For integer presentation types ``'b'``, ``'o'``, ``'x'``, and "
"``'X'``, underscores will be inserted every 4 digits::"

#: ../../whatsnew/3.6.rst:269
msgid ""
">>> '{:_}'.format(1000000)\n"
"'1_000_000'\n"
">>> '{:_x}'.format(0xFFFFFFFF)\n"
"'ffff_ffff'"
msgstr ""
">>> '{:_}'.format(1000000)\n"
"'1_000_000'\n"
">>> '{:_x}'.format(0xFFFFFFFF)\n"
"'ffff_ffff'"

#: ../../whatsnew/3.6.rst:276
msgid ":pep:`515` -- Underscores in Numeric Literals"
msgstr ":pep:`515` -- Underscores in Numeric Literals"

#: ../../whatsnew/3.6.rst:277
msgid "PEP written by Georg Brandl and Serhiy Storchaka."
msgstr "PEP written by Georg Brandl and Serhiy Storchaka."

#: ../../whatsnew/3.6.rst:283
msgid "PEP 525: Asynchronous Generators"
msgstr "PEP 525: Asynchronous Generators"

#: ../../whatsnew/3.6.rst:285
msgid ""
":pep:`492` introduced support for native coroutines and ``async`` / "
"``await`` syntax to Python 3.5.  A notable limitation of the Python 3.5 "
"implementation is that it was not possible to use ``await`` and ``yield`` in "
"the same function body.  In Python 3.6 this restriction has been lifted, "
"making it possible to define *asynchronous generators*::"
msgstr ""
":pep:`492` introduced support for native coroutines and ``async`` / "
"``await`` syntax to Python 3.5. A notable limitation of the Python 3.5 "
"implementation is that it was not possible to use ``await`` and ``yield`` in "
"the same function body. In Python 3.6 this restriction has been lifted, "
"making it possible to define *asynchronous generators*::"

#: ../../whatsnew/3.6.rst:291
msgid ""
"async def ticker(delay, to):\n"
"    \"\"\"Yield numbers from 0 to *to* every *delay* seconds.\"\"\"\n"
"    for i in range(to):\n"
"        yield i\n"
"        await asyncio.sleep(delay)"
msgstr ""
"асинхронный тикер определения (задержка, до): \"\"\"Выдавайте числа от 0 до "
"*до* каждые *задержку* секунд.\"\"\" для меня в диапазоне (до): выход я "
"ждать asyncio.sleep(задержка)"

#: ../../whatsnew/3.6.rst:297
msgid "The new syntax allows for faster and more concise code."
msgstr "The new syntax allows for faster and more concise code."

#: ../../whatsnew/3.6.rst:301
msgid ":pep:`525` -- Asynchronous Generators"
msgstr ":pep:`525` -- Asynchronous Generators"

#: ../../whatsnew/3.6.rst:302 ../../whatsnew/3.6.rst:323
msgid "PEP written and implemented by Yury Selivanov."
msgstr "PEP written and implemented by Yury Selivanov."

#: ../../whatsnew/3.6.rst:308
msgid "PEP 530: Asynchronous Comprehensions"
msgstr "PEP 530: Asynchronous Comprehensions"

#: ../../whatsnew/3.6.rst:310
msgid ""
":pep:`530` adds support for using ``async for`` in list, set, dict "
"comprehensions and generator expressions::"
msgstr ""
":pep:`530` adds support for using ``async for`` in list, set, dict "
"comprehensions and generator expressions::"

#: ../../whatsnew/3.6.rst:313
msgid "result = [i async for i in aiter() if i % 2]"
msgstr "result = [i async for i in aiter() if i % 2]"

#: ../../whatsnew/3.6.rst:315
msgid ""
"Additionally, ``await`` expressions are supported in all kinds of "
"comprehensions::"
msgstr ""
"Additionally, ``await`` expressions are supported in all kinds of "
"comprehensions::"

#: ../../whatsnew/3.6.rst:318
msgid "result = [await fun() for fun in funcs if await condition()]"
msgstr "result = [await fun() for fun in funcs if await condition()]"

#: ../../whatsnew/3.6.rst:322
msgid ":pep:`530` -- Asynchronous Comprehensions"
msgstr ":pep:`530` -- Asynchronous Comprehensions"

#: ../../whatsnew/3.6.rst:329
msgid "PEP 487: Simpler customization of class creation"
msgstr "PEP 487: Simpler customization of class creation"

#: ../../whatsnew/3.6.rst:331
msgid ""
"It is now possible to customize subclass creation without using a metaclass. "
"The new ``__init_subclass__`` classmethod will be called on the base class "
"whenever a new subclass is created::"
msgstr ""
"It is now possible to customize subclass creation without using a metaclass. "
"The new ``__init_subclass__`` classmethod will be called on the base class "
"whenever a new subclass is created::"

#: ../../whatsnew/3.6.rst:335
msgid ""
"class PluginBase:\n"
"    subclasses = []\n"
"\n"
"    def __init_subclass__(cls, **kwargs):\n"
"        super().__init_subclass__(**kwargs)\n"
"        cls.subclasses.append(cls)\n"
"\n"
"class Plugin1(PluginBase):\n"
"    pass\n"
"\n"
"class Plugin2(PluginBase):\n"
"    pass"
msgstr ""
"class PluginBase:\n"
"    subclasses = []\n"
"\n"
"    def __init_subclass__(cls, **kwargs):\n"
"        super().__init_subclass__(**kwargs)\n"
"        cls.subclasses.append(cls)\n"
"\n"
"class Plugin1(PluginBase):\n"
"    pass\n"
"\n"
"class Plugin2(PluginBase):\n"
"    pass"

#: ../../whatsnew/3.6.rst:348
msgid ""
"In order to allow zero-argument :func:`super` calls to work correctly from :"
"meth:`~object.__init_subclass__` implementations, custom metaclasses must "
"ensure that the new ``__classcell__`` namespace entry is propagated to "
"``type.__new__`` (as described in :ref:`class-object-creation`)."
msgstr ""
"Щоб дозволити викликам :func:`super` із нульовим аргументом правильно "
"працювати з реалізацій :meth:`~object.__init_subclass__`, спеціальні "
"метакласи мають гарантувати, що новий запис простору імен ``__classcell__`` "
"поширюється на ``type. __new__`` (як описано в :ref:`class-object-creation`)."

#: ../../whatsnew/3.6.rst:355 ../../whatsnew/3.6.rst:393
msgid ":pep:`487` -- Simpler customization of class creation"
msgstr ":pep:`487` -- Простіша настройка створення класів"

#: ../../whatsnew/3.6.rst:356 ../../whatsnew/3.6.rst:394
msgid "PEP written and implemented by Martin Teichmann."
msgstr "PEP написаний і реалізований Мартіном Тайхманном."

#: ../../whatsnew/3.6.rst:358
msgid ":ref:`Feature documentation <class-customization>`"
msgstr ":ref:`Feature documentation <class-customization>`"

#: ../../whatsnew/3.6.rst:364
msgid "PEP 487: Descriptor Protocol Enhancements"
msgstr "PEP 487: Покращення протоколу дескриптора"

#: ../../whatsnew/3.6.rst:366
msgid ""
":pep:`487` extends the descriptor protocol to include the new optional :meth:"
"`~object.__set_name__` method.  Whenever a new class is defined, the new "
"method will be called on all descriptors included in the definition, "
"providing them with a reference to the class being defined and the name "
"given to the descriptor within the class namespace.  In other words, "
"instances of descriptors can now know the attribute name of the descriptor "
"in the owner class::"
msgstr ""
":pep:`487` розширює протокол дескриптора, щоб включити новий необов’язковий "
"метод :meth:`~object.__set_name__`. Кожного разу, коли визначається новий "
"клас, новий метод буде викликаний для всіх дескрипторів, включених у "
"визначення, надаючи їм посилання на клас, що визначається, і ім’я, дане "
"дескриптору в просторі імен класу. Іншими словами, екземпляри дескрипторів "
"тепер можуть знати назву атрибута дескриптора в класі власника::"

#: ../../whatsnew/3.6.rst:374
msgid ""
"class IntField:\n"
"    def __get__(self, instance, owner):\n"
"        return instance.__dict__[self.name]\n"
"\n"
"    def __set__(self, instance, value):\n"
"        if not isinstance(value, int):\n"
"            raise ValueError(f'expecting integer in {self.name}')\n"
"        instance.__dict__[self.name] = value\n"
"\n"
"    # this is the new initializer:\n"
"    def __set_name__(self, owner, name):\n"
"        self.name = name\n"
"\n"
"class Model:\n"
"    int_field = IntField()"
msgstr ""
"class IntField:\n"
"    def __get__(self, instance, owner):\n"
"        return instance.__dict__[self.name]\n"
"\n"
"    def __set__(self, instance, value):\n"
"        if not isinstance(value, int):\n"
"            raise ValueError(f'expecting integer in {self.name}')\n"
"        instance.__dict__[self.name] = value\n"
"\n"
"    # this is the new initializer:\n"
"    def __set_name__(self, owner, name):\n"
"        self.name = name\n"
"\n"
"class Model:\n"
"    int_field = IntField()"

#: ../../whatsnew/3.6.rst:396
msgid ":ref:`Feature documentation <descriptors>`"
msgstr ":ref:`Feature documentation <descriptors>`"

#: ../../whatsnew/3.6.rst:402
msgid "PEP 519: Adding a file system path protocol"
msgstr "PEP 519: Додавання протоколу шляху файлової системи"

#: ../../whatsnew/3.6.rst:404
msgid ""
"File system paths have historically been represented as :class:`str` or :"
"class:`bytes` objects. This has led to people who write code which operate "
"on file system paths to assume that such objects are only one of those two "
"types (an :class:`int` representing a file descriptor does not count as that "
"is not a file path). Unfortunately that assumption prevents alternative "
"object representations of file system paths like :mod:`pathlib` from working "
"with pre-existing code, including Python's standard library."
msgstr ""
"Шляхи файлової системи історично представлялися як об’єкти :class:`str` або :"
"class:`bytes`. Це призвело до того, що люди, які пишуть код, який працює зі "
"шляхами файлової системи, припускають, що такі об’єкти є лише одним із цих "
"двох типів (:class:`int`, що представляє дескриптор файлу, не вважається, "
"оскільки це не шлях до файлу). На жаль, це припущення не дозволяє "
"альтернативним представленням об’єктів шляхів файлової системи, таким як :"
"mod:`pathlib`, працювати з уже існуючим кодом, включаючи стандартну "
"бібліотеку Python."

#: ../../whatsnew/3.6.rst:413
msgid ""
"To fix this situation, a new interface represented by :class:`os.PathLike` "
"has been defined. By implementing the :meth:`~os.PathLike.__fspath__` "
"method, an object signals that it represents a path. An object can then "
"provide a low-level representation of a file system path as a :class:`str` "
"or :class:`bytes` object. This means an object is considered :term:`path-"
"like <path-like object>` if it implements :class:`os.PathLike` or is a :"
"class:`str` or :class:`bytes` object which represents a file system path. "
"Code can use :func:`os.fspath`, :func:`os.fsdecode`, or :func:`os.fsencode` "
"to explicitly get a :class:`str` and/or :class:`bytes` representation of a "
"path-like object."
msgstr ""
"Щоб виправити цю ситуацію, було визначено новий інтерфейс, представлений :"
"class:`os.PathLike`. Реалізуючи метод :meth:`~os.PathLike.__fspath__`, "
"об’єкт сигналізує, що він представляє шлях. Потім об’єкт може надати "
"низькорівневе представлення шляху файлової системи як об’єкт :class:`str` "
"або :class:`bytes`. Це означає, що об’єкт вважається :term:`path-подібним "
"<path-like object>`, якщо він реалізує :class:`os.PathLike` або є об’єктом :"
"class:`str` чи :class:`bytes`, який представляє шлях до файлової системи. "
"Код може використовувати :func:`os.fspath`, :func:`os.fsdecode` або :func:"
"`os.fsencode`, щоб явно отримати представлення :class:`str` та/або :class:"
"`bytes` шляхоподібного об’єкта."

#: ../../whatsnew/3.6.rst:426
msgid ""
"The built-in :func:`open` function has been updated to accept :class:`os."
"PathLike` objects, as have all relevant functions in the :mod:`os` and :mod:"
"`os.path` modules, and most other functions and classes in the standard "
"library.  The :class:`os.DirEntry` class and relevant classes in :mod:"
"`pathlib` have also been updated to implement :class:`os.PathLike`."
msgstr ""
"Вбудовану функцію :func:`open` було оновлено, щоб приймати об’єкти :class:"
"`os.PathLike`, як і всі відповідні функції в модулях :mod:`os` і :mod:`os."
"path`, і більшість інших функцій і класів у стандартній бібліотеці. Клас :"
"class:`os.DirEntry` і відповідні класи в :mod:`pathlib` також були оновлені "
"для реалізації :class:`os.PathLike`."

#: ../../whatsnew/3.6.rst:433
msgid ""
"The hope is that updating the fundamental functions for operating on file "
"system paths will lead to third-party code to implicitly support all :term:"
"`path-like objects <path-like object>` without any code changes, or at least "
"very minimal ones (e.g. calling :func:`os.fspath` at the beginning of code "
"before operating on a path-like object)."
msgstr ""
"Є надія, що оновлення фундаментальних функцій для роботи зі шляхами файлової "
"системи призведе до коду третьої сторони, який неявно підтримує всі :term:"
"`path-подібні об’єкти <path-like object>` без будь-яких змін коду або "
"принаймні дуже мінімальних (наприклад, виклик :func:`os.fspath` на початку "
"коду перед операцією з об’єктом, схожим на шлях)."

#: ../../whatsnew/3.6.rst:440
msgid ""
"Here are some examples of how the new interface allows for :class:`pathlib."
"Path` to be used more easily and transparently with pre-existing code::"
msgstr ""
"Ось декілька прикладів того, як новий інтерфейс дозволяє використовувати :"
"class:`pathlib.Path` легше та прозоріше з уже існуючим кодом::"

#: ../../whatsnew/3.6.rst:444
msgid ""
">>> import pathlib\n"
">>> with open(pathlib.Path(\"README\")) as f:\n"
"...     contents = f.read()\n"
"...\n"
">>> import os.path\n"
">>> os.path.splitext(pathlib.Path(\"some_file.txt\"))\n"
"('some_file', '.txt')\n"
">>> os.path.join(\"/a/b\", pathlib.Path(\"c\"))\n"
"'/a/b/c'\n"
">>> import os\n"
">>> os.fspath(pathlib.Path(\"some_file.txt\"))\n"
"'some_file.txt'"
msgstr ""
">>> import pathlib\n"
">>> with open(pathlib.Path(\"README\")) as f:\n"
"...     contents = f.read()\n"
"...\n"
">>> import os.path\n"
">>> os.path.splitext(pathlib.Path(\"some_file.txt\"))\n"
"('some_file', '.txt')\n"
">>> os.path.join(\"/a/b\", pathlib.Path(\"c\"))\n"
"'/a/b/c'\n"
">>> import os\n"
">>> os.fspath(pathlib.Path(\"some_file.txt\"))\n"
"'some_file.txt'"

#: ../../whatsnew/3.6.rst:457
msgid ""
"(Implemented by Brett Cannon, Ethan Furman, Dusty Phillips, and Jelle "
"Zijlstra.)"
msgstr ""
"(Реалізовано Бреттом Кенноном, Ітаном Фурманом, Дасті Філіпсом і Джелле "
"Зійлстра.)"

#: ../../whatsnew/3.6.rst:461
msgid ":pep:`519` -- Adding a file system path protocol"
msgstr ":pep:`519` -- Додавання протоколу шляху файлової системи"

#: ../../whatsnew/3.6.rst:462
msgid "PEP written by Brett Cannon and Koos Zevenhoven."
msgstr "PEP, написаний Бреттом Кенноном і Кусом Зевенховеном."

#: ../../whatsnew/3.6.rst:468
msgid "PEP 495: Local Time Disambiguation"
msgstr "PEP 495: Роз’яснення неоднозначності за місцевим часом"

#: ../../whatsnew/3.6.rst:470
msgid ""
"In most world locations, there have been and will be times when local clocks "
"are moved back.  In those times, intervals are introduced in which local "
"clocks show the same time twice in the same day. In these situations, the "
"information displayed on a local clock (or stored in a Python datetime "
"instance) is insufficient to identify a particular moment in time."
msgstr ""
"In most world locations, there have been and will be times when local clocks "
"are moved back. In those times, intervals are introduced in which local "
"clocks show the same time twice in the same day. In these situations, the "
"information displayed on a local clock (or stored in a Python datetime "
"instance) is insufficient to identify a particular moment in time."

#: ../../whatsnew/3.6.rst:476
msgid ""
":pep:`495` adds the new *fold* attribute to instances of :class:`datetime."
"datetime` and :class:`datetime.time` classes to differentiate between two "
"moments in time for which local times are the same::"
msgstr ""
":pep:`495` adds the new *fold* attribute to instances of :class:`datetime."
"datetime` and :class:`datetime.time` classes to differentiate between two "
"moments in time for which local times are the same::"

#: ../../whatsnew/3.6.rst:480
msgid ""
">>> u0 = datetime(2016, 11, 6, 4, tzinfo=timezone.utc)\n"
">>> for i in range(4):\n"
"...     u = u0 + i*HOUR\n"
"...     t = u.astimezone(Eastern)\n"
"...     print(u.time(), 'UTC =', t.time(), t.tzname(), t.fold)\n"
"...\n"
"04:00:00 UTC = 00:00:00 EDT 0\n"
"05:00:00 UTC = 01:00:00 EDT 0\n"
"06:00:00 UTC = 01:00:00 EST 1\n"
"07:00:00 UTC = 02:00:00 EST 0"
msgstr ""
">>> u0 = datetime(2016, 11, 6, 4, tzinfo=timezone.utc)\n"
">>> for i in range(4):\n"
"...     u = u0 + i*HOUR\n"
"...     t = u.astimezone(Eastern)\n"
"...     print(u.time(), 'UTC =', t.time(), t.tzname(), t.fold)\n"
"...\n"
"04:00:00 UTC = 00:00:00 EDT 0\n"
"05:00:00 UTC = 01:00:00 EDT 0\n"
"06:00:00 UTC = 01:00:00 EST 1\n"
"07:00:00 UTC = 02:00:00 EST 0"

#: ../../whatsnew/3.6.rst:491
msgid ""
"The values of the :attr:`fold <datetime.datetime.fold>` attribute have the "
"value ``0`` for all instances except those that represent the second "
"(chronologically) moment in time in an ambiguous case."
msgstr ""
"The values of the :attr:`fold <datetime.datetime.fold>` attribute have the "
"value ``0`` for all instances except those that represent the second "
"(chronologically) moment in time in an ambiguous case."

#: ../../whatsnew/3.6.rst:497
msgid ":pep:`495` -- Local Time Disambiguation"
msgstr ":pep:`495` -- Local Time Disambiguation"

#: ../../whatsnew/3.6.rst:498
msgid ""
"PEP written by Alexander Belopolsky and Tim Peters, implementation by "
"Alexander Belopolsky."
msgstr ""
"PEP written by Alexander Belopolsky and Tim Peters, implementation by "
"Alexander Belopolsky."

#: ../../whatsnew/3.6.rst:505
msgid "PEP 529: Change Windows filesystem encoding to UTF-8"
msgstr "PEP 529: Change Windows filesystem encoding to UTF-8"

#: ../../whatsnew/3.6.rst:507
msgid ""
"Representing filesystem paths is best performed with str (Unicode) rather "
"than bytes. However, there are some situations where using bytes is "
"sufficient and correct."
msgstr ""
"Representing filesystem paths is best performed with str (Unicode) rather "
"than bytes. However, there are some situations where using bytes is "
"sufficient and correct."

#: ../../whatsnew/3.6.rst:511
msgid ""
"Prior to Python 3.6, data loss could result when using bytes paths on "
"Windows. With this change, using bytes to represent paths is now supported "
"on Windows, provided those bytes are encoded with the encoding returned by :"
"func:`sys.getfilesystemencoding`, which now defaults to ``'utf-8'``."
msgstr ""
"До версии Python 3.6 при использовании байтовых путей в Windows могла "
"произойти потеря данных. Благодаря этому изменению, использование байтов для "
"представления путей теперь поддерживается в Windows, при условии, что эти "
"байты закодированы с помощью кодировки, возвращаемой :func:`sys."
"getfilesystemencoding`, которая теперь по умолчанию равна ``'utf-8'``."

#: ../../whatsnew/3.6.rst:516
msgid ""
"Applications that do not use str to represent paths should use :func:`os."
"fsencode` and :func:`os.fsdecode` to ensure their bytes are correctly "
"encoded. To revert to the previous behaviour, set :envvar:"
"`PYTHONLEGACYWINDOWSFSENCODING` or call :func:`sys."
"_enablelegacywindowsfsencoding`."
msgstr ""
"Приложения, которые не используют str для представления путей, должны "
"использовать :func:`os.fsencode` и :func:`os.fsdecode`, чтобы гарантировать "
"правильное кодирование их байтов. Чтобы вернуться к предыдущему поведению, "
"установите :envvar:`PYTHONLEGACYWINDOWSFSENCODING` или вызовите :func:`sys."
"_enablelegacywindowsfsencoding`."

#: ../../whatsnew/3.6.rst:522
msgid ""
"See :pep:`529` for more information and discussion of code modifications "
"that may be required."
msgstr ""
"See :pep:`529` for more information and discussion of code modifications "
"that may be required."

#: ../../whatsnew/3.6.rst:529
msgid "PEP 528: Change Windows console encoding to UTF-8"
msgstr "PEP 528: Change Windows console encoding to UTF-8"

#: ../../whatsnew/3.6.rst:531
msgid ""
"The default console on Windows will now accept all Unicode characters and "
"provide correctly read str objects to Python code. ``sys.stdin``, ``sys."
"stdout`` and ``sys.stderr`` now default to utf-8 encoding."
msgstr ""
"The default console on Windows will now accept all Unicode characters and "
"provide correctly read str objects to Python code. ``sys.stdin``, ``sys."
"stdout`` and ``sys.stderr`` now default to utf-8 encoding."

#: ../../whatsnew/3.6.rst:535
msgid ""
"This change only applies when using an interactive console, and not when "
"redirecting files or pipes. To revert to the previous behaviour for "
"interactive console use, set :envvar:`PYTHONLEGACYWINDOWSSTDIO`."
msgstr ""
"Ця зміна застосовується лише під час використання інтерактивної консолі, а "
"не під час перенаправлення файлів або каналів. Щоб повернутися до "
"попередньої поведінки для використання інтерактивної консолі, встановіть :"
"envvar:`PYTHONLEGACYWINDOWSSTDIO`."

#: ../../whatsnew/3.6.rst:541
msgid ":pep:`528` -- Change Windows console encoding to UTF-8"
msgstr ":pep:`528` -- Change Windows console encoding to UTF-8"

#: ../../whatsnew/3.6.rst:542
msgid "PEP written and implemented by Steve Dower."
msgstr "PEP written and implemented by Steve Dower."

#: ../../whatsnew/3.6.rst:548
msgid "PEP 520: Preserving Class Attribute Definition Order"
msgstr "PEP 520: Preserving Class Attribute Definition Order"

#: ../../whatsnew/3.6.rst:550
msgid ""
"Attributes in a class definition body have a natural ordering: the same "
"order in which the names appear in the source.  This order is now preserved "
"in the new class's :attr:`~type.__dict__` attribute."
msgstr ""
"Атрибуты в теле определения класса имеют естественный порядок: тот же "
"порядок, в котором имена появляются в источнике. Этот порядок теперь "
"сохраняется в атрибуте :attr:`~type.__dict__` нового класса."

#: ../../whatsnew/3.6.rst:554
msgid ""
"Also, the effective default class *execution* namespace (returned from :ref:"
"`type.__prepare__() <prepare>`) is now an insertion-order-preserving mapping."
msgstr ""
"Also, the effective default class *execution* namespace (returned from :ref:"
"`type.__prepare__() <prepare>`) is now an insertion-order-preserving mapping."

#: ../../whatsnew/3.6.rst:560
msgid ":pep:`520` -- Preserving Class Attribute Definition Order"
msgstr ":pep:`520` -- Preserving Class Attribute Definition Order"

#: ../../whatsnew/3.6.rst:561 ../../whatsnew/3.6.rst:575
msgid "PEP written and implemented by Eric Snow."
msgstr "PEP written and implemented by Eric Snow."

#: ../../whatsnew/3.6.rst:567
msgid "PEP 468: Preserving Keyword Argument Order"
msgstr "PEP 468: Preserving Keyword Argument Order"

#: ../../whatsnew/3.6.rst:569
msgid ""
"``**kwargs`` in a function signature is now guaranteed to be an insertion-"
"order-preserving mapping."
msgstr ""
"``**kwargs`` in a function signature is now guaranteed to be an insertion-"
"order-preserving mapping."

#: ../../whatsnew/3.6.rst:574
msgid ":pep:`468` -- Preserving Keyword Argument Order"
msgstr ":pep:`468` -- Preserving Keyword Argument Order"

#: ../../whatsnew/3.6.rst:581
msgid "New :ref:`dict <typesmapping>` implementation"
msgstr "New :ref:`dict <typesmapping>` implementation"

#: ../../whatsnew/3.6.rst:583
msgid ""
"The :ref:`dict <typesmapping>` type now uses a \"compact\" representation "
"based on `a proposal by Raymond Hettinger <https://mail.python.org/pipermail/"
"python-dev/2012-December/123028.html>`_ which was `first implemented by PyPy "
"<https://morepypy.blogspot.com/2015/01/faster-more-memory-efficient-and-more."
"html>`_. The memory usage of the new :func:`dict` is between 20% and 25% "
"smaller compared to Python 3.5."
msgstr ""
"The :ref:`dict <typesmapping>` type now uses a \"compact\" representation "
"based on `a proposal by Raymond Hettinger <https://mail.python.org/pipermail/"
"python-dev/2012-December/123028.html>`_ which was `first implemented by PyPy "
"<https://morepypy.blogspot.com/2015/01/faster-more-memory-efficient-and-more."
"html>`_. The memory usage of the new :func:`dict` is between 20% and 25% "
"smaller compared to Python 3.5."

#: ../../whatsnew/3.6.rst:591
msgid ""
"The order-preserving aspect of this new implementation is considered an "
"implementation detail and should not be relied upon (this may change in the "
"future, but it is desired to have this new dict implementation in the "
"language for a few releases before changing the language spec to mandate "
"order-preserving semantics for all current and future Python "
"implementations; this also helps preserve backwards-compatibility with older "
"versions of the language where random iteration order is still in effect, e."
"g. Python 3.5)."
msgstr ""
"The order-preserving aspect of this new implementation is considered an "
"implementation detail and should not be relied upon (this may change in the "
"future, but it is desired to have this new dict implementation in the "
"language for a few releases before changing the language spec to mandate "
"order-preserving semantics for all current and future Python "
"implementations; this also helps preserve backwards-compatibility with older "
"versions of the language where random iteration order is still in effect, e."
"g. Python 3.5)."

#: ../../whatsnew/3.6.rst:600
msgid ""
"(Contributed by INADA Naoki in :issue:`27350`. Idea `originally suggested by "
"Raymond Hettinger <https://mail.python.org/pipermail/python-dev/2012-"
"December/123028.html>`_.)"
msgstr ""
"(Contributed by INADA Naoki in :issue:`27350`. Idea `originally suggested by "
"Raymond Hettinger <https://mail.python.org/pipermail/python-dev/2012-"
"December/123028.html>`_.)"

#: ../../whatsnew/3.6.rst:608
msgid "PEP 523: Adding a frame evaluation API to CPython"
msgstr "PEP 523: Adding a frame evaluation API to CPython"

#: ../../whatsnew/3.6.rst:610
msgid ""
"While Python provides extensive support to customize how code executes, one "
"place it has not done so is in the evaluation of frame objects.  If you "
"wanted some way to intercept frame evaluation in Python there really wasn't "
"any way without directly manipulating function pointers for defined "
"functions."
msgstr ""
"While Python provides extensive support to customize how code executes, one "
"place it has not done so is in the evaluation of frame objects. If you "
"wanted some way to intercept frame evaluation in Python there really wasn't "
"any way without directly manipulating function pointers for defined "
"functions."

#: ../../whatsnew/3.6.rst:616
msgid ""
":pep:`523` changes this by providing an API to make frame evaluation "
"pluggable at the C level. This will allow for tools such as debuggers and "
"JITs to intercept frame evaluation before the execution of Python code "
"begins. This enables the use of alternative evaluation implementations for "
"Python code, tracking frame evaluation, etc."
msgstr ""
":pep:`523` changes this by providing an API to make frame evaluation "
"pluggable at the C level. This will allow for tools such as debuggers and "
"JITs to intercept frame evaluation before the execution of Python code "
"begins. This enables the use of alternative evaluation implementations for "
"Python code, tracking frame evaluation, etc."

#: ../../whatsnew/3.6.rst:623
msgid ""
"This API is not part of the limited C API and is marked as private to signal "
"that usage of this API is expected to be limited and only applicable to very "
"select, low-level use-cases. Semantics of the API will change with Python as "
"necessary."
msgstr ""
"This API is not part of the limited C API and is marked as private to signal "
"that usage of this API is expected to be limited and only applicable to very "
"select, low-level use-cases. Semantics of the API will change with Python as "
"necessary."

#: ../../whatsnew/3.6.rst:630
msgid ":pep:`523` -- Adding a frame evaluation API to CPython"
msgstr ":pep:`523` -- Adding a frame evaluation API to CPython"

#: ../../whatsnew/3.6.rst:631
msgid "PEP written by Brett Cannon and Dino Viehland."
msgstr "PEP written by Brett Cannon and Dino Viehland."

#: ../../whatsnew/3.6.rst:637
msgid "PYTHONMALLOC environment variable"
msgstr "PYTHONMALLOC environment variable"

#: ../../whatsnew/3.6.rst:639
msgid ""
"The new :envvar:`PYTHONMALLOC` environment variable allows setting the "
"Python memory allocators and installing debug hooks."
msgstr ""
"The new :envvar:`PYTHONMALLOC` environment variable allows setting the "
"Python memory allocators and installing debug hooks."

#: ../../whatsnew/3.6.rst:642
msgid ""
"It is now possible to install debug hooks on Python memory allocators on "
"Python compiled in release mode using ``PYTHONMALLOC=debug``. Effects of "
"debug hooks:"
msgstr ""
"It is now possible to install debug hooks on Python memory allocators on "
"Python compiled in release mode using ``PYTHONMALLOC=debug``. Effects of "
"debug hooks:"

#: ../../whatsnew/3.6.rst:645
msgid "Newly allocated memory is filled with the byte ``0xCB``"
msgstr "Newly allocated memory is filled with the byte ``0xCB``"

#: ../../whatsnew/3.6.rst:646
msgid "Freed memory is filled with the byte ``0xDB``"
msgstr "Freed memory is filled with the byte ``0xDB``"

#: ../../whatsnew/3.6.rst:647
msgid ""
"Detect violations of the Python memory allocator API. For example, :c:func:"
"`PyObject_Free` called on a memory block allocated by :c:func:`PyMem_Malloc`."
msgstr ""
"Detect violations of the Python memory allocator API. For example, :c:func:"
"`PyObject_Free` called on a memory block allocated by :c:func:`PyMem_Malloc`."

#: ../../whatsnew/3.6.rst:650
msgid "Detect writes before the start of a buffer (buffer underflows)"
msgstr "Detect writes before the start of a buffer (buffer underflows)"

#: ../../whatsnew/3.6.rst:651
msgid "Detect writes after the end of a buffer (buffer overflows)"
msgstr "Detect writes after the end of a buffer (buffer overflows)"

#: ../../whatsnew/3.6.rst:652
msgid ""
"Check that the :term:`GIL <global interpreter lock>` is held when allocator "
"functions of :c:macro:`PYMEM_DOMAIN_OBJ` (ex: :c:func:`PyObject_Malloc`) "
"and :c:macro:`PYMEM_DOMAIN_MEM` (ex: :c:func:`PyMem_Malloc`) domains are "
"called."
msgstr ""
"Убедитесь, что :term:`GIL <глобальная блокировка интерпретатора>` "
"удерживается, когда функции распределения :c:macro:`PYMEM_DOMAIN_OBJ` "
"(например: :c:func:`PyObject_Malloc`) и :c:macro:`PYMEM_DOMAIN_MEM` "
"( например: :c:func:`PyMem_Malloc`) вызываются домены."

#: ../../whatsnew/3.6.rst:656
msgid "Checking if the GIL is held is also a new feature of Python 3.6."
msgstr "Checking if the GIL is held is also a new feature of Python 3.6."

#: ../../whatsnew/3.6.rst:658
msgid ""
"See the :c:func:`PyMem_SetupDebugHooks` function for debug hooks on Python "
"memory allocators."
msgstr ""
"See the :c:func:`PyMem_SetupDebugHooks` function for debug hooks on Python "
"memory allocators."

#: ../../whatsnew/3.6.rst:661
msgid ""
"It is now also possible to force the usage of the :c:func:`malloc` allocator "
"of the C library for all Python memory allocations using "
"``PYTHONMALLOC=malloc``. This is helpful when using external memory "
"debuggers like Valgrind on a Python compiled in release mode."
msgstr ""
"It is now also possible to force the usage of the :c:func:`malloc` allocator "
"of the C library for all Python memory allocations using "
"``PYTHONMALLOC=malloc``. This is helpful when using external memory "
"debuggers like Valgrind on a Python compiled in release mode."

#: ../../whatsnew/3.6.rst:666
msgid ""
"On error, the debug hooks on Python memory allocators now use the :mod:"
"`tracemalloc` module to get the traceback where a memory block was allocated."
msgstr ""
"On error, the debug hooks on Python memory allocators now use the :mod:"
"`tracemalloc` module to get the traceback where a memory block was allocated."

#: ../../whatsnew/3.6.rst:670
msgid ""
"Example of fatal error on buffer overflow using ``python3.6 -X "
"tracemalloc=5`` (store 5 frames in traces)::"
msgstr ""
"Example of fatal error on buffer overflow using ``python3.6 -X "
"tracemalloc=5`` (store 5 frames in traces)::"

#: ../../whatsnew/3.6.rst:673
msgid ""
"Debug memory block at address p=0x7fbcd41666f8: API 'o'\n"
"    4 bytes originally requested\n"
"    The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.\n"
"    The 8 pad bytes at tail=0x7fbcd41666fc are not all FORBIDDENBYTE "
"(0xfb):\n"
"        at tail+0: 0x02 *** OUCH\n"
"        at tail+1: 0xfb\n"
"        at tail+2: 0xfb\n"
"        at tail+3: 0xfb\n"
"        at tail+4: 0xfb\n"
"        at tail+5: 0xfb\n"
"        at tail+6: 0xfb\n"
"        at tail+7: 0xfb\n"
"    The block was made by call #1233329 to debug malloc/realloc.\n"
"    Data at p: 1a 2b 30 00\n"
"\n"
"Memory block allocated at (most recent call first):\n"
"  File \"test/test_bytes.py\", line 323\n"
"  File \"unittest/case.py\", line 600\n"
"  File \"unittest/case.py\", line 648\n"
"  File \"unittest/suite.py\", line 122\n"
"  File \"unittest/suite.py\", line 84\n"
"\n"
"Fatal Python error: bad trailing pad byte\n"
"\n"
"Current thread 0x00007fbcdbd32700 (most recent call first):\n"
"  File \"test/test_bytes.py\", line 323 in test_hex\n"
"  File \"unittest/case.py\", line 600 in run\n"
"  File \"unittest/case.py\", line 648 in __call__\n"
"  File \"unittest/suite.py\", line 122 in run\n"
"  File \"unittest/suite.py\", line 84 in __call__\n"
"  File \"unittest/suite.py\", line 122 in run\n"
"  File \"unittest/suite.py\", line 84 in __call__\n"
"  ..."
msgstr ""
"Debug memory block at address p=0x7fbcd41666f8: API 'o'\n"
"    4 bytes originally requested\n"
"    The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.\n"
"    The 8 pad bytes at tail=0x7fbcd41666fc are not all FORBIDDENBYTE "
"(0xfb):\n"
"        at tail+0: 0x02 *** OUCH\n"
"        at tail+1: 0xfb\n"
"        at tail+2: 0xfb\n"
"        at tail+3: 0xfb\n"
"        at tail+4: 0xfb\n"
"        at tail+5: 0xfb\n"
"        at tail+6: 0xfb\n"
"        at tail+7: 0xfb\n"
"    The block was made by call #1233329 to debug malloc/realloc.\n"
"    Data at p: 1a 2b 30 00\n"
"\n"
"Memory block allocated at (most recent call first):\n"
"  File \"test/test_bytes.py\", line 323\n"
"  File \"unittest/case.py\", line 600\n"
"  File \"unittest/case.py\", line 648\n"
"  File \"unittest/suite.py\", line 122\n"
"  File \"unittest/suite.py\", line 84\n"
"\n"
"Fatal Python error: bad trailing pad byte\n"
"\n"
"Current thread 0x00007fbcdbd32700 (most recent call first):\n"
"  File \"test/test_bytes.py\", line 323 in test_hex\n"
"  File \"unittest/case.py\", line 600 in run\n"
"  File \"unittest/case.py\", line 648 in __call__\n"
"  File \"unittest/suite.py\", line 122 in run\n"
"  File \"unittest/suite.py\", line 84 in __call__\n"
"  File \"unittest/suite.py\", line 122 in run\n"
"  File \"unittest/suite.py\", line 84 in __call__\n"
"  ..."

#: ../../whatsnew/3.6.rst:707
msgid "(Contributed by Victor Stinner in :issue:`26516` and :issue:`26564`.)"
msgstr "(Contributed by Victor Stinner in :issue:`26516` and :issue:`26564`.)"

#: ../../whatsnew/3.6.rst:713
msgid "DTrace and SystemTap probing support"
msgstr "DTrace and SystemTap probing support"

#: ../../whatsnew/3.6.rst:715
msgid ""
"Python can now be built ``--with-dtrace`` which enables static markers for "
"the following events in the interpreter:"
msgstr ""
"Python can now be built ``--with-dtrace`` which enables static markers for "
"the following events in the interpreter:"

#: ../../whatsnew/3.6.rst:718
msgid "function call/return"
msgstr "function call/return"

#: ../../whatsnew/3.6.rst:720
msgid "garbage collection started/finished"
msgstr "garbage collection started/finished"

#: ../../whatsnew/3.6.rst:722
msgid "line of code executed."
msgstr "line of code executed."

#: ../../whatsnew/3.6.rst:724
msgid ""
"This can be used to instrument running interpreters in production, without "
"the need to recompile specific :ref:`debug builds <debug-build>` or "
"providing application-specific profiling/debugging code."
msgstr ""
"Це можна використовувати для інструментування роботи інтерпретаторів у "
"виробництві без необхідності перекомпілювати певні :ref:`налагоджувальні "
"збірки <debug-build>` або надавати спеціальний код профілю/налагодження "
"програми."

#: ../../whatsnew/3.6.rst:728
msgid "More details in :ref:`instrumentation`."
msgstr "More details in :ref:`instrumentation`."

#: ../../whatsnew/3.6.rst:730
msgid ""
"The current implementation is tested on Linux and macOS.  Additional markers "
"may be added in the future."
msgstr ""
"The current implementation is tested on Linux and macOS. Additional markers "
"may be added in the future."

#: ../../whatsnew/3.6.rst:733
msgid ""
"(Contributed by Łukasz Langa in :issue:`21590`, based on patches by Jesús "
"Cea Avión, David Malcolm, and Nikhil Benesch.)"
msgstr ""
"(Contributed by Łukasz Langa in :issue:`21590`, based on patches by Jesús "
"Cea Avión, David Malcolm, and Nikhil Benesch.)"

#: ../../whatsnew/3.6.rst:738
msgid "Other Language Changes"
msgstr "Outras mudanças na linguagem"

#: ../../whatsnew/3.6.rst:740
msgid "Some smaller changes made to the core Python language are:"
msgstr "Algumas das mudanças menores feitas no núcleo da linguagem Python são:"

#: ../../whatsnew/3.6.rst:742
msgid ""
"A ``global`` or ``nonlocal`` statement must now textually appear before the "
"first use of the affected name in the same scope. Previously this was a :exc:"
"`SyntaxWarning`."
msgstr ""
"Інструкція ``global`` або ``nonlocal`` тепер має текстово з’являтися перед "
"першим використанням відповідного імені в тій самій області. Раніше це було :"
"exc:`SyntaxWarning`."

#: ../../whatsnew/3.6.rst:746
msgid ""
"It is now possible to set a :ref:`special method <specialnames>` to ``None`` "
"to indicate that the corresponding operation is not available. For example, "
"if a class sets :meth:`__iter__` to ``None``, the class is not iterable. "
"(Contributed by Andrew Barnert and Ivan Levkivskyi in :issue:`25958`.)"
msgstr ""
"It is now possible to set a :ref:`special method <specialnames>` to ``None`` "
"to indicate that the corresponding operation is not available. For example, "
"if a class sets :meth:`__iter__` to ``None``, the class is not iterable. "
"(Contributed by Andrew Barnert and Ivan Levkivskyi in :issue:`25958`.)"

#: ../../whatsnew/3.6.rst:752
msgid ""
"Long sequences of repeated traceback lines are now abbreviated as "
"``\"[Previous line repeated {count} more times]\"`` (see :ref:`whatsnew36-"
"traceback` for an example). (Contributed by Emanuel Barry in :issue:`26823`.)"
msgstr ""
"Long sequences of repeated traceback lines are now abbreviated as "
"``\"[Previous line repeated {count} more times]\"`` (see :ref:`whatsnew36-"
"traceback` for an example). (Contributed by Emanuel Barry in :issue:`26823`.)"

#: ../../whatsnew/3.6.rst:757
msgid ""
"Import now raises the new exception :exc:`ModuleNotFoundError` (subclass of :"
"exc:`ImportError`) when it cannot find a module.  Code that currently checks "
"for ImportError (in try-except) will still work. (Contributed by Eric Snow "
"in :issue:`15767`.)"
msgstr ""
"Import now raises the new exception :exc:`ModuleNotFoundError` (subclass of :"
"exc:`ImportError`) when it cannot find a module. Code that currently checks "
"for ImportError (in try-except) will still work. (Contributed by Eric Snow "
"in :issue:`15767`.)"

#: ../../whatsnew/3.6.rst:762
msgid ""
"Class methods relying on zero-argument ``super()`` will now work correctly "
"when called from metaclass methods during class creation. (Contributed by "
"Martin Teichmann in :issue:`23722`.)"
msgstr ""
"Class methods relying on zero-argument ``super()`` will now work correctly "
"when called from metaclass methods during class creation. (Contributed by "
"Martin Teichmann in :issue:`23722`.)"

#: ../../whatsnew/3.6.rst:768
msgid "New Modules"
msgstr "Novos módulos"

#: ../../whatsnew/3.6.rst:773
msgid "secrets"
msgstr "segredos"

#: ../../whatsnew/3.6.rst:775
msgid ""
"The main purpose of the new :mod:`secrets` module is to provide an obvious "
"way to reliably generate cryptographically strong pseudo-random values "
"suitable for managing secrets, such as account authentication, tokens, and "
"similar."
msgstr ""
"The main purpose of the new :mod:`secrets` module is to provide an obvious "
"way to reliably generate cryptographically strong pseudo-random values "
"suitable for managing secrets, such as account authentication, tokens, and "
"similar."

#: ../../whatsnew/3.6.rst:781
msgid ""
"Note that the pseudo-random generators in the :mod:`random` module should "
"*NOT* be used for security purposes.  Use :mod:`secrets` on Python 3.6+ and :"
"func:`os.urandom` on Python 3.5 and earlier."
msgstr ""
"Обратите внимание, что генераторы псевдослучайных чисел в модуле :mod:"
"`random` *НЕ* должны использоваться в целях безопасности. Используйте :mod:"
"`secrets` в Python 3.6+ и :func:`os.urandom` в Python 3.5 и более ранних "
"версиях."

#: ../../whatsnew/3.6.rst:787
msgid ":pep:`506` -- Adding A Secrets Module To The Standard Library"
msgstr ":pep:`506` -- Adding A Secrets Module To The Standard Library"

#: ../../whatsnew/3.6.rst:788
msgid "PEP written and implemented by Steven D'Aprano."
msgstr "PEP written and implemented by Steven D'Aprano."

#: ../../whatsnew/3.6.rst:792
msgid "Improved Modules"
msgstr "Módulos melhorados"

#: ../../whatsnew/3.6.rst:795
msgid "array"
msgstr "array"

#: ../../whatsnew/3.6.rst:797
msgid ""
"Exhausted iterators of :class:`array.array` will now stay exhausted even if "
"the iterated array is extended.  This is consistent with the behavior of "
"other mutable sequences."
msgstr ""
"Exhausted iterators of :class:`array.array` will now stay exhausted even if "
"the iterated array is extended. This is consistent with the behavior of "
"other mutable sequences."

#: ../../whatsnew/3.6.rst:801
msgid "Contributed by Serhiy Storchaka in :issue:`26492`."
msgstr "Contributed by Serhiy Storchaka in :issue:`26492`."

#: ../../whatsnew/3.6.rst:804
msgid "ast"
msgstr "ast"

#: ../../whatsnew/3.6.rst:806
msgid ""
"The new :class:`ast.Constant` AST node has been added.  It can be used by "
"external AST optimizers for the purposes of constant folding."
msgstr ""
"The new :class:`ast.Constant` AST node has been added. It can be used by "
"external AST optimizers for the purposes of constant folding."

#: ../../whatsnew/3.6.rst:809
msgid "Contributed by Victor Stinner in :issue:`26146`."
msgstr "Contributed by Victor Stinner in :issue:`26146`."

#: ../../whatsnew/3.6.rst:813
msgid "asyncio"
msgstr "asyncio"

#: ../../whatsnew/3.6.rst:815
msgid ""
"Starting with Python 3.6 the ``asyncio`` module is no longer provisional and "
"its API is considered stable."
msgstr ""
"Starting with Python 3.6 the ``asyncio`` module is no longer provisional and "
"its API is considered stable."

#: ../../whatsnew/3.6.rst:818
msgid ""
"Notable changes in the :mod:`asyncio` module since Python 3.5.0 (all "
"backported to 3.5.x due to the provisional status):"
msgstr ""
"Notable changes in the :mod:`asyncio` module since Python 3.5.0 (all "
"backported to 3.5.x due to the provisional status):"

#: ../../whatsnew/3.6.rst:821
msgid ""
"The :func:`~asyncio.get_event_loop` function has been changed to always "
"return the currently running loop when called from coroutines and callbacks. "
"(Contributed by Yury Selivanov in :issue:`28613`.)"
msgstr ""
"Функцію :func:`~asyncio.get_event_loop` було змінено, щоб вона завжди "
"повертала поточний цикл під час виклику із співпрограм і зворотних викликів. "
"(Надав Юрій Селіванов у :issue:`28613`.)"

#: ../../whatsnew/3.6.rst:826
msgid ""
"The :func:`~asyncio.ensure_future` function and all functions that use it, "
"such as :meth:`loop.run_until_complete() <asyncio.loop.run_until_complete>`, "
"now accept all kinds of :term:`awaitable objects <awaitable>`. (Contributed "
"by Yury Selivanov.)"
msgstr ""
"Функція :func:`~asyncio.ensure_future` і всі функції, які її використовують, "
"такі як :meth:`loop.run_until_complete() <asyncio.loop.run_until_complete>`, "
"тепер приймають усі типи :term:`awaitable об’єктів <awaitable>`. (Уклав Юрій "
"Селіванов.)"

#: ../../whatsnew/3.6.rst:831
msgid ""
"New :func:`~asyncio.run_coroutine_threadsafe` function to submit coroutines "
"to event loops from other threads. (Contributed by Vincent Michel.)"
msgstr ""
"New :func:`~asyncio.run_coroutine_threadsafe` function to submit coroutines "
"to event loops from other threads. (Contributed by Vincent Michel.)"

#: ../../whatsnew/3.6.rst:835
msgid ""
"New :meth:`Transport.is_closing() <asyncio.BaseTransport.is_closing>` method "
"to check if the transport is closing or closed. (Contributed by Yury "
"Selivanov.)"
msgstr ""
"New :meth:`Transport.is_closing() <asyncio.BaseTransport.is_closing>` method "
"to check if the transport is closing or closed. (Contributed by Yury "
"Selivanov.)"

#: ../../whatsnew/3.6.rst:839
msgid ""
"The :meth:`loop.create_server() <asyncio.loop.create_server>` method can now "
"accept a list of hosts. (Contributed by Yann Sionneau.)"
msgstr ""
"Метод :meth:`loop.create_server() <asyncio.loop.create_server>` тепер може "
"приймати список хостів. (Надав Ян Сіно.)"

#: ../../whatsnew/3.6.rst:843
msgid ""
"New :meth:`loop.create_future() <asyncio.loop.create_future>` method to "
"create Future objects.  This allows alternative event loop implementations, "
"such as `uvloop <https://github.com/MagicStack/uvloop>`_, to provide a "
"faster :class:`asyncio.Future` implementation. (Contributed by Yury "
"Selivanov in :issue:`27041`.)"
msgstr ""
"Новий метод :meth:`loop.create_future() <asyncio.loop.create_future>` для "
"створення об’єктів Future. Це дозволяє альтернативним реалізаціям циклу "
"подій, таким як `uvloop <https://github.com/MagicStack/uvloop>`_, "
"забезпечити швидшу реалізацію :class:`asyncio.Future`. (Надав Юрій Селіванов "
"у :issue:`27041`.)"

#: ../../whatsnew/3.6.rst:850
msgid ""
"New :meth:`loop.get_exception_handler() <asyncio.loop."
"get_exception_handler>` method to get the current exception handler. "
"(Contributed by Yury Selivanov in :issue:`27040`.)"
msgstr ""
"Новий метод :meth:`loop.get_exception_handler() <asyncio.loop."
"get_exception_handler>` для отримання поточного обробника винятків. (Надав "
"Юрій Селіванов у :issue:`27040`.)"

#: ../../whatsnew/3.6.rst:854
msgid ""
"New :meth:`StreamReader.readuntil() <asyncio.StreamReader.readuntil>` method "
"to read data from the stream until a separator bytes sequence appears. "
"(Contributed by Mark Korenberg.)"
msgstr ""
"New :meth:`StreamReader.readuntil() <asyncio.StreamReader.readuntil>` method "
"to read data from the stream until a separator bytes sequence appears. "
"(Contributed by Mark Korenberg.)"

#: ../../whatsnew/3.6.rst:859
msgid ""
"The performance of :meth:`StreamReader.readexactly() <asyncio.StreamReader."
"readexactly>` has been improved. (Contributed by Mark Korenberg in :issue:"
"`28370`.)"
msgstr ""
"The performance of :meth:`StreamReader.readexactly() <asyncio.StreamReader."
"readexactly>` has been improved. (Contributed by Mark Korenberg in :issue:"
"`28370`.)"

#: ../../whatsnew/3.6.rst:863
msgid ""
"The :meth:`loop.getaddrinfo() <asyncio.loop.getaddrinfo>` method is "
"optimized to avoid calling the system ``getaddrinfo`` function if the "
"address is already resolved. (Contributed by A. Jesse Jiryu Davis.)"
msgstr ""
"Метод :meth:`loop.getaddrinfo() <asyncio.loop.getaddrinfo>` оптимізовано, "
"щоб уникнути виклику системної функції ``getaddrinfo``, якщо адресу вже "
"визначено. (Надав А. Джессі Джірю Девіс.)"

#: ../../whatsnew/3.6.rst:868
msgid ""
"The :meth:`loop.stop() <asyncio.loop.stop>` method has been changed to stop "
"the loop immediately after the current iteration.  Any new callbacks "
"scheduled as a result of the last iteration will be discarded. (Contributed "
"by Guido van Rossum in :issue:`25593`.)"
msgstr ""
"Метод :meth:`loop.stop() <asyncio.loop.stop>` було змінено, щоб зупинити "
"цикл одразу після поточної ітерації. Будь-які нові зворотні виклики, "
"заплановані в результаті останньої ітерації, будуть відхилені. (Надав Гвідо "
"ван Россум у :issue:`25593`.)"

#: ../../whatsnew/3.6.rst:874
msgid ""
":meth:`Future.set_exception <asyncio.futures.Future.set_exception>` will now "
"raise :exc:`TypeError` when passed an instance of the :exc:`StopIteration` "
"exception. (Contributed by Chris Angelico in :issue:`26221`.)"
msgstr ""
":meth:`Future.set_exception <asyncio.futures.Future.set_exception>` will now "
"raise :exc:`TypeError` when passed an instance of the :exc:`StopIteration` "
"exception. (Contributed by Chris Angelico in :issue:`26221`.)"

#: ../../whatsnew/3.6.rst:879
msgid ""
"New :meth:`loop.connect_accepted_socket() <asyncio.loop."
"connect_accepted_socket>` method to be used by servers that accept "
"connections outside of asyncio, but that use asyncio to handle them. "
"(Contributed by Jim Fulton in :issue:`27392`.)"
msgstr ""
"Новий метод :meth:`loop.connect_accepted_socket() <asyncio.loop."
"connect_accepted_socket>` для використання серверами, які приймають "
"підключення за межами asyncio, але використовують asyncio для їх обробки. "
"(Надав Джим Фултон у :issue:`27392`.)"

#: ../../whatsnew/3.6.rst:884
msgid ""
"``TCP_NODELAY`` flag is now set for all TCP transports by default. "
"(Contributed by Yury Selivanov in :issue:`27456`.)"
msgstr ""
"``TCP_NODELAY`` flag is now set for all TCP transports by default. "
"(Contributed by Yury Selivanov in :issue:`27456`.)"

#: ../../whatsnew/3.6.rst:887
msgid ""
"New :meth:`loop.shutdown_asyncgens() <asyncio.loop.shutdown_asyncgens>` to "
"properly close pending asynchronous generators before closing the loop. "
"(Contributed by Yury Selivanov in :issue:`28003`.)"
msgstr ""
"Новий :meth:`loop.shutdown_asyncgens() <asyncio.loop.shutdown_asyncgens>` "
"для належного закриття очікуваних асинхронних генераторів перед закриттям "
"циклу. (Надав Юрій Селіванов у :issue:`28003`.)"

#: ../../whatsnew/3.6.rst:892
msgid ""
":class:`Future <asyncio.Future>` and :class:`Task <asyncio.Task>` classes "
"now have an optimized C implementation which makes asyncio code up to 30% "
"faster. (Contributed by Yury Selivanov and INADA Naoki in :issue:`26081` "
"and :issue:`28544`.)"
msgstr ""
":class:`Future <asyncio.Future>` and :class:`Task <asyncio.Task>` classes "
"now have an optimized C implementation which makes asyncio code up to 30% "
"faster. (Contributed by Yury Selivanov and INADA Naoki in :issue:`26081` "
"and :issue:`28544`.)"

#: ../../whatsnew/3.6.rst:900
msgid "binascii"
msgstr "binascii"

#: ../../whatsnew/3.6.rst:902
msgid ""
"The :func:`~binascii.b2a_base64` function now accepts an optional *newline* "
"keyword argument to control whether the newline character is appended to the "
"return value. (Contributed by Victor Stinner in :issue:`25357`.)"
msgstr ""
"The :func:`~binascii.b2a_base64` function now accepts an optional *newline* "
"keyword argument to control whether the newline character is appended to the "
"return value. (Contributed by Victor Stinner in :issue:`25357`.)"

#: ../../whatsnew/3.6.rst:909
msgid "cmath"
msgstr "cmath"

#: ../../whatsnew/3.6.rst:911
msgid ""
"The new :const:`cmath.tau` (*τ*) constant has been added. (Contributed by "
"Lisa Roach in :issue:`12345`, see :pep:`628` for details.)"
msgstr ""
"Додано нову константу :const:`cmath.tau` (*τ*). (Надано Лізою Роуч у :issue:"
"`12345`, подробиці див. :pep:`628`.)"

#: ../../whatsnew/3.6.rst:914
msgid ""
"New constants: :const:`cmath.inf` and :const:`cmath.nan` to match :const:"
"`math.inf` and :const:`math.nan`, and also :const:`cmath.infj` and :const:"
"`cmath.nanj` to match the format used by complex repr. (Contributed by Mark "
"Dickinson in :issue:`23229`.)"
msgstr ""
"New constants: :const:`cmath.inf` and :const:`cmath.nan` to match :const:"
"`math.inf` and :const:`math.nan`, and also :const:`cmath.infj` and :const:"
"`cmath.nanj` to match the format used by complex repr. (Contributed by Mark "
"Dickinson in :issue:`23229`.)"

#: ../../whatsnew/3.6.rst:921
msgid "collections"
msgstr "collections"

#: ../../whatsnew/3.6.rst:923
msgid ""
"The new :class:`~collections.abc.Collection` abstract base class has been "
"added to represent sized iterable container classes. (Contributed by Ivan "
"Levkivskyi, docs by Neil Girdhar in :issue:`27598`.)"
msgstr ""
"The new :class:`~collections.abc.Collection` abstract base class has been "
"added to represent sized iterable container classes. (Contributed by Ivan "
"Levkivskyi, docs by Neil Girdhar in :issue:`27598`.)"

#: ../../whatsnew/3.6.rst:927
msgid ""
"The new :class:`~collections.abc.Reversible` abstract base class represents "
"iterable classes that also provide the :meth:`__reversed__` method. "
"(Contributed by Ivan Levkivskyi in :issue:`25987`.)"
msgstr ""
"The new :class:`~collections.abc.Reversible` abstract base class represents "
"iterable classes that also provide the :meth:`__reversed__` method. "
"(Contributed by Ivan Levkivskyi in :issue:`25987`.)"

#: ../../whatsnew/3.6.rst:931
msgid ""
"The new :class:`~collections.abc.AsyncGenerator` abstract base class "
"represents asynchronous generators. (Contributed by Yury Selivanov in :issue:"
"`28720`.)"
msgstr ""
"The new :class:`~collections.abc.AsyncGenerator` abstract base class "
"represents asynchronous generators. (Contributed by Yury Selivanov in :issue:"
"`28720`.)"

#: ../../whatsnew/3.6.rst:935
msgid ""
"The :func:`~collections.namedtuple` function now accepts an optional keyword "
"argument *module*, which, when specified, is used for the :attr:`~type."
"__module__` attribute of the returned named tuple class. (Contributed by "
"Raymond Hettinger in :issue:`17941`.)"
msgstr ""
"Функция :func:`~collections.namedtuple` теперь принимает необязательный "
"аргумент ключевого слова *module*, который, если он указан, используется для "
"атрибута :attr:`~type.__module__` возвращаемого именованного класса кортежа. "
"(Предоставлено Рэймондом Хеттингером в :issue:`17941`.)"

#: ../../whatsnew/3.6.rst:940 ../../whatsnew/3.6.rst:2295
msgid ""
"The *verbose* and *rename* arguments for :func:`~collections.namedtuple` are "
"now keyword-only. (Contributed by Raymond Hettinger in :issue:`25628`.)"
msgstr ""
"The *verbose* and *rename* arguments for :func:`~collections.namedtuple` are "
"now keyword-only. (Contributed by Raymond Hettinger in :issue:`25628`.)"

#: ../../whatsnew/3.6.rst:944
msgid ""
"Recursive :class:`collections.deque` instances can now be pickled. "
"(Contributed by Serhiy Storchaka in :issue:`26482`.)"
msgstr ""
"Recursive :class:`collections.deque` instances can now be pickled. "
"(Contributed by Serhiy Storchaka in :issue:`26482`.)"

#: ../../whatsnew/3.6.rst:949
msgid "concurrent.futures"
msgstr "concurrent.futures"

#: ../../whatsnew/3.6.rst:951
msgid ""
"The :class:`ThreadPoolExecutor <concurrent.futures.ThreadPoolExecutor>` "
"class constructor now accepts an optional *thread_name_prefix* argument to "
"make it possible to customize the names of the threads created by the pool. "
"(Contributed by Gregory P. Smith in :issue:`27664`.)"
msgstr ""
"Конструктор класу :class:`ThreadPoolExecutor <concurrent.futures."
"ThreadPoolExecutor>` тепер приймає додатковий аргумент "
"*префікс_назви_потоку*, щоб можна було налаштувати імена потоків, створених "
"пулом. (Надав Грегорі П. Сміт у :issue:`27664`.)"

#: ../../whatsnew/3.6.rst:959
msgid "contextlib"
msgstr "contextlib"

#: ../../whatsnew/3.6.rst:961
msgid ""
"The :class:`contextlib.AbstractContextManager` class has been added to "
"provide an abstract base class for context managers.  It provides a sensible "
"default implementation for ``__enter__()`` which returns ``self`` and leaves "
"``__exit__()`` an abstract method.  A matching class has been added to the :"
"mod:`typing` module as :class:`typing.ContextManager`. (Contributed by Brett "
"Cannon in :issue:`25609`.)"
msgstr ""
"Класс :class:`contextlib.AbstractContextManager` был добавлен для "
"предоставления абстрактного базового класса для менеджеров контекста. Он "
"обеспечивает разумную реализацию по умолчанию для __enter__(), которая "
"возвращает self и оставляет __exit__() абстрактным методом. Соответствующий "
"класс был добавлен в модуль :mod:`typing` как :class:`typing."
"ContextManager`. (Предоставлено Бреттом Кэнноном в :issue:`25609`.)"

#: ../../whatsnew/3.6.rst:971
msgid "datetime"
msgstr "datetime"

#: ../../whatsnew/3.6.rst:973
msgid ""
"The :class:`~datetime.datetime` and :class:`~datetime.time` classes have the "
"new :attr:`~time.fold` attribute used to disambiguate local time when "
"necessary.  Many functions in the :mod:`datetime` have been updated to "
"support local time disambiguation. See :ref:`Local Time Disambiguation "
"<whatsnew36-pep495>` section for more information. (Contributed by Alexander "
"Belopolsky in :issue:`24773`.)"
msgstr ""
"The :class:`~datetime.datetime` and :class:`~datetime.time` classes have the "
"new :attr:`~time.fold` attribute used to disambiguate local time when "
"necessary. Many functions in the :mod:`datetime` have been updated to "
"support local time disambiguation. See :ref:`Local Time Disambiguation "
"<whatsnew36-pep495>` section for more information. (Contributed by Alexander "
"Belopolsky in :issue:`24773`.)"

#: ../../whatsnew/3.6.rst:981
msgid ""
"The :meth:`datetime.strftime() <datetime.datetime.strftime>` and :meth:`date."
"strftime() <datetime.date.strftime>` methods now support ISO 8601 date "
"directives ``%G``, ``%u`` and ``%V``. (Contributed by Ashley Anderson in :"
"issue:`12006`.)"
msgstr ""
"Методи :meth:`datetime.strftime() <datetime.datetime.strftime>` і :meth:"
"`date.strftime() <datetime.date.strftime>` тепер підтримують директиви дати "
"ISO 8601 ``%G``, ``%u`` і ``%V`` (Надано Ешлі Андерсон у :issue:`12006`.)"

#: ../../whatsnew/3.6.rst:986
msgid ""
"The :func:`datetime.isoformat() <datetime.datetime.isoformat>` function now "
"accepts an optional *timespec* argument that specifies the number of "
"additional components of the time value to include. (Contributed by "
"Alessandro Cucci and Alexander Belopolsky in :issue:`19475`.)"
msgstr ""
"Функція :func:`datetime.isoformat() <datetime.datetime.isoformat>` тепер "
"приймає необов’язковий аргумент *timespec*, який визначає кількість "
"додаткових компонентів значення часу, які потрібно включити. (Надано "
"Алессандро Куччі та Олександром Белопольським у :issue:`19475`.)"

#: ../../whatsnew/3.6.rst:991
msgid ""
"The :meth:`datetime.combine() <datetime.datetime.combine>` now accepts an "
"optional *tzinfo* argument. (Contributed by Alexander Belopolsky in :issue:"
"`27661`.)"
msgstr ""
":meth:`datetime.combine() <datetime.datetime.combine>` тепер приймає "
"необов’язковий аргумент *tzinfo*. (Надав Олександр Бєлопольський у :issue:"
"`27661`.)"

#: ../../whatsnew/3.6.rst:997
msgid "decimal"
msgstr "decimal"

#: ../../whatsnew/3.6.rst:999
msgid ""
"New :meth:`Decimal.as_integer_ratio() <decimal.Decimal.as_integer_ratio>` "
"method that returns a pair ``(n, d)`` of integers that represent the given :"
"class:`~decimal.Decimal` instance as a fraction, in lowest terms and with a "
"positive denominator::"
msgstr ""
"Новий :meth:`Decimal.as_integer_ratio() <decimal.Decimal.as_integer_ratio>` "
"метод, який повертає пару ``(n, d)`` цілих чисел, які представляють заданий :"
"class:`~decimal.Decimal` екземпляр у вигляді дробу, у найменших членах і з "
"додатним знаменником::"

#: ../../whatsnew/3.6.rst:1004
msgid ""
">>> Decimal('-3.14').as_integer_ratio()\n"
"(-157, 50)"
msgstr ""
">>> Decimal('-3.14').as_integer_ratio()\n"
"(-157, 50)"

#: ../../whatsnew/3.6.rst:1007
msgid "(Contributed by Stefan Krah amd Mark Dickinson in :issue:`25928`.)"
msgstr "(Kontribusi dari Stefan Krah amd Mark Dickinson di :issue:`25928`.)"

#: ../../whatsnew/3.6.rst:1012 ../../whatsnew/3.6.rst:1990
msgid "distutils"
msgstr "distutils"

#: ../../whatsnew/3.6.rst:1014
msgid ""
"The ``default_format`` attribute has been removed from ``distutils.command."
"sdist.sdist`` and the ``formats`` attribute defaults to ``['gztar']``. "
"Although not anticipated, any code relying on the presence of "
"``default_format`` may need to be adapted. See :issue:`27819` for more "
"details."
msgstr ""
"Атрибут ``default_format`` был удален из ``distutils.command.sdist.sdist``, "
"а атрибут ``formats`` по умолчанию имеет значение ``['gztar']``. Хотя это и "
"не ожидается, любой код, основанный на наличии ``default_format``, может "
"нуждаться в адаптации. Дополнительную информацию см. в :issue:`27819`."

#: ../../whatsnew/3.6.rst:1022
msgid "email"
msgstr "email"

#: ../../whatsnew/3.6.rst:1024
msgid ""
"The new email API, enabled via the *policy* keyword to various constructors, "
"is no longer provisional.  The :mod:`email` documentation has been "
"reorganized and rewritten to focus on the new API, while retaining the old "
"documentation for the legacy API.  (Contributed by R. David Murray in :issue:"
"`24277`.)"
msgstr ""
"Новий API електронної пошти, активований за допомогою ключового слова "
"*policy* для різних конструкторів, більше не є тимчасовим. Документацію :mod:"
"`email` було реорганізовано та переписано, щоб зосередитися на новому API, "
"зберігаючи при цьому стару документацію для застарілого API. (Надав Р. Девід "
"Мюррей у :issue:`24277`.)"

#: ../../whatsnew/3.6.rst:1029
msgid ""
"The :mod:`email.mime` classes now all accept an optional *policy* keyword. "
"(Contributed by Berker Peksag in :issue:`27331`.)"
msgstr ""
"Усі класи :mod:`email.mime` тепер приймають необов’язкове ключове слово "
"*policy*. (Надано Berker Peksag у :issue:`27331`.)"

#: ../../whatsnew/3.6.rst:1032
msgid ""
"The :class:`~email.generator.DecodedGenerator` now supports the *policy* "
"keyword."
msgstr ""
":class:`~email.generator.DecodedGenerator` тепер підтримує ключове слово "
"*policy*."

#: ../../whatsnew/3.6.rst:1035
msgid ""
"There is a new :mod:`~email.policy` attribute, :attr:`~email.policy.Policy."
"message_factory`, that controls what class is used by default when the "
"parser creates new message objects.  For the :attr:`email.policy.compat32` "
"policy this is :class:`~email.message.Message`, for the new policies it is :"
"class:`~email.message.EmailMessage`. (Contributed by R. David Murray in :"
"issue:`20476`.)"
msgstr ""
"Існує новий атрибут :mod:`~email.policy`, :attr:`~email.policy.Policy."
"message_factory`, який контролює, який клас використовується за "
"замовчуванням, коли аналізатор створює нові об’єкти повідомлень. Для "
"політики :attr:`email.policy.compat32` це :class:`~email.message.Message`, "
"для нових політик це :class:`~email.message.EmailMessage`. (Надав Р. Девід "
"Мюррей у :issue:`20476`.)"

#: ../../whatsnew/3.6.rst:1044
msgid "encodings"
msgstr "encodings"

#: ../../whatsnew/3.6.rst:1046
msgid ""
"On Windows, added the ``'oem'`` encoding to use ``CP_OEMCP``, and the "
"``'ansi'`` alias for the existing ``'mbcs'`` encoding, which uses the "
"``CP_ACP`` code page. (Contributed by Steve Dower in :issue:`27959`.)"
msgstr ""
"У Windows додано кодування ``'oem`` для використання ``CP_OEMCP`` та "
"псевдонім ``'ansi'`` для існуючого кодування ``'mbcs'``, яке використовує "
"``CP_ACP`` кодова сторінка. (Надав Стів Дауер у :issue:`27959`.)"

#: ../../whatsnew/3.6.rst:1052
msgid "enum"
msgstr "enum"

#: ../../whatsnew/3.6.rst:1054
msgid ""
"Two new enumeration base classes have been added to the :mod:`enum` module: :"
"class:`~enum.Flag` and :class:`~enum.IntFlags`.  Both are used to define "
"constants that can be combined using the bitwise operators. (Contributed by "
"Ethan Furman in :issue:`23591`.)"
msgstr ""
"До модуля :mod:`enum` додано два нові базові класи перерахування: :class:"
"`~enum.Flag` і :class:`~enum.IntFlags`. Обидва використовуються для "
"визначення констант, які можна комбінувати за допомогою побітових "
"операторів. (Надав Ітан Фурман у :issue:`23591`.)"

#: ../../whatsnew/3.6.rst:1059
msgid ""
"Many standard library modules have been updated to use the :class:`~enum."
"IntFlags` class for their constants."
msgstr ""
"Багато модулів стандартної бібліотеки було оновлено для використання класу :"
"class:`~enum.IntFlags` для своїх констант."

#: ../../whatsnew/3.6.rst:1062
msgid ""
"The new :class:`enum.auto` value can be used to assign values to enum "
"members automatically::"
msgstr ""
"Нове значення :class:`enum.auto` можна використовувати для автоматичного "
"призначення значень членам enum:"

#: ../../whatsnew/3.6.rst:1065
msgid ""
">>> from enum import Enum, auto\n"
">>> class Color(Enum):\n"
"...     red = auto()\n"
"...     blue = auto()\n"
"...     green = auto()\n"
"...\n"
">>> list(Color)\n"
"[<Color.red: 1>, <Color.blue: 2>, <Color.green: 3>]"
msgstr ""
">>> from enum import Enum, auto\n"
">>> class Color(Enum):\n"
"...     red = auto()\n"
"...     blue = auto()\n"
"...     green = auto()\n"
"...\n"
">>> list(Color)\n"
"[<Color.red: 1>, <Color.blue: 2>, <Color.green: 3>]"

#: ../../whatsnew/3.6.rst:1076
msgid "faulthandler"
msgstr "faulthandler"

#: ../../whatsnew/3.6.rst:1078
msgid ""
"On Windows, the :mod:`faulthandler` module now installs a handler for "
"Windows exceptions: see :func:`faulthandler.enable`. (Contributed by Victor "
"Stinner in :issue:`23848`.)"
msgstr ""
"У Windows модуль :mod:`faulthandler` тепер встановлює обробник винятків "
"Windows: див. :func:`faulthandler.enable`. (Надав Віктор Стіннер у :issue:"
"`23848`.)"

#: ../../whatsnew/3.6.rst:1084
msgid "fileinput"
msgstr "fileinput"

#: ../../whatsnew/3.6.rst:1086
msgid ""
":func:`~fileinput.hook_encoded` now supports the *errors* argument. "
"(Contributed by Joseph Hackman in :issue:`25788`.)"
msgstr ""
":func:`~fileinput.hook_encoded` тепер підтримує аргумент *errors*. (Надав "
"Джозеф Хекман у :issue:`25788`.)"

#: ../../whatsnew/3.6.rst:1091
msgid "hashlib"
msgstr "hashlib"

#: ../../whatsnew/3.6.rst:1093
msgid ""
":mod:`hashlib` supports OpenSSL 1.1.0.  The minimum recommend version is "
"1.0.2. (Contributed by Christian Heimes in :issue:`26470`.)"
msgstr ""
":mod:`hashlib` підтримує OpenSSL 1.1.0. Мінімальна рекомендована версія "
"1.0.2. (Надав Крістіан Хеймс у :issue:`26470`.)"

#: ../../whatsnew/3.6.rst:1096
msgid ""
"BLAKE2 hash functions were added to the module. :func:`~hashlib.blake2b` "
"and :func:`~hashlib.blake2s` are always available and support the full "
"feature set of BLAKE2. (Contributed by Christian Heimes in :issue:`26798` "
"based on code by Dmitry Chestnykh and Samuel Neves. Documentation written by "
"Dmitry Chestnykh.)"
msgstr ""
"У модуль додано хеш-функції BLAKE2. :func:`~hashlib.blake2b` і :func:"
"`~hashlib.blake2s` завжди доступні та підтримують повний набір функцій "
"BLAKE2. (Надано Крістіаном Хеймсом у :issue:`26798` на основі коду Дмитра "
"Честних і Семюеля Невеса. Документацію написав Дмитро Честних.)"

#: ../../whatsnew/3.6.rst:1102
msgid ""
"The SHA-3 hash functions :func:`~hashlib.sha3_224`, :func:`~hashlib."
"sha3_256`, :func:`~hashlib.sha3_384`, :func:`~hashlib.sha3_512`, and SHAKE "
"hash functions :func:`~hashlib.shake_128` and :func:`~hashlib.shake_256` "
"were added. (Contributed by Christian Heimes in :issue:`16113`. Keccak Code "
"Package by Guido Bertoni, Joan Daemen, Michaël Peeters, Gilles Van Assche, "
"and Ronny Van Keer.)"
msgstr ""
"Хеш-функції SHA-3 :func:`~hashlib.sha3_224`, :func:`~hashlib.sha3_256`, :"
"func:`~hashlib.sha3_384`, :func:`~hashlib.sha3_512` і хеш-функції SHAKE "
"Додано :func:`~hashlib.shake_128` і :func:`~hashlib.shake_256`. (Надано "
"Крістіаном Хеймсом у :issue:`16113`. Пакет кодів Keccak від Гвідо Бертоні, "
"Джоан Демен, Майкла Пітерса, Жиля Ван Аше та Ронні Ван Кіра.)"

#: ../../whatsnew/3.6.rst:1109
msgid ""
"The password-based key derivation function :func:`~hashlib.scrypt` is now "
"available with OpenSSL 1.1.0 and newer. (Contributed by Christian Heimes in :"
"issue:`27928`.)"
msgstr ""
"Функція отримання ключа на основі пароля :func:`~hashlib.scrypt` тепер "
"доступна з OpenSSL 1.1.0 і новіших версій. (Надав Крістіан Хеймс у :issue:"
"`27928`.)"

#: ../../whatsnew/3.6.rst:1114
msgid "http.client"
msgstr "http.client"

#: ../../whatsnew/3.6.rst:1116
msgid ""
":meth:`HTTPConnection.request() <http.client.HTTPConnection.request>` and :"
"meth:`~http.client.HTTPConnection.endheaders` both now support chunked "
"encoding request bodies. (Contributed by Demian Brecht and Rolf Krahl in :"
"issue:`12319`.)"
msgstr ""
":meth:`HTTPConnection.request() <http.client.HTTPConnection.request>` і :"
"meth:`~http.client.HTTPConnection.endheaders` тепер підтримують частини "
"запитів на кодування. (Надано Деміаном Брехтом і Рольфом Кралем у :issue:"
"`12319`.)"

#: ../../whatsnew/3.6.rst:1123
msgid "idlelib and IDLE"
msgstr "idlelib e IDLE"

#: ../../whatsnew/3.6.rst:1125
msgid ""
"The idlelib package is being modernized and refactored to make IDLE look and "
"work better and to make the code easier to understand, test, and improve. "
"Part of making IDLE look better, especially on Linux and Mac, is using ttk "
"widgets, mostly in the dialogs.  As a result, IDLE no longer runs with tcl/"
"tk 8.4.  It now requires tcl/tk 8.5 or 8.6.  We recommend running the latest "
"release of either."
msgstr ""
"Пакет idlelib модернізується та переробляється, щоб IDLE виглядав і працював "
"краще, а код було легше зрозуміти, тестувати та вдосконалювати. Частиною "
"покращення вигляду IDLE, особливо на Linux і Mac, є використання віджетів "
"ttk, переважно в діалогових вікнах. У результаті IDLE більше не працює з tcl/"
"tk 8.4. Тепер для цього потрібен tcl/tk 8.5 або 8.6. Ми рекомендуємо "
"запустити останню версію будь-якого з них."

#: ../../whatsnew/3.6.rst:1132
msgid ""
"'Modernizing' includes renaming and consolidation of idlelib modules. The "
"renaming of files with partial uppercase names is similar to the renaming "
"of, for instance, Tkinter and TkFont to tkinter and tkinter.font in 3.0.  As "
"a result, imports of idlelib files that worked in 3.5 will usually not work "
"in 3.6.  At least a module name change will be needed (see idlelib/README."
"txt), sometimes more.  (Name changes contributed by Al Swiegart and Terry "
"Reedy in :issue:`24225`.  Most idlelib patches since have been and will be "
"part of the process.)"
msgstr ""
"\"Модернізація\" включає перейменування та консолідацію модулів idlelib. "
"Перейменування файлів із частковими назвами у верхньому регістрі подібне до "
"перейменування, наприклад, Tkinter і TkFont на tkinter і tkinter.font у 3.0. "
"Як наслідок, імпорт файлів idlelib, які працювали у 3.5, зазвичай не "
"працюватимуть у 3.6. Потрібна буде принаймні зміна назви модуля (див. "
"idlelib/README.txt), іноді більше. (Зміну назви внесли Ел Свігарт і Террі "
"Ріді в :issue:`24225`. Більшість патчів idlelib відтоді були і будуть "
"частиною процесу.)"

#: ../../whatsnew/3.6.rst:1141
msgid ""
"In compensation, the eventual result with be that some idlelib classes will "
"be easier to use, with better APIs and docstrings explaining them.  "
"Additional useful information will be added to idlelib when available."
msgstr ""
"Як компенсацію, кінцевим результатом буде те, що деякі класи idlelib стануть "
"легшими у використанні, з кращими API та рядками документів, які їх "
"пояснюватимуть. До idlelib буде додано додаткову корисну інформацію, коли "
"вона стане доступною."

#: ../../whatsnew/3.6.rst:1145
msgid "New in 3.6.2:"
msgstr "Baru di 3.6.2:"

#: ../../whatsnew/3.6.rst:1147
msgid ""
"Multiple fixes for autocompletion. (Contributed by Louie Lu in :issue:"
"`15786`.)"
msgstr "Кілька виправлень для автозавершення. (Надав Луї Лу в :issue:`15786`.)"

#: ../../whatsnew/3.6.rst:1149
msgid "New in 3.6.3:"
msgstr "Baru di 3.6.3:"

#: ../../whatsnew/3.6.rst:1151
msgid ""
"Module Browser (on the File menu, formerly called Class Browser), now "
"displays nested functions and classes in addition to top-level functions and "
"classes. (Contributed by Guilherme Polo, Cheryl Sabella, and Terry Jan Reedy "
"in :issue:`1612262`.)"
msgstr ""
"Браузер модулів (у меню \"Файл\", раніше називався \"Браузер класів\") тепер "
"відображає вкладені функції та класи на додаток до функцій і класів "
"верхнього рівня. (Надано Гільєрме Поло, Шеріл Сабелла та Террі Ян Ріді в :"
"issue:`1612262`.)"

#: ../../whatsnew/3.6.rst:1157
msgid ""
"The IDLE features formerly implemented as extensions have been reimplemented "
"as normal features.  Their settings have been moved from the Extensions tab "
"to other dialog tabs. (Contributed by Charles Wohlganger and Terry Jan Reedy "
"in :issue:`27099`.)"
msgstr ""
"Функції IDLE, раніше реалізовані як розширення, були повторно реалізовані як "
"звичайні функції. Їх налаштування переміщено з вкладки \"Розширення\" на "
"інші вкладки діалогу. (Надано Чарльзом Волгангером і Террі Джаном Ріді в :"
"issue:`27099`.)"

#: ../../whatsnew/3.6.rst:1162
msgid ""
"The Settings dialog (Options, Configure IDLE) has been partly rewritten to "
"improve both appearance and function. (Contributed by Cheryl Sabella and "
"Terry Jan Reedy in multiple issues.)"
msgstr ""
"Діалогове вікно налаштувань (параметри, налаштування IDLE) було частково "
"переписано, щоб покращити зовнішній вигляд і функції. (Надано Шеріл Сабеллою "
"та Террі Джен Ріді в кількох випусках.)"

#: ../../whatsnew/3.6.rst:1166
msgid "New in 3.6.4:"
msgstr "Baru di 3.6.4:"

#: ../../whatsnew/3.6.rst:1168
msgid ""
"The font sample now includes a selection of non-Latin characters so that "
"users can better see the effect of selecting a particular font. (Contributed "
"by Terry Jan Reedy in :issue:`13802`.) The sample can be edited to include "
"other characters. (Contributed by Serhiy Storchaka in :issue:`31860`.)"
msgstr ""
"Зразок шрифту тепер містить вибірку нелатинських символів, щоб користувачі "
"могли краще побачити ефект від вибору певного шрифту. (Надав Террі Ян Ріді "
"в :issue:`13802`.) Зразок можна редагувати, щоб включити інші символи. "
"(Надав Сергій Сторчака в :issue:`31860`.)"

#: ../../whatsnew/3.6.rst:1174
msgid "New in 3.6.6:"
msgstr "Baru di 3.6.6:"

#: ../../whatsnew/3.6.rst:1176
msgid ""
"Editor code context option revised.  Box displays all context lines up to "
"maxlines.  Clicking on a context line jumps the editor to that line.  "
"Context colors for custom themes is added to Highlights tab of Settings "
"dialog. (Contributed by Cheryl Sabella and Terry Jan Reedy in :issue:"
"`33642`, :issue:`33768`, and :issue:`33679`.)"
msgstr ""
"Опцію контексту коду редактора переглянуто. Box відображає всі контекстні "
"рядки до maxlines. Клацання на рядку контексту переводить редактор до цього "
"рядка. Кольори контексту для спеціальних тем додано на вкладку "
"\"Висвітлення\" діалогового вікна \"Параметри\". (Надано Шеріл Сабелла та "
"Террі Ян Ріді в :issue:`33642`, :issue:`33768` та :issue:`33679`.)"

#: ../../whatsnew/3.6.rst:1182
msgid ""
"On Windows, a new API call tells Windows that tk scales for DPI. On Windows "
"8.1+ or 10, with DPI compatibility properties of the Python binary "
"unchanged, and a monitor resolution greater than 96 DPI, this should make "
"text and lines sharper.  It should otherwise have no effect. (Contributed by "
"Terry Jan Reedy in :issue:`33656`.)"
msgstr ""
"У Windows новий виклик API повідомляє Windows, що tk масштабується для DPI. "
"У Windows 8.1+ або 10 із незмінними властивостями сумісності DPI двійкового "
"коду Python і роздільною здатністю монітора понад 96 DPI текст і лінії мають "
"бути чіткішими. В іншому випадку це не повинно мати ефекту. (Надав Террі Ян "
"Ріді в :issue:`33656`.)"

#: ../../whatsnew/3.6.rst:1188
msgid "New in 3.6.7:"
msgstr "Baru di 3.6.7:"

#: ../../whatsnew/3.6.rst:1190
msgid ""
"Output over N lines (50 by default) is squeezed down to a button. N can be "
"changed in the PyShell section of the General page of the Settings dialog.  "
"Fewer, but possibly extra long, lines can be squeezed by right clicking on "
"the output.  Squeezed output can be expanded in place by double-clicking the "
"button or into the clipboard or a separate window by right-clicking the "
"button.  (Contributed by Tal Einat in :issue:`1529353`.)"
msgstr ""
"A saída em N linhas (50 por padrão) é compactada até um limite inferior. N "
"pode ser alterado na seção PyShell da página General da caixa de diálogo "
"Settings. Menos linhas, mas possivelmente extra longas, podem ser espremidas "
"clicando com o botão direito do mouse na saída. A saída compactada pode ser "
"expandida no local clicando duas vezes no botão ou na área de transferência "
"ou em uma janela separada clicando com o botão direito do mouse. "
"(Contribuição de Tal Einat em :issue:`1529353`.)"

#: ../../whatsnew/3.6.rst:1199 ../../whatsnew/3.6.rst:2007
msgid "importlib"
msgstr "importlib"

#: ../../whatsnew/3.6.rst:1201
msgid ""
"Import now raises the new exception :exc:`ModuleNotFoundError` (subclass of :"
"exc:`ImportError`) when it cannot find a module.  Code that current checks "
"for ``ImportError`` (in try-except) will still work. (Contributed by Eric "
"Snow in :issue:`15767`.)"
msgstr ""
"Імпорт тепер викликає новий виняток :exc:`ModuleNotFoundError` (підклас :exc:"
"`ImportError`), коли він не може знайти модуль. Код, який зараз перевіряє "
"``ImportError`` (у try-except), все ще працюватиме. (Надав Ерік Сноу в :"
"issue:`15767`.)"

#: ../../whatsnew/3.6.rst:1206
msgid ""
":class:`importlib.util.LazyLoader` now calls :meth:`~importlib.abc.Loader."
"create_module` on the wrapped loader, removing the restriction that :class:"
"`importlib.machinery.BuiltinImporter` and :class:`importlib.machinery."
"ExtensionFileLoader` couldn't be used with :class:`importlib.util."
"LazyLoader`."
msgstr ""
":class:`importlib.util.LazyLoader` тепер викликає :meth:`~importlib.abc."
"Loader.create_module` в оберненому завантажувачі, усуваючи обмеження, які :"
"class:`importlib.machinery.BuiltinImporter` та :class:`importlib .machinery."
"ExtensionFileLoader` не можна використовувати з :class:`importlib.util."
"LazyLoader`."

#: ../../whatsnew/3.6.rst:1212
msgid ""
":func:`importlib.util.cache_from_source`, :func:`importlib.util."
"source_from_cache`, and :func:`importlib.util.spec_from_file_location` now "
"accept a :term:`path-like object`."
msgstr ""
":func:`importlib.util.cache_from_source`, :func:`importlib.util."
"source_from_cache` і :func:`importlib.util.spec_from_file_location` тепер "
"приймають :term:`path-like object`."

#: ../../whatsnew/3.6.rst:1219
msgid "inspect"
msgstr "inspect"

#: ../../whatsnew/3.6.rst:1221
msgid ""
"The :func:`inspect.signature() <inspect.signature>` function now reports the "
"implicit ``.0`` parameters generated by the compiler for comprehension and "
"generator expression scopes as if they were positional-only parameters "
"called ``implicit0``. (Contributed by Jelle Zijlstra in :issue:`19611`.)"
msgstr ""
"Функція :func:`inspect.signature() <inspect.signature>` тепер повідомляє "
"неявні параметри ``.0``, згенеровані компілятором для розуміння, і області "
"виразу генератора, як якщо б вони були лише позиційними параметрами, які "
"називаються ``implicit0``. (Надано Jelle Zijlstra в :issue:`19611`.)"

#: ../../whatsnew/3.6.rst:1226
msgid ""
"To reduce code churn when upgrading from Python 2.7 and the legacy :func:"
"`inspect.getargspec` API, the previously documented deprecation of :func:"
"`inspect.getfullargspec` has been reversed. While this function is "
"convenient for single/source Python 2/3 code bases, the richer :func:"
"`inspect.signature` interface remains the recommended approach for new code. "
"(Contributed by Nick Coghlan in :issue:`27172`)"
msgstr ""
"Щоб зменшити відтік коду під час оновлення з Python 2.7 і застарілого :func:"
"`inspect.getargspec` API, раніше задокументований застарілий :func:`inspect."
"getfullargspec` було скасовано. Незважаючи на те, що ця функція зручна для "
"базового коду Python 2/3 з одним/вихідним кодом, багатший інтерфейс :func:"
"`inspect.signature` залишається рекомендованим підходом для нового коду. "
"(Надав Нік Коглан у :issue:`27172`)"

#: ../../whatsnew/3.6.rst:1235
msgid "json"
msgstr "json"

#: ../../whatsnew/3.6.rst:1237
msgid ""
":func:`json.load` and :func:`json.loads` now support binary input.  Encoded "
"JSON should be represented using either UTF-8, UTF-16, or UTF-32. "
"(Contributed by Serhiy Storchaka in :issue:`17909`.)"
msgstr ""
":func:`json.load` і :func:`json.loads` тепер підтримують двійкове введення. "
"Закодований JSON має бути представлений за допомогою UTF-8, UTF-16 або "
"UTF-32. (Надав Сергій Сторчака в :issue:`17909`.)"

#: ../../whatsnew/3.6.rst:1243
msgid "logging"
msgstr "logging"

#: ../../whatsnew/3.6.rst:1245
msgid ""
"The new :meth:`WatchedFileHandler.reopenIfNeeded() <logging.handlers."
"WatchedFileHandler.reopenIfNeeded>` method has been added to add the ability "
"to check if the log file needs to be reopened. (Contributed by Marian Horban "
"in :issue:`24884`.)"
msgstr ""
"Додано новий метод :meth:`WatchedFileHandler.reopenIfNeeded() <logging."
"handlers.WatchedFileHandler.reopenIfNeeded>`, щоб додати можливість "
"перевірити, чи потрібно повторно відкрити файл журналу. (Надав Маріан "
"Горбань у :issue:`24884`.)"

#: ../../whatsnew/3.6.rst:1252
msgid "math"
msgstr "math"

#: ../../whatsnew/3.6.rst:1254
msgid ""
"The tau (*τ*) constant has been added to the :mod:`math` and :mod:`cmath` "
"modules. (Contributed by Lisa Roach in :issue:`12345`, see :pep:`628` for "
"details.)"
msgstr ""
"Константу tau (*τ*) додано до модулів :mod:`math` і :mod:`cmath`. (Надано "
"Лізою Роуч у :issue:`12345`, подробиці див. :pep:`628`.)"

#: ../../whatsnew/3.6.rst:1260
msgid "multiprocessing"
msgstr "multiprocessing"

#: ../../whatsnew/3.6.rst:1262
msgid ""
":ref:`Proxy Objects <multiprocessing-proxy_objects>` returned by :func:"
"`multiprocessing.Manager` can now be nested. (Contributed by Davin Potts in :"
"issue:`6766`.)"
msgstr ""
":ref:`Проксі-об’єкти <multiprocessing-proxy_objects>`, які повертає :func:"
"`multiprocessing.Manager`, тепер можна вкладати. (Надав Девін Поттс у :issue:"
"`6766`.)"

#: ../../whatsnew/3.6.rst:1268 ../../whatsnew/3.6.rst:2021
msgid "os"
msgstr "os"

#: ../../whatsnew/3.6.rst:1270
msgid ""
"See the summary of :ref:`PEP 519 <whatsnew36-pep519>` for details on how "
"the :mod:`os` and :mod:`os.path` modules now support :term:`path-like "
"objects <path-like object>`."
msgstr ""
"Перегляньте підсумок :ref:`PEP 519 <whatsnew36-pep519>`, щоб дізнатися, як "
"модулі :mod:`os` і :mod:`os.path` тепер підтримують :term:`path-подібні "
"об’єкти <path-like object>`."

#: ../../whatsnew/3.6.rst:1274
msgid ":func:`~os.scandir` now supports :class:`bytes` paths on Windows."
msgstr ":func:`~os.scandir` тепер підтримує шляхи :class:`bytes` у Windows."

#: ../../whatsnew/3.6.rst:1276
msgid ""
"A new :meth:`~os.scandir.close` method allows explicitly closing a :func:"
"`~os.scandir` iterator.  The :func:`~os.scandir` iterator now supports the :"
"term:`context manager` protocol.  If a :func:`scandir` iterator is neither "
"exhausted nor explicitly closed a :exc:`ResourceWarning` will be emitted in "
"its destructor. (Contributed by Serhiy Storchaka in :issue:`25994`.)"
msgstr ""
"Новий метод :meth:`~os.scandir.close` дозволяє явно закривати ітератор :func:"
"`~os.scandir`. Ітератор :func:`~os.scandir` тепер підтримує протокол :term:"
"`context manager`. Якщо ітератор :func:`scandir` не вичерпано і не закрито "
"явно, у його деструкторі буде видано :exc:`ResourceWarning`. (Надав Сергій "
"Сторчака в :issue:`25994`.)"

#: ../../whatsnew/3.6.rst:1286
msgid ""
"The Linux ``getrandom()`` syscall (get random bytes) is now exposed as the "
"new :func:`os.getrandom` function. (Contributed by Victor Stinner, part of "
"the :pep:`524`)"
msgstr ""
"Системний виклик Linux ``getrandom()`` (отримання випадкових байтів) тепер "
"доступний як нова функція :func:`os.getrandom`. (Надав Віктор Стіннер, "
"частина :pep:`524`)"

#: ../../whatsnew/3.6.rst:1292
msgid "pathlib"
msgstr "pathlib"

#: ../../whatsnew/3.6.rst:1294
msgid ""
":mod:`pathlib` now supports :term:`path-like objects <path-like object>`. "
"(Contributed by Brett Cannon in :issue:`27186`.)"
msgstr ""
":mod:`pathlib` тепер підтримує :term:`шляхові об’єкти <path-like object>`. "
"(Надано Бреттом Кенноном у :issue:`27186`.)"

#: ../../whatsnew/3.6.rst:1297
msgid "See the summary of :ref:`PEP 519 <whatsnew36-pep519>` for details."
msgstr "Подробиці дивіться в резюме :ref:`PEP 519 <whatsnew36-pep519>`."

#: ../../whatsnew/3.6.rst:1301
msgid "pdb"
msgstr "pdb"

#: ../../whatsnew/3.6.rst:1303
msgid ""
"The :class:`~pdb.Pdb` class constructor has a new optional *readrc* argument "
"to control whether ``.pdbrc`` files should be read."
msgstr ""
"Конструктор класу :class:`~pdb.Pdb` має новий необов’язковий аргумент "
"*readrc* для керування тим, чи слід читати файли ``.pdbrc``."

#: ../../whatsnew/3.6.rst:1308
msgid "pickle"
msgstr "pickle"

#: ../../whatsnew/3.6.rst:1310
msgid ""
"Objects that need ``__new__`` called with keyword arguments can now be "
"pickled using :ref:`pickle protocols <pickle-protocols>` older than protocol "
"version 4. Protocol version 4 already supports this case.  (Contributed by "
"Serhiy Storchaka in :issue:`24164`.)"
msgstr ""
"Об’єкти, які потребують виклику ``__new__`` із ключовими аргументами, тепер "
"можна вибирати за допомогою :ref:`протоколів pickle <pickle-protocols>`, "
"старших за протокол версії 4. Протокол версії 4 уже підтримує цей випадок. "
"(Надав Сергій Сторчака в :issue:`24164`.)"

#: ../../whatsnew/3.6.rst:1317
msgid "pickletools"
msgstr "інструменти для маринування"

#: ../../whatsnew/3.6.rst:1319
msgid ""
":func:`pickletools.dis` now outputs the implicit memo index for the "
"``MEMOIZE`` opcode. (Contributed by Serhiy Storchaka in :issue:`25382`.)"
msgstr ""
":func:`pickletools.dis` теперь выводит неявный индекс заметки для опкода "
"``MEMOIZE``. (Предоставлено Сергеем Сторчакой в ​​:issue:`25382`.)"

#: ../../whatsnew/3.6.rst:1325
msgid "pydoc"
msgstr "pydoc"

#: ../../whatsnew/3.6.rst:1327
msgid ""
"The :mod:`pydoc` module has learned to respect the ``MANPAGER`` environment "
"variable. (Contributed by Matthias Klose in :issue:`8637`.)"
msgstr ""
"Модуль :mod:`pydoc` навчився поважати змінну середовища ``MANPAGER``. (Надав "
"Маттіас Клозе в :issue:`8637`.)"

#: ../../whatsnew/3.6.rst:1331
msgid ""
":func:`help` and :mod:`pydoc` can now list named tuple fields in the order "
"they were defined rather than alphabetically. (Contributed by Raymond "
"Hettinger in :issue:`24879`.)"
msgstr ""
":func:`help` і :mod:`pydoc` тепер можуть перераховувати іменовані поля "
"кортежу в порядку їх визначення, а не в алфавітному порядку. (Надав Реймонд "
"Геттінгер у :issue:`24879`.)"

#: ../../whatsnew/3.6.rst:1337
msgid "random"
msgstr "random"

#: ../../whatsnew/3.6.rst:1339
msgid ""
"The new :func:`~random.choices` function returns a list of elements of "
"specified size from the given population with optional weights. (Contributed "
"by Raymond Hettinger in :issue:`18844`.)"
msgstr ""
"Нова функція :func:`~random.choices` повертає список елементів заданого "
"розміру з заданої сукупності з додатковими вагами. (Надав Реймонд Геттінгер "
"у :issue:`18844`.)"

#: ../../whatsnew/3.6.rst:1345 ../../whatsnew/3.6.rst:2029
msgid "re"
msgstr "re"

#: ../../whatsnew/3.6.rst:1347
msgid ""
"Added support of modifier spans in regular expressions.  Examples: ``'(?i:"
"p)ython'`` matches ``'python'`` and ``'Python'``, but not ``'PYTHON'``; ``'(?"
"i)g(?-i:v)r'`` matches ``'GvR'`` and ``'gvr'``, but not ``'GVR'``. "
"(Contributed by Serhiy Storchaka in :issue:`433028`.)"
msgstr ""
"Додано підтримку модифікаторів span у регулярних виразах. Приклади: ``'(?i:"
"p)ython`` відповідає ``'python'`` і ``'Python'``, але не ``'PYTHON'``; ``'(?"
"i)g(?-i:v)r''`` відповідає ``'GvR''`` і ``'gvr''``, але не ``'GVR''``. "
"(Надав Сергій Сторчака в :issue:`433028`.)"

#: ../../whatsnew/3.6.rst:1352
msgid ""
"Match object groups can be accessed by ``__getitem__``, which is equivalent "
"to ``group()``.  So ``mo['name']`` is now equivalent to ``mo."
"group('name')``.  (Contributed by Eric Smith in :issue:`24454`.)"
msgstr ""
"Доступ до груп об’єктів відповідності можна отримати за допомогою "
"``__getitem__``, що еквівалентно ``group()``. Отже, ``mo['name']`` тепер "
"еквівалентно ``mo.group('name')``. (Надав Ерік Сміт у :issue:`24454`.)"

#: ../../whatsnew/3.6.rst:1356
msgid ""
":class:`~re.Match` objects now support :meth:`index-like objects <object."
"__index__>` as group indices. (Contributed by Jeroen Demeyer and Xiang Zhang "
"in :issue:`27177`.)"
msgstr ""
":class:`~re.Match` об’єкти тепер підтримують :meth:`індексоподібні об’єкти "
"<object.__index__>` як групові індекси. (Надано Jeroen Demeyer і Xiang Zhang "
"у :issue:`27177`.)"

#: ../../whatsnew/3.6.rst:1363
msgid "readline"
msgstr "readline"

#: ../../whatsnew/3.6.rst:1365
msgid ""
"Added :func:`~readline.set_auto_history` to enable or disable automatic "
"addition of input to the history list.  (Contributed by Tyler Crompton in :"
"issue:`26870`.)"
msgstr ""
"Додано :func:`~readline.set_auto_history`, щоб увімкнути або вимкнути "
"автоматичне додавання введених даних до списку історії. (Надав Тайлер "
"Кромптон у :issue:`26870`.)"

#: ../../whatsnew/3.6.rst:1371
msgid "rlcompleter"
msgstr "rlcompleter"

#: ../../whatsnew/3.6.rst:1373
msgid ""
"Private and special attribute names now are omitted unless the prefix starts "
"with underscores.  A space or a colon is added after some completed "
"keywords. (Contributed by Serhiy Storchaka in :issue:`25011` and :issue:"
"`25209`.)"
msgstr ""
"Приватні та спеціальні назви атрибутів тепер опущені, якщо префікс не "
"починається з підкреслення. Після деяких завершених ключових слів додається "
"пробіл або двокрапка. (Надав Сергій Сторчака в :issue:`25011` та :issue:"
"`25209`.)"

#: ../../whatsnew/3.6.rst:1379
msgid "shlex"
msgstr "shlex"

#: ../../whatsnew/3.6.rst:1381
msgid ""
"The :class:`~shlex.shlex` has much :ref:`improved shell compatibility "
"<improved-shell-compatibility>` through the new *punctuation_chars* argument "
"to control which characters are treated as punctuation. (Contributed by "
"Vinay Sajip in :issue:`1521950`.)"
msgstr ""
":class:`~shlex.shlex` має значно :ref:`покращену сумісність оболонки "
"<improved-shell-compatibility>` завдяки новому аргументу *punctuation_chars* "
"для контролю того, які символи розглядаються як знаки пунктуації. (Надав "
"Віней Саджип у :issue:`1521950`.)"

#: ../../whatsnew/3.6.rst:1389
msgid "site"
msgstr "site"

#: ../../whatsnew/3.6.rst:1391
msgid ""
"When specifying paths to add to :data:`sys.path` in a ``.pth`` file, you may "
"now specify file paths on top of directories (e.g. zip files). (Contributed "
"by Wolfgang Langner in :issue:`26587`)."
msgstr ""
"При указании путей для добавления к :data:`sys.path` в файле ``.pth`` вы "
"теперь можете указывать пути к файлам поверх каталогов (например, zip-"
"файлов). (Предоставлено Вольфгангом Лангнером в :issue:`26587`)."

#: ../../whatsnew/3.6.rst:1397
msgid "sqlite3"
msgstr "sqlite3"

#: ../../whatsnew/3.6.rst:1399
msgid ""
":attr:`sqlite3.Cursor.lastrowid` now supports the ``REPLACE`` statement. "
"(Contributed by Alex LordThorsen in :issue:`16864`.)"
msgstr ""
":attr:`sqlite3.Cursor.lastrowid` тепер підтримує оператор ``REPLACE``. "
"(Надав Алекс ЛордТорсен у :issue:`16864`.)"

#: ../../whatsnew/3.6.rst:1404
msgid "socket"
msgstr "socket"

#: ../../whatsnew/3.6.rst:1406
msgid ""
"The :func:`~socket.socket.ioctl` function now supports the :const:`~socket."
"SIO_LOOPBACK_FAST_PATH` control code. (Contributed by Daniel Stokes in :"
"issue:`26536`.)"
msgstr ""
"Функция :func:`~socket.socket.ioctl` теперь поддерживает управляющий код :"
"const:`~socket.SIO_LOOPBACK_FAST_PATH`. (Предоставлено Дэниелом Стоуксом в :"
"issue:`26536`.)"

#: ../../whatsnew/3.6.rst:1410
msgid ""
"The :meth:`~socket.socket.getsockopt` constants ``SO_DOMAIN``, "
"``SO_PROTOCOL``, ``SO_PEERSEC``, and ``SO_PASSSEC`` are now supported. "
"(Contributed by Christian Heimes in :issue:`26907`.)"
msgstr ""
"Тепер підтримуються константи :meth:`~socket.socket.getsockopt` "
"``SO_DOMAIN``, ``SO_PROTOCOL``, ``SO_PEERSEC`` і ``SO_PASSSEC``. (Надав "
"Крістіан Хеймс у :issue:`26907`.)"

#: ../../whatsnew/3.6.rst:1414
msgid ""
"The :meth:`~socket.socket.setsockopt` now supports the ``setsockopt(level, "
"optname, None, optlen: int)`` form. (Contributed by Christian Heimes in :"
"issue:`27744`.)"
msgstr ""
":meth:`~socket.socket.setsockopt` тепер підтримує форму ``setsockopt(level, "
"optname, None, optlen: int)``. (Надав Крістіан Хеймс у :issue:`27744`.)"

#: ../../whatsnew/3.6.rst:1418
msgid ""
"The socket module now supports the address family :const:`~socket.AF_ALG` to "
"interface with Linux Kernel crypto API. ``ALG_*``, ``SOL_ALG`` and :meth:"
"`~socket.socket.sendmsg_afalg` were added. (Contributed by Christian Heimes "
"in :issue:`27744` with support from Victor Stinner.)"
msgstr ""
"Модуль сокета теперь поддерживает семейство адресов :const:`~socket.AF_ALG` "
"для взаимодействия с криптографическим API ядра Linux. Были добавлены "
"``ALG_*``, ``SOL_ALG`` и :meth:`~socket.socket.sendmsg_afalg`. "
"(Предоставлено Кристианом Хаймсом в :issue:`27744` при поддержке Виктора "
"Стиннера.)"

#: ../../whatsnew/3.6.rst:1424
msgid ""
"New Linux constants ``TCP_USER_TIMEOUT`` and ``TCP_CONGESTION`` were added. "
"(Contributed by Omar Sandoval, :issue:`26273`)."
msgstr ""
"Были добавлены новые константы Linux TCP_USER_TIMEOUT и TCP_CONGESTION. "
"(Предоставлено Омаром Сандовалем, :issue:`26273`)."

#: ../../whatsnew/3.6.rst:1429
msgid "socketserver"
msgstr "socketserver"

#: ../../whatsnew/3.6.rst:1431
msgid ""
"Servers based on the :mod:`socketserver` module, including those defined in :"
"mod:`http.server`, :mod:`xmlrpc.server` and :mod:`wsgiref.simple_server`, "
"now support the :term:`context manager` protocol. (Contributed by Aviv "
"Palivoda in :issue:`26404`.)"
msgstr ""
"Сервери на основі модуля :mod:`socketserver`, включно з тими, що визначені "
"в :mod:`http.server`, :mod:`xmlrpc.server` і :mod:`wsgiref.simple_server`, "
"тепер підтримують :term:`context manager` протокол. (Надав Авів Паливода в :"
"issue:`26404`.)"

#: ../../whatsnew/3.6.rst:1437
msgid ""
"The :attr:`~socketserver.StreamRequestHandler.wfile` attribute of :class:"
"`~socketserver.StreamRequestHandler` classes now implements the :class:`io."
"BufferedIOBase` writable interface.  In particular, calling :meth:`~io."
"BufferedIOBase.write` is now guaranteed to send the data in full.  "
"(Contributed by Martin Panter in :issue:`26721`.)"
msgstr ""
"Атрибут :attr:`~socketserver.StreamRequestHandler.wfile` класів :class:"
"`~socketserver.StreamRequestHandler` тепер реалізує інтерфейс для запису :"
"class:`io.BufferedIOBase`. Зокрема, виклик :meth:`~io.BufferedIOBase.write` "
"тепер гарантує надсилання даних у повному обсязі. (Надав Мартін Пантер у :"
"issue:`26721`.)"

#: ../../whatsnew/3.6.rst:1445 ../../whatsnew/3.6.rst:2037
msgid "ssl"
msgstr "ssl"

#: ../../whatsnew/3.6.rst:1447
msgid ""
":mod:`ssl` supports OpenSSL 1.1.0.  The minimum recommend version is 1.0.2. "
"(Contributed by Christian Heimes in :issue:`26470`.)"
msgstr ""
":mod:`ssl` підтримує OpenSSL 1.1.0. Мінімальна рекомендована версія 1.0.2. "
"(Надав Крістіан Хеймс у :issue:`26470`.)"

#: ../../whatsnew/3.6.rst:1450
msgid ""
"3DES has been removed from the default cipher suites and ChaCha20 Poly1305 "
"cipher suites have been added. (Contributed by Christian Heimes in :issue:"
"`27850` and :issue:`27766`.)"
msgstr ""
"3DES було видалено зі стандартних наборів шифрів і додано набори шифрів "
"ChaCha20 Poly1305. (Надано Крістіаном Хеймсом у :issue:`27850` та :issue:"
"`27766`.)"

#: ../../whatsnew/3.6.rst:1454
msgid ""
":class:`~ssl.SSLContext` has better default configuration for options and "
"ciphers. (Contributed by Christian Heimes in :issue:`28043`.)"
msgstr ""
":class:`~ssl.SSLContext` має кращу конфігурацію за замовчуванням для "
"параметрів і шифрів. (Надав Крістіан Хеймс у :issue:`28043`.)"

#: ../../whatsnew/3.6.rst:1458
msgid ""
"SSL session can be copied from one client-side connection to another with "
"the new :class:`~ssl.SSLSession` class.  TLS session resumption can speed up "
"the initial handshake, reduce latency and improve performance (Contributed "
"by Christian Heimes in :issue:`19500` based on a draft by Alex Warhawk.)"
msgstr ""
"Сеанс SSL можна скопіювати з одного клієнтського підключення до іншого за "
"допомогою нового класу :class:`~ssl.SSLSession`. Відновлення сеансу TLS може "
"пришвидшити початкове рукостискання, зменшити затримку та підвищити "
"продуктивність (надано Крістіаном Хеймсом у :issue:`19500` на основі "
"чернетки Алекса Вархока.)"

#: ../../whatsnew/3.6.rst:1464
msgid ""
"The new :meth:`~ssl.SSLContext.get_ciphers` method can be used to get a list "
"of enabled ciphers in order of cipher priority."
msgstr ""
"Новий метод :meth:`~ssl.SSLContext.get_ciphers` можна використовувати для "
"отримання списку ввімкнених шифрів у порядку пріоритету шифру."

#: ../../whatsnew/3.6.rst:1467
msgid ""
"All constants and flags have been converted to :class:`~enum.IntEnum` and :"
"class:`~enum.IntFlags`. (Contributed by Christian Heimes in :issue:`28025`.)"
msgstr ""
"Усі константи та прапорці було перетворено на :class:`~enum.IntEnum` та :"
"class:`~enum.IntFlags`. (Надав Крістіан Хеймс у :issue:`28025`.)"

#: ../../whatsnew/3.6.rst:1471
msgid ""
"Server and client-side specific TLS protocols for :class:`~ssl.SSLContext` "
"were added. (Contributed by Christian Heimes in :issue:`28085`.)"
msgstr ""
"Спеціальні для сервера та клієнта протоколи TLS для :class:`~ssl.SSLContext` "
"були додані. (Надав Крістіан Хеймс у :issue:`28085`.)"

#: ../../whatsnew/3.6.rst:1475
msgid ""
"Added :attr:`ssl.SSLContext.post_handshake_auth` to enable and :meth:`ssl."
"SSLSocket.verify_client_post_handshake` to initiate TLS 1.3 post-handshake "
"authentication. (Contributed by Christian Heimes in :gh:`78851`.)"
msgstr ""
"Добавлен :attr:`ssl.SSLContext.post_handshake_auth` для включения и :meth:"
"`ssl.SSLSocket.verify_client_post_handshake` для инициации аутентификации "
"TLS 1.3 после рукопожатия. (Предоставлено Кристианом Хаймсом в :gh:`78851`.)"

#: ../../whatsnew/3.6.rst:1481
msgid "statistics"
msgstr "statistics"

#: ../../whatsnew/3.6.rst:1483
msgid ""
"A new :func:`~statistics.harmonic_mean` function has been added. "
"(Contributed by Steven D'Aprano in :issue:`27181`.)"
msgstr ""
"Додано нову функцію :func:`~statistics.harmonic_mean`. (Надав Стівен "
"Д'Апрано в :issue:`27181`.)"

#: ../../whatsnew/3.6.rst:1488
msgid "struct"
msgstr "struct"

#: ../../whatsnew/3.6.rst:1490
msgid ""
":mod:`struct` now supports IEEE 754 half-precision floats via the ``'e'`` "
"format specifier. (Contributed by Eli Stevens, Mark Dickinson in :issue:"
"`11734`.)"
msgstr ""
":mod:`struct` тепер підтримує числа з плаваючою точкою половинної точності "
"IEEE 754 через специфікатор формату ``'e''``. (Надано Елі Стівенсом, Марком "
"Дікінсоном у :issue:`11734`.)"

#: ../../whatsnew/3.6.rst:1496
msgid "subprocess"
msgstr "subprocess"

#: ../../whatsnew/3.6.rst:1498
msgid ""
":class:`subprocess.Popen` destructor now emits a :exc:`ResourceWarning` "
"warning if the child process is still running. Use the context manager "
"protocol (``with proc: ...``) or explicitly call the :meth:`~subprocess."
"Popen.wait` method to read the exit status of the child process. "
"(Contributed by Victor Stinner in :issue:`26741`.)"
msgstr ""
"Деструктор :class:`subprocess.Popen` тепер видає попередження :exc:"
"`ResourceWarning`, якщо дочірній процес все ще виконується. Використовуйте "
"протокол менеджера контексту (``with proc: ...``) або явно викликайте метод :"
"meth:`~subprocess.Popen.wait`, щоб прочитати статус виходу дочірнього "
"процесу. (Надав Віктор Стіннер у :issue:`26741`.)"

#: ../../whatsnew/3.6.rst:1504
msgid ""
"The :class:`subprocess.Popen` constructor and all functions that pass "
"arguments through to it now accept *encoding* and *errors* arguments. "
"Specifying either of these will enable text mode for the *stdin*, *stdout* "
"and *stderr* streams. (Contributed by Steve Dower in :issue:`6135`.)"
msgstr ""
"Конструктор :class:`subprocess.Popen` і всі функції, які передають йому "
"аргументи, тепер приймають аргументи *encoding* і *errors*. Визначення будь-"
"якого з них увімкне текстовий режим для потоків *stdin*, *stdout* і "
"*stderr*. (Надав Стів Дауер у :issue:`6135`.)"

#: ../../whatsnew/3.6.rst:1511
msgid "sys"
msgstr "sys"

#: ../../whatsnew/3.6.rst:1513
msgid ""
"The new :func:`~sys.getfilesystemencodeerrors` function returns the name of "
"the error mode used to convert between Unicode filenames and bytes "
"filenames. (Contributed by Steve Dower in :issue:`27781`.)"
msgstr ""
"Нова функція :func:`~sys.getfilesystemencodeerrors` повертає назву режиму "
"помилки, який використовується для перетворення між іменами файлів Unicode "
"та іменами файлів байтів. (Надав Стів Дауер у :issue:`27781`.)"

#: ../../whatsnew/3.6.rst:1517
msgid ""
"On Windows the return value of the :func:`~sys.getwindowsversion` function "
"now includes the *platform_version* field which contains the accurate major "
"version, minor version and build number of the current operating system, "
"rather than the version that is being emulated for the process (Contributed "
"by Steve Dower in :issue:`27932`.)"
msgstr ""
"У Windows значення, що повертається функцією :func:`~sys.getwindowsversion`, "
"тепер включає поле *platform_version*, яке містить точну основну версію, "
"додаткову версію та номер збірки поточної операційної системи, а не версію, "
"яка емулюється для процесу (надав Стів Дауер у :issue:`27932`.)"

#: ../../whatsnew/3.6.rst:1525
msgid "telnetlib"
msgstr "telnetlib"

#: ../../whatsnew/3.6.rst:1527
msgid ""
":class:`~telnetlib.Telnet` is now a context manager (contributed by Stéphane "
"Wirtel in :issue:`25485`)."
msgstr ""

#: ../../whatsnew/3.6.rst:1532
msgid "time"
msgstr "time"

#: ../../whatsnew/3.6.rst:1534
msgid ""
"The :class:`~time.struct_time` attributes :attr:`tm_gmtoff` and :attr:"
"`tm_zone` are now available on all platforms."
msgstr ""
"Атрибути :class:`~time.struct_time` :attr:`tm_gmtoff` і :attr:`tm_zone` "
"тепер доступні на всіх платформах."

#: ../../whatsnew/3.6.rst:1539
msgid "timeit"
msgstr "timeit"

#: ../../whatsnew/3.6.rst:1541
msgid ""
"The new :meth:`Timer.autorange() <timeit.Timer.autorange>` convenience "
"method has been added to call :meth:`Timer.timeit() <timeit.Timer.timeit>` "
"repeatedly so that the total run time is greater or equal to 200 "
"milliseconds. (Contributed by Steven D'Aprano in :issue:`6422`.)"
msgstr ""
"Додано новий зручний метод :meth:`Timer.autorange() <timeit.Timer."
"autorange>` для багаторазового виклику :meth:`Timer.timeit() <timeit.Timer."
"timeit>` так, щоб загальний час виконання був більшим або рівним 200 "
"мілісекундам. (Надав Стівен Д'Апрано в :issue:`6422`.)"

#: ../../whatsnew/3.6.rst:1546
msgid ""
":mod:`timeit` now warns when there is substantial (4x) variance between best "
"and worst times. (Contributed by Serhiy Storchaka in :issue:`23552`.)"
msgstr ""
":mod:`timeit` тепер попереджає про значну (4x) різницю між найкращим і "
"гіршим часом. (Надав Сергій Сторчака в :issue:`23552`.)"

#: ../../whatsnew/3.6.rst:1552 ../../whatsnew/3.6.rst:2054
msgid "tkinter"
msgstr "tkinter"

#: ../../whatsnew/3.6.rst:1554
msgid ""
"Added methods :meth:`~tkinter.Variable.trace_add`, :meth:`~tkinter.Variable."
"trace_remove` and :meth:`~tkinter.Variable.trace_info` in the :class:"
"`tkinter.Variable` class.  They replace old methods :meth:`~tkinter.Variable."
"trace_variable`, :meth:`~tkinter.Variable.trace`, :meth:`~tkinter.Variable."
"trace_vdelete` and :meth:`~tkinter.Variable.trace_vinfo` that use obsolete "
"Tcl commands and might not work in future versions of Tcl. (Contributed by "
"Serhiy Storchaka in :issue:`22115`)."
msgstr ""
"Додано методи :meth:`~tkinter.Variable.trace_add`, :meth:`~tkinter.Variable."
"trace_remove` і :meth:`~tkinter.Variable.trace_info` в клас :class:`tkinter."
"Variable`. Вони замінюють старі методи :meth:`~tkinter.Variable."
"trace_variable`, :meth:`~tkinter.Variable.trace`, :meth:`~tkinter.Variable."
"trace_vdelete` та :meth:`~tkinter.Variable.trace_vinfo`, які використовують "
"застарілі команди Tcl і можуть не працювати в майбутніх версіях Tcl. (Надав "
"Сергій Сторчака в :issue:`22115`)."

#: ../../whatsnew/3.6.rst:1567
msgid "traceback"
msgstr "traceback"

#: ../../whatsnew/3.6.rst:1569
msgid ""
"Both the traceback module and the interpreter's builtin exception display "
"now abbreviate long sequences of repeated lines in tracebacks as shown in "
"the following example::"
msgstr ""
"Як модуль відстеження, так і вбудований дисплей винятків інтерпретатора "
"тепер скорочують довгі послідовності повторюваних рядків у відстеженнях, як "
"показано в наступному прикладі:"

#: ../../whatsnew/3.6.rst:1573
msgid ""
">>> def f(): f()\n"
"...\n"
">>> f()\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"  File \"<stdin>\", line 1, in f\n"
"  File \"<stdin>\", line 1, in f\n"
"  File \"<stdin>\", line 1, in f\n"
"  [Previous line repeated 995 more times]\n"
"RecursionError: maximum recursion depth exceeded"
msgstr ""
">>> def f(): f()\n"
"...\n"
">>> f()\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1, in <module>\n"
"  File \"<stdin>\", line 1, in f\n"
"  File \"<stdin>\", line 1, in f\n"
"  File \"<stdin>\", line 1, in f\n"
"  [Previous line repeated 995 more times]\n"
"RecursionError: maximum recursion depth exceeded"

#: ../../whatsnew/3.6.rst:1584
msgid "(Contributed by Emanuel Barry in :issue:`26823`.)"
msgstr "(Kontribusi dari Emanuel Barry di :issue:`26823`.)"

#: ../../whatsnew/3.6.rst:1588
msgid "tracemalloc"
msgstr "tracemalloc"

#: ../../whatsnew/3.6.rst:1590
msgid ""
"The :mod:`tracemalloc` module now supports tracing memory allocations in "
"multiple different address spaces."
msgstr ""
"Модуль :mod:`tracemalloc` тепер підтримує відстеження розподілу пам’яті в "
"кількох різних адресних просторах."

#: ../../whatsnew/3.6.rst:1593
msgid ""
"The new :class:`~tracemalloc.DomainFilter` filter class has been added to "
"filter block traces by their address space (domain)."
msgstr ""
"Додано новий клас фільтра :class:`~tracemalloc.DomainFilter` для фільтрації "
"трасування блоків за їх адресним простором (доменом)."

#: ../../whatsnew/3.6.rst:1596
msgid "(Contributed by Victor Stinner in :issue:`26588`.)"
msgstr "(Kontribusi dari Victor Stinner di :issue:`26588`.)"

#: ../../whatsnew/3.6.rst:1602
msgid "typing"
msgstr "typing"

#: ../../whatsnew/3.6.rst:1604
msgid ""
"Since the :mod:`typing` module is :term:`provisional <provisional API>`, all "
"changes introduced in Python 3.6 have also been backported to Python 3.5.x."
msgstr ""
"Оскільки модуль :mod:`typing` є :term:`провізорним <provisional API>`, усі "
"зміни, внесені в Python 3.6, також було перенесено до Python 3.5.x."

#: ../../whatsnew/3.6.rst:1608
msgid ""
"The :mod:`typing` module has a much improved support for generic type "
"aliases.  For example ``Dict[str, Tuple[S, T]]`` is now a valid type "
"annotation. (Contributed by Guido van Rossum in `Github #195 <https://github."
"com/python/typing/pull/195>`_.)"
msgstr ""
"Модуль :mod:`typing` має значно покращену підтримку загальних псевдонімів "
"типів. Наприклад, ``Dict[str, Tuple[S, T]]`` тепер є дійсною анотацією типу. "
"(Надано Гвідо ван Россумом у `Github #195 <https://github.com/python/typing/"
"pull/195>`_.)"

#: ../../whatsnew/3.6.rst:1614
msgid ""
"The :class:`typing.ContextManager` class has been added for representing :"
"class:`contextlib.AbstractContextManager`. (Contributed by Brett Cannon in :"
"issue:`25609`.)"
msgstr ""
"Клас :class:`typing.ContextManager` додано для представлення :class:"
"`contextlib.AbstractContextManager`. (Надав Бретт Кеннон у :issue:`25609`.)"

#: ../../whatsnew/3.6.rst:1618
msgid ""
"The :class:`typing.Collection` class has been added for representing :class:"
"`collections.abc.Collection`. (Contributed by Ivan Levkivskyi in :issue:"
"`27598`.)"
msgstr ""
"Клас :class:`typing.Collection` додано для представлення :class:`collections."
"abc.Collection`. (Надав Іван Левківський у :issue:`27598`.)"

#: ../../whatsnew/3.6.rst:1622
msgid ""
"The :const:`typing.ClassVar` type construct has been added to mark class "
"variables.  As introduced in :pep:`526`, a variable annotation wrapped in "
"ClassVar indicates that a given attribute is intended to be used as a class "
"variable and should not be set on instances of that class. (Contributed by "
"Ivan Levkivskyi in `Github #280 <https://github.com/python/typing/"
"pull/280>`_.)"
msgstr ""
"Для позначення змінних класу додано конструкцію типу :const:`typing."
"ClassVar`. Як представлено в :pep:`526`, анотація змінної, загорнена в "
"ClassVar, вказує на те, що даний атрибут призначений для використання як "
"змінна класу і не повинен встановлюватися для екземплярів цього класу. "
"(Надав Іван Левківський у `Github #280 <https://github.com/python/typing/"
"pull/280>`_.)"

#: ../../whatsnew/3.6.rst:1629
msgid ""
"A new :const:`~typing.TYPE_CHECKING` constant that is assumed to be ``True`` "
"by the static type checkers, but is ``False`` at runtime. (Contributed by "
"Guido van Rossum in `Github #230 <https://github.com/python/typing/"
"issues/230>`_.)"
msgstr ""
"Нова константа :const:`~typing.TYPE_CHECKING`, яка вважається ``True`` "
"засобами перевірки статичних типів, але є ``False`` під час виконання. "
"(Надано Гвідо ван Россумом у `Github #230 <https://github.com/python/typing/"
"issues/230>`_.)"

#: ../../whatsnew/3.6.rst:1634
msgid ""
"A new :func:`~typing.NewType` helper function has been added to create "
"lightweight distinct types for annotations::"
msgstr ""
"Додано нову допоміжну функцію :func:`~typing.NewType` для створення легких "
"різних типів для анотацій::"

#: ../../whatsnew/3.6.rst:1637
msgid ""
"from typing import NewType\n"
"\n"
"UserId = NewType('UserId', int)\n"
"some_id = UserId(524313)"
msgstr ""
"from typing import NewType\n"
"\n"
"UserId = NewType('UserId', int)\n"
"some_id = UserId(524313)"

#: ../../whatsnew/3.6.rst:1642
msgid ""
"The static type checker will treat the new type as if it were a subclass of "
"the original type.  (Contributed by Ivan Levkivskyi in `Github #189 <https://"
"github.com/python/typing/issues/189>`_.)"
msgstr ""
"Засіб перевірки статичного типу розглядатиме новий тип як підклас вихідного "
"типу. (Надав Іван Левківський у `Github #189 <https://github.com/python/"
"typing/issues/189>`_.)"

#: ../../whatsnew/3.6.rst:1648
msgid "unicodedata"
msgstr "unicodedata"

#: ../../whatsnew/3.6.rst:1650
msgid ""
"The :mod:`unicodedata` module now uses data from `Unicode 9.0.0 <https://"
"unicode.org/versions/Unicode9.0.0/>`_. (Contributed by Benjamin Peterson.)"
msgstr ""
"Модуль :mod:`unicodedata` теперь использует данные из `Unicode 9.0.0 "
"<https://unicode.org/versions/Unicode9.0.0/>`_. (Предоставлено Бенджамином "
"Петерсоном.)"

#: ../../whatsnew/3.6.rst:1656
msgid "unittest.mock"
msgstr "unittest.mock"

#: ../../whatsnew/3.6.rst:1658
msgid "The :class:`~unittest.mock.Mock` class has the following improvements:"
msgstr "Клас :class:`~unittest.mock.Mock` має наступні покращення:"

#: ../../whatsnew/3.6.rst:1660
msgid ""
"Two new methods, :meth:`Mock.assert_called() <unittest.mock.Mock."
"assert_called>` and :meth:`Mock.assert_called_once() <unittest.mock.Mock."
"assert_called_once>` to check if the mock object was called. (Contributed by "
"Amit Saha in :issue:`26323`.)"
msgstr ""
"Два нові методи, :meth:`Mock.assert_ called() <unittest.mock.Mock."
"assert_called>` і :meth:`Mock.assert_ called_once() <unittest.mock.Mock."
"assert_called_once>`, щоб перевірити, чи був викликаний макетний об’єкт. "
"(Надав Аміт Саха в :issue:`26323`.)"

#: ../../whatsnew/3.6.rst:1666
msgid ""
"The :meth:`Mock.reset_mock() <unittest.mock.Mock.reset_mock>` method now has "
"two optional keyword only arguments: *return_value* and *side_effect*. "
"(Contributed by Kushal Das in :issue:`21271`.)"
msgstr ""
"Метод :meth:`Mock.reset_mock() <unittest.mock.Mock.reset_mock>` тепер має "
"два необов’язкові аргументи лише для ключових слів: *return_value* і "
"*side_effect*. (Надав Кушал Дас у :issue:`21271`.)"

#: ../../whatsnew/3.6.rst:1673
msgid "urllib.request"
msgstr "urllib.request"

#: ../../whatsnew/3.6.rst:1675
msgid ""
"If a HTTP request has a file or iterable body (other than a bytes object) "
"but no ``Content-Length`` header, rather than throwing an error, :class:"
"`~urllib.request.AbstractHTTPHandler` now falls back to use chunked transfer "
"encoding. (Contributed by Demian Brecht and Rolf Krahl in :issue:`12319`.)"
msgstr ""
"Якщо HTTP-запит містить файл або ітераційне тіло (крім об’єкта bytes), але "
"немає заголовка ``Content-Length``, а не видає помилку, :class:`~urllib."
"request.AbstractHTTPHandler` тепер повертається до використання "
"фрагментоване кодування передачі. (Надано Деміаном Брехтом і Рольфом Кралем "
"у :issue:`12319`.)"

#: ../../whatsnew/3.6.rst:1683
msgid "urllib.robotparser"
msgstr "urllib.robotparser"

#: ../../whatsnew/3.6.rst:1685
msgid ""
":class:`~urllib.robotparser.RobotFileParser` now supports the ``Crawl-"
"delay`` and ``Request-rate`` extensions. (Contributed by Nikolay Bogoychev "
"in :issue:`16099`.)"
msgstr ""
":class:`~urllib.robotparser.RobotFileParser` тепер підтримує розширення "
"``Crawl-delay`` і ``Request-rate``. (Надав Микола Богойчев у :issue:`16099`.)"

#: ../../whatsnew/3.6.rst:1691 ../../whatsnew/3.6.rst:2062
msgid "venv"
msgstr "venv"

#: ../../whatsnew/3.6.rst:1693
msgid ""
":mod:`venv` accepts a new parameter ``--prompt``. This parameter provides an "
"alternative prefix for the virtual environment. (Proposed by Łukasz "
"Balcerzak and ported to 3.6 by Stéphane Wirtel in :issue:`22829`.)"
msgstr ""
":mod:`venv` приймає новий параметр ``--prompt``. Цей параметр надає "
"альтернативний префікс для віртуального середовища. (Запропоновано Łukasz "
"Balcerzak і перенесено на 3.6 Stéphane Wirtel у :issue:`22829`.)"

#: ../../whatsnew/3.6.rst:1699
msgid "warnings"
msgstr "avisos"

#: ../../whatsnew/3.6.rst:1701
msgid ""
"A new optional *source* parameter has been added to the :func:`warnings."
"warn_explicit` function: the destroyed object which emitted a :exc:"
"`ResourceWarning`. A *source* attribute has also been added to :class:"
"`warnings.WarningMessage` (contributed by Victor Stinner in :issue:`26568` "
"and :issue:`26567`)."
msgstr ""
"До функції :func:`warnings.warn_explicit` додано новий необов’язковий "
"параметр *source*: знищений об’єкт, який випустив :exc:`ResourceWarning`. "
"Атрибут *source* також додано до :class:`warnings.WarningMessage` (надано "
"Віктором Стіннером у :issue:`26568` та :issue:`26567`)."

#: ../../whatsnew/3.6.rst:1707
msgid ""
"When a :exc:`ResourceWarning` warning is logged, the :mod:`tracemalloc` "
"module is now used to try to retrieve the traceback where the destroyed "
"object was allocated."
msgstr ""
"Коли реєструється попередження :exc:`ResourceWarning`, модуль :mod:"
"`tracemalloc` тепер використовується для спроби отримати зворотне "
"відстеження, де було розміщено знищений об’єкт."

#: ../../whatsnew/3.6.rst:1710
msgid "Example with the script ``example.py``::"
msgstr "Приклад зі скриптом ``example.py``::"

#: ../../whatsnew/3.6.rst:1712
msgid ""
"import warnings\n"
"\n"
"def func():\n"
"    return open(__file__)\n"
"\n"
"f = func()\n"
"f = None"
msgstr ""
"import warnings\n"
"\n"
"def func():\n"
"    return open(__file__)\n"
"\n"
"f = func()\n"
"f = None"

#: ../../whatsnew/3.6.rst:1720
msgid "Output of the command ``python3.6 -Wd -X tracemalloc=5 example.py``::"
msgstr "Вихід команди ``python3.6 -Wd -X tracemalloc=5 example.py``::"

#: ../../whatsnew/3.6.rst:1722
msgid ""
"example.py:7: ResourceWarning: unclosed file <_io.TextIOWrapper "
"name='example.py' mode='r' encoding='UTF-8'>\n"
"  f = None\n"
"Object allocated at (most recent call first):\n"
"  File \"example.py\", lineno 4\n"
"    return open(__file__)\n"
"  File \"example.py\", lineno 6\n"
"    f = func()"
msgstr ""
"example.py:7: ResourceWarning: unclosed file <_io.TextIOWrapper "
"name='example.py' mode='r' encoding='UTF-8'>\n"
"  f = None\n"
"Object allocated at (most recent call first):\n"
"  File \"example.py\", lineno 4\n"
"    return open(__file__)\n"
"  File \"example.py\", lineno 6\n"
"    f = func()"

#: ../../whatsnew/3.6.rst:1730
msgid ""
"The \"Object allocated at\" traceback is new and is only displayed if :mod:"
"`tracemalloc` is tracing Python memory allocations and if the :mod:"
"`warnings` module was already imported."
msgstr ""
"Зворотне відстеження \"Об’єкт, виділений у\" є новим і відображається, лише "
"якщо :mod:`tracemalloc` відстежує виділення пам’яті Python і якщо модуль :"
"mod:`warnings` уже було імпортовано."

#: ../../whatsnew/3.6.rst:1736
msgid "winreg"
msgstr "winreg"

#: ../../whatsnew/3.6.rst:1738
msgid ""
"Added the 64-bit integer type :data:`REG_QWORD <winreg.REG_QWORD>`. "
"(Contributed by Clement Rouault in :issue:`23026`.)"
msgstr ""
"Додано 64-розрядний цілочисельний тип :data:`REG_QWORD <winreg.REG_QWORD>`. "
"(Надав Клемент Руо в :issue:`23026`.)"

#: ../../whatsnew/3.6.rst:1743
msgid "winsound"
msgstr "winsound"

#: ../../whatsnew/3.6.rst:1745
msgid ""
"Allowed keyword arguments to be passed to :func:`Beep <winsound.Beep>`, :"
"func:`MessageBeep <winsound.MessageBeep>`, and :func:`PlaySound <winsound."
"PlaySound>` (:issue:`27982`)."
msgstr ""
"Дозволені аргументи ключових слів для :func:`Beep <winsound.Beep>`, :func:"
"`MessageBeep <winsound.MessageBeep>` і :func:`PlaySound <winsound."
"PlaySound>` (:issue:`27982`)."

#: ../../whatsnew/3.6.rst:1751
msgid "xmlrpc.client"
msgstr "xmlrpc.client"

#: ../../whatsnew/3.6.rst:1753
msgid ""
"The :mod:`xmlrpc.client` module now supports unmarshalling additional data "
"types used by the Apache XML-RPC implementation for numerics and ``None``. "
"(Contributed by Serhiy Storchaka in :issue:`26885`.)"
msgstr ""
"Модуль :mod:`xmlrpc.client` тепер підтримує демаршалінг додаткових типів "
"даних, які використовуються реалізацією Apache XML-RPC для чисел і ``None``. "
"(Надав Сергій Сторчака в :issue:`26885`.)"

#: ../../whatsnew/3.6.rst:1760
msgid "zipfile"
msgstr "zipfile"

#: ../../whatsnew/3.6.rst:1762
msgid ""
"A new :meth:`ZipInfo.from_file() <zipfile.ZipInfo.from_file>` class method "
"allows making a :class:`~zipfile.ZipInfo` instance from a filesystem file. A "
"new :meth:`ZipInfo.is_dir() <zipfile.ZipInfo.is_dir>` method can be used to "
"check if the :class:`~zipfile.ZipInfo` instance represents a directory. "
"(Contributed by Thomas Kluyver in :issue:`26039`.)"
msgstr ""
"Новий метод класу :meth:`ZipInfo.from_file() <zipfile.ZipInfo.from_file>` "
"дозволяє створити екземпляр :class:`~zipfile.ZipInfo` з файлу файлової "
"системи. Новий метод :meth:`ZipInfo.is_dir() <zipfile.ZipInfo.is_dir>` можна "
"використовувати, щоб перевірити, чи екземпляр :class:`~zipfile.ZipInfo` "
"представляє каталог. (Надав Томас Клюйвер у :issue:`26039`.)"

#: ../../whatsnew/3.6.rst:1768
msgid ""
"The :meth:`ZipFile.open() <zipfile.ZipFile.open>` method can now be used to "
"write data into a ZIP file, as well as for extracting data. (Contributed by "
"Thomas Kluyver in :issue:`26039`.)"
msgstr ""
"Метод :meth:`ZipFile.open() <zipfile.ZipFile.open>` тепер можна "
"використовувати для запису даних у файл ZIP, а також для вилучення даних. "
"(Надав Томас Клюйвер у :issue:`26039`.)"

#: ../../whatsnew/3.6.rst:1774
msgid "zlib"
msgstr "zlib"

#: ../../whatsnew/3.6.rst:1776
msgid ""
"The :func:`~zlib.compress` and :func:`~zlib.decompress` functions now accept "
"keyword arguments. (Contributed by Aviv Palivoda in :issue:`26243` and Xiang "
"Zhang in :issue:`16764` respectively.)"
msgstr ""
"Функції :func:`~zlib.compress` і :func:`~zlib.decompress` тепер приймають "
"ключові аргументи. (Надано Aviv Palivoda у :issue:`26243` та Xiang Zhang у :"
"issue:`16764` відповідно.)"

#: ../../whatsnew/3.6.rst:1783
msgid "Optimizations"
msgstr "Otimizações"

#: ../../whatsnew/3.6.rst:1785
msgid ""
"The Python interpreter now uses a 16-bit wordcode instead of bytecode which "
"made a number of opcode optimizations possible. (Contributed by Demur Rumed "
"with input and reviews from Serhiy Storchaka and Victor Stinner in :issue:"
"`26647` and :issue:`28050`.)"
msgstr ""
"Інтерпретатор Python тепер використовує 16-бітний словесний код замість байт-"
"коду, що зробило можливим ряд оптимізацій коду операції. (Надано Демуром "
"Румедом із коментарями та рецензіями Сергія Сторчака та Віктора Стіннера в :"
"issue:`26647` та :issue:`28050`.)"

#: ../../whatsnew/3.6.rst:1790
msgid ""
"The :class:`asyncio.Future` class now has an optimized C implementation. "
"(Contributed by Yury Selivanov and INADA Naoki in :issue:`26081`.)"
msgstr ""
"Клас :class:`asyncio.Future` тепер має оптимізовану реалізацію C. (Надано "
"Юрієм Селівановим та INADA Naoki у :issue:`26081`.)"

#: ../../whatsnew/3.6.rst:1793
msgid ""
"The :class:`asyncio.Task` class now has an optimized C implementation. "
"(Contributed by Yury Selivanov in :issue:`28544`.)"
msgstr ""
"Клас :class:`asyncio.Task` тепер має оптимізовану реалізацію C. (Надав Юрій "
"Селіванов у :issue:`28544`.)"

#: ../../whatsnew/3.6.rst:1796
msgid ""
"Various implementation improvements in the :mod:`typing` module (such as "
"caching of generic types) allow up to 30 times performance improvements and "
"reduced memory footprint."
msgstr ""
"Різні вдосконалення реалізації в модулі :mod:`typing` (такі як кешування "
"загальних типів) дозволяють до 30 разів підвищити продуктивність і зменшити "
"обсяг пам’яті."

#: ../../whatsnew/3.6.rst:1800
msgid ""
"The ASCII decoder is now up to 60 times as fast for error handlers "
"``surrogateescape``, ``ignore`` and ``replace`` (Contributed by Victor "
"Stinner in :issue:`24870`)."
msgstr ""
"Декодер ASCII тепер у 60 разів швидший для обробників помилок "
"``surrogateescape``, ``ignore`` і ``replace`` (надано Віктором Стіннером у :"
"issue:`24870`)."

#: ../../whatsnew/3.6.rst:1804
msgid ""
"The ASCII and the Latin1 encoders are now up to 3 times as fast for the "
"error handler ``surrogateescape`` (Contributed by Victor Stinner in :issue:"
"`25227`)."
msgstr ""
"Кодери ASCII і Latin1 тепер у 3 рази швидші для обробника помилок "
"``surrogateescape`` (надано Віктором Стіннером у :issue:`25227`)."

#: ../../whatsnew/3.6.rst:1808
msgid ""
"The UTF-8 encoder is now up to 75 times as fast for error handlers "
"``ignore``, ``replace``, ``surrogateescape``, ``surrogatepass`` (Contributed "
"by Victor Stinner in :issue:`25267`)."
msgstr ""
"Кодер UTF-8 тепер у 75 разів швидший для обробників помилок ``ignore``, "
"``replace``, ``surrogateescape``, ``surrogatepass`` (Надано Віктором "
"Стіннером у :issue:`25267`)."

#: ../../whatsnew/3.6.rst:1812
msgid ""
"The UTF-8 decoder is now up to 15 times as fast for error handlers "
"``ignore``, ``replace`` and ``surrogateescape`` (Contributed by Victor "
"Stinner in :issue:`25301`)."
msgstr ""
"Декодер UTF-8 тепер у 15 разів швидший для обробників помилок ``ignore``, "
"``replace`` і ``surrogateescape`` (надано Віктором Стіннером у :issue:"
"`25301`)."

#: ../../whatsnew/3.6.rst:1816
msgid ""
"``bytes % args`` is now up to 2 times faster. (Contributed by Victor Stinner "
"in :issue:`25349`)."
msgstr ""
"``bytes % args`` тепер у 2 рази швидше. (Надав Віктор Стіннер у :issue:"
"`25349`)."

#: ../../whatsnew/3.6.rst:1819
msgid ""
"``bytearray % args`` is now between 2.5 and 5 times faster. (Contributed by "
"Victor Stinner in :issue:`25399`)."
msgstr ""
"``bytearray % args`` тепер у 2,5-5 разів швидше. (Надав Віктор Стіннер у :"
"issue:`25399`)."

#: ../../whatsnew/3.6.rst:1822
msgid ""
"Optimize :meth:`bytes.fromhex` and :meth:`bytearray.fromhex`: they are now "
"between 2x and 3.5x faster. (Contributed by Victor Stinner in :issue:"
"`25401`)."
msgstr ""
"Оптимізуйте :meth:`bytes.fromhex` і :meth:`bytearray.fromhex`: тепер вони "
"працюють у 2-3,5 рази швидше. (Надав Віктор Стіннер у :issue:`25401`)."

#: ../../whatsnew/3.6.rst:1825
msgid ""
"Optimize ``bytes.replace(b'', b'.')`` and ``bytearray.replace(b'', b'.')``: "
"up to 80% faster. (Contributed by Josh Snider in :issue:`26574`)."
msgstr ""
"Оптимізуйте ``bytes.replace(b'', b'.')`` і ``bytearray.replace(b'', b'.')``: "
"до 80% швидше. (Надав Джош Снайдер у :issue:`26574`)."

#: ../../whatsnew/3.6.rst:1828
msgid ""
"Allocator functions of the :c:func:`PyMem_Malloc` domain (:c:macro:"
"`PYMEM_DOMAIN_MEM`) now use the :ref:`pymalloc memory allocator <pymalloc>` "
"instead of :c:func:`malloc` function of the C library. The pymalloc "
"allocator is optimized for objects smaller or equal to 512 bytes with a "
"short lifetime, and use :c:func:`malloc` for larger memory blocks. "
"(Contributed by Victor Stinner in :issue:`26249`)."
msgstr ""
"Функции распределителя домена :c:func:`PyMem_Malloc` (:c:macro:"
"`PYMEM_DOMAIN_MEM`) теперь используют :ref:`pymalloc распределитель памяти "
"<pymalloc>` вместо функции :c:func:`malloc` функции библиотека С. "
"Распределитель pymalloc оптимизирован для объектов размером меньше или "
"равным 512 байтам с коротким временем жизни и использует :c:func:`malloc` "
"для блоков памяти большего размера. (Предоставлено Виктором Стиннером в :"
"issue:`26249`)."

#: ../../whatsnew/3.6.rst:1835
msgid ""
":func:`pickle.load` and :func:`pickle.loads` are now up to 10% faster when "
"deserializing many small objects (Contributed by Victor Stinner in :issue:"
"`27056`)."
msgstr ""
":func:`pickle.load` і :func:`pickle.loads` тепер на 10% швидше під час "
"десеріалізації багатьох малих об’єктів (надано Віктором Стіннером у :issue:"
"`27056`)."

#: ../../whatsnew/3.6.rst:1839
msgid ""
"Passing :term:`keyword arguments <keyword argument>` to a function has an "
"overhead in comparison with passing :term:`positional arguments <positional "
"argument>`.  Now in extension functions implemented with using Argument "
"Clinic this overhead is significantly decreased. (Contributed by Serhiy "
"Storchaka in :issue:`27574`)."
msgstr ""
"Передача :term:`аргументів ключового слова <keyword argument>` до функції "
"має додаткові витрати порівняно з передачею :term:`позиційних аргументів "
"<positional argument>`. Тепер у функціях розширення, реалізованих за "
"допомогою Argument Clinic, ці накладні витрати значно зменшені. (Надав "
"Сергій Сторчака в :issue:`27574`)."

#: ../../whatsnew/3.6.rst:1845
msgid ""
"Optimized :func:`~glob.glob` and :func:`~glob.iglob` functions in the :mod:"
"`glob` module; they are now about 3--6 times faster. (Contributed by Serhiy "
"Storchaka in :issue:`25596`)."
msgstr ""
"Оптимізовано функції :func:`~glob.glob` і :func:`~glob.iglob` в модулі :mod:"
"`glob`; тепер вони приблизно в 3-6 разів швидші. (Надав Сергій Сторчака в :"
"issue:`25596`)."

#: ../../whatsnew/3.6.rst:1849
msgid ""
"Optimized globbing in :mod:`pathlib` by using :func:`os.scandir`; it is now "
"about 1.5--4 times faster. (Contributed by Serhiy Storchaka in :issue:"
"`26032`)."
msgstr ""
"Оптимізовано глобінг у :mod:`pathlib` за допомогою :func:`os.scandir`; зараз "
"це приблизно в 1,5-4 рази швидше. (Надав Сергій Сторчака в :issue:`26032`)."

#: ../../whatsnew/3.6.rst:1853
msgid ""
":class:`xml.etree.ElementTree` parsing, iteration and deepcopy performance "
"has been significantly improved. (Contributed by Serhiy Storchaka in :issue:"
"`25638`, :issue:`25873`, and :issue:`25869`.)"
msgstr ""
":class:`xml.etree.ElementTree` продуктивність аналізу, ітерації та глибокого "
"копіювання була значно покращена. (Надав Сергій Сторчака в :issue:`25638`, :"
"issue:`25873` та :issue:`25869`.)"

#: ../../whatsnew/3.6.rst:1858
msgid ""
"Creation of :class:`fractions.Fraction` instances from floats and decimals "
"is now 2 to 3 times faster. (Contributed by Serhiy Storchaka in :issue:"
"`25971`.)"
msgstr ""
"Створення екземплярів :class:`fractions.Fraction` із числами з плаваючою "
"точкою та десятковими числами тепер у 2-3 рази швидше. (Надав Сергій "
"Сторчака в :issue:`25971`.)"

#: ../../whatsnew/3.6.rst:1864
msgid "Build and C API Changes"
msgstr "Mudanças a construções e API C"

#: ../../whatsnew/3.6.rst:1866
msgid ""
"Python now requires some C99 support in the toolchain to build. Most "
"notably, Python now uses standard integer types and macros in place of "
"custom macros like ``PY_LONG_LONG``. For more information, see :pep:`7` and :"
"issue:`17884`."
msgstr ""
"Для створення Python тепер потрібна певна підтримка C99 у ланцюжку "
"інструментів. Зокрема, Python тепер використовує стандартні цілі типи та "
"макроси замість спеціальних макросів, таких як ``PY_LONG_LONG``. Для "
"отримання додаткової інформації перегляньте :pep:`7` і :issue:`17884`."

#: ../../whatsnew/3.6.rst:1871
msgid ""
"Cross-compiling CPython with the Android NDK and the Android API level set "
"to 21 (Android 5.0 Lollipop) or greater runs successfully. While Android is "
"not yet a supported platform, the Python test suite runs on the Android "
"emulator with only about 16 tests failures. See the Android meta-issue :"
"issue:`26865`."
msgstr ""
"Перехресна компіляція CPython із Android NDK і Android API на рівні 21 "
"(Android 5.0 Lollipop) або новіша працює успішно. Хоча Android ще не "
"підтримується платформою, набір тестів Python працює на емуляторі Android "
"лише з приблизно 16 помилками тестів. Перегляньте метапроблему Android :"
"issue:`26865`."

#: ../../whatsnew/3.6.rst:1876
msgid ""
"The ``--enable-optimizations`` configure flag has been added. Turning it on "
"will activate expensive optimizations like PGO. (Original patch by "
"Alecsandru Patrascu of Intel in :issue:`26359`.)"
msgstr ""
"Додано прапор конфігурації ``--enable-optimizations``. Його ввімкнення "
"активує дорогі оптимізації, такі як PGO. (Оригінальний патч від Alecsandru "
"Patrascu з Intel у :issue:`26359`.)"

#: ../../whatsnew/3.6.rst:1880
msgid ""
"The :term:`GIL <global interpreter lock>` must now be held when allocator "
"functions of :c:macro:`PYMEM_DOMAIN_OBJ` (ex: :c:func:`PyObject_Malloc`) "
"and :c:macro:`PYMEM_DOMAIN_MEM` (ex: :c:func:`PyMem_Malloc`) domains are "
"called."
msgstr ""
":term:`GIL <глобальная блокировка интерпретатора>` теперь должна "
"удерживаться, когда функции распределения :c:macro:`PYMEM_DOMAIN_OBJ` "
"(например: :c:func:` PyObj ect_Malloc`) и :c:macro:`PYMEM_DOMAIN_MEM` "
"(например: :c:func:`PyMem_Malloc`) вызываются домены."

#: ../../whatsnew/3.6.rst:1884
msgid ""
"New :c:func:`Py_FinalizeEx` API which indicates if flushing buffered data "
"failed. (Contributed by Martin Panter in :issue:`5319`.)"
msgstr ""
"Новий :c:func:`Py_FinalizeEx` API, який вказує на помилку очищення "
"буферизованих даних. (Надав Мартін Пантер у :issue:`5319`.)"

#: ../../whatsnew/3.6.rst:1888
msgid ""
":c:func:`PyArg_ParseTupleAndKeywords` now supports :ref:`positional-only "
"parameters <positional-only_parameter>`.  Positional-only parameters are "
"defined by empty names. (Contributed by Serhiy Storchaka in :issue:`26282`)."
msgstr ""
":c:func:`PyArg_ParseTupleAndKeywords` тепер підтримує :ref:`позиційні "
"параметри <positional-only_parameter>`. Лише позиційні параметри "
"визначаються порожніми іменами. (Надав Сергій Сторчака в :issue:`26282`)."

#: ../../whatsnew/3.6.rst:1893
msgid ""
"``PyTraceback_Print`` method now abbreviates long sequences of repeated "
"lines as ``\"[Previous line repeated {count} more times]\"``. (Contributed "
"by Emanuel Barry in :issue:`26823`.)"
msgstr ""
"Метод ``PyTraceback_Print`` тепер скорочує довгі послідовності повторюваних "
"рядків як ``\"[Попередній рядок повторюється {count} більше разів]\"``. "
"(Надав Емануель Баррі в :issue:`26823`.)"

#: ../../whatsnew/3.6.rst:1897
msgid ""
"The new :c:func:`PyErr_SetImportErrorSubclass` function allows for "
"specifying a subclass of :exc:`ImportError` to raise. (Contributed by Eric "
"Snow in :issue:`15767`.)"
msgstr ""
"Нова функція :c:func:`PyErr_SetImportErrorSubclass` дозволяє вказати "
"підклас :exc:`ImportError` для підвищення. (Надав Ерік Сноу в :issue:"
"`15767`.)"

#: ../../whatsnew/3.6.rst:1901
msgid ""
"The new :c:func:`PyErr_ResourceWarning` function can be used to generate a :"
"exc:`ResourceWarning` providing the source of the resource allocation. "
"(Contributed by Victor Stinner in :issue:`26567`.)"
msgstr ""
"Нову функцію :c:func:`PyErr_ResourceWarning` можна використовувати для "
"генерації :exc:`ResourceWarning`, яка вказує джерело розподілу ресурсу. "
"(Надав Віктор Стіннер у :issue:`26567`.)"

#: ../../whatsnew/3.6.rst:1905
msgid ""
"The new :c:func:`PyOS_FSPath` function returns the file system "
"representation of a :term:`path-like object`. (Contributed by Brett Cannon "
"in :issue:`27186`.)"
msgstr ""
"Нова функція :c:func:`PyOS_FSPath` повертає представлення файлової системи :"
"term:`path-like object`. (Надав Бретт Кеннон у :issue:`27186`.)"

#: ../../whatsnew/3.6.rst:1909
msgid ""
"The :c:func:`PyUnicode_FSConverter` and :c:func:`PyUnicode_FSDecoder` "
"functions will now accept :term:`path-like objects <path-like object>`."
msgstr ""
"Функції :c:func:`PyUnicode_FSConverter` і :c:func:`PyUnicode_FSDecoder` "
"тепер прийматимуть :term:`шляхові об’єкти <path-like object>`."

#: ../../whatsnew/3.6.rst:1914
msgid "Other Improvements"
msgstr "Other Improvements"

#: ../../whatsnew/3.6.rst:1916
msgid ""
"When :option:`--version` (short form: :option:`-V`) is supplied twice, "
"Python prints :data:`sys.version` for detailed information."
msgstr ""
"Коли :option:`--version` (коротка форма: :option:`-V`) надається двічі, "
"Python друкує :data:`sys.version` для отримання детальної інформації."

#: ../../whatsnew/3.6.rst:1919
msgid ""
"$ ./python -VV\n"
"Python 3.6.0b4+ (3.6:223967b49e49+, Nov 21 2016, 20:55:04)\n"
"[GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)]"
msgstr ""
"$ ./python -VV\n"
"Python 3.6.0b4+ (3.6:223967b49e49+, Nov 21 2016, 20:55:04)\n"
"[GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)]"

#: ../../whatsnew/3.6.rst:1927
msgid "Deprecated"
msgstr "Descontinuados"

#: ../../whatsnew/3.6.rst:1930
msgid "New Keywords"
msgstr "Нові ключові слова"

#: ../../whatsnew/3.6.rst:1932
msgid ""
"``async`` and ``await`` are not recommended to be used as variable, class, "
"function or module names.  Introduced by :pep:`492` in Python 3.5, they will "
"become proper keywords in Python 3.7.  Starting in Python 3.6, the use of "
"``async`` or ``await`` as names will generate a :exc:`DeprecationWarning`."
msgstr ""
"``async`` і ``await`` не рекомендується використовувати як імена змінних, "
"класів, функцій або модулів. Представлені :pep:`492` у Python 3.5, вони "
"стануть правильними ключовими словами в Python 3.7. Починаючи з Python 3.6, "
"використання ``async`` або ``await`` як імен створюватиме :exc:"
"`DeprecationWarning`."

#: ../../whatsnew/3.6.rst:1939
msgid "Deprecated Python behavior"
msgstr "Застаріла поведінка Python"

#: ../../whatsnew/3.6.rst:1941
msgid ""
"Raising the :exc:`StopIteration` exception inside a generator will now "
"generate a :exc:`DeprecationWarning`, and will trigger a :exc:`RuntimeError` "
"in Python 3.7.  See :ref:`whatsnew-pep-479` for details."
msgstr ""
"Підвищення винятку :exc:`StopIteration` всередині генератора тепер створить :"
"exc:`DeprecationWarning` і викличе :exc:`RuntimeError` у Python 3.7. "
"Докладніше див. :ref:`whatsnew-pep-479`."

#: ../../whatsnew/3.6.rst:1945
msgid ""
"The :meth:`__aiter__` method is now expected to return an asynchronous "
"iterator directly instead of returning an awaitable as previously. Doing the "
"former will trigger a :exc:`DeprecationWarning`.  Backward compatibility "
"will be removed in Python 3.7. (Contributed by Yury Selivanov in :issue:"
"`27243`.)"
msgstr ""
"Тепер очікується, що метод :meth:`__aiter__` повертатиме безпосередньо "
"асинхронний ітератор замість того, щоб повертати awaitable, як раніше. "
"Виконання першого призведе до появи :exc:`DeprecationWarning`. У Python 3.7 "
"буде видалено зворотну сумісність. (Надав Юрій Селіванов у :issue:`27243`.)"

#: ../../whatsnew/3.6.rst:1951
msgid ""
"A backslash-character pair that is not a valid escape sequence now generates "
"a :exc:`DeprecationWarning`.  Although this will eventually become a :exc:"
"`SyntaxError`, that will not be for several Python releases. (Contributed by "
"Emanuel Barry in :issue:`27364`.)"
msgstr ""
"Пара символів зворотної похилої риски, яка не є дійсною керуючою "
"послідовністю, тепер генерує :exc:`DeprecationWarning`. Хоча це з часом "
"стане :exc:`SyntaxError`, це не буде для кількох випусків Python. (Надав "
"Емануель Баррі в :issue:`27364`.)"

#: ../../whatsnew/3.6.rst:1956
msgid ""
"When performing a relative import, falling back on ``__name__`` and "
"``__path__`` from the calling module when ``__spec__`` or ``__package__`` "
"are not defined now raises an :exc:`ImportWarning`. (Contributed by Rose "
"Ames in :issue:`25791`.)"
msgstr ""
"Під час виконання відносного імпорту повернення до ``__name__`` і "
"``__path__`` з викликаючого модуля, коли ``__spec__`` або ``__package__`` "
"тепер не визначено, викликає :exc:`ImportWarning`. (Надано Роуз Еймс у :"
"issue:`25791`.)"

#: ../../whatsnew/3.6.rst:1963
msgid "Deprecated Python modules, functions and methods"
msgstr "Застарілі модулі, функції та методи Python"

#: ../../whatsnew/3.6.rst:1966
msgid "asynchat"
msgstr "asynchat"

#: ../../whatsnew/3.6.rst:1968
msgid ""
"The :mod:`!asynchat` has been deprecated in favor of :mod:`asyncio`. "
"(Contributed by Mariatta in :issue:`25002`.)"
msgstr ""
":mod:`!asynchat` устарел в пользу :mod:`asyncio`. (Внесено Мариаттой в :"
"issue:`25002`.)"

#: ../../whatsnew/3.6.rst:1973
msgid "asyncore"
msgstr "asyncore"

#: ../../whatsnew/3.6.rst:1975
msgid ""
"The :mod:`!asyncore` has been deprecated in favor of :mod:`asyncio`. "
"(Contributed by Mariatta in :issue:`25002`.)"
msgstr ""
":mod:`!asyncore` устарел в пользу :mod:`asyncio`. (Внесено Мариаттой в :"
"issue:`25002`.)"

#: ../../whatsnew/3.6.rst:1980
msgid "dbm"
msgstr "dbm"

#: ../../whatsnew/3.6.rst:1982
msgid ""
"Unlike other :mod:`dbm` implementations, the :mod:`dbm.dumb` module creates "
"databases with the ``'rw'`` mode and allows modifying the database opened "
"with the ``'r'`` mode.  This behavior is now deprecated and will be removed "
"in 3.8. (Contributed by Serhiy Storchaka in :issue:`21708`.)"
msgstr ""
"На відміну від інших реалізацій :mod:`dbm`, модуль :mod:`dbm.dumb` створює "
"бази даних у режимі ``'rw'`` і дозволяє змінювати базу даних, відкриту в "
"режимі ``'r'``. Ця поведінка тепер застаріла та буде видалена у версії 3.8. "
"(Надав Сергій Сторчака в :issue:`21708`.)"

#: ../../whatsnew/3.6.rst:1992
msgid ""
"The undocumented ``extra_path`` argument to the ``distutils.Distribution`` "
"constructor is now considered deprecated and will raise a warning if set.   "
"Support for this parameter will be removed in a future Python release.  See :"
"issue:`27919` for details."
msgstr ""
"Недокументированный аргумент extra_path конструктора distutils.Distribution "
"теперь считается устаревшим и выдаст предупреждение, если он установлен. "
"Поддержка этого параметра будет удалена в будущем выпуске Python. "
"Подробности см. в :issue:`27919`."

#: ../../whatsnew/3.6.rst:1999
msgid "grp"
msgstr "grp"

#: ../../whatsnew/3.6.rst:2001
msgid ""
"The support of non-integer arguments in :func:`~grp.getgrgid` has been "
"deprecated. (Contributed by Serhiy Storchaka in :issue:`26129`.)"
msgstr ""
"Підтримка нецілочисельних аргументів у :func:`~grp.getgrgid` застаріла. "
"(Надав Сергій Сторчака в :issue:`26129`.)"

#: ../../whatsnew/3.6.rst:2009
msgid ""
"The :meth:`importlib.machinery.SourceFileLoader.load_module` and :meth:"
"`importlib.machinery.SourcelessFileLoader.load_module` methods are now "
"deprecated. They were the only remaining implementations of :meth:`importlib."
"abc.Loader.load_module` in :mod:`importlib` that had not been deprecated in "
"previous versions of Python in favour of :meth:`importlib.abc.Loader."
"exec_module`."
msgstr ""
"Методи :meth:`importlib.machinery.SourceFileLoader.load_module` і :meth:"
"`importlib.machinery.SourcelessFileLoader.load_module` тепер застаріли. Це "
"були єдині реалізації :meth:`importlib.abc.Loader.load_module` в :mod:"
"`importlib`, які не були застарілими в попередніх версіях Python на користь :"
"meth:`importlib.abc.Loader.exec_module`."

#: ../../whatsnew/3.6.rst:2016
msgid ""
"The :class:`importlib.machinery.WindowsRegistryFinder` class is now "
"deprecated. As of 3.6.0, it is still added to :data:`sys.meta_path` by "
"default (on Windows), but this may change in future releases."
msgstr ""
"Класс :class:`importlib.machinery.WindowsRegistryFinder` устарел. Начиная с "
"версии 3.6.0, он по-прежнему добавляется в :data:`sys.meta_path` по "
"умолчанию (в Windows), но это может измениться в будущих выпусках."

#: ../../whatsnew/3.6.rst:2023
msgid ""
"Undocumented support of general :term:`bytes-like objects <bytes-like "
"object>` as paths in :mod:`os` functions, :func:`compile` and similar "
"functions is now deprecated. (Contributed by Serhiy Storchaka in :issue:"
"`25791` and :issue:`26754`.)"
msgstr ""
"Недокументована підтримка загальних :term:`байт-подібних об’єктів <bytes-"
"like object>` як шляхів у функціях :mod:`os`, :func:`compile` та подібних "
"функціях тепер застаріла. (Надав Сергій Сторчака в :issue:`25791` та :issue:"
"`26754`.)"

#: ../../whatsnew/3.6.rst:2031
msgid ""
"Support for inline flags ``(?letters)`` in the middle of the regular "
"expression has been deprecated and will be removed in a future Python "
"version.  Flags at the start of a regular expression are still allowed. "
"(Contributed by Serhiy Storchaka in :issue:`22493`.)"
msgstr ""
"Підтримка вбудованих прапорців ``(?літери)`` в середині регулярного виразу "
"застаріла та буде видалена в майбутній версії Python. Прапорці на початку "
"регулярного виразу все ще дозволені. (Надав Сергій Сторчака в :issue:"
"`22493`.)"

#: ../../whatsnew/3.6.rst:2039
msgid ""
"OpenSSL 0.9.8, 1.0.0 and 1.0.1 are deprecated and no longer supported. In "
"the future the :mod:`ssl` module will require at least OpenSSL 1.0.2 or "
"1.1.0."
msgstr ""
"OpenSSL 0.9.8, 1.0.0 і 1.0.1 застаріли та більше не підтримуються. У "
"майбутньому модуль :mod:`ssl` вимагатиме принаймні OpenSSL 1.0.2 або 1.1.0."

#: ../../whatsnew/3.6.rst:2043
msgid ""
"SSL-related arguments like ``certfile``, ``keyfile`` and ``check_hostname`` "
"in :mod:`ftplib`, :mod:`http.client`, :mod:`imaplib`, :mod:`poplib`, and :"
"mod:`smtplib` have been deprecated in favor of ``context``. (Contributed by "
"Christian Heimes in :issue:`28022`.)"
msgstr ""
"Аргументи, пов’язані з SSL, як-от ``certfile``, ``keyfile`` і "
"``check_hostname`` у :mod:`ftplib`, :mod:`http.client`, :mod:`imaplib`, :mod:"
"`poplib` і :mod:`smtplib` застаріли на користь ``context``. (Надав Крістіан "
"Хеймс у :issue:`28022`.)"

#: ../../whatsnew/3.6.rst:2048
msgid ""
"A couple of protocols and functions of the :mod:`ssl` module are now "
"deprecated. Some features will no longer be available in future versions of "
"OpenSSL. Other features are deprecated in favor of a different API. "
"(Contributed by Christian Heimes in :issue:`28022` and :issue:`26470`.)"
msgstr ""
"Кілька протоколів і функцій модуля :mod:`ssl` тепер застаріли. Деякі функції "
"більше не будуть доступні в майбутніх версіях OpenSSL. Інші функції "
"застаріли на користь іншого API. (Надано Крістіаном Хеймсом у :issue:`28022` "
"та :issue:`26470`.)"

#: ../../whatsnew/3.6.rst:2056
msgid ""
"The :mod:`tkinter.tix` module is now deprecated.  :mod:`tkinter` users "
"should use :mod:`tkinter.ttk` instead."
msgstr ""

#: ../../whatsnew/3.6.rst:2064
msgid ""
"The ``pyvenv`` script has been deprecated in favour of ``python3 -m venv``. "
"This prevents confusion as to what Python interpreter ``pyvenv`` is "
"connected to and thus what Python interpreter will be used by the virtual "
"environment.  (Contributed by Brett Cannon in :issue:`25154`.)"
msgstr ""
"Сценарій ``pyvenv`` застарів на користь ``python3 -m venv``. Це запобігає "
"плутанині щодо того, до якого інтерпретатора Python підключено ``pyvenv`` і, "
"таким чином, який інтерпретатор Python використовуватиме віртуальне "
"середовище. (Надано Бреттом Кенноном у :issue:`25154`.)"

#: ../../whatsnew/3.6.rst:2071
msgid "xml"
msgstr "xml"

#: ../../whatsnew/3.6.rst:2073
msgid ""
"As mitigation against DTD and external entity retrieval, the :mod:`xml.dom."
"minidom` and :mod:`xml.sax` modules no longer process external entities by "
"default. (Contributed by Christian Heimes in :gh:`61441`.)"
msgstr ""
"В целях защиты от DTD и извлечения внешних объектов модули :mod:`xml.dom."
"minidom` и :mod:`xml.sax` больше не обрабатывают внешние объекты по "
"умолчанию. (Предоставлено Кристианом Хаймсом в :gh:`61441`.)"

#: ../../whatsnew/3.6.rst:2080
msgid "Deprecated functions and types of the C API"
msgstr "Застарілі функції та типи C API"

#: ../../whatsnew/3.6.rst:2082
msgid ""
"Undocumented functions :c:func:`!PyUnicode_AsEncodedObject`, :c:func:`!"
"PyUnicode_AsDecodedObject`, :c:func:`!PyUnicode_AsEncodedUnicode` and :c:"
"func:`!PyUnicode_AsDecodedUnicode` are deprecated now. Use the :ref:`generic "
"codec based API <codec-registry>` instead."
msgstr ""
"Недокументированные функции :c:func:`!PyUnicode_AsEncodedObject`, :c:func:`!"
"PyUnicode_AsDecodedObject`, :c:func:`!PyUnicode_AsEncodedUnicode` и :c:func:"
"`!PyUnicode_AsDecodedUnicode` теперь устарели. Вместо этого используйте :ref:"
"`универсальный API на основе кодека <codec-registry>`."

#: ../../whatsnew/3.6.rst:2089
msgid "Deprecated Build Options"
msgstr "Застарілі параметри збірки"

#: ../../whatsnew/3.6.rst:2091
msgid ""
"The ``--with-system-ffi`` configure flag is now on by default on non-macOS "
"UNIX platforms.  It may be disabled by using ``--without-system-ffi``, but "
"using the flag is deprecated and will not be accepted in Python 3.7. macOS "
"is unaffected by this change.  Note that many OS distributors already use "
"the ``--with-system-ffi`` flag when building their system Python."
msgstr ""
"Прапор конфігурації ``--with-system-ffi`` тепер увімкнено за замовчуванням "
"на платформах UNIX, відмінних від macOS. Його можна вимкнути за допомогою "
"``--without-system-ffi``, але використання прапора є застарілим і не буде "
"прийматися в Python 3.7. Ця зміна не впливає на macOS. Зауважте, що багато "
"розповсюджувачів ОС уже використовують прапорець ``--with-system-ffi`` під "
"час створення своєї системи Python."

#: ../../whatsnew/3.6.rst:2099
msgid "Removed"
msgstr "Removidos"

#: ../../whatsnew/3.6.rst:2102
msgid "API and Feature Removals"
msgstr "Remoção de APIs e recursos"

#: ../../whatsnew/3.6.rst:2104
msgid ""
"Unknown escapes consisting of ``'\\'`` and an ASCII letter in regular "
"expressions will now cause an error.  In replacement templates for :func:`re."
"sub` they are still allowed, but deprecated. The :const:`re.LOCALE` flag can "
"now only be used with binary patterns."
msgstr ""
"Невідомі вихідні коди, що складаються з ``'\\'`` і літери ASCII у регулярних "
"виразах, тепер спричинятимуть помилку. У шаблонах заміни для :func:`re.sub` "
"вони все ще дозволені, але не рекомендовані. Прапор :const:`re.LOCALE` тепер "
"можна використовувати лише з бінарними шаблонами."

#: ../../whatsnew/3.6.rst:2109
msgid ""
"``inspect.getmoduleinfo()`` was removed (was deprecated since CPython 3.3). :"
"func:`inspect.getmodulename` should be used for obtaining the module name "
"for a given path. (Contributed by Yury Selivanov in :issue:`13248`.)"
msgstr ""
"``inspect.getmoduleinfo()`` було видалено (було застарілим з CPython 3.3). :"
"func:`inspect.getmodulename` слід використовувати для отримання імені модуля "
"для заданого шляху. (Надав Юрій Селіванов у :issue:`13248`.)"

#: ../../whatsnew/3.6.rst:2114
msgid ""
"``traceback.Ignore`` class and ``traceback.usage``, ``traceback.modname``, "
"``traceback.fullmodname``, ``traceback.find_lines_from_code``, ``traceback."
"find_lines``, ``traceback.find_strings``, ``traceback."
"find_executable_lines`` methods were removed from the :mod:`traceback` "
"module. They were undocumented methods deprecated since Python 3.2 and "
"equivalent functionality is available from private methods."
msgstr ""
"Клас ``traceback.Ignore`` і ``traceback.usage``, ``traceback.modname``, "
"``traceback.fullmodname``, ``traceback.find_lines_from_code``, ``traceback."
"find_lines``, Методи ``traceback.find_strings``, ``traceback."
"find_executable_lines`` видалено з модуля :mod:`traceback`. Це були "
"недокументовані методи, які застаріли з Python 3.2, і еквівалентна "
"функціональність доступна з приватних методів."

#: ../../whatsnew/3.6.rst:2121
msgid ""
"The ``tk_menuBar()`` and ``tk_bindForTraversal()`` dummy methods in :mod:"
"`tkinter` widget classes were removed (corresponding Tk commands were "
"obsolete since Tk 4.0)."
msgstr ""
"Фіктивні методи ``tk_menuBar()`` і ``tk_bindForTraversal()`` у класах "
"віджетів :mod:`tkinter` були видалені (відповідні команди Tk застаріли з Tk "
"4.0)."

#: ../../whatsnew/3.6.rst:2125
msgid ""
"The :meth:`~zipfile.ZipFile.open` method of the :class:`zipfile.ZipFile` "
"class no longer supports the ``'U'`` mode (was deprecated since Python 3.4). "
"Use :class:`io.TextIOWrapper` for reading compressed text files in :term:"
"`universal newlines` mode."
msgstr ""
"Метод :meth:`~zipfile.ZipFile.open` класу :class:`zipfile.ZipFile` більше не "
"підтримує режим ``'U'`` (був застарілим з Python 3.4). Використовуйте :class:"
"`io.TextIOWrapper` для читання стиснених текстових файлів у режимі :term:"
"`universal newlines`."

#: ../../whatsnew/3.6.rst:2130
msgid ""
"The undocumented ``IN``, ``CDROM``, ``DLFCN``, ``TYPES``, ``CDIO``, and "
"``STROPTS`` modules have been removed.  They had been available in the "
"platform specific ``Lib/plat-*/`` directories, but were chronically out of "
"date, inconsistently available across platforms, and unmaintained.  The "
"script that created these modules is still available in the source "
"distribution at `Tools/scripts/h2py.py <https://github.com/python/cpython/"
"blob/v3.6.15/Tools/scripts/h2py.py>`_."
msgstr ""
"Недокументированные модули IN, CDROM, DLFCN, TYPES, CDIO и STROPTS были "
"удалены. Они были доступны в каталогах ``Lib/plat-*/``, специфичных для "
"платформы, но были хронически устаревшими, нестабильно доступны на разных "
"платформах и не поддерживались. Скрипт, создавший эти модули, по-прежнему "
"доступен в исходном дистрибутиве по адресу `Tools/scripts/h2py.py <https://"
"github.com/python/cpython/blob/v3.6.15/Tools/scripts/h2py.py>` _."

#: ../../whatsnew/3.6.rst:2138
msgid "The deprecated ``asynchat.fifo`` class has been removed."
msgstr "Застарілий клас ``asynchat.fifo`` було видалено."

#: ../../whatsnew/3.6.rst:2142
msgid "Porting to Python 3.6"
msgstr "Перенесення на Python 3.6"

#: ../../whatsnew/3.6.rst:2144
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"Esta seção lista as alterações descritas anteriormente e outras correções "
"que podem exigir alterações no seu código."

#: ../../whatsnew/3.6.rst:2148
msgid "Changes in 'python' Command Behavior"
msgstr "Changes in 'python' Command Behavior"

#: ../../whatsnew/3.6.rst:2150
msgid ""
"The output of a special Python build with defined ``COUNT_ALLOCS``, "
"``SHOW_ALLOC_COUNT`` or ``SHOW_TRACK_COUNT`` macros is now off by default.  "
"It can be re-enabled using the ``-X showalloccount`` option. It now outputs "
"to ``stderr`` instead of ``stdout``. (Contributed by Serhiy Storchaka in :"
"issue:`23034`.)"
msgstr ""
"Вихід спеціальної збірки Python із визначеними макросами ``COUNT_ALLOCS``, "
"``SHOW_ALLOC_COUNT`` або ``SHOW_TRACK_COUNT`` тепер вимкнено за "
"замовчуванням. Його можна повторно ввімкнути за допомогою параметра ``-X "
"showalloccount``. Тепер він виводить на ``stderr`` замість ``stdout``. "
"(Надав Сергій Сторчака в :issue:`23034`.)"

#: ../../whatsnew/3.6.rst:2158
msgid "Changes in the Python API"
msgstr "Alterações na API Python"

#: ../../whatsnew/3.6.rst:2160
msgid ""
":func:`open() <open>` will no longer allow combining the ``'U'`` mode flag "
"with ``'+'``. (Contributed by Jeff Balogh and John O'Connor in :issue:"
"`2091`.)"
msgstr ""
":func:`open() <open>` більше не дозволить комбінувати прапор режиму ``'U'`` "
"з ``'+'``. (Надано Джеффом Балогом і Джоном О'Коннором у :issue:`2091`.)"

#: ../../whatsnew/3.6.rst:2164
msgid ""
":mod:`sqlite3` no longer implicitly commits an open transaction before DDL "
"statements."
msgstr ""
":mod:`sqlite3` більше не явно фіксує відкриту транзакцію перед операторами "
"DDL."

#: ../../whatsnew/3.6.rst:2167
msgid ""
"On Linux, :func:`os.urandom` now blocks until the system urandom entropy "
"pool is initialized to increase the security."
msgstr ""
"У Linux :func:`os.urandom` тепер блокується, доки системний пул ентропії не "
"буде ініціалізовано для підвищення безпеки."

#: ../../whatsnew/3.6.rst:2170
msgid ""
"When :meth:`importlib.abc.Loader.exec_module` is defined, :meth:`importlib."
"abc.Loader.create_module` must also be defined."
msgstr ""
"Коли визначено :meth:`importlib.abc.Loader.exec_module`, :meth:`importlib."
"abc.Loader.create_module` також має бути визначено."

#: ../../whatsnew/3.6.rst:2173
msgid ""
":c:func:`PyErr_SetImportError` now sets :exc:`TypeError` when its **msg** "
"argument is not set. Previously only ``NULL`` was returned."
msgstr ""
":c:func:`PyErr_SetImportError` тепер встановлює :exc:`TypeError`, коли його "
"аргумент **msg** не встановлено. Раніше повертався лише ``NULL``."

#: ../../whatsnew/3.6.rst:2176
msgid ""
"The format of the :attr:`~codeobject.co_lnotab` attribute of code objects "
"changed to support a negative line number delta. By default, Python does not "
"emit bytecode with a negative line number delta. Functions using :attr:"
"`frame.f_lineno`, ``PyFrame_GetLineNumber()`` or ``PyCode_Addr2Line()`` are "
"not affected. Functions directly decoding :attr:`!co_lnotab` should be "
"updated to use a signed 8-bit integer type for the line number delta, but "
"this is only required to support applications using a negative line number "
"delta. See ``Objects/lnotab_notes.txt`` for the :attr:`!co_lnotab` format "
"and how to decode it, and see the :pep:`511` for the rationale."
msgstr ""
"Формат атрибута :attr:`~codeobject.co_lnotab` объектов кода изменен для "
"поддержки отрицательной дельты номера строки. По умолчанию Python не "
"генерирует байт-код с отрицательной дельтой номера строки. Функции, "
"использующие :attr:`frame.f_lineno`, ``PyFrame_GetLineNumber()`` или "
"``PyCode_Addr2Line()``, не затрагиваются. Функции, непосредственно "
"декодирующие :attr:`!co_lnotab`, должны быть обновлены, чтобы использовать 8-"
"битный целочисленный тип со знаком для дельты номера строки, но это "
"требуется только для поддержки приложений, использующих отрицательную дельту "
"номера строки. См. ``Objects/lnotab_notes.txt`` для формата :attr:`!"
"co_lnotab` и того, как его декодировать, а также см. :pep:`511` для "
"обоснования."

#: ../../whatsnew/3.6.rst:2187
msgid ""
"The functions in the :mod:`compileall` module now return booleans instead of "
"``1`` or ``0`` to represent success or failure, respectively. Thanks to "
"booleans being a subclass of integers, this should only be an issue if you "
"were doing identity checks for ``1`` or ``0``. See :issue:`25768`."
msgstr ""
"Функції в модулі :mod:`compileall` тепер повертають логічні значення замість "
"``1`` або ``0``, щоб показати успіх або невдачу, відповідно. Завдяки тому, "
"що булеві значення є підкласом цілих чисел, це має бути проблемою, лише якщо "
"ви проводили перевірку ідентичності для ``1`` або ``0``. Див. :issue:`25768`."

#: ../../whatsnew/3.6.rst:2192
msgid ""
"Reading the :attr:`~urllib.parse.SplitResult.port` attribute of :func:"
"`urllib.parse.urlsplit` and :func:`~urllib.parse.urlparse` results now "
"raises :exc:`ValueError` for out-of-range values, rather than returning :"
"const:`None`.  See :issue:`20059`."
msgstr ""
"Читання атрибута :attr:`~urllib.parse.SplitResult.port` результатів :func:"
"`urllib.parse.urlsplit` і :func:`~urllib.parse.urlparse` тепер викликає :exc:"
"`ValueError` для виходу -of-range значення замість повернення :const:`None`. "
"Див. :issue:`20059`."

#: ../../whatsnew/3.6.rst:2197
msgid ""
"The :mod:`!imp` module now raises a :exc:`DeprecationWarning` instead of :"
"exc:`PendingDeprecationWarning`."
msgstr ""
"Модуль :mod:`!imp` теперь вызывает :exc:`DeprecationWarning` вместо :exc:"
"`PendingDeprecationWarning`."

#: ../../whatsnew/3.6.rst:2200
msgid ""
"The following modules have had missing APIs added to their :attr:`__all__` "
"attributes to match the documented APIs: :mod:`calendar`, :mod:`cgi`, :mod:"
"`csv`, :mod:`~xml.etree.ElementTree`, :mod:`enum`, :mod:`fileinput`, :mod:"
"`ftplib`, :mod:`logging`, :mod:`mailbox`, :mod:`mimetypes`, :mod:"
"`optparse`, :mod:`plistlib`, :mod:`!smtpd`, :mod:`subprocess`, :mod:"
"`tarfile`, :mod:`threading` and :mod:`wave`.  This means they will export "
"new symbols when ``import *`` is used. (Contributed by Joel Taddei and Jacek "
"Kołodziej in :issue:`23883`.)"
msgstr ""

#: ../../whatsnew/3.6.rst:2211
msgid ""
"When performing a relative import, if ``__package__`` does not compare equal "
"to ``__spec__.parent`` then :exc:`ImportWarning` is raised. (Contributed by "
"Brett Cannon in :issue:`25791`.)"
msgstr ""
"Під час виконання відносного імпорту, якщо ``__package__`` не порівнюється з "
"``__spec__.parent``, тоді виникає :exc:`ImportWarning`. (Надано Бреттом "
"Кенноном у :issue:`25791`.)"

#: ../../whatsnew/3.6.rst:2215
msgid ""
"When a relative import is performed and no parent package is known, then :"
"exc:`ImportError` will be raised. Previously, :exc:`SystemError` could be "
"raised. (Contributed by Brett Cannon in :issue:`18018`.)"
msgstr ""
"Коли виконується відносний імпорт і батьківський пакет не відомий, буде "
"викликано :exc:`ImportError`. Раніше могла виникати :exc:`SystemError`. "
"(Надав Бретт Кеннон у :issue:`18018`.)"

#: ../../whatsnew/3.6.rst:2219
msgid ""
"Servers based on the :mod:`socketserver` module, including those defined in :"
"mod:`http.server`, :mod:`xmlrpc.server` and :mod:`wsgiref.simple_server`, "
"now only catch exceptions derived from :exc:`Exception`. Therefore if a "
"request handler raises an exception like :exc:`SystemExit` or :exc:"
"`KeyboardInterrupt`, :meth:`~socketserver.BaseServer.handle_error` is no "
"longer called, and the exception will stop a single-threaded server. "
"(Contributed by Martin Panter in :issue:`23430`.)"
msgstr ""
"Сервери на основі модуля :mod:`socketserver`, включно з тими, що визначені "
"в :mod:`http.server`, :mod:`xmlrpc.server` і :mod:`wsgiref.simple_server`, "
"тепер перехоплюють лише винятки, отримані від :exc:`Exception`. Тому, якщо "
"обробник запитів викликає виняток, наприклад :exc:`SystemExit` або :exc:"
"`KeyboardInterrupt`, :meth:`~socketserver.BaseServer.handle_error` більше не "
"викликається, і виняток зупинить однопотоковий сервер. (Надав Мартін Пантер "
"у :issue:`23430`.)"

#: ../../whatsnew/3.6.rst:2228
msgid ""
":func:`spwd.getspnam` now raises a :exc:`PermissionError` instead of :exc:"
"`KeyError` if the user doesn't have privileges."
msgstr ""

#: ../../whatsnew/3.6.rst:2231
msgid ""
"The :meth:`socket.socket.close` method now raises an exception if an error "
"(e.g. ``EBADF``) was reported by the underlying system call. (Contributed by "
"Martin Panter in :issue:`26685`.)"
msgstr ""
"Метод :meth:`socket.socket.close` тепер викликає виняток, якщо базовий "
"системний виклик повідомляє про помилку (наприклад, ``EBADF``). (Надав "
"Мартін Пантер у :issue:`26685`.)"

#: ../../whatsnew/3.6.rst:2235
msgid ""
"The *decode_data* argument for the :class:`!smtpd.SMTPChannel` and :class:`!"
"smtpd.SMTPServer` constructors is now ``False`` by default. This means that "
"the argument passed to :meth:`!process_message` is now a bytes object by "
"default, and :meth:`!process_message` will be passed keyword arguments. Code "
"that has already been updated in accordance with the deprecation warning "
"generated by 3.5 will not be affected."
msgstr ""
"Аргумент *decode_data* для конструкторов :class:`!smtpd.SMTPChannel` и :"
"class:`!smtpd.SMTPServer` теперь по умолчанию имеет значение ``False``. Это "
"означает, что аргумент, передаваемый в :meth:`!process_message`, теперь по "
"умолчанию является байтовым объектом, а :meth:`!process_message` будет "
"передавать аргументы ключевого слова. Код, который уже был обновлен в "
"соответствии с предупреждением об устаревании, созданным версией 3.5, не "
"будет затронут."

#: ../../whatsnew/3.6.rst:2243
msgid ""
"All optional arguments of the :func:`~json.dump`, :func:`~json.dumps`, :func:"
"`~json.load` and :func:`~json.loads` functions and :class:`~json."
"JSONEncoder` and :class:`~json.JSONDecoder` class constructors in the :mod:"
"`json` module are now :ref:`keyword-only <keyword-only_parameter>`. "
"(Contributed by Serhiy Storchaka in :issue:`18726`.)"
msgstr ""
"Усі додаткові аргументи функцій :func:`~json.dump`, :func:`~json.dumps`, :"
"func:`~json.load` і :func:`~json.loads` і :class:`Конструктори класів ~json."
"JSONEncoder` і :class:`~json.JSONDecoder` у модулі :mod:`json` тепер є :ref:"
"`лише ключовими словами <keyword-only_parameter>`. (Надав Сергій Сторчака в :"
"issue:`18726`.)"

#: ../../whatsnew/3.6.rst:2250
msgid ""
"Subclasses of :class:`type` which don't override ``type.__new__`` may no "
"longer use the one-argument form to get the type of an object."
msgstr ""
"Subclasses de :class:`type` que não substituem ``type.__new__`` não podem "
"mais usar a forma com apenas um argumento para obter o tipo de um objeto."

#: ../../whatsnew/3.6.rst:2253
msgid ""
"As part of :pep:`487`, the handling of keyword arguments passed to :class:"
"`type` (other than the metaclass hint, ``metaclass``) is now consistently "
"delegated to :meth:`object.__init_subclass__`. This means that :meth:`type."
"__new__` and :meth:`type.__init__` both now accept arbitrary keyword "
"arguments, but :meth:`object.__init_subclass__` (which is called from :meth:"
"`type.__new__`) will reject them by default. Custom metaclasses accepting "
"additional keyword arguments will need to adjust their calls to :meth:`type."
"__new__` (whether direct or via :class:`super`) accordingly."
msgstr ""
"Як частина :pep:`487`, обробка ключових аргументів, переданих у :class:"
"`type` (окрім підказки метакласу, ``metaclass``), тепер узгоджено "
"делегована :meth:`object.__init_subclass__`. Це означає, що :meth:`type."
"__new__` і :meth:`type.__init__` тепер приймають довільні ключові аргументи, "
"але :meth:`object.__init_subclass__` (який викликається з :meth:`type."
"__new__`) відхилить їх за замовчуванням. Користувальницькі метакласи, які "
"приймають додаткові ключові аргументи, повинні будуть відповідним чином "
"налаштувати свої виклики :meth:`type.__new__` (прямі чи через :class:"
"`super`)."

#: ../../whatsnew/3.6.rst:2262
msgid ""
"In ``distutils.command.sdist.sdist``, the ``default_format`` attribute has "
"been removed and is no longer honored. Instead, the gzipped tarfile format "
"is the default on all platforms and no platform-specific selection is made. "
"In environments where distributions are built on Windows and zip "
"distributions are required, configure the project with a ``setup.cfg`` file "
"containing the following:"
msgstr ""
"В ``distutils.command.sdist.sdist`` атрибут ``default_format`` был удален и "
"больше не учитывается. Вместо этого формат tar-файла в формате gzip "
"используется по умолчанию на всех платформах, и выбор для конкретной "
"платформы не производится. В средах, где дистрибутивы созданы под Windows и "
"требуются zip-дистрибутивы, настройте проект с помощью файла ``setup.cfg``, "
"содержащего следующее:"

#: ../../whatsnew/3.6.rst:2270
msgid ""
"[sdist]\n"
"formats=zip"
msgstr ""
"[sdist]\n"
"formats=zip"

#: ../../whatsnew/3.6.rst:2275
msgid ""
"This behavior has also been backported to earlier Python versions by "
"Setuptools 26.0.0."
msgstr ""
"Ця поведінка також була перенесена до попередніх версій Python за допомогою "
"Setuptools 26.0.0."

#: ../../whatsnew/3.6.rst:2278
msgid ""
"In the :mod:`urllib.request` module and the :meth:`http.client."
"HTTPConnection.request` method, if no Content-Length header field has been "
"specified and the request body is a file object, it is now sent with HTTP "
"1.1 chunked encoding. If a file object has to be sent to a HTTP 1.0 server, "
"the Content-Length value now has to be specified by the caller. (Contributed "
"by Demian Brecht and Rolf Krahl with tweaks from Martin Panter in :issue:"
"`12319`.)"
msgstr ""
"У модулі :mod:`urllib.request` і методі :meth:`http.client.HTTPConnection."
"request`, якщо поле заголовка Content-Length не вказано, а тіло запиту є "
"об’єктом файлу, він тепер надсилається із фрагментованим кодуванням HTTP "
"1.1. Якщо файловий об’єкт потрібно надіслати на сервер HTTP 1.0, значення "
"Content-Length тепер має вказати абонент. (Надано Деміаном Брехтом і Рольфом "
"Кралем із налаштуваннями Мартіна Пантера в :issue:`12319`.)"

#: ../../whatsnew/3.6.rst:2287
msgid ""
"The :class:`~csv.DictReader` now returns rows of type :class:`~collections."
"OrderedDict`. (Contributed by Steve Holden in :issue:`27842`.)"
msgstr ""
":class:`~csv.DictReader` тепер повертає рядки типу :class:`~collections."
"OrderedDict`. (Надав Стів Холден у :issue:`27842`.)"

#: ../../whatsnew/3.6.rst:2291
msgid ""
"The :const:`crypt.METHOD_CRYPT` will no longer be added to ``crypt.methods`` "
"if unsupported by the platform. (Contributed by Victor Stinner in :issue:"
"`25287`.)"
msgstr ""

#: ../../whatsnew/3.6.rst:2299
msgid ""
"On Linux, :func:`ctypes.util.find_library` now looks in ``LD_LIBRARY_PATH`` "
"for shared libraries. (Contributed by Vinay Sajip in :issue:`9998`.)"
msgstr ""
"У Linux :func:`ctypes.util.find_library` тепер шукає спільні бібліотеки в "
"``LD_LIBRARY_PATH``. (Надав Віней Саджип у :issue:`9998`.)"

#: ../../whatsnew/3.6.rst:2303
msgid ""
"The :class:`imaplib.IMAP4` class now handles flags containing the ``']'`` "
"character in messages sent from the server to improve real-world "
"compatibility. (Contributed by Lita Cho in :issue:`21815`.)"
msgstr ""
"Клас :class:`imaplib.IMAP4` тепер обробляє прапори, що містять символ "
"``']''`` у повідомленнях, надісланих із сервера, для покращення сумісності в "
"реальному світі. (Надано Літою Чо в :issue:`21815`.)"

#: ../../whatsnew/3.6.rst:2308
msgid ""
"The :func:`mmap.write() <mmap.write>` function now returns the number of "
"bytes written like other write methods. (Contributed by Jakub Stasiak in :"
"issue:`26335`.)"
msgstr ""
"Функція :func:`mmap.write() <mmap.write>` тепер повертає кількість записаних "
"байтів, як і інші методи запису. (Надав Якуб Стасяк у :issue:`26335`.)"

#: ../../whatsnew/3.6.rst:2312
msgid ""
"The :func:`pkgutil.iter_modules` and :func:`pkgutil.walk_packages` functions "
"now return :class:`~pkgutil.ModuleInfo` named tuples. (Contributed by "
"Ramchandra Apte in :issue:`17211`.)"
msgstr ""
"Функції :func:`pkgutil.iter_modules` і :func:`pkgutil.walk_packages` тепер "
"повертають іменовані кортежі :class:`~pkgutil.ModuleInfo`. (Надав Рамчандра "
"Апте в :issue:`17211`.)"

#: ../../whatsnew/3.6.rst:2316
msgid ""
":func:`re.sub` now raises an error for invalid numerical group references in "
"replacement templates even if the pattern is not found in the string.  The "
"error message for invalid group references now includes the group index and "
"the position of the reference. (Contributed by SilentGhost, Serhiy Storchaka "
"in :issue:`25953`.)"
msgstr ""
":func:`re.sub` тепер викликає помилку для недійсних посилань на числові "
"групи в шаблонах заміни, навіть якщо шаблон не знайдено в рядку. "
"Повідомлення про помилку для недійсних посилань на групи тепер містить "
"індекс групи та позицію посилання. (Надано SilentGhost, Сергій Сторчака в :"
"issue:`25953`.)"

#: ../../whatsnew/3.6.rst:2322
msgid ""
":class:`zipfile.ZipFile` will now raise :exc:`NotImplementedError` for "
"unrecognized compression values.  Previously a plain :exc:`RuntimeError` was "
"raised.  Additionally, calling :class:`~zipfile.ZipFile` methods on a closed "
"ZipFile or calling the :meth:`~zipfile.ZipFile.write` method on a ZipFile "
"created with mode ``'r'`` will raise a :exc:`ValueError`. Previously, a :exc:"
"`RuntimeError` was raised in those scenarios."
msgstr ""
":class:`zipfile.ZipFile` тепер викличе :exc:`NotImplementedError` для "
"нерозпізнаних значень стиснення. Раніше було викликано звичайну помилку :exc:"
"`RuntimeError`. Крім того, виклик методів :class:`~zipfile.ZipFile` для "
"закритого ZipFile або виклик методу :meth:`~zipfile.ZipFile.write` для "
"ZipFile, створеного в режимі ``'r'``, викличе :exc:`ValueError`. Раніше в "
"цих сценаріях виникала помилка :exc:`RuntimeError`."

#: ../../whatsnew/3.6.rst:2329
msgid ""
"when custom metaclasses are combined with zero-argument :func:`super` or "
"direct references from methods to the implicit ``__class__`` closure "
"variable, the implicit ``__classcell__`` namespace entry must now be passed "
"up to ``type.__new__`` for initialisation. Failing to do so will result in "
"a :exc:`DeprecationWarning` in Python 3.6 and a :exc:`RuntimeError` in "
"Python 3.8."
msgstr ""
"коли власні метакласи поєднуються з нульовим аргументом :func:`super` або "
"прямими посиланнями методів на неявну змінну закриття ``__class__``, неявний "
"запис простору імен ``__classcell__`` тепер має передаватися до ``type. "
"__new__`` для ініціалізації. Якщо цього не зробити, з’явиться :exc:"
"`DeprecationWarning` у Python 3.6 і :exc:`RuntimeError` у Python 3.8."

#: ../../whatsnew/3.6.rst:2336
msgid ""
"With the introduction of :exc:`ModuleNotFoundError`, import system consumers "
"may start expecting import system replacements to raise that more specific "
"exception when appropriate, rather than the less-specific :exc:"
"`ImportError`. To provide future compatibility with such consumers, "
"implementers of alternative import systems that completely replace :func:"
"`__import__` will need to update their implementations to raise the new "
"subclass when a module can't be found at all. Implementers of compliant "
"plugins to the default import system shouldn't need to make any changes, as "
"the default import system will raise the new subclass when appropriate."
msgstr ""
"С появлением :exc:`ModuleNotFoundError` потребители системы импорта могут "
"начать ожидать, что замены системы импорта вызовут это более конкретное "
"исключение, когда это необходимо, а не менее конкретное :exc:`ImportError`. "
"Чтобы обеспечить будущую совместимость с такими потребителями, разработчикам "
"альтернативных систем импорта, которые полностью заменяют :func:"
"`__import__`, необходимо будет обновить свои реализации, чтобы создать новый "
"подкласс, когда модуль вообще не может быть найден. Разработчикам плагинов, "
"совместимых с системой импорта по умолчанию, не нужно вносить какие-либо "
"изменения, поскольку система импорта по умолчанию создаст новый подкласс, "
"когда это необходимо."

#: ../../whatsnew/3.6.rst:2348
msgid "Changes in the C API"
msgstr "Alterações na API C"

#: ../../whatsnew/3.6.rst:2350
msgid ""
"The :c:func:`PyMem_Malloc` allocator family now uses the :ref:`pymalloc "
"allocator <pymalloc>` rather than the system :c:func:`malloc`. Applications "
"calling :c:func:`PyMem_Malloc` without holding the GIL can now crash. Set "
"the :envvar:`PYTHONMALLOC` environment variable to ``debug`` to validate the "
"usage of memory allocators in your application. See :issue:`26249`."
msgstr ""
"Сімейство розподілювачів :c:func:`PyMem_Malloc` тепер використовує :ref:"
"`розподілювач pymalloc <pymalloc>` замість системного :c:func:`malloc`. "
"Програми, які викликають :c:func:`PyMem_Malloc` без утримання GIL, тепер "
"можуть аварійно завершувати роботу. Встановіть для змінної середовища :"
"envvar:`PYTHONMALLOC` значення ``debug``, щоб перевірити використання "
"розподільників пам’яті у вашій програмі. Див. :issue:`26249`."

#: ../../whatsnew/3.6.rst:2356
msgid ""
":c:func:`Py_Exit` (and the main interpreter) now override the exit status "
"with 120 if flushing buffered data failed.  See :issue:`5319`."
msgstr ""
":c:func:`Py_Exit` (і основний інтерпретатор) тепер замінюють статус виходу "
"на 120, якщо очищення буферизованих даних не вдається. Див. :issue:`5319`."

#: ../../whatsnew/3.6.rst:2361
msgid "CPython bytecode changes"
msgstr "Alterações de bytecode do CPython"

#: ../../whatsnew/3.6.rst:2363
msgid ""
"There have been several major changes to the :term:`bytecode` in Python 3.6."
msgstr "У Python 3.6 було внесено кілька значних змін у :term:`bytecode`."

#: ../../whatsnew/3.6.rst:2365
msgid ""
"The Python interpreter now uses a 16-bit wordcode instead of bytecode. "
"(Contributed by Demur Rumed with input and reviews from Serhiy Storchaka and "
"Victor Stinner in :issue:`26647` and :issue:`28050`.)"
msgstr ""
"Інтерпретатор Python тепер використовує 16-бітний словесний код замість байт-"
"коду. (Надано Демуром Румедом із коментарями та рецензіями Сергія Сторчака "
"та Віктора Стіннера в :issue:`26647` та :issue:`28050`.)"

#: ../../whatsnew/3.6.rst:2369
msgid ""
"The new :opcode:`FORMAT_VALUE` and :opcode:`BUILD_STRING` opcodes as part of "
"the  :ref:`formatted string literal <whatsnew36-pep498>` implementation. "
"(Contributed by Eric Smith in :issue:`25483` and Serhiy Storchaka in :issue:"
"`27078`.)"
msgstr ""

#: ../../whatsnew/3.6.rst:2374
msgid ""
"The new :opcode:`BUILD_CONST_KEY_MAP` opcode to optimize the creation of "
"dictionaries with constant keys. (Contributed by Serhiy Storchaka in :issue:"
"`27140`.)"
msgstr ""
"Новий код операції :opcode:`BUILD_CONST_KEY_MAP` для оптимізації створення "
"словників із постійними ключами. (Надав Сергій Сторчака в :issue:`27140`.)"

#: ../../whatsnew/3.6.rst:2378
msgid ""
"The function call opcodes have been heavily reworked for better performance "
"and simpler implementation. The :opcode:`MAKE_FUNCTION`, :opcode:`!"
"CALL_FUNCTION`, :opcode:`!CALL_FUNCTION_KW` and :opcode:`!"
"BUILD_MAP_UNPACK_WITH_CALL` opcodes have been modified, the new :opcode:"
"`CALL_FUNCTION_EX` and :opcode:`!BUILD_TUPLE_UNPACK_WITH_CALL` have been "
"added, and ``CALL_FUNCTION_VAR``, ``CALL_FUNCTION_VAR_KW`` and "
"``MAKE_CLOSURE`` opcodes have been removed. (Contributed by Demur Rumed in :"
"issue:`27095`, and Serhiy Storchaka in :issue:`27213`, :issue:`28257`.)"
msgstr ""
"Коды операций вызова функций были сильно переработаны для повышения "
"производительности и упрощения реализации. Коды операций :opcode:"
"`MAKE_FUNCTION`, :opcode:`!CALL_FUNCTION`, :opcode:`!CALL_FUNCTION_KW` и :"
"opcode:`!BUILD_MAP_UNPACK_WITH_CALL` были изменены, новые :opcode:"
"`CALL_FUNCTION_EX` и :opcode:`!BUILD_TUPLE_UNPACK_WITH_CALL` были добавлены, "
"а коды операций ``CALL_FUNCTION_VAR``, ``CALL_FUNCTION_VAR_KW`` и "
"``MAKE_CLOSURE`` были удалены. (Предоставлено Демуром Румедом в :issue:"
"`27095` и Сергеем Сторчакой в ​​:issue:`27213`, :issue:`28257`.)"

#: ../../whatsnew/3.6.rst:2389
msgid ""
"The new :opcode:`SETUP_ANNOTATIONS` and :opcode:`!STORE_ANNOTATION` opcodes "
"have been added to support the new :term:`variable annotation` syntax. "
"(Contributed by Ivan Levkivskyi in :issue:`27985`.)"
msgstr ""
"Новые коды операций :opcode:`SETUP_ANNOTATIONS` и :opcode:`!"
"STORE_ANNOTATION` были добавлены для поддержки нового синтаксиса :term:"
"`variable annotation`. (Предоставлено Иваном Левковским в :issue:`27985`.)"

#: ../../whatsnew/3.6.rst:2395
msgid "Notable changes in Python 3.6.2"
msgstr "Помітні зміни в Python 3.6.2"

#: ../../whatsnew/3.6.rst:2398
msgid "New ``make regen-all`` build target"
msgstr "Novo alvo de construção ``make regen-all``"

#: ../../whatsnew/3.6.rst:2400
msgid ""
"To simplify cross-compilation, and to ensure that CPython can reliably be "
"compiled without requiring an existing version of Python to already be "
"available, the autotools-based build system no longer attempts to implicitly "
"recompile generated files based on file modification times."
msgstr ""
"Para simplificar a compilação cruzada e garantir que o CPython possa ser "
"compilado de forma confiável sem exigir que uma versão existente do Python "
"já esteja disponível, o sistema de construção baseado em autotools não tenta "
"mais recompilar implicitamente os arquivos gerados com base nos tempos de "
"modificação dos arquivos."

#: ../../whatsnew/3.6.rst:2405
msgid ""
"Instead, a new ``make regen-all`` command has been added to force "
"regeneration of these files when desired (e.g. after an initial version of "
"Python has already been built based on the pregenerated versions)."
msgstr ""
"Em vez disso, um novo comando ``make regen-all`` foi adicionado para forçar "
"a regeneração desses arquivos quando desejado (por exemplo, após uma versão "
"inicial do Python já ter sido construída com base nas versões pré-geradas)."

#: ../../whatsnew/3.6.rst:2409
msgid ""
"More selective regeneration targets are also defined - see :source:`Makefile."
"pre.in` for details."
msgstr ""
"Alvos de regeneração mais seletivos também são definidos -- veja :source:"
"`Makefile.pre.in` para detalhes."

#: ../../whatsnew/3.6.rst:2412 ../../whatsnew/3.6.rst:2425
msgid "(Contributed by Victor Stinner in :issue:`23404`.)"
msgstr "(Contribuição de Victor Stinner em :issue:`23404`.)"

#: ../../whatsnew/3.6.rst:2418
msgid "Removal of ``make touch`` build target"
msgstr "Remoção do alvo de construção ``make touch``"

#: ../../whatsnew/3.6.rst:2420
msgid ""
"The ``make touch`` build target previously used to request implicit "
"regeneration of generated files by updating their modification times has "
"been removed."
msgstr ""
"O alvo de construção ``make touch`` usado anteriormente para solicitar "
"regeneração implícita de arquivos gerados atualizando seus tempos de "
"modificação foi removido."

#: ../../whatsnew/3.6.rst:2423
msgid "It has been replaced by the new ``make regen-all`` target."
msgstr "Ele foi substituído pelo novo alvo ``make regen-all``."

#: ../../whatsnew/3.6.rst:2431
msgid "Notable changes in Python 3.6.4"
msgstr "Помітні зміни в Python 3.6.4"

#: ../../whatsnew/3.6.rst:2433
msgid ""
"The ``PyExc_RecursionErrorInst`` singleton that was part of the public API "
"has been removed as its members being never cleared may cause a segfault "
"during finalization of the interpreter. (Contributed by Xavier de Gaye in :"
"issue:`22898` and :issue:`30697`.)"
msgstr ""
"Синглтон ``PyExc_RecursionErrorInst``, який був частиною загальнодоступного "
"API, було видалено, оскільки його члени, які ніколи не очищалися, можуть "
"спричинити помилку сегмента під час фіналізації інтерпретатора. (Надав "
"Ксав’є де Гає в :issue:`22898` і :issue:`30697`.)"

#: ../../whatsnew/3.6.rst:2440
msgid "Notable changes in Python 3.6.5"
msgstr "Помітні зміни в Python 3.6.5"

#: ../../whatsnew/3.6.rst:2442
msgid ""
"The :func:`locale.localeconv` function now sets temporarily the ``LC_CTYPE`` "
"locale to the ``LC_NUMERIC`` locale in some cases. (Contributed by Victor "
"Stinner in :issue:`31900`.)"
msgstr ""
"У деяких випадках функція :func:`locale.localeconv` тепер тимчасово "
"встановлює локаль ``LC_CTYPE`` на ``LC_NUMERIC``. (Надав Віктор Стіннер у :"
"issue:`31900`.)"

#: ../../whatsnew/3.6.rst:2448
msgid "Notable changes in Python 3.6.7"
msgstr "Помітні зміни в Python 3.6.7"

#: ../../whatsnew/3.6.rst:2450
msgid ""
":mod:`xml.dom.minidom` and :mod:`xml.sax` modules no longer process external "
"entities by default. See also :gh:`61441`."
msgstr ""
"Модули :mod:`xml.dom.minidom` и :mod:`xml.sax` больше не обрабатывают "
"внешние объекты по умолчанию. См. также:gh:`61441`."

#: ../../whatsnew/3.6.rst:2453
msgid ""
"In 3.6.7 the :mod:`tokenize` module now implicitly emits a ``NEWLINE`` token "
"when provided with input that does not have a trailing new line.  This "
"behavior now matches what the C tokenizer does internally. (Contributed by "
"Ammar Askar in :issue:`33899`.)"
msgstr ""
"У версії 3.6.7 модуль :mod:`tokenize` тепер неявно видає маркер ``NEWLINE``, "
"коли надходить із введенням, яке не має кінцевого нового рядка. Ця поведінка "
"тепер відповідає внутрішньому виконанню токенізера C. (Надав Аммар Аскар у :"
"issue:`33899`.)"

#: ../../whatsnew/3.6.rst:2459
msgid "Notable changes in Python 3.6.10"
msgstr "Помітні зміни в Python 3.6.10"

#: ../../whatsnew/3.6.rst:2461
msgid ""
"Due to significant security concerns, the *reuse_address* parameter of :meth:"
"`asyncio.loop.create_datagram_endpoint` is no longer supported. This is "
"because of the behavior of the socket option ``SO_REUSEADDR`` in UDP. For "
"more details, see the documentation for ``loop.create_datagram_endpoint()``. "
"(Contributed by Kyle Stanley, Antoine Pitrou, and Yury Selivanov in :issue:"
"`37228`.)"
msgstr ""
"Devido a significativas preocupações de segurança, o parâmetro "
"*reuse_address* de :meth:`asyncio.loop.create_datagram_endpoint` não é mais "
"suportado. Isso ocorre devido ao comportamento da opção de soquete "
"``SO_REUSEADDR`` no UDP. Para mais detalhes, consulte a documentação de "
"``loop.create_datagram_endpoint()``. (Contribuição de Kyle Stanley, Antoine "
"Pitrou e Yury Selivanov em :issue:`37228`.)"

#: ../../whatsnew/3.6.rst:2469
msgid "Notable changes in Python 3.6.13"
msgstr "Помітні зміни в Python 3.6.13"

#: ../../whatsnew/3.6.rst:2471
msgid ""
"Earlier Python versions allowed using both ``;`` and ``&`` as query "
"parameter separators in :func:`urllib.parse.parse_qs` and :func:`urllib."
"parse.parse_qsl`.  Due to security concerns, and to conform with newer W3C "
"recommendations, this has been changed to allow only a single separator key, "
"with ``&`` as the default.  This change also affects :func:`cgi.parse` and :"
"func:`cgi.parse_multipart` as they use the affected functions internally. "
"For more details, please see their respective documentation. (Contributed by "
"Adam Goldschmidt, Senthil Kumaran and Ken Jin in :issue:`42967`.)"
msgstr ""
"Versões anteriores do Python permitiam o uso de ``;`` e ``&`` como "
"separadores de parâmetros de consulta nas funções :func:`urllib.parse."
"parse_qs` e :func:`urllib.parse.parse_qsl`. Devido a questões de segurança, "
"e em conformidade com as recomendações mais recentes do W3C, isso foi "
"alterado para permitir apenas uma única chave separadora, com ``&`` como "
"padrão. Esta mudança também afeta as funções :func:`cgi.parse` e :func:`cgi."
"parse_multipart` já que elas usam as funções afetadas internamente. Para "
"obter mais detalhes, consulte sua respectiva documentação. (Contribuição de "
"Adam Goldschmidt, Senthil Kumaran e Ken Jin em :issue:`42967`.)"

#: ../../whatsnew/3.6.rst:2482
msgid "Notable changes in Python 3.6.14"
msgstr "Заметные изменения в Python 3.6.14"

#: ../../whatsnew/3.6.rst:2484
msgid ""
"A security fix alters the :class:`ftplib.FTP` behavior to not trust the IPv4 "
"address sent from the remote server when setting up a passive data channel.  "
"We reuse the ftp server IP address instead.  For unusual code requiring the "
"old behavior, set a ``trust_server_pasv_ipv4_address`` attribute on your FTP "
"instance to ``True``.  (See :gh:`87451`)"
msgstr ""
"Uma correção de segurança altera o comportamento :class:`ftplib.FTP` para "
"não confiar no endereço IPv4 enviado do servidor remoto ao configurar um "
"canal de dados passivo. Em vez disso, reutilizamos o endereço IP do servidor "
"ftp. Para códigos incomuns que requerem o comportamento antigo, defina um "
"atributo ``trust_server_pasv_ipv4_address`` em sua instância de FTP para "
"``True``. (Veja :gh:`87451`)"

#: ../../whatsnew/3.6.rst:2490
msgid ""
"The presence of newline or tab characters in parts of a URL allows for some "
"forms of attacks. Following the WHATWG specification that updates RFC 3986, "
"ASCII newline ``\\n``, ``\\r`` and tab ``\\t`` characters are stripped from "
"the URL by the parser :func:`urllib.parse` preventing such attacks. The "
"removal characters are controlled by a new module level variable ``urllib."
"parse._UNSAFE_URL_BYTES_TO_REMOVE``. (See :gh:`88048`)"
msgstr ""
"Наличие символов новой строки или табуляции в частях URL-адреса допускает "
"некоторые формы атак. В соответствии со спецификацией WHATWG, обновляющей "
"RFC 3986, символы новой строки ASCII ``\\n``, ``\\r`` и табуляции ``\\t`` "
"удаляются из URL-адреса анализатором :func:`urllib.parse`, предотвращая "
"такие атаки. Символы удаления управляются новой переменной уровня модуля "
"``urllib.parse._UNSAFE_URL_BYTES_TO_REMOVE``. (См. :gh:`88048`)"
