# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
# Adorilson Bezerra <adorilson@gmail.com>, 2025
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-31 14:16+0000\n"
"PO-Revision-Date: 2025-09-16 00:02+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../whatsnew/3.14.rst:4
msgid "What's new in Python 3.14"
msgstr "O que há de novo no Python 3.14"

#: ../../whatsnew/3.14.rst:0
msgid "Editors"
msgstr "Editores"

#: ../../whatsnew/3.14.rst:6
msgid "Adam Turner and Hugo van Kemenade"
msgstr "Adam Turner e Hugo van Kemenade"

#: ../../whatsnew/3.14.rst:48
msgid ""
"This article explains the new features in Python 3.14, compared to 3.13. "
"Python 3.14 was released on 7 October 2025. For full details, see the :ref:"
"`changelog <changelog>`."
msgstr ""
"Este artigo explica os novos recursos do Python 3.14, em comparação com o "
"3.13. Python 3.14 foi lançado em 7 de outubro de 2025. Veja :ref:`changelog "
"<changelog>` para uma lista completa de mudanças."

#: ../../whatsnew/3.14.rst:54
msgid ":pep:`745` -- Python 3.14 release schedule"
msgstr ":pep:`745` -- Cronograma de lançamento do Python 3.14"

#: ../../whatsnew/3.14.rst:58
msgid "Summary -- Release highlights"
msgstr "Resumo -- Destaques da versão"

#: ../../whatsnew/3.14.rst:63
msgid ""
"Python 3.14 is the latest stable release of the Python programming language, "
"with a mix of changes to the language, the implementation, and the standard "
"library. The biggest changes include :ref:`template string literals "
"<whatsnew314-template-string-literals>`, :ref:`deferred evaluation of "
"annotations <whatsnew314-deferred-annotations>`, and support for :ref:"
"`subinterpreters <whatsnew314-multiple-interpreters>` in the standard "
"library."
msgstr ""
"Python 3.14 é a versão estável mais recente da linguagem de programação "
"Python, com uma mistura de alterações na linguagem, na implementação e na "
"biblioteca padrão. As maiores mudanças incluem: :ref:`literais de string "
"template <whatsnew314-template-string-literals>`, :ref:`avaliação adiada de "
"anotações <whatsnew314-deferred-annotations>` e suporte para :ref:"
"`subinterpretadores <whatsnew314-multiple-interpreters>` na biblioteca "
"padrão."

#: ../../whatsnew/3.14.rst:72
msgid ""
"The library changes include significantly improved capabilities for :ref:"
"`introspection in asyncio <whatsnew314-asyncio-introspection>`, :ref:"
"`support for Zstandard <whatsnew314-zstandard>` via a new :mod:`compression."
"zstd` module, syntax highlighting in the REPL, as well as the usual "
"deprecations and removals, and improvements in user-friendliness and "
"correctness."
msgstr ""
"As mudanças na biblioteca incluem recursos significativamente melhorados "
"para :ref:`introspecção no asyncio <whatsnew314-asyncio-introspection>`, :"
"ref:`suporte para Zstandard <whatsnew314-zstandard>` por meio de um novo "
"módulo :mod:`compression.zstd`, destaque de sintaxe no REPL, bem como as "
"descontinuações e remoções habituais e melhorias na facilidade de uso e "
"correção."

#: ../../whatsnew/3.14.rst:79
msgid ""
"This article doesn't attempt to provide a complete specification of all new "
"features, but instead gives a convenient overview. For full details refer to "
"the documentation, such as the :ref:`Library Reference <library-index>` and :"
"ref:`Language Reference <reference-index>`. To understand the complete "
"implementation and design rationale for a change, refer to the PEP for a "
"particular new feature; but note that PEPs usually are not kept up-to-date "
"once a feature has been fully implemented. See `Porting to Python 3.14`_ for "
"guidance on upgrading from earlier versions of Python."
msgstr ""
"Este artigo não tenta fornecer uma especificação completa de todos os novos "
"recursos, mas fornece uma visão geral conveniente. Para detalhes completos, "
"consulte a documentação, como :ref:`Referência da Biblioteca <library-"
"index>` e :ref:`Referência da Linguagem <reference-index>`. Para entender a "
"implementação completa e a justificativa do design para uma mudança, "
"consulte a PEP para um novo recurso específico; mas observe que as PEPs "
"geralmente não são mantidas atualizadas depois que um recurso é totalmente "
"implementado. Veja `Portando para o Python 3.14`_ para orientação sobre "
"atualização a partir de versões anteriores do Python."

#: ../../whatsnew/3.14.rst:95
msgid "Interpreter improvements:"
msgstr "Melhorias no interpretador:"

#: ../../whatsnew/3.14.rst:97
msgid ""
":pep:`649` and :pep:`749`: :ref:`Deferred evaluation of annotations "
"<whatsnew314-deferred-annotations>`"
msgstr ""
":pep:`649` e :pep:`749`: :ref:`avaliação adiada de anotações <whatsnew314-"
"deferred-annotations>`"

#: ../../whatsnew/3.14.rst:99
msgid ""
":pep:`734`: :ref:`Multiple interpreters in the standard library <whatsnew314-"
"multiple-interpreters>`"
msgstr ""
":pep:`734`: :ref:`múltiplos interpretadores na biblioteca padrão "
"<whatsnew314-multiple-interpreters>`"

#: ../../whatsnew/3.14.rst:101
msgid ""
":pep:`750`: :ref:`Template strings <whatsnew314-template-string-literals>`"
msgstr ""
":pep:`750`: :ref:`strings template <whatsnew314-template-string-literals>`"

#: ../../whatsnew/3.14.rst:102
msgid ""
":pep:`758`: :ref:`Allow except and except* expressions without brackets "
"<whatsnew314-bracketless-except>`"
msgstr ""
":pep:`758`: :ref:`permitir expressões except e except* sem parênteses "
"<whatsnew314-bracketless-except>`"

#: ../../whatsnew/3.14.rst:104
msgid ""
":pep:`765`: :ref:`Control flow in finally blocks <whatsnew314-finally-"
"syntaxwarning>`"
msgstr ""
":pep:`765`: :ref:`fluxo de controle em blocos finally <whatsnew314-finally-"
"syntaxwarning>`"

#: ../../whatsnew/3.14.rst:106
msgid ""
":pep:`768`: :ref:`Safe external debugger interface for CPython <whatsnew314-"
"remote-debugging>`"
msgstr ""
":pep:`768`: :ref:`interface segura para depurador externo para CPython "
"<whatsnew314-remote-debugging>`"

#: ../../whatsnew/3.14.rst:108
msgid ":ref:`A new type of interpreter <whatsnew314-tail-call-interpreter>`"
msgstr ""
":ref:`Um novo tipo de interpretador <whatsnew314-tail-call-interpreter>`"

#: ../../whatsnew/3.14.rst:109
msgid ""
":ref:`Free-threaded mode improvements <whatsnew314-free-threaded-cpython>`"
msgstr ""
":ref:`Melhorias no modo com threads livres <whatsnew314-free-threaded-"
"cpython>`"

#: ../../whatsnew/3.14.rst:110
msgid ":ref:`Improved error messages <whatsnew314-improved-error-messages>`"
msgstr ""
":ref:`Mensagens de erro melhoradas <whatsnew314-improved-error-messages>`"

#: ../../whatsnew/3.14.rst:111
msgid ":ref:`Incremental garbage collection <whatsnew314-incremental-gc>`"
msgstr ":ref:`Coleta de lixo incremental <whatsnew314-incremental-gc>`"

#: ../../whatsnew/3.14.rst:113
msgid "Significant improvements in the standard library:"
msgstr "Melhorias significativas na biblioteca padrão:"

#: ../../whatsnew/3.14.rst:115
msgid ""
":pep:`784`: :ref:`Zstandard support in the standard library <whatsnew314-"
"zstandard>`"
msgstr ""
":pep:`784`: :ref:`suporte ao Zstandard na biblioteca padrão <whatsnew314-"
"zstandard>`"

#: ../../whatsnew/3.14.rst:117
msgid ":ref:`whatsnew314-asyncio-introspection`"
msgstr ":ref:`whatsnew314-asyncio-introspection`"

#: ../../whatsnew/3.14.rst:118
msgid ":ref:`whatsnew314-concurrent-warnings-control`"
msgstr ":ref:`whatsnew314-concurrent-warnings-control`"

#: ../../whatsnew/3.14.rst:119
msgid ""
":ref:`Syntax highlighting in the default interactive shell <whatsnew314-"
"pyrepl-highlighting>`, and color output in several standard library CLIs"
msgstr ""
":ref:`Realce de sintaxe no console interativo padrão <whatsnew314-pyrepl-"
"highlighting>` e saída colorida em várias interfaces de linha de comando "
"(CLIs) de módulos da biblioteca padrão"

#: ../../whatsnew/3.14.rst:123
msgid "C API improvements:"
msgstr "Melhorias na API C:"

#: ../../whatsnew/3.14.rst:125
msgid ":pep:`741`: :ref:`Python configuration C API <whatsnew314-capi-config>`"
msgstr ""
":pep:`741`: :ref:`API C de configuração do Python <whatsnew314-capi-config>`"

#: ../../whatsnew/3.14.rst:127
msgid "Platform support:"
msgstr "Suporte à plataforma:"

#: ../../whatsnew/3.14.rst:129
msgid ""
":pep:`776`: Emscripten is now an :ref:`officially supported platform "
"<whatsnew314-build-changes>`, at :pep:`tier 3 <11#tier-3>`."
msgstr ""
":pep:`776`: Emscripten agora é uma :ref:`plataforma oficialmente com suporte "
"<whatsnew314-build-changes>`, no :pep:`nível 3 <11#tier-3>`."

#: ../../whatsnew/3.14.rst:132
msgid "Release changes:"
msgstr "Alterações na versão:"

#: ../../whatsnew/3.14.rst:134
msgid ""
":pep:`779`: :ref:`Free-threaded Python is officially supported <whatsnew314-"
"free-threaded-now-supported>`"
msgstr ""
":pep:`779`: :ref:`Python com threads livres é oficialmente suportado "
"<whatsnew314-free-threaded-now-supported>`"

#: ../../whatsnew/3.14.rst:136
msgid ""
":pep:`761`: :ref:`PGP signatures have been discontinued for official "
"releases <whatsnew314-no-more-pgp>`"
msgstr ""
":pep:`761`: :ref:`Assinaturas PGP foram descontinuadas de lançamentos "
"oficiais <whatsnew314-no-more-pgp>`"

#: ../../whatsnew/3.14.rst:138
msgid ""
":ref:`Windows and macOS binary releases now support the experimental just-in-"
"time compiler <whatsnew314-jit-compiler>`"
msgstr ""
":ref:`Versões binárias de Windows e macOS agora oferecem suporte ao "
"compilador experimental just-in-time <whatsnew314-jit-compiler>`"

#: ../../whatsnew/3.14.rst:140
msgid ""
":ref:`Binary releases for Android are now provided <whatsnew314-build-"
"changes>`"
msgstr ""
":ref:`Versões binárias para Android são agora fornecidas <whatsnew314-jit-"
"compiler>`"

#: ../../whatsnew/3.14.rst:144
msgid "New features"
msgstr "Novas funcionalidades"

#: ../../whatsnew/3.14.rst:149
msgid ":pep:`649` & :pep:`749`: Deferred evaluation of annotations"
msgstr ":pep:`649` e :pep:`749`: avaliação adiada de anotações"

#: ../../whatsnew/3.14.rst:151
msgid ""
"The :term:`annotations <annotation>` on functions, classes, and modules are "
"no longer evaluated eagerly. Instead, annotations are stored in special-"
"purpose :term:`annotate functions <annotate function>` and evaluated only "
"when necessary (except if ``from __future__ import annotations`` is used)."
msgstr ""
"As :term:`anotações <annotation>` em funções, classes e módulos não são mais "
"avaliadas de forma ansiosa. Em vez disso, as anotações são armazenadas em "
"uma :term:`função de anotação <annotate function>` com propósito especial e "
"avaliadas somente quando necessário (exceto se ``from __future__ import "
"annotations`` for usado)."

#: ../../whatsnew/3.14.rst:156
msgid ""
"This change is designed to improve performance and usability of annotations "
"in Python in most circumstances. The runtime cost for defining annotations "
"is minimized, but it remains possible to introspect annotations at runtime. "
"It is no longer necessary to enclose annotations in strings if they contain "
"forward references."
msgstr ""
"Essa alteração foi projetada para melhorar o desempenho e usabilidade de "
"anotações no Python na maioria das circunstâncias. O custo em tempo de "
"execução para definir anotação é minimizado, mas continua sendo possível "
"introspectar anotação em tempo de execução. Não é mais necessário incluir "
"anotação em strings se eles contiverem referências futuras."

#: ../../whatsnew/3.14.rst:162
msgid ""
"The new :mod:`annotationlib` module provides tools for inspecting deferred "
"annotations. Annotations may be evaluated in the :attr:`~annotationlib."
"Format.VALUE` format (which evaluates annotations to runtime values, similar "
"to the behavior in earlier Python versions), the :attr:`~annotationlib."
"Format.FORWARDREF` format (which replaces undefined names with special "
"markers), and the :attr:`~annotationlib.Format.STRING` format (which returns "
"annotations as strings)."
msgstr ""
"O novo módulo :mod:`annotationlib` fornece ferramentas para inspecionar "
"anotação adiada. A anotação pode ser avaliada nos formatos :attr:"
"`~annotationlib.Format.VALUE` (que avalia anotações para valores em tempo de "
"execução, semelhante ao comportamento nas versões anteriores do Python), :"
"attr:`~annotationlib.Format.FORWARDREF` (que substitui nomes indefinidos por "
"marcadores especiais) e :attr:`~annotationlib.Format.STRING` (que retorna "
"anotações como strings)."

#: ../../whatsnew/3.14.rst:169
msgid "This example shows how these formats behave:"
msgstr "Este exemplo mostra como esses formatos se comportam:"

#: ../../whatsnew/3.14.rst:171
msgid ""
">>> from annotationlib import get_annotations, Format\n"
">>> def func(arg: Undefined):\n"
"...     pass\n"
">>> get_annotations(func, format=Format.VALUE)\n"
"Traceback (most recent call last):\n"
"  ...\n"
"NameError: name 'Undefined' is not defined\n"
">>> get_annotations(func, format=Format.FORWARDREF)\n"
"{'arg': ForwardRef('Undefined', owner=<function func at 0x...>)}\n"
">>> get_annotations(func, format=Format.STRING)\n"
"{'arg': 'Undefined'}"
msgstr ""
">>> from annotationlib import get_annotations, Format\n"
">>> def func(arg: Undefined):\n"
"...     pass\n"
">>> get_annotations(func, format=Format.VALUE)\n"
"Traceback (most recent call last):\n"
"  ...\n"
"NameError: name 'Undefined' is not defined\n"
">>> get_annotations(func, format=Format.FORWARDREF)\n"
"{'arg': ForwardRef('Undefined', owner=<function func at 0x...>)}\n"
">>> get_annotations(func, format=Format.STRING)\n"
"{'arg': 'Undefined'}"

#: ../../whatsnew/3.14.rst:185
msgid ""
"The :ref:`porting <whatsnew314-porting-annotations>` section contains "
"guidance on changes that may be needed due to these changes, though in the "
"majority of cases, code will continue working as-is."
msgstr ""
"A seção :ref:`Portando <whatsnew314-porting-annotations>` contém orientações "
"sobre alterações que podem ser necessárias devido a essas mudanças, embora "
"na maioria dos casos, o código continuará funcionando como está."

#: ../../whatsnew/3.14.rst:189
msgid ""
"(Contributed by Jelle Zijlstra in :pep:`749` and :gh:`119180`; :pep:`649` "
"was written by Larry Hastings.)"
msgstr ""
"(Contribuição de Jelle Zijlstra em :pep:`749` e :gh:`119180`, :pep:`649` foi "
"escrita por Larry Hastings.)"

#: ../../whatsnew/3.14.rst:194
msgid ":pep:`649`"
msgstr ":pep:`649`"

#: ../../whatsnew/3.14.rst:195
msgid "Deferred Evaluation Of Annotations Using Descriptors"
msgstr "Avaliação adiada de anotações usando descritores"

#: ../../whatsnew/3.14.rst:196
msgid ":pep:`749`"
msgstr ":pep:`749`"

#: ../../whatsnew/3.14.rst:197
msgid "Implementing PEP 649"
msgstr "Implementando a PEP 649"

#: ../../whatsnew/3.14.rst:203
msgid ":pep:`734`: Multiple interpreters in the standard library"
msgstr ":pep:`734`: múltiplos interpretadores na biblioteca padrão"

#: ../../whatsnew/3.14.rst:205
msgid ""
"The CPython runtime supports running multiple copies of Python in the same "
"process simultaneously and has done so for over 20 years. Each of these "
"separate copies is called an 'interpreter'. However, the feature had been "
"available only through the :ref:`C-API <sub-interpreter-support>`."
msgstr ""
"O ambiente de execução do CPython permite a execução simultânea de várias "
"cópias do Python no mesmo processo há mais de 20 anos. Cada uma dessas "
"cópias separadas é chamada de \"interpretador\". No entanto, o recurso "
"estava disponível apenas por meio da :ref:`API C <sub-interpreter-support>`."

#: ../../whatsnew/3.14.rst:211
msgid ""
"That limitation is removed in Python 3.14, with the new :mod:`concurrent."
"interpreters` module."
msgstr ""
"Essa limitação foi removida no Python 3.14, com o novo módulo :mod:"
"`concurrent.interpreters`."

#: ../../whatsnew/3.14.rst:214
msgid ""
"There are at least two notable reasons why using multiple interpreters has "
"significant benefits:"
msgstr ""
"Há pelo menos duas razões importantes pelas quais o uso de múltiplos "
"interpretadores traz benefícios significativos:"

#: ../../whatsnew/3.14.rst:217
msgid "they support a new (to Python), human-friendly concurrency model"
msgstr ""
"eles oferecem suporte a um novo modelo (para Python) de simultaneidade, "
"amigável ao ser humano"

#: ../../whatsnew/3.14.rst:218
msgid "true multi-core parallelism"
msgstr "verdadeiro paralelismo multi-core"

#: ../../whatsnew/3.14.rst:220
msgid ""
"For some use cases, concurrency in software improves efficiency and can "
"simplify design, at a high level. At the same time, implementing and "
"maintaining all but the simplest concurrency is often a struggle for the "
"human brain. That especially applies to plain threads (for example, :mod:"
"`threading`), where all memory is shared between all threads."
msgstr ""
"Em alguns casos de uso, a simultaneidade em software melhora a eficiência e "
"pode simplificar o design em alto nível. Ao mesmo tempo, implementar e "
"manter todos os tipos de simultaneidade, exceto as mais simples, costuma ser "
"uma luta para o cérebro humano. Isso se aplica especialmente a threads "
"simples (por exemplo, :mod:`threading`), em que toda a memória é "
"compartilhada entre todas as threads."

#: ../../whatsnew/3.14.rst:227
msgid ""
"With multiple isolated interpreters, you can take advantage of a class of "
"concurrency models, like Communicating Sequential Processes (CSP) or the "
"actor model, that have found success in other programming languages, like "
"Smalltalk, Erlang, Haskell, and Go. Think of multiple interpreters as "
"threads but with opt-in sharing."
msgstr ""
"Com múltiplos interpretadores isolados, você pode aproveitar vários modelos "
"de simultaneidade, como o Communicating Sequential Processes (CSP) e o "
"modelo de atores, que já obtiveram sucesso em outras linguagens de "
"programação, como Smalltalk, Erlang, Haskell e Go. Pense em múltiplos "
"interpretadores como threads, mas com compartilhamento opcional."

#: ../../whatsnew/3.14.rst:234
msgid ""
"Regarding multi-core parallelism: as of Python 3.12, interpreters are now "
"sufficiently isolated from one another to be used in parallel (see :pep:"
"`684`). This unlocks a variety of CPU-intensive use cases for Python that "
"were limited by the :term:`GIL`."
msgstr ""
"Sobre o paralelismo multinúcleo: a partir do Python 3.12, os interpretadores "
"agora estão suficientemente isolados uns dos outros para serem usados em "
"paralelo (veja :pep:`684`). Isso destrava uma variedade de casos de uso "
"intensivos de CPU em Python que eram limitados pela :term:`GIL`."

#: ../../whatsnew/3.14.rst:239
msgid ""
"Using multiple interpreters is similar in many ways to :mod:"
"`multiprocessing`, in that they both provide isolated logical \"processes\" "
"that can run in parallel, with no sharing by default. However, when using "
"multiple interpreters, an application will use fewer system resources and "
"will operate more efficiently (since it stays within the same process). "
"Think of multiple interpreters as having the isolation of processes with the "
"efficiency of threads."
msgstr ""
"O uso de múltiplos interpretadores é semelhante, em muitos aspectos, ao :mod:"
"`multiprocessing`, pois ambos fornecem \"processos\" lógicos isolados que "
"podem ser executados em paralelo, sem compartilhamento por padrão. No "
"entanto, ao usar múltiplos interpretadores, uma aplicação consumirá menos "
"recursos do sistema e operará com mais eficiência (já que permanece no mesmo "
"processo). Pense em múltiplos interpretadores como se tivessem o isolamento "
"de processos com a eficiência de threads."

#: ../../whatsnew/3.14.rst:250
msgid ""
"While the feature has been around for decades, multiple interpreters have "
"not been used widely, due to low awareness and the lack of a standard "
"library module. Consequently, they currently have several notable "
"limitations, which are expected to improve significantly now that the "
"feature is going mainstream."
msgstr ""
"Embora o recurso já exista há décadas, múltiplos interpretadores não têm "
"sido amplamente utilizados devido à baixa conscientização e à ausência de um "
"módulo da biblioteca padrão. Consequentemente, eles atualmente apresentam "
"diversas limitações notáveis, que devem melhorar significativamente agora "
"que o recurso finalmente está se tornando popular."

#: ../../whatsnew/3.14.rst:256
msgid "Current limitations:"
msgstr "Limitações atuais:"

#: ../../whatsnew/3.14.rst:258
msgid "starting each interpreter has not been optimized yet"
msgstr "iniciar cada interpretador ainda não foi otimizado"

#: ../../whatsnew/3.14.rst:259
msgid ""
"each interpreter uses more memory than necessary (work continues on "
"extensive internal sharing between interpreters)"
msgstr ""
"cada interpretador usa mais memória do que o necessário (o trabalho continua "
"no compartilhamento interno extensivo entre interpretadores)"

#: ../../whatsnew/3.14.rst:261
msgid ""
"there aren't many options *yet* for truly sharing objects or other data "
"between interpreters (other than :type:`memoryview`)"
msgstr ""
"não há muitas opções *ainda* para realmente compartilhar objetos ou outros "
"dados entre interpretadores (além de :type:`memoryview`)"

#: ../../whatsnew/3.14.rst:263
msgid ""
"many third-party extension modules on PyPI are not yet compatible with "
"multiple interpreters (all standard library extension modules *are* "
"compatible)"
msgstr ""
"muitos módulos de extensão de terceiros no PyPI ainda não são compatíveis "
"com múltiplos interpretadores (os módulos de extensão de biblioteca padrão "
"*são* compatíveis)"

#: ../../whatsnew/3.14.rst:266
msgid ""
"the approach to writing applications that use multiple isolated interpreters "
"is mostly unfamiliar to Python users, for now"
msgstr ""
"a abordagem para escrever aplicações que usam vários interpretadores "
"isolados é, em grande parte, desconhecida para usuários do Python, por "
"enquanto"

#: ../../whatsnew/3.14.rst:269
msgid ""
"The impact of these limitations will depend on future CPython improvements, "
"how interpreters are used, and what the community solves through PyPI "
"packages. Depending on the use case, the limitations may not have much "
"impact, so try it out!"
msgstr ""
"O impacto dessas limitações dependerá de futuras melhorias no CPython, do "
"uso dos interpretadores e do que a comunidade resolver por meio dos pacotes "
"do PyPI. Dependendo do caso de uso, as limitações podem não ter muito "
"impacto, então experimente!"

#: ../../whatsnew/3.14.rst:274
msgid ""
"Furthermore, future CPython releases will reduce or eliminate overhead and "
"provide utilities that are less appropriate on PyPI. In the meantime, most "
"of the limitations can also be addressed through extension modules, meaning "
"PyPI packages can fill any gap for 3.14, and even back to 3.12 where "
"interpreters were finally properly isolated and stopped sharing the :term:"
"`GIL`. Likewise, libraries on PyPI are expected to emerge for high-level "
"abstractions on top of interpreters."
msgstr ""
"Além disso, versões futuras do CPython reduzirão ou eliminarão a sobrecarga "
"e fornecerão utilitários menos apropriados no PyPI. Enquanto isso, a maioria "
"das limitações também pode ser solucionada por meio de módulos de extensão, "
"o que significa que os pacotes do PyPI podem preencher qualquer lacuna da "
"versão 3.14 e até mesmo da versão 3.12, onde os interpretadores foram "
"finalmente isolados adequadamente e pararam de compartilhar a :term:`GIL`. "
"Da mesma forma, espera-se que bibliotecas no PyPI surjam para abstrações de "
"alto nível sobre os interpretadores."

#: ../../whatsnew/3.14.rst:282
msgid ""
"Regarding extension modules, work is in progress to update some PyPI "
"projects, as well as tools like Cython, pybind11, nanobind, and PyO3. The "
"steps for isolating an extension module are found at :ref:`isolating-"
"extensions-howto`. Isolating a module has a lot of overlap with what is "
"required to support :ref:`free-threading <whatsnew314-free-threaded-"
"cpython>`, so the ongoing work in the community in that area will help "
"accelerate support for multiple interpreters."
msgstr ""
"Em relação aos módulos de extensão, estamos trabalhando para atualizar "
"alguns projetos no PyPI, bem como ferramentas como Cython, pybind11, "
"nanobind e PyO3. As etapas para isolar um módulo de extensão podem ser "
"encontradas em :ref:`isolating-extensions-howto`. O isolamento de um módulo "
"tem muitas sobreposições com o que é necessário para oferecer suporte a :ref:"
"`threads livres <whatsnew314-free-threaded-cpython>`, portanto, o trabalho "
"contínuo da comunidade nessa área ajudará a acelerar o suporte a múltiplos "
"interpretadores."

#: ../../whatsnew/3.14.rst:291
msgid ""
"Also added in 3.14: :ref:`concurrent.futures.InterpreterPoolExecutor "
"<whatsnew314-concurrent-futures-interp-pool>`."
msgstr ""
"Também adicionado no 3.14: :ref:`concurrent.futures.InterpreterPoolExecutor "
"<whatsnew314-concurrent-futures-interp-pool>`."

#: ../../whatsnew/3.14.rst:294
msgid "(Contributed by Eric Snow in :gh:`134939`.)"
msgstr "(Contribuição de Eric Snow em :gh:`134939`)"

#: ../../whatsnew/3.14.rst:296
msgid ":pep:`734`"
msgstr ":pep:`734`"

#: ../../whatsnew/3.14.rst:302
msgid ":pep:`750`: Template string literals"
msgstr ":pep:`750`: literais de string template"

#: ../../whatsnew/3.14.rst:304
msgid ""
"Template strings are a new mechanism for custom string processing. They "
"share the familiar syntax of f-strings but, unlike f-strings, return an "
"object representing the static and interpolated parts of the string, instead "
"of a simple :class:`str`."
msgstr ""
"Strings templates são um novo mecanismo para o processamento personalizado "
"de strings. Elas compartilham a sintaxe familiar das f-strings, mas, "
"diferentemente delas, retornam um objeto que representa as partes estáticas "
"e interpoladas da string, em vez de um simples :class:`str`."

#: ../../whatsnew/3.14.rst:309
msgid "To write a t-string, use a ``'t'`` prefix instead of an ``'f'``:"
msgstr "Para escrever uma t-string, use um prefixo ``'t'`` em vez de ``'f'``:"

#: ../../whatsnew/3.14.rst:311
msgid ""
">>> variety = 'Stilton'\n"
">>> template = t'Try some {variety} cheese!'\n"
">>> type(template)\n"
"<class 'string.templatelib.Template'>"
msgstr ""
">>> variety = 'Stilton'\n"
">>> template = t'Experimente um pouco de queijo {variety}!'\n"
">>> type(template)\n"
"<class 'string.templatelib.Template'>"

#: ../../whatsnew/3.14.rst:318
msgid ""
":class:`~string.templatelib.Template` objects provide access to the static "
"and interpolated (in curly braces) parts of a string *before* they are "
"combined. Iterate over :class:`!Template` instances to access their parts in "
"order:"
msgstr ""
"Objetos :class:`~string.templatelib.Template` fornecem acesso às partes "
"estáticas e interpoladas (entre chaves) de uma string *antes* de serem "
"combinadas. Itere sobre instâncias de :class:`!Template` para acessar suas "
"partes em ordem:"

#: ../../whatsnew/3.14.rst:327
msgid ""
">>> list(template)\n"
"['Try some ', Interpolation('Stilton', 'variety', None, ''), ' cheese!']"
msgstr ""
">>> list(template)\n"
"['Experimente um pouco de queijo ', Interpolation('Stilton', 'variety', "
"None, ''), '!']"

#: ../../whatsnew/3.14.rst:332
msgid ""
"It's easy to write (or call) code to process :class:`!Template` instances. "
"For example, here's a function that renders static parts lowercase and :"
"class:`~string.templatelib.Interpolation` instances uppercase:"
msgstr ""
"É fácil escrever (ou chamar) código para processar instâncias de :class:`!"
"Template`. Por exemplo, aqui está uma função que renderiza partes estáticas "
"em minúsculas e instâncias de :class:`~string.templatelib.Interpolation` em "
"maiúsculas:"

#: ../../whatsnew/3.14.rst:336
msgid ""
"from string.templatelib import Interpolation\n"
"\n"
"def lower_upper(template):\n"
"    \"\"\"Render static parts lowercase and interpolations uppercase.\"\"\"\n"
"    parts = []\n"
"    for part in template:\n"
"        if isinstance(part, Interpolation):\n"
"            parts.append(str(part.value).upper())\n"
"        else:\n"
"            parts.append(part.lower())\n"
"    return ''.join(parts)\n"
"\n"
"name = 'Wenslydale'\n"
"template = t'Mister {name}'\n"
"assert lower_upper(template) == 'mister WENSLYDALE'"
msgstr ""
"from string.templatelib import Interpolation\n"
"\n"
"def lower_upper(template):\n"
"    \"\"\"Render static parts lowercase and interpolations uppercase.\"\"\"\n"
"    parts = []\n"
"    for part in template:\n"
"        if isinstance(part, Interpolation):\n"
"            parts.append(str(part.value).upper())\n"
"        else:\n"
"            parts.append(part.lower())\n"
"    return ''.join(parts)\n"
"\n"
"name = 'Wenslydale'\n"
"template = t'Mister {name}'\n"
"assert lower_upper(template) == 'mister WENSLYDALE'"

#: ../../whatsnew/3.14.rst:354
msgid ""
"Because :class:`!Template` instances distinguish between static strings and "
"interpolations at runtime, they can be useful for sanitising user input. "
"Writing a :func:`!html` function that escapes user input in HTML is an "
"exercise left to the reader! Template processing code can provide improved "
"flexibility. For instance, a more advanced :func:`!html` function could "
"accept a :class:`!dict` of HTML attributes directly in the template:"
msgstr ""
"Como as instâncias de :class:`!Template` distinguem entre strings estáticas "
"e interpolações em tempo de execução, elas podem ser úteis para sanitizar a "
"entrada do usuário. Escrever uma função :func:`!html` que escape a entrada "
"do usuário em HTML é um exercício deixado para o leitor! O código de "
"processamento de template pode proporcionar maior flexibilidade. Por "
"exemplo, uma função :func:`!html` mais avançada poderia aceitar um :class:`!"
"dict` de atributos HTML diretamente no template:"

#: ../../whatsnew/3.14.rst:362
msgid ""
"attributes = {'src': 'limburger.jpg', 'alt': 'lovely cheese'}\n"
"template = t'<img {attributes}>'\n"
"assert html(template) == '<img src=\"limburger.jpg\" alt=\"lovely cheese\" /"
">'"
msgstr ""
"attributes = {'src': 'limburger.jpg', 'alt': 'lovely cheese'}\n"
"template = t'<img {attributes}>'\n"
"assert html(template) == '<img src=\"limburger.jpg\" alt=\"lovely cheese\" /"
">'"

#: ../../whatsnew/3.14.rst:368
msgid ""
"Of course, template processing code does not need to return a string-like "
"result. An even *more* advanced :func:`!html` could return a custom type "
"representing a DOM-like structure."
msgstr ""
"É claro que o código de processamento de template não precisa retornar um "
"resultado semelhante a uma string. Uma função :func:`!html` ainda *mais* "
"avançada poderia retornar um tipo personalizado que represente uma estrutura "
"semelhante a um DOM."

#: ../../whatsnew/3.14.rst:372
msgid ""
"With t-strings in place, developers can write systems that sanitise SQL, "
"make safe shell operations, improve logging, tackle modern ideas in web "
"development (HTML, CSS, and so on), and implement lightweight custom "
"business DSLs."
msgstr ""
"Com t-strings, os desenvolvedores podem escrever sistemas que higienizam "
"SQL, executar comandos de shell com segurança, melhorar o registro, explorar "
"ideias modernas em desenvolvimento web (HTML, CSS e assim por diante) e "
"implementar DSLs comerciais leves e personalizadas."

#: ../../whatsnew/3.14.rst:376
msgid ""
"(Contributed by Jim Baker, Guido van Rossum, Paul Everitt, Koudai Aono, "
"Lysandros Nikolaou, Dave Peck, Adam Turner, Jelle Zijlstra, Bénédikt Tran, "
"and Pablo Galindo Salgado in :gh:`132661`.)"
msgstr ""
"(Contribuição de Jim Baker, Guido van Rossum, Paul Everitt, Koudai Aono, "
"Lysandros Nikolaou, Dave Peck, Adam Turner, Jelle Zijlstra, Bénédikt Tran e "
"Pablo Galindo Salgado em :gh:`132661`.)"

#: ../../whatsnew/3.14.rst:380
msgid ":pep:`750`."
msgstr ":pep:`750`."

#: ../../whatsnew/3.14.rst:386
msgid ":pep:`768`: Safe external debugger interface"
msgstr ":pep:`768`: interface segura para depurador externo"

#: ../../whatsnew/3.14.rst:388
msgid ""
"Python 3.14 introduces a zero-overhead debugging interface that allows "
"debuggers and profilers to safely attach to running Python processes without "
"stopping or restarting them. This is a significant enhancement to Python's "
"debugging capabilities, meaning that unsafe alternatives are no longer "
"required."
msgstr ""
"Python 3.14 introduz uma interface de depuração sem sobrecarga que permite "
"que depuradores e perfiladores se conectem com segurança a processos Python "
"em execução sem interrompê-los ou reiniciá-los. Esta é uma melhoria "
"significativa nos recursos de depuração do Python, o que significa que "
"alternativas inseguras não são mais necessárias."

#: ../../whatsnew/3.14.rst:394
msgid ""
"The new interface provides safe execution points for attaching debugger code "
"without modifying the interpreter's normal execution path or adding any "
"overhead at runtime. Due to this, tools can now inspect and interact with "
"Python applications in real-time, which is a crucial capability for high-"
"availability systems and production environments."
msgstr ""
"A nova interface fornece pontos de execução seguros para anexar código do "
"depurador sem modificar o caminho de execução normal do interpretador ou "
"adicionar qualquer sobrecarga em tempo de execução. Graças a isso, as "
"ferramentas agora podem inspecionar e interagir com aplicações Python em "
"tempo real, um recurso crucial para sistemas de alta disponibilidade e "
"ambientes de produção."

#: ../../whatsnew/3.14.rst:401
msgid ""
"For convenience, this interface is implemented in the :func:`sys."
"remote_exec` function. For example:"
msgstr ""
"Por conveniência, essa interface é implementada na função :func:`sys."
"remote_exec`. Por exemplo:"

#: ../../whatsnew/3.14.rst:404
msgid ""
"import sys\n"
"from tempfile import NamedTemporaryFile\n"
"\n"
"with NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:\n"
"    script_path = f.name\n"
"    f.write(f'import my_debugger; my_debugger.connect({os.getpid()})')\n"
"\n"
"# Execute in process with PID 1234\n"
"print('Behold! An offering:')\n"
"sys.remote_exec(1234, script_path)"
msgstr ""
"import sys\n"
"from tempfile import NamedTemporaryFile\n"
"\n"
"with NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:\n"
"    script_path = f.name\n"
"    f.write(f'import my_debugger; my_debugger.connect({os.getpid()})')\n"
"\n"
"# Executa no processo com PID 1234\n"
"print('Behold! An offering:')\n"
"sys.remote_exec(1234, script_path)"

#: ../../whatsnew/3.14.rst:418
msgid ""
"This function allows sending Python code to be executed in a target process "
"at the next safe execution point. However, tool authors can also implement "
"the protocol directly as described in the PEP, which details the underlying "
"mechanisms used to safely attach to running processes."
msgstr ""
"Esta função permite o envio de código Python para ser executado em um "
"processo de destino no próximo ponto de execução seguro. No entanto, os "
"autores da ferramenta também podem implementar o protocolo diretamente, "
"conforme descrito na PEP, que detalha os mecanismos subjacentes usados para "
"anexar com segurança a processos em execução."

#: ../../whatsnew/3.14.rst:424
msgid ""
"The debugging interface has been carefully designed with security in mind "
"and includes several mechanisms to control access:"
msgstr ""
"A interface de depuração foi cuidadosamente projetada com a segurança em "
"mente e inclui vários mecanismos para controlar o acesso:"

#: ../../whatsnew/3.14.rst:427
msgid "A :envvar:`PYTHON_DISABLE_REMOTE_DEBUG` environment variable."
msgstr "Uma variável de ambiente :envvar:`PYTHON_DISABLE_REMOTE_DEBUG`."

#: ../../whatsnew/3.14.rst:428
msgid "A :option:`-X disable-remote-debug` command-line option."
msgstr "Uma opção de linha de comando :option:`-X disable-remote-debug`."

#: ../../whatsnew/3.14.rst:429
msgid ""
"A :option:`--without-remote-debug` configure flag to completely disable the "
"feature at build time."
msgstr ""
"Um sinalizador de configuração :option:`--without-remote-debug` para "
"desabilitar completamente o recurso no momento da construção."

#: ../../whatsnew/3.14.rst:432
msgid ""
"(Contributed by Pablo Galindo Salgado, Matt Wozniski, and Ivona Stojanovic "
"in :gh:`131591`.)"
msgstr ""
"(Contribuição de Pablo Galindo Salgado, Matt Wozniski e Ivona Stojanovic em :"
"gh:`131591`.)"

#: ../../whatsnew/3.14.rst:435
msgid ":pep:`768`."
msgstr ":pep:`768`."

#: ../../whatsnew/3.14.rst:441
msgid "A new type of interpreter"
msgstr "Um novo tipo de interpretador"

#: ../../whatsnew/3.14.rst:443
msgid ""
"A new type of interpreter has been added to CPython. It uses tail calls "
"between small C functions that implement individual Python opcodes, rather "
"than one large C ``case`` statement. For certain newer compilers, this "
"interpreter provides significantly better performance. Preliminary "
"benchmarks suggest a geometric mean of 3-5% faster on the standard "
"``pyperformance`` benchmark suite, depending on platform and architecture. "
"The baseline is Python 3.14 built with Clang 19, without this new "
"interpreter."
msgstr ""
"Um novo tipo de interpretador foi adicionado ao CPython. Ele utiliza "
"chamadas de cauda entre pequenas funções C que implementam opcodes Python "
"individuais, em vez de uma única instrução ``case`` C. Em alguns "
"compiladores mais recentes, este interpretador oferece desempenho "
"significativamente melhor. Benchmarks preliminares sugerem uma média "
"geométrica de 3 a 5% mais rápida no conjunto de benchmarks padrão "
"``pyperformance``, dependendo da plataforma e da arquitetura. A referência é "
"o Python 3.14, construído com o Clang 19, sem este novo interpretador."

#: ../../whatsnew/3.14.rst:452
msgid ""
"This interpreter currently only works with Clang 19 and newer on x86-64 and "
"AArch64 architectures. However, a future release of GCC is expected to "
"support this as well."
msgstr ""
"Atualmente, este interpretador funciona apenas com o Clang 19 e versões mais "
"recentes em arquiteturas x86-64 e AArch64. No entanto, espera-se que uma "
"versão futura do GCC também ofereça suporte a ele."

#: ../../whatsnew/3.14.rst:456
msgid ""
"This feature is opt-in for now. Enabling profile-guided optimization is "
"highly recommendeded when using the new interpreter as it is the only "
"configuration that has been tested and validated for improved performance. "
"For further information, see :option:`--with-tail-call-interp`."
msgstr ""
"Este recurso é opcional por enquanto. É altamente recomendável habilitar a "
"otimização guiada por perfil ao usar o novo interpretador, pois é a única "
"configuração testada e validada para melhorar o desempenho. Para mais "
"informações, consulte :option:`--with-tail-call-interp`."

#: ../../whatsnew/3.14.rst:463
msgid ""
"This is not to be confused with `tail call optimization`__ of Python "
"functions, which is currently not implemented in CPython."
msgstr ""
"Isso não deve ser confundido com a `otimização de chamada de cauda`__ de "
"funções Python, que atualmente não está implementada no CPython."

#: ../../whatsnew/3.14.rst:466
msgid ""
"This new interpreter type is an internal implementation detail of the "
"CPython interpreter.  It doesn't change the visible behavior of Python "
"programs at all.  It can improve their performance, but doesn't change "
"anything else."
msgstr ""
"Este novo tipo de interpretador é um detalhe de implementação interna do "
"interpretador CPython. Ele não altera em nada o comportamento visível dos "
"programas Python. Pode melhorar o desempenho deles, mas não altera nada mais."

#: ../../whatsnew/3.14.rst:472
msgid ""
"(Contributed by Ken Jin in :gh:`128563`, with ideas on how to implement this "
"in CPython by Mark Shannon, Garrett Gu, Haoran Xu, and Josh Haberman.)"
msgstr ""
"(Contribuição de Ken Jin em :gh:`128563`, com ideias sobre como implementar "
"isso em CPython por Mark Shannon, Garrett Gu, Haoran Xu e Josh Haberman.)"

#: ../../whatsnew/3.14.rst:479
msgid "Free-threaded mode improvements"
msgstr "Melhorias no modo com threads livres"

#: ../../whatsnew/3.14.rst:481
msgid ""
"CPython's free-threaded mode (:pep:`703`), initially added in 3.13, has been "
"significantly improved in Python 3.14. The implementation described in PEP "
"703 has been finished, including C API changes, and temporary workarounds in "
"the interpreter were replaced with more permanent solutions. The "
"specializing adaptive interpreter (:pep:`659`) is now enabled in free-"
"threaded mode, which along with many other optimizations greatly improves "
"its performance. The performance penalty on single-threaded code in free-"
"threaded mode is now roughly 5-10%, depending on the platform and C compiler "
"used."
msgstr ""
"O modo de threads livres do CPython (:pep:`703`), adicionado inicialmente na "
"versão 3.13, foi significativamente aprimorado no Python 3.14. A "
"implementação descrita no PEP 703 foi concluída, incluindo alterações na API "
"C, e soluções temporárias no interpretador foram substituídas por soluções "
"mais permanentes. O interpretador adaptativo especializado (:pep:`659`) "
"agora está habilitado no modo de threads livres, o que, juntamente com "
"muitas outras otimizações, melhora significativamente seu desempenho. A "
"perda de desempenho em código de thread única no modo de threads livres "
"agora é de aproximadamente 5 a 10%, dependendo da plataforma e do compilador "
"C utilizados."

#: ../../whatsnew/3.14.rst:492
msgid ""
"From Python 3.14, when compiling extension modules for the free-threaded "
"build of CPython on Windows, the preprocessor variable ``Py_GIL_DISABLED`` "
"now needs to be specified by the build backend, as it will no longer be "
"determined automatically by the C compiler. For a running interpreter, the "
"setting that was used at compile time can be found using :func:`sysconfig."
"get_config_var`."
msgstr ""
"A partir do Python 3.14, ao compilar módulos de extensão para a construção "
"do CPython com threads livres no Windows, a variável de pré-processador "
"``Py_GIL_DISABLED`` agora precisa ser especificada pelo backend de "
"construção, pois não será mais determinada automaticamente pelo compilador "
"C. Para um interpretador em execução, a configuração usada em tempo de "
"compilação pode ser encontrada usando :func:`sysconfig.get_config_var`."

#: ../../whatsnew/3.14.rst:498
msgid ""
"The new :option:`-X context_aware_warnings <-X>` flag controls if :ref:"
"`concurrent safe warnings control <whatsnew314-concurrent-warnings-control>` "
"is enabled. The flag defaults to true for the free-threaded build and false "
"for the GIL-enabled build."
msgstr ""
"O novo sinalizador :option:`-X context_aware_warnings <-X>` controla se o :"
"ref:`controle de avisos seguros concorrentes <whatsnew314-concurrent-"
"warnings-control>` está habilitado. O sinalizador padrão é true para a "
"construção com threads livres e false para a construção com a GIL habilitada."

#: ../../whatsnew/3.14.rst:503
msgid ""
"A new :data:`~sys.flags.thread_inherit_context` flag has been added, which "
"if enabled means that threads created with :class:`threading.Thread` start "
"with a copy of the :class:`~contextvars.Context()` of the caller of :meth:"
"`~threading.Thread.start`.  Most significantly, this makes the warning "
"filtering context established by :class:`~warnings.catch_warnings` be "
"\"inherited\" by threads (or asyncio tasks) started within that context.  It "
"also affects other modules that use context variables, such as the :mod:"
"`decimal` context manager. This flag defaults to true for the free-threaded "
"build and false for the GIL-enabled build."
msgstr ""
"Um novo sinalizador :data:`~sys.flags.thread_inherit_context` foi "
"adicionado, o que, se habilitado, significa que threads criadas com :class:"
"`threading.Thread` iniciam com uma cópia de :class:`~contextvars.Context()` "
"do chamador de :meth:`~threading.Thread.start`. Mais significativamente, "
"isso faz com que o contexto de filtragem de avisos estabelecido por :class:"
"`~warnings.catch_warnings` seja \"herdado\" por threads (ou tarefas "
"assíncronas) iniciadas dentro desse contexto. Isso também afeta outros "
"módulos que usam variáveis de contexto, como o gerenciador de contexto :mod:"
"`decimal`. Este sinalizador assume como padrão true para a construção com "
"threads livres e false para a construção com a GIL habilitada."

#: ../../whatsnew/3.14.rst:514
msgid ""
"(Contributed by Sam Gross, Matt Page, Neil Schemenauer, Thomas Wouters, "
"Donghee Na, Kirill Podoprigora, Ken Jin, Itamar Oren, Brett Simmers, Dino "
"Viehland, Nathan Goldbaum, Ralf Gommers, Lysandros Nikolaou, Kumar Aditya, "
"Edgar Margffoy, and many others. Some of these contributors are employed by "
"Meta, which has continued to provide significant engineering resources to "
"support this project.)"
msgstr ""
"(Contribuição de Sam Gross, Matt Page, Neil Schemenauer, Thomas Wouters, "
"Donghee Na, Kirill Podoprigora, Ken Jin, Itamar Oren, Brett Simmers, Dino "
"Viehland, Nathan Goldbaum, Ralf Gommers, Lysandros Nikolaou, Kumar Aditya, "
"Edgar Margffoy e muitos outros. Alguns desses colaboradores são funcionários "
"da Meta, que continuou a fornecer recursos de engenharia significativos para "
"dar suporte a este projeto.)"

#: ../../whatsnew/3.14.rst:525
msgid "Improved error messages"
msgstr "Mensagens de erro melhoradas"

#: ../../whatsnew/3.14.rst:527
msgid ""
"The interpreter now provides helpful suggestions when it detects typos in "
"Python keywords. When a word that closely resembles a Python keyword is "
"encountered, the interpreter will suggest the correct keyword in the error "
"message. This feature helps programmers quickly identify and fix common "
"typing mistakes. For example:"
msgstr ""
"O interpretador agora fornece sugestões úteis ao detectar erros de digitação "
"em palavras reservadas do Python. Ao encontrar uma palavra que se assemelha "
"muito a uma palavra reservada do Python, o interpretador sugere a palavra "
"reservada correta na mensagem de erro. Esse recurso ajuda os programadores a "
"identificar e corrigir rapidamente erros comuns de digitação. Por exemplo:"

#: ../../whatsnew/3.14.rst:533
msgid ""
">>> whille True:\n"
"...     pass\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1\n"
"    whille True:\n"
"    ^^^^^^\n"
"SyntaxError: invalid syntax. Did you mean 'while'?"
msgstr ""
">>> whille True:\n"
"...     pass\n"
"Traceback (most recent call last):\n"
"  File \"<stdin>\", line 1\n"
"    whille True:\n"
"    ^^^^^^\n"
"SyntaxError: invalid syntax. Did you mean 'while'?"

#: ../../whatsnew/3.14.rst:543
msgid ""
"While the feature focuses on the most common cases, some variations of "
"misspellings may still result in regular syntax errors. (Contributed by "
"Pablo Galindo in :gh:`132449`.)"
msgstr ""
"Embora o recurso se concentre nos casos mais comuns, algumas variações de "
"erros ortográficos ainda podem resultar em erros de sintaxe comuns. "
"(Contribuição de Pablo Galindo em :gh:`132449`.)"

#: ../../whatsnew/3.14.rst:547
msgid ""
":keyword:`elif` statements that follow an :keyword:`else` block now have a "
"specific error message. (Contributed by Steele Farnsworth in :gh:`129902`.)"
msgstr ""
"Instruções :keyword:`elif` que seguem um bloco :keyword:`else` agora têm uma "
"mensagem de erro específica. (Contribuição de Steele Farnsworth em :gh:"
"`129902`.)"

#: ../../whatsnew/3.14.rst:551
msgid ""
">>> if who == \"me\":\n"
"...     print(\"It's me!\")\n"
"... else:\n"
"...     print(\"It's not me!\")\n"
"... elif who is None:\n"
"...     print(\"Who is it?\")\n"
"File \"<stdin>\", line 5\n"
"  elif who is None:\n"
"  ^^^^\n"
"SyntaxError: 'elif' block follows an 'else' block"
msgstr ""
">>> if who == \"eu\":\n"
"...     print(\"Sou eu!\")\n"
"... else:\n"
"...     print(\"Não sou eu!\")\n"
"... elif who is None:\n"
"...     print(\"Quem é?\")\n"
"File \"<stdin>\", line 5\n"
"  elif who is None:\n"
"  ^^^^\n"
"SyntaxError: 'elif' block follows an 'else' block"

#: ../../whatsnew/3.14.rst:564
msgid ""
"If a statement is passed to the :ref:`if_expr` after :keyword:`else`, or one "
"of :keyword:`pass`, :keyword:`break`, or :keyword:`continue` is passed "
"before :keyword:`if`, then the error message highlights where the :token:"
"`~python-grammar:expression` is required. (Contributed by Sergey Miryanov "
"in :gh:`129515`.)"
msgstr ""
"Se uma instrução for passada para :ref:`if_expr` após :keyword:`else`, ou "
"uma dentre :keyword:`pass`, :keyword:`break` ou :keyword:`continue` for "
"passada antes de :keyword:`if`, a mensagem de erro destacará onde a :token:"
"`expressão <~python-grammar:expression>` é necessária. (Contribuição de "
"Sergey Miryanov em :gh:`129515`.)"

#: ../../whatsnew/3.14.rst:570
msgid ""
">>> x = 1 if True else pass\n"
"Traceback (most recent call last):\n"
"  File \"<string>\", line 1\n"
"    x = 1 if True else pass\n"
"                       ^^^^\n"
"SyntaxError: expected expression after 'else', but statement is given\n"
"\n"
">>> x = continue if True else break\n"
"Traceback (most recent call last):\n"
"  File \"<string>\", line 1\n"
"    x = continue if True else break\n"
"        ^^^^^^^^\n"
"SyntaxError: expected expression before 'if', but statement is given"
msgstr ""
">>> x = 1 if True else pass\n"
"Traceback (most recent call last):\n"
"  File \"<string>\", line 1\n"
"    x = 1 if True else pass\n"
"                       ^^^^\n"
"SyntaxError: expected expression after 'else', but statement is given\n"
"\n"
">>> x = continue if True else break\n"
"Traceback (most recent call last):\n"
"  File \"<string>\", line 1\n"
"    x = continue if True else break\n"
"        ^^^^^^^^\n"
"SyntaxError: expected expression before 'if', but statement is given"

#: ../../whatsnew/3.14.rst:586
msgid ""
"When incorrectly closed strings are detected, the error message suggests "
"that the string may be intended to be part of the string. (Contributed by "
"Pablo Galindo in :gh:`88535`.)"
msgstr ""
"Quando strings fechadas incorretamente são detectadas, a mensagem de erro "
"sugere que pode ser que a intenção era a string ser parte da string. "
"(Contribuição de Pablo Galindo em :gh:`88535`.)"

#: ../../whatsnew/3.14.rst:590
msgid ""
">>> \"The interesting object \"The important object\" is very important\"\n"
"Traceback (most recent call last):\n"
"SyntaxError: invalid syntax. Is this intended to be part of the string?"
msgstr ""
">>> \"O objeto interessante \"O objeto interessante\" é muito importante\"\n"
"Traceback (most recent call last):\n"
"SyntaxError: invalid syntax. Is this intended to be part of the string?"

#: ../../whatsnew/3.14.rst:596
msgid ""
"When strings have incompatible prefixes, the error now shows which prefixes "
"are incompatible. (Contributed by Nikita Sobolev in :gh:`133197`.)"
msgstr ""
"Quando strings têm prefixos incompatíveis, o erro agora mostra quais "
"prefixos são incompatíveis. (Contribuição de Nikita Sobolev em :gh:`133197`.)"

#: ../../whatsnew/3.14.rst:600
msgid ""
">>> ub'abc'\n"
"  File \"<python-input-0>\", line 1\n"
"    ub'abc'\n"
"    ^^\n"
"SyntaxError: 'u' and 'b' prefixes are incompatible"
msgstr ""
">>> ub'abc'\n"
"  File \"<python-input-0>\", line 1\n"
"    ub'abc'\n"
"    ^^\n"
"SyntaxError: 'u' and 'b' prefixes are incompatible"

#: ../../whatsnew/3.14.rst:608
msgid "Improved error messages when using ``as`` with incompatible targets in:"
msgstr ""
"Mensagens de erro aprimoradas ao usar ``as`` com alvos incompatíveis em:"

#: ../../whatsnew/3.14.rst:610
msgid "Imports: ``import ... as ...``"
msgstr "Importações: ``import ... as ...``"

#: ../../whatsnew/3.14.rst:611
msgid "From imports: ``from ... import ... as ...``"
msgstr "Importações \"from\": ``from ... import ... as ...``"

#: ../../whatsnew/3.14.rst:612
msgid "Except handlers: ``except ... as ...``"
msgstr "Manipuladores \"except\": ``except ... as ...``"

#: ../../whatsnew/3.14.rst:613
msgid "Pattern-match cases: ``case ... as ...``"
msgstr "Casos de correspondência de padrão: ``case ... as ...``"

#: ../../whatsnew/3.14.rst:615
msgid ""
"(Contributed by Nikita Sobolev in :gh:`123539`, :gh:`123562`, and :gh:"
"`123440`.)"
msgstr ""
"(Contribuição de Nikita Sobolev in :gh:`123539`, :gh:`123562` e :gh:"
"`123440`.)"

#: ../../whatsnew/3.14.rst:617
msgid ""
"Improved error message when trying to add an instance of an unhashable type "
"to a :class:`dict` or :class:`set`. (Contributed by CF Bolz-Tereick and "
"Victor Stinner in :gh:`132828`.)"
msgstr ""
"Mensagem de erro aprimorada ao tentar adicionar uma instância de um tipo não-"
"hasheável a um :class:`dict` ou :class:`set`. (Contribuição de CF Bolz-"
"Tereick e Victor Stinner em :gh:`132828`.)"

#: ../../whatsnew/3.14.rst:621
msgid ""
">>> s = set()\n"
">>> s.add({'pages': 12, 'grade': 'A'})\n"
"Traceback (most recent call last):\n"
"  File \"<python-input-1>\", line 1, in <module>\n"
"    s.add({'pages': 12, 'grade': 'A'})\n"
"    ~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"
"TypeError: cannot use 'dict' as a set element (unhashable type: 'dict')\n"
">>> d = {}\n"
">>> l = [1, 2, 3]\n"
">>> d[l] = 12\n"
"Traceback (most recent call last):\n"
"  File \"<python-input-4>\", line 1, in <module>\n"
"    d[l] = 12\n"
"    ~^^^\n"
"TypeError: cannot use 'list' as a dict key (unhashable type: 'list')"
msgstr ""
">>> s = set()\n"
">>> s.add({'pages': 12, 'grade': 'A'})\n"
"Traceback (most recent call last):\n"
"  File \"<python-input-1>\", line 1, in <module>\n"
"    s.add({'pages': 12, 'grade': 'A'})\n"
"    ~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"
"TypeError: cannot use 'dict' as a set element (unhashable type: 'dict')\n"
">>> d = {}\n"
">>> l = [1, 2, 3]\n"
">>> d[l] = 12\n"
"Traceback (most recent call last):\n"
"  File \"<python-input-4>\", line 1, in <module>\n"
"    d[l] = 12\n"
"    ~^^^\n"
"TypeError: cannot use 'list' as a dict key (unhashable type: 'list')"

#: ../../whatsnew/3.14.rst:639
msgid ""
"Improved error message when an object supporting the synchronous context "
"manager protocol is entered using :keyword:`async with` instead of :keyword:"
"`with`, and vice versa for the asynchronous context manager protocol. "
"(Contributed by Bénédikt Tran in :gh:`128398`.)"
msgstr ""
"Melhoria na mensagem de erro quando um objeto que oferece suporte ao "
"protocolo do gerenciador de contexto síncrono é inserido usando :keyword:"
"`async with` em vez de :keyword:`with`, e vice-versa para o protocolo do "
"gerenciador de contexto assíncrono. (Contribuição de Bénédikt Tran em :gh:"
"`128398`.)"

#: ../../whatsnew/3.14.rst:649
msgid ":pep:`784`: Zstandard support in the standard library"
msgstr ":pep:`784`: suporte ao Zstandard na biblioteca padrão"

#: ../../whatsnew/3.14.rst:651
msgid ""
"The new :mod:`!compression` package contains modules :mod:`!compression."
"lzma`, :mod:`!compression.bz2`, :mod:`!compression.gzip` and :mod:`!"
"compression.zlib` which re-export the :mod:`lzma`, :mod:`bz2`, :mod:`gzip` "
"and :mod:`zlib` modules respectively. The new import names under :mod:`!"
"compression` are the preferred names for importing these compression modules "
"from Python 3.14. However, the existing modules names have not been "
"deprecated. Any deprecation or removal of the existing compression modules "
"will occur no sooner than five years after the release of 3.14."
msgstr ""
"O novo pacote :mod:`!compression` contém os módulos :mod:`!compression."
"lzma`, :mod:`!compression.bz2`, :mod:`!compression.gzip` e :mod:`!"
"compression.zlib`, que reexportam os módulos :mod:`lzma`, :mod:`bz2`, :mod:"
"`gzip` e :mod:`zlib`, respectivamente. Os novos nomes de importação em :mod:"
"`!compression` são os nomes preferidos para a importação desses módulos de "
"compactação no Python 3.14. No entanto, os nomes dos módulos existentes não "
"foram descontinuados. Qualquer descontinuação ou remoção dos módulos de "
"compressão existentes ocorrerá, no mínimo, cinco anos após o lançamento da "
"versão 3.14."

#: ../../whatsnew/3.14.rst:660
msgid ""
"The new :mod:`!compression.zstd` module provides compression and "
"decompression APIs for the Zstandard format via bindings to `Meta's zstd "
"library <https://facebook.github.io/zstd/>`__. Zstandard is a widely "
"adopted, highly efficient, and fast compression format. In addition to the "
"APIs introduced in :mod:`!compression.zstd`, support for reading and writing "
"Zstandard compressed archives has been added to the :mod:`tarfile`, :mod:"
"`zipfile`, and :mod:`shutil` modules."
msgstr ""
"O novo módulo :mod:`!compression.zstd` fornece APIs de compactação e "
"descompactação para o formato Zstandard por meio de ligações à `biblioteca "
"zstd da Meta <https://facebook.github.io/zstd/>`__. O Zstandard é um formato "
"de compactação amplamente adotado, altamente eficiente e rápido. Além das "
"APIs introduzidas em :mod:`!compression.zstd`, o suporte para leitura e "
"gravação de arquivos compactados do Zstandard foi adicionado aos módulos :"
"mod:`tarfile`, :mod:`zipfile` e :mod:`shutil`."

#: ../../whatsnew/3.14.rst:668
msgid "Here's an example of using the new module to compress some data:"
msgstr ""
"Aqui está um exemplo de uso do novo módulo para compactar alguns dados:"

#: ../../whatsnew/3.14.rst:670
msgid ""
"from compression import zstd\n"
"import math\n"
"\n"
"data = str(math.pi).encode() * 20\n"
"compressed = zstd.compress(data)\n"
"ratio = len(compressed) / len(data)\n"
"print(f\"Achieved compression ratio of {ratio}\")"
msgstr ""
"from compression import zstd\n"
"import math\n"
"\n"
"data = str(math.pi).encode() * 20\n"
"compressed = zstd.compress(data)\n"
"ratio = len(compressed) / len(data)\n"
"print(f\"Achieved compression ratio of {ratio}\")"

#: ../../whatsnew/3.14.rst:680
msgid ""
"As can be seen, the API is similar to the APIs of the :mod:`!lzma` and :mod:"
"`!bz2` modules."
msgstr ""
"Como pode ser visto, a API é semelhante às APIs dos módulos :mod:`!lzma` e :"
"mod:`!bz2`."

#: ../../whatsnew/3.14.rst:683
msgid ""
"(Contributed by Emma Harper Smith, Adam Turner, Gregory P. Smith, Tomas "
"Roun, Victor Stinner, and Rogdham in :gh:`132983`.)"
msgstr ""
"(Contribuição de Emma Harper Smith, Adam Turner, Gregory P. Smith, Tomas "
"Roun, Victor Stinner e Rogdham em :gh:`132983`.)"

#: ../../whatsnew/3.14.rst:686
msgid ":pep:`784`."
msgstr ":pep:`784`."

#: ../../whatsnew/3.14.rst:692
msgid "Asyncio introspection capabilities"
msgstr "Capacidades de introspecção assíncrona"

#: ../../whatsnew/3.14.rst:694
msgid ""
"Added a new command-line interface to inspect running Python processes using "
"asynchronous tasks, available via ``python -m asyncio ps PID`` or ``python -"
"m asyncio pstree PID``."
msgstr ""
"Foi adicionada uma nova interface de linha de comando para inspecionar "
"processos Python em execução que utilizam tarefas assíncronas, disponível "
"via ``python -m asyncio ps PID`` ou ``python -m asyncio pstree PID``."

#: ../../whatsnew/3.14.rst:698
msgid ""
"The ``ps`` subcommand inspects the given process ID (PID) and displays "
"information about currently running asyncio tasks. It outputs a task table: "
"a flat listing of all tasks, their names, their coroutine stacks, and which "
"tasks are awaiting them."
msgstr ""
"O subcomando ``ps`` inspeciona o ID do processo (PID) fornecido e exibe "
"informações sobre as tarefas assíncronas em execução. Ela gera uma tabela de "
"tarefas: uma lista simples de todas as tarefas, seus nomes, suas pilhas de "
"corrotinas e quais tarefas as aguardam."

#: ../../whatsnew/3.14.rst:704
msgid ""
"The ``pstree`` subcommand fetches the same information, but instead renders "
"a visual async call tree, showing coroutine relationships in a hierarchical "
"format. This command is particularly useful for debugging long-running or "
"stuck asynchronous programs. It can help developers quickly identify where a "
"program is blocked, what tasks are pending, and how coroutines are chained "
"together."
msgstr ""
"O subcomando ``pstree`` busca as mesmas informações, mas em vez disso "
"renderiza uma árvore de chamadas assíncrona visual, mostrando os "
"relacionamentos das corrotinas em um formato hierárquico. Este comando é "
"particularmente útil para depurar programas assíncronos de longa duração ou "
"travados. Ele pode ajudar os desenvolvedores a identificar rapidamente onde "
"um programa está bloqueado, quais tarefas estão pendentes e como as "
"corrotinas estão encadeadas."

#: ../../whatsnew/3.14.rst:711
msgid "For example given this code:"
msgstr "Por exemplo, dado este código:"

#: ../../whatsnew/3.14.rst:713
msgid ""
"import asyncio\n"
"\n"
"async def play_track(track):\n"
"    await asyncio.sleep(5)\n"
"    print(f'🎵 Finished: {track}')\n"
"\n"
"async def play_album(name, tracks):\n"
"    async with asyncio.TaskGroup() as tg:\n"
"        for track in tracks:\n"
"            tg.create_task(play_track(track), name=track)\n"
"\n"
"async def main():\n"
"    async with asyncio.TaskGroup() as tg:\n"
"        tg.create_task(\n"
"          play_album('Sundowning', ['TNDNBTG', 'Levitate']),\n"
"          name='Sundowning')\n"
"        tg.create_task(\n"
"          play_album('TMBTE', ['DYWTYLM', 'Aqua Regia']),\n"
"          name='TMBTE')\n"
"\n"
"if __name__ == '__main__':\n"
"    asyncio.run(main())"
msgstr ""
"import asyncio\n"
"\n"
"async def play_track(track):\n"
"    await asyncio.sleep(5)\n"
"    print(f'🎵 Finished: {track}')\n"
"\n"
"async def play_album(name, tracks):\n"
"    async with asyncio.TaskGroup() as tg:\n"
"        for track in tracks:\n"
"            tg.create_task(play_track(track), name=track)\n"
"\n"
"async def main():\n"
"    async with asyncio.TaskGroup() as tg:\n"
"        tg.create_task(\n"
"          play_album('Sundowning', ['TNDNBTG', 'Levitate']),\n"
"          name='Sundowning')\n"
"        tg.create_task(\n"
"          play_album('TMBTE', ['DYWTYLM', 'Aqua Regia']),\n"
"          name='TMBTE')\n"
"\n"
"if __name__ == '__main__':\n"
"    asyncio.run(main())"

#: ../../whatsnew/3.14.rst:738
msgid ""
"Executing the new tool on the running process will yield a table like this:"
msgstr ""
"Executar a nova ferramenta no processo em execução produzirá uma tabela como "
"esta:"

#: ../../whatsnew/3.14.rst:740
msgid ""
"python -m asyncio ps 12345\n"
"\n"
"tid        task id              task name            coroutine "
"stack                                    awaiter "
"chain                                      awaiter name    awaiter id\n"
"------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n"
"1935500    0x7fc930c18050       Task-1               TaskGroup._aexit -> "
"TaskGroup.__aexit__ -> "
"main                                                                       "
"0x0\n"
"1935500    0x7fc930c18230       Sundowning           TaskGroup._aexit -> "
"TaskGroup.__aexit__ -> album   TaskGroup._aexit -> TaskGroup.__aexit__ -> "
"main    Task-1          0x7fc930c18050\n"
"1935500    0x7fc93173fa50       TMBTE                TaskGroup._aexit -> "
"TaskGroup.__aexit__ -> album   TaskGroup._aexit -> TaskGroup.__aexit__ -> "
"main    Task-1          0x7fc930c18050\n"
"1935500    0x7fc93173fdf0       TNDNBTG              sleep -> "
"play                                      TaskGroup._aexit -> TaskGroup."
"__aexit__ -> album   Sundowning      0x7fc930c18230\n"
"1935500    0x7fc930d32510       Levitate             sleep -> "
"play                                      TaskGroup._aexit -> TaskGroup."
"__aexit__ -> album   Sundowning      0x7fc930c18230\n"
"1935500    0x7fc930d32890       DYWTYLM              sleep -> "
"play                                      TaskGroup._aexit -> TaskGroup."
"__aexit__ -> album   TMBTE           0x7fc93173fa50\n"
"1935500    0x7fc93161ec30       Aqua Regia           sleep -> "
"play                                      TaskGroup._aexit -> TaskGroup."
"__aexit__ -> album   TMBTE           0x7fc93173fa50"
msgstr ""
"python -m asyncio ps 12345\n"
"\n"
"tid        task id              task name            coroutine "
"stack                                    awaiter "
"chain                                      awaiter name    awaiter id\n"
"------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n"
"1935500    0x7fc930c18050       Task-1               TaskGroup._aexit -> "
"TaskGroup.__aexit__ -> "
"main                                                                       "
"0x0\n"
"1935500    0x7fc930c18230       Sundowning           TaskGroup._aexit -> "
"TaskGroup.__aexit__ -> album   TaskGroup._aexit -> TaskGroup.__aexit__ -> "
"main    Task-1          0x7fc930c18050\n"
"1935500    0x7fc93173fa50       TMBTE                TaskGroup._aexit -> "
"TaskGroup.__aexit__ -> album   TaskGroup._aexit -> TaskGroup.__aexit__ -> "
"main    Task-1          0x7fc930c18050\n"
"1935500    0x7fc93173fdf0       TNDNBTG              sleep -> "
"play                                      TaskGroup._aexit -> TaskGroup."
"__aexit__ -> album   Sundowning      0x7fc930c18230\n"
"1935500    0x7fc930d32510       Levitate             sleep -> "
"play                                      TaskGroup._aexit -> TaskGroup."
"__aexit__ -> album   Sundowning      0x7fc930c18230\n"
"1935500    0x7fc930d32890       DYWTYLM              sleep -> "
"play                                      TaskGroup._aexit -> TaskGroup."
"__aexit__ -> album   TMBTE           0x7fc93173fa50\n"
"1935500    0x7fc93161ec30       Aqua Regia           sleep -> "
"play                                      TaskGroup._aexit -> TaskGroup."
"__aexit__ -> album   TMBTE           0x7fc93173fa50"

#: ../../whatsnew/3.14.rst:754
msgid "or a tree like this:"
msgstr "ou uma árvore como esta:"

#: ../../whatsnew/3.14.rst:756
msgid ""
"python -m asyncio pstree 12345\n"
"\n"
"└── (T) Task-1\n"
"    └──  main example.py:13\n"
"        └──  TaskGroup.__aexit__ Lib/asyncio/taskgroups.py:72\n"
"            └──  TaskGroup._aexit Lib/asyncio/taskgroups.py:121\n"
"                ├── (T) Sundowning\n"
"                │   └──  album example.py:8\n"
"                │       └──  TaskGroup.__aexit__ Lib/asyncio/taskgroups."
"py:72\n"
"                │           └──  TaskGroup._aexit Lib/asyncio/taskgroups."
"py:121\n"
"                │               ├── (T) TNDNBTG\n"
"                │               │   └──  play example.py:4\n"
"                │               │       └──  sleep Lib/asyncio/tasks.py:702\n"
"                │               └── (T) Levitate\n"
"                │                   └──  play example.py:4\n"
"                │                       └──  sleep Lib/asyncio/tasks.py:702\n"
"                └── (T) TMBTE\n"
"                    └──  album example.py:8\n"
"                        └──  TaskGroup.__aexit__ Lib/asyncio/taskgroups."
"py:72\n"
"                            └──  TaskGroup._aexit Lib/asyncio/taskgroups."
"py:121\n"
"                                ├── (T) DYWTYLM\n"
"                                │   └──  play example.py:4\n"
"                                │       └──  sleep Lib/asyncio/tasks.py:702\n"
"                                └── (T) Aqua Regia\n"
"                                    └──  play example.py:4\n"
"                                        └──  sleep Lib/asyncio/tasks.py:702"
msgstr ""
"python -m asyncio pstree 12345\n"
"\n"
"└── (T) Task-1\n"
"    └──  main example.py:13\n"
"        └──  TaskGroup.__aexit__ Lib/asyncio/taskgroups.py:72\n"
"            └──  TaskGroup._aexit Lib/asyncio/taskgroups.py:121\n"
"                ├── (T) Sundowning\n"
"                │   └──  album example.py:8\n"
"                │       └──  TaskGroup.__aexit__ Lib/asyncio/taskgroups."
"py:72\n"
"                │           └──  TaskGroup._aexit Lib/asyncio/taskgroups."
"py:121\n"
"                │               ├── (T) TNDNBTG\n"
"                │               │   └──  play example.py:4\n"
"                │               │       └──  sleep Lib/asyncio/tasks.py:702\n"
"                │               └── (T) Levitate\n"
"                │                   └──  play example.py:4\n"
"                │                       └──  sleep Lib/asyncio/tasks.py:702\n"
"                └── (T) TMBTE\n"
"                    └──  album example.py:8\n"
"                        └──  TaskGroup.__aexit__ Lib/asyncio/taskgroups."
"py:72\n"
"                            └──  TaskGroup._aexit Lib/asyncio/taskgroups."
"py:121\n"
"                                ├── (T) DYWTYLM\n"
"                                │   └──  play example.py:4\n"
"                                │       └──  sleep Lib/asyncio/tasks.py:702\n"
"                                └── (T) Aqua Regia\n"
"                                    └──  play example.py:4\n"
"                                        └──  sleep Lib/asyncio/tasks.py:702"

#: ../../whatsnew/3.14.rst:785
msgid ""
"If a cycle is detected in the async await graph (which could indicate a "
"programming issue), the tool raises an error and lists the cycle paths that "
"prevent tree construction:"
msgstr ""
"Se um ciclo for detectado no grafo async await (o que pode indicar um "
"problema de programação), a ferramenta levanta um erro e lista os caminhos "
"de ciclo que impedem a construção da árvore:"

#: ../../whatsnew/3.14.rst:789
msgid ""
"python -m asyncio pstree 12345\n"
"\n"
"ERROR: await-graph contains cycles - cannot print a tree!\n"
"\n"
"cycle: Task-2 → Task-3 → Task-2"
msgstr ""
"python -m asyncio pstree 12345\n"
"\n"
"ERROR: await-graph contains cycles - cannot print a tree!\n"
"\n"
"cycle: Task-2 → Task-3 → Task-2"

#: ../../whatsnew/3.14.rst:797
msgid ""
"(Contributed by Pablo Galindo, Łukasz Langa, Yury Selivanov, and Marta Gomez "
"Macias in :gh:`91048`.)"
msgstr ""
"(Contribuição de Pablo Galindo, Łukasz Langa, Yury Selivanov e Marta Gomez "
"Macias em :gh:`91048`.)"

#: ../../whatsnew/3.14.rst:804
msgid "Concurrent safe warnings control"
msgstr "Controle de avisos seguros simultâneos"

#: ../../whatsnew/3.14.rst:806
msgid ""
"The :class:`warnings.catch_warnings` context manager will now optionally use "
"a context variable for warning filters. This is enabled by setting the :data:"
"`~sys.flags.context_aware_warnings` flag, either with the ``-X`` command-"
"line option or an environment variable. This gives predictable warnings "
"control when using :class:`~warnings.catch_warnings` combined with multiple "
"threads or asynchronous tasks. The flag defaults to true for the free-"
"threaded build and false for the GIL-enabled build."
msgstr ""
"O gerenciador de contexto :class:`warnings.catch_warnings` agora usará "
"opcionalmente uma variável de contexto para filtros de aviso. Isso é "
"habilitado definindo o sinalizador :data:`~sys.flags."
"context_aware_warnings`, seja com a opção de linha de comando ``-X`` ou com "
"uma variável de ambiente. Isso fornece controle previsível de avisos ao "
"usar :class:`~warnings.catch_warnings` combinado com múltiplas threads ou "
"tarefas assíncronas. O sinalizador padrão é true para a construção com "
"threads livres e false para a construção com GIL habilitada."

#: ../../whatsnew/3.14.rst:814
msgid "(Contributed by Neil Schemenauer and Kumar Aditya in :gh:`130010`.)"
msgstr "(Contribuição de Neil Schemenauer e Kumar Aditya em :gh:`130010`.)"

#: ../../whatsnew/3.14.rst:818
msgid "Other language changes"
msgstr "Outras mudanças de linguagem"

#: ../../whatsnew/3.14.rst:820
msgid ""
"All Windows code pages are now supported as 'cpXXX' codecs on Windows. "
"(Contributed by Serhiy Storchaka in :gh:`123803`.)"
msgstr ""
"Todas as páginas de código do Windows agora são suportadas como codecs "
"'cpXXX' no Windows. (Contribuição de Serhiy Storchaka em :gh:`123803`.)"

#: ../../whatsnew/3.14.rst:823
msgid ""
"Implement mixed-mode arithmetic rules combining real and complex numbers as "
"specified by the C standard since C99. (Contributed by Sergey B Kirpichev "
"in :gh:`69639`.)"
msgstr ""
"Implementa regras aritméticas de modo misto combinando números reais e "
"complexos, conforme especificado pelo C padrão desde C99. (Contribuição de "
"Sergey B Kirpichev em :gh:`69639`.)"

#: ../../whatsnew/3.14.rst:827
msgid ""
"More syntax errors are now detected regardless of optimisation and the :"
"option:`-O` command-line option. This includes writes to ``__debug__``, "
"incorrect use of :keyword:`await`, and asynchronous comprehensions outside "
"asynchronous functions. For example, ``python -O -c 'assert (__debug__ := "
"1)'`` or ``python -O -c 'assert await 1'`` now produce :exc:`SyntaxError`\\ "
"s. (Contributed by Irit Katriel and Jelle Zijlstra in :gh:`122245` & :gh:"
"`121637`.)"
msgstr ""
"Mais erros de sintaxe agora são detectados, independentemente da otimização "
"e da opção de linha de comando :option:`-O`. Isso inclui escritas no "
"``__debug__``, uso incorreto de :keyword:`await` e compreensões assíncronas "
"fora de funções assíncronas. Por exemplo, ``python -O -c 'assert (__debug__ :"
"= 1)'`` ou ``python -O -c 'assert await 1'`` agora produzem :exc:"
"`SyntaxError`\\ s. (Contribuição de Irit Katriel e Jelle Zijlstra em :gh:"
"`122245` e :gh:`121637`.)"

#: ../../whatsnew/3.14.rst:835
msgid ""
"When subclassing a pure C type, the C slots for the new type are no longer "
"replaced with a wrapped version on class creation if they are not explicitly "
"overridden in the subclass. (Contributed by Tomasz Pytel in :gh:`132284`.)"
msgstr ""
"Ao criar uma subclasse de um tipo C puro, os slots C para o novo tipo não "
"são mais substituídos por uma versão encapsulada na criação da classe, caso "
"não sejam explicitamente substituídos na subclasse. (Contribuição de Tomasz "
"Pytel em :gh:`132284`.)"

#: ../../whatsnew/3.14.rst:842
msgid "Built-ins"
msgstr "Embutidos"

#: ../../whatsnew/3.14.rst:844
msgid ""
"The :meth:`bytes.fromhex` and :meth:`bytearray.fromhex` methods now accept "
"ASCII :class:`bytes` and :term:`bytes-like objects <bytes-like object>`. "
"(Contributed by Daniel Pope in :gh:`129349`.)"
msgstr ""
"Os métodos :meth:`bytes.fromhex` e :meth:`bytearray.fromhex` agora aceitam "
"objetos ASCII :class:`bytes` e :term:`similares <bytes-like object>`. "
"(Contribuição de Daniel Pope em :gh:`129349`.)"

#: ../../whatsnew/3.14.rst:848
msgid ""
"Add class methods :meth:`float.from_number` and :meth:`complex.from_number` "
"to convert a number to :class:`float` or :class:`complex` type "
"correspondingly. They raise a :exc:`TypeError` if the argument is not a real "
"number. (Contributed by Serhiy Storchaka in :gh:`84978`.)"
msgstr ""
"Adiciona os métodos de classe :meth:`float.from_number` e :meth:`complex."
"from_number` para converter um número para o tipo :class:`float` ou :class:"
"`complex`, respectivamente. Eles levantam um :exc:`TypeError` se o argumento "
"não for um número real. (Contribuição de Serhiy Storchaka em :gh:`84978`.)"

#: ../../whatsnew/3.14.rst:853
msgid ""
"Support underscore and comma as thousands separators in the fractional part "
"for floating-point presentation types of the new-style string formatting "
"(with :func:`format` or :ref:`f-strings`). (Contributed by Sergey B "
"Kirpichev in :gh:`87790`.)"
msgstr ""
"Suporte para sublinhado e vírgula como separadores de milhares na parte "
"fracionária para tipos de apresentação de ponto flutuante do novo estilo de "
"formatação de string (com :func:`format` ou :ref:`f-strings`). (Contribuição "
"de Sergey B Kirpichev em :gh:`87790`.)"

#: ../../whatsnew/3.14.rst:858
msgid ""
"The :func:`int` function no longer delegates to :meth:`~object.__trunc__`. "
"Classes that want to support conversion to :func:`!int` must implement "
"either :meth:`~object.__int__` or :meth:`~object.__index__`. (Contributed by "
"Mark Dickinson in :gh:`119743`.)"
msgstr ""
"A função :func:`int` não delega mais para :meth:`~object.__trunc__`. Classes "
"que desejam oferecer suporte a conversão para :func:`!int` devem "
"implementar :meth:`~object.__int__` ou :meth:`~object.__index__`. "
"(Contribuição de Mark Dickinson em :gh:`119743`.)"

#: ../../whatsnew/3.14.rst:863
msgid ""
"The :func:`map` function now has an optional keyword-only *strict* flag "
"like :func:`zip` to check that all the iterables are of equal length. "
"(Contributed by Wannes Boeykens in :gh:`119793`.)"
msgstr ""
"A função :func:`map` agora possui um sinalizador somente-nomeado opcional "
"*strict*, como :func:`zip`, para verificar se todos os iteráveis têm o mesmo "
"comprimento. (Contribuição de Wannes Boeykens em :gh:`119793`.)"

#: ../../whatsnew/3.14.rst:867
msgid ""
"The :class:`memoryview` type now supports subscription, making it a :term:"
"`generic type`. (Contributed by Brian Schubert in :gh:`126012`.)"
msgstr ""
"O tipo :class:`memoryview` agora oferece suporte a subscrição, tornando-o "
"um :term:`tipo genérico`. (Contribuição de Brian Schubert em :gh:`126012`.)"

#: ../../whatsnew/3.14.rst:871
msgid ""
"Using :data:`NotImplemented` in a boolean context will now raise a :exc:"
"`TypeError`. This has raised a :exc:`DeprecationWarning` since Python 3.9. "
"(Contributed by Jelle Zijlstra in :gh:`118767`.)"
msgstr ""
"Usa :data:`NotImplemented` em um contexto booleano agora levantará :exc:"
"`TypeError`. Isso levanta :exc:`DeprecationWarning` desde o Python 3.9. "
"(Contribuição de Jelle Zijlstra em :gh:`118767`.)"

#: ../../whatsnew/3.14.rst:876
msgid ""
"Three-argument :func:`pow` now tries calling :meth:`~object.__rpow__` if "
"necessary. Previously it was only called in two-argument :func:`!pow` and "
"the binary power operator. (Contributed by Serhiy Storchaka in :gh:`130104`.)"
msgstr ""
":func:`pow` de três argumentos agora tenta chamar :meth:`~object.__rpow__` "
"se necessário. Anteriormente, ele só era chamado em :func:`!pow` de dois "
"argumentos e no operador binário de potência. (Contribuição de Serhiy "
"Storchaka em :gh:`130104`.)"

#: ../../whatsnew/3.14.rst:882
msgid ""
":class:`super` objects are now :mod:`copyable <copy>` and :mod:`pickleable "
"<pickle>`. (Contributed by Serhiy Storchaka in :gh:`125767`.)"
msgstr ""
"Os objetos :class:`super` agora são :mod:`copiáveis <copy>` e :mod:"
"`serializáveis com pickle <pickle>`. (Contribuição de Serhiy Storchaka em :"
"gh:`125767`.)"

#: ../../whatsnew/3.14.rst:888
msgid "Command line and environment"
msgstr "Linha de comando e ambiente"

#: ../../whatsnew/3.14.rst:890
msgid ""
"The import time flag can now track modules that are already loaded "
"('cached'), via the new :option:`-X importtime=2 <-X>`. When such a module "
"is imported, the ``self`` and ``cumulative`` times are replaced by the "
"string ``cached``."
msgstr ""
"O sinalizador de tempo de importação agora pode rastrear módulos já "
"carregados ('em cache'), por meio da nova opção :option:`-X importtime=2 <-"
"X>`. Quando um módulo desse tipo é importado, os tempos ``self`` e "
"``cumulative`` são substituídos pela string ``cached``."

#: ../../whatsnew/3.14.rst:895
msgid ""
"Values above ``2`` for ``-X importtime`` are now reserved for future use."
msgstr ""
"Valores acima de ``2`` para ``-X importtime`` agora são reservados para uso "
"futuro."

#: ../../whatsnew/3.14.rst:897
msgid "(Contributed by Noah Kim and Adam Turner in :gh:`118655`.)"
msgstr "(Contribuição de Noah Kim e Adam Turner em :gh:`118655`.)"

#: ../../whatsnew/3.14.rst:899
msgid ""
"The command-line option :option:`-c` now automatically dedents its code "
"argument before execution. The auto-dedentation behavior mirrors :func:"
"`textwrap.dedent`. (Contributed by Jon Crall and Steven Sun in :gh:`103998`.)"
msgstr ""
"A opção de linha de comando :option:`-c` agora recua automaticamente seu "
"argumento de código antes da execução. O comportamento de dedentação "
"automática espelha :func:`textwrap.dedent`. (Contribuição de Jon Crall e "
"Steven Sun em :gh:`103998`.)"

#: ../../whatsnew/3.14.rst:904
msgid ""
":option:`!-J` is no longer a reserved flag for Jython_, and now has no "
"special meaning. (Contributed by Adam Turner in :gh:`133336`.)"
msgstr ""
":option:`!-J` não é mais um sinalizador reservado para Jython_ e agora não "
"tem nenhum significado especial. (Contribuição de Adam Turner em :gh:"
"`133336`.)"

#: ../../whatsnew/3.14.rst:914
msgid "PEP 758: Allow ``except`` and ``except*`` expressions without brackets"
msgstr "PEP 758: permite expressões ``except`` e ``except*`` sem parênteses"

#: ../../whatsnew/3.14.rst:916
msgid ""
"The :keyword:`except` and :keyword:`except* <except_star>` expressions now "
"allow brackets to be omitted when there are multiple exception types and the "
"``as`` clause is not used. For example:"
msgstr ""
"As expressões :keyword:`except` e :keyword:`except* <except_star>` agora "
"permitem a omissão de parênteses quando há vários tipos de exceção e a "
"cláusula ``as`` não é usada. Por exemplo:"

#: ../../whatsnew/3.14.rst:921
msgid ""
"try:\n"
"    connect_to_server()\n"
"except TimeoutError, ConnectionRefusedError:\n"
"    print('The network has ceased to be!')"
msgstr ""
"try:\n"
"    connect_to_server()\n"
"except TimeoutError, ConnectionRefusedError:\n"
"    print('A rede deixou de ser!')"

#: ../../whatsnew/3.14.rst:928
msgid ""
"(Contributed by Pablo Galindo and Brett Cannon in :pep:`758` and :gh:"
"`131831`.)"
msgstr ""
"(Contribuição de Pablo Galindo e Brett Cannon em :pep:`758` e :gh:`131831`.)"

#: ../../whatsnew/3.14.rst:934
msgid "PEP 765: Control flow in :keyword:`finally` blocks"
msgstr "PEP 765: Fluxo de controle em blocos :keyword:`finally`"

#: ../../whatsnew/3.14.rst:936
msgid ""
"The compiler now emits a :exc:`SyntaxWarning` when a :keyword:`return`, :"
"keyword:`break`, or :keyword:`continue` statement have the effect of leaving "
"a :keyword:`finally` block. This change is specified in :pep:`765`."
msgstr ""
"O compilador agora emite uma :exc:`SyntaxWarning` quando uma instrução :"
"keyword:`return`, :keyword:`break` ou :keyword:`continue` tem efeito ao sair "
"de um bloco :keyword:`finally`. Essa alteração é especificada na :pep:`765`."

#: ../../whatsnew/3.14.rst:941
msgid ""
"In situations where this change is inconvenient (such as those where the "
"warnings are redundant due to code linting), the :ref:`warning filter "
"<warning-filter>` can be used to turn off all syntax warnings by adding "
"``ignore::SyntaxWarning`` as a filter. This can be specified in combination "
"with a filter that converts other warnings to errors (for example, passing "
"``-Werror -Wignore::SyntaxWarning`` as CLI options, or setting "
"``PYTHONWARNINGS=error,ignore::SyntaxWarning``)."
msgstr ""
"Em situações em que essa alteração é inconveniente (como aquelas em que os "
"avisos são redundantes devido à verificação de código), o :ref:`filtro de "
"avisos <warning-filter>` pode ser usado para desativar todos os avisos de "
"sintaxe adicionando ``ignore::SyntaxWarning`` como filtro. Isso pode ser "
"especificado em combinação com um filtro que converte outros avisos em erros "
"(por exemplo, passando ``-Werror -Wignore::SyntaxWarning`` como opções da "
"CLI ou definindo ``PYTHONWARNINGS=error,ignore::SyntaxWarning``)."

#: ../../whatsnew/3.14.rst:949
msgid ""
"Note that applying such a filter at runtime using the :mod:`warnings` module "
"will only suppress the warning in code that is compiled *after* the filter "
"is adjusted. Code that is compiled prior to the filter adjustment (for "
"example, when a module is imported) will still emit the syntax warning."
msgstr ""
"Observe que a aplicação desse filtro em tempo de execução usando o módulo :"
"mod:`warnings` só suprimirá o aviso no código compilado *após* o ajuste do "
"filtro. O código compilado antes do ajuste do filtro (por exemplo, quando um "
"módulo é importado) ainda emitirá o aviso de sintaxe."

#: ../../whatsnew/3.14.rst:954
msgid "(Contributed by Irit Katriel in :gh:`130080`.)"
msgstr "(Contribuição de Irit Katriel em :gh:`130080`.)"

#: ../../whatsnew/3.14.rst:960
msgid "Incremental garbage collection"
msgstr "Coleta de lixo incremental"

#: ../../whatsnew/3.14.rst:962
msgid ""
"The cycle garbage collector is now incremental. This means that maximum "
"pause times are reduced by an order of magnitude or more for larger heaps."
msgstr ""
"O coletor de lixo cíclico agora é incremental. Isso significa que os tempos "
"máximos de pausa são reduzidos em uma ordem de magnitude ou mais para heaps "
"maiores."

#: ../../whatsnew/3.14.rst:966
msgid ""
"There are now only two generations: young and old. When :func:`gc.collect` "
"is not called directly, the GC is invoked a little less frequently. When "
"invoked, it collects the young generation and an increment of the old "
"generation, instead of collecting one or more generations."
msgstr ""
"Agora existem apenas duas gerações: jovem e velha. Quando :func:`gc.collect` "
"não é chamado diretamente, o coletor de lixo é invocado com um pouco menos "
"de frequência. Quando invocado, ele coleta a geração jovem e um incremento "
"da geração antiga, em vez de coletar uma ou mais gerações."

#: ../../whatsnew/3.14.rst:972
msgid "The behavior of :func:`!gc.collect` changes slightly:"
msgstr "O comportamento de :func:`!gc.collect` muda ligeiramente:"

#: ../../whatsnew/3.14.rst:974 ../../whatsnew/3.14.rst:3267
msgid ""
"``gc.collect(1)``: Performs an increment of garbage collection, rather than "
"collecting generation 1."
msgstr ""
"``gc.collect(1)``: Executa um incremento da coleta de lixo, em vez de "
"coletar a geração 1."

#: ../../whatsnew/3.14.rst:976 ../../whatsnew/3.14.rst:3269
msgid "Other calls to :func:`!gc.collect` are unchanged."
msgstr "Outras chamadas para :func:`!gc.collect` não foram alteradas."

#: ../../whatsnew/3.14.rst:978 ../../whatsnew/3.14.rst:2236
msgid "(Contributed by Mark Shannon in :gh:`108362`.)"
msgstr "(Contribuição de Mark Shannon em :gh:`108362`.)"

#: ../../whatsnew/3.14.rst:982
msgid "Default interactive shell"
msgstr "Console interativo padrão"

#: ../../whatsnew/3.14.rst:986
msgid ""
"The default :term:`interactive` shell now highlights Python syntax. The "
"feature is enabled by default, save if :envvar:`PYTHON_BASIC_REPL` or any "
"other environment variable that disables colour is set. See :ref:`using-on-"
"controlling-color` for details."
msgstr ""
"O console :term:`interativo` padrão agora realça a sintaxe Python. O recurso "
"é habilitado por padrão, exceto se :envvar:`PYTHON_BASIC_REPL` ou qualquer "
"outra variável de ambiente que desabilite cores estiver definida. Consulte :"
"ref:`using-on-controlling-color` para obter detalhes."

#: ../../whatsnew/3.14.rst:991
msgid ""
"The default color theme for syntax highlighting strives for good contrast "
"and exclusively uses the 4-bit VGA standard ANSI color codes for maximum "
"compatibility. The theme can be customized using an experimental API :func:`!"
"_colorize.set_theme`. This can be called interactively or in the :envvar:"
"`PYTHONSTARTUP` script. Note that this function has no stability guarantees, "
"and may change or be removed."
msgstr ""
"O tema de cores padrão para realce de sintaxe busca um bom contraste e usa "
"exclusivamente os códigos de cores ANSI padrão VGA de 4 bits para obter a "
"máxima compatibilidade. O tema pode ser personalizado com o uso de uma API "
"experimental :func:`!_colorize.set_theme`.  Isso pode ser chamado "
"interativamente ou no script :envvar:`PYTHONSTARTUP`. Observe que esta "
"função tem nenhuma garantia de estabilidade e pode ser alterada ou removida."

#: ../../whatsnew/3.14.rst:999
msgid "(Contributed by Łukasz Langa in :gh:`131507`.)"
msgstr "(Contribuição de Łukasz Langa em :gh:`131507`.)"

#: ../../whatsnew/3.14.rst:1001
msgid ""
"The default :term:`interactive` shell now supports import auto-completion. "
"This means that typing ``import co`` and pressing :kbd:`<Tab>` will suggest "
"modules starting with ``co``. Similarly, typing ``from concurrent import i`` "
"will suggest submodules of ``concurrent`` starting with ``i``. Note that "
"autocompletion of module attributes is not currently supported. (Contributed "
"by Tomas Roun in :gh:`69605`.)"
msgstr ""
"O console :term:`interativo` padrão agora oferece suporte ao preenchimento "
"automático de importação. Isso significa que digitar ``import co`` e "
"pressionar :kbd:`<Tab>` vai sugerir módulos que começam com ``co``. Da mesma "
"forma, digitar ``from concurrent import i`` vai sugerir submódulos de "
"``concurrent`` que começam com ``i``. Observe que o preenchimento automático "
"de atributos de módulo não é suportado atualmente. (Contribuição de Tomas "
"Roun em :gh:`69605`.)"

#: ../../whatsnew/3.14.rst:1010
msgid "New modules"
msgstr "Novos módulos"

#: ../../whatsnew/3.14.rst:1012
msgid ""
":mod:`annotationlib`: For introspecting :term:`annotations <annotation>`. "
"See :ref:`PEP 749 <whatsnew314-deferred-annotations>` for more details. "
"(Contributed by Jelle Zijlstra in :gh:`119180`.)"
msgstr ""
":mod:`annotationlib`: Para introspecção de :term:`anotações <annotation>`. "
"Veja :ref:`PEP 749 <whatsnew314-deferred-annotations>` para mais detalhes. "
"(Contribuição de Jelle Zijlstra em :gh:`119180`.)"

#: ../../whatsnew/3.14.rst:1017
msgid ""
":mod:`compression` (including :mod:`compression.zstd`): A package for "
"compression-related modules, including a new module to support the Zstandard "
"compression format. See :ref:`PEP 784 <whatsnew314-zstandard>` for more "
"details. (Contributed by Emma Harper Smith, Adam Turner, Gregory P. Smith, "
"Tomas Roun, Victor Stinner, and Rogdham in :gh:`132983`.)"
msgstr ""
":mod:`compression` (incluindo :mod:`compression.zstd`): Um pacote para "
"módulos relacionados à compactação, incluindo um novo módulo para oferecer "
"suporte ao formato de compactação Zstandard. Consulte :ref:`PEP 784 "
"<whatsnew314-zstandard>` para mais detalhes. (Contribuição de Emma Harper "
"Smith, Adam Turner, Gregory P. Smith, Tomas Roun, Victor Stinner e Rogdham "
"em :gh:`132983`.)"

#: ../../whatsnew/3.14.rst:1024
msgid ""
":mod:`concurrent.interpreters`: Support for multiple interpreters in the "
"standard library. See :ref:`PEP 734 <whatsnew314-multiple-interpreters>` for "
"more details. (Contributed by Eric Snow in :gh:`134939`.)"
msgstr ""
":mod:`concurrent.interpreters`: Suporte para múltiplos interpretadores na "
"biblioteca padrão. Consulte :ref:`PEP 734 <whatsnew314-multiple-"
"interpreters>` para mais detalhes. (Contribuição de Eric Snow em :gh:"
"`134939`.)"

#: ../../whatsnew/3.14.rst:1029
msgid ""
":mod:`string.templatelib`: Support for template string literals (t-strings). "
"See :ref:`PEP 750 <whatsnew314-template-string-literals>` for more details. "
"(Contributed by Jim Baker, Guido van Rossum, Paul Everitt, Koudai Aono, "
"Lysandros Nikolaou, Dave Peck, Adam Turner, Jelle Zijlstra, Bénédikt Tran, "
"and Pablo Galindo Salgado in :gh:`132661`.)"
msgstr ""
":mod:`string.templatelib`: Suporte para literais de strings templates (t-"
"strings). Veja :ref:`PEP 750 <whatsnew314-template-string-literals>` para "
"mais detalhes. (Contribuição de Jim Baker, Guido van Rossum, Paul Everitt, "
"Koudai Aono, Lysandros Nikolaou, Dave Peck, Adam Turner, Jelle Zijlstra, "
"Bénédikt Tran e Pablo Galindo Salgado em :gh:`132661`.)"

#: ../../whatsnew/3.14.rst:1038
msgid "Improved modules"
msgstr "Módulos melhorados"

#: ../../whatsnew/3.14.rst:1041 ../../whatsnew/3.14.rst:2301
msgid "argparse"
msgstr "argparse"

#: ../../whatsnew/3.14.rst:1043
msgid ""
"The default value of the :ref:`program name <prog>` for :class:`argparse."
"ArgumentParser` now reflects the way the Python interpreter was instructed "
"to find the ``__main__`` module code. (Contributed by Serhiy Storchaka and "
"Alyssa Coghlan in :gh:`66436`.)"
msgstr ""
"O valor padrão do :ref:`nome do programa <prog>` para :class:`argparse."
"ArgumentParser` agora reflete a maneira como o interpretador Python foi "
"instruído a encontrar o código do módulo ``__main__``. (Contribuição de "
"Serhiy Storchaka e Alyssa Coghlan em :gh:`66436`.)"

#: ../../whatsnew/3.14.rst:1048
msgid ""
"Introduced the optional *suggest_on_error* parameter to :class:`argparse."
"ArgumentParser`, enabling suggestions for argument choices and subparser "
"names if mistyped by the user. (Contributed by Savannah Ostrowski in :gh:"
"`124456`.)"
msgstr ""
"Foi introduzido o parâmetro opcional *suggest_on_error* em :class:`argparse."
"ArgumentParser`, permitindo sugestões para escolhas de argumentos e nomes de "
"subanalisadores caso sejam digitados incorretamente pelo usuário. "
"(Contribuição de Savannah Ostrowski em :gh:`124456`.)"

#: ../../whatsnew/3.14.rst:1053
msgid ""
"Enable color for help text, which can be disabled with the optional *color* "
"parameter to :class:`argparse.ArgumentParser`. This can also be controlled "
"by :ref:`environment variables <using-on-controlling-color>`. (Contributed "
"by Hugo van Kemenade in :gh:`130645`.)"
msgstr ""
"Habilita a cor do texto de ajuda, que pode ser desabilitada com o parâmetro "
"opcional *color* em :class:`argparse.ArgumentParser`. Isso também pode ser "
"controlado por :ref:`variáveis de ambiente <using-on-controlling-color>`. "
"(Contribuição de Hugo van Kemenade em :gh:`130645`.)"

#: ../../whatsnew/3.14.rst:1061 ../../whatsnew/3.14.rst:2320
msgid "ast"
msgstr "ast"

#: ../../whatsnew/3.14.rst:1063
msgid ""
"Add :func:`~ast.compare`, a function for comparing two ASTs. (Contributed by "
"Batuhan Taskaya and Jeremy Hylton in :gh:`60191`.)"
msgstr ""
"Adiciona :func:`~ast.compare`, uma função para comparar dois ASTs. "
"(Contribuição de Batuhan Taskaya e Jeremy Hylton em :gh:`60191`.)"

#: ../../whatsnew/3.14.rst:1066
msgid ""
"Add support for :func:`copy.replace` for AST nodes. (Contributed by Bénédikt "
"Tran in :gh:`121141`.)"
msgstr ""
"Adiciona suporte para :func:`copy.replace` para nós AST. (Contribuição de "
"Bénédikt Tran em :gh:`121141`.)"

#: ../../whatsnew/3.14.rst:1069
msgid ""
"Docstrings are now removed from an optimized AST in optimization level 2. "
"(Contributed by Irit Katriel in :gh:`123958`.)"
msgstr ""
"Docstrings agora são removidas de um AST otimizado no nível de otimização 2. "
"(Contribuição de Irit Katriel em :gh:`123958`.)"

#: ../../whatsnew/3.14.rst:1072
msgid ""
"The :func:`repr` output for AST nodes now includes more information. "
"(Contributed by Tomas Roun in :gh:`116022`.)"
msgstr ""
"A saída :func:`repr` para nós AST agora inclui mais informações. "
"(Contribuição de Tomas Roun em :gh:`116022`.)"

#: ../../whatsnew/3.14.rst:1075
msgid ""
"When called with an AST as input, the :func:`~ast.parse` function now always "
"verifies that the root node type is appropriate. (Contributed by Irit "
"Katriel in :gh:`130139`.)"
msgstr ""
"Quando chamado com um AST como entrada, a função :func:`~ast.parse` agora "
"sempre verifica se o tipo de nó raiz é apropriado. (Contribuição de Irit "
"Katriel em :gh:`130139`.)"

#: ../../whatsnew/3.14.rst:1079
msgid ""
"Add new options to the command-line interface: :option:`--feature-version "
"<ast --feature-version>`, :option:`--optimize <ast --optimize>`, and :option:"
"`--show-empty <ast --show-empty>`. (Contributed by Semyon Moroz in :gh:"
"`133367`.)"
msgstr ""
"Adiciona novas opções à interface de linha de comando: :option:`--feature-"
"version <ast --feature-version>`, :option:`--optimize <ast --optimize>` e :"
"option:`--show-empty <ast --show-empty>`. (Contribuição de Semyon Moroz em :"
"gh:`133367`.)"

#: ../../whatsnew/3.14.rst:1087 ../../whatsnew/3.14.rst:2162
#: ../../whatsnew/3.14.rst:2351
msgid "asyncio"
msgstr "asyncio"

#: ../../whatsnew/3.14.rst:1089
msgid ""
"The function and methods named :func:`!create_task` now take an arbitrary "
"list of keyword arguments. All keyword arguments are passed to the :class:"
"`~asyncio.Task` constructor or the custom task factory. (See :meth:`~asyncio."
"loop.set_task_factory` for details.) The ``name`` and ``context`` keyword "
"arguments are no longer special; the name should now be set using the "
"``name`` keyword argument of the factory, and ``context`` may be ``None``."
msgstr ""
"A função e os métodos denominados :func:`!create_task` agora aceitam uma "
"lista arbitrária de argumentos nomeados. Todos os argumentos nomeados são "
"passados para o construtor :class:`~asyncio.Task` ou para a fábrica de "
"tarefas personalizada. (Consulte :meth:`~asyncio.loop.set_task_factory` para "
"obter detalhes.) Os argumentos nomeados ``name`` e ``context`` não são mais "
"especiais; o nome agora deve ser definido usando o argumento nomeados "
"``name`` da fábrica, e ``context`` pode ser ``None``."

#: ../../whatsnew/3.14.rst:1097
msgid ""
"This affects the following function and methods: :meth:`asyncio."
"create_task`, :meth:`asyncio.loop.create_task`, :meth:`asyncio.TaskGroup."
"create_task`."
msgstr ""
"Isso afeta as seguintes funções e métodos: :meth:`asyncio.create_task`, :"
"meth:`asyncio.loop.create_task`, :meth:`asyncio.TaskGroup.create_task`."

#: ../../whatsnew/3.14.rst:1102
msgid "(Contributed by Thomas Grainger in :gh:`128307`.)"
msgstr "(Contribuição de Thomas Grainger em :gh:`128307`.)"

#: ../../whatsnew/3.14.rst:1104
msgid ""
"There are two new utility functions for introspecting and printing a "
"program's call graph: :func:`~asyncio.capture_call_graph` and :func:"
"`~asyncio.print_call_graph`. See :ref:`Asyncio introspection capabilities "
"<whatsnew314-asyncio-introspection>` for more details. (Contributed by Yury "
"Selivanov, Pablo Galindo Salgado, and Łukasz Langa in :gh:`91048`.)"
msgstr ""
"Há duas novas funções utilitárias para introspecção e impressão do gráfico "
"de chamadas de um programa: :func:`~asyncio.capture_call_graph` e :func:"
"`~asyncio.print_call_graph`. Veja :ref:`Capacidades de introspecção do "
"asyncio <whatsnew314-asyncio-introspection>` para mais detalhes. "
"(Contribuição de Yury Selivanov, Pablo Galindo Salgado e Łukasz Langa em :gh:"
"`91048`.)"

#: ../../whatsnew/3.14.rst:1114
msgid "calendar"
msgstr "calendar"

#: ../../whatsnew/3.14.rst:1118
msgid ""
"By default, today's date is highlighted in color in :mod:`calendar`'s :ref:"
"`command-line <calendar-cli>` text output. This can be controlled by :ref:"
"`environment variables <using-on-controlling-color>`. (Contributed by Hugo "
"van Kemenade in :gh:`128317`.)"
msgstr ""
"Por padrão, a data de hoje é destacada em cores na saída de texto da :ref:"
"`linha de comando <calendar-cli>` do :mod:`calendar`. Isso pode ser "
"controlado pelas :ref:`variáveis de ambiente <using-on-controlling-color>`. "
"(Contribuição de Hugo van Kemenade em :gh:`128317`.)"

#: ../../whatsnew/3.14.rst:1126
msgid "concurrent.futures"
msgstr "concurrent.futures"

#: ../../whatsnew/3.14.rst:1130
msgid ""
"Add a new executor class, :class:`~concurrent.futures."
"InterpreterPoolExecutor`, which exposes multiple Python interpreters in the "
"same process ('subinterpreters') to Python code. This uses a pool of "
"independent Python interpreters to execute calls asynchronously."
msgstr ""
"Adiciona uma nova classe executora, :class:`~concurrent.futures."
"InterpreterPoolExecutor`, que expõe vários interpretadores Python no mesmo "
"processo ('subinterpretadores') ao código Python. Isso usa um conjunto de "
"interpretadores Python independentes para executar chamadas de forma "
"assíncrona."

#: ../../whatsnew/3.14.rst:1136
msgid ""
"This is separate from the new :mod:`~concurrent.interpreters` module "
"introduced by :ref:`PEP 734 <whatsnew314-multiple-interpreters>`. "
"(Contributed by Eric Snow in :gh:`124548`.)"
msgstr ""
"Isto é separado do novo módulo :mod:`~concurrent.interpreters` introduzido "
"pela :ref:`PEP 734 <whatsnew314-multiple-interpreters>`. (Contribuição de "
"Eric Snow em :gh:`124548`.)"

#: ../../whatsnew/3.14.rst:1142
msgid ""
"On Unix platforms other than macOS, :ref:`'forkserver' <multiprocessing-"
"start-method-forkserver>` is now the default :ref:`start method "
"<multiprocessing-start-methods>` for :class:`~concurrent.futures."
"ProcessPoolExecutor` (replacing :ref:`'fork' <multiprocessing-start-method-"
"fork>`). This change does not affect Windows or macOS, where :ref:`'spawn' "
"<multiprocessing-start-method-spawn>` remains the default start method."
msgstr ""
"Em plataformas Unix diferentes do macOS, :ref:`'forkserver' <multiprocessing-"
"start-method-forkserver>` agora é o :ref:`método de inicialização "
"<multiprocessing-start-methods>` padrão para :class:`~concurrent.futures."
"ProcessPoolExecutor` (substituindo :ref:`'fork' <multiprocessing-start-"
"method-fork>`). Essa alteração não afeta o Windows ou o macOS, onde :ref:"
"`'spawn' <multiprocessing-start-method-spawn>` continua sendo o método de "
"inicialização padrão."

#: ../../whatsnew/3.14.rst:1150
msgid ""
"If the threading incompatible *fork* method is required, you must explicitly "
"request it by supplying a multiprocessing context *mp_context* to :class:"
"`~concurrent.futures.ProcessPoolExecutor`."
msgstr ""
"Se o método *fork* incompatível com threading for necessário, você deverá "
"solicitá-lo explicitamente fornecendo um contexto de multiprocessamento "
"*mp_context* para :class:`~concurrent.futures.ProcessPoolExecutor`."

#: ../../whatsnew/3.14.rst:1154 ../../whatsnew/3.14.rst:1604
msgid ""
"See :ref:`forkserver restrictions <multiprocessing-programming-forkserver>` "
"for information and differences with the *fork* method and how this change "
"may affect existing code with mutable global shared variables and/or shared "
"objects that can not be automatically :mod:`pickled <pickle>`."
msgstr ""
"Veja as :ref:`restrições de forkserver <multiprocessing-programming-"
"forkserver>` para obter informações e diferenças com o método *fork* e como "
"essa alteração pode afetar o código existente com variáveis globais "
"compartilhadas mutáveis e/ou objetos compartilhados que não podem ser "
"automaticamente :mod:`serializadas com pickle <pickle>`."

#: ../../whatsnew/3.14.rst:1159 ../../whatsnew/3.14.rst:1609
msgid "(Contributed by Gregory P. Smith in :gh:`84559`.)"
msgstr "(Contribuição de Gregory P. Smith em :gh:`84559`.)"

#: ../../whatsnew/3.14.rst:1161
msgid ""
"Add two new methods to :class:`~concurrent.futures.ProcessPoolExecutor`, :"
"meth:`~concurrent.futures.ProcessPoolExecutor.terminate_workers` and :meth:"
"`~concurrent.futures.ProcessPoolExecutor.kill_workers`, as ways to terminate "
"or kill all living worker processes in the given pool. (Contributed by "
"Charles Machalow in :gh:`130849`.)"
msgstr ""
"Adiciona dois novos métodos a :class:`~concurrent.futures."
"ProcessPoolExecutor`, :meth:`~concurrent.futures.ProcessPoolExecutor."
"terminate_workers` e :meth:`~concurrent.futures.ProcessPoolExecutor."
"kill_workers`, como formas de encerrar ou eliminar todos os processos de "
"trabalho ativos no pool fornecido. (Contribuição de Charles Machalow em :gh:"
"`130849`.)"

#: ../../whatsnew/3.14.rst:1167
msgid ""
"Add the optional *buffersize* parameter to :meth:`Executor.map <concurrent."
"futures.Executor.map>` to limit the number of submitted tasks whose results "
"have not yet been yielded. If the buffer is full, iteration over the "
"*iterables* pauses until a result is yielded from the buffer. (Contributed "
"by Enzo Bonnal and Josh Rosenberg in :gh:`74028`.)"
msgstr ""
"Adiciona o parâmetro opcional *buffersize* a :meth:`Executor.map <concurrent."
"futures.Executor.map>`. para limitar o número de tarefas enviadas cujos "
"resultados ainda não foram gerados. Se o buffer estiver cheio, a iteração "
"sobre os *iteráveis* será pausada até que um resultado seja produzido pelo "
"buffer. (Contribuição de Enzo Bonnal e Josh Rosenberg em :gh:`74028`.)"

#: ../../whatsnew/3.14.rst:1176
msgid "configparser"
msgstr "configparser"

#: ../../whatsnew/3.14.rst:1178
msgid ""
":mod:`!configparser` will no longer write config files it cannot read, to "
"improve security. Attempting to :meth:`~configparser.ConfigParser.write` "
"keys containing delimiters or beginning with the section header pattern will "
"raise an :class:`~configparser.InvalidWriteError`. (Contributed by Jacob "
"Lincoln in :gh:`129270`.)"
msgstr ""
":mod:`!configparser` não gravará mais arquivos de configuração que não "
"consegue ler, para melhorar a segurança. Tentar usar :meth:`~configparser."
"ConfigParser.write` em chaves contendo delimitadores ou começando com o "
"padrão de cabeçalho de seção levantará um :class:`~configparser."
"InvalidWriteError`. (Contribuição de Jacob Lincoln em :gh:`129270`.)"

#: ../../whatsnew/3.14.rst:1187
msgid "contextvars"
msgstr "contextvars"

#: ../../whatsnew/3.14.rst:1189
msgid ""
"Support the :term:`context manager` protocol for :class:`~contextvars.Token` "
"objects. (Contributed by Andrew Svetlov in :gh:`129889`.)"
msgstr ""
"Adiciona suporte ao protocolo do :term:`gerenciador de contexto` para "
"objetos :class:`~contextvars.Token`. (Contribuição de Andrew Svetlov em :gh:"
"`129889`.)"

#: ../../whatsnew/3.14.rst:1195
msgid "ctypes"
msgstr "ctypes"

#: ../../whatsnew/3.14.rst:1197
msgid ""
"The layout of :ref:`bit fields <ctypes-bit-fields-in-structures-unions>` in :"
"class:`~ctypes.Structure` and :class:`~ctypes.Union` objects is now a closer "
"match to platform defaults (GCC/Clang or MSVC). In particular, fields no "
"longer overlap. (Contributed by Matthias Görgens in :gh:`97702`.)"
msgstr ""
"O layout dos :ref:`campos de bit <ctypes-bit-fields-in-structures-unions>` "
"em objetos :class:`~ctypes.Structure` e :class:`~ctypes.Union` é agora uma "
"correspondência mais fiel aos padrões da plataforma (GCC/Clang ou MSVC). Em "
"particular, os campos não se sobrepõem mais. (Contribuição de Matthias "
"Görgens em :gh:`97702`.)"

#: ../../whatsnew/3.14.rst:1203
msgid ""
"The :attr:`.Structure._layout_` class attribute can now be set to help match "
"a non-default ABI. (Contributed by Petr Viktorin in :gh:`97702`.)"
msgstr ""
"O atributo de classe :attr:`.Structure._layout_` agora pode ser definido "
"para ajudar a corresponder a uma ABI não padrão. (Contribuição de Petr "
"Viktorin em :gh:`97702`.)"

#: ../../whatsnew/3.14.rst:1207
msgid ""
"The class of :class:`~ctypes.Structure`/:class:`~ctypes.Union` field "
"descriptors is now available as :class:`~ctypes.CField`, and has new "
"attributes to aid debugging and introspection. (Contributed by Petr Viktorin "
"in :gh:`128715`.)"
msgstr ""
"A classe de descritores de campo :class:`~ctypes.Structure`/:class:`~ctypes."
"Union` agora está disponível como :class:`~ctypes.CField` e possui novos "
"atributos para auxiliar na depuração e na introspecção. (Contribuição de "
"Petr Viktorin em :gh:`128715`.)"

#: ../../whatsnew/3.14.rst:1212
msgid ""
"On Windows, the :exc:`~ctypes.COMError` exception is now public. "
"(Contributed by Jun Komoda in :gh:`126686`.)"
msgstr ""
"No Windows, a exceção :exc:`~ctypes.COMError` agora é pública. (Contribuição "
"de Jun Komoda em :gh:`126686`.)"

#: ../../whatsnew/3.14.rst:1215
msgid ""
"On Windows, the :func:`~ctypes.CopyComPointer` function is now public. "
"(Contributed by Jun Komoda in :gh:`127275`.)"
msgstr ""
"No Windows, a função :func:`~ctypes.CopyComPointer` agora é pública. "
"(Contribuição de Jun Komoda em :gh:`127275`.)"

#: ../../whatsnew/3.14.rst:1218
msgid ""
"Add :func:`~ctypes.memoryview_at`, a function to create a :class:"
"`memoryview` object that refers to the supplied pointer and length. This "
"works like :func:`ctypes.string_at` except it avoids a buffer copy, and is "
"typically useful when implementing pure Python callback functions that are "
"passed dynamically-sized buffers. (Contributed by Rian Hunter in :gh:"
"`112018`.)"
msgstr ""
"Adiciona :func:`~ctypes.memoryview_at`, uma função para criar um objeto :"
"class:`memoryview` que faz referência ao ponteiro e comprimento fornecidos. "
"Isso funciona como :func:`ctypes.string_at`, exceto que evita uma cópia de "
"buffer e é normalmente útil ao implementar funções de retorno de chamada "
"Python puras que recebem buffers de tamanho dinâmico. (Contribuição de Rian "
"Hunter em :gh:`112018`.)"

#: ../../whatsnew/3.14.rst:1225
msgid ""
"Complex types, :class:`~ctypes.c_float_complex`, :class:`~ctypes."
"c_double_complex`, and :class:`~ctypes.c_longdouble_complex`, are now "
"available if both the compiler and the ``libffi`` library support complex C "
"types. (Contributed by Sergey B Kirpichev in :gh:`61103`.)"
msgstr ""
"Tipos complexos, :class:`~ctypes.c_float_complex`, :class:`~ctypes."
"c_double_complex` e :class:`~ctypes.c_longdouble_complex`, agora estão "
"disponíveis se tanto o compilador quanto a biblioteca ``libffi`` oferecerem "
"suporte a tipos C complexos. (Contribuição de Sergey B Kirpichev em :gh:"
"`61103`.)"

#: ../../whatsnew/3.14.rst:1231
msgid ""
"Add :func:`ctypes.util.dllist` for listing the shared libraries loaded by "
"the current process. (Contributed by Brian Ward in :gh:`119349`.)"
msgstr ""
"Adiciona :func:`ctypes.util.dllist` para listar as bibliotecas "
"compartilhadas carregadas pelo processo atual. (Contribuição de Brian Ward "
"em :gh:`119349`.)"

#: ../../whatsnew/3.14.rst:1235
msgid ""
"Move :func:`ctypes.POINTER` types cache from a global internal cache "
"(``_pointer_type_cache``) to the :attr:`_CData.__pointer_type__ <ctypes."
"_CData.__pointer_type__>` attribute of the corresponding :mod:`!ctypes` "
"types. This will stop the cache from growing without limits in some "
"situations. (Contributed by Sergey Miryanov in :gh:`100926`.)"
msgstr ""
"Move o cache de tipos :func:`ctypes.POINTER` de um cache interno global "
"(``_pointer_type_cache``) para o atributo :attr:`_CData.__pointer_type__ "
"<ctypes._CData.__pointer_type__>` dos tipos :mod:`!ctypes` correspondentes. "
"Isso impedirá que o cache cresça sem limites em algumas situações. "
"(Contribuição de Sergey Miryanov em :gh:`100926`.)"

#: ../../whatsnew/3.14.rst:1242
msgid ""
"The :class:`~ctypes.py_object` type now supports subscription, making it a :"
"term:`generic type`. (Contributed by Brian Schubert in :gh:`132168`.)"
msgstr ""
"O tipo :class:`~ctypes.py_object` agora oferece suporte a subscrição, "
"tornando-o um :term:`tipo genérico`. (Contribuição de Brian Schubert em :gh:"
"`132168`.)"

#: ../../whatsnew/3.14.rst:1246
msgid ""
":mod:`!ctypes` now supports :term:`free-threading builds <free threading>`. "
"(Contributed by Kumar Aditya and Peter Bierma in :gh:`127945`.)"
msgstr ""
":mod:`!ctypes` agora oferece suporte a :term:`construções com threads livres "
"<free threading>`. (Contribuição de Kumar Aditya e Peter Bierma em :gh:"
"`127945`.)"

#: ../../whatsnew/3.14.rst:1251
msgid "curses"
msgstr "curses"

#: ../../whatsnew/3.14.rst:1253
msgid ""
"Add the :func:`~curses.assume_default_colors` function, a refinement of the :"
"func:`~curses.use_default_colors` function which allows changing the color "
"pair ``0``. (Contributed by Serhiy Storchaka in :gh:`133139`.)"
msgstr ""
"Adiciona a função :func:`~curses.assume_default_colors`, um refinamento da "
"função :func:`~curses.use_default_colors` que permite alterar o par de cores "
"``0``. (Contribuição de Serhiy Storchaka em :gh:`133139`.)"

#: ../../whatsnew/3.14.rst:1260
msgid "datetime"
msgstr "datetime"

#: ../../whatsnew/3.14.rst:1262
msgid ""
"Add the :meth:`~datetime.date.strptime` method to the :class:`datetime.date` "
"and :class:`datetime.time` classes. (Contributed by Wannes Boeykens in :gh:"
"`41431`.)"
msgstr ""
"Adiciona o método :meth:`~datetime.date.strptime` às classes :class:"
"`datetime.date` e :class:`datetime.time`. (Contribuição de Wannes Boeykens "
"em :gh:`41431`.)"

#: ../../whatsnew/3.14.rst:1268
msgid "decimal"
msgstr "decimal"

#: ../../whatsnew/3.14.rst:1270
msgid ""
"Add :meth:`.Decimal.from_number` as an alternative constructor for :class:"
"`~decimal.Decimal`. (Contributed by Serhiy Storchaka in :gh:`121798`.)"
msgstr ""
"Adiciona :meth:`.Decimal.from_number` como um construtor alternativo para :"
"class:`~decimal.Decimal`. (Contribuição de Serhiy Storchaka em :gh:`121798`.)"

#: ../../whatsnew/3.14.rst:1274
msgid ""
"Expose :func:`~decimal.IEEEContext` to support creation of contexts "
"corresponding to the IEEE 754 (2008) decimal interchange formats. "
"(Contributed by Sergey B Kirpichev in :gh:`53032`.)"
msgstr ""
"Expõe :func:`~decimal.IEEEContext` para oferecer suporte à criação de "
"contextos correspondentes aos formatos de intercâmbio decimal do IEEE 754 "
"(2008). (Contribuição de Sergey B Kirpichev em :gh:`53032`.)"

#: ../../whatsnew/3.14.rst:1280 ../../whatsnew/3.14.rst:2198
msgid "difflib"
msgstr "difflib"

#: ../../whatsnew/3.14.rst:1282
msgid ""
"Comparison pages with highlighted changes generated by the :class:`~difflib."
"HtmlDiff` class now support 'dark mode'. (Contributed by Jiahao Li in :gh:"
"`129939`.)"
msgstr ""
"Páginas de comparação com alterações destacadas geradas pela classe :class:"
"`~difflib.HtmlDiff` agora oferecem suporte ao \"modo escuro\". (Contribuição "
"de Jiahao Li em :gh:`129939`.)"

#: ../../whatsnew/3.14.rst:1288
msgid "dis"
msgstr "dis"

#: ../../whatsnew/3.14.rst:1290
msgid ""
"Add support for rendering full source location information of :class:"
"`instructions <dis.Instruction>`, rather than only the line number. This "
"feature is added to the following interfaces via the *show_positions* "
"keyword argument:"
msgstr ""
"Adiciona suporte para renderizar informações completas sobre o local da "
"fonte de :class:`instruções <dis.Instruction>`, em vez de apenas o número da "
"linha. Este recurso é adicionado às seguintes interfaces por meio do "
"argumento nomeado *show_positions*:"

#: ../../whatsnew/3.14.rst:1295
msgid ":class:`dis.Bytecode`"
msgstr ":class:`dis.Bytecode`"

#: ../../whatsnew/3.14.rst:1296
msgid ":func:`dis.dis`"
msgstr ":func:`dis.dis`"

#: ../../whatsnew/3.14.rst:1297
msgid ":func:`dis.distb`"
msgstr ":func:`dis.distb`"

#: ../../whatsnew/3.14.rst:1298
msgid ":func:`dis.disassemble`"
msgstr ":func:`dis.disassemble`"

#: ../../whatsnew/3.14.rst:1300
msgid ""
"This feature is also exposed via :option:`dis --show-positions`. "
"(Contributed by Bénédikt Tran in :gh:`123165`.)"
msgstr ""
"Esse recurso também é exposto via :option:`dis --show-positions`. "
"(Contribuição de Bénédikt Tran em :gh:`123165`.)"

#: ../../whatsnew/3.14.rst:1303
msgid ""
"Add the :option:`dis --specialized` command-line option to show specialized "
"bytecode. (Contributed by Bénédikt Tran in :gh:`127413`.)"
msgstr ""
"Adiciona a opção de linha de comando :option:`dis --specialized` para "
"mostrar o bytecode especializado. (Contribuição de Bénédikt Tran em :gh:"
"`127413`.)"

#: ../../whatsnew/3.14.rst:1309
msgid "errno"
msgstr "errno"

#: ../../whatsnew/3.14.rst:1311
msgid ""
"Add the :data:`~errno.EHWPOISON` error code constant. (Contributed by James "
"Roy in :gh:`126585`.)"
msgstr ""
"Adiciona a constante de código de erro :data:`~errno.EHWPOISON`. "
"(Contribuição de James Roy em :gh:`126585`.)"

#: ../../whatsnew/3.14.rst:1316
msgid "faulthandler"
msgstr "faulthandler"

#: ../../whatsnew/3.14.rst:1318
msgid ""
"Add support for printing the C stack trace on systems that :ref:`support it "
"<c-stack-compatibility>` via the new :func:`~faulthandler.dump_c_stack` "
"function or via the *c_stack* argument in :func:`faulthandler.enable`. "
"(Contributed by Peter Bierma in :gh:`127604`.)"
msgstr ""
"Adiciona suporte para exibir o stack trace (situação da pilha de execução) C "
"em sistemas que :ref:`oferecem suporte a isso <c-stack-compatibility>` via a "
"função :func:`~faulthandler.dump_c_stack` ou via o argumento *c_stack* em :"
"func:`faulthandler.enable`. (Contribuição de Peter Bierma em :gh:`127604`.)"

#: ../../whatsnew/3.14.rst:1326
msgid "fnmatch"
msgstr "fnmatch"

#: ../../whatsnew/3.14.rst:1328
msgid ""
"Add :func:`~fnmatch.filterfalse`, a function to reject names matching a "
"given pattern. (Contributed by Bénédikt Tran in :gh:`74598`.)"
msgstr ""
"Adiciona :func:`~fnmatch.filterfalse`, uma função para rejeitar nomes que "
"correspondem a um determinado padrão. (Contribuição de Bénédikt Tran em :gh:"
"`74598`.)"

#: ../../whatsnew/3.14.rst:1334
msgid "fractions"
msgstr "fractions"

#: ../../whatsnew/3.14.rst:1336
msgid ""
"A :class:`~fractions.Fraction` object may now be constructed from any object "
"with the :meth:`!as_integer_ratio` method. (Contributed by Serhiy Storchaka "
"in :gh:`82017`.)"
msgstr ""
"Um objeto :class:`~fractions.Fraction` agora pode ser construído a partir de "
"qualquer objeto com o método :meth:`!as_integer_ratio`. (Contribuição de "
"Serhiy Storchaka em :gh:`82017`.)"

#: ../../whatsnew/3.14.rst:1340
msgid ""
"Add :meth:`.Fraction.from_number` as an alternative constructor for :class:"
"`~fractions.Fraction`. (Contributed by Serhiy Storchaka in :gh:`121797`.)"
msgstr ""
"Adiciona :meth:`.Fraction.from_number` como um construtor alternativo para :"
"class:`~fractions.Fraction`. (Contribuição de Serhiy Storchaka em :gh:"
"`121797`.)"

#: ../../whatsnew/3.14.rst:1346
msgid "functools"
msgstr "functools"

#: ../../whatsnew/3.14.rst:1348
msgid ""
"Add the :data:`~functools.Placeholder` sentinel. This may be used with the :"
"func:`~functools.partial` or :func:`~functools.partialmethod` functions to "
"reserve a place for positional arguments in the returned :ref:`partial "
"object <partial-objects>`. (Contributed by Dominykas Grigonis in :gh:"
"`119127`.)"
msgstr ""
"Adiciona o sinalizador :data:`~functools.Placeholder`. Ele pode ser usado "
"com as funções :func:`~functools.partial` ou :func:`~functools."
"partialmethod` para reservar um lugar para argumentos posicionais no :ref:"
"`objeto parcial <partial-objects>` retornado. (Contribuição de Dominykas "
"Grigonis em :gh:`119127`.)"

#: ../../whatsnew/3.14.rst:1355
msgid ""
"Allow the *initial* parameter of :func:`~functools.reduce` to be passed as a "
"keyword argument. (Contributed by Sayandip Dutta in :gh:`125916`.)"
msgstr ""
"Permite que o parâmetro *initial* de :func:`~functools.reduce` seja passado "
"como um argumento nomeado. (Contribuição de Sayandip Dutta em :gh:`125916`.)"

#: ../../whatsnew/3.14.rst:1361
msgid "getopt"
msgstr "getopt"

#: ../../whatsnew/3.14.rst:1363
msgid ""
"Add support for options with optional arguments. (Contributed by Serhiy "
"Storchaka in :gh:`126374`.)"
msgstr ""
"Adiciona suporte para opções com argumento opcional. (Contribuição de Serhiy "
"Storchaka em :gh:`126374`.)"

#: ../../whatsnew/3.14.rst:1366
msgid ""
"Add support for returning intermixed options and non-option arguments in "
"order. (Contributed by Serhiy Storchaka in :gh:`126390`.)"
msgstr ""
"Adiciona suporte para retornar opções misturadas e argumentos não-opcionais "
"em ordem. (Contribuição de Serhiy Storchaka em :gh:`126390`.)"

#: ../../whatsnew/3.14.rst:1371
msgid "getpass"
msgstr "getpass"

#: ../../whatsnew/3.14.rst:1373
msgid ""
"Support keyboard feedback in the :func:`~getpass.getpass` function via the "
"keyword-only optional argument *echo_char*. Placeholder characters are "
"rendered whenever a character is entered, and removed when a character is "
"deleted. (Contributed by Semyon Moroz in :gh:`77065`.)"
msgstr ""
"Suporte a feedback do teclado na função :func:`~getpass.getpass` por meio do "
"argumento opcional somente-nomeado *echo_var*. Espaços reservados para "
"caracteres são renderizados sempre que um caractere é inserido e removidos "
"quando um caractere é excluído. (Contribuição de Semyon Moroz em :gh:"
"`77065`.)"

#: ../../whatsnew/3.14.rst:1381
msgid "graphlib"
msgstr "graphlib"

#: ../../whatsnew/3.14.rst:1383
msgid ""
"Allow :meth:`.TopologicalSorter.prepare` to be called more than once as long "
"as sorting has not started. (Contributed by Daniel Pope in :gh:`130914`.)"
msgstr ""
"Permite que :meth:`.TopologicalSorter.prepare` seja chamado mais de uma vez, "
"desde que a classificação não tenha sido iniciada. (Contribuição de por "
"Daniel Pope em :gh:`130914`.)"

#: ../../whatsnew/3.14.rst:1389
msgid "heapq"
msgstr "heapq"

#: ../../whatsnew/3.14.rst:1391
msgid ""
"The :mod:`!heapq` module has improved support for working with max-heaps, "
"via the following new functions:"
msgstr ""
"O módulo :mod:`!heapq` melhorou o suporte para trabalhar com max-heaps, por "
"meio das seguintes novas funções:"

#: ../../whatsnew/3.14.rst:1394
msgid ":func:`~heapq.heapify_max`"
msgstr ":func:`~heapq.heapify_max`"

#: ../../whatsnew/3.14.rst:1395
msgid ":func:`~heapq.heappush_max`"
msgstr ":func:`~heapq.heappush_max`"

#: ../../whatsnew/3.14.rst:1396
msgid ":func:`~heapq.heappop_max`"
msgstr ":func:`~heapq.heappop_max`"

#: ../../whatsnew/3.14.rst:1397
msgid ":func:`~heapq.heapreplace_max`"
msgstr ":func:`~heapq.heapreplace_max`"

#: ../../whatsnew/3.14.rst:1398
msgid ":func:`~heapq.heappushpop_max`"
msgstr ":func:`~heapq.heappushpop_max`"

#: ../../whatsnew/3.14.rst:1402
msgid "hmac"
msgstr "hmac"

#: ../../whatsnew/3.14.rst:1404
msgid ""
"Add a built-in implementation for HMAC (:rfc:`2104`) using formally verified "
"code from the `HACL* <https://github.com/hacl-star/hacl-star/>`__ project. "
"This implementation is used as a fallback when the OpenSSL implementation of "
"HMAC is not available. (Contributed by Bénédikt Tran in :gh:`99108`.)"
msgstr ""
"Adiciona uma implementação embutido para HMAC (:rfc:`2104`) usando código "
"formalmente verificado do projeto `HACL* <https://github.com/hacl-star/hacl-"
"star/>`__. Esta implementação é usada como fallback quando a implementação "
"OpenSSL do HMAC não está disponível. (Contribuição de Bénédikt Tran em :gh:"
"`99108`.)"

#: ../../whatsnew/3.14.rst:1412
msgid "http"
msgstr "http"

#: ../../whatsnew/3.14.rst:1414
msgid ""
"Directory lists and error pages generated by the :mod:`http.server` module "
"allow the browser to apply its default dark mode. (Contributed by Yorik "
"Hansen in :gh:`123430`.)"
msgstr ""
"As páginas de erro e listas de diretórios geradas pelo módulo :mod:`http."
"server` permitem que o navegador aplique seu modo escuro padrão. "
"(Contribuição de Yorik Hansen em :gh:`123430`.)"

#: ../../whatsnew/3.14.rst:1418
msgid ""
"The :mod:`http.server` module now supports serving over HTTPS using the :"
"class:`http.server.HTTPSServer` class. This functionality is exposed by the "
"command-line interface (``python -m http.server``) through the following "
"options:"
msgstr ""
"O módulo :mod:`http.server` agora provê suporte para HTTPS usando a classe :"
"class:`http.server.HTTPSServer`. Essa funcionalidade é exposta pela "
"interface de linha de comando (``python -m http.server``) por meio das "
"seguintes opções:"

#: ../../whatsnew/3.14.rst:1423
msgid ""
":option:`--tls-cert \\<path\\> <http.server --tls-cert>`: Path to the TLS "
"certificate file."
msgstr ""
":option:`--tls-cert \\<caminho\\> <http.server --tls-cert>`: Caminho para o "
"arquivo de certificado TLS."

#: ../../whatsnew/3.14.rst:1425
msgid ""
":option:`--tls-key \\<path\\> <http.server --tls-key>`: Optional path to the "
"private key file."
msgstr ""
":option:`--tls-key \\<caminho\\> <http.server --tls-key>`: Caminho opcional "
"para o arquivo chave privado."

#: ../../whatsnew/3.14.rst:1427
msgid ""
":option:`--tls-password-file \\<path\\> <http.server --tls-password-file>`: "
"Optional path to the password file for the private key."
msgstr ""
":option:`--tls-password-file \\<caminho\\> <http.server --tls-password-"
"file>`: Caminho opcional para o arquivo de senha da chave privada."

#: ../../whatsnew/3.14.rst:1430
msgid "(Contributed by Semyon Moroz in :gh:`85162`.)"
msgstr "(Contribuição de Semyon Moroz em :gh:`85162`.)"

#: ../../whatsnew/3.14.rst:1434
msgid "imaplib"
msgstr "imaplib"

#: ../../whatsnew/3.14.rst:1436
msgid ""
"Add :meth:`.IMAP4.idle`, implementing the IMAP4 ``IDLE`` command as defined "
"in :rfc:`2177`. (Contributed by Forest in :gh:`55454`.)"
msgstr ""
"Adiciona :meth:`.IMAP4.idle`, que implementa o comando ``IDLE`` do IMAP4 "
"conforme definido em :rfc:`2177`. (Contribuição de Forest em :gh:`55454`.)"

#: ../../whatsnew/3.14.rst:1442
msgid "inspect"
msgstr "inspect"

#: ../../whatsnew/3.14.rst:1444
msgid ""
":func:`~inspect.signature` takes a new argument *annotation_format* to "
"control the :class:`annotationlib.Format` used for representing annotations. "
"(Contributed by Jelle Zijlstra in :gh:`101552`.)"
msgstr ""
":func:`~inspect.signature` recebe um novo argumento *annotation_format* para "
"controlar o :class:`annotationlib.Format` usado para representar anotações. "
"(Contribuição de Jelle Zijlstra em :gh:`101552`.)"

#: ../../whatsnew/3.14.rst:1448
msgid ""
":meth:`.Signature.format` takes a new argument *unquote_annotations*. If "
"true, string :term:`annotations <annotation>` are displayed without "
"surrounding quotes. (Contributed by Jelle Zijlstra in :gh:`101552`.)"
msgstr ""
":meth:`.Signature.format` recebe um novo argumento *unquote_annotations*. Se "
"verdadeiro, string com :term:`anotações <annotation>` são exibidas sem as "
"aspas ao redor. (Contribuição de Jelle Zijlstra em :gh:`101552`.)"

#: ../../whatsnew/3.14.rst:1453
msgid ""
"Add function :func:`~inspect.ispackage` to determine whether an object is a :"
"term:`package` or not. (Contributed by Zhikang Yan in :gh:`125634`.)"
msgstr ""
"Adiciona a função :func:`~inspect.ispackage` para determinar se um objeto é "
"um :term:`pacote` ou não. (Contribuição de Zhikang Yan em :gh:`125634`.)"

#: ../../whatsnew/3.14.rst:1459 ../../whatsnew/3.14.rst:2240
msgid "io"
msgstr "io"

#: ../../whatsnew/3.14.rst:1461
msgid ""
"Reading text from a non-blocking stream with ``read`` may now raise a :exc:"
"`BlockingIOError` if the operation cannot immediately return bytes. "
"(Contributed by Giovanni Siragusa in :gh:`109523`.)"
msgstr ""
"A leitura de texto de um fluxo sem bloqueio com ``read`` pode agora levantar "
"um :exc:`BlockingIOError` se a operação não puder  imediatamente retornar "
"bytes. (Contribuição de Giovanni Siragusa em :gh:`109523`.)"

#: ../../whatsnew/3.14.rst:1465
msgid ""
"Add the :class:`~io.Reader` and :class:`~io.Writer` protocols as simpler "
"alternatives to the pseudo-protocols :class:`typing.IO`, :class:`typing."
"TextIO`, and :class:`typing.BinaryIO`. (Contributed by Sebastian Rittau in :"
"gh:`127648`.)"
msgstr ""
"Adiciona os protocolos :class:`~io.Reader` e :class:`~io.Writer` como "
"alternativas mais simples aos pseudoprotocolos :class:`typing.IO`, :class:"
"`typing.TextIO` e :class:`typing.BinaryIO`. (Contribuição de Sebastian "
"Rittau em :gh:`127648`.)"

#: ../../whatsnew/3.14.rst:1472
msgid "json"
msgstr "json"

#: ../../whatsnew/3.14.rst:1474
msgid ""
"Add exception notes for JSON serialization errors that allow identifying the "
"source of the error. (Contributed by Serhiy Storchaka in :gh:`122163`.)"
msgstr ""
"Adiciona notas de exceção para erros de serialização JSON que permitam "
"identificar a origem do erro. (Contribuição de Serhiy Storchaka em :gh:"
"`122163`.)"

#: ../../whatsnew/3.14.rst:1478
msgid ""
"Allow using the :mod:`json` module as a script using the :option:`-m` "
"switch: :program:`python -m json`. This is now preferred to :program:`python "
"-m json.tool`, which is :term:`soft deprecated`. See the :ref:`JSON command-"
"line interface <json-commandline>` documentation. (Contributed by Trey "
"Hunner in :gh:`122873`.)"
msgstr ""
"Permite usar o módulo :mod:`json` como script usando a opção :option:`-m`: :"
"program:`python -m json`. Isso é agora preferível a :program:`python -m json."
"tool`, o que está :term:`suavemente descontinuado`. Consulte a documentação "
"da :ref:`interface de linha de comando JSON <json-commandline>`. "
"(Contribuição de Trey Hunner em :gh:`122873`.)"

#: ../../whatsnew/3.14.rst:1485
msgid ""
"By default, the output of the :ref:`JSON command-line interface <json-"
"commandline>` is highlighted in color. This can be controlled by :ref:"
"`environment variables <using-on-controlling-color>`. (Contributed by Tomas "
"Roun in :gh:`131952`.)"
msgstr ""
"Por padrão, a saída da :ref:`interface de linha de comando JSON <json-"
"commandline>` é destacada em cores. Isso pode ser controlado por :ref:"
"`variáveis de ambiente <using-on-controlling-color>` . (Contribuição de "
"Tomas Roun em :gh:`131952`.)"

#: ../../whatsnew/3.14.rst:1493
msgid "linecache"
msgstr "linecache"

#: ../../whatsnew/3.14.rst:1495
msgid ""
":func:`~linecache.getline` can now retrieve source code for frozen modules. "
"(Contributed by Tian Gao in :gh:`131638`.)"
msgstr ""
":func:`~linecache.getline` pode agora recuperar código-fonte de módulos "
"congelados. (Contribuição de Tian Gao em :gh:`131638`.)"

#: ../../whatsnew/3.14.rst:1500
msgid "logging.handlers"
msgstr "logging.handlers"

#: ../../whatsnew/3.14.rst:1502
msgid ""
":class:`~logging.handlers.QueueListener` objects now support the :term:"
"`context manager` protocol. (Contributed by Charles Machalow in :gh:"
"`132106`.)"
msgstr ""
"Objetos :class:`~logging.handlers.QueueListener` agora oferecem suporte ao "
"protocolo de :term:`gerenciador de contexto`. (Contribuição de Charles "
"Machalow em :gh:`132106`.)"

#: ../../whatsnew/3.14.rst:1506
msgid ""
":meth:`QueueListener.start <logging.handlers.QueueListener.start>` now "
"raises a :exc:`RuntimeError` if the listener is already started. "
"(Contributed by Charles Machalow in :gh:`132106`.)"
msgstr ""
":meth:`QueueListener.start <logging.handlers.QueueListener.start>` agora "
"levanta :exc:`RuntimeError` se o ouvinte já tiver sido iniciado. "
"(Contribuição de Charles Machalow em :gh:`132106`.)"

#: ../../whatsnew/3.14.rst:1512
msgid "math"
msgstr "math"

#: ../../whatsnew/3.14.rst:1514
msgid ""
"Added more detailed error messages for domain errors in the module. "
"(Contributed by Charlie Zhao and Sergey B Kirpichev in :gh:`101410`.)"
msgstr ""
"Adicionadas mensagens de erro mais detalhadas para erros de domínio no "
"módulo. (Contribuição de Charlie Zhao e Sergey B Kirpichev em :gh:`101410`.)"

#: ../../whatsnew/3.14.rst:1519
msgid "mimetypes"
msgstr "mimetypes"

#: ../../whatsnew/3.14.rst:1521
msgid ""
"Add a public :ref:`command-line <mimetypes-cli>` for the module, invoked "
"via :program:`python -m mimetypes`. (Contributed by Oleg Iarygin and Hugo "
"van Kemenade in :gh:`93096`.)"
msgstr ""
"Adiciona uma :ref:`linha de comando <mimetypes-cli>` pública para o módulo, "
"invocada via :program:`python -m mimetypes`. (Contribuição de Oleg Iarygin e "
"Hugo van Kemenade em :gh:`93096`.)"

#: ../../whatsnew/3.14.rst:1525
msgid "Add several new MIME types based on RFCs and common usage:"
msgstr "Adiciona vários novos tipos MIME com base em RFCs e usos comuns:"

#: ../../whatsnew/3.14.rst:0
msgid "Microsoft and :rfc:`8081` MIME types for fonts"
msgstr "Tipos MIME da Microsoft e do :rfc:`8081` para fontes"

#: ../../whatsnew/3.14.rst:1529
msgid "Embedded OpenType: ``application/vnd.ms-fontobject``"
msgstr "Embedded OpenType: ``application/vnd.ms-fontobject``"

#: ../../whatsnew/3.14.rst:1530
msgid "OpenType Layout (OTF) ``font/otf``"
msgstr "OpenType Layout (OTF) ``font/otf``"

#: ../../whatsnew/3.14.rst:1531
msgid "TrueType: ``font/ttf``"
msgstr "TrueType: ``font/ttf``"

#: ../../whatsnew/3.14.rst:1532
msgid "WOFF 1.0 ``font/woff``"
msgstr "WOFF 1.0 ``font/woff``"

#: ../../whatsnew/3.14.rst:1533
msgid "WOFF 2.0 ``font/woff2``"
msgstr "WOFF 2.0 ``font/woff2``"

#: ../../whatsnew/3.14.rst:0
msgid ""
":rfc:`9559` MIME types for Matroska audiovisual data container structures"
msgstr ""
"Tipos MIME de :rfc:`9559` para estruturas de contêiner de dados audiovisuais "
"Matroska"

#: ../../whatsnew/3.14.rst:1538
msgid "audio with no video: ``audio/matroska`` (``.mka``)"
msgstr "áudio com nenhum vídeo: ``audio/matroska`` (``.mka``)"

#: ../../whatsnew/3.14.rst:1539
msgid "video: ``video/matroska`` (``.mkv``)"
msgstr "vídeo: ``video/matroska`` (``.mkv``)"

#: ../../whatsnew/3.14.rst:1540
msgid "stereoscopic video: ``video/matroska-3d`` (``.mk3d``)"
msgstr "vídeo estereoscópico: ``video/matroska-3d`` (``.mk3d``)"

#: ../../whatsnew/3.14.rst:0
msgid "Images with RFCs"
msgstr "Imagens com RFCs"

#: ../../whatsnew/3.14.rst:1544
msgid ":rfc:`1494`: CCITT Group 3 (``.g3``)"
msgstr ":rfc:`1494`: CCITT Group 3 (``.g3``)"

#: ../../whatsnew/3.14.rst:1545
msgid ":rfc:`3362`: Real-time Facsimile, T.38 (``.t38``)"
msgstr ":rfc:`3362`: Real-time Facsimile, T.38 (``.t38``)"

#: ../../whatsnew/3.14.rst:1546
msgid ""
":rfc:`3745`: JPEG 2000 (``.jp2``), extension (``.jpx``) and compound (``."
"jpm``)"
msgstr ""
":rfc:`3745`: JPEG 2000 (``.jp2``), extensão (``.jpx``) e composto (``.jpm``)"

#: ../../whatsnew/3.14.rst:1547
msgid ":rfc:`3950`: Tag Image File Format Fax eXtended, TIFF-FX (``.tfx``)"
msgstr ":rfc:`3950`: Tag Image File Format Fax eXtended, TIFF-FX (``.tfx``)"

#: ../../whatsnew/3.14.rst:1548
msgid ":rfc:`4047`: Flexible Image Transport System (``.fits``)"
msgstr ":rfc:`4047`: Flexible Image Transport System (``.fits``)"

#: ../../whatsnew/3.14.rst:1549
msgid ""
":rfc:`7903`: Enhanced Metafile (``.emf``) and Windows Metafile (``.wmf``)"
msgstr ""
":rfc:`7903`: Enhanced Metafile (``.emf``) and Windows Metafile (``.wmf``)"

#: ../../whatsnew/3.14.rst:0
msgid "Other MIME type additions and changes"
msgstr "Outras adições e alterações de tipos MIME"

#: ../../whatsnew/3.14.rst:1553
msgid ""
":rfc:`2361`: Change type for ``.avi`` to ``video/vnd.avi`` and for ``.wav`` "
"to ``audio/vnd.wave``"
msgstr ""
":rfc:`2361`: altera o tipo de ``.avi`` para ``video/vnd.avi`` e de ``.wav`` "
"para ``audio/vnd.wave``"

#: ../../whatsnew/3.14.rst:1555
msgid ":rfc:`4337`: Add MPEG-4 ``audio/mp4`` (``.m4a``)"
msgstr ":rfc:`4337`: adiciona MPEG-4 ``audio/mp4`` (``.m4a``)"

#: ../../whatsnew/3.14.rst:1556
msgid ":rfc:`5334`: Add Ogg media (``.oga``, ``.ogg`` and ``.ogx``)"
msgstr ":rfc:`5334`: adiciona mídia Ogg (``.oga``, ``.ogg`` e ``.ogx``)"

#: ../../whatsnew/3.14.rst:1557
msgid ":rfc:`6713`: Add gzip ``application/gzip`` (``.gz``)"
msgstr ":rfc:`6713`: adiciona gzip ``aplication/gzip`` (``.gz``)"

#: ../../whatsnew/3.14.rst:1558
msgid ":rfc:`9639`: Add FLAC ``audio/flac`` (``.flac``)"
msgstr ":rfc:`9639`: adiciona FLAC ``audio/flac`` (``.flac``)"

#: ../../whatsnew/3.14.rst:1559
msgid ""
":rfc:`9512` ``application/yaml`` MIME type for YAML files (``.yaml`` and ``."
"yml``)"
msgstr ""
"O tipo MIME ``application/yaml`` para arquivos YAML (``.yaml`` e ``.yml``) "
"do :rfc:`9512`"

#: ../../whatsnew/3.14.rst:1561
msgid "Add 7z ``application/x-7z-compressed`` (``.7z``)"
msgstr "Adiciona 7z ``aplication/x-7z-compressed`` (``.7z``)"

#: ../../whatsnew/3.14.rst:1562
msgid ""
"Add Android Package ``application/vnd.android.package-archive`` (``.apk``) "
"when not strict"
msgstr ""
"Adiciona Android Package ``application/vnd.android.package-archive`` (``."
"apk``) quando não for rigoroso"

#: ../../whatsnew/3.14.rst:1564
msgid "Add deb ``application/x-debian-package`` (``.deb``)"
msgstr "Adiciona deb ``application/x-debian-package`` (``.deb``)"

#: ../../whatsnew/3.14.rst:1565
msgid "Add glTF binary ``model/gltf-binary`` (``.glb``)"
msgstr "Adiciona glTF binário ``model/gltf-binary`` (``.glb``)"

#: ../../whatsnew/3.14.rst:1566
msgid "Add glTF JSON/ASCII ``model/gltf+json`` (``.gltf``)"
msgstr "Adiciona glTF JSON/ASCII ``model/gltf+json`` (``.gltf``)"

#: ../../whatsnew/3.14.rst:1567
msgid "Add M4V ``video/x-m4v`` (``.m4v``)"
msgstr "Adiciona M4V ``video/x-m4v`` (``.m4v``)"

#: ../../whatsnew/3.14.rst:1568
msgid "Add PHP ``application/x-httpd-php`` (``.php``)"
msgstr "Adiciona PHP ``application/x-httpd-php`` (``.php``)"

#: ../../whatsnew/3.14.rst:1569
msgid "Add RAR ``application/vnd.rar`` (``.rar``)"
msgstr "Adiciona RAR ``application/vnd.rar`` (``.rar``)"

#: ../../whatsnew/3.14.rst:1570
msgid "Add RPM ``application/x-rpm`` (``.rpm``)"
msgstr "Adiciona RPM ``application/x-rpm`` (``.rpm``)"

#: ../../whatsnew/3.14.rst:1571
msgid "Add STL ``model/stl`` (``.stl``)"
msgstr "Adiciona STL ``model/stl`` (``.stl``)"

#: ../../whatsnew/3.14.rst:1572
msgid "Add Windows Media Video ``video/x-ms-wmv`` (``.wmv``)"
msgstr "Adiciona Windows Media Video ``video/x-ms-wmv`` (``.wmv``)"

#: ../../whatsnew/3.14.rst:1573
msgid "De facto: Add WebM ``audio/webm`` (``.weba``)"
msgstr "De facto: adiciona WebM ``audio/webm`` (``.weba``)"

#: ../../whatsnew/3.14.rst:1574
msgid ""
"`ECMA-376 <https://ecma-international.org/publications-and-standards/"
"standards/ecma-376/>`__: Add ``.docx``, ``.pptx`` and ``.xlsx`` types"
msgstr ""
"`ECMA-376 <https://ecma-international.org/publications-and-standards/"
"standards/ecma-376/>`__: adiciona tipos ``.docx``, ``.pptx`` e ``.xlsx``"

#: ../../whatsnew/3.14.rst:1577
msgid ""
"`OASIS <https://docs.oasis-open.org/office/v1.2/cs01/OpenDocument-v1.2-cs01-"
"part1.html#Appendix_C>`__: Add OpenDocument ``.odg``, ``.odp``, ``.ods`` and "
"``.odt`` types"
msgstr ""
"`OASIS <https://docs.oasis-open.org/office/v1.2/cs01/OpenDocument-v1.2-cs01-"
"part1.html#Appendix_C>`__: adiciona tipos OpenDocument ``.odg``, ``.odp``, "
"``.ods`` e ``.odt``"

#: ../../whatsnew/3.14.rst:1580
msgid ""
"`W3C <https://www.w3.org/TR/epub-33/#app-media-type>`__: Add EPUB "
"``application/epub+zip`` (``.epub``)"
msgstr ""
"`W3C <https://www.w3.org/TR/epub-33/#app-media-type>`__: adiciona EPUB "
"``application/epub+zip`` (``.epub``)"

#: ../../whatsnew/3.14.rst:1583
msgid ""
"(Contributed by Sahil Prajapati and Hugo van Kemenade in :gh:`84852`, by "
"Sasha \"Nelie\" Chernykh and Hugo van Kemenade in :gh:`132056`, and by Hugo "
"van Kemenade in :gh:`89416`, :gh:`85957`, and :gh:`129965`.)"
msgstr ""
"(Contribuição de Sahil Prajapati e Hugo van Kemenade em :gh:`84852`, de "
"Sasha \"Nelie\" Chernykh e Hugo van Kemenade em :gh:`132056`, e de Hugo van "
"Kemenade em :gh:`89416`, :gh:`85957` e :gh:`129965`.)"

#: ../../whatsnew/3.14.rst:1589
msgid "multiprocessing"
msgstr "multiprocessing"

#: ../../whatsnew/3.14.rst:1593
msgid ""
"On Unix platforms other than macOS, :ref:`'forkserver' <multiprocessing-"
"start-method-forkserver>` is now the default :ref:`start method "
"<multiprocessing-start-methods>` (replacing :ref:`'fork' <multiprocessing-"
"start-method-fork>`). This change does not affect Windows or macOS, where :"
"ref:`'spawn' <multiprocessing-start-method-spawn>` remains the default start "
"method."
msgstr ""
"Em plataformas Unix diferentes do macOS, :ref:`'forkserver' <multiprocessing-"
"start-method-forkserver>` agora é o :ref:`método de inicialização "
"<multiprocessing-start-methods>` padrão (substituindo :ref:`'fork' "
"<multiprocessing-start-method-fork>`). Essa alteração não afeta o Windows ou "
"o macOS, onde :ref:`'spawn' <multiprocessing-start-method-spawn>` continua "
"sendo o método de inicialização padrão."

#: ../../whatsnew/3.14.rst:1600
msgid ""
"If the threading incompatible *fork* method is required, you must explicitly "
"request it via a context from :func:`~multiprocessing.get_context` "
"(preferred) or change the default via :func:`~multiprocessing."
"set_start_method`."
msgstr ""
"Se o método *fork* incompatível com threads for necessário, você deverá "
"solicitá-lo explicitamente com um contexto de :func:`~multiprocessing."
"get_context` (preferencial) ou mudar o método padrão com :func:"
"`~multiprocessing.set_start_method`."

#: ../../whatsnew/3.14.rst:1611
msgid ""
":mod:`multiprocessing`'s ``'forkserver'`` start method now authenticates its "
"control socket to avoid solely relying on filesystem permissions to restrict "
"what other processes could cause the forkserver to spawn workers and run "
"code. (Contributed by Gregory P. Smith for :gh:`97514`.)"
msgstr ""
"O método de inicialização ``'forkserver'`` do :mod:`multiprocessing` agora "
"autentica seu soquete de controle para evitar depender exclusivamente das "
"permissões do sistema de arquivos para restringir quais outros processos "
"poderiam fazer com que o forkserver gerasse workers e executasse código. "
"(Contribuição de Gregory P. Smith em :gh:`97514`.)"

#: ../../whatsnew/3.14.rst:1617
msgid ""
"The :ref:`multiprocessing proxy objects <multiprocessing-proxy_objects>` for "
"*list* and *dict* types gain previously overlooked missing methods:"
msgstr ""
"Os :ref:`objetos proxies de multiprocessing <multiprocessing-proxy_objects>` "
"para os tipos *list* e *dict* ganhou métodos anteriormente ausentes:"

#: ../../whatsnew/3.14.rst:1620
msgid ":meth:`!clear` and :meth:`!copy` for proxies of :class:`list`"
msgstr ":meth:`!clear` e :meth:`!copy` para proxies de :class:`list`"

#: ../../whatsnew/3.14.rst:1621
msgid ""
":meth:`~dict.fromkeys`, ``reversed(d)``, ``d | {}``, ``{} | d``, ``d |= "
"{'b': 2}`` for proxies of :class:`dict`"
msgstr ""
":meth:`~dict.fromkeys`, ``reversed(d)``, ``d | {}``, ``{} | d``, ``d |= "
"{'b': 2}`` para proxies de :class:`dict`"

#: ../../whatsnew/3.14.rst:1624
msgid "(Contributed by Roy Hyunjin Han for :gh:`103134`.)"
msgstr "(Contribuição de Roy Hyunjin Han em :gh:`103134`.)"

#: ../../whatsnew/3.14.rst:1626
msgid ""
"Add support for shared :class:`set` objects via :meth:`.SyncManager.set`. "
"The :func:`set` in :func:`~multiprocessing.Manager` method is now available. "
"(Contributed by Mingyu Park in :gh:`129949`.)"
msgstr ""
"Adiciona suporte para objetos :class:`set` compartilhado via :meth:`."
"SyncManager.set`. O método :func:`set` em :func:`~multiprocessing.Manager` "
"está agora disponível. (Contribuição de Mingyu Park em :gh:`129949`.)"

#: ../../whatsnew/3.14.rst:1631
msgid ""
"Add the :meth:`~multiprocessing.Process.interrupt` to :class:"
"`multiprocessing.Process` objects, which terminates the child process by "
"sending :py:const:`~signal.SIGINT`. This enables :keyword:`finally` clauses "
"to print a stack trace for the terminated process. (Contributed by Artem "
"Pulkin in :gh:`131913`.)"
msgstr ""
"Adiciona :meth:`~multiprocessing.Process.interrupt` para objetos :class:"
"`multiprocessing.Process`, que encerra o processo filho enviando :py:const:"
"`~signal.SIGINT`. Isso permite a cláusula :keyword:`finally` exibir uma "
"stack trace (situação da pilha de execução) para o processo encerrado. "
"(Contribuição de Artem Pulkin em :gh:`131913`.)"

#: ../../whatsnew/3.14.rst:1639
msgid "operator"
msgstr "operador"

#: ../../whatsnew/3.14.rst:1641
msgid ""
"Add :func:`~operator.is_none` and :func:`~operator.is_not_none` as a pair of "
"functions, such that ``operator.is_none(obj)`` is equivalent to ``obj is "
"None`` and ``operator.is_not_none(obj)`` is equivalent to ``obj is not "
"None``. (Contributed by Raymond Hettinger and Nico Mexis in :gh:`115808`.)"
msgstr ""
"Adiciona :func:`~operator.is_none` e :func:`~operator.is_not_none` como um "
"par de funções, de modo que ``operator.is_none(obj)`` equivale a ``obj is "
"None`` e ``operator.is_not_none(obj)`` equivale a ``obj is not None``. "
"(Contribuição de Raymond Hettinger e Nico Mexis em :gh:`115808`.)"

#: ../../whatsnew/3.14.rst:1649
msgid "os"
msgstr "os"

#: ../../whatsnew/3.14.rst:1651
msgid ""
"Add the :func:`~os.reload_environ` function to update :data:`os.environ` "
"and :data:`os.environb` with changes to the environment made by :func:`os."
"putenv`, by :func:`os.unsetenv`, or made outside Python in the same process. "
"(Contributed by Victor Stinner in :gh:`120057`.)"
msgstr ""
"Adiciona a função :func:`~os.reload_environ` para atualizar :data:`os."
"environ` e :data:`os.environb` com alterações no ambiente feitas por :func:"
"`os.putenv` e :func:`os.unsetenv`, ou feitas fora do Python no mesmo "
"processo. (Contribuição de Victor Stinner em :gh:`120057`.)"

#: ../../whatsnew/3.14.rst:1657
msgid ""
"Add the :data:`~os.SCHED_DEADLINE` and :data:`~os.SCHED_NORMAL` constants to "
"the :mod:`!os` module. (Contributed by James Roy in :gh:`127688`.)"
msgstr ""
"Adiciona as constantes :data:`~os.SCHED_DEADLINE` e :data:`~os.SCHED_NORMAL` "
"ao módulo :mod:`!os`. (Contribuição de James Roy em :gh:`127688`.)"

#: ../../whatsnew/3.14.rst:1661
msgid ""
"Add the :func:`~os.readinto` function to read into a :ref:`buffer object "
"<bufferobjects>` from a file descriptor. (Contributed by Cody Maloney in :gh:"
"`129205`.)"
msgstr ""
"Adiciona a função :func:`~os.readinto` para ler em um :ref:`objeto buffer "
"<bufferobjects>` de um descritor de arquivo. (Contribuição de Cody Maloney "
"em :gh:`129205`.)"

#: ../../whatsnew/3.14.rst:1667
msgid "os.path"
msgstr "os.path"

#: ../../whatsnew/3.14.rst:1669
msgid ""
"The *strict* parameter to :func:`~os.path.realpath` accepts a new value, :"
"data:`~os.path.ALLOW_MISSING`. If used, errors other than :exc:"
"`FileNotFoundError` will be re-raised; the resulting path can be missing but "
"it will be free of symlinks. (Contributed by Petr Viktorin for :cve:"
"`2025-4517`.)"
msgstr ""
"O parâmetro *strict* para :func:`~os.path.realpath` aceita um novo valor, :"
"data:`~os.path.ALLOW_MISSING`. Se usado, erros diferentes de :exc:"
"`FileNotFoundError` serão levantados novamente; o caminho resultante pode "
"estar ausente, mas estará livre de links simbólicos. (Contribuição de Petr "
"Viktorin para :cve:`2025-4517`.)"

#: ../../whatsnew/3.14.rst:1677 ../../whatsnew/3.14.rst:2249
#: ../../whatsnew/3.14.rst:2501
msgid "pathlib"
msgstr "pathlib"

#: ../../whatsnew/3.14.rst:1679
msgid ""
"Add methods to :class:`pathlib.Path` to recursively copy or move files and "
"directories:"
msgstr ""
"Adiciona métodos a :class:`pathlib.Path` para copiar ou mover arquivos e "
"diretórios recursivamente:"

#: ../../whatsnew/3.14.rst:1682
msgid ""
":meth:`~pathlib.Path.copy` copies a file or directory tree to a destination."
msgstr ""
":meth:`~pathlib.Path.copy` copia um arquivo ou árvore de diretório para um "
"destino."

#: ../../whatsnew/3.14.rst:1683
msgid ":meth:`~pathlib.Path.copy_into` copies *into* a destination directory."
msgstr ":meth:`~pathlib.Path.copy_into` copia *para* um diretório de destino."

#: ../../whatsnew/3.14.rst:1684
msgid ""
":meth:`~pathlib.Path.move` moves a file or directory tree to a destination."
msgstr ""
":meth:`~pathlib.Path.move` move um arquivo ou árvore de diretórios para um "
"destino."

#: ../../whatsnew/3.14.rst:1685
msgid ":meth:`~pathlib.Path.move_into` moves *into* a destination directory."
msgstr ":meth:`~pathlib.Path.move_into` move *para* um diretório de destino."

#: ../../whatsnew/3.14.rst:1687
msgid "(Contributed by Barney Gale in :gh:`73991`.)"
msgstr "(Contribuição de Barney Gale em :gh:`73991`.)"

#: ../../whatsnew/3.14.rst:1689
msgid ""
"Add the :attr:`~pathlib.Path.info` attribute, which stores an object "
"implementing the new :class:`pathlib.types.PathInfo` protocol. The object "
"supports querying the file type and internally caching :func:`~os.stat` "
"results. Path objects generated by :meth:`~pathlib.Path.iterdir` are "
"initialized with file type information gleaned from scanning the parent "
"directory. (Contributed by Barney Gale in :gh:`125413`.)"
msgstr ""
"Adiciona o atributo :attr:`~pathlib.Path.info`, que armazena um objeto que "
"implementa o novo protocolo :class:`pathlib.types.PathInfo`. O objeto "
"oferece suporte à consulta do tipo de arquivo e armazenamento em cache "
"interno dos resultados de :func:`~os.stat`. Objetos de caminho gerados por :"
"meth:`~pathlib.Path.iterdir` são inicializados com informações do tipo de "
"arquivo obtidas a partir da varredura do diretório pai. (Contribuição de "
"Barney Gale em :gh:`125413`.)"

#: ../../whatsnew/3.14.rst:1699 ../../whatsnew/3.14.rst:2257
msgid "pdb"
msgstr "pdb"

#: ../../whatsnew/3.14.rst:1701
msgid ""
"The :mod:`pdb` module now supports remote attaching to a running Python "
"process using a new :option:`-p PID <pdb --pid>` command-line option:"
msgstr ""
"O módulo :mod:`pdb` agora oferece suporte a anexação remota a um processo "
"Python em execução usando uma nova opção de linha de comando :option:`-p PID "
"<pdb --pid>`:"

#: ../../whatsnew/3.14.rst:1704
msgid "python -m pdb -p 1234"
msgstr "python -m pdb -p 1234"

#: ../../whatsnew/3.14.rst:1708
msgid ""
"This will connect to the Python process with the given PID and allow you to "
"debug it interactively. Notice that due to how the Python interpreter works "
"attaching to a remote process that is blocked in a system call or waiting "
"for I/O will only work once the next bytecode instruction is executed or "
"when the process receives a signal."
msgstr ""
"Isso se conectará ao processo Python com o PID fornecido e permitirá que "
"você o depure interativamente. Observe que, devido ao funcionamento do "
"interpretador Python, a conexão a um processo remoto bloqueado em uma "
"chamada de sistema ou aguardando E/S só funcionará quando a próxima "
"instrução de bytecode for executada ou quando o processo receber um sinal."

#: ../../whatsnew/3.14.rst:1714
msgid ""
"This feature uses :ref:`PEP 768 <whatsnew314-remote-debugging>` and the new :"
"func:`sys.remote_exec` function to attach to the remote process and send the "
"PDB commands to it."
msgstr ""

#: ../../whatsnew/3.14.rst:1718
msgid "(Contributed by Matt Wozniski and Pablo Galindo in :gh:`131591`.)"
msgstr "(Contribuição de Matt Wozniski e Pablo Galindo em :gh:`131591`.)"

#: ../../whatsnew/3.14.rst:1720
msgid ""
"Hardcoded breakpoints (:func:`breakpoint` and :func:`~pdb.set_trace`) now "
"reuse the most recent :class:`~pdb.Pdb` instance that calls :meth:`~pdb.Pdb."
"set_trace`, instead of creating a new one each time. As a result, all the "
"instance specific data like :pdbcmd:`display` and :pdbcmd:`commands` are "
"preserved across hardcoded breakpoints. (Contributed by Tian Gao in :gh:"
"`121450`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:1727
msgid ""
"Add a new argument *mode* to :class:`pdb.Pdb`. Disable the ``restart`` "
"command when :mod:`pdb` is in ``inline`` mode. (Contributed by Tian Gao in :"
"gh:`123757`.)"
msgstr ""
"Adiciona um novo argumento *mode* a :class:`pdb.Pdb`. Desabilita o comando "
"``restart`` quando :mod:`pdb` estiver no modo ``inline``. (Contribuição de "
"Tian Gao em :gh:`123757`.)"

#: ../../whatsnew/3.14.rst:1731
msgid ""
"A confirmation prompt will be shown when the user tries to quit :mod:`pdb` "
"in ``inline`` mode. ``y``, ``Y``, ``<Enter>`` or ``EOF`` will confirm the "
"quit and call :func:`sys.exit`, instead of raising :exc:`bdb.BdbQuit`. "
"(Contributed by Tian Gao in :gh:`124704`.)"
msgstr ""
"Um prompt de confirmação será exibido quando o usuário tentar sair do "
"comando :mod:`pdb` no modo ``inline``. ``y``, ``Y``, ``<Enter>`` ou ``EOF`` "
"confirmarão o encerramento e chamarão :func:`sys.exit`, em vez de executar :"
"exc:`bdb.BdbQuit`. (Contribuição de Tian Gao em :gh:`124704`.)"

#: ../../whatsnew/3.14.rst:1736
msgid ""
"Inline breakpoints like :func:`breakpoint` or :func:`pdb.set_trace` will "
"always stop the program at calling frame, ignoring the ``skip`` pattern (if "
"any). (Contributed by Tian Gao in :gh:`130493`.)"
msgstr ""
"Pontos de interrupção em linha como :func:`breakpoint` ou :func:`pdb."
"set_trace` sempre interromperão o programa no quadro da chamada, ignorando o "
"padrão ``skip`` (se houver). (Contribuição de Tian Gao em :gh:`130493`.)"

#: ../../whatsnew/3.14.rst:1741
msgid ""
"``<tab>`` at the beginning of the line in :mod:`pdb` multi-line input will "
"fill in a 4-space indentation now, instead of inserting a ``\\t`` character. "
"(Contributed by Tian Gao in :gh:`130471`.)"
msgstr ""
"``<tab>`` no início da linha na entrada multilinha do :mod:`pdb` agora "
"preencherá um recuo de 4 espaços, em vez de inserir um caractere ``\\t``. "
"(Contribuição de Tian Gao em :gh:`130471`.)"

#: ../../whatsnew/3.14.rst:1745
msgid ""
"Auto-indent is introduced in :mod:`pdb` multi-line input. It will either "
"keep the indentation of the last line or insert a 4-space indentation when "
"it detects a new code block. (Contributed by Tian Gao in :gh:`133350`.)"
msgstr ""
"A indentação automática foi introduzida na entrada multilinha do :mod:`pdb`. "
"Ela mantém a indentação da última linha ou insere uma indentação de 4 "
"espaços ao detectar um novo bloco de código. (Contribuição de Tian Gao em :"
"gh:`133350`.)"

#: ../../whatsnew/3.14.rst:1750
msgid ""
"``$_asynctask`` is added to access the current asyncio task if applicable. "
"(Contributed by Tian Gao in :gh:`124367`.)"
msgstr ""
"``$_asynctask`` foi adicionado para acessar a tarefa asyncio atual, se "
"aplicável. (Contribuição de Tian Gao em :gh:`124367`.)"

#: ../../whatsnew/3.14.rst:1753
msgid ""
":func:`pdb.set_trace_async` is added to support debugging asyncio "
"coroutines. :keyword:`await` statements are supported with this function. "
"(Contributed by Tian Gao in :gh:`132576`.)"
msgstr ""
":func:`pdb.set_trace_async` foi adicionado para oferecer suporte à depuração "
"de corrotinas assíncronas. Instruções :keyword:`await` são suportadas com "
"esta função. (Contribuição de Tian Gao em :gh:`132576`.)"

#: ../../whatsnew/3.14.rst:1758
msgid ""
"Source code displayed in :mod:`pdb` will be syntax-highlighted. This feature "
"can be controlled using the same methods as the default :term:`interactive` "
"shell, in addition to the newly added ``colorize`` argument of :class:`pdb."
"Pdb`. (Contributed by Tian Gao and Łukasz Langa in :gh:`133355`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:1765
msgid "pickle"
msgstr "pickle"

#: ../../whatsnew/3.14.rst:1767
msgid ""
"Set the default protocol version on the :mod:`pickle` module to 5. For more "
"details, see :ref:`pickle protocols <pickle-protocols>`."
msgstr ""
"Define a versão do protocolo padrão no módulo :mod:`pickle` como 5. Para "
"mais detalhes, consulte :ref:`protocolos pickle <pickle-protocols>`."

#: ../../whatsnew/3.14.rst:1770
msgid ""
"Add exception notes for pickle serialization errors that allow identifying "
"the source of the error. (Contributed by Serhiy Storchaka in :gh:`122213`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:1776
msgid "platform"
msgstr "platform"

#: ../../whatsnew/3.14.rst:1778
msgid ""
"Add :func:`~platform.invalidate_caches`, a function to invalidate cached "
"results in the :mod:`!platform` module. (Contributed by Bénédikt Tran in :gh:"
"`122549`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:1784
msgid "pydoc"
msgstr "pydoc"

#: ../../whatsnew/3.14.rst:1786
msgid ""
":term:`Annotations <annotation>` in help output are now usually displayed in "
"a format closer to that in the original source. (Contributed by Jelle "
"Zijlstra in :gh:`101552`.)"
msgstr ""
":term:`Anotações <annotation>` na saída de ajuda agora são exibidas em um "
"formato mais próximo ao da fonte original. (Contribuição de Jelle Zijlstra "
"em :gh:`101552`.)"

#: ../../whatsnew/3.14.rst:1792
msgid "re"
msgstr "re"

#: ../../whatsnew/3.14.rst:1794
msgid ""
"Support ``\\z`` as a synonym for ``\\Z`` in :mod:`regular expressions <re>`. "
"It is interpreted unambiguously in many other regular expression engines, "
"unlike ``\\Z``, which has subtly different behavior. (Contributed by Serhiy "
"Storchaka in :gh:`133306`.)"
msgstr ""
"Suporte a ``\\z`` como sinônimo de ``\\Z`` em :mod:`expressões regulares "
"<re>`. É interpretado sem ambiguidade em muitos outros mecanismos de "
"expressão regular, ao contrário de ``\\Z``, que tem um comportamento "
"ligeiramente diferente. (Contribuição de Serhiy Storchaka em :gh:`133306`.)"

#: ../../whatsnew/3.14.rst:1799
msgid ""
"``\\B`` in :mod:`regular expression <re>` now matches the empty input "
"string, meaning that it is now always the opposite of ``\\b``. (Contributed "
"by Serhiy Storchaka in :gh:`124130`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:1805
msgid "socket"
msgstr "socket"

#: ../../whatsnew/3.14.rst:1807
msgid "Improve and fix support for Bluetooth sockets."
msgstr "Melhora e corrige o suporte para soquetes Bluetooth."

#: ../../whatsnew/3.14.rst:1809
msgid ""
"Fix support of Bluetooth sockets on NetBSD and DragonFly BSD. (Contributed "
"by Serhiy Storchaka in :gh:`132429`.)"
msgstr ""
"Corrige o suporte a soquetes Bluetooth no NetBSD e no DragonFly BSD. "
"(Contribuição de Serhiy Storchaka em :gh:`132429`.)"

#: ../../whatsnew/3.14.rst:1811
msgid ""
"Fix support for :const:`~socket.BTPROTO_HCI` on FreeBSD. (Contributed by "
"Victor Stinner in :gh:`111178`.)"
msgstr ""
"Corrige o suporte para :const:`~socket.BTPROTO_HCI` no FreeBSD. "
"(Contribuição de Victor Stinner em :gh:`111178`.)"

#: ../../whatsnew/3.14.rst:1813
msgid ""
"Add support for :const:`~socket.BTPROTO_SCO` on FreeBSD. (Contributed by "
"Serhiy Storchaka in :gh:`85302`.)"
msgstr ""
"Adiciona suporte para :const:`~socket.BTPROTO_SCO` no FreeBSD. (Contribuição "
"de Serhiy Storchaka em :gh:`85302`.)"

#: ../../whatsnew/3.14.rst:1815
msgid ""
"Add support for *cid* and *bdaddr_type* in the address for :const:`~socket."
"BTPROTO_L2CAP` on FreeBSD. (Contributed by Serhiy Storchaka in :gh:`132429`.)"
msgstr ""
"Adiciona suporte para *cid* e *bdaddr_type* no endereço para :const:`~socket."
"BTPROTO_L2CAP` no FreeBSD. (Contribuição de Serhiy Storchaka em :gh:"
"`132429`.)"

#: ../../whatsnew/3.14.rst:1818
msgid ""
"Add support for *channel* in the address for :const:`~socket.BTPROTO_HCI` on "
"Linux. (Contributed by Serhiy Storchaka in :gh:`70145`.)"
msgstr ""
"Adiciona suporte para *channel* no endereço para :const:`~socket."
"BTPROTO_HCI` no Linux. (Contribuição de Serhiy Storchaka em :gh:`70145`.)"

#: ../../whatsnew/3.14.rst:1821
msgid ""
"Accept an integer as the address for :const:`~socket.BTPROTO_HCI` on Linux. "
"(Contributed by Serhiy Storchaka in :gh:`132099`.)"
msgstr ""
"Aceita um inteiro como endereço para :const:`~socket.BTPROTO_HCI` no Linux. "
"(Contribuição de Serhiy Storchaka em :gh:`132099`.)"

#: ../../whatsnew/3.14.rst:1824
msgid ""
"Return *cid* in :meth:`~socket.socket.getsockname` for :const:`~socket."
"BTPROTO_L2CAP`. (Contributed by Serhiy Storchaka in :gh:`132429`.)"
msgstr ""
"Retorna *cid* em :meth:`~socket.socket.getsockname` para :const:`~socket."
"BTPROTO_L2CAP`. (Contribuição de Serhiy Storchaka em :gh:`132429`.)"

#: ../../whatsnew/3.14.rst:1827
msgid ""
"Add many new constants. (Contributed by Serhiy Storchaka in :gh:`132734`.)"
msgstr ""
"Adiciona muitas novas constantes. (Contribuição de Serhiy Storchaka em :gh:"
"`132734`.)"

#: ../../whatsnew/3.14.rst:1832
msgid "ssl"
msgstr "ssl"

#: ../../whatsnew/3.14.rst:1834
msgid ""
"Indicate through the :data:`~ssl.HAS_PHA` Boolean whether the :mod:`!ssl` "
"module supports TLSv1.3 post-handshake client authentication (PHA). "
"(Contributed by Will Childs-Klein in :gh:`128036`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:1840
msgid "struct"
msgstr "struct"

#: ../../whatsnew/3.14.rst:1842
msgid ""
"Support the :c:expr:`float complex` and :c:expr:`double complex` C types in "
"the :mod:`struct` module (formatting characters ``'F'`` and ``'D'`` "
"respectively). (Contributed by Sergey B Kirpichev in :gh:`121249`.)"
msgstr ""
"Suporte aos tipos C :c:expr:`float complex` e :c:expr:`double complex` no "
"módulo :mod:`struct` (formatando os caracteres ``'F'`` e ``'D'``, "
"respectivamente). (Contribuição de Sergey B Kirpichev em :gh:`121249`.)"

#: ../../whatsnew/3.14.rst:1849
msgid "symtable"
msgstr "symtable"

#: ../../whatsnew/3.14.rst:1851
msgid "Expose the following :class:`~symtable.Symbol` methods:"
msgstr ""

#: ../../whatsnew/3.14.rst:1853
msgid ":meth:`~symtable.Symbol.is_comp_cell`"
msgstr ":meth:`~symtable.Symbol.is_comp_cell`"

#: ../../whatsnew/3.14.rst:1854
msgid ":meth:`~symtable.Symbol.is_comp_iter`"
msgstr ":meth:`~symtable.Symbol.is_comp_iter`"

#: ../../whatsnew/3.14.rst:1855
msgid ":meth:`~symtable.Symbol.is_free_class`"
msgstr ":meth:`~symtable.Symbol.is_free_class`"

#: ../../whatsnew/3.14.rst:1857
msgid "(Contributed by Bénédikt Tran in :gh:`120029`.)"
msgstr "(Contribuição de Bénédikt Tran em :gh:`120029`.)"

#: ../../whatsnew/3.14.rst:1861
msgid "sys"
msgstr "sys"

#: ../../whatsnew/3.14.rst:1863
msgid ""
"The previously undocumented special function :func:`sys.getobjects`, which "
"only exists in specialized builds of Python, may now return objects from "
"other interpreters than the one it's called in. (Contributed by Eric Snow "
"in :gh:`125286`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:1868
msgid ""
"Add :func:`sys._is_immortal` for determining if an object is :term:"
"`immortal`. (Contributed by Peter Bierma in :gh:`128509`.)"
msgstr ""
"Adiciona :func:`sys._is_immortal` para determinar se um objeto é :term:"
"`imortal`. (Contribuição de Peter Bierma em :gh:`128509`.)"

#: ../../whatsnew/3.14.rst:1871
msgid ""
"On FreeBSD, :data:`sys.platform` no longer contains the major version "
"number. It is always ``'freebsd'``, instead of ``'freebsd13'`` or "
"``'freebsd14'``. (Contributed by Michael Osipov in :gh:`129393`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:1875
msgid ""
"Raise :exc:`DeprecationWarning` for :func:`sys._clear_type_cache`. This "
"function was deprecated in Python 3.13 but it didn't raise a runtime warning."
msgstr ""
"Levanta :exc:`DeprecationWarning` para :func:`sys._clear_type_cache`. Esta "
"função foi descontinuada no Python 3.13, mas não levantava um aviso em tempo "
"de execução."

#: ../../whatsnew/3.14.rst:1878
msgid ""
"Add :func:`sys.remote_exec` to implement the new external debugger "
"interface. See :ref:`PEP 768 <whatsnew314-remote-debugging>` for details. "
"(Contributed by Pablo Galindo Salgado, Matt Wozniski, and Ivona Stojanovic "
"in :gh:`131591`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:1883
msgid ""
"Add the :data:`sys._jit` namespace, containing utilities for introspecting "
"just-in-time compilation. (Contributed by Brandt Bucher in :gh:`133231`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:1889
msgid "sys.monitoring"
msgstr "sys.monitoring"

#: ../../whatsnew/3.14.rst:1891
msgid ""
"Add two new monitoring events, :monitoring-event:`BRANCH_LEFT` and :"
"monitoring-event:`BRANCH_RIGHT`. These replace and deprecate the :monitoring-"
"event:`!BRANCH` event. (Contributed by Mark Shannon in :gh:`122548`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:1898
msgid "sysconfig"
msgstr "sysconfig"

#: ../../whatsnew/3.14.rst:1900
msgid ""
"Add ``ABIFLAGS`` key to :func:`~sysconfig.get_config_vars` on Windows. "
"(Contributed by Xuehai Pan in :gh:`131799`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:1905
msgid "tarfile"
msgstr "tarfile"

#: ../../whatsnew/3.14.rst:1907
msgid ""
":func:`~tarfile.data_filter` now normalizes symbolic link targets in order "
"to avoid path traversal attacks. (Contributed by Petr Viktorin in :gh:"
"`127987` and :cve:`2025-4138`.)"
msgstr ""
":func:`~tarfile.data_filter` agora normaliza alvos de links simbólicos para "
"evitar ataques de travessia de caminho. (Contribuição de Petr Viktorin em :"
"gh:`127987` e :cve:`2025-4138`.)"

#: ../../whatsnew/3.14.rst:1911
msgid ""
":func:`~tarfile.TarFile.extractall` now skips fixing up directory attributes "
"when a directory was removed or replaced by another kind of file. "
"(Contributed by Petr Viktorin in :gh:`127987` and :cve:`2024-12718`.)"
msgstr ""
":func:`~tarfile.TarFile.extractall` agora ignora a correção de atributos de "
"diretório quando um diretório é removido ou substituído por outro tipo de "
"arquivo. (Contribuição de Petr Viktorin em :gh:`127987` e :cve:`2024-12718`.)"

#: ../../whatsnew/3.14.rst:1915
msgid ""
":func:`~tarfile.TarFile.extract` and :func:`~tarfile.TarFile.extractall` now "
"(re-)apply the extraction filter when substituting a link (hard or symbolic) "
"with a copy of another archive member, and when fixing up directory "
"attributes. The former raises a new exception, :exc:`~tarfile."
"LinkFallbackError`. (Contributed by Petr Viktorin for :cve:`2025-4330` and :"
"cve:`2024-12718`.)"
msgstr ""
":func:`~tarfile.TarFile.extract` e :func:`~tarfile.TarFile.extractall` agora "
"(re)aplicam o filtro de extração ao substituir um link (físico ou simbólico) "
"por uma cópia de outro membro do arquivo e ao corrigir atributos de "
"diretório. O primeiro levanta uma nova exceção, :exc:`~tarfile."
"LinkFallbackError`. (Contribuição de Petr Viktorin para :cve:`2025-4330` e :"
"cve:`2024-12718`.)"

#: ../../whatsnew/3.14.rst:1922
msgid ""
":func:`~tarfile.TarFile.extract` and :func:`~tarfile.TarFile.extractall` no "
"longer extract rejected members when :func:`~tarfile.TarFile.errorlevel` is "
"zero. (Contributed by Matt Prodani and Petr Viktorin in :gh:`112887` and :"
"cve:`2025-4435`.)"
msgstr ""
":func:`~tarfile.TarFile.extract` e :func:`~tarfile.TarFile.extractall` não "
"extraem mais membros rejeitados quando :func:`~tarfile.TarFile.errorlevel` é "
"zero. (Contribuição de Matt Prodani e Petr Viktorin em :gh:`112887` e :cve:"
"`2025-4435`.)"

#: ../../whatsnew/3.14.rst:1930
msgid "threading"
msgstr "threading"

#: ../../whatsnew/3.14.rst:1932
msgid ""
":meth:`threading.Thread.start` now sets the operating system thread name to :"
"attr:`threading.Thread.name`. (Contributed by Victor Stinner in :gh:`59705`.)"
msgstr ""
":meth:`threading.Thread.start` agora define o nome do thread do sistema "
"operacional como :attr:`threading.Thread.name`. (Contribuição de Victor "
"Stinner em :gh:`59705`.)"

#: ../../whatsnew/3.14.rst:1938
msgid "tkinter"
msgstr "tkinter"

#: ../../whatsnew/3.14.rst:1940
msgid ""
"Make :mod:`tkinter` widget methods :meth:`!after` and :meth:`!after_idle` "
"accept keyword arguments. (Contributed by Zhikang Yan in :gh:`126899`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:1944
msgid ""
"Add ability to specify a name for :class:`!tkinter.OptionMenu` and :class:`!"
"tkinter.ttk.OptionMenu`. (Contributed by Zhikang Yan in :gh:`130482`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:1950
msgid "turtle"
msgstr "turtle"

#: ../../whatsnew/3.14.rst:1952
msgid ""
"Add context managers for :func:`turtle.fill`, :func:`turtle.poly`, and :func:"
"`turtle.no_animation`. (Contributed by Marie Roald and Yngve Mardal Moe in :"
"gh:`126350`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:1958
msgid "types"
msgstr "tipos"

#: ../../whatsnew/3.14.rst:1960
msgid ""
":class:`types.UnionType` is now an alias for :class:`typing.Union`. See :ref:"
"`below <whatsnew314-typing-union>` for more details. (Contributed by Jelle "
"Zijlstra in :gh:`105499`.)"
msgstr ""
":class:`types.UnionType` agora é um apelido para :class:`typing.Union`. "
"Veja :ref:`abaixo <whatsnew314-typing-union>` para mais detalhes. "
"(Contribuição de Jelle Zijlstra em :gh:`105499`.)"

#: ../../whatsnew/3.14.rst:1966
msgid "typing"
msgstr "typing"

#: ../../whatsnew/3.14.rst:1970
msgid ""
"The :class:`types.UnionType` and :class:`typing.Union` types are now aliases "
"for each other, meaning that both old-style unions (created with "
"``Union[int, str]``) and new-style unions (``int | str``) now create "
"instances of the same runtime type. This unifies the behavior between the "
"two syntaxes, but leads to some differences in behavior that may affect "
"users who introspect types at runtime:"
msgstr ""

#: ../../whatsnew/3.14.rst:1977
msgid ""
"Both syntaxes for creating a union now produce the same string "
"representation in :func:`repr`. For example, ``repr(Union[int, str])`` is "
"now ``\"int | str\"`` instead of ``\"typing.Union[int, str]\"``."
msgstr ""

#: ../../whatsnew/3.14.rst:1982
msgid ""
"Unions created using the old syntax are no longer cached. Previously, "
"running ``Union[int, str]`` multiple times would return the same object "
"(``Union[int, str] is Union[int, str]`` would be ``True``), but now it will "
"return two different objects. Use ``==`` to compare unions for equality, not "
"``is``. New-style unions have never been cached this way. This change could "
"increase memory usage for some programs that use a large number of unions "
"created by subscripting ``typing.Union``. However, several factors offset "
"this cost: unions used in annotations are no longer evaluated by default in "
"Python 3.14 because of :pep:`649`; an instance of :class:`types.UnionType` "
"is itself much smaller than the object returned by ``Union[]`` was on prior "
"Python versions; and removing the cache also saves some space. It is "
"therefore unlikely that this change will cause a significant increase in "
"memory usage for most users."
msgstr ""

#: ../../whatsnew/3.14.rst:1998
msgid ""
"Previously, old-style unions were implemented using the private class "
"``typing._UnionGenericAlias``. This class is no longer needed for the "
"implementation, but it has been retained for backward compatibility, with "
"removal scheduled for Python 3.17. Users should use documented introspection "
"helpers like :func:`~typing.get_origin` and :func:`typing.get_args` instead "
"of relying on private implementation details."
msgstr ""

#: ../../whatsnew/3.14.rst:2007
msgid ""
"It is now possible to use :class:`typing.Union` itself in :func:`isinstance` "
"checks. For example, ``isinstance(int | str, typing.Union)`` will return "
"``True``; previously this raised :exc:`TypeError`."
msgstr ""
"Agora é possível usar o próprio :class:`typing.Union` em verificações de :"
"func:`isinstance`. Por exemplo, ``isinstance(int | str, typing.Union)`` "
"retornará ``True``; anteriormente, isso levantava :exc:`TypeError`."

#: ../../whatsnew/3.14.rst:2012
msgid ""
"The :attr:`!__args__` attribute of :class:`typing.Union` objects is no "
"longer writable."
msgstr ""

#: ../../whatsnew/3.14.rst:2015
msgid ""
"It is no longer possible to set any attributes on :class:`~typing.Union` "
"objects. This only ever worked for dunder attributes on previous versions, "
"was never documented to work, and was subtly broken in many cases."
msgstr ""

#: ../../whatsnew/3.14.rst:2020
msgid "(Contributed by Jelle Zijlstra in :gh:`105499`.)"
msgstr "(Contribuição de Jelle Zijlstra em :gh:`105499`.)"

#: ../../whatsnew/3.14.rst:2022
msgid ":class:`~typing.TypeAliasType` now supports star unpacking."
msgstr ""

#: ../../whatsnew/3.14.rst:2026
msgid "unicodedata"
msgstr "unicodedata"

#: ../../whatsnew/3.14.rst:2028
msgid "The Unicode database has been updated to Unicode 16.0.0."
msgstr "O banco de dados Unicode foi atualizado para Unicode 16.0.0."

#: ../../whatsnew/3.14.rst:2032
msgid "unittest"
msgstr "unittest"

#: ../../whatsnew/3.14.rst:2036
msgid ""
":mod:`unittest` output is now colored by default. This can be controlled by :"
"ref:`environment variables <using-on-controlling-color>`. (Contributed by "
"Hugo van Kemenade in :gh:`127221`.)"
msgstr ""
"A saída do :mod:`unittest` agora é colorida por padrão. Isso pode ser "
"controlado pelas :ref:`variáveis de ambiente <using-on-controlling-color>`. "
"(Contribuição de Hugo van Kemenade em :gh:`127221`.)"

#: ../../whatsnew/3.14.rst:2041
msgid ""
"unittest discovery supports :term:`namespace package` as start directory "
"again. It was removed in Python 3.11. (Contributed by Jacob Walls in :gh:"
"`80958`.)"
msgstr ""
"O Unittest Discovery suporta novamente :term:`pacote de espaço de nomes` "
"como diretório inicial. Ele foi removido no Python 3.11. (Contribuição de "
"Jacob Walls em :gh:`80958`.)"

#: ../../whatsnew/3.14.rst:2045
msgid ""
"A number of new methods were added in the :class:`~unittest.TestCase` class "
"that provide more specialized tests."
msgstr ""
"Vários novos métodos foram adicionados à classe :class:`~unittest.TestCase` "
"que fornecem testes mais especializados."

#: ../../whatsnew/3.14.rst:2048
msgid ""
":meth:`~unittest.TestCase.assertHasAttr` and :meth:`~unittest.TestCase."
"assertNotHasAttr` check whether the object has a particular attribute."
msgstr ""
":meth:`~unittest.TestCase.assertHasAttr` e :meth:`~unittest.TestCase."
"assertNotHasAttr` verificam se o objeto tem um atributo específico."

#: ../../whatsnew/3.14.rst:2051
msgid ""
":meth:`~unittest.TestCase.assertIsSubclass` and :meth:`~unittest.TestCase."
"assertNotIsSubclass` check whether the object is a subclass of a particular "
"class, or of one of a tuple of classes."
msgstr ""
":meth:`~unittest.TestCase.assertIsSubclass` e :meth:`~unittest.TestCase."
"assertNotIsSubclass` verificam se o objeto é uma subclasse de uma classe "
"específica ou de uma tupla de classes."

#: ../../whatsnew/3.14.rst:2054
msgid ""
":meth:`~unittest.TestCase.assertStartsWith`, :meth:`~unittest.TestCase."
"assertNotStartsWith`, :meth:`~unittest.TestCase.assertEndsWith` and :meth:"
"`~unittest.TestCase.assertNotEndsWith` check whether the Unicode or byte "
"string starts or ends with particular strings."
msgstr ""
":meth:`~unittest.TestCase.assertStartsWith`, :meth:`~unittest.TestCase."
"assertNotStartsWith`, :meth:`~unittest.TestCase.assertEndsWith` e :meth:"
"`~unittest.TestCase.assertNotEndsWith` verificam se a sequência de "
"caracteres Unicode ou de bytes começa ou termina com sequências de "
"caracteres específicas."

#: ../../whatsnew/3.14.rst:2060
msgid "(Contributed by Serhiy Storchaka in :gh:`71339`.)"
msgstr "(Contribuição de Serhiy Storchaka em :gh:`71339`.)"

#: ../../whatsnew/3.14.rst:2064 ../../whatsnew/3.14.rst:2547
msgid "urllib"
msgstr "urllib"

#: ../../whatsnew/3.14.rst:2066
msgid ""
"Upgrade HTTP digest authentication algorithm for :mod:`urllib.request` by "
"supporting SHA-256 digest authentication as specified in :rfc:`7616`. "
"(Contributed by Calvin Bui in :gh:`128193`.)"
msgstr ""
"Atualiza o algoritmo de autenticação de resumo HTTP para :mod:`urllib."
"request`, oferecendo suporte à autenticação de resumo SHA-256, conforme "
"especificado em :rfc:`7616`. (Contribuição de Calvin Bui em :gh:`128193`.)"

#: ../../whatsnew/3.14.rst:2070
msgid ""
"Improve ergonomics and standards compliance when parsing and emitting ``file:"
"`` URLs."
msgstr ""
"Melhora a ergonomia e a conformidade com os padrões ao analisar e emitir "
"URLs ``file:``."

#: ../../whatsnew/3.14.rst:2073
msgid "In :func:`~urllib.request.url2pathname`:"
msgstr ""

#: ../../whatsnew/3.14.rst:2075
msgid ""
"Accept a complete URL when the new *require_scheme* argument is set to true."
msgstr ""
"Aceita uma URL completa quando o novo argumento *require_scheme* for "
"definido como verdadeiro."

#: ../../whatsnew/3.14.rst:2077
msgid "Discard URL authority if it matches the local hostname."
msgstr ""
"Descarta a autoridade de URL se ela corresponder ao nome de host local."

#: ../../whatsnew/3.14.rst:2078
msgid ""
"Discard URL authority if it resolves to a local IP address when the new "
"*resolve_host* argument is set to true."
msgstr ""
"Descarta a autoridade de URL se ela for resolvida para um endereço IP local "
"quando o novo argumento *resolve_host* for definido como verdadeiro."

#: ../../whatsnew/3.14.rst:2080
msgid "Discard URL query and fragment components."
msgstr "Descarta componentes de consulta e fragmento de URL."

#: ../../whatsnew/3.14.rst:2081
msgid ""
"Raise :exc:`~urllib.error.URLError` if a URL authority isn't local, except "
"on Windows where we return a UNC path as before."
msgstr ""
"Levanta :exc:`~urllib.error.URLError` se uma autoridade de URL não for "
"local, exceto no Windows, onde retornamos um caminho UNC como antes."

#: ../../whatsnew/3.14.rst:2084
msgid "In :func:`~urllib.request.pathname2url`:"
msgstr ""

#: ../../whatsnew/3.14.rst:2086
msgid ""
"Return a complete URL when the new *add_scheme* argument is set to true."
msgstr ""
"Retorna uma URL completa quando o novo argumento *add_scheme* for definido "
"como verdadeiro."

#: ../../whatsnew/3.14.rst:2087
msgid ""
"Include an empty URL authority when a path begins with a slash. For example, "
"the path ``/etc/hosts`` is converted to the URL ``///etc/hosts``."
msgstr ""
"Inclui uma autoridade de URL vazia quando um caminho começar com uma barra. "
"Por exemplo, o caminho ``/etc/hosts`` é convertido para a URL ``///etc/"
"hosts``."

#: ../../whatsnew/3.14.rst:2090
msgid ""
"On Windows, drive letters are no longer converted to uppercase, and ``:`` "
"characters not following a drive letter no longer cause an :exc:`OSError` "
"exception to be raised."
msgstr ""
"No Windows, as letras de unidade não são mais convertidas em maiúsculas, e "
"os caracteres ``:`` que não seguem uma letra de unidade não causam mais o "
"levantamento de uma exceção :exc:`OSError`."

#: ../../whatsnew/3.14.rst:2094
msgid "(Contributed by Barney Gale in :gh:`125866`.)"
msgstr "(Contribuição de Barney Gale em :gh:`125866`.)"

#: ../../whatsnew/3.14.rst:2098 ../../whatsnew/3.14.rst:2269
msgid "uuid"
msgstr "uuid"

#: ../../whatsnew/3.14.rst:2100
msgid ""
"Add support for UUID versions 6, 7, and 8 via :func:`~uuid.uuid6`, :func:"
"`~uuid.uuid7`, and :func:`~uuid.uuid8` respectively, as specified in :rfc:"
"`9562`. (Contributed by Bénédikt Tran in :gh:`89083`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:2105
msgid ""
":const:`~uuid.NIL` and :const:`~uuid.MAX` are now available to represent the "
"Nil and Max UUID formats as defined by :rfc:`9562`. (Contributed by Nick "
"Pope in :gh:`128427`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:2109
msgid ""
"Allow generating multiple UUIDs simultaneously on the command-line via :"
"option:`python -m uuid --count <uuid --count>`. (Contributed by Simon Legner "
"in :gh:`131236`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:2115
msgid "webbrowser"
msgstr "webbrowser"

#: ../../whatsnew/3.14.rst:2117
msgid ""
"Names in the :envvar:`BROWSER` environment variable can now refer to already "
"registered browsers for the :mod:`webbrowser` module, instead of always "
"generating a new browser command."
msgstr ""
"Os nomes na variável de ambiente :envvar:`BROWSER` agora podem se referir a "
"navegadores já registrados para o módulo :mod:`webbrowser`, em vez de sempre "
"gerar um novo comando de navegador."

#: ../../whatsnew/3.14.rst:2121
msgid ""
"This makes it possible to set :envvar:`BROWSER` to the value of one of the "
"supported browsers on macOS."
msgstr ""
"Isso torna possível definir :envvar:`BROWSER` como o valor de um dos "
"navegadores suportados no macOS."

#: ../../whatsnew/3.14.rst:2126
msgid "zipfile"
msgstr "zipfile"

#: ../../whatsnew/3.14.rst:2128
msgid ""
"Added :meth:`ZipInfo._for_archive <zipfile.ZipInfo._for_archive>`, a method "
"to resolve suitable defaults for a :class:`~zipfile.ZipInfo` object as used "
"by :func:`ZipFile.writestr <zipfile.ZipFile.writestr>`. (Contributed by "
"Bénédikt Tran in :gh:`123424`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:2133
msgid ""
":meth:`.ZipFile.writestr` now respects the :envvar:`SOURCE_DATE_EPOCH` "
"environment variable in order to better support reproducible builds. "
"(Contributed by Jiahao Li in :gh:`91279`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:2142
msgid "Optimizations"
msgstr "Otimizações"

#: ../../whatsnew/3.14.rst:2144
msgid ""
"The import time for several standard library modules has been improved, "
"including :mod:`annotationlib`, :mod:`ast`, :mod:`asyncio`, :mod:`base64`, :"
"mod:`cmd`, :mod:`csv`, :mod:`gettext`, :mod:`importlib.util`, :mod:"
"`locale`, :mod:`mimetypes`, :mod:`optparse`, :mod:`pickle`, :mod:`pprint`, :"
"mod:`pstats`, :mod:`shlex`, :mod:`socket`, :mod:`string`, :mod:"
"`subprocess`, :mod:`threading`, :mod:`tomllib`, :mod:`types`, and :mod:"
"`zipfile`."
msgstr ""
"O tempo de importação para vários módulos de biblioteca padrão foi "
"melhorado, incluindo :mod:`annotationlib`, :mod:`ast`, :mod:`asyncio`, :mod:"
"`base64`, :mod:`cmd`, :mod:`csv`, :mod:`gettext`, :mod:`importlib.util`, :"
"mod:`locale`, :mod:`mimetypes`, :mod:`optparse`, :mod:`pickle`, :mod:"
"`pprint`, :mod:`pstats`, :mod:`shlex`, :mod:`socket`, :mod:`string`, :mod:"
"`subprocess`, :mod:`threading`, :mod:`tomllib`, :mod:`types` e :mod:"
"`zipfile`."

#: ../../whatsnew/3.14.rst:2151
msgid ""
"(Contributed by Adam Turner, Bénédikt Tran, Chris Markiewicz, Eli Schwartz, "
"Hugo van Kemenade, Jelle Zijlstra, and others in :gh:`118761`.)"
msgstr ""
"(Contribuição de Adam Turner, Bénédikt Tran, Chris Markiewicz, Eli Schwartz, "
"Hugo van Kemenade, Jelle Zijlstra e outros em :gh:`118761`.)"

#: ../../whatsnew/3.14.rst:2154
msgid ""
"The interpreter now avoids some reference count modifications internally "
"when it's safe to do so. This can lead to different values being returned "
"from :func:`sys.getrefcount` and :c:func:`Py_REFCNT` compared to previous "
"versions of Python. See :ref:`below <whatsnew314-refcount>` for details."
msgstr ""

#: ../../whatsnew/3.14.rst:2164
msgid ""
"Standard benchmark results have improved by 10-20% following the "
"implementation of a new per-thread doubly linked list for :class:`native "
"tasks <asyncio.Task>`, also reducing memory usage. This enables external "
"introspection tools such as :ref:`python -m asyncio pstree <whatsnew314-"
"asyncio-introspection>` to introspect the call graph of asyncio tasks "
"running in all threads. (Contributed by Kumar Aditya in :gh:`107803`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:2173
msgid ""
"The module now has first class support for :term:`free-threading builds "
"<free threading>`. This enables parallel execution of multiple event loops "
"across different threads, scaling linearly with the number of threads. "
"(Contributed by Kumar Aditya in :gh:`128002`.)"
msgstr ""
"O módulo agora conta com suporte de primeira classe para :term:`construção "
"com threads livres <free threading>`. Isso permite a execução paralela de "
"múltiplos laços de eventos em diferentes threads, com escala linear com o "
"número de threads. (Contribuição de Kumar Aditya em :gh:`128002`.)"

#: ../../whatsnew/3.14.rst:2181
msgid "base64"
msgstr "base64"

#: ../../whatsnew/3.14.rst:2183
msgid ""
":func:`~base64.b16decode` is now up to six times faster. (Contributed by "
"Bénédikt Tran, Chris Markiewicz, and Adam Turner in :gh:`118761`.)"
msgstr ""
":func:`~base64.b16decode` agora é até seis vezes mais rápido. (Contribuição "
"de Bénédikt Tran, Chris Markiewicz e Adam Turner em :gh:`118761`.)"

#: ../../whatsnew/3.14.rst:2189
msgid "bdb"
msgstr "bdb"

#: ../../whatsnew/3.14.rst:2191
msgid ""
"The basic debugger now has a :mod:`sys.monitoring`-based backend, which can "
"be selected via the passing ``'monitoring'`` to the :class:`~bdb.Bdb` "
"class's new *backend* parameter. (Contributed by Tian Gao in :gh:`124533`.)"
msgstr ""
"O depurador básico agora conta com um backend baseado em :mod:`sys."
"monitoring`, que pode ser selecionado passando ``'monitoring'`` para o novo "
"parâmetro *backend* da classe :class:`~bdb.Bdb`. (Contribuição de Tian Gao "
"em :gh:`124533`.)"

#: ../../whatsnew/3.14.rst:2200
msgid ""
"The :func:`~difflib.IS_LINE_JUNK` function is now up to twice as fast. "
"(Contributed by Adam Turner and Semyon Moroz in :gh:`130167`.)"
msgstr ""
"A função :func:`~difflib.IS_LINE_JUNK` agora é até duas vezes mais rápida. "
"(Contribuição de Adam Turner e Semyon Moroz em :gh:`130167`.)"

#: ../../whatsnew/3.14.rst:2205
msgid "gc"
msgstr "gc"

#: ../../whatsnew/3.14.rst:2207
msgid ""
"The new :ref:`incremental garbage collector <whatsnew314-incremental-gc>` "
"means that maximum pause times are reduced by an order of magnitude or more "
"for larger heaps."
msgstr ""
"O novo :ref:`coletor de lixo incremental <whatsnew314-incremental-gc>` "
"significa que os tempos máximos de pausa são reduzidos em uma ordem de "
"magnitude ou mais para heaps maiores."

#: ../../whatsnew/3.14.rst:2211
msgid ""
"Because of this optimization, the meaning of the results of :meth:`~gc."
"get_threshold` and :meth:`~gc.set_threshold` have changed, along with :meth:"
"`~gc.get_count` and :meth:`~gc.get_stats`."
msgstr ""
"Devido a essa otimização, o significado dos resultados de :meth:`~gc."
"get_threshold` e :meth:`~gc.set_threshold` foi alterado, juntamente com :"
"meth:`~gc.get_count` e :meth:`~gc.get_stats`."

#: ../../whatsnew/3.14.rst:2215
msgid ""
"For backwards compatibility, :meth:`~gc.get_threshold` continues to return a "
"three-item tuple. The first value is the threshold for young collections, as "
"before; the second value determines the rate at which the old collection is "
"scanned (the default is 10, and higher values mean that the old collection "
"is scanned more slowly). The third value is now meaningless and is always "
"zero."
msgstr ""
"Para retrocompatibilidade, :meth:`~gc.get_threshold` continua retornando uma "
"tupla de três itens. O primeiro valor é o limite para coleções novas, como "
"antes; o segundo valor determina a taxa de varredura da coleção antiga (o "
"padrão é 10, e valores mais altos significam que a coleção antiga é varrida "
"mais lentamente). O terceiro valor agora não tem mais significado e é sempre "
"zero."

#: ../../whatsnew/3.14.rst:2223
msgid ":meth:`~gc.set_threshold` now ignores any items after the second."
msgstr ":meth:`~gc.set_threshold` agora ignora quaisquer itens após o segundo."

#: ../../whatsnew/3.14.rst:2225
msgid ""
":meth:`~gc.get_count` and :meth:`~gc.get_stats` continue to return the same "
"format of results. The only difference is that instead of the results "
"referring to the young, aging and old generations, the results refer to the "
"young generation and the aging and collecting spaces of the old generation."
msgstr ""
":meth:`~gc.get_count` e :meth:`~gc.get_stats` continuam retornando o mesmo "
"formato de resultados. A única diferença é que, em vez dos resultados se "
"referirem às gerações jovem, idosa e idosa, os resultados se referem à "
"geração jovem e aos espaços de envelhecimento e coleta da geração idosa."

#: ../../whatsnew/3.14.rst:2232
msgid ""
"In summary, code that attempted to manipulate the behavior of the cycle GC "
"may not work exactly as intended, but it is very unlikely to be harmful. All "
"other code will work just fine."
msgstr ""
"Em resumo, o código que tenta manipular o comportamento do ciclo de coleta "
"de lixo pode não funcionar exatamente como o esperado, mas é muito "
"improvável que seja prejudicial. Todos os outros códigos funcionarão "
"perfeitamente."

#: ../../whatsnew/3.14.rst:2242
msgid ""
"Opening and reading files now executes fewer system calls. Reading a small "
"operating system cached file in full is up to 15% faster. (Contributed by "
"Cody Maloney and Victor Stinner in :gh:`120754` and :gh:`90102`.)"
msgstr ""
"Abrir e ler arquivos agora executa menos chamadas de sistema. Ler um pequeno "
"arquivo em cache do sistema operacional na íntegra é até 15% mais rápido. "
"(Contribuição de Cody Maloney e Victor Stinner em :gh:`120754` e :gh:"
"`90102`.)"

#: ../../whatsnew/3.14.rst:2251
msgid ""
":func:`Path.read_bytes <pathlib.Path.read_bytes>` now uses unbuffered mode "
"to open files, which is between 9% and 17% faster to read in full. "
"(Contributed by Cody Maloney in :gh:`120754`.)"
msgstr ""
":func:`Path.read_bytes <pathlib.Path.read_bytes>` agora usa o modo sem "
"buffer para abrir arquivos, o que é entre 9% e 17% mais rápido para leitura "
"completa. (Contribuição de Cody Maloney em :gh:`120754`.)"

#: ../../whatsnew/3.14.rst:2259
msgid ""
":mod:`pdb` now supports two backends, based on either :func:`sys.settrace` "
"or :mod:`sys.monitoring`. Using the :ref:`pdb CLI <pdb-cli>` or :func:"
"`breakpoint` will always use the :mod:`sys.monitoring` backend. Explicitly "
"instantiating :class:`pdb.Pdb` and its derived classes will use the :func:"
"`sys.settrace` backend by default, which is configurable. (Contributed by "
"Tian Gao in :gh:`124533`.)"
msgstr ""
":mod:`pdb` agora suporta dois backends, baseados em :func:`sys.settrace` ou :"
"mod:`sys.monitoring`. Usar a :ref:`CLI do pdb <pdb-cli>` ou :func:"
"`breakpoint` sempre usará o backend :mod:`sys.monitoring`. Instanciar "
"explicitamente :class:`pdb.Pdb` e suas classes derivadas usará o backend :"
"func:`sys.settrace` por padrão, que é configurável. (Contribuição de Tian "
"Gao em :gh:`124533`.)"

#: ../../whatsnew/3.14.rst:2271
msgid ""
":func:`~uuid.uuid3` and :func:`~uuid.uuid5` are now both roughly 40% faster "
"for 16-byte names and 20% faster for 1024-byte names. Performance for longer "
"names remains unchanged. (Contributed by Bénédikt Tran in :gh:`128150`.)"
msgstr ""
":func:`~uuid.uuid3` e :func:`~uuid.uuid5` agora são aproximadamente 40% mais "
"rápidos para nomes de 16 bytes e 20% mais rápidos para nomes de 1024 bytes. "
"O desempenho para nomes mais longos permanece inalterado. (Contribuição de "
"Bénédikt Tran em :gh:`128150`.)"

#: ../../whatsnew/3.14.rst:2276
msgid ""
":func:`~uuid.uuid4` is now c. 30% faster. (Contributed by Bénédikt Tran in :"
"gh:`128150`.)"
msgstr ""
":func:`~uuid.uuid4` agora é cerca de 30% mais rápido. (Contribuição de "
"Bénédikt Tran em :gh:`128150`.)"

#: ../../whatsnew/3.14.rst:2281
msgid "zlib"
msgstr "zlib"

#: ../../whatsnew/3.14.rst:2283
msgid ""
"On Windows, `zlib-ng <https://github.com/zlib-ng/zlib-ng>`__ is now used as "
"the implementation of the :mod:`zlib` module in the default binaries. There "
"are no known incompatibilities between ``zlib-ng`` and the previously-used "
"``zlib`` implementation. This should result in better performance at all "
"compression levels."
msgstr ""
"No Windows, `zlib-ng <https://github.com/zlib-ng/zlib-ng>`__ agora é usado "
"como implementação do módulo :mod:`zlib` nos binários padrão. Não há "
"incompatibilidades conhecidas entre ``zlib-ng`` e a implementação ``zlib`` "
"usada anteriormente. Isso deve resultar em melhor desempenho em todos os "
"níveis de compactação."

#: ../../whatsnew/3.14.rst:2290
msgid ""
"It is worth noting that ``zlib.Z_BEST_SPEED`` (``1``) may result in "
"significantly less compression than the previous implementation, whilst also "
"significantly reducing the time taken to compress."
msgstr ""
"Vale ressaltar que ``zlib.Z_BEST_SPEED`` (``1``) pode resultar em "
"significativamente menos compressão do que a implementação anterior, além de "
"reduzir significativamente o tempo necessário para compactar."

#: ../../whatsnew/3.14.rst:2294
msgid "(Contributed by Steve Dower in :gh:`91349`.)"
msgstr "(Contribuição de Steve Dower em :gh:`91349`.)"

#: ../../whatsnew/3.14.rst:2298
msgid "Removed"
msgstr "Removidos"

#: ../../whatsnew/3.14.rst:2303
msgid ""
"Remove the *type*, *choices*, and *metavar* parameters of :class:`!"
"BooleanOptionalAction`. These have been deprecated since Python 3.12. "
"(Contributed by Nikita Sobolev in :gh:`118805`.)"
msgstr ""
"Remove os parâmetros *type*, *choices* e *metavar* de :class:`!"
"BooleanOptionalAction`. Eles estão descontinuados desde o Python 3.12. "
"(Contribuição de Nikita Sobolev em :gh:`118805`.)"

#: ../../whatsnew/3.14.rst:2308
msgid ""
"Calling :meth:`~argparse.ArgumentParser.add_argument_group` on an argument "
"group now raises a :exc:`ValueError`. Similarly, :meth:`~argparse."
"ArgumentParser.add_argument_group` or :meth:`~argparse.ArgumentParser."
"add_mutually_exclusive_group` on a mutually exclusive group now both raise :"
"exc:`ValueError`\\ s. This 'nesting' was never supported, often failed to "
"work correctly, and was unintentionally exposed through inheritance. This "
"functionality has been deprecated since Python 3.11. (Contributed by "
"Savannah Ostrowski in :gh:`127186`.)"
msgstr ""
"Chamar :meth:`~argparse.ArgumentParser.add_argument_group` em um grupo de "
"argumentos agora gera um :exc:`ValueError`. Da mesma forma, :meth:`~argparse."
"ArgumentParser.add_argument_group` ou :meth:`~argparse.ArgumentParser."
"add_mutually_exclusive_group` em um grupo mutuamente exclusivo agora "
"levantam :exc:`ValueError`\\ s. Esse \"aninhamento\" nunca foi suportado, "
"frequentemente não funcionava corretamente e era exposto involuntariamente "
"por herança. Essa funcionalidade está descontinuada desde o Python 3.11. "
"(Contribuição de Savannah Ostrowski em :gh:`127186`.)"

#: ../../whatsnew/3.14.rst:2322
msgid ""
"Remove the following classes, which have been deprecated aliases of :class:"
"`~ast.Constant` since Python 3.8 and have emitted deprecation warnings since "
"Python 3.12:"
msgstr ""
"Remove as seguintes classes, que são apelidos descontinuados de :class:`~ast."
"Constant` desde o Python 3.8 e emitem avisos de descontinuação desde o "
"Python 3.12:"

#: ../../whatsnew/3.14.rst:2326
msgid ":class:`!Bytes`"
msgstr ":class:`!Bytes`"

#: ../../whatsnew/3.14.rst:2327
msgid ":class:`!Ellipsis`"
msgstr ":class:`!Ellipsis`"

#: ../../whatsnew/3.14.rst:2328
msgid ":class:`!NameConstant`"
msgstr ":class:`!NameConstant`"

#: ../../whatsnew/3.14.rst:2329
msgid ":class:`!Num`"
msgstr ":class:`!Num`"

#: ../../whatsnew/3.14.rst:2330
msgid ":class:`!Str`"
msgstr ":class:`!Str`"

#: ../../whatsnew/3.14.rst:2332
msgid ""
"As a consequence of these removals, user-defined ``visit_Num``, "
"``visit_Str``, ``visit_Bytes``, ``visit_NameConstant`` and "
"``visit_Ellipsis`` methods on custom :class:`~ast.NodeVisitor` subclasses "
"will no longer be called when the :class:`!NodeVisitor` subclass is visiting "
"an AST. Define a ``visit_Constant`` method instead."
msgstr ""
"Como consequência dessas remoções, os métodos ``visit_Num``, ``visit_Str``, "
"``visit_Bytes``, ``visit_NameConstant`` e ``visit_Ellipsis`` definidos pelo "
"usuário nas subclasses personalizadas :class:`~ast.NodeVisitor` não serão "
"mais chamados quando a subclasse :class:`!NodeVisitor` estiver visitando uma "
"AST. Em vez disso, defina um método ``visit_Constant``."

#: ../../whatsnew/3.14.rst:2338
msgid "(Contributed by Alex Waygood in :gh:`119562`.)"
msgstr "(Contribuição de Alex Waygood em :gh:`119562`.)"

#: ../../whatsnew/3.14.rst:2340
msgid ""
"Remove the following deprecated properties on :class:`ast.Constant`, which "
"were present for compatibility with the now-removed AST classes:"
msgstr ""
"Remove as seguintes propriedades descontinuadas em :class:`ast.Constant`, "
"que estavam presentes para compatibilidade com as classes AST agora "
"removidas:"

#: ../../whatsnew/3.14.rst:2343
msgid ":attr:`!Constant.n`"
msgstr ":attr:`!Constant.n`"

#: ../../whatsnew/3.14.rst:2344
msgid ":attr:`!Constant.s`"
msgstr ":attr:`!Constant.s`"

#: ../../whatsnew/3.14.rst:2346
msgid ""
"Use :attr:`!Constant.value` instead. (Contributed by Alex Waygood in :gh:"
"`119562`.)"
msgstr ""
"Em vez disso, use :attr:`!Constant.value`. (Contribuição de Alex Waygood em :"
"gh:`119562`.)"

#: ../../whatsnew/3.14.rst:2353
msgid ""
"Remove the following classes, methods, and functions, which have been "
"deprecated since Python 3.12:"
msgstr ""
"Remove as seguintes classes, métodos e funções, que foram descontinuados "
"desde o Python 3.12:"

#: ../../whatsnew/3.14.rst:2356
msgid ":class:`!AbstractChildWatcher`"
msgstr ":class:`!AbstractChildWatcher`"

#: ../../whatsnew/3.14.rst:2357
msgid ":class:`!FastChildWatcher`"
msgstr ":class:`!FastChildWatcher`"

#: ../../whatsnew/3.14.rst:2358
msgid ":class:`!MultiLoopChildWatcher`"
msgstr ":class:`!MultiLoopChildWatcher`"

#: ../../whatsnew/3.14.rst:2359
msgid ":class:`!PidfdChildWatcher`"
msgstr ":class:`!PidfdChildWatcher`"

#: ../../whatsnew/3.14.rst:2360
msgid ":class:`!SafeChildWatcher`"
msgstr ":class:`!SafeChildWatcher`"

#: ../../whatsnew/3.14.rst:2361
msgid ":class:`!ThreadedChildWatcher`"
msgstr ":class:`!ThreadedChildWatcher`"

#: ../../whatsnew/3.14.rst:2362
msgid ":meth:`!AbstractEventLoopPolicy.get_child_watcher`"
msgstr ":meth:`!AbstractEventLoopPolicy.get_child_watcher`"

#: ../../whatsnew/3.14.rst:2363
msgid ":meth:`!AbstractEventLoopPolicy.set_child_watcher`"
msgstr ":meth:`!AbstractEventLoopPolicy.set_child_watcher`"

#: ../../whatsnew/3.14.rst:2364
msgid ":func:`!get_child_watcher`"
msgstr ":func:`!get_child_watcher`"

#: ../../whatsnew/3.14.rst:2365
msgid ":func:`!set_child_watcher`"
msgstr ":func:`!set_child_watcher`"

#: ../../whatsnew/3.14.rst:2367
msgid "(Contributed by Kumar Aditya in :gh:`120804`.)"
msgstr "(Contribuição de Kumar Aditya em :gh:`120804`.)"

#: ../../whatsnew/3.14.rst:2369
msgid ""
":func:`asyncio.get_event_loop` now raises a :exc:`RuntimeError` if there is "
"no current event loop, and no longer implicitly creates an event loop."
msgstr ""
":func:`asyncio.get_event_loop` agora levanta uma :exc:`RuntimeError` se não "
"houver um laço de eventos atual e não cria mais implicitamente um laço de "
"eventos."

#: ../../whatsnew/3.14.rst:2373
msgid "(Contributed by Kumar Aditya in :gh:`126353`.)"
msgstr "(Contribuição de Kumar Aditya em :gh:`126353`.)"

#: ../../whatsnew/3.14.rst:2378
msgid ""
"There's a few patterns that use :func:`asyncio.get_event_loop`, most of them "
"can be replaced with :func:`asyncio.run`."
msgstr ""
"Existem alguns padrões que usam :func:`asyncio.get_event_loop`, a maioria "
"deles pode ser substituída por :func:`asyncio.run`."

#: ../../whatsnew/3.14.rst:2381
msgid "If you're running an async function, simply use :func:`asyncio.run`."
msgstr ""
"Se você estiver executando uma função assíncrona, basta usar :func:`asyncio."
"run`."

#: ../../whatsnew/3.14.rst:2383 ../../whatsnew/3.14.rst:2410
#: ../../whatsnew/3.14.rst:2438
msgid "Before:"
msgstr "Antes:"

#: ../../whatsnew/3.14.rst:2385
msgid ""
"async def main():\n"
"    ...\n"
"\n"
"\n"
"loop = asyncio.get_event_loop()\n"
"try:\n"
"    loop.run_until_complete(main())\n"
"finally:\n"
"    loop.close()"
msgstr ""
"async def main():\n"
"    ...\n"
"\n"
"\n"
"loop = asyncio.get_event_loop()\n"
"try:\n"
"    loop.run_until_complete(main())\n"
"finally:\n"
"    loop.close()"

#: ../../whatsnew/3.14.rst:2397 ../../whatsnew/3.14.rst:2423
#: ../../whatsnew/3.14.rst:2454
msgid "After:"
msgstr "Depois:"

#: ../../whatsnew/3.14.rst:2399
msgid ""
"async def main():\n"
"    ...\n"
"\n"
"asyncio.run(main())"
msgstr ""
"async def main():\n"
"    ...\n"
"\n"
"asyncio.run(main())"

#: ../../whatsnew/3.14.rst:2406
msgid ""
"If you need to start something, for example, a server listening on a socket "
"and then run forever, use :func:`asyncio.run` and an :class:`asyncio.Event`."
msgstr ""
"Se você precisar iniciar algo, por exemplo, um servidor escutando em um "
"soquete e depois rodar para sempre, use :func:`asyncio.run` e um :class:"
"`asyncio.Event`."

#: ../../whatsnew/3.14.rst:2412
msgid ""
"def start_server(loop): ...\n"
"\n"
"loop = asyncio.get_event_loop()\n"
"try:\n"
"    start_server(loop)\n"
"    loop.run_forever()\n"
"finally:\n"
"    loop.close()"
msgstr ""
"def start_server(loop): ...\n"
"\n"
"loop = asyncio.get_event_loop()\n"
"try:\n"
"    start_server(loop)\n"
"    loop.run_forever()\n"
"finally:\n"
"    loop.close()"

#: ../../whatsnew/3.14.rst:2425
msgid ""
"def start_server(loop): ...\n"
"\n"
"async def main():\n"
"    start_server(asyncio.get_running_loop())\n"
"    await asyncio.Event().wait()\n"
"\n"
"asyncio.run(main())"
msgstr ""
"def start_server(loop): ...\n"
"\n"
"async def main():\n"
"    start_server(asyncio.get_running_loop())\n"
"    await asyncio.Event().wait()\n"
"\n"
"asyncio.run(main())"

#: ../../whatsnew/3.14.rst:2435
msgid ""
"If you need to run something in an event loop, then run some blocking code "
"around it, use :class:`asyncio.Runner`."
msgstr ""
"Se você precisar executar algo em um laço de eventos, execute algum código "
"de bloqueio em torno dele, use :class:`asyncio.Runner`."

#: ../../whatsnew/3.14.rst:2440
msgid ""
"async def operation_one(): ...\n"
"def blocking_code(): ...\n"
"async def operation_two(): ...\n"
"\n"
"loop = asyncio.get_event_loop()\n"
"try:\n"
"    loop.run_until_complete(operation_one())\n"
"    blocking_code()\n"
"    loop.run_until_complete(operation_two())\n"
"finally:\n"
"    loop.close()"
msgstr ""
"async def operation_one(): ...\n"
"def blocking_code(): ...\n"
"async def operation_two(): ...\n"
"\n"
"loop = asyncio.get_event_loop()\n"
"try:\n"
"    loop.run_until_complete(operation_one())\n"
"    blocking_code()\n"
"    loop.run_until_complete(operation_two())\n"
"finally:\n"
"    loop.close()"

#: ../../whatsnew/3.14.rst:2456
msgid ""
"async def operation_one(): ...\n"
"def blocking_code(): ...\n"
"async def operation_two(): ...\n"
"\n"
"with asyncio.Runner() as runner:\n"
"    runner.run(operation_one())\n"
"    blocking_code()\n"
"    runner.run(operation_two())"
msgstr ""
"async def operation_one(): ...\n"
"def blocking_code(): ...\n"
"async def operation_two(): ...\n"
"\n"
"with asyncio.Runner() as runner:\n"
"    runner.run(operation_one())\n"
"    blocking_code()\n"
"    runner.run(operation_two())"

#: ../../whatsnew/3.14.rst:2469
msgid "email"
msgstr "email"

#: ../../whatsnew/3.14.rst:2471
msgid ""
"Remove :func:`email.utils.localtime`'s *isdst* parameter, which was "
"deprecated in and has been ignored since Python 3.12. (Contributed by Hugo "
"van Kemenade in :gh:`118798`.)"
msgstr ""
"Remove o parâmetro *isdst* de :func:`email.utils.localtime`, que foi "
"descontinuado e é ignorado desde o Python 3.12. (Contribuição de Hugo van "
"Kemenade em :gh:`118798`.)"

#: ../../whatsnew/3.14.rst:2477
msgid "importlib.abc"
msgstr "importlib.abc"

#: ../../whatsnew/3.14.rst:2479
msgid "Remove deprecated :mod:`importlib.abc` classes:"
msgstr "Remove classes descontinuadas :mod:`importlib.abc`:"

#: ../../whatsnew/3.14.rst:2481
msgid ""
":class:`!ResourceReader` (use :class:`~importlib.resources.abc."
"TraversableResources`)"
msgstr ""
":class:`!ResourceReader` (use :class:`~importlib.resources.abc."
"TraversableResources`)"

#: ../../whatsnew/3.14.rst:2483
msgid ""
":class:`!Traversable` (use :class:`~importlib.resources.abc.Traversable`)"
msgstr ""
":class:`!Traversable` (use :class:`~importlib.resources.abc.Traversable`)"

#: ../../whatsnew/3.14.rst:2485
msgid ""
":class:`!TraversableResources` (use :class:`~importlib.resources.abc."
"TraversableResources`)"
msgstr ""
":class:`!TraversableResources` (use :class:`~importlib.resources.abc."
"TraversableResources`)"

#: ../../whatsnew/3.14.rst:2488
msgid "(Contributed by Jason R. Coombs and Hugo van Kemenade in :gh:`93963`.)"
msgstr "(Contribuição de Jason R. Coombs e Hugo van Kemenade em :gh:`93963`.)"

#: ../../whatsnew/3.14.rst:2492
msgid "itertools"
msgstr "itertools"

#: ../../whatsnew/3.14.rst:2494
msgid ""
"Remove support for copy, deepcopy, and pickle operations from :mod:"
"`itertools` iterators. These have emitted a :exc:`DeprecationWarning` since "
"Python 3.12. (Contributed by Raymond Hettinger in :gh:`101588`.)"
msgstr ""
"Remove o suporte para operações de cópia, cópia profunda e de serialização "
"com pickle dos iteradores :mod:`itertools`. Eles emitem um :exc:"
"`DeprecationWarning` desde o Python 3.12. (Contribuição de Raymond Hettinger "
"em :gh:`101588`.)"

#: ../../whatsnew/3.14.rst:2503
msgid ""
"Remove support for passing additional keyword arguments to :class:`~pathlib."
"Path`. In previous versions, any such arguments are ignored. (Contributed by "
"Barney Gale in :gh:`74033`.)"
msgstr ""
"Remove o suporte para passagem de argumentos nomeados adicionais para :class:"
"`~pathlib.Path`. Em versões anteriores, tais argumentos eram ignorados. "
"(Contribuição de Barney Gale em :gh:`74033`.)"

#: ../../whatsnew/3.14.rst:2508
msgid ""
"Remove support for passing additional positional arguments to :meth:`."
"PurePath.relative_to` and :meth:`~pathlib.PurePath.is_relative_to`. In "
"previous versions, any such arguments are joined onto *other*. (Contributed "
"by Barney Gale in :gh:`78707`.)"
msgstr ""
"Remove o suporte para passagem de argumentos posicionais adicionais para :"
"meth:`.PurePath.relative_to` e :meth:`~pathlib.PurePath.is_relative_to`. Em "
"versões anteriores, tais argumentos eram unidos a *other*. (Contribuição de "
"Barney Gale em :gh:`78707`.)"

#: ../../whatsnew/3.14.rst:2515
msgid "pkgutil"
msgstr "pkgutil"

#: ../../whatsnew/3.14.rst:2517
msgid ""
"Remove the :func:`!get_loader` and :func:`!find_loader` functions, which "
"have been deprecated since Python 3.12. (Contributed by Bénédikt Tran in :gh:"
"`97850`.)"
msgstr ""
"Remove as funções :func:`!get_loader` e :func:`!find_loader`, que foram "
"descontinuadas desde o Python 3.12. (Contribuição de Bénédikt Tran em :gh:"
"`97850`.)"

#: ../../whatsnew/3.14.rst:2523
msgid "pty"
msgstr "pty"

#: ../../whatsnew/3.14.rst:2525
msgid ""
"Remove the :func:`!master_open` and :func:`!slave_open` functions, which "
"have been deprecated since Python 3.12. Use :func:`pty.openpty` instead. "
"(Contributed by Nikita Sobolev in :gh:`118824`.)"
msgstr ""
"Remove as funções :func:`!master_open` e :func:`!slave_open`, que foram "
"descontinuadas desde o Python 3.12. Em vez disso, use :func:`pty.openpty`. "
"(Contribuição de Nikita Sobolev em :gh:`118824`.)"

#: ../../whatsnew/3.14.rst:2532
msgid "sqlite3"
msgstr "sqlite3"

#: ../../whatsnew/3.14.rst:2534
msgid ""
"Remove :data:`!version` and :data:`!version_info` from the :mod:`sqlite3` "
"module; use :data:`~sqlite3.sqlite_version` and :data:`~sqlite3."
"sqlite_version_info` for the actual version number of the runtime SQLite "
"library. (Contributed by Hugo van Kemenade in :gh:`118924`.)"
msgstr ""
"Remove :data:`!version` e :data:`!version_info` do módulo :mod:`sqlite3`; "
"use :data:`~sqlite3.sqlite_version` e :data:`~sqlite3.sqlite_version_info` "
"para o número da versão real da biblioteca SQLite em tempo de execução. "
"(Contribuição de Hugo van Kemenade em :gh:`118924`.)"

#: ../../whatsnew/3.14.rst:2540
msgid ""
"Using a sequence of parameters with named placeholders now raises a :exc:"
"`~sqlite3.ProgrammingError`, having been deprecated since Python 3.12. "
"(Contributed by Erlend E. Aasland in :gh:`118928` and :gh:`101693`.)"
msgstr ""
"Usar uma sequência de parâmetros com espaços reservados nomeados agora "
"levanta uma :exc:`~sqlite3.ProgrammingError`, que estava descontinuado desde "
"o Python 3.12. (Contribuição de Erlend E. Aasland em :gh:`118928` e :gh:"
"`101693`.)"

#: ../../whatsnew/3.14.rst:2549
msgid ""
"Remove the :class:`!Quoter` class from :mod:`urllib.parse`, which has been "
"deprecated since Python 3.11. (Contributed by Nikita Sobolev in :gh:"
"`118827`.)"
msgstr ""
"Remove a classe :class:`!Quoter` de :mod:`urllib.parse`, que está "
"descontinuada desde o Python 3.11. (Contribuição de Nikita Sobolev em :gh:"
"`118827`.)"

#: ../../whatsnew/3.14.rst:2553
msgid ""
"Remove the :class:`!URLopener` and :class:`!FancyURLopener` classes from :"
"mod:`urllib.request`, which have been deprecated since Python 3.3."
msgstr ""
"Remove as classes :class:`!URLopener` e :class:`!FancyURLopener` de :mod:"
"`urllib.request`, que foram descontinuadas desde o Python 3.3."

#: ../../whatsnew/3.14.rst:2557
msgid ""
"``myopener.open()`` can be replaced with :func:`~urllib.request.urlopen`. "
"``myopener.retrieve()`` can be replaced with :func:`~urllib.request."
"urlretrieve`. Customisations to the opener classes can be replaced by "
"passing customized handlers to :func:`~urllib.request.build_opener`. "
"(Contributed by Barney Gale in :gh:`84850`.)"
msgstr ""
"``myopener.open()`` pode ser substituído por :func:`~urllib.request."
"urlopen`. ``myopener.retrieve()`` pode ser substituído por :func:`~urllib."
"request.urlretrieve`. Personalizações nas classes de abertura podem ser "
"feitas passando manipuladores personalizados para :func:`~urllib.request."
"build_opener`. (Contribuição de Barney Gale em :gh:`84850`.)"

#: ../../whatsnew/3.14.rst:2566
msgid "Deprecated"
msgstr "Descontinuados"

#: ../../whatsnew/3.14.rst:2569
msgid "New deprecations"
msgstr "Novas descontinuações"

#: ../../whatsnew/3.14.rst:2571
msgid ""
"Passing a complex number as the *real* or *imag* argument in the :func:"
"`complex` constructor is now deprecated; complex numbers should only be "
"passed as a single positional argument. (Contributed by Serhiy Storchaka in :"
"gh:`109218`.)"
msgstr ""
"Passar um número complexo como argumento *real* ou *imag* no construtor :"
"func:`complex` agora está descontinuado; números complexos devem ser "
"passados apenas como um único argumento posicional. (Contribuição de Serhiy "
"Storchaka em :gh:`109218`.)"

#: ../../whatsnew/3.14.rst:2576
#: ../../deprecations/pending-removal-in-future.rst:7
msgid ":mod:`argparse`:"
msgstr ":mod:`argparse`:"

#: ../../whatsnew/3.14.rst:2578
msgid ""
"Passing the undocumented keyword argument *prefix_chars* to the :meth:"
"`~argparse.ArgumentParser.add_argument_group` method is now deprecated. "
"(Contributed by Savannah Ostrowski in :gh:`125563`.)"
msgstr ""
"A passagem do argumento nomeado não documentado *prefix_chars* para o "
"método :meth:`~argparse.ArgumentParser.add_argument_group` agora está "
"descontinuado. (Contribuição de Savannah Ostrowski em :gh:`125563`.)"

#: ../../whatsnew/3.14.rst:2582
msgid ""
"Deprecated the :class:`argparse.FileType` type converter. Anything relating "
"to resource management should be handled downstream, after the arguments "
"have been parsed. (Contributed by Serhiy Storchaka in :gh:`58032`.)"
msgstr ""
"O conversor de tipo :class:`argparse.FileType` foi descontinuado. Qualquer "
"coisa relacionada a gerenciamento de recursos deve ser tratado "
"posteriormente, após os argumentos terem sido analisados. (Contribuição de "
"Serhiy Storchaka em :gh:`58032`.)"

#: ../../whatsnew/3.14.rst:2587
#: ../../deprecations/pending-removal-in-3.16.rst:19
msgid ":mod:`asyncio`:"
msgstr ":mod:`asyncio`:"

#: ../../whatsnew/3.14.rst:2589
msgid ""
"The :func:`!asyncio.iscoroutinefunction` is now deprecated and will be "
"removed in Python 3.16; use :func:`inspect.iscoroutinefunction` instead. "
"(Contributed by Jiahao Li and Kumar Aditya in :gh:`122875`.)"
msgstr ""
"A :func:`!asyncio.iscoroutinefunction` está agora descontinuado e será "
"removido no Python 3.16, use :func:`inspect.iscoroutinefunction` em vez "
"disso. (Contribuição de Jiahao Li e Kumar Aditya em :gh:`122875`.)"

#: ../../whatsnew/3.14.rst:2594
msgid ""
"The :mod:`asyncio` policy system is deprecated and will be removed in Python "
"3.16. In particular, the following classes and functions are deprecated:"
msgstr ""
"O sistema de políticas :mod:`asyncio` está descontinuado e será removido no "
"Python 3.16. Em particular, as seguintes classes e funções estão "
"descontinuadas:"

#: ../../whatsnew/3.14.rst:2598
#: ../../deprecations/pending-removal-in-3.16.rst:29
msgid ":class:`asyncio.AbstractEventLoopPolicy`"
msgstr ":class:`asyncio.AbstractEventLoopPolicy`"

#: ../../whatsnew/3.14.rst:2599
#: ../../deprecations/pending-removal-in-3.16.rst:30
msgid ":class:`asyncio.DefaultEventLoopPolicy`"
msgstr ":class:`asyncio.DefaultEventLoopPolicy`"

#: ../../whatsnew/3.14.rst:2600
#: ../../deprecations/pending-removal-in-3.16.rst:31
msgid ":class:`asyncio.WindowsSelectorEventLoopPolicy`"
msgstr ":class:`asyncio.WindowsSelectorEventLoopPolicy`"

#: ../../whatsnew/3.14.rst:2601
#: ../../deprecations/pending-removal-in-3.16.rst:32
msgid ":class:`asyncio.WindowsProactorEventLoopPolicy`"
msgstr ":class:`asyncio.WindowsProactorEventLoopPolicy`"

#: ../../whatsnew/3.14.rst:2602
#: ../../deprecations/pending-removal-in-3.16.rst:33
msgid ":func:`asyncio.get_event_loop_policy`"
msgstr ":func:`asyncio.get_event_loop_policy`"

#: ../../whatsnew/3.14.rst:2603
#: ../../deprecations/pending-removal-in-3.16.rst:34
msgid ":func:`asyncio.set_event_loop_policy`"
msgstr ":func:`asyncio.set_event_loop_policy`"

#: ../../whatsnew/3.14.rst:2605
msgid ""
"Users should use :func:`asyncio.run` or :class:`asyncio.Runner` with the "
"*loop_factory* argument to use the desired event loop implementation."
msgstr ""
"Os usuários devem usar :func:`asyncio.run` ou :class:`asyncio.Runner` com o "
"argumento *loop_factory* para usar a implementação de laço de eventos "
"desejada."

#: ../../whatsnew/3.14.rst:2608
msgid "For example, to use :class:`asyncio.SelectorEventLoop` on Windows:"
msgstr "por exemplo, para usar :class:`asyncio.SelectorEventLoop` no Windows:"

#: ../../whatsnew/3.14.rst:2610
#: ../../deprecations/pending-removal-in-3.16.rst:41
msgid ""
"import asyncio\n"
"\n"
"async def main():\n"
"    ...\n"
"\n"
"asyncio.run(main(), loop_factory=asyncio.SelectorEventLoop)"
msgstr ""
"import asyncio\n"
"\n"
"async def main():\n"
"    ...\n"
"\n"
"asyncio.run(main(), loop_factory=asyncio.SelectorEventLoop)"

#: ../../whatsnew/3.14.rst:2619
#: ../../deprecations/pending-removal-in-3.16.rst:48
msgid "(Contributed by Kumar Aditya in :gh:`127949`.)"
msgstr "(Contribuição de Kumar Aditya em :gh:`127949`.)"

#: ../../whatsnew/3.14.rst:2621
msgid ""
":mod:`codecs`: The :func:`codecs.open` function is now deprecated, and will "
"be removed in a future version of Python. Use :func:`open` instead. "
"(Contributed by Inada Naoki in :gh:`133036`.)"
msgstr ""
":mod:`codecs`: A função :func:`codecs.open` está descontinuada e será "
"removida em uma versão futura do Python. Em vez disso, use :func:`open`. "
"(Contribuição de Inada Naoki em :gh:`133036`.)"

#: ../../whatsnew/3.14.rst:2627
#: ../../deprecations/pending-removal-in-3.15.rst:16
#: ../../deprecations/pending-removal-in-3.19.rst:4
msgid ":mod:`ctypes`:"
msgstr ":mod:`ctypes`:"

#: ../../whatsnew/3.14.rst:2629
msgid ""
"On non-Windows platforms, setting :attr:`.Structure._pack_` to use a MSVC-"
"compatible default memory layout is now deprecated in favor of setting :attr:"
"`.Structure._layout_` to ``'ms'``, and will be removed in Python 3.19. "
"(Contributed by Petr Viktorin in :gh:`131747`.)"
msgstr ""
"Em plataformas não Windows, a configuração de :attr:`.Structure._pack_` para "
"usar um layout de memória padrão compatível com MSVC foi também "
"descontinuada em favor da configuração de :attr:`.Structure._layout_` para "
"``'ms'``, e será removida no Python 3.19. (Contribuição de Petr Viktorin em :"
"gh:`131747`.)"

#: ../../whatsnew/3.14.rst:2634
msgid ""
"Calling :func:`ctypes.POINTER` on a string is now deprecated. Use :ref:"
"`incomplete types <ctypes-incomplete-types>` for self-referential "
"structures. Also, the internal ``ctypes._pointer_type_cache`` is deprecated. "
"See :func:`ctypes.POINTER` for updated implementation details. (Contributed "
"by Sergey Myrianov in :gh:`100926`.)"
msgstr ""
"A chamada de :func:`ctypes.POINTER` em uma string está agora descontinuada. "
"Use :ref:`tipos incompletos <ctypes-incomplete-types>` para estruturas "
"autorreferenciais. Além disso, o ``ctypes._pointer_type_cache`` interno está "
"descontinuado. Consulte :func:`ctypes.POINTER` para obter detalhes de "
"implementação atualizados. (Contribuição de Sergey Myrianov em :gh:`100926`.)"

#: ../../whatsnew/3.14.rst:2641
msgid ""
":mod:`functools`: Calling the Python implementation of :func:`functools."
"reduce` with *function* or *sequence* as keyword arguments is now "
"deprecated; the parameters will be made positional-only in Python 3.16. "
"(Contributed by Kirill Podoprigora in :gh:`121676`.)"
msgstr ""
":mod:`functools`: Chamar a implementação Python de :func:`functools.reduce` "
"com *function* ou *sequence* como argumentos nomeados agora está "
"descontinuado; os parâmetros serão tornados somente-posicionais no Python "
"3.16. (Contribuição de Kirill Podoprigora em :gh:`121676`.)"

#: ../../whatsnew/3.14.rst:2647
msgid ""
":mod:`logging`: Support for custom logging handlers with the *strm* argument "
"is now deprecated and scheduled for removal in Python 3.16. Define handlers "
"with the *stream* argument instead. (Contributed by Mariusz Felisiak in :gh:"
"`115032`.)"
msgstr ""
":mod:`logging`: O suporte para manipuladores de registro personalizados com "
"o argumento *strm* está agora descontinuado e está programado para ser "
"removido no Python 3.16. Em vez disso, defina manipuladores com o argumento "
"*stream*. (Contribuição de Mariusz Felisiak em :gh:`115032`.)"

#: ../../whatsnew/3.14.rst:2653
msgid ""
":mod:`mimetypes`: Valid extensions are either empty or must start with '.' "
"for :meth:`mimetypes.MimeTypes.add_type`. Undotted extensions are deprecated "
"and will raise a :exc:`ValueError` in Python 3.16. (Contributed by Hugo van "
"Kemenade in :gh:`75223`.)"
msgstr ""
":mod:`mimetypes`: Extensões válidas estão vazias ou devem começar com '.' "
"para :meth:`mimetypes.MimeTypes.add_type`. Extensões sem ponto estão "
"descontinuadas e levantarão uma exceção :exc:`ValueError` no Python 3.16. "
"(Contribuição de Hugo van Kemenade em :gh:`75223`.)"

#: ../../whatsnew/3.14.rst:2660
msgid ""
":mod:`!nturl2path`: This module is now deprecated. Call :func:`urllib."
"request.url2pathname` and :func:`~urllib.request.pathname2url` instead. "
"(Contributed by Barney Gale in :gh:`125866`.)"
msgstr ""
":mod:`!nturl2path`: Este módulo está descontinuado. Em vez disso, chame :"
"func:`urllib.request.url2pathname` e :func:`~urllib.request.pathname2url`. "
"(Contribuição de Barney Gale em :gh:`125866`.)"

#: ../../whatsnew/3.14.rst:2665
msgid ""
":mod:`os`: The :func:`os.popen` and :func:`os.spawn* <os.spawnl>` functions "
"are now :term:`soft deprecated`. They should no longer be used to write new "
"code. The :mod:`subprocess` module is recommended instead. (Contributed by "
"Victor Stinner in :gh:`120743`.)"
msgstr ""
":mod:`os`: As funções :func:`os.popen` e :func:`os.spawn* <os.spawnl>` estão "
"agora :term:`suavemente descontinuadas <soft deprecated>`. Elas não devem "
"mais ser usadas para escrever código novo. O módulo :mod:`subprocess` é "
"recomendado em seu lugar. (Contribuição de Victor Stinner em :gh:`120743`.)"

#: ../../whatsnew/3.14.rst:2672
msgid ""
":mod:`pathlib`: :meth:`!pathlib.PurePath.as_uri` is now deprecated and "
"scheduled for removal in Python 3.19. Use :meth:`pathlib.Path.as_uri` "
"instead. (Contributed by Barney Gale in :gh:`123599`.)"
msgstr ""
":mod:`pathlib`: :meth:`!pathlib.PurePath.as_uri` está agora descontinuado e "
"está programado para remoção no Python 3.19. Em vez disso, use :meth:"
"`pathlib.Path.as_uri`. (Contribuição de Barney Gale em :gh:`123599`.)"

#: ../../whatsnew/3.14.rst:2678
msgid ""
":mod:`pdb`: The undocumented ``pdb.Pdb.curframe_locals`` attribute is now a "
"deprecated read-only property, which will be removed in a future version of "
"Python. The low overhead dynamic frame locals access added in Python 3.13 "
"by :pep:`667` means the frame locals cache reference previously stored in "
"this attribute is no longer needed. Derived debuggers should access ``pdb."
"Pdb.curframe.f_locals`` directly in Python 3.13 and later versions. "
"(Contributed by Tian Gao in :gh:`124369` and :gh:`125951`.)"
msgstr ""
":mod:`pdb`: O atributo não documentado ``pdb.Pdb.curframe_locals`` agora é "
"uma propriedade somente leitura descontinuada, que será removido em uma "
"versão futura do Python. O acesso dinâmico de baixa sobrecarga aos locais de "
"quadro, adicionado no Python 3.13 pela :pep:`667`, significa que a "
"referência ao cache de locais de quadro, armazenada anteriormente neste "
"atributo, não é mais necessária. Depuradores derivados devem acessar ``pdb."
"Pdb.curframe.f_locals`` diretamente no Python 3.13 e versões posteriores. "
"(Contribuição de Tian Gao em :gh:`124369` e :gh:`125951`.)"

#: ../../whatsnew/3.14.rst:2687
msgid ""
":mod:`symtable`: Deprecate :meth:`symtable.Class.get_methods` due to the "
"lack of interest, scheduled for removal in Python 3.16. (Contributed by "
"Bénédikt Tran in :gh:`119698`.)"
msgstr ""
":mod:`symtable`: Descontinua :meth:`symtable.Class.get_methods` por falta de "
"interesse, programado para remoção no Python 3.16. (Contribuição de Bénédikt "
"Tran em :gh:`119698`.)"

#: ../../whatsnew/3.14.rst:2692
msgid ""
":mod:`tkinter`: The :class:`!tkinter.Variable` methods :meth:`!"
"trace_variable`, :meth:`!trace_vdelete` and :meth:`!trace_vinfo` are now "
"deprecated. Use :meth:`!trace_add`, :meth:`!trace_remove` and :meth:`!"
"trace_info` instead. (Contributed by Serhiy Storchaka in :gh:`120220`.)"
msgstr ""
":mod:`tkinter`: Os métodos :class:`!tkinter.Variable` :meth:`!"
"trace_variable`, :meth:`!trace_vdelete` e :meth:`!trace_vinfo` estão "
"descontinuados. Em vez disso, use :meth:`!trace_add`, :meth:`!trace_remove` "
"e :meth:`!trace_info`. (Contribuição de Serhiy Storchaka em :gh:`120220`.)"

#: ../../whatsnew/3.14.rst:2698
msgid ""
":mod:`urllib.parse`: Accepting objects with false values (like ``0`` and "
"``[]``) except empty strings, bytes-like objects and ``None`` in :func:"
"`~urllib.parse.parse_qsl` and :func:`~urllib.parse.parse_qs` is now "
"deprecated. (Contributed by Serhiy Storchaka in :gh:`116897`.)"
msgstr ""
":mod:`urllib.parse`: Aceitar objetos com valores falsos (como ``0`` e "
"``[]``), exceto strings vazias, objetos bytes ou similares e ``None`` nas "
"funções :func:`~urllib.parse.parse_qsl` e :func:`~urllib.parse.parse_qs`, "
"agora está descontinuado. (Contribuição de Serhiy Storchaka em :gh:`116897`.)"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:2
#: ../../deprecations/pending-removal-in-3.15.rst:2
msgid "Pending removal in Python 3.15"
msgstr "Remoção pendente no Python 3.15"

#: ../../deprecations/pending-removal-in-3.15.rst:4
#: ../../deprecations/pending-removal-in-3.16.rst:4
msgid "The import system:"
msgstr "O sistema de importação:"

#: ../../deprecations/pending-removal-in-3.15.rst:6
msgid ""
"Setting :attr:`~module.__cached__` on a module while failing to set :attr:"
"`__spec__.cached <importlib.machinery.ModuleSpec.cached>` is deprecated. In "
"Python 3.15, :attr:`!__cached__` will cease to be set or take into "
"consideration by the import system or standard library. (:gh:`97879`)"
msgstr ""
"A definição de :attr:`~module.__cached__` em um módulo enquanto falha na "
"definição de :attr:`__spec__.cached <importlib.machinery.ModuleSpec.cached>` "
"está descontinuado. No Python 3.15, :attr:`!__cached__` deixará de ser "
"definido ou levado em consideração pelo sistema de importação ou pela "
"biblioteca padrão. (:gh:`97879`)"

#: ../../deprecations/pending-removal-in-3.15.rst:11
msgid ""
"Setting :attr:`~module.__package__` on a module while failing to set :attr:"
"`__spec__.parent <importlib.machinery.ModuleSpec.parent>` is deprecated. In "
"Python 3.15, :attr:`!__package__` will cease to be set or take into "
"consideration by the import system or standard library. (:gh:`97879`)"
msgstr ""
"A definição de :attr:`~module.__package__` em um módulo enquanto falha na "
"definição de :attr:`__spec__.parent <importlib.machinery.ModuleSpec.parent>` "
"está descontinuado. No Python 3.15, :attr:`!__package__` deixará de ser "
"definido ou levado em consideração pelo sistema de importação ou pela "
"biblioteca padrão. (:gh:`97879`)"

#: ../../deprecations/pending-removal-in-3.15.rst:18
msgid ""
"The undocumented :func:`!ctypes.SetPointerType` function has been deprecated "
"since Python 3.13."
msgstr ""
"A função não documentada :func:`!ctypes.SetPointerType` foi descontinuada "
"desde o Python 3.13."

#: ../../deprecations/pending-removal-in-3.15.rst:21
msgid ":mod:`http.server`:"
msgstr ":mod:`http.server`:"

#: ../../deprecations/pending-removal-in-3.15.rst:23
msgid ""
"The obsolete and rarely used :class:`~http.server.CGIHTTPRequestHandler` has "
"been deprecated since Python 3.13. No direct replacement exists. *Anything* "
"is better than CGI to interface a web server with a request handler."
msgstr ""
"A classe obsoleta e raramente usada :class:`~http.server."
"CGIHTTPRequestHandler` foi descontinuada desde o Python 3.13. Não existe "
"substituição direta. *Qualquer coisa* é melhor que CGI para fazer a "
"interface de um servidor web com um manipulador de requisição."

#: ../../deprecations/pending-removal-in-3.15.rst:29
msgid ""
"The :option:`!--cgi` flag to the :program:`python -m http.server` command-"
"line interface has been deprecated since Python 3.13."
msgstr ""
"O sinalizador :option:`!--cgi` para a interface de linha de comando :program:"
"`python -m http.server` foi descontinuado desde o Python 3.13."

#: ../../deprecations/pending-removal-in-3.15.rst:32
#: ../../deprecations/pending-removal-in-future.rst:63
msgid ":mod:`importlib`:"
msgstr ":mod:`importlib`:"

#: ../../deprecations/pending-removal-in-3.15.rst:34
msgid "``load_module()`` method: use ``exec_module()`` instead."
msgstr "Método ``load_module()``: use ``exec_module()``."

#: ../../deprecations/pending-removal-in-3.15.rst:36
msgid ":class:`locale`:"
msgstr ":class:`locale`:"

#: ../../deprecations/pending-removal-in-3.15.rst:38
msgid ""
"The :func:`~locale.getdefaultlocale` function has been deprecated since "
"Python 3.11. Its removal was originally planned for Python 3.13 (:gh:"
"`90817`), but has been postponed to Python 3.15. Use :func:`~locale."
"getlocale`, :func:`~locale.setlocale`, and :func:`~locale.getencoding` "
"instead. (Contributed by Hugo van Kemenade in :gh:`111187`.)"
msgstr ""
"A função :func:`~locale.getdefaultlocale` foi descontinuada desde o Python "
"3.11. Sua remoção foi planejada originalmente para o Python 3.13 (:gh:"
"`90817`), mas foi adiada para o Python 3.15. Em vez disso, use :func:"
"`~locale.getlocale`, :func:`~locale.setlocale` e :func:`~locale."
"getencoding`. (Contribuição de Hugo van Kemenade em :gh:`111187`.)"

#: ../../deprecations/pending-removal-in-3.15.rst:46
msgid ":mod:`pathlib`:"
msgstr ":mod:`pathlib`:"

#: ../../deprecations/pending-removal-in-3.15.rst:48
msgid ""
":meth:`.PurePath.is_reserved` has been deprecated since Python 3.13. Use :"
"func:`os.path.isreserved` to detect reserved paths on Windows."
msgstr ""
":meth:`.PurePath.is_reserved` foi descontinuado desde o Python 3.13. Use :"
"func:`os.path.isreserved` para detectar caminhos reservados no Windows."

#: ../../deprecations/pending-removal-in-3.15.rst:52
msgid ":mod:`platform`:"
msgstr ":mod:`platform`:"

#: ../../deprecations/pending-removal-in-3.15.rst:54
msgid ""
":func:`~platform.java_ver` has been deprecated since Python 3.13. This "
"function is only useful for Jython support, has a confusing API, and is "
"largely untested."
msgstr ""
":func:`~platform.java_ver` foi descontinuada desde o Python 3.13. Esta "
"função é útil apenas para suporte Jython, tem uma API confusa e é amplamente "
"não testada."

#: ../../deprecations/pending-removal-in-3.15.rst:58
#: ../../deprecations/pending-removal-in-3.16.rst:96
msgid ":mod:`sysconfig`:"
msgstr ":mod:`sysconfig`:"

#: ../../deprecations/pending-removal-in-3.15.rst:60
msgid ""
"The *check_home* argument of :func:`sysconfig.is_python_build` has been "
"deprecated since Python 3.12."
msgstr ""
"O argumento *check_home* de :func:`sysconfig.is_python_build` foi "
"descontinuado desde o Python 3.12."

#: ../../deprecations/pending-removal-in-3.15.rst:63
msgid ":mod:`threading`:"
msgstr ":mod:`threading`:"

#: ../../deprecations/pending-removal-in-3.15.rst:65
msgid ""
":func:`~threading.RLock` will take no arguments in Python 3.15. Passing any "
"arguments has been deprecated since Python 3.14, as the  Python version does "
"not permit any arguments, but the C version allows any number of positional "
"or keyword arguments, ignoring every argument."
msgstr ""
":func:`~threading.RLock` não aceitará argumentos no Python 3.15. A passagem "
"quaisquer argumentos foi descontinuada desde o Python 3.14, pois a versão "
"Python não permite nenhum argumento, mas a versão C permite qualquer número "
"de argumentos posicionais ou nomeados, ignorando todos os argumentos."

#: ../../deprecations/pending-removal-in-3.15.rst:71
msgid ":mod:`types`:"
msgstr ":mod:`types`:"

#: ../../deprecations/pending-removal-in-3.15.rst:73
msgid ""
":class:`types.CodeType`: Accessing :attr:`~codeobject.co_lnotab` was "
"deprecated in :pep:`626` since 3.10 and was planned to be removed in 3.12, "
"but it only got a proper :exc:`DeprecationWarning` in 3.12. May be removed "
"in 3.15. (Contributed by Nikita Sobolev in :gh:`101866`.)"
msgstr ""
":class:`types.CodeType`: o acesso a :attr:`~codeobject.co_lnotab` foi "
"descontinuado na :pep:`626` desde 3.10 e foi planejado para ser removido em "
"3.12, mas só recebeu uma :exc:`DeprecationWarning` adequada em 3.12. Pode "
"ser removido em 3.15. (Contribuição de Nikita Sobolev em :gh:`101866`.)"

#: ../../deprecations/pending-removal-in-3.15.rst:80
#: ../../deprecations/pending-removal-in-3.17.rst:26
msgid ":mod:`typing`:"
msgstr ":mod:`typing`:"

#: ../../deprecations/pending-removal-in-3.15.rst:82
msgid ""
"The undocumented keyword argument syntax for creating :class:`~typing."
"NamedTuple` classes (for example, ``Point = NamedTuple(\"Point\", x=int, "
"y=int)``) has been deprecated since Python 3.13. Use the class-based syntax "
"or the functional syntax instead."
msgstr ""
"A não-documentada sintaxe de argumento nomeado para criar classes :class:"
"`~typing.NamedTuple` (por exemplo, ``Point = NamedTuple(\"Point\", x=int, "
"y=int)``) foi descontinuada desde o Python 3.13. Em vez disso, use as "
"sintaxes baseada em classe ou funcional."

#: ../../deprecations/pending-removal-in-3.15.rst:88
msgid ""
"When using the functional syntax of :class:`~typing.TypedDict`\\s, failing "
"to pass a value to the *fields* parameter (``TD = TypedDict(\"TD\")``) or "
"passing ``None`` (``TD = TypedDict(\"TD\", None)``) has been deprecated "
"since Python 3.13. Use ``class TD(TypedDict): pass`` or ``TD = "
"TypedDict(\"TD\", {})`` to create a TypedDict with zero field."
msgstr ""
"Ao usar a sintaxe funcional de :class:`~typing.TypedDict`\\s, não passar um "
"valor para o parâmetro *fields* (``TD = TypedDict(\"TD\")``) ou passar "
"``None`` (``TD = TypedDict(\"TD\", None)``) foi está descontinuado desde o "
"Python 3.13. Use ``class TD(TypedDict): pass`` ou ``TD = TypedDict(\"TD\", "
"{})`` para criar uma classe TypedDict com nenhum campo."

#: ../../deprecations/pending-removal-in-3.15.rst:95
msgid ""
"The :func:`typing.no_type_check_decorator` decorator function has been "
"deprecated since Python 3.13. After eight years in the :mod:`typing` module, "
"it has yet to be supported by any major type checker."
msgstr ""
"A função decoradora :func:`typing.no_type_check_decorator` foi descontinuada "
"desde o Python 3.13. Após oito anos no módulo :mod:`typing`, ela ainda não "
"foi suportada por nenhum verificador de tipo importante."

#: ../../deprecations/pending-removal-in-3.15.rst:100
msgid ":mod:`wave`:"
msgstr ":mod:`wave`:"

#: ../../deprecations/pending-removal-in-3.15.rst:102
msgid ""
"The :meth:`~wave.Wave_read.getmark`, :meth:`!setmark`, and :meth:`~wave."
"Wave_read.getmarkers` methods of the :class:`~wave.Wave_read` and :class:"
"`~wave.Wave_write` classes have been deprecated since Python 3.13."
msgstr ""
"Os métodos :meth:`~wave.Wave_read.getmark`, :meth:`!setmark` e :meth:`~wave."
"Wave_read.getmarkers` das classes :class:`~wave.Wave_read` e :class:`~wave."
"Wave_write` foram descontinuados desde o Python 3.13."

#: ../../deprecations/pending-removal-in-3.15.rst:107
msgid ":mod:`zipimport`:"
msgstr ":mod:`zipimport`:"

#: ../../deprecations/pending-removal-in-3.15.rst:109
msgid ""
":meth:`~zipimport.zipimporter.load_module` has been deprecated since Python "
"3.10. Use :meth:`~zipimport.zipimporter.exec_module` instead. (Contributed "
"by Jiahao Li in :gh:`125746`.)"
msgstr ""
":meth:`~zipimport.zipimporter.load_module` está descontinuado desde o Python "
"3.10. Em vez disso, use :meth:`~zipimport.zipimporter.exec_module`. "
"(Contribuição de Jiahao Li em :gh:`125746`.)"

#: ../../deprecations/c-api-pending-removal-in-3.16.rst:2
#: ../../deprecations/pending-removal-in-3.16.rst:2
msgid "Pending removal in Python 3.16"
msgstr "Remoção pendente no Python 3.16"

#: ../../deprecations/pending-removal-in-3.16.rst:6
msgid ""
"Setting :attr:`~module.__loader__` on a module while failing to set :attr:"
"`__spec__.loader <importlib.machinery.ModuleSpec.loader>` is deprecated. In "
"Python 3.16, :attr:`!__loader__` will cease to be set or taken into "
"consideration by the import system or the standard library."
msgstr ""
"A definição de :attr:`~module.__loader__` em um módulo enquanto falha na "
"definição de :attr:`__spec__.loader <importlib.machinery.ModuleSpec.loader>` "
"está descontinuado. No Python 3.16, :attr:`!__loader__` deixará de ser "
"definido ou levado em consideração pelo sistema de importação ou pela "
"biblioteca padrão."

#: ../../deprecations/pending-removal-in-3.16.rst:11
msgid ":mod:`array`:"
msgstr ":mod:`array`:"

#: ../../deprecations/pending-removal-in-3.16.rst:13
msgid ""
"The ``'u'`` format code (:c:type:`wchar_t`) has been deprecated in "
"documentation since Python 3.3 and at runtime since Python 3.13. Use the "
"``'w'`` format code (:c:type:`Py_UCS4`) for Unicode characters instead."
msgstr ""
"O código de formato ``'u'`` (:c:type:`wchar_t`) foi descontinuado na "
"documentação desde o Python 3.3 e do ambiente de execução desde o Python "
"3.13. Em vez disso, use o código de formato ``'w'`` (:c:type:`Py_UCS4`) para "
"caracteres Unicode."

#: ../../deprecations/pending-removal-in-3.16.rst:21
msgid ""
":func:`!asyncio.iscoroutinefunction` is deprecated and will be removed in "
"Python 3.16; use :func:`inspect.iscoroutinefunction` instead. (Contributed "
"by Jiahao Li and Kumar Aditya in :gh:`122875`.)"
msgstr ""
":func:`!asyncio.iscoroutinefunction` foi descontinuado e será removido no "
"Python 3.16, use :func:`inspect.iscoroutinefunction` em vez disso. "
"(Contribuição de Jiahao Li e Kumar Aditya em :gh:`122875`.)"

#: ../../deprecations/pending-removal-in-3.16.rst:26
msgid ""
":mod:`asyncio` policy system is deprecated and will be removed in Python "
"3.16. In particular, the following classes and functions are deprecated:"
msgstr ""
"O sistema de políticas :mod:`asyncio` está descontinuado e será removido no "
"Python 3.16. Em particular, as seguintes classes e funções estão "
"descontinuadas:"

#: ../../deprecations/pending-removal-in-3.16.rst:36
msgid ""
"Users should use :func:`asyncio.run` or :class:`asyncio.Runner` with "
"*loop_factory* to use the desired event loop implementation."
msgstr ""
"Os usuários devem usar :func:`asyncio.run` ou :class:`asyncio.Runner` com "
"*loop_factory* para usar a implementação de loop de eventos desejada."

#: ../../deprecations/pending-removal-in-3.16.rst:39
msgid "For example, to use :class:`asyncio.SelectorEventLoop` on Windows::"
msgstr "por exemplo, para usar :class:`asyncio.SelectorEventLoop` no Windows::"

#: ../../deprecations/pending-removal-in-3.16.rst:50
#: ../../deprecations/pending-removal-in-future.rst:16
msgid ":mod:`builtins`:"
msgstr ":mod:`builtins`:"

#: ../../deprecations/pending-removal-in-3.16.rst:52
msgid ""
"Bitwise inversion on boolean types, ``~True`` or ``~False`` has been "
"deprecated since Python 3.12, as it produces surprising and unintuitive "
"results (``-2`` and ``-1``). Use ``not x`` instead for the logical negation "
"of a Boolean. In the rare case that you need the bitwise inversion of the "
"underlying integer, convert to ``int`` explicitly (``~int(x)``)."
msgstr ""
"A inversão bit a bit em tipos booleanos, ``~True`` ou ``~False`` foi "
"descontinuada desde o Python 3.12, pois produz resultados surpreendentes e "
"não intuitivos (``-2`` e ``-1``). Em vez disso, use ``not x`` para a negação "
"lógica de um booleano. No caso raro de você precisar da inversão bit a bit "
"do inteiro subjacente, converta para ``int`` explicitamente (``~int(x)``)."

#: ../../deprecations/pending-removal-in-3.16.rst:59
msgid ":mod:`functools`:"
msgstr ":mod:`functools`:"

#: ../../deprecations/pending-removal-in-3.16.rst:61
msgid ""
"Calling the Python implementation of :func:`functools.reduce` with "
"*function* or *sequence* as keyword arguments has been deprecated since "
"Python 3.14."
msgstr ""
"A chamada da implementação Python de :func:`functools.reduce` com *function* "
"ou *sequence* como argumentos nomeados foi descontinuada desde o Python 3.14."

#: ../../deprecations/pending-removal-in-3.16.rst:64
msgid ":mod:`logging`:"
msgstr ":mod:`logging`:"

#: ../../deprecations/pending-removal-in-3.16.rst:66
msgid ""
"Support for custom logging handlers with the *strm* argument is deprecated "
"and scheduled for removal in Python 3.16. Define handlers with the *stream* "
"argument instead. (Contributed by Mariusz Felisiak in :gh:`115032`.)"
msgstr ""
"O suporte para manipuladores de registro personalizados com o argumento "
"*strm* foi descontinuado e está programado para ser removido no Python 3.16. "
"Em vez disso, defina manipuladores com o argumento *stream*. (Contribuição "
"de Mariusz Felisiak em :gh:`115032`.)"

#: ../../deprecations/pending-removal-in-3.16.rst:70
msgid ":mod:`mimetypes`:"
msgstr ":mod:`mimetypes`:"

#: ../../deprecations/pending-removal-in-3.16.rst:72
msgid ""
"Valid extensions start with a '.' or are empty for :meth:`mimetypes."
"MimeTypes.add_type`. Undotted extensions are deprecated and will raise a :"
"exc:`ValueError` in Python 3.16. (Contributed by Hugo van Kemenade in :gh:"
"`75223`.)"
msgstr ""
"Extensões válidas começam com um '.' ou estão vazias para :meth:`mimetypes."
"MimeTypes.add_type`. Extensões sem ponto estão descontinuadas e levantarão "
"uma exceção :exc:`ValueError` no Python 3.16. (Contribuição de Hugo van "
"Kemenade em :gh:`75223`.)"

#: ../../deprecations/pending-removal-in-3.16.rst:78
msgid ":mod:`shutil`:"
msgstr ":mod:`shutil`:"

#: ../../deprecations/pending-removal-in-3.16.rst:80
msgid ""
"The :class:`!ExecError` exception has been deprecated since Python 3.14. It "
"has not been used by any function in :mod:`!shutil` since Python 3.4, and is "
"now an alias of :exc:`RuntimeError`."
msgstr ""
"A exceção :class:`!ExecError` foi descontinuada desde o Python 3.14. Ela não "
"foi usada por nenhuma função em :mod:`!shutil` desde o Python 3.4, e agora é "
"um alias de :exc:`RuntimeError`."

#: ../../deprecations/pending-removal-in-3.16.rst:85
msgid ":mod:`symtable`:"
msgstr ":mod:`symtable`:"

#: ../../deprecations/pending-removal-in-3.16.rst:87
msgid ""
"The :meth:`Class.get_methods <symtable.Class.get_methods>` method has been "
"deprecated since Python 3.14."
msgstr ""
"O método :meth:`Class.get_methods <symtable.Class.get_methods>` foi "
"descontinuado desde o Python 3.14."

#: ../../deprecations/pending-removal-in-3.16.rst:90
msgid ":mod:`sys`:"
msgstr ":mod:`sys`:"

#: ../../deprecations/pending-removal-in-3.16.rst:92
msgid ""
"The :func:`~sys._enablelegacywindowsfsencoding` function has been deprecated "
"since Python 3.13. Use the :envvar:`PYTHONLEGACYWINDOWSFSENCODING` "
"environment variable instead."
msgstr ""
"A função :func:`~sys._enablelegacywindowsfsencoding` foi descontinuada desde "
"o Python 3.13. Em vez disso, use a variável de ambiente :envvar:"
"`PYTHONLEGACYWINDOWSFSENCODING`."

#: ../../deprecations/pending-removal-in-3.16.rst:98
msgid ""
"The :func:`!sysconfig.expand_makefile_vars` function has been deprecated "
"since Python 3.14. Use the ``vars`` argument of :func:`sysconfig.get_paths` "
"instead."
msgstr ""
"A função :func:`!sysconfig.expand_makefile_vars` está descontinuada desde o "
"Python 3.14. Em vez disso, use o argumento ``vars`` de :func:`sysconfig."
"get_paths`."

#: ../../deprecations/pending-removal-in-3.16.rst:102
msgid ":mod:`tarfile`:"
msgstr ":mod:`tarfile`:"

#: ../../deprecations/pending-removal-in-3.16.rst:104
msgid ""
"The undocumented and unused :attr:`!TarFile.tarfile` attribute has been "
"deprecated since Python 3.13."
msgstr ""
"O atributo não documentado e não utilizado :attr:`!TarFile.tarfile` foi "
"descontinuado desde o Python 3.13."

#: ../../deprecations/pending-removal-in-3.17.rst:2
msgid "Pending removal in Python 3.17"
msgstr "Remoção pendente no Python 3.17"

#: ../../deprecations/pending-removal-in-3.17.rst:4
msgid ":mod:`collections.abc`:"
msgstr ":mod:`collections.abc`:"

#: ../../deprecations/pending-removal-in-3.17.rst:6
msgid ""
":class:`collections.abc.ByteString` is scheduled for removal in Python 3.17."
msgstr ""
":class:`collections.abc.ByteString` está agendado para remoção no Python "
"3.17."

#: ../../deprecations/pending-removal-in-3.17.rst:8
#: ../../deprecations/pending-removal-in-3.17.rst:36
msgid ""
"Use ``isinstance(obj, collections.abc.Buffer)`` to test if ``obj`` "
"implements the :ref:`buffer protocol <bufferobjects>` at runtime. For use in "
"type annotations, either use :class:`~collections.abc.Buffer` or a union "
"that explicitly specifies the types your code supports (e.g., ``bytes | "
"bytearray | memoryview``)."
msgstr ""
"Use ``isinstance(obj, collections.abc.Buffer)`` para testar se ``obj`` "
"implementa o :ref:`protocolo de buffer <bufferobjects>` em tempo de "
"execução. Para uso em anotações de tipo, use :class:`~collections.abc."
"Buffer` ou uma união que especifique explicitamente os tipos suportados pelo "
"seu código (por exemplo, ``bytes | bytearray | memoryview``)."

#: ../../deprecations/pending-removal-in-3.17.rst:14
#: ../../deprecations/pending-removal-in-3.17.rst:42
msgid ""
":class:`!ByteString` was originally intended to be an abstract class that "
"would serve as a supertype of both :class:`bytes` and :class:`bytearray`. "
"However, since the ABC never had any methods, knowing that an object was an "
"instance of :class:`!ByteString` never actually told you anything useful "
"about the object. Other common buffer types such as :class:`memoryview` were "
"also never understood as subtypes of :class:`!ByteString` (either at runtime "
"or by static type checkers)."
msgstr ""
":class:`!ByteString` foi originalmente concebido para ser uma classe "
"abstrata que serviria como um supertipo de :class:`bytes` e :class:"
"`bytearray`. No entanto, como o ABC nunca teve métodos, saber que um objeto "
"era uma instância de :class:`!ByteString` nunca lhe dizia nada de útil sobre "
"o objeto. Outros tipos comuns de buffer, como :class:`memoryview`, também "
"nunca foram entendidos como subtipos de :class:`!ByteString` (seja em tempo "
"de execução ou por verificadores de tipo estáticos)."

#: ../../deprecations/pending-removal-in-3.17.rst:22
#: ../../deprecations/pending-removal-in-3.17.rst:50
msgid ""
"See :pep:`PEP 688 <688#current-options>` for more details. (Contributed by "
"Shantanu Jain in :gh:`91896`.)"
msgstr ""
"Veja :pep:`PEP 688 <688#current-options>` para mais detalhes. (Contribuição "
"de Shantanu Jain em :gh:`91896`.)"

#: ../../deprecations/pending-removal-in-3.17.rst:28
msgid ""
"Before Python 3.14, old-style unions were implemented using the private "
"class ``typing._UnionGenericAlias``. This class is no longer needed for the "
"implementation, but it has been retained for backward compatibility, with "
"removal scheduled for Python 3.17. Users should use documented introspection "
"helpers like :func:`typing.get_origin` and :func:`typing.get_args` instead "
"of relying on private implementation details."
msgstr ""
"Antes do Python 3.14, as uniões antigas eram implementadas usando a classe "
"privada ``typing._UnionGenericAlias``. Essa classe não é mais necessária "
"para a implementação, mas foi mantida para compatibilidade com versões "
"anteriores, com remoção prevista para o Python 3.17. Os usuários devem usar "
"auxiliares de introspecção documentados, como :func:`typing.get_origin` e :"
"func:`typing.get_args`, em vez de depender de detalhes de implementação "
"privada."

#: ../../deprecations/pending-removal-in-3.17.rst:33
msgid ""
":class:`typing.ByteString`, deprecated since Python 3.9, is scheduled for "
"removal in Python 3.17."
msgstr ""
":class:`typing.ByteString`, obsoleto desde o Python 3.9, está programado "
"para ser removido no Python 3.17."

#: ../../deprecations/pending-removal-in-3.19.rst:2
msgid "Pending removal in Python 3.19"
msgstr "Remoção pendente no Python 3.19"

#: ../../deprecations/pending-removal-in-3.19.rst:6
msgid ""
"Implicitly switching to the MSVC-compatible struct layout by setting :attr:"
"`~ctypes.Structure._pack_` but not :attr:`~ctypes.Structure._layout_` on non-"
"Windows platforms."
msgstr ""
"Troca implícita para o layout de estrutura compatível com MSVC definindo :"
"attr:`~ctypes.Structure._pack_`, mas não :attr:`~ctypes.Structure._layout_` "
"em plataformas não Windows."

#: ../../deprecations/c-api-pending-removal-in-future.rst:2
#: ../../deprecations/pending-removal-in-future.rst:2
msgid "Pending removal in future versions"
msgstr "Remoção pendente em versões futuras"

#: ../../deprecations/pending-removal-in-future.rst:4
msgid ""
"The following APIs will be removed in the future, although there is "
"currently no date scheduled for their removal."
msgstr ""
"As APIs a seguir serão removidas no futuro, embora atualmente não haja uma "
"data agendada para sua remoção."

#: ../../deprecations/pending-removal-in-future.rst:9
msgid ""
"Nesting argument groups and nesting mutually exclusive groups are deprecated."
msgstr ""
"O aninhamento de grupos de argumentos e o aninhamento de grupos mutuamente "
"exclusivos estão descontinuado."

#: ../../deprecations/pending-removal-in-future.rst:11
msgid ""
"Passing the undocumented keyword argument *prefix_chars* to :meth:`~argparse."
"ArgumentParser.add_argument_group` is now deprecated."
msgstr ""
"A passagem do argumento nomeado não documentado *prefix_chars* para :meth:"
"`~argparse.ArgumentParser.add_argument_group` agora está descontinuado."

#: ../../deprecations/pending-removal-in-future.rst:14
msgid "The :class:`argparse.FileType` type converter is deprecated."
msgstr "O conversor de tipo :class:`argparse.FileType` está descontinuado."

#: ../../deprecations/pending-removal-in-future.rst:18
msgid ""
"Generators: ``throw(type, exc, tb)`` and ``athrow(type, exc, tb)`` signature "
"is deprecated: use ``throw(exc)`` and ``athrow(exc)`` instead, the single "
"argument signature."
msgstr ""
"Geradores: a assinatura ``throw(type, exc, tb)`` e ``athrow(type, exc, tb)`` "
"está descontinuada: use ``throw(exc)`` e ``athrow(exc)``, a assinatura do "
"argumento único."

#: ../../deprecations/pending-removal-in-future.rst:21
msgid ""
"Currently Python accepts numeric literals immediately followed by keywords, "
"for example ``0in x``, ``1or x``, ``0if 1else 2``.  It allows confusing and "
"ambiguous expressions like ``[0x1for x in y]`` (which can be interpreted as "
"``[0x1 for x in y]`` or ``[0x1f or x in y]``).  A syntax warning is raised "
"if the numeric literal is immediately followed by one of keywords :keyword:"
"`and`, :keyword:`else`, :keyword:`for`, :keyword:`if`, :keyword:`in`, :"
"keyword:`is` and :keyword:`or`.  In a future release it will be changed to a "
"syntax error. (:gh:`87999`)"
msgstr ""
"Atualmente Python aceita literais numéricos imediatamente seguidos por "
"palavras reservadas como, por exemplo, ``0in x``, ``1or x``, ``0if 1else "
"2``. Ele permite expressões confusas e ambíguas como ``[0x1for x in y]`` "
"(que pode ser interpretada como ``[0x1 for x in y]`` ou ``[0x1f or x in "
"y]``). Um aviso de sintaxe é levantado se o literal numérico for "
"imediatamente seguido por uma das palavras reservadas :keyword:`and`, :"
"keyword:`else`, :keyword:`for`, :keyword:`if`, :keyword:`in` , :keyword:`is` "
"e :keyword:`or`. Em uma versão futura, será alterado para um erro de "
"sintaxe. (:gh:`87999`)"

#: ../../deprecations/pending-removal-in-future.rst:29
msgid ""
"Support for ``__index__()`` and ``__int__()`` method returning non-int type: "
"these methods will be required to return an instance of a strict subclass "
"of :class:`int`."
msgstr ""
"Suporte para métodos ``__index__()`` e ``__int__()`` retornando tipo não-"
"int: esses métodos serão necessários para retornar uma instância de uma "
"subclasse estrita de :class:`int`."

#: ../../deprecations/pending-removal-in-future.rst:32
msgid ""
"Support for ``__float__()`` method returning a strict subclass of :class:"
"`float`: these methods will be required to return an instance of :class:"
"`float`."
msgstr ""
"Suporte para o método ``__float__()`` retornando uma subclasse estrita de :"
"class:`float`: esses métodos serão necessários para retornar uma instância "
"de :class:`float`."

#: ../../deprecations/pending-removal-in-future.rst:35
msgid ""
"Support for ``__complex__()`` method returning a strict subclass of :class:"
"`complex`: these methods will be required to return an instance of :class:"
"`complex`."
msgstr ""
"Suporte para o método ``__complex__()`` retornando uma subclasse estrita de :"
"class:`complex`: esses métodos serão necessários para retornar uma instância "
"de :class:`complex`."

#: ../../deprecations/pending-removal-in-future.rst:38
msgid "Delegation of ``int()`` to ``__trunc__()`` method."
msgstr "Delegação do método ``int()`` para o ``__trunc__()``."

#: ../../deprecations/pending-removal-in-future.rst:39
msgid ""
"Passing a complex number as the *real* or *imag* argument in the :func:"
"`complex` constructor is now deprecated; it should only be passed as a "
"single positional argument. (Contributed by Serhiy Storchaka in :gh:"
"`109218`.)"
msgstr ""
"Passar um número complexo como argumento *real* ou *imag* no construtor :"
"func:`complex` agora está descontinuado; deve ser passado apenas como um "
"único argumento posicional. (Contribuição de Serhiy Storchaka em :gh:"
"`109218`.)"

#: ../../deprecations/pending-removal-in-future.rst:44
msgid ""
":mod:`calendar`: ``calendar.January`` and ``calendar.February`` constants "
"are deprecated and replaced by :data:`calendar.JANUARY` and :data:`calendar."
"FEBRUARY`. (Contributed by Prince Roshan in :gh:`103636`.)"
msgstr ""
":mod:`calendar`: as constantes ``calendar.January`` e ``calendar.February`` "
"foram descontinuadas e substituídas por :data:`calendar.JANUARY` e :data:"
"`calendar.FEBRUARY`. (Contribuição de Prince Roshan em :gh:`103636`.)"

#: ../../deprecations/pending-removal-in-future.rst:49
msgid ""
":mod:`codecs`: use :func:`open` instead of :func:`codecs.open`. (:gh:"
"`133038`)"
msgstr ""
":mod:`codecs`: use :func:`open` em vez de :func:`codecs.open`. (:gh:`133038`)"

#: ../../deprecations/pending-removal-in-future.rst:51
msgid ""
":attr:`codeobject.co_lnotab`: use the :meth:`codeobject.co_lines` method "
"instead."
msgstr ""
":attr:`codeobject.co_lnotab`: use o método :meth:`codeobject.co_lines`."

#: ../../deprecations/pending-removal-in-future.rst:54
msgid ":mod:`datetime`:"
msgstr ":mod:`datetime`:"

#: ../../deprecations/pending-removal-in-future.rst:56
msgid ""
":meth:`~datetime.datetime.utcnow`: use ``datetime.datetime.now(tz=datetime."
"UTC)``."
msgstr ""
":meth:`~datetime.datetime.utcnow`: use ``datetime.datetime.now(tz=datetime."
"UTC)``."

#: ../../deprecations/pending-removal-in-future.rst:58
msgid ""
":meth:`~datetime.datetime.utcfromtimestamp`: use ``datetime.datetime."
"fromtimestamp(timestamp, tz=datetime.UTC)``."
msgstr ""
":meth:`~datetime.datetime.utcfromtimestamp`: use ``datetime.datetime."
"fromtimestamp(timestamp, tz=datetime.UTC)``."

#: ../../deprecations/pending-removal-in-future.rst:61
msgid ":mod:`gettext`: Plural value must be an integer."
msgstr ":mod:`gettext`: o valor de plural deve ser um número inteiro."

#: ../../deprecations/pending-removal-in-future.rst:65
msgid ""
":func:`~importlib.util.cache_from_source` *debug_override* parameter is "
"deprecated: use the *optimization* parameter instead."
msgstr ""
"O parâmetro *debug_override* de :func:`~importlib.util.cache_from_source` "
"foi descontinuado: use o parâmetro *optimization*."

#: ../../deprecations/pending-removal-in-future.rst:68
msgid ":mod:`importlib.metadata`:"
msgstr ":mod:`importlib.metadata`:"

#: ../../deprecations/pending-removal-in-future.rst:70
msgid "``EntryPoints`` tuple interface."
msgstr "Interface de tupla ``EntryPoints``."

#: ../../deprecations/pending-removal-in-future.rst:71
msgid "Implicit ``None`` on return values."
msgstr "``None`` implícito nos valores de retorno."

#: ../../deprecations/pending-removal-in-future.rst:73
msgid ""
":mod:`logging`: the ``warn()`` method has been deprecated since Python 3.3, "
"use :meth:`~logging.warning` instead."
msgstr ""
":mod:`logging`: o método ``warn()`` foi descontinuado desde o Python 3.3, "
"use :meth:`~logging.warning`."

#: ../../deprecations/pending-removal-in-future.rst:76
msgid ""
":mod:`mailbox`: Use of StringIO input and text mode is deprecated, use "
"BytesIO and binary mode instead."
msgstr ""
":mod:`mailbox`: o uso da entrada StringIO e do modo de texto foi "
"descontinuado; em vez disso, use BytesIO e o modo binário."

#: ../../deprecations/pending-removal-in-future.rst:79
msgid ""
":mod:`os`: Calling :func:`os.register_at_fork` in multi-threaded process."
msgstr ":mod:`os`: chame :func:`os.register_at_fork` em processo multithread."

#: ../../deprecations/pending-removal-in-future.rst:81
msgid ""
":class:`!pydoc.ErrorDuringImport`: A tuple value for *exc_info* parameter is "
"deprecated, use an exception instance."
msgstr ""
":class:`!pydoc.ErrorDuringImport`: um valor de tupla para o parâmetro "
"*exc_info* foi descontinuado, use uma instância de exceção."

#: ../../deprecations/pending-removal-in-future.rst:84
msgid ""
":mod:`re`: More strict rules are now applied for numerical group references "
"and group names in regular expressions.  Only sequence of ASCII digits is "
"now accepted as a numerical reference.  The group name in bytes patterns and "
"replacement strings can now only contain ASCII letters and digits and "
"underscore. (Contributed by Serhiy Storchaka in :gh:`91760`.)"
msgstr ""
":mod:`re`: regras mais rigorosas agora são aplicadas para referências "
"numéricas de grupos e nomes de grupos em expressões regulares. Apenas a "
"sequência de dígitos ASCII agora é aceita como referência numérica. O nome "
"do grupo em padrões de bytes e strings de substituição agora pode conter "
"apenas letras e dígitos ASCII e sublinhado. (Contribuição de Serhiy "
"Storchaka em :gh:`91760`.)"

#: ../../deprecations/pending-removal-in-future.rst:91
msgid ""
":mod:`!sre_compile`, :mod:`!sre_constants` and :mod:`!sre_parse` modules."
msgstr ""
"Módulos :mod:`!sre_compile`, :mod:`!sre_constants` e :mod:`!sre_parse`."

#: ../../deprecations/pending-removal-in-future.rst:93
msgid ""
":mod:`shutil`: :func:`~shutil.rmtree`'s *onerror* parameter is deprecated in "
"Python 3.12; use the *onexc* parameter instead."
msgstr ""
":mod:`shutil`: o parâmetro *onerror* de :func:`~shutil.rmtree` foi "
"descontinuado no Python 3.12; use o parâmetro *onexc*."

#: ../../deprecations/pending-removal-in-future.rst:96
msgid ":mod:`ssl` options and protocols:"
msgstr "Protocolos e opções de :mod:`ssl`"

#: ../../deprecations/pending-removal-in-future.rst:98
msgid ":class:`ssl.SSLContext` without protocol argument is deprecated."
msgstr ":class:`ssl.SSLContext` sem argumento de protocolo foi descontinuado."

#: ../../deprecations/pending-removal-in-future.rst:99
msgid ""
":class:`ssl.SSLContext`: :meth:`~ssl.SSLContext.set_npn_protocols` and :meth:"
"`!selected_npn_protocol` are deprecated: use ALPN instead."
msgstr ""
":class:`ssl.SSLContext`: :meth:`~ssl.SSLContext.set_npn_protocols` e :meth:`!"
"selected_npn_protocol` foram descontinuados, use ALPN."

#: ../../deprecations/pending-removal-in-future.rst:102
msgid "``ssl.OP_NO_SSL*`` options"
msgstr "Opções de ``ssl.OP_NO_SSL*``"

#: ../../deprecations/pending-removal-in-future.rst:103
msgid "``ssl.OP_NO_TLS*`` options"
msgstr "Opções de ``ssl.OP_NO_TLS*``"

#: ../../deprecations/pending-removal-in-future.rst:104
msgid "``ssl.PROTOCOL_SSLv3``"
msgstr "``ssl.PROTOCOL_SSLv3``"

#: ../../deprecations/pending-removal-in-future.rst:105
msgid "``ssl.PROTOCOL_TLS``"
msgstr "``ssl.PROTOCOL_TLS``"

#: ../../deprecations/pending-removal-in-future.rst:106
msgid "``ssl.PROTOCOL_TLSv1``"
msgstr "``ssl.PROTOCOL_TLSv1``"

#: ../../deprecations/pending-removal-in-future.rst:107
msgid "``ssl.PROTOCOL_TLSv1_1``"
msgstr "``ssl.PROTOCOL_TLSv1_1``"

#: ../../deprecations/pending-removal-in-future.rst:108
msgid "``ssl.PROTOCOL_TLSv1_2``"
msgstr "``ssl.PROTOCOL_TLSv1_2``"

#: ../../deprecations/pending-removal-in-future.rst:109
msgid "``ssl.TLSVersion.SSLv3``"
msgstr "``ssl.TLSVersion.SSLv3``"

#: ../../deprecations/pending-removal-in-future.rst:110
msgid "``ssl.TLSVersion.TLSv1``"
msgstr "``ssl.TLSVersion.TLSv1``"

#: ../../deprecations/pending-removal-in-future.rst:111
msgid "``ssl.TLSVersion.TLSv1_1``"
msgstr "``ssl.TLSVersion.TLSv1_1``"

#: ../../deprecations/pending-removal-in-future.rst:113
msgid ":mod:`threading` methods:"
msgstr "Métodos de :mod:`threading`:"

#: ../../deprecations/pending-removal-in-future.rst:115
msgid ""
":meth:`!threading.Condition.notifyAll`: use :meth:`~threading.Condition."
"notify_all`."
msgstr ""
":meth:`!threading.Condition.notifyAll`: use :meth:`~threading.Condition."
"notify_all`."

#: ../../deprecations/pending-removal-in-future.rst:116
msgid ":meth:`!threading.Event.isSet`: use :meth:`~threading.Event.is_set`."
msgstr ":meth:`!threading.Event.isSet`: use :meth:`~threading.Event.is_set`."

#: ../../deprecations/pending-removal-in-future.rst:117
msgid ""
":meth:`!threading.Thread.isDaemon`, :meth:`threading.Thread.setDaemon`: use :"
"attr:`threading.Thread.daemon` attribute."
msgstr ""
":meth:`!threading.Thread.isDaemon`, :meth:`threading.Thread.setDaemon`: use "
"o atributo :attr:`threading.Thread.daemon`."

#: ../../deprecations/pending-removal-in-future.rst:119
msgid ""
":meth:`!threading.Thread.getName`, :meth:`threading.Thread.setName`: use :"
"attr:`threading.Thread.name` attribute."
msgstr ""
":meth:`!threading.Thread.getName`, :meth:`threading.Thread.setName`: use o "
"atributo :attr:`threading.Thread.name`."

#: ../../deprecations/pending-removal-in-future.rst:121
msgid ":meth:`!threading.currentThread`: use :meth:`threading.current_thread`."
msgstr ""
":meth:`!threading.currentThread`: use :meth:`threading.current_thread`."

#: ../../deprecations/pending-removal-in-future.rst:122
msgid ":meth:`!threading.activeCount`: use :meth:`threading.active_count`."
msgstr ":meth:`!threading.activeCount`: use :meth:`threading.active_count`."

#: ../../deprecations/pending-removal-in-future.rst:124
msgid ":class:`typing.Text` (:gh:`92332`)."
msgstr ":class:`typing.Text` (:gh:`92332`)."

#: ../../deprecations/pending-removal-in-future.rst:126
msgid ""
"The internal class ``typing._UnionGenericAlias`` is no longer used to "
"implement :class:`typing.Union`. To preserve compatibility with users using "
"this private class, a compatibility shim will be provided until at least "
"Python 3.17. (Contributed by Jelle Zijlstra in :gh:`105499`.)"
msgstr ""
"A classe interna ``typing._UnionGenericAlias`` não é mais usada para "
"implementar :class:`typing.Union`. Para preservar a compatibilidade com "
"usuários que utilizam esta classe privada, uma correção de compatibilidade "
"será fornecida pelo menos até a versão 3.17 do Python. (Contribuição de "
"Jelle Zijlstra em :gh:`105499`.)"

#: ../../deprecations/pending-removal-in-future.rst:131
msgid ""
":class:`unittest.IsolatedAsyncioTestCase`: it is deprecated to return a "
"value that is not ``None`` from a test case."
msgstr ""
":class:`unittest.IsolatedAsyncioTestCase`: foi descontinuado retornar um "
"valor que não seja ``None`` de um caso de teste."

#: ../../deprecations/pending-removal-in-future.rst:134
msgid ""
":mod:`urllib.parse` deprecated functions: :func:`~urllib.parse.urlparse` "
"instead"
msgstr ""
"Funções descontinuadas de :mod:`urllib.parse`: use :func:`~urllib.parse."
"urlparse`"

#: ../../deprecations/pending-removal-in-future.rst:136
msgid "``splitattr()``"
msgstr "``splitattr()``"

#: ../../deprecations/pending-removal-in-future.rst:137
msgid "``splithost()``"
msgstr "``splithost()``"

#: ../../deprecations/pending-removal-in-future.rst:138
msgid "``splitnport()``"
msgstr "``splitnport()``"

#: ../../deprecations/pending-removal-in-future.rst:139
msgid "``splitpasswd()``"
msgstr "``splitpasswd()``"

#: ../../deprecations/pending-removal-in-future.rst:140
msgid "``splitport()``"
msgstr "``splitport()``"

#: ../../deprecations/pending-removal-in-future.rst:141
msgid "``splitquery()``"
msgstr "``splitquery()``"

#: ../../deprecations/pending-removal-in-future.rst:142
msgid "``splittag()``"
msgstr "``splittag()``"

#: ../../deprecations/pending-removal-in-future.rst:143
msgid "``splittype()``"
msgstr "``splittype()``"

#: ../../deprecations/pending-removal-in-future.rst:144
msgid "``splituser()``"
msgstr "``splituser()``"

#: ../../deprecations/pending-removal-in-future.rst:145
msgid "``splitvalue()``"
msgstr "``splitvalue()``"

#: ../../deprecations/pending-removal-in-future.rst:146
msgid "``to_bytes()``"
msgstr "``to_bytes()``"

#: ../../deprecations/pending-removal-in-future.rst:148
msgid ""
":mod:`wsgiref`: ``SimpleHandler.stdout.write()`` should not do partial "
"writes."
msgstr ""
":mod:`wsgiref`: ``SimpleHandler.stdout.write()`` não deve fazer gravações "
"parciais."

#: ../../deprecations/pending-removal-in-future.rst:151
msgid ""
":mod:`xml.etree.ElementTree`: Testing the truth value of an :class:`~xml."
"etree.ElementTree.Element` is deprecated. In a future release it will always "
"return ``True``. Prefer explicit ``len(elem)`` or ``elem is not None`` tests "
"instead."
msgstr ""
":mod:`xml.etree.ElementTree`: testar o valor verdade de um :class:`~xml."
"etree.ElementTree.Element` está descontinuado. Em um lançamento futuro isso "
"sempre retornará ``True``. Em vez disso, prefira os testes explícitos "
"``len(elem)`` ou ``elem is not None``."

#: ../../deprecations/pending-removal-in-future.rst:156
msgid ""
":func:`sys._clear_type_cache` is deprecated: use :func:`sys."
"_clear_internal_caches` instead."
msgstr ""
":func:`sys._clear_type_cache` está descontinuada: use :func:`sys."
"_clear_internal_caches`."

#: ../../whatsnew/3.14.rst:2718
msgid "CPython bytecode changes"
msgstr "Alterações de bytecode do CPython"

#: ../../whatsnew/3.14.rst:2720
msgid ""
"Replaced the opcode :opcode:`!BINARY_SUBSCR` by the :opcode:`BINARY_OP` "
"opcode with the ``NB_SUBSCR`` oparg. (Contributed by Irit Katriel in :gh:"
"`100239`.)"
msgstr ""
"Substituído o opcode :opcode:`!BINARY_SUBSCR` pelo opcode :opcode:"
"`BINARY_OP` com o oparg ``NB_SUBSCR``. (Contribuição de Irit Katriel em :gh:"
"`100239`.)"

#: ../../whatsnew/3.14.rst:2724
msgid ""
"Add the :opcode:`BUILD_INTERPOLATION` and :opcode:`BUILD_TEMPLATE` opcodes "
"to construct new :class:`~string.templatelib.Interpolation` and :class:"
"`~string.templatelib.Template` instances, respectively. (Contributed by "
"Lysandros Nikolaou and others in :gh:`132661`; see also :ref:`PEP 750: "
"Template strings <whatsnew314-template-string-literals>`)."
msgstr ""

#: ../../whatsnew/3.14.rst:2730
msgid ""
"Remove the :opcode:`!BUILD_CONST_KEY_MAP` opcode. Use :opcode:`BUILD_MAP` "
"instead. (Contributed by Mark Shannon in :gh:`122160`.)"
msgstr ""
"Remove o opcode :opcode:`!BUILD_CONST_KEY_MAP`. Em vez disso, use :opcode:"
"`BUILD_MAP`. (Contribuição de Mark Shannon em :gh:`122160`.)"

#: ../../whatsnew/3.14.rst:2734
msgid ""
"Replace the :opcode:`!LOAD_ASSERTION_ERROR` opcode with :opcode:"
"`LOAD_COMMON_CONSTANT` and add support for loading :exc:"
"`NotImplementedError`."
msgstr ""
"Substitui o opcode :opcode:`!LOAD_ASSERTION_ERROR` por :opcode:"
"`LOAD_COMMON_CONSTANT` e adiciona suporte para carregar :exc:"
"`NotImplementedError`."

#: ../../whatsnew/3.14.rst:2738
msgid ""
"Add the :opcode:`LOAD_FAST_BORROW` and :opcode:"
"`LOAD_FAST_BORROW_LOAD_FAST_BORROW` opcodes to reduce reference counting "
"overhead when the interpreter can prove that the reference in the frame "
"outlives the reference loaded onto the stack. (Contributed by Matt Page in :"
"gh:`130704`.)"
msgstr ""
"Adiciona os opcodes :opcode:`LOAD_FAST_BORROW` e :opcode:"
"`LOAD_FAST_BORROW_LOAD_FAST_BORROW` para reduzir a sobrecarga de contagem de "
"referências quando o interpretador puder provar que a referência no quadro "
"sobrevive à referência carregada na pilha. (Contribuição de Matt Page em :gh:"
"`130704`.)"

#: ../../whatsnew/3.14.rst:2743
msgid ""
"Add the :opcode:`LOAD_SMALL_INT` opcode, which pushes a small integer equal "
"to the ``oparg`` to the stack. The :opcode:`!RETURN_CONST` opcode is removed "
"as it is no longer used. (Contributed by Mark Shannon in :gh:`125837`.)"
msgstr ""
"Adiciona o opcode :opcode:`LOAD_SMALL_INT`, que envia um inteiro pequeno "
"igual a ``oparg`` para a pilha. O opcode :opcode:`!RETURN_CONST` foi "
"removido, pois não é mais usado. (Contribuição de Mark Shannon em :gh:"
"`125837`.)"

#: ../../whatsnew/3.14.rst:2748
msgid ""
"Add the new :opcode:`LOAD_SPECIAL` instruction. Generate code for :keyword:"
"`with` and :keyword:`async with` statements using the new instruction. "
"Removed the :opcode:`!BEFORE_WITH` and :opcode:`!BEFORE_ASYNC_WITH` "
"instructions. (Contributed by Mark Shannon in :gh:`120507`.)"
msgstr ""
"Adiciona a nova instrução :opcode:`LOAD_SPECIAL`. Gere código para as "
"instruções :keyword:`with` e :keyword:`async with` usando a nova instrução. "
"Remove as instruções :opcode:`!BEFORE_WITH` e :opcode:`!BEFORE_ASYNC_WITH`. "
"(Contribuição de Mark Shannon em :gh:`120507`."

#: ../../whatsnew/3.14.rst:2754
msgid ""
"Add the :opcode:`POP_ITER` opcode to support 'virtual' iterators. "
"(Contributed by Mark Shannon in :gh:`132554`.)"
msgstr ""
"Adiciona o opcode :opcode:`POP_ITER` para oferecer suporte a iteradores "
"\"virtuais\". (Contribuição de Mark Shannon em :gh:`132554`.)"

#: ../../whatsnew/3.14.rst:2759
msgid "Pseudo-instructions"
msgstr "Pseudoinstruções"

#: ../../whatsnew/3.14.rst:2761
msgid ""
"Add the :opcode:`!ANNOTATIONS_PLACEHOLDER` pseudo instruction to support "
"partially executed module-level annotations with :ref:`deferred evaluation "
"of annotations <whatsnew314-deferred-annotations>`. (Contributed by Jelle "
"Zijlstra in :gh:`130907`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:2766
msgid ""
"Add the :opcode:`!BINARY_OP_EXTEND` pseudo instruction, which executes a "
"pair of functions (guard and specialization functions) accessed from the "
"inline cache. (Contributed by Irit Katriel in :gh:`100239`.)"
msgstr ""
"Adiciona a pseudoinstrução :opcode:`!BINARY_OP_EXTEND` que executa um par de "
"funções (funções de guarda e especialização) acessadas do cache inline. "
"(Contribuição de Irit Katriel em :gh:`100239`.)"

#: ../../whatsnew/3.14.rst:2771
msgid ""
"Add three specializations for :opcode:`CALL_KW`; :opcode:`!CALL_KW_PY` for "
"calls to Python functions, :opcode:`!CALL_KW_BOUND_METHOD` for calls to "
"bound methods, and :opcode:`!CALL_KW_NON_PY` for all other calls. "
"(Contributed by Mark Shannon in :gh:`118093`.)"
msgstr ""
"Adiciona três especializações para :opcode:`CALL_KW`; :opcode:`!CALL_KW_PY` "
"para chamadas de funções Python, :opcode:`!CALL_KW_BOUND_METHOD` para "
"chamadas de métodos vinculados e :opcode:`!CALL_KW_NON_PY` para todas as "
"outras chamadas. (Contribuição de Mark Shannon em :gh:`118093`.)"

#: ../../whatsnew/3.14.rst:2777
msgid ""
"Add the :opcode:`JUMP_IF_TRUE` and :opcode:`JUMP_IF_FALSE` pseudo "
"instructions, conditional jumps which do not impact the stack. Replaced by "
"the sequence ``COPY 1``, ``TO_BOOL``, ``POP_JUMP_IF_TRUE/FALSE``. "
"(Contributed by Irit Katriel in :gh:`124285`.)"
msgstr ""
"Adiciona as pseudoinstruções :opcode:`JUMP_IF_TRUE` e :opcode:"
"`JUMP_IF_FALSE`, saltos condicionais que não impactam a pilha. Substituídas "
"pela sequência ``COPY 1``, ``TO_BOOL``, ``POP_JUMP_IF_TRUE/FALSE``. "
"(Contribuição de Irit Katriel em :gh:`124285`.)"

#: ../../whatsnew/3.14.rst:2782
msgid ""
"Add the :opcode:`!LOAD_CONST_MORTAL` pseudo instruction. (Contributed by "
"Mark Shannon in :gh:`128685`.)"
msgstr ""
"Adiciona a pseudoinstrução :opcode:`!LOAD_CONST_MORTAL`. (Contribuição de "
"Mark Shannon em :gh:`128685`.)"

#: ../../whatsnew/3.14.rst:2785
msgid ""
"Add the :opcode:`LOAD_CONST_IMMORTAL` pseudo instruction, which does the "
"same as :opcode:`!LOAD_CONST`, but is more efficient for immortal objects. "
"(Contributed by Mark Shannon in :gh:`125837`.)"
msgstr ""
"Adiciona a pseudoinstrução :opcode:`LOAD_CONST_IMMORTAL`, que faz o mesmo "
"que :opcode:`!LOAD_CONST`, mas é mais eficiente para objetos imortais. "
"(Contribuição de Mark Shannon em :gh:`125837`.)"

#: ../../whatsnew/3.14.rst:2790
msgid ""
"Add the :opcode:`NOT_TAKEN` pseudo instruction, used by :mod:`sys."
"monitoring` to record branch events (such as :monitoring-event:"
"`BRANCH_LEFT`). (Contributed by Mark Shannon in :gh:`122548`.)"
msgstr ""
"Adiciona a pseudoinstrução :opcode:`NOT_TAKEN`, usada por :mod:`sys."
"monitoring` para registrar eventos de ramificação (como :monitoring-event:"
"`BRANCH_LEFT`). (Contribuição de Mark Shannon em :gh:`122548`.)"

#: ../../whatsnew/3.14.rst:2796
msgid "C API changes"
msgstr "Alterações na API C"

#: ../../whatsnew/3.14.rst:2801
msgid "Python configuration C API"
msgstr ""

#: ../../whatsnew/3.14.rst:2803
msgid ""
"Add a :ref:`PyInitConfig C API <pyinitconfig_api>` to configure the Python "
"initialization without relying on C structures and the ability to make ABI-"
"compatible changes in the future."
msgstr ""
"Adiciona uma :ref:`PyInitConfig API C <pyinitconfig_api>` para configurar a "
"inicialização do Python sem depender de estruturas C e a capacidade de fazer "
"alterações compatíveis com ABI no futuro."

#: ../../whatsnew/3.14.rst:2807
msgid ""
"Complete the :pep:`587` :ref:`PyConfig C API <pyconfig_api>` by adding :c:"
"func:`PyInitConfig_AddModule` which can be used to add a built-in extension "
"module; a feature previously referred to as the \"inittab\"."
msgstr ""

#: ../../whatsnew/3.14.rst:2811
msgid ""
"Add :c:func:`PyConfig_Get` and :c:func:`PyConfig_Set` functions to get and "
"set the current runtime configuration."
msgstr ""
"Adiciona as funções :c:func:`PyConfig_Get` e :c:func:`PyConfig_Set` para "
"obter e definir a configuração de tempo de execução atual."

#: ../../whatsnew/3.14.rst:2814
msgid ""
":pep:`587` 'Python Initialization Configuration' unified all the ways to "
"configure Python's initialization. This PEP also unifies the configuration "
"of Python's preinitialization and initialization in a single API. Moreover, "
"this PEP only provides a single choice to embed Python, instead of having "
"two 'Python' and 'Isolated' choices (PEP 587), to further simplify the API."
msgstr ""

#: ../../whatsnew/3.14.rst:2821
msgid ""
"The lower level PEP 587 PyConfig API remains available for use cases with an "
"intentionally higher level of coupling to CPython implementation details "
"(such as emulating the full functionality of CPython's CLI, including its "
"configuration mechanisms)."
msgstr ""

#: ../../whatsnew/3.14.rst:2826 ../../whatsnew/3.14.rst:2853
#: ../../whatsnew/3.14.rst:2873
msgid "(Contributed by Victor Stinner in :gh:`107954`.)"
msgstr "(Contribuição de Victor Stinner em :gh:`107954`.)"

#: ../../whatsnew/3.14.rst:2828
msgid ":pep:`741` and :pep:`587`"
msgstr ""

#: ../../whatsnew/3.14.rst:2832
msgid "New features in the C API"
msgstr "Novos recursos na API C"

#: ../../whatsnew/3.14.rst:2834
msgid ""
"Add :c:func:`Py_PACK_VERSION` and :c:func:`Py_PACK_FULL_VERSION`, two new "
"macros for bit-packing Python version numbers. This is useful for "
"comparisons with :c:var:`Py_Version` or :c:macro:`PY_VERSION_HEX`. "
"(Contributed by Petr Viktorin in :gh:`128629`.)"
msgstr ""
"Adiciona :c:func:`Py_PACK_VERSION` e :c:func:`Py_PACK_FULL_VERSION`, duas "
"novas macros para empacotamento de bits de números de versão do Python. Isso "
"é útil para comparações com :c:var:`Py_Version` ou :c:macro:"
"`PY_VERSION_HEX`. (Contribuição de Petr Viktorin em :gh:`128629`.)"

#: ../../whatsnew/3.14.rst:2840
msgid ""
"Add :c:func:`PyBytes_Join(sep, iterable) <PyBytes_Join>` function, similar "
"to ``sep.join(iterable)`` in Python. (Contributed by Victor Stinner in :gh:"
"`121645`.)"
msgstr ""
"Adiciona a função :c:func:`PyBytes_Join(sep, iterable) <PyBytes_Join>`, "
"semelhante a ``sep.join(iterable)`` em Python. (Contribuição de Victor "
"Stinner em :gh:`121645`.)"

#: ../../whatsnew/3.14.rst:2844
msgid ""
"Add functions to manipulate the configuration of the current runtime Python "
"interpreter (:ref:`PEP 741: Python configuration C API <whatsnew314-capi-"
"config>`):"
msgstr ""

#: ../../whatsnew/3.14.rst:2848
msgid ":c:func:`PyConfig_Get`"
msgstr ":c:func:`PyConfig_Get`"

#: ../../whatsnew/3.14.rst:2849
msgid ":c:func:`PyConfig_GetInt`"
msgstr ":c:func:`PyConfig_GetInt`"

#: ../../whatsnew/3.14.rst:2850
msgid ":c:func:`PyConfig_Set`"
msgstr ":c:func:`PyConfig_Set`"

#: ../../whatsnew/3.14.rst:2851
msgid ":c:func:`PyConfig_Names`"
msgstr ":c:func:`PyConfig_Names`"

#: ../../whatsnew/3.14.rst:2855
msgid ""
"Add functions to configure Python initialization (:ref:`PEP 741: Python "
"configuration C API <whatsnew314-capi-config>`):"
msgstr ""

#: ../../whatsnew/3.14.rst:2858
msgid ":c:func:`Py_InitializeFromInitConfig`"
msgstr ":c:func:`Py_InitializeFromInitConfig`"

#: ../../whatsnew/3.14.rst:2859
msgid ":c:func:`PyInitConfig_AddModule`"
msgstr ":c:func:`PyInitConfig_AddModule`"

#: ../../whatsnew/3.14.rst:2860
msgid ":c:func:`PyInitConfig_Create`"
msgstr ":c:func:`PyInitConfig_Create`"

#: ../../whatsnew/3.14.rst:2861
msgid ":c:func:`PyInitConfig_Free`"
msgstr ":c:func:`PyInitConfig_Free`"

#: ../../whatsnew/3.14.rst:2862
msgid ":c:func:`PyInitConfig_FreeStrList`"
msgstr ":c:func:`PyInitConfig_FreeStrList`"

#: ../../whatsnew/3.14.rst:2863
msgid ":c:func:`PyInitConfig_GetError`"
msgstr ":c:func:`PyInitConfig_GetError`"

#: ../../whatsnew/3.14.rst:2864
msgid ":c:func:`PyInitConfig_GetExitCode`"
msgstr ":c:func:`PyInitConfig_GetExitCode`"

#: ../../whatsnew/3.14.rst:2865
msgid ":c:func:`PyInitConfig_GetInt`"
msgstr ":c:func:`PyInitConfig_GetInt`"

#: ../../whatsnew/3.14.rst:2866
msgid ":c:func:`PyInitConfig_GetStr`"
msgstr ":c:func:`PyInitConfig_GetStr`"

#: ../../whatsnew/3.14.rst:2867
msgid ":c:func:`PyInitConfig_GetStrList`"
msgstr ":c:func:`PyInitConfig_GetStrList`"

#: ../../whatsnew/3.14.rst:2868
msgid ":c:func:`PyInitConfig_HasOption`"
msgstr ":c:func:`PyInitConfig_HasOption`"

#: ../../whatsnew/3.14.rst:2869
msgid ":c:func:`PyInitConfig_SetInt`"
msgstr ":c:func:`PyInitConfig_SetInt`"

#: ../../whatsnew/3.14.rst:2870
msgid ":c:func:`PyInitConfig_SetStr`"
msgstr ":c:func:`PyInitConfig_SetStr`"

#: ../../whatsnew/3.14.rst:2871
msgid ":c:func:`PyInitConfig_SetStrList`"
msgstr ":c:func:`PyInitConfig_SetStrList`"

#: ../../whatsnew/3.14.rst:2875
msgid ""
"Add :c:func:`Py_fopen` function to open a file. This works similarly to the "
"standard C :c:func:`!fopen` function, instead accepting a Python object for "
"the *path* parameter and setting an exception on error. The corresponding "
"new :c:func:`Py_fclose` function should be used to close a file. "
"(Contributed by Victor Stinner in :gh:`127350`.)"
msgstr ""
"Adiciona a função :c:func:`Py_fopen` para abrir um arquivo. Isso funciona de "
"forma semelhante à função padrão do C :c:func:`!fopen`, aceitando um objeto "
"Python como parâmetro *path* e definindo uma exceção em caso de erro. A nova "
"função correspondente :c:func:`Py_fclose` deve ser usada para fechar um "
"arquivo. (Contribuição de Victor Stinner em :gh:`127350`.)"

#: ../../whatsnew/3.14.rst:2883
msgid ""
"Add :c:func:`Py_HashBuffer` to compute and return the hash value of a "
"buffer. (Contributed by Antoine Pitrou and Victor Stinner in :gh:`122854`.)"
msgstr ""
"Adiciona :c:func:`Py_HashBuffer` para calcular e retornar o valor de hash de "
"um buffer. (Contribuição de Antoine Pitrou e Victor Stinner em :gh:`122854`.)"

#: ../../whatsnew/3.14.rst:2886
msgid ""
"Add :c:func:`PyImport_ImportModuleAttr` and :c:func:"
"`PyImport_ImportModuleAttrString` helper functions to import a module and "
"get an attribute of the module. (Contributed by Victor Stinner in :gh:"
"`128911`.)"
msgstr ""
"Adiciona as funções auxiliares :c:func:`PyImport_ImportModuleAttr` e :c:func:"
"`PyImport_ImportModuleAttrString` para importar um módulo e obter um "
"atributo do módulo. (Contribuição de Victor Stinner em :gh:`128911`.)"

#: ../../whatsnew/3.14.rst:2891
msgid ""
"Add :c:func:`PyIter_NextItem` to replace :c:func:`PyIter_Next`, which has an "
"ambiguous return value. (Contributed by Irit Katriel and Erlend Aasland in :"
"gh:`105201`.)"
msgstr ""
"Adiciona :c:func:`PyIter_NextItem` para substituir :c:func:`PyIter_Next`, "
"que tem um valor de retorno ambíguo. (Contribuição de Irit Katriel e Erlend "
"Aasland em :gh:`105201`.)"

#: ../../whatsnew/3.14.rst:2895
msgid ""
"Add :c:func:`PyLong_GetSign` function to get the sign of :class:`int` "
"objects. (Contributed by Sergey B Kirpichev in :gh:`116560`.)"
msgstr ""
"Adiciona a função :c:func:`PyLong_GetSign` para obter o sinal de objetos :"
"class:`int`. (Contribuição de Sergey B Kirpichev em :gh:`116560`.)"

#: ../../whatsnew/3.14.rst:2898
msgid ""
"Add :c:func:`PyLong_IsPositive`, :c:func:`PyLong_IsNegative` and :c:func:"
"`PyLong_IsZero` for checking if :c:type:`PyLongObject` is positive, "
"negative, or zero, respectively. (Contributed by James Roy and Sergey B "
"Kirpichev in :gh:`126061`.)"
msgstr ""
"Adiciona :c:func:`PyLong_IsPositive`, :c:func:`PyLong_IsNegative` e :c:func:"
"`PyLong_IsZero` para verificar se :c:type:`PyLongObject` é positivo, "
"negativo ou zero, respectivamente. (Contribuição de James Roy e Sergey B "
"Kirpichev em :gh:`126061`.)"

#: ../../whatsnew/3.14.rst:2903
msgid ""
"Add new functions to convert C ``<stdint.h>`` numbers to/from Python :class:"
"`int` objects:"
msgstr ""
"Adiciona novas funções para converter números C ``<stdint.h>`` para/de "
"objetos :class:`int` Python:"

#: ../../whatsnew/3.14.rst:2906
msgid ":c:func:`PyLong_AsInt32`"
msgstr ":c:func:`PyLong_AsInt32`"

#: ../../whatsnew/3.14.rst:2907
msgid ":c:func:`PyLong_AsInt64`"
msgstr ":c:func:`PyLong_AsInt64`"

#: ../../whatsnew/3.14.rst:2908
msgid ":c:func:`PyLong_AsUInt32`"
msgstr ":c:func:`PyLong_AsUInt32`"

#: ../../whatsnew/3.14.rst:2909
msgid ":c:func:`PyLong_AsUInt64`"
msgstr ":c:func:`PyLong_AsUInt64`"

#: ../../whatsnew/3.14.rst:2910
msgid ":c:func:`PyLong_FromInt32`"
msgstr ":c:func:`PyLong_FromInt32`"

#: ../../whatsnew/3.14.rst:2911
msgid ":c:func:`PyLong_FromInt64`"
msgstr ":c:func:`PyLong_FromInt64`"

#: ../../whatsnew/3.14.rst:2912
msgid ":c:func:`PyLong_FromUInt32`"
msgstr ":c:func:`PyLong_FromUInt32`"

#: ../../whatsnew/3.14.rst:2913
msgid ":c:func:`PyLong_FromUInt64`"
msgstr ":c:func:`PyLong_FromUInt64`"

#: ../../whatsnew/3.14.rst:2915
msgid "(Contributed by Victor Stinner in :gh:`120389`.)"
msgstr "(Contribuição de Victor Stinner em :gh:`120389`.)"

#: ../../whatsnew/3.14.rst:2917
msgid ""
"Add a new import and export API for Python :class:`int` objects (:pep:`757`):"
msgstr ""
"Adiciona uma nova API de importação e exportação para objetos Python :class:"
"`int` (:pep:`757`):"

#: ../../whatsnew/3.14.rst:2920
msgid ":c:func:`PyLong_GetNativeLayout`"
msgstr ":c:func:`PyLong_GetNativeLayout`"

#: ../../whatsnew/3.14.rst:2921
msgid ":c:func:`PyLong_Export`"
msgstr ":c:func:`PyLong_Export`"

#: ../../whatsnew/3.14.rst:2922
msgid ":c:func:`PyLong_FreeExport`"
msgstr ":c:func:`PyLong_FreeExport`"

#: ../../whatsnew/3.14.rst:2923
msgid ":c:func:`PyLongWriter_Create`"
msgstr ":c:func:`PyLongWriter_Create`"

#: ../../whatsnew/3.14.rst:2924
msgid ":c:func:`PyLongWriter_Finish`"
msgstr ":c:func:`PyLongWriter_Finish`"

#: ../../whatsnew/3.14.rst:2925
msgid ":c:func:`PyLongWriter_Discard`"
msgstr ":c:func:`PyLongWriter_Discard`"

#: ../../whatsnew/3.14.rst:2927
msgid "(Contributed by Sergey B Kirpichev and Victor Stinner in :gh:`102471`.)"
msgstr "(Contribuição de Sergey B Kirpichev e Victor Stinner em :gh:`102471`.)"

#: ../../whatsnew/3.14.rst:2929
msgid ""
"Add :c:func:`PyMonitoring_FireBranchLeftEvent` and :c:func:"
"`PyMonitoring_FireBranchRightEvent` for generating :monitoring-event:"
"`BRANCH_LEFT` and :monitoring-event:`BRANCH_RIGHT` events, respectively. "
"(Contributed by Mark Shannon in :gh:`122548`.)"
msgstr ""
"Adiciona :c:func:`PyMonitoring_FireBranchLeftEvent` e :c:func:"
"`PyMonitoring_FireBranchRightEvent` para gerar eventos :monitoring-event:"
"`BRANCH_LEFT` e :monitoring-event:`BRANCH_RIGHT`, respectivamente. "
"(Contribuição de Mark Shannon em :gh:`122548`.)"

#: ../../whatsnew/3.14.rst:2935
msgid ""
"Add :c:func:`PyType_Freeze` function to make a type immutable. (Contributed "
"by Victor Stinner in :gh:`121654`.)"
msgstr ""
"Adiciona a função :c:func:`PyType_Freeze` para tornar um tipo imutável. "
"(Contribuição de Victor Stinner em :gh:`121654`.)"

#: ../../whatsnew/3.14.rst:2938
msgid ""
"Add :c:func:`PyType_GetBaseByToken` and :c:data:`Py_tp_token` slot for "
"easier superclass identification, which attempts to resolve the type "
"checking issue mentioned in :pep:`PEP 630 <630#type-checking>`. (Contributed "
"in :gh:`124153`.)"
msgstr ""
"Adiciona :c:func:`PyType_GetBaseByToken` e o slot :c:data:`Py_tp_token` para "
"facilitar a identificação da superclasse, o que tenta resolver o problema de "
"verificação de tipos mencionado na :pep:`PEP 630 <630#type-checking>`. "
"(Contribuição em :gh:`124153`.)"

#: ../../whatsnew/3.14.rst:2943
msgid ""
"Add a new :c:func:`PyUnicode_Equal` function to test if two strings are "
"equal. The function is also added to the Limited C API. (Contributed by "
"Victor Stinner in :gh:`124502`.)"
msgstr ""
"Adiciona a nova função :c:func:`PyUnicode_Equal` para testar se duas strings "
"são iguais. A função também foi adicionada à API C Limitada. (Contribuição "
"de Victor Stinner em :gh:`124502`.)"

#: ../../whatsnew/3.14.rst:2948
msgid ""
"Add a new :c:type:`PyUnicodeWriter` API to create a Python :class:`str` "
"object, with the following functions:"
msgstr ""
"Adiciona uma nova API :c:type:`PyUnicodeWriter` para criar um objeto Python :"
"class:`str` com as seguintes funções:"

#: ../../whatsnew/3.14.rst:2951
msgid ":c:func:`PyUnicodeWriter_Create`"
msgstr ":c:func:`PyUnicodeWriter_Create`"

#: ../../whatsnew/3.14.rst:2952
msgid ":c:func:`PyUnicodeWriter_DecodeUTF8Stateful`"
msgstr ":c:func:`PyUnicodeWriter_DecodeUTF8Stateful`"

#: ../../whatsnew/3.14.rst:2953
msgid ":c:func:`PyUnicodeWriter_Discard`"
msgstr ":c:func:`PyUnicodeWriter_Discard`"

#: ../../whatsnew/3.14.rst:2954
msgid ":c:func:`PyUnicodeWriter_Finish`"
msgstr ":c:func:`PyUnicodeWriter_Finish`"

#: ../../whatsnew/3.14.rst:2955
msgid ":c:func:`PyUnicodeWriter_Format`"
msgstr ":c:func:`PyUnicodeWriter_Format`"

#: ../../whatsnew/3.14.rst:2956
msgid ":c:func:`PyUnicodeWriter_WriteASCII`"
msgstr ":c:func:`PyUnicodeWriter_WriteASCII`"

#: ../../whatsnew/3.14.rst:2957
msgid ":c:func:`PyUnicodeWriter_WriteChar`"
msgstr ":c:func:`PyUnicodeWriter_WriteChar`"

#: ../../whatsnew/3.14.rst:2958
msgid ":c:func:`PyUnicodeWriter_WriteRepr`"
msgstr ":c:func:`PyUnicodeWriter_WriteRepr`"

#: ../../whatsnew/3.14.rst:2959
msgid ":c:func:`PyUnicodeWriter_WriteStr`"
msgstr ":c:func:`PyUnicodeWriter_WriteStr`"

#: ../../whatsnew/3.14.rst:2960
msgid ":c:func:`PyUnicodeWriter_WriteSubstring`"
msgstr ":c:func:`PyUnicodeWriter_WriteSubstring`"

#: ../../whatsnew/3.14.rst:2961
msgid ":c:func:`PyUnicodeWriter_WriteUCS4`"
msgstr ":c:func:`PyUnicodeWriter_WriteUCS4`"

#: ../../whatsnew/3.14.rst:2962
msgid ":c:func:`PyUnicodeWriter_WriteUTF8`"
msgstr ":c:func:`PyUnicodeWriter_WriteUTF8`"

#: ../../whatsnew/3.14.rst:2963
msgid ":c:func:`PyUnicodeWriter_WriteWideChar`"
msgstr ":c:func:`PyUnicodeWriter_WriteWideChar`"

#: ../../whatsnew/3.14.rst:2965
msgid "(Contributed by Victor Stinner in :gh:`119182`.)"
msgstr "(Contribuição de Victor Stinner em :gh:`119182`.)"

#: ../../whatsnew/3.14.rst:2967
msgid ""
"The ``k`` and ``K`` formats in :c:func:`PyArg_ParseTuple` and similar "
"functions now use :meth:`~object.__index__` if available, like all other "
"integer formats. (Contributed by Serhiy Storchaka in :gh:`112068`.)"
msgstr ""
"Os formatos ``k`` e ``K`` em :c:func:`PyArg_ParseTuple` e funções similares "
"agora usam :meth:`~object.__index__` se disponível, assim como todos os "
"outros formatos inteiros. (Contribuição de Serhiy Storchaka em :gh:`112068`.)"

#: ../../whatsnew/3.14.rst:2972
msgid ""
"Add support for a new ``p`` format unit in :c:func:`Py_BuildValue` that "
"produces a Python :class:`bool` object from a C integer. (Contributed by "
"Pablo Galindo in :issue:`45325`.)"
msgstr ""
"Adiciona suporte para uma nova unidade de formato ``p`` em :c:func:"
"`Py_BuildValue` que produz um objeto :class:`bool` Python de um inteiro C. "
"(Contribuição de Pablo Galindo em :issue:`45325`.)"

#: ../../whatsnew/3.14.rst:2976
msgid ""
"Add :c:func:`PyUnstable_IsImmortal` for determining if an object is :term:"
"`immortal`, for debugging purposes. (Contributed by Peter Bierma in :gh:"
"`128509`.)"
msgstr ""
"Adiciona :c:func:`PyUnstable_IsImmortal` para determinar se um objeto é :"
"term:`imortal`, para fins de depuração. (Contribuição de Peter Bierma em :gh:"
"`128509`.)"

#: ../../whatsnew/3.14.rst:2980
msgid ""
"Add :c:func:`PyUnstable_Object_EnableDeferredRefcount` for enabling deferred "
"reference counting, as outlined in :pep:`703`."
msgstr ""
"Adiciona :c:func:`PyUnstable_Object_EnableDeferredRefcount` para habilitar a "
"contagem de referências adiada, conforme descrito em :pep:`703`."

#: ../../whatsnew/3.14.rst:2983
msgid ""
"Add :c:func:`PyUnstable_Object_IsUniquelyReferenced` as a replacement for "
"``Py_REFCNT(op) == 1`` on :term:`free threaded <free threading>` builds. "
"(Contributed by Peter Bierma in :gh:`133140`.)"
msgstr ""
"Adiciona :c:func:`PyUnstable_Object_IsUniquelyReferenced` como substituto "
"para ``Py_REFCNT(op) == 1`` em construções com :term:`threads livres <free "
"threading>`. (Contribuição de Peter Bierma em :gh:`133140`.)"

#: ../../whatsnew/3.14.rst:2988
msgid ""
"Add :c:func:`PyUnstable_Object_IsUniqueReferencedTemporary` to determine if "
"an object is a unique temporary object on the interpreter's operand stack. "
"This can be used in some cases as a replacement for checking if :c:func:"
"`Py_REFCNT` is ``1`` for Python objects passed as arguments to C API "
"functions. (Contributed by Sam Gross in :gh:`133164`.)"
msgstr ""
"Adiciona :c:func:`PyUnstable_Object_IsUniqueReferencedTemporary` para "
"determinar se um objeto é um objeto temporário exclusivo na pilha de "
"operandos do interpretador. Isso pode ser usado em alguns casos como um "
"substituto para verificar se :c:func:`Py_REFCNT` é ``1`` para objetos Python "
"passados como argumentos para funções da API C. (Contribuição de Sam Gross "
"em :gh:`133164`.)"

#: ../../whatsnew/3.14.rst:2998
msgid "Limited C API changes"
msgstr "Mudanças na API C limitada"

#: ../../whatsnew/3.14.rst:3000
msgid ""
"In the limited C API version 3.14 and newer, :c:func:`Py_TYPE` and :c:func:"
"`Py_REFCNT` are now implemented as an opaque function call to hide "
"implementation details. (Contributed by Victor Stinner in :gh:`120600` and :"
"gh:`124127`.)"
msgstr ""
"Na API C limitada versão 3.14 e versões mais novas, :c:func:`Py_TYPE` e :c:"
"func:`Py_REFCNT` agora são implementadas como uma chamada de função opaca "
"para ocultar detalhes de implementação. (Contribuição de Victor Stinner em :"
"gh:`120600` e :gh:`124127`.)"

#: ../../whatsnew/3.14.rst:3005
msgid ""
"Remove the :c:macro:`PySequence_Fast_GET_SIZE`, :c:macro:"
"`PySequence_Fast_GET_ITEM`, and :c:macro:`PySequence_Fast_ITEMS` macros from "
"the limited C API, since they have always been broken in the limited C API. "
"(Contributed by Victor Stinner in :gh:`91417`.)"
msgstr ""
"Remove as macros :c:macro:`PySequence_Fast_GET_SIZE`, :c:macro:"
"`PySequence_Fast_GET_ITEM` e :c:macro:`PySequence_Fast_ITEMS` da API C "
"limitada, já que elas estiveram quebradas na API C limitada. (Contribuição "
"de Victor Stinner em :gh:`91417`.)"

#: ../../whatsnew/3.14.rst:3016
msgid "Removed C APIs"
msgstr "APIs C removidas"

#: ../../whatsnew/3.14.rst:3018
msgid ""
"Creating :c:data:`immutable types <Py_TPFLAGS_IMMUTABLETYPE>` with mutable "
"bases was deprecated in Python 3.12, and now raises a :exc:`TypeError`. "
"(Contributed by Nikita Sobolev in :gh:`119775`.)"
msgstr ""
"A criação de :c:data:`tipos imutáveis <Py_TPFLAGS_IMMUTABLETYPE>` com bases "
"mutáveis foi descontinuada no Python 3.12, e agora levanta :exc:`TypeError`. "
"(Contribuição de Nikita Sobolev em :gh:`119775`.)"

#: ../../whatsnew/3.14.rst:3023
msgid ""
"Remove ``PyDictObject.ma_version_tag`` member, which was deprecated in "
"Python 3.12. Use the :c:func:`PyDict_AddWatcher` API instead. (Contributed "
"by Sam Gross in :gh:`124296`.)"
msgstr ""
"Remove o membro ``PyDictObject.ma_version_tag``, que foi descontinuado no "
"Python 3.12. Em vez disso, use a API :c:func:`PyDict_AddWatcher`. "
"(Contribuição de Sam Gross em :gh:`124296`.)"

#: ../../whatsnew/3.14.rst:3028
msgid ""
"Remove the private ``_Py_InitializeMain()`` function. It was a :term:"
"`provisional API` added to Python 3.8 by :pep:`587`. (Contributed by Victor "
"Stinner in :gh:`129033`.)"
msgstr ""
"Remova a função privada ``_Py_InitializeMain()``. Era uma :term:`API "
"provisória` adicionada ao Python 3.8 pela :pep:`587`. (Contribuição de "
"Victor Stinner em :gh:`129033`.)"

#: ../../whatsnew/3.14.rst:3032
msgid ""
"Remove the undocumented APIs :c:macro:`!Py_C_RECURSION_LIMIT` and :c:member:"
"`!PyThreadState.c_recursion_remaining`. These were added in 3.13 and have "
"been removed without deprecation. Use :c:func:`Py_EnterRecursiveCall` to "
"guard against runaway recursion in C code. (Removed by Petr Viktorin in :gh:"
"`133079`, see also :gh:`130396`.)"
msgstr ""
"Remove as APIs não documentadas :c:macro:`!Py_C_RECURSION_LIMIT` e :c:member:"
"`!PyThreadState.c_recursion_remaining`. Elas foram adicionadas no 3.13 e "
"foram removidas sem descontinuação. Use :c:func:`Py_EnterRecursiveCall` para "
"se proteger contra recursão descontrolada em código C. (Remoção por Petr "
"Viktorin em :gh:`133079`, veja também :gh:`130396`.)"

#: ../../whatsnew/3.14.rst:3043
msgid "Deprecated C APIs"
msgstr "APIs C descontinuadas"

#: ../../whatsnew/3.14.rst:3045
msgid ""
"The :c:macro:`!Py_HUGE_VAL` macro is now :term:`soft deprecated`. Use :c:"
"macro:`!Py_INFINITY` instead. (Contributed by Sergey B Kirpichev in :gh:"
"`120026`.)"
msgstr ""
"A macro :c:macro:`!Py_HUGE_VAL` está agora :term:`suavemente descontinuada "
"<suavemente descontinuado>`. Em vez disso, use :c:macro:`!Py_INFINITY`. "
"(Contribuição de Sergey B Kirpichev em :gh:`120026`.)"

#: ../../whatsnew/3.14.rst:3049
msgid ""
"The :c:macro:`!Py_IS_NAN`, :c:macro:`!Py_IS_INFINITY`, and :c:macro:`!"
"Py_IS_FINITE` macros are now :term:`soft deprecated`. Use :c:macro:`!"
"isnan`, :c:macro:`!isinf` and :c:macro:`!isfinite` instead, available from :"
"file:`math.h` since C99. (Contributed by Sergey B Kirpichev in :gh:`119613`.)"
msgstr ""
"As macros :c:macro:`!Py_IS_NAN`, :c:macro:`!Py_IS_INFINITY` e :c:macro:`!"
"Py_IS_FINITE` estão agora :term:`suavemente descontinuadas <suavemente "
"descontinuado>`. Em vez delas, use :c:macro:`!isnan`, :c:macro:`!isinf` e :c:"
"macro:`!isfinite`, disponíveis em :file:`math.h` desde C99. (Contribuição de "
"Sergey B Kirpichev em :gh:`119613`.)"

#: ../../whatsnew/3.14.rst:3055
msgid ""
"Non-tuple sequences are now deprecated as argument for the ``(items)`` "
"format unit in :c:func:`PyArg_ParseTuple` and other :ref:`argument parsing "
"<arg-parsing>` functions if *items* contains format units which store a :ref:"
"`borrowed buffer <c-arg-borrowed-buffer>` or a :term:`borrowed reference`. "
"(Contributed by Serhiy Storchaka in :gh:`50333`.)"
msgstr ""
"Sequências não-tuplas estão agora descontinuadas como argumento para a "
"unidade de formato ``(items)`` em :c:func:`PyArg_ParseTuple` e outras "
"funções de :ref:`análise de argumentos <arg-parsing>` se *items* contiver "
"unidades de formato que armazenam um :ref:`buffer emprestado <c-arg-borrowed-"
"buffer>` ou uma :term:`referência emprestada`. (Contribuição de Serhiy "
"Storchaka em :gh:`50333`.)"

#: ../../whatsnew/3.14.rst:3062
msgid ""
"The ``_PyMonitoring_FireBranchEvent`` function is now deprecated and should "
"be replaced with calls to :c:func:`PyMonitoring_FireBranchLeftEvent` and :c:"
"func:`PyMonitoring_FireBranchRightEvent`."
msgstr ""
"A função ``_PyMonitoring_FireBranchEvent`` está agora descontinuada e deve "
"ser substituída por chamadas para :c:func:`PyMonitoring_FireBranchLeftEvent` "
"e :c:func:`PyMonitoring_FireBranchRightEvent`."

#: ../../whatsnew/3.14.rst:3067
msgid ""
"The previously undocumented function :c:func:`PySequence_In` is now :term:"
"`soft deprecated`. Use :c:func:`PySequence_Contains` instead. (Contributed "
"by Yuki Kobayashi in :gh:`127896`.)"
msgstr ""
"A função :c:func:`PySequence_In`, anteriormente não documentada, está agora :"
"term:`suavemente descontinuado`. Em vez disso, use :c:func:"
"`PySequence_Contains`. (Contribuição de Yuki Kobayashi em :gh:`127896`.)"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:4
msgid ""
"The :c:func:`PyImport_ImportModuleNoBlock`: Use :c:func:"
"`PyImport_ImportModule` instead."
msgstr ""
"The :c:func:`PyImport_ImportModuleNoBlock`: use :c:func:"
"`PyImport_ImportModule`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:6
msgid ""
":c:func:`PyWeakref_GetObject` and :c:func:`PyWeakref_GET_OBJECT`: Use :c:"
"func:`PyWeakref_GetRef` instead. The `pythoncapi-compat project <https://"
"github.com/python/pythoncapi-compat/>`__ can be used to get :c:func:"
"`PyWeakref_GetRef` on Python 3.12 and older."
msgstr ""
":c:func:`PyWeakref_GetObject` e :c:func:`PyWeakref_GET_OBJECT`: Use :c:func:"
"`PyWeakref_GetRef`. O `projeto pythoncapi-compat <https://github.com/python/"
"pythoncapi-compat/>`__ pode ser usado para usar :c:func:`PyWeakref_GetRef` "
"no Python 3.12 e versões anteriores."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:10
msgid ""
":c:type:`Py_UNICODE` type and the :c:macro:`!Py_UNICODE_WIDE` macro: Use :c:"
"type:`wchar_t` instead."
msgstr ""
"O tipo :c:type:`Py_UNICODE` e a macro :c:macro:`!Py_UNICODE_WIDE`: use :c:"
"type:`wchar_t`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:12
msgid ""
":c:func:`!PyUnicode_AsDecodedObject`: Use :c:func:`PyCodec_Decode` instead."
msgstr ":c:func:`!PyUnicode_AsDecodedObject`: use :c:func:`PyCodec_Decode`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:14
msgid ""
":c:func:`!PyUnicode_AsDecodedUnicode`: Use :c:func:`PyCodec_Decode` instead; "
"Note that some codecs (for example, \"base64\") may return a type other "
"than :class:`str`, such as :class:`bytes`."
msgstr ""
":c:func:`!PyUnicode_AsDecodedUnicode`: Use :c:func:`PyCodec_Decode`; Note "
"que alguns codecs (por exemplo, \"base64\") podem retornar um tipo diferente "
"de :class:`str`, tal como :class:`bytes`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:17
msgid ""
":c:func:`!PyUnicode_AsEncodedObject`: Use :c:func:`PyCodec_Encode` instead."
msgstr ":c:func:`!PyUnicode_AsEncodedObject`: use :c:func:`PyCodec_Encode`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:19
msgid ""
":c:func:`!PyUnicode_AsEncodedUnicode`: Use :c:func:`PyCodec_Encode` instead; "
"Note that some codecs (for example, \"base64\") may return a type other "
"than :class:`bytes`, such as :class:`str`."
msgstr ""
":c:func:`!PyUnicode_AsEncodedUnicode`: Use :c:func:`PyCodec_Encode`; Note "
"que alguns codecs (por exemplo, \"base64\") podem retornar um tipo diferente "
"de :class:`bytes`, tal com :class:`str`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:22
msgid "Python initialization functions, deprecated in Python 3.13:"
msgstr "Funções de inicialização do Python, descontinuadas no Python 3.9:"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:24
msgid ""
":c:func:`Py_GetPath`: Use :c:func:`PyConfig_Get(\"module_search_paths\") "
"<PyConfig_Get>` (:data:`sys.path`) instead."
msgstr ""
":c:func:`Py_GetPath`: Use :c:func:`PyConfig_Get(\"module_search_paths\") "
"<PyConfig_Get>` (:data:`sys.path`)."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:27
msgid ""
":c:func:`Py_GetPrefix`: Use :c:func:`PyConfig_Get(\"base_prefix\") "
"<PyConfig_Get>` (:data:`sys.base_prefix`) instead. Use :c:func:"
"`PyConfig_Get(\"prefix\") <PyConfig_Get>` (:data:`sys.prefix`) if :ref:"
"`virtual environments <venv-def>` need to be handled."
msgstr ""
":c:func:`Py_GetPrefix`: Use :c:func:`PyConfig_Get(\"base_prefix\") "
"<PyConfig_Get>` (:data:`sys.base_prefix`). Use :c:func:"
"`PyConfig_Get(\"prefix\") <PyConfig_Get>` (:data:`sys.prefix`) se :ref:"
"`ambientes virtuais <venv-def>` precisam ser tratados."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:32
msgid ""
":c:func:`Py_GetExecPrefix`: Use :c:func:`PyConfig_Get(\"base_exec_prefix\") "
"<PyConfig_Get>` (:data:`sys.base_exec_prefix`) instead. Use :c:func:"
"`PyConfig_Get(\"exec_prefix\") <PyConfig_Get>` (:data:`sys.exec_prefix`) if :"
"ref:`virtual environments <venv-def>` need to be handled."
msgstr ""
":c:func:`Py_GetExecPrefix`: Use :c:func:`PyConfig_Get(\"base_exec_prefix\") "
"<PyConfig_Get>` (:data:`sys.base_exec_prefix`). Use :c:func:"
"`PyConfig_Get(\"exec_prefix\") <PyConfig_Get>` (:data:`sys.exec_prefix`) se :"
"ref:`ambientes virtuais <venv-def>` precisam ser tratados."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:38
msgid ""
":c:func:`Py_GetProgramFullPath`: Use :c:func:`PyConfig_Get(\"executable\") "
"<PyConfig_Get>` (:data:`sys.executable`) instead."
msgstr ""
":c:func:`Py_GetProgramFullPath`: Use :c:func:`PyConfig_Get(\"executable\") "
"<PyConfig_Get>` (:data:`sys.executable`)."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:41
msgid ""
":c:func:`Py_GetProgramName`: Use :c:func:`PyConfig_Get(\"executable\") "
"<PyConfig_Get>` (:data:`sys.executable`) instead."
msgstr ""
":c:func:`Py_GetProgramName`: Use :c:func:`PyConfig_Get(\"executable\") "
"<PyConfig_Get>` (:data:`sys.executable`)."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:44
msgid ""
":c:func:`Py_GetPythonHome`: Use :c:func:`PyConfig_Get(\"home\") "
"<PyConfig_Get>` or the :envvar:`PYTHONHOME` environment variable instead."
msgstr ""
":c:func:`Py_GetPythonHome`: Use :c:func:`PyConfig_Get(\"home\") "
"<PyConfig_Get>` ou a variável de ambiente :envvar:`PYTHONHOME`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:48
msgid ""
"The `pythoncapi-compat project <https://github.com/python/pythoncapi-compat/"
">`__ can be used to get :c:func:`PyConfig_Get` on Python 3.13 and older."
msgstr ""
"O projeto `pythoncapi-compat <https://github.com/python/pythoncapi-compat/"
">`__ pode ser usado para obter :c:func:`PyConfig_Get` no Python 3.13 e "
"versões anteriores."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:52
msgid ""
"Functions to configure Python's initialization, deprecated in Python 3.11:"
msgstr ""
"Funções para configurar a inicialização do Python, descontinuadas no Python "
"3.11:"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:54
msgid ":c:func:`!PySys_SetArgvEx()`: Set :c:member:`PyConfig.argv` instead."
msgstr ":c:func:`!PySys_SetArgvEx()`: defina :c:member:`PyConfig.argv`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:56
msgid ":c:func:`!PySys_SetArgv()`: Set :c:member:`PyConfig.argv` instead."
msgstr ":c:func:`!PySys_SetArgv()`: defina :c:member:`PyConfig.argv`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:58
msgid ""
":c:func:`!Py_SetProgramName()`: Set :c:member:`PyConfig.program_name` "
"instead."
msgstr ""
":c:func:`!Py_SetProgramName()`: defina :c:member:`PyConfig.program_name`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:60
msgid ":c:func:`!Py_SetPythonHome()`: Set :c:member:`PyConfig.home` instead."
msgstr ":c:func:`!Py_SetPythonHome()`: defina :c:member:`PyConfig.home`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:62
msgid ""
":c:func:`PySys_ResetWarnOptions`: Clear :data:`sys.warnoptions` and :data:`!"
"warnings.filters` instead."
msgstr ""
":c:func:`PySys_ResetWarnOptions`: apague :data:`sys.warnoptions` e :data:`!"
"warnings.filters`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:65
msgid ""
"The :c:func:`Py_InitializeFromConfig` API should be used with :c:type:"
"`PyConfig` instead."
msgstr ""
"Em vez disso, a API :c:func:`Py_InitializeFromConfig` deve ser usada com :c:"
"type:`PyConfig`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:68
msgid "Global configuration variables:"
msgstr "Variáveis de configuração globais"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:70
msgid ""
":c:var:`Py_DebugFlag`: Use :c:member:`PyConfig.parser_debug` or :c:func:"
"`PyConfig_Get(\"parser_debug\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_DebugFlag`: Use :c:member:`PyConfig.parser_debug` ou :c:func:"
"`PyConfig_Get(\"parser_debug\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:73
msgid ""
":c:var:`Py_VerboseFlag`: Use :c:member:`PyConfig.verbose` or :c:func:"
"`PyConfig_Get(\"verbose\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_VerboseFlag`: Use :c:member:`PyConfig.verbose` ou :c:func:"
"`PyConfig_Get(\"verbose\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:76
msgid ""
":c:var:`Py_QuietFlag`: Use :c:member:`PyConfig.quiet` or :c:func:"
"`PyConfig_Get(\"quiet\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_QuietFlag`: Use :c:member:`PyConfig.quiet` ou :c:func:"
"`PyConfig_Get(\"quiet\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:79
msgid ""
":c:var:`Py_InteractiveFlag`: Use :c:member:`PyConfig.interactive` or :c:func:"
"`PyConfig_Get(\"interactive\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_InteractiveFlag`: Use :c:member:`PyConfig.interactive` ou :c:func:"
"`PyConfig_Get(\"interactive\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:82
msgid ""
":c:var:`Py_InspectFlag`: Use :c:member:`PyConfig.inspect` or :c:func:"
"`PyConfig_Get(\"inspect\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_InspectFlag`: Use :c:member:`PyConfig.inspect` ou :c:func:"
"`PyConfig_Get(\"inspect\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:85
msgid ""
":c:var:`Py_OptimizeFlag`: Use :c:member:`PyConfig.optimization_level` or :c:"
"func:`PyConfig_Get(\"optimization_level\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_OptimizeFlag`: Use :c:member:`PyConfig.optimization_level` ou :c:"
"func:`PyConfig_Get(\"optimization_level\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:88
msgid ""
":c:var:`Py_NoSiteFlag`: Use :c:member:`PyConfig.site_import` or :c:func:"
"`PyConfig_Get(\"site_import\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_NoSiteFlag`: Use :c:member:`PyConfig.site_import` ou :c:func:"
"`PyConfig_Get(\"site_import\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:91
msgid ""
":c:var:`Py_BytesWarningFlag`: Use :c:member:`PyConfig.bytes_warning` or :c:"
"func:`PyConfig_Get(\"bytes_warning\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_BytesWarningFlag`: Use :c:member:`PyConfig.bytes_warning` ou :c:"
"func:`PyConfig_Get(\"bytes_warning\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:94
msgid ""
":c:var:`Py_FrozenFlag`: Use :c:member:`PyConfig.pathconfig_warnings` or :c:"
"func:`PyConfig_Get(\"pathconfig_warnings\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_FrozenFlag`: Use :c:member:`PyConfig.pathconfig_warnings` ou :c:"
"func:`PyConfig_Get(\"pathconfig_warnings\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:97
msgid ""
":c:var:`Py_IgnoreEnvironmentFlag`: Use :c:member:`PyConfig.use_environment` "
"or :c:func:`PyConfig_Get(\"use_environment\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_IgnoreEnvironmentFlag`: Use :c:member:`PyConfig.use_environment` "
"ou :c:func:`PyConfig_Get(\"use_environment\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:100
msgid ""
":c:var:`Py_DontWriteBytecodeFlag`: Use :c:member:`PyConfig.write_bytecode` "
"or :c:func:`PyConfig_Get(\"write_bytecode\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_DontWriteBytecodeFlag`: Use :c:member:`PyConfig.write_bytecode` "
"ou :c:func:`PyConfig_Get(\"write_bytecode\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:103
msgid ""
":c:var:`Py_NoUserSiteDirectory`: Use :c:member:`PyConfig."
"user_site_directory` or :c:func:`PyConfig_Get(\"user_site_directory\") "
"<PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_NoUserSiteDirectory`: Use :c:member:`PyConfig."
"user_site_directory` ou :c:func:`PyConfig_Get(\"user_site_directory\") "
"<PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:106
msgid ""
":c:var:`Py_UnbufferedStdioFlag`: Use :c:member:`PyConfig.buffered_stdio` or :"
"c:func:`PyConfig_Get(\"buffered_stdio\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_UnbufferedStdioFlag`: Use :c:member:`PyConfig.buffered_stdio` ou :"
"c:func:`PyConfig_Get(\"buffered_stdio\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:109
msgid ""
":c:var:`Py_HashRandomizationFlag`: Use :c:member:`PyConfig.use_hash_seed` "
"and :c:member:`PyConfig.hash_seed` or :c:func:`PyConfig_Get(\"hash_seed\") "
"<PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_HashRandomizationFlag`: Use :c:member:`PyConfig.use_hash_seed` e :"
"c:member:`PyConfig.hash_seed` ou :c:func:`PyConfig_Get(\"hash_seed\") "
"<PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:113
msgid ""
":c:var:`Py_IsolatedFlag`: Use :c:member:`PyConfig.isolated` or :c:func:"
"`PyConfig_Get(\"isolated\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_IsolatedFlag`: Use :c:member:`PyConfig.isolated` ou :c:func:"
"`PyConfig_Get(\"isolated\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:116
msgid ""
":c:var:`Py_LegacyWindowsFSEncodingFlag`: Use :c:member:`PyPreConfig."
"legacy_windows_fs_encoding` or :c:func:"
"`PyConfig_Get(\"legacy_windows_fs_encoding\") <PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_LegacyWindowsFSEncodingFlag`: Use :c:member:`PyPreConfig."
"legacy_windows_fs_encoding` ou :c:func:"
"`PyConfig_Get(\"legacy_windows_fs_encoding\") <PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:119
msgid ""
":c:var:`Py_LegacyWindowsStdioFlag`: Use :c:member:`PyConfig."
"legacy_windows_stdio` or :c:func:`PyConfig_Get(\"legacy_windows_stdio\") "
"<PyConfig_Get>` instead."
msgstr ""
":c:var:`Py_LegacyWindowsStdioFlag`: Use :c:member:`PyConfig."
"legacy_windows_stdio` ou :c:func:`PyConfig_Get(\"legacy_windows_stdio\") "
"<PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:122
msgid ""
":c:var:`!Py_FileSystemDefaultEncoding`, :c:var:`!"
"Py_HasFileSystemDefaultEncoding`: Use :c:member:`PyConfig."
"filesystem_encoding` or :c:func:`PyConfig_Get(\"filesystem_encoding\") "
"<PyConfig_Get>` instead."
msgstr ""
":c:var:`!Py_FileSystemDefaultEncoding`, :c:var:`!"
"Py_HasFileSystemDefaultEncoding`: Use :c:member:`PyConfig."
"filesystem_encoding` ou :c:func:`PyConfig_Get(\"filesystem_encoding\") "
"<PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:125
msgid ""
":c:var:`!Py_FileSystemDefaultEncodeErrors`: Use :c:member:`PyConfig."
"filesystem_errors` or :c:func:`PyConfig_Get(\"filesystem_errors\") "
"<PyConfig_Get>` instead."
msgstr ""
":c:var:`!Py_FileSystemDefaultEncodeErrors`: Use :c:member:`PyConfig."
"filesystem_errors` ou :c:func:`PyConfig_Get(\"filesystem_errors\") "
"<PyConfig_Get>`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:128
msgid ""
":c:var:`!Py_UTF8Mode`: Use :c:member:`PyPreConfig.utf8_mode` or :c:func:"
"`PyConfig_Get(\"utf8_mode\") <PyConfig_Get>` instead. (see :c:func:"
"`Py_PreInitialize`)"
msgstr ""
":c:var:`!Py_UTF8Mode`: Use :c:member:`PyPreConfig.utf8_mode` ou :c:func:"
"`PyConfig_Get(\"utf8_mode\") <PyConfig_Get>`. (veja :c:func:"
"`Py_PreInitialize`)"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:133
msgid ""
"The :c:func:`Py_InitializeFromConfig` API should be used with :c:type:"
"`PyConfig` to set these options. Or :c:func:`PyConfig_Get` can be used to "
"get these options at runtime."
msgstr ""
"A API :c:func:`Py_InitializeFromConfig` deve ser usada com :c:type:"
"`PyConfig` para definir essas opções. Ou :c:func:`PyConfig_Get` pode ser "
"usado para obter essas opções em tempo de execução."

#: ../../deprecations/c-api-pending-removal-in-3.16.rst:4
msgid "The bundled copy of ``libmpdec``."
msgstr "A cópia empacotada do ``libmpdec``."

#: ../../deprecations/c-api-pending-removal-in-3.18.rst:2
msgid "Pending removal in Python 3.18"
msgstr "Remoção pendente no Python 3.18"

#: ../../deprecations/c-api-pending-removal-in-3.18.rst:4
msgid ""
"The following private functions are deprecated and planned for removal in "
"Python 3.18:"
msgstr ""
"As seguintes funções privadas estão descontinuado e planejadas para remoção "
"no Python 3.18:"

#: ../../deprecations/c-api-pending-removal-in-3.18.rst:7
msgid ":c:func:`!_PyBytes_Join`: use :c:func:`PyBytes_Join`."
msgstr ":c:func:`!_PyBytes_Join`: use :c:func:`PyBytes_Join`."

#: ../../deprecations/c-api-pending-removal-in-3.18.rst:8
msgid ""
":c:func:`!_PyDict_GetItemStringWithError`: use :c:func:"
"`PyDict_GetItemStringRef`."
msgstr ""
":c:func:`!_PyDict_GetItemStringWithError`: use :c:func:"
"`PyDict_GetItemStringRef`."

#: ../../deprecations/c-api-pending-removal-in-3.18.rst:9
msgid ":c:func:`!_PyDict_Pop()`: use :c:func:`PyDict_Pop`."
msgstr ":c:func:`!_PyDict_Pop()`: use :c:func:`PyDict_Pop`."

#: ../../deprecations/c-api-pending-removal-in-3.18.rst:10
msgid ":c:func:`!_PyLong_Sign()`: use :c:func:`PyLong_GetSign`."
msgstr ":c:func:`!_PyLong_Sign()`: use :c:func:`PyLong_GetSign`."

#: ../../deprecations/c-api-pending-removal-in-3.18.rst:11
msgid ""
":c:func:`!_PyLong_FromDigits` and :c:func:`!_PyLong_New`: use :c:func:"
"`PyLongWriter_Create`."
msgstr ""
":c:func:`!_PyLong_FromDigits` e :c:func:`!_PyLong_New`: use :c:func:"
"`PyLongWriter_Create`."

#: ../../deprecations/c-api-pending-removal-in-3.18.rst:13
msgid ""
":c:func:`!_PyThreadState_UncheckedGet`: use :c:func:"
"`PyThreadState_GetUnchecked`."
msgstr ""
":c:func:`!_PyThreadState_UncheckedGet`: use :c:func:"
"`PyThreadState_GetUnchecked`."

#: ../../deprecations/c-api-pending-removal-in-3.18.rst:14
msgid ":c:func:`!_PyUnicode_AsString`: use :c:func:`PyUnicode_AsUTF8`."
msgstr ":c:func:`!_PyUnicode_AsString`: use :c:func:`PyUnicode_AsUTF8`."

#: ../../deprecations/c-api-pending-removal-in-3.18.rst:15
msgid ""
":c:func:`!_PyUnicodeWriter_Init`: replace ``_PyUnicodeWriter_Init(&writer)`` "
"with :c:func:`writer = PyUnicodeWriter_Create(0) <PyUnicodeWriter_Create>`."
msgstr ""
":c:func:`!_PyUnicodeWriter_Init`: substitua "
"``_PyUnicodeWriter_Init(&writer)`` por :c:func:`writer = "
"PyUnicodeWriter_Create(0) <PyUnicodeWriter_Create>`."

#: ../../deprecations/c-api-pending-removal-in-3.18.rst:18
msgid ""
":c:func:`!_PyUnicodeWriter_Finish`: replace "
"``_PyUnicodeWriter_Finish(&writer)`` with :c:func:"
"`PyUnicodeWriter_Finish(writer) <PyUnicodeWriter_Finish>`."
msgstr ""
":c:func:`!_PyUnicodeWriter_Finish`: substitua "
"``_PyUnicodeWriter_Finish(&writer)`` por :c:func:"
"`PyUnicodeWriter_Finish(writer) <PyUnicodeWriter_Finish>`."

#: ../../deprecations/c-api-pending-removal-in-3.18.rst:21
msgid ""
":c:func:`!_PyUnicodeWriter_Dealloc`: replace "
"``_PyUnicodeWriter_Dealloc(&writer)`` with :c:func:"
"`PyUnicodeWriter_Discard(writer) <PyUnicodeWriter_Discard>`."
msgstr ""
":c:func:`!_PyUnicodeWriter_Dealloc`: substitua "
"``_PyUnicodeWriter_Dealloc(&writer)`` por :c:func:"
"`PyUnicodeWriter_Discard(writer) <PyUnicodeWriter_Discard>`."

#: ../../deprecations/c-api-pending-removal-in-3.18.rst:24
msgid ""
":c:func:`!_PyUnicodeWriter_WriteChar`: replace "
"``_PyUnicodeWriter_WriteChar(&writer, ch)`` with :c:func:"
"`PyUnicodeWriter_WriteChar(writer, ch) <PyUnicodeWriter_WriteChar>`."
msgstr ""
":c:func:`!_PyUnicodeWriter_WriteChar`: substituta "
"``_PyUnicodeWriter_WriteChar(&writer, ch)`` por :c:func:"
"`PyUnicodeWriter_WriteChar(writer, ch) <PyUnicodeWriter_WriteChar>`."

#: ../../deprecations/c-api-pending-removal-in-3.18.rst:27
msgid ""
":c:func:`!_PyUnicodeWriter_WriteStr`: replace "
"``_PyUnicodeWriter_WriteStr(&writer, str)`` with :c:func:"
"`PyUnicodeWriter_WriteStr(writer, str) <PyUnicodeWriter_WriteStr>`."
msgstr ""
":c:func:`!_PyUnicodeWriter_WriteStr`: substitua "
"``_PyUnicodeWriter_WriteStr(&writer, str)`` por :c:func:"
"`PyUnicodeWriter_WriteStr(writer, str) <PyUnicodeWriter_WriteStr>`."

#: ../../deprecations/c-api-pending-removal-in-3.18.rst:30
msgid ""
":c:func:`!_PyUnicodeWriter_WriteSubstring`: replace "
"``_PyUnicodeWriter_WriteSubstring(&writer, str, start, end)`` with :c:func:"
"`PyUnicodeWriter_WriteSubstring(writer, str, start, end) "
"<PyUnicodeWriter_WriteSubstring>`."
msgstr ""
":c:func:`!_PyUnicodeWriter_WriteSubstring`: substitua "
"``_PyUnicodeWriter_WriteSubstring(&writer, str, start, end)`` por :c:func:"
"`PyUnicodeWriter_WriteSubstring(writer, str, start, end) "
"<PyUnicodeWriter_WriteSubstring>`."

#: ../../deprecations/c-api-pending-removal-in-3.18.rst:33
msgid ""
":c:func:`!_PyUnicodeWriter_WriteASCIIString`: replace "
"``_PyUnicodeWriter_WriteASCIIString(&writer, str)`` with :c:func:"
"`PyUnicodeWriter_WriteASCII(writer, str) <PyUnicodeWriter_WriteASCII>`."
msgstr ""
":c:func:`!_PyUnicodeWriter_WriteASCIIString`: substitua "
"``_PyUnicodeWriter_WriteASCIIString(&writer, str)`` por :c:func:"
"`PyUnicodeWriter_WriteASCII(writer, str) <PyUnicodeWriter_WriteASCII>`."

#: ../../deprecations/c-api-pending-removal-in-3.18.rst:36
msgid ""
":c:func:`!_PyUnicodeWriter_WriteLatin1String`: replace "
"``_PyUnicodeWriter_WriteLatin1String(&writer, str)`` with :c:func:"
"`PyUnicodeWriter_WriteUTF8(writer, str) <PyUnicodeWriter_WriteUTF8>`."
msgstr ""
":c:func:`!_PyUnicodeWriter_WriteLatin1String`: substitua "
"``_PyUnicodeWriter_WriteLatin1String(&writer, str)`` por :c:func:"
"`PyUnicodeWriter_WriteUTF8(writer, str) <PyUnicodeWriter_WriteUTF8>`."

#: ../../deprecations/c-api-pending-removal-in-3.18.rst:39
msgid ":c:func:`!_PyUnicodeWriter_Prepare`: (no replacement)."
msgstr ":c:func:`!_PyUnicodeWriter_Prepare`: (sem substituto)."

#: ../../deprecations/c-api-pending-removal-in-3.18.rst:40
msgid ":c:func:`!_PyUnicodeWriter_PrepareKind`: (no replacement)."
msgstr ":c:func:`!_PyUnicodeWriter_PrepareKind`: (sem substituto)."

#: ../../deprecations/c-api-pending-removal-in-3.18.rst:41
msgid ":c:func:`!_Py_HashPointer`: use :c:func:`Py_HashPointer`."
msgstr ":c:func:`!_Py_HashPointer`: use :c:func:`Py_HashPointer`."

#: ../../deprecations/c-api-pending-removal-in-3.18.rst:42
msgid ":c:func:`!_Py_fopen_obj`: use :c:func:`Py_fopen`."
msgstr ":c:func:`!_Py_fopen_obj`: use :c:func:`Py_fopen`."

#: ../../deprecations/c-api-pending-removal-in-3.18.rst:44
msgid ""
"The `pythoncapi-compat project <https://github.com/python/pythoncapi-compat/"
">`__ can be used to get these new public functions on Python 3.13 and older. "
"(Contributed by Victor Stinner in :gh:`128863`.)"
msgstr ""
"O `projeto pythoncapi-compat <https://github.com/python/pythoncapi-compat/"
">`__ pode ser usado para obter essas novas funções públicas no Python 3.13 e "
"versões anteriores. (Contribuição de Victor Stinner em :gh:`128863`.)"

#: ../../deprecations/c-api-pending-removal-in-future.rst:4
msgid ""
"The following APIs are deprecated and will be removed, although there is "
"currently no date scheduled for their removal."
msgstr ""
"As APIs a seguir foram descontinuadas e serão removidas, embora atualmente "
"não haja uma data agendada para sua remoção."

#: ../../deprecations/c-api-pending-removal-in-future.rst:7
msgid ":c:macro:`Py_TPFLAGS_HAVE_FINALIZE`: Unneeded since Python 3.8."
msgstr ":c:macro:`Py_TPFLAGS_HAVE_FINALIZE`: desnecessária desde o Python 3.8."

#: ../../deprecations/c-api-pending-removal-in-future.rst:9
msgid ":c:func:`PyErr_Fetch`: Use :c:func:`PyErr_GetRaisedException` instead."
msgstr ":c:func:`PyErr_Fetch`: use :c:func:`PyErr_GetRaisedException`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:11
msgid ""
":c:func:`PyErr_NormalizeException`: Use :c:func:`PyErr_GetRaisedException` "
"instead."
msgstr ""
":c:func:`PyErr_NormalizeException`: use :c:func:`PyErr_GetRaisedException`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:13
msgid ""
":c:func:`PyErr_Restore`: Use :c:func:`PyErr_SetRaisedException` instead."
msgstr ":c:func:`PyErr_Restore`: use :c:func:`PyErr_SetRaisedException`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:15
msgid ""
":c:func:`PyModule_GetFilename`: Use :c:func:`PyModule_GetFilenameObject` "
"instead."
msgstr ""
":c:func:`PyModule_GetFilename`: use :c:func:`PyModule_GetFilenameObject`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:17
msgid ":c:func:`PyOS_AfterFork`: Use :c:func:`PyOS_AfterFork_Child` instead."
msgstr ":c:func:`PyOS_AfterFork`: use :c:func:`PyOS_AfterFork_Child`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:19
msgid ""
":c:func:`PySlice_GetIndicesEx`: Use :c:func:`PySlice_Unpack` and :c:func:"
"`PySlice_AdjustIndices` instead."
msgstr ""
":c:func:`PySlice_GetIndicesEx`: use :c:func:`PySlice_Unpack` e :c:func:"
"`PySlice_AdjustIndices`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:21
msgid ":c:func:`PyUnicode_READY`: Unneeded since Python 3.12"
msgstr ":c:func:`PyUnicode_READY`: desnecessário desde o Python 3.12"

#: ../../deprecations/c-api-pending-removal-in-future.rst:23
msgid ":c:func:`!PyErr_Display`: Use :c:func:`PyErr_DisplayException` instead."
msgstr ":c:func:`!PyErr_Display`: use :c:func:`PyErr_DisplayException`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:25
msgid ""
":c:func:`!_PyErr_ChainExceptions`: Use :c:func:`!_PyErr_ChainExceptions1` "
"instead."
msgstr ""
":c:func:`!_PyErr_ChainExceptions`: use :c:func:`!_PyErr_ChainExceptions1`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:27
msgid ""
":c:member:`!PyBytesObject.ob_shash` member: call :c:func:`PyObject_Hash` "
"instead."
msgstr ""
"O membro :c:member:`!PyBytesObject.ob_shash`: chame :c:func:`PyObject_Hash`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:29
msgid "Thread Local Storage (TLS) API:"
msgstr "API do Thread Local Storage (TLS):"

#: ../../deprecations/c-api-pending-removal-in-future.rst:31
msgid ""
":c:func:`PyThread_create_key`: Use :c:func:`PyThread_tss_alloc` instead."
msgstr ":c:func:`PyThread_create_key`: use :c:func:`PyThread_tss_alloc`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:33
msgid ":c:func:`PyThread_delete_key`: Use :c:func:`PyThread_tss_free` instead."
msgstr ":c:func:`PyThread_delete_key`: use :c:func:`PyThread_tss_free`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:35
msgid ""
":c:func:`PyThread_set_key_value`: Use :c:func:`PyThread_tss_set` instead."
msgstr ":c:func:`PyThread_set_key_value`: use :c:func:`PyThread_tss_set`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:37
msgid ""
":c:func:`PyThread_get_key_value`: Use :c:func:`PyThread_tss_get` instead."
msgstr ":c:func:`PyThread_get_key_value`: use :c:func:`PyThread_tss_get`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:39
msgid ""
":c:func:`PyThread_delete_key_value`: Use :c:func:`PyThread_tss_delete` "
"instead."
msgstr ""
":c:func:`PyThread_delete_key_value`: use :c:func:`PyThread_tss_delete`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:41
msgid ":c:func:`PyThread_ReInitTLS`: Unneeded since Python 3.7."
msgstr ":c:func:`PyThread_ReInitTLS`: desnecessário desde o Python 3.7."

#: ../../whatsnew/3.14.rst:3086
msgid "Build changes"
msgstr ""

#: ../../whatsnew/3.14.rst:3088
msgid ""
":pep:`776`: Emscripten is now an officially supported platform at :pep:`tier "
"3 <11#tier-3>`. As a part of this effort, more than 25 bugs in `Emscripten "
"libc`__ were fixed. Emscripten now includes support for :mod:`ctypes`, :mod:"
"`termios`, and :mod:`fcntl`, as well as experimental support for the new :"
"ref:`default interactive shell <tut-interactive>`. (Contributed by R. Hood "
"Chatham in :gh:`127146`, :gh:`127683`, and :gh:`136931`.)"
msgstr ""

#: ../../whatsnew/3.14.rst:3098
msgid "Official Android binary releases are now provided on python.org__."
msgstr ""

#: ../../whatsnew/3.14.rst:3102
msgid ""
"GNU Autoconf 2.72 is now required to generate :file:`configure`. "
"(Contributed by Erlend Aasland in :gh:`115765`.)"
msgstr ""
"O GNU Autoconf 2.72 agora é necessário para gerar o :file:`configure`. "
"(Contribuição de Erlend Aasland em :gh:`115765`.)"

#: ../../whatsnew/3.14.rst:3105
msgid ""
"``wasm32-unknown-emscripten`` is now a :pep:`11` tier 3 platform. "
"(Contributed by R. Hood Chatham in :gh:`127146`, :gh:`127683`, and :gh:"
"`136931`.)"
msgstr ""
"``wasm32-unknown-emscripten`` agora é uma plataforma de nível 3 segundo a :"
"pep:`11`. (Contribuição de R. Hood Chatham em :gh:`127146`, :gh:`127683` e :"
"gh:`136931`.)"

#: ../../whatsnew/3.14.rst:3108
msgid ""
"``#pragma``-based linking with ``python3*.lib`` can now be switched off "
"with :c:expr:`Py_NO_LINK_LIB`. (Contributed by Jean-Christophe Fillion-Robin "
"in :gh:`82909`.)"
msgstr ""
"A vinculação baseada em ``#pragma`` com ``python3*.lib`` agora pode ser "
"desativada com :c:expr:`Py_NO_LINK_LIB`. (Contribuição de Jean-Christophe "
"Fillion-Robin em :gh:`82909`.)"

#: ../../whatsnew/3.14.rst:3112
msgid ""
"CPython now enables a set of recommended compiler options by default for "
"improved security. Use the :option:`--disable-safety` :file:`configure` "
"option to disable them, or the :option:`--enable-slower-safety` option for a "
"larger set of compiler options, albeit with a performance cost."
msgstr ""
"O CPython agora habilita um conjunto de opções de compilador recomendadas "
"por padrão para maior segurança. Use as opções :option:`--disable-safety` e :"
"file:`configure` para desabilitá-las, ou a opção :option:`--enable-slower-"
"safety` para um conjunto maior de opções de compilador, embora com um custo "
"de desempenho."

#: ../../whatsnew/3.14.rst:3118
msgid ""
"The ``WITH_FREELISTS`` macro and ``--without-freelists`` :file:`configure` "
"option have been removed."
msgstr ""
"A macro ``WITH_FREELISTS`` e a opção ``--without-freelists`` :file:"
"`configure` foram removidas."

#: ../../whatsnew/3.14.rst:3121
msgid ""
"The new :file:`configure` option :option:`--with-tail-call-interp` may be "
"used to enable the experimental tail call interpreter. See :ref:`whatsnew314-"
"tail-call-interpreter` for further details."
msgstr ""

#: ../../whatsnew/3.14.rst:3125
msgid ""
"To disable the new remote debugging support, use the :option:`--without-"
"remote-debug` :file:`configure` option. This may be useful for security "
"reasons."
msgstr ""
"Para desabilitar o novo suporte à depuração remota, use as opções :option:`--"
"without-remote-debug` e :file:`configure`. Isso pode ser útil por motivos de "
"segurança."

#: ../../whatsnew/3.14.rst:3129
msgid ""
"iOS and macOS apps can now be configured to redirect ``stdout`` and "
"``stderr`` content to the system log. (Contributed by Russell Keith-Magee "
"in :gh:`127592`.)"
msgstr ""
"Aplicações iOS e macOS agora podem ser configurados para redirecionar o "
"conteúdo ``stdout`` e ``stderr`` para o log do sistema. (Contribuição de "
"Russell Keith-Magee em :gh:`127592`.)"

#: ../../whatsnew/3.14.rst:3133
msgid ""
"The iOS testbed is now able to stream test output while the test is running. "
"The testbed can also be used to run the test suite of projects other than "
"CPython itself. (Contributed by Russell Keith-Magee in :gh:`127592`.)"
msgstr ""
"O ambiente de teste do iOS agora pode transmitir a saída do teste enquanto "
"ele está em execução. O ambiente de teste também pode ser usado para "
"executar o conjunto de testes de outros projetos além do CPython. "
"(Contribuição de Russell Keith-Magee em :gh:`127592`.)"

#: ../../whatsnew/3.14.rst:3142
msgid ":file:`build-details.json`"
msgstr ":file:`build-details.json`"

#: ../../whatsnew/3.14.rst:3144
msgid ""
"Installations of Python now contain a new file, :file:`build-details.json`. "
"This is a static JSON document containing build details for CPython, to "
"allow for introspection without needing to run code. This is helpful for use-"
"cases such as Python launchers, cross-compilation, and so on."
msgstr ""
"As instalações do Python agora contêm um novo arquivo, :file:`build-details."
"json`. Este é um documento JSON estático contendo detalhes da construção do "
"CPython, permitindo introspecção sem a necessidade de executar código. Isso "
"é útil para casos de uso como inicializadores do Python, compilação cruzada "
"e assim por diante."

#: ../../whatsnew/3.14.rst:3150
msgid ""
":file:`build-details.json` must be installed in the platform-independent "
"standard library directory. This corresponds to the :ref:`'stdlib' "
"<installation_paths>` :mod:`sysconfig` installation path, which can be found "
"by running ``sysconfig.get_path('stdlib')``."
msgstr ""
":file:`build-details.json` deve ser instalado no diretório da biblioteca "
"padrão independente de plataforma. Isso corresponde ao caminho de "
"instalação :ref:`'stdlib' <installation_paths>` :mod:`sysconfig`, que pode "
"ser encontrado executando ``sysconfig.get_path('stdlib')``."

#: ../../whatsnew/3.14.rst:3156
msgid ""
":pep:`739` -- ``build-details.json`` 1.0 -- a static description file for "
"Python build details"
msgstr ""
":pep:`739` -- ``build-details.json`` 1.0 -- um arquivo de descrição estática "
"para detalhes de construção do Python"

#: ../../whatsnew/3.14.rst:3163
msgid "Discontinuation of PGP signatures"
msgstr "Descontinuação de assinaturas PGP"

#: ../../whatsnew/3.14.rst:3165
msgid ""
"PGP (Pretty Good Privacy) signatures will not be provided for releases of "
"Python 3.14 or future versions. To verify CPython artifacts, users must use "
"`Sigstore verification materials <https://www.python.org/downloads/metadata/"
"sigstore/>`__. Releases have been signed using Sigstore_ since Python 3.11."
msgstr ""
"Assinaturas PGP (Pretty Good Privacy) não serão fornecidas para versões do "
"Python 3.14 ou versões futuras. Para verificar artefatos do CPython, os "
"usuários devem usar `materiais de verificação do Sigstore <https://www."
"python.org/downloads/metadata/sigstore/>`__. As versões são assinadas usando "
"o Sigstore_ desde o Python 3.11."

#: ../../whatsnew/3.14.rst:3171
msgid "This change in release process was specified in :pep:`761`."
msgstr "Essa mudança no processo de lançamento foi especificada em :pep:`761`."

#: ../../whatsnew/3.14.rst:3179
msgid "Free-threaded Python is officially supported"
msgstr ""

#: ../../whatsnew/3.14.rst:3181
msgid ""
"The free-threaded build of Python is now supported and no longer "
"experimental. This is the start of `phase II <https://discuss.python.org/"
"t/37075>`__ where free-threaded Python is officially supported but still "
"optional."
msgstr ""

#: ../../whatsnew/3.14.rst:3185
msgid ""
"The free-threading team are confident that the project is on the right path, "
"and appreciate the continued dedication from everyone working to make free-"
"threading ready for broader adoption across the Python community."
msgstr ""

#: ../../whatsnew/3.14.rst:3189
msgid ""
"With these recommendations and the acceptance of this PEP, the Python "
"developer community should broadly advertise that free-threading is a "
"supported Python build option now and into the future, and that it will not "
"be removed without a proper deprecation schedule."
msgstr ""

#: ../../whatsnew/3.14.rst:3194
msgid ""
"Any decision to transition to `phase III <https://discuss.python.org/"
"t/37075>`__, with free-threading as the default or sole build of Python is "
"still undecided, and dependent on many factors both within CPython itself "
"and the community. This decision is for the future."
msgstr ""

#: ../../whatsnew/3.14.rst:3201
msgid ":pep:`779`"
msgstr ""

#: ../../whatsnew/3.14.rst:3203
msgid "`PEP 779's acceptance <https://discuss.python.org/t/84319/123>`__"
msgstr ""

#: ../../whatsnew/3.14.rst:3209
msgid "Binary releases for the experimental just-in-time compiler"
msgstr "Versões binárias para o compilador experimental just-in-time"

#: ../../whatsnew/3.14.rst:3211
msgid ""
"The official macOS and Windows release binaries now include an "
"*experimental* just-in-time (JIT) compiler. Although it is **not** "
"recommended for production use, it can be tested by setting :envvar:"
"`PYTHON_JIT=1 <PYTHON_JIT>` as an environment variable. Downstream source "
"builds and redistributors can use the :option:`--enable-experimental-jit=yes-"
"off` configuration option for similar behavior."
msgstr ""
"Os binários oficiais de lançamento para macOS e Windows agora incluem um "
"compilador JIT (just-in-time) *experimental*. Embora **não** seja "
"recomendado para uso em produção, ele pode ser testado definindo :envvar:"
"`PYTHON_JIT=1 <PYTHON_JIT>` como uma variável de ambiente. Construções de "
"código-fonte downstream e redistribuidores podem usar a opção de "
"configuração :option:`--enable-experimental-jit=yes-off` para obter um "
"comportamento semelhante."

#: ../../whatsnew/3.14.rst:3218
msgid ""
"The JIT is at an early stage and still in active development. As such, the "
"typical performance impact of enabling it can range from 10% slower to 20% "
"faster, depending on workload. To aid in testing and evaluation, a set of "
"introspection functions has been provided in the :data:`sys._jit` "
"namespace. :func:`sys._jit.is_available` can be used to determine if the "
"current executable supports JIT compilation, while :func:`sys._jit."
"is_enabled` can be used to tell if JIT compilation has been enabled for the "
"current process."
msgstr ""
"O JIT está em estágio inicial e ainda em desenvolvimento ativo. Portanto, o "
"impacto típico de sua ativação no desempenho pode variar de 10% mais lento a "
"20% mais rápido, dependendo da carga de trabalho. Para auxiliar nos testes e "
"na avaliação, um conjunto de funções de introspecção foi fornecido no espaço "
"de nomes :data:`sys._jit`. :func:`sys._jit.is_available` pode ser usado para "
"determinar se o executável atual oferece suporte a compilação JIT, enquanto :"
"func:`sys._jit.is_enabled` pode ser usado para informar se a compilação JIT "
"foi ativada para o processo atual."

#: ../../whatsnew/3.14.rst:3226
msgid ""
"Currently, the most significant missing functionality is that native "
"debuggers and profilers like ``gdb`` and ``perf`` are unable to unwind "
"through JIT frames (Python debuggers and profilers, like :mod:`pdb` or :mod:"
"`profile`, continue to work without modification). Free-threaded builds do "
"not support JIT compilation."
msgstr ""
"Atualmente, a funcionalidade ausente mais significativa é que depuradores e "
"profilers nativos, como ``gdb`` e ``perf``, não conseguem desenrolar quadros "
"JIT (depuradores e profilers Python, como :mod:`pdb` ou :mod:`profile`, "
"continuam funcionando sem modificações). Construções com threads livres não "
"oferecem suporte a compilação JIT."

#: ../../whatsnew/3.14.rst:3231
msgid ""
"Please report any bugs or major performance regressions that you encounter!"
msgstr ""
"Por favor, relate quaisquer bugs ou grandes regressões de desempenho que "
"você encontrar!"

#: ../../whatsnew/3.14.rst:3233
msgid ":pep:`744`"
msgstr ":pep:`744`"

#: ../../whatsnew/3.14.rst:3237
msgid "Porting to Python 3.14"
msgstr "Portando para o Python 3.14"

#: ../../whatsnew/3.14.rst:3239
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"Esta seção lista as alterações descritas anteriormente e outras correções "
"que podem exigir alterações no seu código."

#: ../../whatsnew/3.14.rst:3244
msgid "Changes in the Python API"
msgstr "Alterações na API Python"

#: ../../whatsnew/3.14.rst:3246
msgid ""
"On Unix platforms other than macOS, *forkserver* is now the default :ref:"
"`start method <multiprocessing-start-methods>` for :mod:`multiprocessing` "
"and :class:`~concurrent.futures.ProcessPoolExecutor`, instead of *fork*."
msgstr ""

#: ../../whatsnew/3.14.rst:3250
msgid ""
"See :ref:`(1) <whatsnew314-concurrent-futures-start-method>` and :ref:`(2) "
"<whatsnew314-multiprocessing-start-method>` for details."
msgstr ""
"Consulte :ref:`(1) <whatsnew314-concurrent-futures-start-method>` e :ref:"
"`(2) <whatsnew314-multiprocessing-start-method>` para detalhes."

#: ../../whatsnew/3.14.rst:3253
msgid ""
"If you encounter :exc:`NameError`\\s or pickling errors coming out of :mod:"
"`multiprocessing` or :mod:`concurrent.futures`, see the :ref:`forkserver "
"restrictions <multiprocessing-programming-forkserver>`."
msgstr ""
"Se você encontrar :exc:`NameError`\\s ou erros de serialização com pickle "
"vindos de :mod:`multiprocessing` ou :mod:`concurrent.futures`, consulte as :"
"ref:`restrições do forkserver <multiprocessing-programming-forkserver>`."

#: ../../whatsnew/3.14.rst:3257
msgid ""
"This change does not affect Windows or macOS, where :ref:`'spawn' "
"<multiprocessing-start-method-spawn>` remains the default start method."
msgstr ""

#: ../../whatsnew/3.14.rst:3260
msgid ""
":class:`functools.partial` is now a method descriptor. Wrap it in :func:"
"`staticmethod` if you want to preserve the old behavior. (Contributed by "
"Serhiy Storchaka and Dominykas Grigonis in :gh:`121027`.)"
msgstr ""
":class:`functools.partial` agora é um descritor de método. Envolva-o em :"
"func:`staticmethod` se quiser preservar o comportamento antigo. "
"(Contribuição de Serhiy Storchaka e Dominykas Grigonis em :gh:`121027`.)"

#: ../../whatsnew/3.14.rst:3264
msgid ""
"The :ref:`garbage collector is now incremental <whatsnew314-incremental-"
"gc>`, which means that the behavior of :func:`gc.collect` changes slightly:"
msgstr ""
"O :ref:`coletor de lixo agora é incremental <whatsnew314-incremental-gc>`, o "
"que significa que o comportamento de :func:`gc.collect` muda ligeiramente:"

#: ../../whatsnew/3.14.rst:3271
msgid ""
"The :func:`locale.nl_langinfo` function now temporarily sets the "
"``LC_CTYPE`` locale in some cases. This temporary change affects other "
"threads. (Contributed by Serhiy Storchaka in :gh:`69998`.)"
msgstr ""
"A função :func:`locale.nl_langinfo` agora define temporariamente a "
"localidade ``LC_CTYPE`` em alguns casos. Esta alteração temporária afeta "
"outras threads. (Contribuição de Serhiy Storchaka em :gh:`69998`.)"

#: ../../whatsnew/3.14.rst:3276
msgid ""
":class:`types.UnionType` is now an alias for :class:`typing.Union`, causing "
"changes in some behaviors. See :ref:`above <whatsnew314-typing-union>` for "
"more details. (Contributed by Jelle Zijlstra in :gh:`105499`.)"
msgstr ""
":class:`types.UnionType` agora é um apelido para :class:`typing.Union`, "
"causando alterações em alguns comportamentos. Veja :ref:`acima <whatsnew314-"
"typing-union>` para mais detalhes. (Contribuição de Jelle Zijlstra em :gh:"
"`105499`.)"

#: ../../whatsnew/3.14.rst:3281
msgid ""
"The runtime behavior of annotations has changed in various ways; see :ref:"
"`above <whatsnew314-deferred-annotations>` for details. While most code that "
"interacts with annotations should continue to work, some undocumented "
"details may behave differently."
msgstr ""

#: ../../whatsnew/3.14.rst:3286
msgid ""
"As part of making the :mod:`mimetypes` CLI public, it now exits with ``1`` "
"on failure instead of ``0`` and ``2`` on incorrect command-line parameters "
"instead of ``1``. Error messages are now printed to stderr."
msgstr ""

#: ../../whatsnew/3.14.rst:3291
msgid ""
"The ``\\B`` pattern in regular expression now matches the empty string when "
"given as the entire pattern, which may cause behavioural changes."
msgstr ""

#: ../../whatsnew/3.14.rst:3294
msgid ""
"On FreeBSD, :data:`sys.platform` no longer contains the major version number."
msgstr ""

#: ../../whatsnew/3.14.rst:3300
msgid "Changes in annotations (:pep:`649` and :pep:`749`)"
msgstr "Mudanças em anotações (:pep:`649` e :pep:`749`)"

#: ../../whatsnew/3.14.rst:3302
msgid ""
"This section contains guidance on changes that may be needed to annotations "
"or Python code that interacts with or introspects annotations, due to the "
"changes related to :ref:`deferred evaluation of annotations <whatsnew314-"
"deferred-annotations>`."
msgstr ""
"Esta seção contém orientações sobre as alterações que podem ser necessárias "
"nas anotações ou no código Python que interage com ou introspecta anotações, "
"devido às alterações relacionadas à :ref:`avaliação adiada de anotações "
"<whatsnew314-deferred-annotations>`."

#: ../../whatsnew/3.14.rst:3307
msgid ""
"In the majority of cases, working code from older versions of Python will "
"not require any changes."
msgstr ""
"Na maioria dos casos, o código funcionando em uma  versão mais antiga de "
"Python não exigirá nenhuma alteração."

#: ../../whatsnew/3.14.rst:3312
msgid "Implications for annotated code"
msgstr "Implicações para o código anotado"

#: ../../whatsnew/3.14.rst:3314
msgid ""
"If you define annotations in your code (for example, for use with a static "
"type checker), then this change probably does not affect you: you can keep "
"writing annotations the same way you did with previous versions of Python."
msgstr ""
"Se você definir anotação em seu código (por exemplo, para uso com um "
"verificador de tipo estático), essa alteração provavelmente não o afetará: "
"você pode continuar escrevendo anotação da mesma forma que fazia com as "
"versões anteriores de Python."

#: ../../whatsnew/3.14.rst:3318
msgid ""
"You will likely be able to remove quoted strings in annotations, which are "
"frequently used for forward references. Similarly, if you use ``from "
"__future__ import annotations`` to avoid having to write strings in "
"annotations, you may well be able to remove that import once you support "
"only Python 3.14 and newer. However, if you rely on third-party libraries "
"that read annotations, those libraries may need changes to support unquoted "
"annotations before they work as expected."
msgstr ""
"É provável que você consiga remover as strings entre aspas em anotações, "
"frequentemente usadas para referências futuras. Da mesma forma, se você usar "
"``from __future__ import annotations`` para evitar ter que escrever strings "
"em anotações, poderá remover essa importação se for manter seu código apenas "
"para Python 3.14 e versões mais recentes. No entanto, se você depende de "
"bibliotecas de terceiros que leem anotações, essas bibliotecas podem "
"precisar de alterações no suporte a anotações sem aspas para funcionarem "
"como esperado."

#: ../../whatsnew/3.14.rst:3328
msgid "Implications for readers of ``__annotations__``"
msgstr "Implicações para leitores de ``__annotations__``"

#: ../../whatsnew/3.14.rst:3330
msgid ""
"If your code reads the :attr:`~object.__annotations__` attribute on objects, "
"you may want to make changes in order to support code that relies on "
"deferred evaluation of annotations. For example, you may want to use :func:"
"`annotationlib.get_annotations` with the :attr:`~annotationlib.Format."
"FORWARDREF` format, as the :mod:`dataclasses` module now does."
msgstr ""
"Se o seu código lê o atributo :attr:`~object.__annotations__`  dos objetos, "
"talvez você queira fazer alterações para oferecer suporte a código que "
"depende da avaliação adiada de anotações. Por exemplo, talvez você queira "
"usar :func:`annotationlib.get_annotations` no formato :attr:`~annotationlib."
"Format.FORWARDREF`, como o módulo :mod:`dataclasses` faz agora."

#: ../../whatsnew/3.14.rst:3337
msgid ""
"The external :pypi:`typing_extensions` package provides partial backports of "
"some of the functionality of the :mod:`annotationlib` module, such as the :"
"class:`~annotationlib.Format` enum and the :func:`~annotationlib."
"get_annotations` function. These can be used to write cross-version code "
"that takes advantage of the new behavior in Python 3.14."
msgstr ""
"O pacote externo :pypi:`typing_extensions` fornece compatibilidade "
"retroativa parcial de algumas das funcionalidades do módulo :mod:"
"`annotationlib`, como a enumeração :class:`~annotationlib.Format` e a "
"função :func:`~annotationlib.get_annotations`. Eles podem ser usados para "
"escrever código com versão-cruzada que aproveite as vantagens do novo "
"comportamento em Python 3.14."

#: ../../whatsnew/3.14.rst:3346
msgid "Related changes"
msgstr "Mudanças relacionadas"

#: ../../whatsnew/3.14.rst:3348
msgid ""
"The changes in Python 3.14 are designed to rework how :attr:`!"
"__annotations__` works at runtime while minimizing breakage to code that "
"contains annotations in source code and to code that reads :attr:`!"
"__annotations__`. However, if you rely on undocumented details of the "
"annotation behavior or on private functions in the standard library, there "
"are many ways in which your code may not work in Python 3.14. To safeguard "
"your code against future changes, only use the documented functionality of "
"the :mod:`annotationlib` module."
msgstr ""
"As alterações em Python 3.14 foram projetadas para retrabalhar a forma como :"
"attr:`!__annotations__` funciona em tempo de execução e, ao mesmo tempo, "
"minimizar a quebra do código que contém anotações em código-fonte e do "
"código que lê :attr:`!__annotations__`. No entanto, se você confiar em "
"detalhes não documentados do comportamento de anotações ou em funções "
"privadas na biblioteca padrão, há muitas maneiras pelas quais seu código "
"pode não funcionar em Python 3.14. Para proteger seu código contra "
"alterações futuras, use apenas as funcionalidades documentadas do módulo :"
"mod:`annotationlib`."

#: ../../whatsnew/3.14.rst:3357
msgid ""
"In particular, do not read annotations directly from the namespace "
"dictionary attribute of type objects. Use :func:`annotationlib."
"get_annotate_from_class_namespace` during class construction and :func:"
"`annotationlib.get_annotations` afterwards."
msgstr ""
"Em particular, não leia anotação diretamente do atributo dicionário com o "
"espaço de nomes dos objetos de tipo. Use :func:`annotationlib."
"get_annotate_from_class_namespace` durante a construção da classe e :func:"
"`annotationlib.get_annotations` depois."

#: ../../whatsnew/3.14.rst:3362
msgid ""
"In previous releases, it was sometimes possible to access class annotations "
"from an instance of an annotated class. This behavior was undocumented and "
"accidental, and will no longer work in Python 3.14."
msgstr ""
"Em versões anteriores, às vezes era possível acessar as anotações da classe "
"a partir de uma instância de uma classe anotada. Esse comportamento não "
"estava documentado e era acidental e não será mais possível em Python 3.14."

#: ../../whatsnew/3.14.rst:3368
msgid "``from __future__ import annotations``"
msgstr "``from __future__ import annotations``"

#: ../../whatsnew/3.14.rst:3370
msgid ""
"In Python 3.7, :pep:`563` introduced the ``from __future__ import "
"annotations`` :ref:`future statement <future>`, which turns all annotations "
"into strings."
msgstr ""
"Em Python 3.7, :pep:`563` introduziu a :ref:`instrução future <future>` "
"``from __future__ import annotations``, que transforma todas as anotações em "
"string."

#: ../../whatsnew/3.14.rst:3373
msgid ""
"However, this statement is now deprecated and it is expected to be removed "
"in a future version of Python. This removal will not happen until after "
"Python 3.13 reaches its end of life in 2029, being the last version of "
"Python without support for deferred evaluation of annotations."
msgstr ""
"No entanto, essa instrução está agora descontinuada e espera-se que seja "
"removida em uma versão futura de Python. Essa remoção não ocorrerá até que o "
"Python 3.13 atinja seu fim de vida útil em 2029, sendo a última versão de "
"Python sem suporte para avaliação adiada de anotações."

#: ../../whatsnew/3.14.rst:3379
msgid ""
"In Python 3.14, the behavior of code using ``from __future__ import "
"annotations`` is unchanged."
msgstr ""
"Em Python 3.14, o comportamento do código que usa ``from __future__ import "
"annotations`` não foi alterado."

#: ../../whatsnew/3.14.rst:3384
msgid "Changes in the C API"
msgstr "Alterações na API C"

#: ../../whatsnew/3.14.rst:3386
msgid ""
":c:func:`Py_Finalize` now deletes all interned strings. This is backwards "
"incompatible to any C extension that holds onto an interned string after a "
"call to :c:func:`Py_Finalize` and is then reused after a call to :c:func:"
"`Py_Initialize`.  Any issues arising from this behavior will normally result "
"in crashes during the execution of the subsequent call to :c:func:"
"`Py_Initialize` from accessing uninitialized memory. To fix, use an address "
"sanitizer to identify any use-after-free coming from an interned string and "
"deallocate it during module shutdown. (Contributed by Eddie Elizondo in :gh:"
"`113601`.)"
msgstr ""
":c:func:`Py_Finalize` agora exclui todas as strings internalizadas. Isso é "
"incompatível com versões anteriores de qualquer extensão C que retenha uma "
"string internada após uma chamada para :c:func:`Py_Finalize` e seja "
"reutilizada após uma chamada para :c:func:`Py_Initialize`. Quaisquer "
"problemas decorrentes desse comportamento normalmente resultarão em "
"travamentos durante a execução da chamada subsequente para :c:func:"
"`Py_Initialize` ao acessar memória não inicializada. Para corrigir, use um "
"sanitizador de endereços para identificar qualquer uso após liberação "
"proveniente de uma string internalizada e desalocá-la durante o desligamento "
"do módulo. (Contribuição de Eddie Elizondo em :gh:`113601`.)"

#: ../../whatsnew/3.14.rst:3396
msgid ""
"The :ref:`Unicode Exception Objects <unicodeexceptions>` C API now raises a :"
"exc:`TypeError` if its exception argument is not a :exc:`UnicodeError` "
"object. (Contributed by Bénédikt Tran in :gh:`127691`.)"
msgstr ""
"A API C :ref:`objetos de exceção Unicode <unicodeexceptions>` agora levanta :"
"exc:`TypeError` se o argumento de exceção não for um objeto :exc:"
"`UnicodeError`. (Contribuição de Bénédikt Tran em :gh:`127691`.)"

#: ../../whatsnew/3.14.rst:3403
msgid ""
"The interpreter internally avoids some reference count modifications when "
"loading objects onto the operands stack by :term:`borrowing <borrowed "
"reference>` references when possible. This can lead to smaller reference "
"count values compared to previous Python versions. C API extensions that "
"checked :c:func:`Py_REFCNT` of ``1`` to determine if an function argument is "
"not referenced by any other code should instead use :c:func:"
"`PyUnstable_Object_IsUniqueReferencedTemporary` as a safer replacement."
msgstr ""
"O interpretador evita internamente algumas modificações na contagem de "
"referências ao carregar objetos na pilha de operandos, :term:`pegando "
"emprestadas <borrowed reference>` referências quando possível. Isso pode "
"levar a valores menores de contagem de referências em comparação com versões "
"anteriores do Python. Extensões da API C que verificavam :c:func:`Py_REFCNT` "
"de ``1`` para determinar se um argumento de função não é referenciado por "
"nenhum outro código devem, em vez disso, usar :c:func:"
"`PyUnstable_Object_IsUniqueReferencedTemporary` como uma substituição mais "
"segura."

#: ../../whatsnew/3.14.rst:3412
msgid "Private functions promoted to public C APIs:"
msgstr "Funções privadas promovidas para APIs C públicas:"

#: ../../whatsnew/3.14.rst:3414
msgid "``_PyBytes_Join()``: :c:func:`PyBytes_Join`"
msgstr "``_PyBytes_Join()``: :c:func:`PyBytes_Join`"

#: ../../whatsnew/3.14.rst:3415
msgid "``_PyLong_IsNegative()``: :c:func:`PyLong_IsNegative`"
msgstr "``_PyLong_IsNegative()``: :c:func:`PyLong_IsNegative`"

#: ../../whatsnew/3.14.rst:3416
msgid "``_PyLong_IsPositive()``: :c:func:`PyLong_IsPositive`"
msgstr "``_PyLong_IsPositive()``: :c:func:`PyLong_IsPositive`"

#: ../../whatsnew/3.14.rst:3417
msgid "``_PyLong_IsZero()``: :c:func:`PyLong_IsZero`"
msgstr "``_PyLong_IsZero()``: :c:func:`PyLong_IsZero`"

#: ../../whatsnew/3.14.rst:3418
msgid "``_PyLong_Sign()``: :c:func:`PyLong_GetSign`"
msgstr "``_PyLong_Sign()``: :c:func:`PyLong_GetSign`"

#: ../../whatsnew/3.14.rst:3419
msgid "``_PyUnicodeWriter_Dealloc()``: :c:func:`PyUnicodeWriter_Discard`"
msgstr "``_PyUnicodeWriter_Dealloc()``: :c:func:`PyUnicodeWriter_Discard`"

#: ../../whatsnew/3.14.rst:3420
msgid "``_PyUnicodeWriter_Finish()``: :c:func:`PyUnicodeWriter_Finish`"
msgstr "``_PyUnicodeWriter_Finish()``: :c:func:`PyUnicodeWriter_Finish`"

#: ../../whatsnew/3.14.rst:3421
msgid "``_PyUnicodeWriter_Init()``: use :c:func:`PyUnicodeWriter_Create`"
msgstr "``_PyUnicodeWriter_Init()``: use :c:func:`PyUnicodeWriter_Create`"

#: ../../whatsnew/3.14.rst:3422
msgid "``_PyUnicodeWriter_Prepare()``: (no replacement)"
msgstr "``_PyUnicodeWriter_Prepare()``: (sem substituto)"

#: ../../whatsnew/3.14.rst:3423
msgid "``_PyUnicodeWriter_PrepareKind()``: (no replacement)"
msgstr "``_PyUnicodeWriter_PrepareKind()``: (sem substituto)"

#: ../../whatsnew/3.14.rst:3424
msgid "``_PyUnicodeWriter_WriteChar()``: :c:func:`PyUnicodeWriter_WriteChar`"
msgstr "``_PyUnicodeWriter_WriteChar()``: :c:func:`PyUnicodeWriter_WriteChar`"

#: ../../whatsnew/3.14.rst:3425
msgid "``_PyUnicodeWriter_WriteStr()``: :c:func:`PyUnicodeWriter_WriteStr`"
msgstr "``_PyUnicodeWriter_WriteStr()``: :c:func:`PyUnicodeWriter_WriteStr`"

#: ../../whatsnew/3.14.rst:3426
msgid ""
"``_PyUnicodeWriter_WriteSubstring()``: :c:func:"
"`PyUnicodeWriter_WriteSubstring`"
msgstr ""
"``_PyUnicodeWriter_WriteSubstring()``: :c:func:"
"`PyUnicodeWriter_WriteSubstring`"

#: ../../whatsnew/3.14.rst:3427
msgid "``_PyUnicode_EQ()``: :c:func:`PyUnicode_Equal`"
msgstr "``_PyUnicode_EQ()``: :c:func:`PyUnicode_Equal`"

#: ../../whatsnew/3.14.rst:3428
msgid "``_PyUnicode_Equal()``: :c:func:`PyUnicode_Equal`"
msgstr "``_PyUnicode_Equal()``: :c:func:`PyUnicode_Equal`"

#: ../../whatsnew/3.14.rst:3429
msgid ""
"``_Py_GetConfig()``: :c:func:`PyConfig_Get` and :c:func:`PyConfig_GetInt`"
msgstr ""
"``_Py_GetConfig()``: :c:func:`PyConfig_Get` e :c:func:`PyConfig_GetInt`"

#: ../../whatsnew/3.14.rst:3430
msgid "``_Py_HashBytes()``: :c:func:`Py_HashBuffer`"
msgstr "``_Py_HashBytes()``: :c:func:`Py_HashBuffer`"

#: ../../whatsnew/3.14.rst:3431
msgid "``_Py_fopen_obj()``: :c:func:`Py_fopen`"
msgstr "``_Py_fopen_obj()``: :c:func:`Py_fopen`"

#: ../../whatsnew/3.14.rst:3432
msgid "``PyMutex_IsLocked()`` : :c:func:`PyMutex_IsLocked`"
msgstr "``PyMutex_IsLocked()`` : :c:func:`PyMutex_IsLocked`"

#: ../../whatsnew/3.14.rst:3434
msgid ""
"The `pythoncapi-compat project`_ can be used to get most of these new "
"functions on Python 3.13 and older."
msgstr ""
"O `projeto pythoncapi-compat`_ pode ser usado para obter a maioria dessas "
"novas funções no Python 3.13 e versões anteriores."
