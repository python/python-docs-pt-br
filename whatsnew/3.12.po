# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-06 15:04+0000\n"
"PO-Revision-Date: 2024-05-11 00:34+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../whatsnew/3.12.rst:4
msgid "What's New In Python 3.12"
msgstr "O que há de novo no Python 3.12"

#: ../../whatsnew/3.12.rst:0
msgid "Editor"
msgstr "Editor"

#: ../../whatsnew/3.12.rst:6
msgid "Adam Turner"
msgstr "Adam Turner"

#: ../../whatsnew/3.12.rst:48
msgid ""
"This article explains the new features in Python 3.12, compared to 3.11. "
"Python 3.12 was released on October 2, 2023. For full details, see the :ref:"
"`changelog <changelog>`."
msgstr ""
"Este artigo explica os novos recursos no Python 3.12, em comparação com "
"3.11. Python 3.12 foi lançado em 2 de outubro de 2023. Veja :ref:`changelog "
"<changelog>` para uma lista completa de mudanças."

#: ../../whatsnew/3.12.rst:54
msgid ":pep:`693` -- Python 3.12 Release Schedule"
msgstr ":pep:`693` -- Agendamento de lançamento do Python 3.12"

#: ../../whatsnew/3.12.rst:57
msgid "Summary -- Release highlights"
msgstr "Resumo -- Destaques da versão"

#: ../../whatsnew/3.12.rst:62
msgid ""
"Python 3.12 is the latest stable release of the Python programming language, "
"with a mix of changes to the language and the standard library. The library "
"changes focus on cleaning up deprecated APIs, usability, and correctness. Of "
"note, the :mod:`!distutils` package has been removed from the standard "
"library. Filesystem support in :mod:`os` and :mod:`pathlib` has seen a "
"number of improvements, and several modules have better performance."
msgstr ""
"Python 3.12 é a versão estável mais recente da linguagem de programação "
"Python, com uma combinação de alterações na linguagem e na biblioteca "
"padrão. As alterações da biblioteca se concentram na limpeza de APIs "
"descontinuadas, usabilidade e correção. É importante notar que o pacote :mod:"
"`!distutils` foi removido da biblioteca padrão. O suporte ao sistema de "
"arquivos em :mod:`os` e :mod:`pathlib` teve uma série de melhorias e vários "
"módulos têm melhor desempenho."

#: ../../whatsnew/3.12.rst:69
msgid ""
"The language changes focus on usability, as :term:`f-strings <f-string>` "
"have had many limitations removed and 'Did you mean ...' suggestions "
"continue to improve. The new :ref:`type parameter syntax <whatsnew312-"
"pep695>` and :keyword:`type` statement improve ergonomics for using :term:"
"`generic types <generic type>` and :term:`type aliases <type alias>` with "
"static type checkers."
msgstr ""
"As mudanças de linguagem se concentram na usabilidade, já que :term:`f-"
"strings <f-string>` tiveram muitas limitações removidas e as sugestões 'Did "
"you mean ...' continuam a melhorar. A nova :ref:`sintaxe de parâmetro type "
"<whatsnew312-pep695>` e a instrução :keyword:`type` melhoram a ergonomia "
"para usar :term:`tipos genéricos <generic type>` e :term:`apelidos de tipos "
"<type alias>` com verificadores de tipo estáticos."

#: ../../whatsnew/3.12.rst:76
msgid ""
"This article doesn't attempt to provide a complete specification of all new "
"features, but instead gives a convenient overview. For full details, you "
"should refer to the documentation, such as the  :ref:`Library Reference "
"<library-index>` and :ref:`Language Reference <reference-index>`. If you "
"want to understand the complete implementation and design rationale for a "
"change, refer to the PEP for a particular new feature; but note that PEPs "
"usually are not kept up-to-date once a feature has been fully implemented."
msgstr ""
"Este artigo não tenta fornecer uma especificação completa de todos os novos "
"recursos, mas fornece uma visão geral conveniente. Para detalhes completos, "
"você deve consultar a documentação, como :ref:`Referência da Biblioteca "
"<library-index>` e :ref:`Referência da Linguagem <reference-index>`. Se você "
"quiser entender a implementação completa e a justificativa do design para "
"uma mudança, consulte a PEP para um novo recurso específico; mas observe que "
"as PEPs geralmente não são mantidas atualizadas depois que um recurso é "
"totalmente implementado."

#: ../../whatsnew/3.12.rst:90
msgid "New syntax features:"
msgstr "Novos recursos de sintaxe:"

#: ../../whatsnew/3.12.rst:92
msgid ""
":ref:`PEP 695 <whatsnew312-pep695>`, type parameter syntax and the :keyword:"
"`type` statement"
msgstr ""
":ref:`PEP 695 <whatsnew312-pep695>`, sintaxe de parâmetro de tipo e a "
"instrução :keyword:`type`"

#: ../../whatsnew/3.12.rst:94
msgid "New grammar features:"
msgstr "Novos recursos de gramática:"

#: ../../whatsnew/3.12.rst:96
msgid ""
":ref:`PEP 701 <whatsnew312-pep701>`, :term:`f-strings <f-string>` in the "
"grammar"
msgstr ""
":ref:`PEP 701 <whatsnew312-pep701>`, :term:`f-strings <f-string>` na "
"gramática"

#: ../../whatsnew/3.12.rst:98
msgid "Interpreter improvements:"
msgstr "Melhorias no interpretador:"

#: ../../whatsnew/3.12.rst:100
msgid ""
":ref:`PEP 684 <whatsnew312-pep684>`, a unique per-interpreter :term:`GIL "
"<global interpreter lock>`"
msgstr ""
":ref:`PEP 684 <whatsnew312-pep684>`, uma única :term:`GIL <global "
"interpreter lock>` por interpretador"

#: ../../whatsnew/3.12.rst:102
msgid ":ref:`PEP 669 <whatsnew312-pep669>`, low impact monitoring"
msgstr ":ref:`PEP 669 <whatsnew312-pep669>`, monitoramento de baixo impacto"

#: ../../whatsnew/3.12.rst:103
msgid ""
"`Improved 'Did you mean ...' suggestions <improved error messages_>`_ for :"
"exc:`NameError`, :exc:`ImportError`, and :exc:`SyntaxError` exceptions"
msgstr ""
"`Aprimoradas as sugestões 'Did you mean ...' <improved error messages_>`_ "
"para as exceções :exc:`NameError`, :exc:`ImportError` e :exc:`SyntaxError`"

#: ../../whatsnew/3.12.rst:106
msgid "Python data model improvements:"
msgstr "Melhorias no modelo de dados Python:"

#: ../../whatsnew/3.12.rst:108
msgid ""
":ref:`PEP 688 <whatsnew312-pep688>`, using the :ref:`buffer protocol "
"<bufferobjects>` from Python"
msgstr ""
":ref:`PEP 688 <whatsnew312-pep688>`, usando o :ref:`protocolo de buffer "
"<bufferobjects>` do Python"

#: ../../whatsnew/3.12.rst:111
msgid "Significant improvements in the standard library:"
msgstr "Melhorias significativas na biblioteca padrão:"

#: ../../whatsnew/3.12.rst:113
msgid "The :class:`pathlib.Path` class now supports subclassing"
msgstr ""
"A classe :class:`pathlib.Path` agora oferece suporte a fazer subclasses"

#: ../../whatsnew/3.12.rst:114
msgid "The :mod:`os` module received several improvements for Windows support"
msgstr ""
"O módulo :mod:`os` recebeu vários aprimoramentos para suporte ao Windows"

#: ../../whatsnew/3.12.rst:115
msgid ""
"A :ref:`command-line interface <sqlite3-cli>` has been added to the :mod:"
"`sqlite3` module"
msgstr ""
"Uma :ref:`interface de linha de comando <sqlite3-cli>` foi adicionada ao "
"módulo :mod:`sqlite3`"

#: ../../whatsnew/3.12.rst:117
msgid ""
":func:`isinstance` checks against :func:`runtime-checkable protocols <typing."
"runtime_checkable>` enjoy a speed up of between two and 20 times"
msgstr ""
"As verificações de :func:`isinstance` para :func:`protocolos verificáveis em "
"tempo de execução <typing.runtime_checkable>` desfruta de um aumento de "
"velocidade entre duas e 20 vezes"

#: ../../whatsnew/3.12.rst:119
msgid ""
"The :mod:`asyncio` package has had a number of performance improvements, "
"with some benchmarks showing a 75% speed up."
msgstr ""
"O pacote :mod:`asyncio` teve vários aprimoramentos desempenho, com alguns "
"benchmarks mostrando um aumento de 75% na velocidade."

#: ../../whatsnew/3.12.rst:121
msgid ""
"A :ref:`command-line interface <uuid-cli>` has been added to the :mod:`uuid` "
"module"
msgstr ""
"Uma :ref:`interface de linha de comando <uuid-cli>` foi adicionada ao "
"módulo :mod:`uuid`"

#: ../../whatsnew/3.12.rst:123
msgid ""
"Due to the changes in :ref:`PEP 701 <whatsnew312-pep701>`, producing tokens "
"via the :mod:`tokenize` module is up to 64% faster."
msgstr ""
"Devido às alterações na :ref:`PEP 701 <whatsnew312-pep701>`, a produção de "
"tokens por meio do módulo :mod:`tokenize` é até 64% mais rápida."

#: ../../whatsnew/3.12.rst:126
msgid "Security improvements:"
msgstr "Melhorias de Segurança:"

#: ../../whatsnew/3.12.rst:128
msgid ""
"Replace the builtin :mod:`hashlib` implementations of SHA1, SHA3, SHA2-384, "
"SHA2-512, and MD5 with formally verified code from the `HACL* <https://"
"github.com/hacl-star/hacl-star/>`__ project. These builtin implementations "
"remain as fallbacks that are only used when OpenSSL does not provide them."
msgstr ""
"Substitui as implementações embutidas do :mod:`hashlib` de SHA1, SHA3, "
"SHA2-384, SHA2-512 e MD5 pelo código formalmente verificado do projeto "
"`HACL* <https://github.com/hacl-star/hacl-star/>`__. Essas implementações "
"embutidas permanecem como fallbacks que são usados somente quando o OpenSSL "
"não as fornece."

#: ../../whatsnew/3.12.rst:134
msgid "C API improvements:"
msgstr "Melhorias na API C:"

#: ../../whatsnew/3.12.rst:136
msgid ":ref:`PEP 697 <whatsnew312-pep697>`, unstable C API tier"
msgstr ":ref:`PEP 697 <whatsnew312-pep697>`, tier instável de API C"

#: ../../whatsnew/3.12.rst:137
msgid ":ref:`PEP 683 <whatsnew312-pep683>`, immortal objects"
msgstr ":ref:`PEP 683 <whatsnew312-pep683>`, objetos imortal"

#: ../../whatsnew/3.12.rst:139
msgid "CPython implementation improvements:"
msgstr "Melhorias na implementação do CPython:"

#: ../../whatsnew/3.12.rst:141
msgid ":ref:`PEP 709 <whatsnew312-pep709>`, comprehension inlining"
msgstr ":ref:`PEP 709 <whatsnew312-pep709>`, inlining de compreensão"

#: ../../whatsnew/3.12.rst:142
msgid ":ref:`CPython support <perf_profiling>` for the Linux ``perf`` profiler"
msgstr ""
":ref:`Suporte do CPython <perf_profiling>` para o perfilador Linux ``perf``"

#: ../../whatsnew/3.12.rst:143
msgid "Implement stack overflow protection on supported platforms"
msgstr "Implementa proteção contra estouro de pilha em plataformas suportadas"

#: ../../whatsnew/3.12.rst:145
msgid "New typing features:"
msgstr "Novos recursos de tipagem:"

#: ../../whatsnew/3.12.rst:147
msgid ""
":ref:`PEP 692 <whatsnew312-pep692>`, using :class:`~typing.TypedDict` to "
"annotate :term:`**kwargs <argument>`"
msgstr ""
":ref:`PEP 692 <whatsnew312-pep692>`, usando :class:`~typing.TypedDict` para "
"anotar :term:`**kwargs <argument>`"

#: ../../whatsnew/3.12.rst:149
msgid ":ref:`PEP 698 <whatsnew312-pep698>`, :func:`typing.override` decorator"
msgstr ":ref:`PEP 698 <whatsnew312-pep698>`, decorador :func:`typing.override`"

#: ../../whatsnew/3.12.rst:151
msgid "Important deprecations, removals or restrictions:"
msgstr "Descontinuações, remoções ou restrições importantes:"

#: ../../whatsnew/3.12.rst:153
msgid ""
":pep:`623`: Remove ``wstr`` from Unicode objects in Python's C API, reducing "
"the size of every :class:`str` object by at least 8 bytes."
msgstr ""
":pep:`623`: Remove ``wstr`` os objetos Unicode na API C do Python, reduzindo "
"o tamanho de cada objeto :class:`str` em pelo menos 8 bytes."

#: ../../whatsnew/3.12.rst:156
msgid ""
":pep:`632`: Remove the :mod:`!distutils` package. See `the migration guide "
"<https://peps.python.org/pep-0632/#migration-advice>`_ for advice replacing "
"the APIs it provided. The third-party `Setuptools <https://setuptools.pypa."
"io/en/latest/deprecated/distutils-legacy.html>`__ package continues to "
"provide :mod:`!distutils`, if you still require it in Python 3.12 and beyond."
msgstr ""
":pep:`632`: Remove o pacote :mod:`!distutils`. Consulte `o guia de migração "
"<https://peps.python.org/pep-0632/#migration-advice>`_ para obter conselhos "
"sobre a substituição das APIs fornecidas por ele. O pacote de terceiros "
"`Setuptools <https://setuptools.pypa.io/en/latest/deprecated/distutils-"
"legacy.html>`__ continua fornecendo :mod:`!distutils`, se você ainda "
"precisar dele no Python 3.12 e posterior."

#: ../../whatsnew/3.12.rst:163
msgid ""
":gh:`95299`: Do not pre-install ``setuptools`` in virtual environments "
"created with :mod:`venv`. This means that ``distutils``, ``setuptools``, "
"``pkg_resources``, and ``easy_install`` will no longer available by default; "
"to access these run ``pip install setuptools`` in the :ref:`activated <venv-"
"explanation>` virtual environment."
msgstr ""
":gh:`95299`: Não pré-instala ``setuptools`` em ambientes virtuais criados "
"com :mod:`venv`. Isso significa que ``distutils``, ``setuptools``, "
"``pkg_resources`` e ``easy_install`` não estarão mais disponíveis por "
"padrão; para acessá-los, execute ``pip install setuptools`` no ambiente "
"virtual :ref:`ativado <venv-explanation>`."

#: ../../whatsnew/3.12.rst:170
msgid ""
"The :mod:`!asynchat`, :mod:`!asyncore`, and :mod:`!imp` modules have been "
"removed, along with several :class:`unittest.TestCase` `method aliases "
"<unittest-TestCase-removed-aliases_>`_."
msgstr ""
"Os módulos :mod:`!asynchat`, :mod:`!asyncore` e :mod:`!imp` foram removidos, "
"juntamente com vários `apelidos de métodos <unittest-TestCase-removed-"
"aliases_>`_ de :class:`unittest.TestCase`."

#: ../../whatsnew/3.12.rst:176 ../../whatsnew/3.12.rst:1836
msgid "New Features"
msgstr "Novas funcionalidades"

#: ../../whatsnew/3.12.rst:181
msgid "PEP 695: Type Parameter Syntax"
msgstr "PEP 695: Sintaxe do parâmetro de tipo"

#: ../../whatsnew/3.12.rst:183
msgid ""
"Generic classes and functions under :pep:`484` were declared using a verbose "
"syntax that left the scope of type parameters unclear and required explicit "
"declarations of variance."
msgstr ""
"As classes e funções genéricas sob a :pep:`484` foram declaradas usando uma "
"sintaxe detalhada que deixou o escopo dos parâmetros de tipo pouco claro e "
"exigiu declarações explícitas de variação."

#: ../../whatsnew/3.12.rst:187
msgid ""
":pep:`695` introduces a new, more compact and explicit way to create :ref:"
"`generic classes <generic-classes>` and :ref:`functions <generic-"
"functions>`::"
msgstr ""
":pep:`695` apresenta uma maneira nova, mais compacta e explícita de criar :"
"ref:`classes genéricas <generic-classes>` e :ref:`funções <generic-"
"functions>`::"

#: ../../whatsnew/3.12.rst:190
msgid ""
"def max[T](args: Iterable[T]) -> T:\n"
"    ...\n"
"\n"
"class list[T]:\n"
"    def __getitem__(self, index: int, /) -> T:\n"
"        ...\n"
"\n"
"    def append(self, element: T) -> None:\n"
"        ..."
msgstr ""
"def max[T](args: Iterable[T]) -> T:\n"
"    ...\n"
"\n"
"class list[T]:\n"
"    def __getitem__(self, index: int, /) -> T:\n"
"        ...\n"
"\n"
"    def append(self, element: T) -> None:\n"
"        ..."

#: ../../whatsnew/3.12.rst:200
msgid ""
"In addition, the PEP introduces a new way to declare :ref:`type aliases "
"<type-aliases>` using the :keyword:`type` statement, which creates an "
"instance of :class:`~typing.TypeAliasType`::"
msgstr ""
"Além disso, a PEP introduz uma nova maneira de declarar :ref:`apelidos de "
"tipos <type-aliases>` usando a instrução :keyword:`type`, que cria uma "
"instância de :class:`~typing.TypeAliasType`::"

#: ../../whatsnew/3.12.rst:204
msgid "type Point = tuple[float, float]"
msgstr "type Point = tuple[float, float]"

#: ../../whatsnew/3.12.rst:206
msgid "Type aliases can also be :ref:`generic <generic-type-aliases>`::"
msgstr ""
"Os apelidos de tipo também podem ser :ref:`genéricos <generic-type-"
"aliases>`::"

#: ../../whatsnew/3.12.rst:208
msgid "type Point[T] = tuple[T, T]"
msgstr "type Point[T] = tuple[T, T]"

#: ../../whatsnew/3.12.rst:210
msgid ""
"The new syntax allows declaring :class:`~typing.TypeVarTuple` and :class:"
"`~typing.ParamSpec` parameters, as well as :class:`~typing.TypeVar` "
"parameters with bounds or constraints::"
msgstr ""
"A nova sintaxe permite declarar os parâmetros :class:`~typing.TypeVarTuple` "
"e :class:`~typing.ParamSpec`, bem como os parâmetros :class:`~typing."
"TypeVar` com limites ou restrições::"

#: ../../whatsnew/3.12.rst:214
msgid ""
"type IntFunc[**P] = Callable[P, int]  # ParamSpec\n"
"type LabeledTuple[*Ts] = tuple[str, *Ts]  # TypeVarTuple\n"
"type HashableSequence[T: Hashable] = Sequence[T]  # TypeVar with bound\n"
"type IntOrStrSequence[T: (int, str)] = Sequence[T]  # TypeVar with "
"constraints"
msgstr ""
"type IntFunc[**P] = Callable[P, int]  # ParamSpec\n"
"type LabeledTuple[*Ts] = tuple[str, *Ts]  # TypeVarTuple\n"
"type HashableSequence[T: Hashable] = Sequence[T]  # TypeVar com vínculo\n"
"type IntOrStrSequence[T: (int, str)] = Sequence[T]  # TypeVar com restrições"

#: ../../whatsnew/3.12.rst:219
msgid ""
"The value of type aliases and the bound and constraints of type variables "
"created through this syntax are evaluated only on demand (see :ref:`lazy "
"evaluation <lazy-evaluation>`). This means type aliases are able to refer to "
"other types defined later in the file."
msgstr ""
"O valor dos apelidos de tipo e os limites e restrições das variáveis de tipo "
"criadas por meio dessa sintaxe são avaliados somente sob demanda (consulte :"
"ref:`avaliação preguiçosa <lazy-evaluation>`). Isso significa que os "
"apelidos de tipo podem se referir a outros tipos definidos posteriormente no "
"arquivo."

#: ../../whatsnew/3.12.rst:224
msgid ""
"Type parameters declared through a type parameter list are visible within "
"the scope of the declaration and any nested scopes, but not in the outer "
"scope. For example, they can be used in the type annotations for the methods "
"of a generic class or in the class body. However, they cannot be used in the "
"module scope after the class is defined. See :ref:`type-params` for a "
"detailed description of the runtime semantics of type parameters."
msgstr ""
"Os parâmetros de tipo declarados por meio de uma lista de parâmetros de tipo "
"são visíveis no escopo da declaração e em quaisquer escopos aninhados, mas "
"não no escopo externo. Por exemplo, eles podem ser usados nas anotações de "
"tipo para os métodos de uma classe genérica ou no corpo da classe. "
"Entretanto, não podem ser usadas no escopo do módulo depois que a classe é "
"definida. Consulte :ref:`type-params` para obter uma descrição detalhada da "
"semântica de tempo de execução dos parâmetros de tipo."

#: ../../whatsnew/3.12.rst:231
msgid ""
"In order to support these scoping semantics, a new kind of scope is "
"introduced, the :ref:`annotation scope <annotation-scopes>`. Annotation "
"scopes behave for the most part like function scopes, but interact "
"differently with enclosing class scopes. In Python 3.13, :term:`annotations "
"<annotation>` will also be evaluated in annotation scopes."
msgstr ""
"Para dar suporte a essa semântica de escopo, um novo tipo de escopo é "
"introduzido, o :ref:`escopo de anotação <annotation-scopes>`. Os escopos de "
"anotação se comportam, em sua maior parte, como escopos de função, mas "
"interagem de forma diferente com os escopos de classe. No Python 3.13, :term:"
"`anotações <annotation>` também serão avaliadas em escopos de anotação."

#: ../../whatsnew/3.12.rst:237
msgid "See :pep:`695` for more details."
msgstr "Consulte :pep:`695` para obter mais detalhes."

#: ../../whatsnew/3.12.rst:239
msgid ""
"(PEP written by Eric Traut. Implementation by Jelle Zijlstra, Eric Traut, "
"and others in :gh:`103764`.)"
msgstr ""
"(PEP escrita por Eric Traut. Implementação por Jelle Zijlstra, Eric Traut e "
"outros em :gh:`103764`)."

#: ../../whatsnew/3.12.rst:245
msgid "PEP 701: Syntactic formalization of f-strings"
msgstr "PEP 701: Formalização sintática de f-strings"

#: ../../whatsnew/3.12.rst:247
msgid ""
":pep:`701` lifts some restrictions on the usage of :term:`f-strings <f-"
"string>`. Expression components inside f-strings can now be any valid Python "
"expression, including strings reusing the same quote as the containing f-"
"string, multi-line expressions, comments, backslashes, and unicode escape "
"sequences. Let's cover these in detail:"
msgstr ""
":pep:`701` resolve algumas restrições no uso de :term:`f-strings <f-"
"string>`. Componentes de expressão dentro de f-strings agora podem ser "
"qualquer expressão válida do Python, incluindo strings reutilizando a mesma "
"aspa que a f-string contida,  expressões multi-linhas, comentários, barras "
"invertidas e sequências de escape unicode. Vamos cobri-los em detalhes:"

#: ../../whatsnew/3.12.rst:253
msgid ""
"Quote reuse: in Python 3.11, reusing the same quotes as the enclosing f-"
"string raises a :exc:`SyntaxError`, forcing the user to either use other "
"available quotes (like using double quotes or triple quotes if the f-string "
"uses single quotes). In Python 3.12, you can now do things like this:"
msgstr ""
"Reuso de aspas: no Python 3.11, reusar as mesmas aspas que a f-string que "
"contém levanta um :exc:`SyntaxError`, forçando o usuário a usar outras aspas "
"disponíveis (como usar aspas duplas ou triplas se a f-string usa aspas "
"simples). No Python 3.12, agora você pode fazer coisas como esta:"

#: ../../whatsnew/3.12.rst:262
msgid ""
"Note that before this change there was no explicit limit in how f-strings "
"can be nested, but the fact that string quotes cannot be reused inside the "
"expression component of f-strings made it impossible to nest f-strings "
"arbitrarily. In fact, this is the most nested f-string that could be written:"
msgstr ""
"Observe que, antes dessa alteração, não havia limite explícito de como f-"
"strings podem ser aninhadas, mas o fato de as aspas de string não poderem "
"ser reusadas dentro do componente de expressão de f-strings tornava "
"impossível aninhar f-strings arbitrariamente. Na verdade, esta é a f-string "
"mais aninhada que poderia ser escrita:"

#: ../../whatsnew/3.12.rst:270
msgid ""
"As now f-strings can contain any valid Python expression inside expression "
"components, it is now possible to nest f-strings arbitrarily:"
msgstr ""
"Como agora f-strings podem conter qualquer expressão Python válida dentro de "
"componentes de expressão, agora é possível aninhar f-strings arbitrariamente:"

#: ../../whatsnew/3.12.rst:276
msgid ""
"Multi-line expressions and comments: In Python 3.11, f-string expressions "
"must be defined in a single line, even if the expression within the f-string "
"could normally span multiple lines (like literal lists being defined over "
"multiple lines), making them harder to read. In Python 3.12 you can now "
"define f-strings spanning multiple lines, and add inline comments:"
msgstr ""
"Expressões e comentários multilinhas: no Python 3.11, as expressões f-string "
"devem ser definidas em uma única linha, ainda que a expressão dentro de f-"
"string externas possa normalmente abranger várias linhas (como listas "
"literais sendo definidas em várias linhas), tornando-as mais difíceis de "
"ler. No Python 3.12, agora você pode definir f-strings abrangendo várias "
"linhas e adicionar comentários inline:"

#: ../../whatsnew/3.12.rst:290
msgid ""
"Backslashes and unicode characters: before Python 3.12 f-string expressions "
"couldn't contain any ``\\`` character. This also affected unicode :ref:"
"`escape sequences <escape-sequences>` (such as ``\\N{snowman}``) as these "
"contain the ``\\N`` part that previously could not be part of expression "
"components of f-strings. Now, you can define expressions like this:"
msgstr ""
"Contrabarra e caracteres unicode: antes do Python 3.12, as expressões f-"
"string não podiam conter nenhum caractere ``\\``. Isso também afetou as :ref:"
"`sequências de escape <escape-sequences>` unicode (como ``\\N{snowman}``), "
"pois elas contêm a parte ``\\N`` que anteriormente não podia fazer parte dos "
"componentes de expressão de f-strings. Agora, você pode definir expressões "
"como esta:"

#: ../../whatsnew/3.12.rst:303
msgid "See :pep:`701` for more details."
msgstr "Veja :pep:`701` para mais detalhes."

#: ../../whatsnew/3.12.rst:305
msgid ""
"As a positive side-effect of how this feature has been implemented (by "
"parsing f-strings with :pep:`the PEG parser <617>`), now error messages for "
"f-strings are more precise and include the exact location of the error. For "
"example, in Python 3.11, the following f-string raises a :exc:`SyntaxError`:"
msgstr ""
"Como um efeito colateral positivo de como esse recurso foi implementado "
"(analisando f-strings com o :pep:`analisador GASE ou PEG <617>`), agora as "
"mensagens de erro para f-strings são mais precisas e incluem o local exato "
"do erro. Por exemplo, no Python 3.11, a seguinte f-string levanta um :exc:"
"`SyntaxError`:"

#: ../../whatsnew/3.12.rst:310
msgid ""
">>> my_string = f\"{x z y}\" + f\"{1 + 1}\"\n"
"  File \"<stdin>\", line 1\n"
"    (x z y)\n"
"     ^^^\n"
"SyntaxError: f-string: invalid syntax. Perhaps you forgot a comma?"
msgstr ""
">>> my_string = f\"{x z y}\" + f\"{1 + 1}\"\n"
"  File \"<stdin>\", line 1\n"
"    (x z y)\n"
"     ^^^\n"
"SyntaxError: f-string: invalid syntax. Perhaps you forgot a comma?"

#: ../../whatsnew/3.12.rst:318
msgid ""
"but the error message doesn't include the exact location of the error within "
"the line and also has the expression artificially surrounded by parentheses. "
"In Python 3.12, as f-strings are parsed with the PEG parser, error messages "
"can be more precise and show the entire line:"
msgstr ""
"mas a mensagem de erro não inclui o local exato do erro dentro da linha e "
"também tem a expressão artificialmente cercada por parênteses. No Python "
"3.12, como as f-strings são analisadas com o analisador GASE, as mensagens "
"de erro podem ser mais precisas e mostrar a linha inteira:"

#: ../../whatsnew/3.12.rst:322
msgid ""
">>> my_string = f\"{x z y}\" + f\"{1 + 1}\"\n"
"  File \"<stdin>\", line 1\n"
"    my_string = f\"{x z y}\" + f\"{1 + 1}\"\n"
"                   ^^^\n"
"SyntaxError: invalid syntax. Perhaps you forgot a comma?"
msgstr ""
">>> minha_string = f\"{x z y}\" + f\"{1 + 1}\"\n"
"  File \"<stdin>\", line 1\n"
"    minha_string = f\"{x z y}\" + f\"{1 + 1}\"\n"
"                   ^^^\n"
"SyntaxError: invalid syntax. Perhaps you forgot a comma?"

#: ../../whatsnew/3.12.rst:330
msgid ""
"(Contributed by Pablo Galindo, Batuhan Taskaya, Lysandros Nikolaou, Cristián "
"Maureira-Fredes and Marta Gómez in :gh:`102856`. PEP written by Pablo "
"Galindo, Batuhan Taskaya, Lysandros Nikolaou and Marta Gómez)."
msgstr ""
"(Contribuição de Pablo Galindo, Batuhan Taskaya, Lysandros Nikolaou, "
"Cristián Maureira-Fredes e Marta Gómez em :gh:`102856`. PEP escrito por "
"Pablo Galindo, Batuhan Taskaya, Lysandros Nikolaou e Marta Gómez)."

#: ../../whatsnew/3.12.rst:337
msgid "PEP 684: A Per-Interpreter GIL"
msgstr "PEP 684: Uma GIL por interpretador"

#: ../../whatsnew/3.12.rst:339
msgid ""
":pep:`684` introduces a per-interpreter :term:`GIL <global interpreter "
"lock>`, so that sub-interpreters may now be created with a unique GIL per "
"interpreter. This allows Python programs to take full advantage of multiple "
"CPU cores. This is currently only available through the C-API, though a "
"Python API is :pep:`anticipated for 3.13 <554>`."
msgstr ""
"A :pep:`684` introduz uma :term:`GIL <global interpreter lock>` por "
"interpretador, para que subinterpretadores possam agora ser criados com uma "
"GIL único por interpretador. Isso permite que programas Python aproveitem ao "
"máximo vários núcleos de CPU. Isso está atualmente disponível apenas por "
"meio da API C, embora uma API Python seja :pep:`esperada para 3.13 <554>`."

#: ../../whatsnew/3.12.rst:345
msgid ""
"Use the new :c:func:`Py_NewInterpreterFromConfig` function to create an "
"interpreter with its own GIL:"
msgstr ""
"Use a nova função :c:func:`Py_NewInterpreterFromConfig` para criar um "
"interpretador com sua própria GIL:"

#: ../../whatsnew/3.12.rst:348
msgid ""
"PyInterpreterConfig config = {\n"
"    .check_multi_interp_extensions = 1,\n"
"    .gil = PyInterpreterConfig_OWN_GIL,\n"
"};\n"
"PyThreadState *tstate = NULL;\n"
"PyStatus status = Py_NewInterpreterFromConfig(&tstate, &config);\n"
"if (PyStatus_Exception(status)) {\n"
"    return -1;\n"
"}\n"
"/* The new interpreter is now active in the current thread. */"
msgstr ""
"PyInterpreterConfig config = {\n"
"    .check_multi_interp_extensions = 1,\n"
"    .gil = PyInterpreterConfig_OWN_GIL,\n"
"};\n"
"PyThreadState *tstate = NULL;\n"
"PyStatus status = Py_NewInterpreterFromConfig(&tstate, &config);\n"
"if (PyStatus_Exception(status)) {\n"
"    return -1;\n"
"}\n"
"/* O novo interpretador agora está ativo na atual thread. */"

#: ../../whatsnew/3.12.rst:361
msgid ""
"For further examples how to use the C-API for sub-interpreters with a per-"
"interpreter GIL, see :source:`Modules/_xxsubinterpretersmodule.c`."
msgstr ""
"Para obter mais exemplos de como usar a API C para subinterpretadores com "
"uma GIL por interpretador, consulte :source:`Modules/"
"_xxsubinterpretersmodule.c`."

#: ../../whatsnew/3.12.rst:364
msgid "(Contributed by Eric Snow in :gh:`104210`, etc.)"
msgstr "(Contribuição de Eric Snow em :gh:`104210`, etc.)"

#: ../../whatsnew/3.12.rst:369
msgid "PEP 669: Low impact monitoring for CPython"
msgstr "PEP 669: Monitoramento de baixo impacto para CPython"

#: ../../whatsnew/3.12.rst:371
msgid ""
":pep:`669` defines a new :mod:`API <sys.monitoring>` for profilers, "
"debuggers, and other tools to monitor events in CPython. It covers a wide "
"range of events, including calls, returns, lines, exceptions, jumps, and "
"more. This means that you only pay for what you use, providing support for "
"near-zero overhead debuggers and coverage tools. See  :mod:`sys.monitoring` "
"for details."
msgstr ""
"A :pep:`669` define uma nova :mod:`API <sys.monitoring>` para perfis, "
"depuradores e outras ferramentas monitorarem eventos no CPython. Ela abrange "
"uma ampla gama de eventos, incluindo chamadas, retornos, linhas, exceções, "
"saltos e mais. Isso significa que você só paga pelo que usa, fornecendo "
"suporte para depuradores e ferramentas de cobertura com sobrecarga quase "
"zero. Veja :mod:`sys.monitoring` para mais detalhes."

#: ../../whatsnew/3.12.rst:379
msgid "(Contributed by Mark Shannon in :gh:`103082`.)"
msgstr "(Contribuição de Mark Shannon em :gh:`103082`.)"

#: ../../whatsnew/3.12.rst:384
msgid "PEP 688: Making the buffer protocol accessible in Python"
msgstr "PEP 688: Tornando o protocolo de buffer acessível no Python"

#: ../../whatsnew/3.12.rst:386
msgid ""
":pep:`688` introduces a way to use the :ref:`buffer protocol "
"<bufferobjects>` from Python code. Classes that implement the :meth:`~object."
"__buffer__` method are now usable as buffer types."
msgstr ""
"A :pep:`688` apresenta uma maneira de usar o :ref:`protocolo de buffer "
"<bufferobjects>` do código Python. As classes que implementam o método :meth:"
"`~object.__buffer__` agora podem ser usadas como tipos de buffer."

#: ../../whatsnew/3.12.rst:390
msgid ""
"The new :class:`collections.abc.Buffer` ABC provides a standard way to "
"represent buffer objects, for example in type annotations. The new :class:"
"`inspect.BufferFlags` enum represents the flags that can be used to "
"customize buffer creation. (Contributed by Jelle Zijlstra in :gh:`102500`.)"
msgstr ""
"O novo :class:`collections.abc.Buffer` ABC fornece uma maneira padrão de "
"representar objetos de buffer, por exemplo, em anotações de tipo. A nova "
"enumeração :class:`inspect.BufferFlags` representa os sinalizadores que "
"podem ser usados para personalizar a criação do buffer. (Contribuição de "
"Jelle Zijlstra em :gh:`102500`.)"

#: ../../whatsnew/3.12.rst:399
msgid "PEP 709: Comprehension inlining"
msgstr "PEP 709: Fazendo inline de compreensão"

#: ../../whatsnew/3.12.rst:401
msgid ""
"Dictionary, list, and set comprehensions are now inlined, rather than "
"creating a new single-use function object for each execution of the "
"comprehension. This speeds up execution of a comprehension by up to two "
"times. See :pep:`709` for further details."
msgstr ""
"As compreensões de dicionário, lista e conjunto agora estão embutidas, em "
"vez de criar um novo objeto função de uso único para cada execução da "
"compreensão. Isso acelera a execução de uma compreensão em até duas vezes. "
"Veja :pep:`709` para mais detalhes."

#: ../../whatsnew/3.12.rst:406
msgid ""
"Comprehension iteration variables remain isolated and don't overwrite a "
"variable of the same name in the outer scope, nor are they visible after the "
"comprehension. Inlining does result in a few visible behavior changes:"
msgstr ""
"As variáveis de iteração de compreensão permanecem isoladas e não "
"sobrescrevem uma variável de mesmo nome no escopo externo, nem são visíveis "
"após a compreensão. O uso de inlining resulta em algumas mudanças visíveis "
"de comportamento:"

#: ../../whatsnew/3.12.rst:410
msgid ""
"There is no longer a separate frame for the comprehension in tracebacks, and "
"tracing/profiling no longer shows the comprehension as a function call."
msgstr ""
"Não há mais um quadro separado para a compreensão em tracebacks (situação da "
"pilha de execução), e o rastreamento/criação de perfil não mostra mais a "
"compreensão como uma chamada de função."

#: ../../whatsnew/3.12.rst:412
msgid ""
"The :mod:`symtable` module will no longer produce child symbol tables for "
"each comprehension; instead, the comprehension's locals will be included in "
"the parent function's symbol table."
msgstr ""
"O módulo :mod:`symtable` não produzirá mais tabelas de símbolos filhos para "
"cada compreensão; em vez disso, os locais da compreensão serão incluídos na "
"tabela de símbolos da função pai."

#: ../../whatsnew/3.12.rst:415
msgid ""
"Calling :func:`locals` inside a comprehension now includes variables from "
"outside the comprehension, and no longer includes the synthetic ``.0`` "
"variable for the comprehension \"argument\"."
msgstr ""
"Chamar :func:`locals` dentro de uma compreensão agora inclui variáveis de "
"fora da compreensão e não inclui mais a variável sintética ``.0`` para o "
"\"argumento\" de compreensão."

#: ../../whatsnew/3.12.rst:418
msgid ""
"A comprehension iterating directly over ``locals()`` (e.g. ``[k for k in "
"locals()]``) may see \"RuntimeError: dictionary changed size during "
"iteration\" when run under tracing (e.g. code coverage measurement). This is "
"the same behavior already seen in e.g. ``for k in locals():``. To avoid the "
"error, first create a list of keys to iterate over: ``keys = list(locals()); "
"[k for k in keys]``."
msgstr ""
"Uma compreensão que itera diretamente sobre ``locals()`` (por exemplo, ``[k "
"for k in locals()]``) pode ver \"RuntimeError: dictionary changed size "
"during iteration\" quando executada sob rastreamento (por exemplo, medição "
"de cobertura de código). Esse é o mesmo comportamento já observado, por "
"exemplo, em ``for k in locals():``. Para evitar o erro, primeiro crie uma "
"lista de chaves para iterar: ``keys = list(locals()); [k for k in keys]``."

#: ../../whatsnew/3.12.rst:425
msgid "(Contributed by Carl Meyer and Vladimir Matveev in :pep:`709`.)"
msgstr "(Contribuição de Carl Meyer and Vladimir Matveev em :pep:`709`.)"

#: ../../whatsnew/3.12.rst:428
msgid "Improved Error Messages"
msgstr "Mensagens de erro melhoradas"

#: ../../whatsnew/3.12.rst:430
msgid ""
"Modules from the standard library are now potentially suggested as part of "
"the error messages displayed by the interpreter when a :exc:`NameError` is "
"raised to the top level. (Contributed by Pablo Galindo in :gh:`98254`.)"
msgstr ""
"Os módulos da biblioteca padrão agora são potencialmente sugeridos como "
"parte das mensagens de erro exibidas pelo interpretador quando uma exceção :"
"exc:`NameError` é levantada ao nível superior. (Contribuição de Pablo "
"Galindo em :gh:`98254`.)"

#: ../../whatsnew/3.12.rst:439
msgid ""
"Improve the error suggestion for :exc:`NameError` exceptions for instances. "
"Now if a :exc:`NameError` is raised in a method and the instance has an "
"attribute that's exactly equal to the name in the exception, the suggestion "
"will include ``self.<NAME>`` instead of the closest match in the method "
"scope. (Contributed by Pablo Galindo in :gh:`99139`.)"
msgstr ""
"Melhora a sugestão de erro para exceções :exc:`NameError` para instâncias. "
"Agora, se uma exceção :exc:`NameError` for levantada em um método e a "
"instância tiver um atributo que é exatamente igual ao nome na exceção, a "
"sugestão incluirá ``self.<NOME>`` em vez da correspondência mais próxima no "
"escopo do método. (Contribuição de Pablo Galindo em :gh:`99139`.)"

#: ../../whatsnew/3.12.rst:459
msgid ""
"Improve the :exc:`SyntaxError` error message when the user types ``import x "
"from y`` instead of ``from y import x``. (Contributed by Pablo Galindo in :"
"gh:`98931`.)"
msgstr ""
"Melhora a mensagem de erro de :exc:`SyntaxError` quando o usuário digita "
"``import x from y`` ao invés de ``from y import x``. (Contribuição de Pablo "
"Galindo em :gh:`98931`.)"

#: ../../whatsnew/3.12.rst:469
msgid ""
":exc:`ImportError` exceptions raised from failed ``from <module> import "
"<name>`` statements now include suggestions for the value of ``<name>`` "
"based on the available names in ``<module>``. (Contributed by Pablo Galindo "
"in :gh:`91058`.)"
msgstr ""
"Exceções :exc:`ImportError` levantadas a partir de instruções ``from "
"<módulo> import <nome>`` com falha agora incluem sugestões para o valor de "
"``<nome>`` com base nos nomes disponíveis em ``<módulo>``. (Contribuição de "
"Pablo Galindo em :gh:`91058`.)"

#: ../../whatsnew/3.12.rst:480
msgid "New Features Related to Type Hints"
msgstr "Novos recursos relacionados a dicas de tipo"

#: ../../whatsnew/3.12.rst:482
msgid ""
"This section covers major changes affecting :pep:`type hints <484>` and the :"
"mod:`typing` module."
msgstr ""
"Esta seção cobre as principais mudanças que afetam as dicas de tipo da :pep:"
"`dicas de tipo <484>` e o módulo :mod:`typing`."

#: ../../whatsnew/3.12.rst:488
msgid "PEP 692: Using ``TypedDict`` for more precise ``**kwargs`` typing"
msgstr ""
"PEP 692: Usando ``TypedDict`` para tipagem mais precisa de ``**kwargs``"

#: ../../whatsnew/3.12.rst:490
msgid ""
"Typing ``**kwargs`` in a function signature as introduced by :pep:`484` "
"allowed for valid annotations only in cases where all of the ``**kwargs`` "
"were of the same type."
msgstr ""
"A tipagem de ``**kwargs`` em uma assinatura de função conforme introduzido "
"por :pep:`484` permitia anotações válidas apenas nos casos em que todos os "
"``**kwargs`` eram do mesmo tipo."

#: ../../whatsnew/3.12.rst:494
msgid ""
":pep:`692` specifies a more precise way of typing ``**kwargs`` by relying on "
"typed dictionaries::"
msgstr ""
"A :pep:`692` especifica uma maneira mais precisa de definir tipos de "
"``**kwargs``, contando com dicionários tipados::"

#: ../../whatsnew/3.12.rst:497
msgid ""
"from typing import TypedDict, Unpack\n"
"\n"
"class Movie(TypedDict):\n"
"  name: str\n"
"  year: int\n"
"\n"
"def foo(**kwargs: Unpack[Movie]): ..."
msgstr ""

#: ../../whatsnew/3.12.rst:505
msgid "See :pep:`692` for more details."
msgstr "Veja :pep:`692` para mais detalhes."

#: ../../whatsnew/3.12.rst:507
msgid "(Contributed by Franek Magiera in :gh:`103629`.)"
msgstr "(Contribuição de Franek Magiera em :gh:`103629`.)"

#: ../../whatsnew/3.12.rst:512
msgid "PEP 698: Override Decorator for Static Typing"
msgstr "PEP 698: Substitui decorador para tipagem estática"

#: ../../whatsnew/3.12.rst:514
msgid ""
"A new decorator :func:`typing.override` has been added to the :mod:`typing` "
"module. It indicates to type checkers that the method is intended to "
"override a method in a superclass. This allows type checkers to catch "
"mistakes where a method that is intended to override something in a base "
"class does not in fact do so."
msgstr ""
"Um novo decorador :func:`typing.override` foi adicionado ao módulo :mod:"
"`typing`. Ele indica aos verificadores de tipo que o método se destina a "
"substituir um método em uma superclasse. Isso permite que os verificadores "
"de tipo detectem erros onde um método destinado a substituir algo em uma "
"classe base não o faz de fato."

#: ../../whatsnew/3.12.rst:520
msgid "Example::"
msgstr "Exemplo::"

#: ../../whatsnew/3.12.rst:522
msgid ""
"from typing import override\n"
"\n"
"class Base:\n"
"  def get_color(self) -> str:\n"
"    return \"blue\"\n"
"\n"
"class GoodChild(Base):\n"
"  @override  # ok: overrides Base.get_color\n"
"  def get_color(self) -> str:\n"
"    return \"yellow\"\n"
"\n"
"class BadChild(Base):\n"
"  @override  # type checker error: does not override Base.get_color\n"
"  def get_colour(self) -> str:\n"
"    return \"red\""
msgstr ""

#: ../../whatsnew/3.12.rst:538
msgid "See :pep:`698` for more details."
msgstr "Consulte :pep:`698` para obter mais detalhes."

#: ../../whatsnew/3.12.rst:540
msgid "(Contributed by Steven Troxler in :gh:`101561`.)"
msgstr "(Contribuição de Steven Troxler em :gh:`101561`.)"

#: ../../whatsnew/3.12.rst:543
msgid "Other Language Changes"
msgstr "Outras mudanças na linguagem"

#: ../../whatsnew/3.12.rst:545
msgid ""
"The parser now raises :exc:`SyntaxError` when parsing source code containing "
"null bytes. (Contributed by Pablo Galindo in :gh:`96670`.)"
msgstr ""
"O analisador sintático agora exibe :exc:`SyntaxError` ao analisar o código-"
"fonte que contém bytes nulos. (Contribuição de Pablo Galindo em :gh:`96670`.)"

#: ../../whatsnew/3.12.rst:548
msgid ""
"A backslash-character pair that is not a valid escape sequence now generates "
"a :exc:`SyntaxWarning`, instead of :exc:`DeprecationWarning`. For example, "
"``re.compile(\"\\d+\\.\\d+\")`` now emits a :exc:`SyntaxWarning` "
"(``\"\\d\"`` is an invalid escape sequence, use raw strings for regular "
"expression: ``re.compile(r\"\\d+\\.\\d+\")``). In a future Python version, :"
"exc:`SyntaxError` will eventually be raised, instead of :exc:"
"`SyntaxWarning`. (Contributed by Victor Stinner in :gh:`98401`.)"
msgstr ""
"Um par de caracteres de barra invertida que não seja uma sequência de escape "
"válida agora levanta uma exceção :exc:`SyntaxWarning`, em vez de :exc:"
"`DeprecationWarning`. Por exemplo, ``re.compile(\"\\d+\\.\\d+\")`` agora "
"emite um :exc:`SyntaxWarning` (``\"\\d\"`` é uma sequência de escape "
"inválida, use strings brutas para expressão regular: ``re.compile(r\"\\d+\\."
"\\d+\")``). Em uma versão futura do Python, :exc:`SyntaxError` acabará sendo "
"levantada, em vez de :exc:`SyntaxWarning`. (Contribuição de Victor Stinner "
"em :gh:`98401`.)"

#: ../../whatsnew/3.12.rst:557
msgid ""
"Octal escapes with value larger than ``0o377`` (ex: ``\"\\477\"``), "
"deprecated in Python 3.11, now produce a :exc:`SyntaxWarning`, instead of :"
"exc:`DeprecationWarning`. In a future Python version they will be eventually "
"a :exc:`SyntaxError`. (Contributed by Victor Stinner in :gh:`98401`.)"
msgstr ""
"Escapes octais com valor maior do que ``0o377`` (ex: ``\"\\477\"``), "
"descontinuados no Python 3.11, agora produzem um :exc:`SyntaxWarning`, em "
"vez de :exc:`DeprecationWarning`. Em uma versão futura do Python, eles serão "
"eventualmente um :exc:`SyntaxError`. (Contribuição de Victor Stinner em :gh:"
"`98401`.)"

#: ../../whatsnew/3.12.rst:563
msgid ""
"Variables used in the target part of comprehensions that are not stored to "
"can now be used in assignment expressions (``:=``). For example, in ``[(b := "
"1) for a, b.prop in some_iter]``, the assignment to ``b`` is now allowed. "
"Note that assigning to variables stored to in the target part of "
"comprehensions (like ``a``) is still disallowed, as per :pep:`572`. "
"(Contributed by Nikita Sobolev in :gh:`100581`.)"
msgstr ""
"As variáveis usadas na parte de destino das compreensões que não são "
"armazenadas agora podem ser usadas em expressões de atribuição (``:=``). Por "
"exemplo, em ``[(b := 1) for a, b.prop in some_iter]``, a atribuição a ``b`` "
"agora é permitida. Observe que a atribuição a variáveis armazenadas em na "
"parte de destino das compreensões (como ``a``) ainda não é permitida, "
"conforme :pep:`572`. (Contribuição de Nikita Sobolev em :gh:`100581`.)"

#: ../../whatsnew/3.12.rst:570
msgid ""
"Exceptions raised in a class or type's ``__set_name__`` method are no longer "
"wrapped by a :exc:`RuntimeError`. Context information is added to the "
"exception as a :pep:`678` note. (Contributed by Irit Katriel in :gh:`77757`.)"
msgstr ""
"As exceções levantadas em um método ``__set_name__`` de uma classe ou um "
"tipo não são mais envolvidas por um :exc:`RuntimeError`. As informações de "
"contexto são adicionadas à exceção como uma nota :pep:`678`. (Contribuição "
"de Irit Katriel em :gh:`77757`.)"

#: ../../whatsnew/3.12.rst:574
msgid ""
"When a ``try-except*`` construct handles the entire :exc:`ExceptionGroup` "
"and raises one other exception, that exception is no longer wrapped in an :"
"exc:`ExceptionGroup`. Also changed in version 3.11.4. (Contributed by Irit "
"Katriel in :gh:`103590`.)"
msgstr ""
"Quando uma construção ``try-except*`` lida com toda a :exc:`ExceptionGroup` "
"e levanta uma outra exceção, essa exceção não é mais envolvida em uma :exc:"
"`ExceptionGroup`. Também alterada na versão 3.11.4. (Contribuição de Irit "
"Katriel em :gh:`103590`.)"

#: ../../whatsnew/3.12.rst:579
msgid ""
"The Garbage Collector now runs only on the eval breaker mechanism of the "
"Python bytecode evaluation loop instead of object allocations. The GC can "
"also run when :c:func:`PyErr_CheckSignals` is called so C extensions that "
"need to run for a long time without executing any Python code also have a "
"chance to execute the GC periodically. (Contributed by Pablo Galindo in :gh:"
"`97922`.)"
msgstr ""
"O coletor de lixo agora é executado somente no mecanismo de quebra de "
"avaliação do laço de avaliação de bytecode do Python em vez de alocações de "
"objetos. O coletor de lixo também pode ser executado quando :c:func:"
"`PyErr_CheckSignals` é chamado, de modo que as extensões C que precisam ser "
"executadas por um longo período sem executar nenhum código Python também têm "
"a chance de executar o coletor de lixo periodicamente. (Contribuição de "
"Pablo Galindo em :gh:`97922`.)"

#: ../../whatsnew/3.12.rst:586
msgid ""
"All builtin and extension callables expecting boolean parameters now accept "
"arguments of any type instead of just :class:`bool` and :class:`int`. "
"(Contributed by Serhiy Storchaka in :gh:`60203`.)"
msgstr ""
"Todos os chamáveis internos e de extensão que esperam parâmetros booleanos "
"agora aceitam argumentos de qualquer tipo, em vez de apenas :class:`bool` e :"
"class:`int`. (Contribuição de Serhiy Storchaka em :gh:`60203`.)"

#: ../../whatsnew/3.12.rst:590
msgid ""
":class:`memoryview` now supports the half-float type (the \"e\" format "
"code). (Contributed by Donghee Na and Antoine Pitrou in :gh:`90751`.)"
msgstr ""
":class:`memoryview` agora oferece suporte ao tipo meio ponto flutuante (o "
"código de formato \"e\"). (Contribuição de Donghee Na e Antoine Pitrou em :"
"gh:`90751`.)"

#: ../../whatsnew/3.12.rst:593
msgid ""
":class:`slice` objects are now hashable, allowing them to be used as dict "
"keys and set items. (Contributed by Will Bradshaw, Furkan Onder, and Raymond "
"Hettinger in :gh:`101264`.)"
msgstr ""
"Objetos :class:`slice` agora são hasheáveis, permitindo que sejam usados "
"como chaves de dicionário e itens de conjunto. (Contribuição de Will "
"Bradshaw, Furkan Onder e Raymond Hettinger em :gh:`101264`.)"

#: ../../whatsnew/3.12.rst:596
msgid ""
":func:`sum` now uses Neumaier summation to improve accuracy and "
"commutativity when summing floats or mixed ints and floats. (Contributed by "
"Raymond Hettinger in :gh:`100425`.)"
msgstr ""
":func:`sum` agora usa a soma de Neumaier para melhorar a precisão e "
"comutatividade ao somar valores flutuantes ou misturas de ints e floats. "
"(Contribuição de Raymond Hettinger em :gh:`100425`.)"

#: ../../whatsnew/3.12.rst:600
msgid ""
":func:`ast.parse` now raises :exc:`SyntaxError` instead of :exc:`ValueError` "
"when parsing source code containing null bytes. (Contributed by Pablo "
"Galindo in :gh:`96670`.)"
msgstr ""
":func:`ast.parse` agora exibe :exc:`SyntaxError` em vez de :exc:`ValueError` "
"ao analisar o código-fonte que contém bytes nulos. (Contribuição de Pablo "
"Galindo em :gh:`96670`.)"

#: ../../whatsnew/3.12.rst:604
msgid ""
"The extraction methods in :mod:`tarfile`, and :func:`shutil.unpack_archive`, "
"have a new a *filter* argument that allows limiting tar features than may be "
"surprising or dangerous, such as creating files outside the destination "
"directory. See :ref:`tarfile extraction filters <tarfile-extraction-filter>` "
"for details. In Python 3.14, the default will switch to ``'data'``. "
"(Contributed by Petr Viktorin in :pep:`706`.)"
msgstr ""
"Os métodos de extração em :mod:`tarfile` e :func:`shutil.unpack_archive` têm "
"um novo argumento *filter* que permite limitar os recursos do tar que podem "
"ser surpreendentes ou perigosos, como a criação de arquivos fora do "
"diretório de destino. Consulte :ref:`arquivos de extração de de arquivos tar "
"<tarfile-extraction-filter>` para obter detalhes. No Python 3.14, o padrão "
"mudará para ``'data'``. (Contribuição de Petr Viktorin em :pep:`706`.)"

#: ../../whatsnew/3.12.rst:612
msgid ""
":class:`types.MappingProxyType` instances are now hashable if the underlying "
"mapping is hashable. (Contributed by Serhiy Storchaka in :gh:`87995`.)"
msgstr ""
"Instâncias de :class:`types.MappingProxyType` agora são hasheáveis se o "
"mapeamento subjacente for hasheável (Contribuição de Serhiy Storchaka em :gh:"
"`87995`.)"

#: ../../whatsnew/3.12.rst:616
msgid ""
"Add :ref:`support for the perf profiler <perf_profiling>` through the new "
"environment variable :envvar:`PYTHONPERFSUPPORT` and command-line option :"
"option:`-X perf <-X>`, as well as the new :func:`sys."
"activate_stack_trampoline`, :func:`sys.deactivate_stack_trampoline`, and :"
"func:`sys.is_stack_trampoline_active` functions. (Design by Pablo Galindo. "
"Contributed by Pablo Galindo and Christian Heimes with contributions from "
"Gregory P. Smith [Google] and Mark Shannon in :gh:`96123`.)"
msgstr ""
"Adiciona :ref:`suporte ao perfilador perf <perf_profiling>` por meio da nova "
"variável de ambiente :envvar:`PYTHONPERFSUPPORT` e da opção de linha de "
"comando :option:`-X perf <-X>`, bem como das novas funções :func:`sys."
"activate_stack_trampoline`, :func:`sys.deactivate_stack_trampoline` e :func:"
"`sys.is_stack_trampoline_active`. (Design de Pablo Galindo. Contribuição de "
"Pablo Galindo e Christian Heimes com contribuições de Gregory P. Smith "
"[Google] e Mark Shannon em :gh:`96123`)."

#: ../../whatsnew/3.12.rst:628
msgid "New Modules"
msgstr "Novos módulos"

#: ../../whatsnew/3.12.rst:630
msgid "None."
msgstr "Nenhum."

#: ../../whatsnew/3.12.rst:634
msgid "Improved Modules"
msgstr "Módulos melhorados"

#: ../../whatsnew/3.12.rst:637
msgid "array"
msgstr "array"

#: ../../whatsnew/3.12.rst:639
msgid ""
"The :class:`array.array` class now supports subscripting, making it a :term:"
"`generic type`. (Contributed by Jelle Zijlstra in :gh:`98658`.)"
msgstr ""
"A classe :class:`array.array` agora suporta subscrição, tornando-a um :term:"
"`tipo genérico`. (Contribuição de Jelle Zijlstra em :gh:`98658`.)"

#: ../../whatsnew/3.12.rst:643
msgid "asyncio"
msgstr "asyncio"

#: ../../whatsnew/3.12.rst:645
msgid ""
"The performance of writing to sockets in :mod:`asyncio` has been "
"significantly improved. ``asyncio`` now avoids unnecessary copying when "
"writing to sockets and uses :meth:`~socket.socket.sendmsg` if the platform "
"supports it. (Contributed by Kumar Aditya in :gh:`91166`.)"
msgstr ""
"O desempenho da gravação em soquetes no :mod:`asyncio` foi "
"significativamente aprimorado. O ``asyncio`` agora evita cópias "
"desnecessárias ao gravar em soquetes e usa o :meth:`~socket.socket.sendmsg` "
"se a plataforma o suportar. (Contribuição de Kumar Aditya em :gh:`91166`.)"

#: ../../whatsnew/3.12.rst:650
msgid ""
"Add :func:`asyncio.eager_task_factory` and :func:`asyncio."
"create_eager_task_factory` functions to allow opting an event loop in to "
"eager task execution, making some use-cases 2x to 5x faster. (Contributed by "
"Jacob Bower & Itamar Oren in :gh:`102853`, :gh:`104140`, and :gh:`104138`)"
msgstr ""
"Adiciona as funções :func:`asyncio.eager_task_factory` e :func:`asyncio."
"create_eager_task_factory` para permitir a opção de um laço de eventos na "
"execução de tarefas ansiosas, tornando alguns casos de uso de 2x a 5x mais "
"rápidos. (Contribuição de Jacob Bower e Itamar Oren em :gh:`102853`, :gh:"
"`104140` e :gh:`104138`)"

#: ../../whatsnew/3.12.rst:655
msgid ""
"On Linux, :mod:`asyncio` uses :class:`asyncio.PidfdChildWatcher` by default "
"if :func:`os.pidfd_open` is available and functional instead of :class:"
"`asyncio.ThreadedChildWatcher`. (Contributed by Kumar Aditya in :gh:`98024`.)"
msgstr ""
"No Linux, :mod:`asyncio` usa :class:`asyncio.PidfdChildWatcher` por padrão "
"se :func:`os.pidfd_open` estiver disponível e funcional em vez de :class:"
"`asyncio.ThreadedChildWatcher`. (Contribuição de Kumar Aditya em :gh:"
"`98024`.)"

#: ../../whatsnew/3.12.rst:660
msgid ""
"The event loop now uses the best available child watcher for each platform (:"
"class:`asyncio.PidfdChildWatcher` if supported and :class:`asyncio."
"ThreadedChildWatcher` otherwise), so manually configuring a child watcher is "
"not recommended. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""
"O laço de eventos agora usa o melhor observador filho disponível para cada "
"plataforma (:class:`asyncio.PidfdChildWatcher` se suportado e :class:"
"`asyncio.ThreadedChildWatcher` caso contrário), portanto, configurar "
"manualmente um observador filho não é recomendado. (Contribuição de Kumar "
"Aditya em :gh:`94597`.)"

#: ../../whatsnew/3.12.rst:666
msgid ""
"Add *loop_factory* parameter to :func:`asyncio.run` to allow specifying a "
"custom event loop factory. (Contributed by Kumar Aditya in :gh:`99388`.)"
msgstr ""
"Adiciona o parâmetro *loop_factory* a :func:`asyncio.run` para permitir a "
"especificação de uma fábrica de laço de eventos personalizada. (Contribuição "
"de Kumar Aditya em :gh:`99388`.)"

#: ../../whatsnew/3.12.rst:670
msgid ""
"Add C implementation of :func:`asyncio.current_task` for 4x-6x speedup. "
"(Contributed by Itamar Oren and Pranav Thulasiram Bhat in :gh:`100344`.)"
msgstr ""
"Adiciona implementação C de :func:`asyncio.current_task` para aceleração de "
"4x-6x. (Contribuição de Itamar Oren e Pranav Thulasiram Bhat em :gh:"
"`100344`.)"

#: ../../whatsnew/3.12.rst:673
msgid ""
":func:`asyncio.iscoroutine` now returns ``False`` for generators as :mod:"
"`asyncio` does not support legacy generator-based coroutines. (Contributed "
"by Kumar Aditya in :gh:`102748`.)"
msgstr ""
":func:`asyncio.iscoroutine` agora retorna ``False`` para geradores, pois :"
"mod:`asyncio` não tem suporte a corrotinas legadas baseadas em geradores. "
"(Contribuição de Kumar Aditya em :gh:`102748`.)"

#: ../../whatsnew/3.12.rst:677
msgid ""
":func:`asyncio.wait` and :func:`asyncio.as_completed` now accepts generators "
"yielding tasks. (Contributed by Kumar Aditya in :gh:`78530`.)"
msgstr ""
":func:`asyncio.wait` e :func:`asyncio.as_completed` agora aceita geradores "
"que produzem tarefas. (Contribuição de Kumar Aditya em :gh:`78530`.)"

#: ../../whatsnew/3.12.rst:682
msgid "calendar"
msgstr "calendar"

#: ../../whatsnew/3.12.rst:684
msgid ""
"Add enums :data:`calendar.Month` and :data:`calendar.Day` defining months of "
"the year and days of the week. (Contributed by Prince Roshan in :gh:"
"`103636`.)"
msgstr ""
"Adiciona enums :data:`calendar.Month` e :data:`calendar.Day` definindo meses "
"do ano e dias da semana. (Contribuição de Prince Roshan em :gh:`103636`.)"

#: ../../whatsnew/3.12.rst:689
msgid "csv"
msgstr "csv"

#: ../../whatsnew/3.12.rst:691
msgid ""
"Add :const:`csv.QUOTE_NOTNULL` and :const:`csv.QUOTE_STRINGS` flags to "
"provide finer grained control of ``None`` and empty strings by :class:`csv."
"writer` objects."
msgstr ""
"Adiciona os sinalizadores :const:`csv.QUOTE_NOTNULL` e :const:`csv."
"QUOTE_STRINGS` para fornecer um controle mais refinado de ``None`` e strings "
"vazias por objetos :class:`csv.writer`."

#: ../../whatsnew/3.12.rst:696
msgid "dis"
msgstr "dis"

#: ../../whatsnew/3.12.rst:698
msgid ""
"Pseudo instruction opcodes (which are used by the compiler but do not appear "
"in executable bytecode) are now exposed in the :mod:`dis` module. :opcode:"
"`HAVE_ARGUMENT` is still relevant to real opcodes, but it is not useful for "
"pseudo instructions. Use the new :data:`dis.hasarg` collection instead. "
"(Contributed by Irit Katriel in :gh:`94216`.)"
msgstr ""
"Opcodes de pseudo-instruções (que são usados pelo compilador, mas não "
"aparecem no bytecode executável) agora são expostos no módulo :mod:`dis`. :"
"opcode:`HAVE_ARGUMENT` ainda é relevante para opcodes reais, mas não é útil "
"para pseudo-instruções. Use a nova coleção :data:`dis.hasarg`. (Contribuição "
"de Irit Katriel em :gh:`94216`.)"

#: ../../whatsnew/3.12.rst:706
msgid ""
"Add the :data:`dis.hasexc` collection to signify instructions that set an "
"exception handler. (Contributed by Irit Katriel in :gh:`94216`.)"
msgstr ""
"Adiciona a coleção :data:`dis.hasexc` para indicar instruções que definem um "
"manipulador de exceções. (Contribuição de Irit Katriel em :gh:`94216`.)"

#: ../../whatsnew/3.12.rst:710
msgid "fractions"
msgstr "fractions"

#: ../../whatsnew/3.12.rst:712
msgid ""
"Objects of type :class:`fractions.Fraction` now support float-style "
"formatting. (Contributed by Mark Dickinson in :gh:`100161`.)"
msgstr ""
"Objetos do tipo :class:`fractions.Fraction` agora têm suporte a formatação "
"estilo float. (Contribuição de Mark Dickinson em :gh:`100161`.)"

#: ../../whatsnew/3.12.rst:716
msgid "importlib.resources"
msgstr "importlib.resources"

#: ../../whatsnew/3.12.rst:718
msgid ""
":func:`importlib.resources.as_file` now supports resource directories. "
"(Contributed by Jason R. Coombs in :gh:`97930`.)"
msgstr ""
":func:`importlib.resources.as_file` agora tem suporta a diretórios de "
"recursos. (Contribuição de Jason R. Coombs em :gh:`97930`.)"

#: ../../whatsnew/3.12.rst:721
msgid ""
"Rename first parameter of :func:`importlib.resources.files` to *anchor*. "
"(Contributed by Jason R. Coombs in :gh:`100598`.)"
msgstr ""
"Renomeia o primeiro parâmetro de :func:`importlib.resources.files` para "
"*anchor*. (Contribuição de Jason R. Coombs em :gh:`100598`.)"

#: ../../whatsnew/3.12.rst:725
msgid "inspect"
msgstr "inspect"

#: ../../whatsnew/3.12.rst:727
msgid ""
"Add :func:`inspect.markcoroutinefunction` to mark sync functions that return "
"a :term:`coroutine` for use with :func:`inspect.iscoroutinefunction`. "
"(Contributed by Carlton Gibson in :gh:`99247`.)"
msgstr ""
"Adiciona :func:`inspect.markcoroutinefunction` para marcar funções de "
"sincronização que retornam uma :term:`corrotina` para uso com :func:`inspect."
"iscoroutinefunction`. (Contribuição de Carlton Gibson em :gh:`99247`.)"

#: ../../whatsnew/3.12.rst:731
msgid ""
"Add :func:`inspect.getasyncgenstate` and :func:`inspect.getasyncgenlocals` "
"for determining the current state of asynchronous generators. (Contributed "
"by Thomas Krennwallner in :gh:`79940`.)"
msgstr ""
"Adiciona :func:`inspect.getasyncgenstate` e :func:`inspect."
"getasyncgenlocals` para determinar o estado atual dos geradores assíncronos. "
"(Contribuição de Thomas Krennwallner em :gh:`79940`.)"

#: ../../whatsnew/3.12.rst:735
msgid ""
"The performance of :func:`inspect.getattr_static` has been considerably "
"improved. Most calls to the function should be at least 2x faster than they "
"were in Python 3.11. (Contributed by Alex Waygood in :gh:`103193`.)"
msgstr ""
"O desempenho de :func:`inspect.getattr_static` foi consideravelmente "
"melhorado. A maioria das chamadas para a função deve ser pelo menos 2x mais "
"rápida do que no Python 3.11. (Contribuição de Alex Waygood em :gh:`103193`.)"

#: ../../whatsnew/3.12.rst:740
msgid "itertools"
msgstr "itertools"

#: ../../whatsnew/3.12.rst:742
msgid ""
"Add :func:`itertools.batched` for collecting into even-sized tuples where "
"the last batch may be shorter than the rest. (Contributed by Raymond "
"Hettinger in :gh:`98363`.)"
msgstr ""
"Adiciona :func:`itertools.batched` para coletar tuplas de tamanhos iguais, "
"onde o último lote pode ser menor que o resto. (Contribuição de Raymond "
"Hettinger em :gh:`98363`.)"

#: ../../whatsnew/3.12.rst:747
msgid "math"
msgstr "math"

#: ../../whatsnew/3.12.rst:749
msgid ""
"Add :func:`math.sumprod` for computing a sum of products. (Contributed by "
"Raymond Hettinger in :gh:`100485`.)"
msgstr ""
"Adiciona :func:`math.sumprod` para calcular uma soma de produtos. "
"(Contribuição de Raymond Hettinger em :gh:`100485`.)"

#: ../../whatsnew/3.12.rst:752
msgid ""
"Extend :func:`math.nextafter` to include a *steps* argument for moving up or "
"down multiple steps at a time. (Contributed by Matthias Goergens, Mark "
"Dickinson, and Raymond Hettinger in :gh:`94906`.)"
msgstr ""
"Estende :func:`math.nextafter` para incluir um argumento *steps* para subir "
"ou descer várias etapas ao mesmo tempo. (Contribuição de Matthias Goergens, "
"Mark Dickinson e Raymond Hettinger em :gh:`94906`.)"

#: ../../whatsnew/3.12.rst:757
msgid "os"
msgstr "os"

#: ../../whatsnew/3.12.rst:759
msgid ""
"Add :const:`os.PIDFD_NONBLOCK` to open a file descriptor for a process with :"
"func:`os.pidfd_open` in non-blocking mode. (Contributed by Kumar Aditya in :"
"gh:`93312`.)"
msgstr ""
"Adiciona :const:`os.PIDFD_NONBLOCK` para abrir um descritor de arquivo para "
"um processo com :func:`os.pidfd_open` em modo sem bloqueio. (Contribuição de "
"Kumar Aditya em :gh:`93312`.)"

#: ../../whatsnew/3.12.rst:763
msgid ""
":class:`os.DirEntry` now includes an :meth:`os.DirEntry.is_junction` method "
"to check if the entry is a junction. (Contributed by Charles Machalow in :gh:"
"`99547`.)"
msgstr ""
":class:`os.DirEntry` agora inclui um método :meth:`os.DirEntry.is_junction` "
"para verificar se a entrada é uma junção. (Contribuição de Charles Machalow "
"em :gh:`99547`.)"

#: ../../whatsnew/3.12.rst:767
msgid ""
"Add :func:`os.listdrives`, :func:`os.listvolumes` and :func:`os.listmounts` "
"functions on Windows for enumerating drives, volumes and mount points. "
"(Contributed by Steve Dower in :gh:`102519`.)"
msgstr ""
"Adiciona funções :func:`os.listdrives`, :func:`os.listvolumes` e :func:`os."
"listmounts` no Windows para enumerar unidades, volumes e pontos de montagem. "
"(Contribuição de Steve Dower em :gh:`102519`.)"

#: ../../whatsnew/3.12.rst:771
msgid ""
":func:`os.stat` and :func:`os.lstat` are now more accurate on Windows. The "
"``st_birthtime`` field will now be filled with the creation time of the "
"file, and ``st_ctime`` is deprecated but still contains the creation time "
"(but in the future will return the last metadata change, for consistency "
"with other platforms). ``st_dev`` may be up to 64 bits and ``st_ino`` up to "
"128 bits depending on your file system, and ``st_rdev`` is always set to "
"zero rather than incorrect values. Both functions may be significantly "
"faster on newer releases of Windows. (Contributed by Steve Dower in :gh:"
"`99726`.)"
msgstr ""
":func:`os.stat` e :func:`os.lstat` agora são mais precisos no Windows. O "
"campo ``st_birthtime`` agora será preenchido com a hora de criação do "
"arquivo, e ``st_ctime`` foi descontinuado, mas ainda contém a hora de "
"criação (mas no futuro vai retornar a última alteração de metadados, para "
"consistência com outras plataformas ). ``st_dev`` pode ter até 64 bits e "
"``st_ino`` até 128 bits dependendo do seu sistema de arquivos, e ``st_rdev`` "
"é sempre definido como zero em vez de valores incorretos. Ambas as funções "
"podem ser significativamente mais rápidas nas lançamentos mais recentes do "
"Windows. (Contribuição de Steve Dower em :gh:`99726`.)"

#: ../../whatsnew/3.12.rst:781
msgid ""
"As of 3.12.4, :func:`os.mkdir` and :func:`os.makedirs` on Windows now "
"support passing a *mode* value of ``0o700`` to apply access control to the "
"new directory. This implicitly affects :func:`tempfile.mkdtemp` and is a "
"mitigation for :cve:`2024-4030`. Other values for *mode* continue to be "
"ignored. (Contributed by Steve Dower in :gh:`118486`.)"
msgstr ""

#: ../../whatsnew/3.12.rst:789
msgid "os.path"
msgstr "os.path"

#: ../../whatsnew/3.12.rst:791
msgid ""
"Add :func:`os.path.isjunction` to check if a given path is a junction. "
"(Contributed by Charles Machalow in :gh:`99547`.)"
msgstr ""
"Adiciona :func:`os.path.isjunction` para verificar se um determinado caminho "
"é uma junção. (Contribuição de Charles Machalow em :gh:`99547`.)"

#: ../../whatsnew/3.12.rst:794
msgid ""
"Add :func:`os.path.splitroot` to split a path into a triad ``(drive, root, "
"tail)``. (Contributed by Barney Gale in :gh:`101000`.)"
msgstr ""
"Adiciona :func:`os.path.splitroot` para dividir um caminho em uma tríade "
"``(drive, root, tail)``. (Contribuição de Barney Gale em :gh:`101000`.)"

#: ../../whatsnew/3.12.rst:798
msgid "pathlib"
msgstr "pathlib"

#: ../../whatsnew/3.12.rst:800
msgid ""
"Add support for subclassing :class:`pathlib.PurePath` and :class:`pathlib."
"Path`, plus their Posix- and Windows-specific variants. Subclasses may "
"override the :meth:`pathlib.PurePath.with_segments` method to pass "
"information between path instances."
msgstr ""
"Adiciona suporte para fazer subclasse de :class:`pathlib.PurePath` e :class:"
"`pathlib.Path`, além de suas variantes específicas do Posix e do Windows. As "
"subclasses podem substituir o método :meth:`pathlib.PurePath.with_segments` "
"para passar informações entre instâncias de caminho."

#: ../../whatsnew/3.12.rst:805
msgid ""
"Add :meth:`pathlib.Path.walk` for walking the directory trees and generating "
"all file or directory names within them, similar to :func:`os.walk`. "
"(Contributed by Stanislav Zmiev in :gh:`90385`.)"
msgstr ""
"Adiciona :meth:`pathlib.Path.walk` para percorrer as árvores de diretórios e "
"gerar todos os nomes de arquivos ou diretórios dentro delas, semelhante a :"
"func:`os.walk`. (Contribuição de Stanislav Zmiev em :gh:`90385`.)"

#: ../../whatsnew/3.12.rst:809
msgid ""
"Add *walk_up* optional parameter to :meth:`pathlib.PurePath.relative_to` to "
"allow the insertion of ``..`` entries in the result; this behavior is more "
"consistent with :func:`os.path.relpath`. (Contributed by Domenico Ragusa in :"
"gh:`84538`.)"
msgstr ""
"Adiciona o parâmetro opcional *walk_up* a :meth:`pathlib.PurePath."
"relative_to` para permitir a inserção de entradas ``..`` no resultado; este "
"comportamento é mais consistente com :func:`os.path.relpath`. (Contribuição "
"de Domenico Ragusa em :gh:`84538`.)"

#: ../../whatsnew/3.12.rst:814
msgid ""
"Add :meth:`pathlib.Path.is_junction` as a proxy to :func:`os.path."
"isjunction`. (Contributed by Charles Machalow in :gh:`99547`.)"
msgstr ""
"Adiciona :meth:`pathlib.Path.is_junction` como proxy para :func:`os.path."
"isjunction`. (Contribuição de Charles Machalow em :gh:`99547`.)"

#: ../../whatsnew/3.12.rst:817
msgid ""
"Add *case_sensitive* optional parameter to :meth:`pathlib.Path.glob`, :meth:"
"`pathlib.Path.rglob` and :meth:`pathlib.PurePath.match` for matching the "
"path's case sensitivity, allowing for more precise control over the matching "
"process."
msgstr ""
"Adiciona o parâmetro opcional *case_sensitive* a :meth:`pathlib.Path.glob`, :"
"meth:`pathlib.Path.rglob` e :meth:`pathlib.PurePath.match` para fazer "
"correspondência com distinção entre maiúsculas e minúsculas do caminho, "
"permitindo uma precisão mais precisa controle sobre o processo de "
"correspondência."

#: ../../whatsnew/3.12.rst:822
msgid "pdb"
msgstr "pdb"

#: ../../whatsnew/3.12.rst:824
msgid ""
"Add convenience variables to hold values temporarily for debug session and "
"provide quick access to values like the current frame or the return value. "
"(Contributed by Tian Gao in :gh:`103693`.)"
msgstr ""
"Adiciona variáveis de conveniência para armazenar valores temporariamente "
"para a sessão de depuração e fornece acesso rápido a valores como o quadro "
"atual ou o valor de retorno. (Contribuição de Tian Gao em :gh:`103693`.)"

#: ../../whatsnew/3.12.rst:830
msgid "random"
msgstr "random"

#: ../../whatsnew/3.12.rst:832
msgid ""
"Add :func:`random.binomialvariate`. (Contributed by Raymond Hettinger in :gh:"
"`81620`.)"
msgstr ""
"Adiciona :func:`random.binomialvariate`. (Contribuição de Raymond Hettinger "
"em :gh:`81620`.)"

#: ../../whatsnew/3.12.rst:835
msgid ""
"Add a default of ``lambd=1.0`` to :func:`random.expovariate`. (Contributed "
"by Raymond Hettinger in :gh:`100234`.)"
msgstr ""
"Adiciona um padrão de ``lambd=1.0`` a :func:`random.expovariate`. "
"(Contribuição de Raymond Hettinger em :gh:`100234`.)"

#: ../../whatsnew/3.12.rst:839
msgid "shutil"
msgstr "shutil"

#: ../../whatsnew/3.12.rst:841
msgid ""
":func:`shutil.make_archive` now passes the *root_dir* argument to custom "
"archivers which support it. In this case it no longer temporarily changes "
"the current working directory of the process to *root_dir* to perform "
"archiving. (Contributed by Serhiy Storchaka in :gh:`74696`.)"
msgstr ""
":func:`shutil.make_archive` agora passa o argumento *root_dir* para "
"arquivadores personalizados que o suportam. Neste caso, ele não altera mais "
"temporariamente o diretório de trabalho atual do processo para *root_dir* "
"para realizar o arquivamento. (Contribuição de Serhiy Storchaka em :gh:"
"`74696`.)"

#: ../../whatsnew/3.12.rst:847
msgid ""
":func:`shutil.rmtree` now accepts a new argument *onexc* which is an error "
"handler like *onerror* but which expects an exception instance rather than a "
"*(typ, val, tb)* triplet. *onerror* is deprecated. (Contributed by Irit "
"Katriel in :gh:`102828`.)"
msgstr ""
":func:`shutil.rmtree` agora aceita um novo argumento *onexc* que é um "
"tratador de erros como *onerror* mas que espera uma instância de exceção em "
"vez de um trio *(typ, val, tb)*. *onerror* foi descontinuado. (Contribuição "
"de Irit Katriel em :gh:`102828`.)"

#: ../../whatsnew/3.12.rst:852
msgid ""
":func:`shutil.which` now consults the *PATHEXT* environment variable to find "
"matches within *PATH* on Windows even when the given *cmd* includes a "
"directory component. (Contributed by Charles Machalow in :gh:`103179`.)"
msgstr ""
":func:`shutil. which` agora consulta a variável de ambiente *PATHEXT* para "
"encontrar correspondências dentro de *PATH* no Windows mesmo quando o *cmd* "
"fornecido inclui um componente de diretório. (Contribuição de Charles "
"Machalow em :gh:`103179`.)"

#: ../../whatsnew/3.12.rst:857
msgid ""
":func:`shutil.which` will call ``NeedCurrentDirectoryForExePathW`` when "
"querying for executables on Windows to determine if the current working "
"directory should be prepended to the search path. (Contributed by Charles "
"Machalow in :gh:`103179`.)"
msgstr ""
":func:`shutil. which` chamará ``NeedCurrentDirectoryForExePathW`` ao "
"consultar executáveis no Windows para determinar se o diretório de trabalho "
"atual deve ser anexado ao caminho de pesquisa. (Contribuição de Charles "
"Machalow em :gh:`103179`.)"

#: ../../whatsnew/3.12.rst:862
msgid ""
":func:`shutil.which` will return a path matching the *cmd* with a component "
"from ``PATHEXT`` prior to a direct match elsewhere in the search path on "
"Windows. (Contributed by Charles Machalow in :gh:`103179`.)"
msgstr ""
":func:`shutil.which` vai retornar um caminho que corresponde ao *cmd* com um "
"componente de ``PATHEXT`` antes de uma correspondência direta em outro lugar "
"no caminho de pesquisa no Windows. (Contribuição de Charles Machalow em :gh:"
"`103179`.)"

#: ../../whatsnew/3.12.rst:868 ../../whatsnew/3.12.rst:1540
msgid "sqlite3"
msgstr "sqlite3"

#: ../../whatsnew/3.12.rst:870
msgid ""
"Add a :ref:`command-line interface <sqlite3-cli>`. (Contributed by Erlend E. "
"Aasland in :gh:`77617`.)"
msgstr ""
"Adiciona uma :ref:`interface de linha de comando <sqlite3-cli>`. "
"(Contribuição de Erlend E. Aasland em :gh:`77617`.)"

#: ../../whatsnew/3.12.rst:873
msgid ""
"Add the :attr:`sqlite3.Connection.autocommit` attribute to :class:`sqlite3."
"Connection` and the *autocommit* parameter to :func:`sqlite3.connect` to "
"control :pep:`249`-compliant :ref:`transaction handling <sqlite3-transaction-"
"control-autocommit>`. (Contributed by Erlend E. Aasland in :gh:`83638`.)"
msgstr ""
"Adiciona o atributo :attr:`sqlite3.Connection.autocommit` a :class:`sqlite3."
"Connection` e o parâmetro *autocommit* a :func:`sqlite3.connect` para "
"controlar a :pep:`249` compatível com :ref:`tratamento de transação <sqlite3-"
"transaction-control-autocommit>`. (Contribuição de Erlend E. Aasland em :gh:"
"`83638`.)"

#: ../../whatsnew/3.12.rst:880
msgid ""
"Add *entrypoint* keyword-only parameter to :meth:`sqlite3.Connection."
"load_extension`, for overriding the SQLite extension entry point. "
"(Contributed by Erlend E. Aasland in :gh:`103015`.)"
msgstr ""
"Adiciona o parâmetro somente-nomeado *entrypoint* a :meth:`sqlite3."
"Connection.load_extension`, para substituir o ponto de entrada da extensão "
"SQLite. (Contribuição de Erlend E. Aasland em :gh:`103015`.)"

#: ../../whatsnew/3.12.rst:885
msgid ""
"Add :meth:`sqlite3.Connection.getconfig` and :meth:`sqlite3.Connection."
"setconfig` to :class:`sqlite3.Connection` to make configuration changes to a "
"database connection. (Contributed by Erlend E. Aasland in :gh:`103489`.)"
msgstr ""
"Adiciona :meth:`sqlite3.Connection.getconfig` e :meth:`sqlite3.Connection."
"setconfig` a :class:`sqlite3.Connection` para fazer alterações na "
"configuração de uma conexão de banco de dados. (Contribuição de Erlend E. "
"Aasland em :gh:`103489`.)"

#: ../../whatsnew/3.12.rst:891
msgid "statistics"
msgstr "statistics"

#: ../../whatsnew/3.12.rst:893
msgid ""
"Extend :func:`statistics.correlation` to include as a ``ranked`` method for "
"computing the Spearman correlation of ranked data. (Contributed by Raymond "
"Hettinger in :gh:`95861`.)"
msgstr ""
"Estende :func:`statistics.correlation` para incluir como um método "
"``ranked`` para calcular a correlação de Spearman de dados classificados. "
"(Contribuição de Raymond Hettinger em :gh:`95861`.)"

#: ../../whatsnew/3.12.rst:898
msgid "sys"
msgstr "sys"

#: ../../whatsnew/3.12.rst:900
msgid ""
"Add the :mod:`sys.monitoring` namespace to expose the new :ref:`PEP 669 "
"<whatsnew312-pep669>` monitoring API. (Contributed by Mark Shannon in :gh:"
"`103082`.)"
msgstr ""
"Adiciona o espaço de nomes :mod:`sys.monitoring` para expor a nova API de "
"monitoramento :ref:`PEP 669 <whatsnew312-pep669>`. (Contribuição de Mark "
"Shannon em :gh:`103082`.)"

#: ../../whatsnew/3.12.rst:904
msgid ""
"Add :func:`sys.activate_stack_trampoline` and :func:`sys."
"deactivate_stack_trampoline` for activating and deactivating stack profiler "
"trampolines, and :func:`sys.is_stack_trampoline_active` for querying if "
"stack profiler trampolines are active. (Contributed by Pablo Galindo and "
"Christian Heimes with contributions from Gregory P. Smith [Google] and Mark "
"Shannon in :gh:`96123`.)"
msgstr ""
"Adiciona :func:`sys.activate_stack_trampoline` e :func:`sys."
"deactivate_stack_trampoline` para ativar e desativar trampolins do "
"perfilador de pilha e :func:`sys.is_stack_trampoline_active` para consultar "
"se os trampolins do perfilador de pilha estão ativos. (Contribuição de Pablo "
"Galindo e Christian Heimes com contribuições de Gregory P. Smith [Google] e "
"Mark Shannon em :gh:`96123`.)"

#: ../../whatsnew/3.12.rst:913
msgid ""
"Add :data:`sys.last_exc` which holds the last unhandled exception that was "
"raised (for post-mortem debugging use cases). Deprecate the three fields "
"that have the same information in its legacy form: :data:`sys.last_type`, :"
"data:`sys.last_value` and :data:`sys.last_traceback`. (Contributed by Irit "
"Katriel in :gh:`102778`.)"
msgstr ""
"Adiciona :data:`sys.last_exc` que contém a última exceção não tratada que "
"foi levantada (para casos de uso de depuração post-mortem). Descontinuar os "
"três campos que possuem as mesmas informações em seu formato legado: :data:"
"`sys.last_type`, :data:`sys.last_value` e :data:`sys.last_traceback`. "
"(Contribuição de Irit Katriel em :gh:`102778`.)"

#: ../../whatsnew/3.12.rst:919 ../../whatsnew/3.12.rst:1735
msgid ""
":func:`sys._current_exceptions` now returns a mapping from thread-id to an "
"exception instance, rather than to a ``(typ, exc, tb)`` tuple. (Contributed "
"by Irit Katriel in :gh:`103176`.)"
msgstr ""
":func:`sys._current_exceptions` agora retorna um mapeamento de thread-id "
"para uma instância de exceção, ao invés de uma tupla ``(typ, exc, tb)``. "
"(Contribuição de Irit Katriel em :gh:`103176`.)"

#: ../../whatsnew/3.12.rst:923
msgid ""
":func:`sys.setrecursionlimit` and :func:`sys.getrecursionlimit`. The "
"recursion limit now applies only to Python code. Builtin functions do not "
"use the recursion limit, but are protected by a different mechanism that "
"prevents recursion from causing a virtual machine crash."
msgstr ""
":func:`sys.setrecursionlimit` e :func:`sys.getrecursionlimit`. O limite de "
"recursão agora se aplica apenas ao código Python. As funções integradas não "
"usam o limite de recursão, mas são protegidas por um mecanismo diferente que "
"evita que a recursão cause uma falha na máquina virtual."

#: ../../whatsnew/3.12.rst:929
msgid "tempfile"
msgstr "tempfile"

#: ../../whatsnew/3.12.rst:931
msgid ""
"The :class:`tempfile.NamedTemporaryFile` function has a new optional "
"parameter *delete_on_close* (Contributed by Evgeny Zorin in :gh:`58451`.)"
msgstr ""
"A função :class:`tempfile.NamedTemporaryFile` tem um novo parâmetro opcional "
"*delete_on_close* (Contribuição de Evgeny Zorin em :gh:`58451`.)"

#: ../../whatsnew/3.12.rst:933
msgid ""
":func:`tempfile.mkdtemp` now always returns an absolute path, even if the "
"argument provided to the *dir* parameter is a relative path."
msgstr ""
":func:`tempfile.mkdtemp` agora sempre retorna um caminho absoluto, mesmo se "
"o argumento fornecido para o parâmetro *dir* for um caminho relativo."

#: ../../whatsnew/3.12.rst:935
msgid ""
"As of 3.12.4 on Windows, the default mode ``0o700`` used by :func:`tempfile."
"mkdtemp` now limits access to the new directory due to changes to :func:`os."
"mkdir`. This is a mitigation for :cve:`2024-4030`. (Contributed by Steve "
"Dower in :gh:`118486`.)"
msgstr ""

#: ../../whatsnew/3.12.rst:941
msgid "threading"
msgstr "threading"

#: ../../whatsnew/3.12.rst:943
msgid ""
"Add :func:`threading.settrace_all_threads` and :func:`threading."
"setprofile_all_threads` that allow to set tracing and profiling functions in "
"all running threads in addition to the calling one. (Contributed by Pablo "
"Galindo in :gh:`93503`.)"
msgstr ""
"Adiciona :func:`threading.settrace_all_threads` e :func:`threading."
"setprofile_all_threads` que permitem definir funções de rastreamento e "
"criação de perfil em todos os threads em execução além do que está chamando. "
"(Contribuição de Pablo Galindo em :gh:`93503`.)"

#: ../../whatsnew/3.12.rst:949
msgid "tkinter"
msgstr "tkinter"

#: ../../whatsnew/3.12.rst:951
msgid ""
"``tkinter.Canvas.coords()`` now flattens its arguments. It now accepts not "
"only coordinates as separate arguments (``x1, y1, x2, y2, ...``) and a "
"sequence of coordinates (``[x1, y1, x2, y2, ...]``), but also coordinates "
"grouped in pairs (``(x1, y1), (x2, y2), ...`` and ``[(x1, y1), (x2, "
"y2), ...]``), like ``create_*()`` methods. (Contributed by Serhiy Storchaka "
"in :gh:`94473`.)"
msgstr ""
"``tkinter.Canvas.coords()`` agora nivela seus argumentos. Agora ele aceita "
"não apenas coordenadas como argumentos separados (``x1, y1, x2, y2, ...``) e "
"uma sequência de coordenadas (``[x1, y1, x2, y2, ...]``) , mas também "
"coordenadas agrupadas em pares (``(x1, y1), (x2, y2), ...`` e ``[(x1, y1), "
"(x2, y2), ...]``) , como métodos ``create_*()``. (Contribuição de Serhiy "
"Storchaka em :gh:`94473`.)"

#: ../../whatsnew/3.12.rst:960
msgid "tokenize"
msgstr "tokenize"

#: ../../whatsnew/3.12.rst:962
msgid ""
"The :mod:`tokenize` module includes the changes introduced in :pep:`701`. "
"(Contributed by Marta Gómez Macías and Pablo Galindo in :gh:`102856`.) See :"
"ref:`whatsnew312-porting-to-python312` for more information on the changes "
"to the :mod:`tokenize` module."
msgstr ""
"O módulo :mod:`tokenize` inclui as mudanças introduzidas em :pep:`701`. "
"(Contribuição de Marta Gómez Macías e Pablo Galindo em :gh:`102856`.) Veja :"
"ref:`whatsnew312-porting-to-python312` para mais informações sobre as "
"mudanças no módulo :mod:`tokenize`."

#: ../../whatsnew/3.12.rst:968
msgid "types"
msgstr "types"

#: ../../whatsnew/3.12.rst:970
msgid ""
"Add :func:`types.get_original_bases` to allow for further introspection of :"
"ref:`user-defined-generics` when subclassed. (Contributed by James Hilton-"
"Balfe and Alex Waygood in :gh:`101827`.)"
msgstr ""
"Adiciona :func:`types.get_original_bases` para permitir uma introspecção "
"adicional de :ref:`user-defined-generics` quando subclassificado. "
"(Contribuição de James Hilton-Balfe e Alex Waygood em :gh:`101827`.)"

#: ../../whatsnew/3.12.rst:977
msgid "typing"
msgstr "typing"

#: ../../whatsnew/3.12.rst:979
msgid ""
":func:`isinstance` checks against :func:`runtime-checkable protocols <typing."
"runtime_checkable>` now use :func:`inspect.getattr_static` rather than :func:"
"`hasattr` to lookup whether attributes exist. This means that descriptors "
"and :meth:`~object.__getattr__` methods are no longer unexpectedly evaluated "
"during ``isinstance()`` checks against runtime-checkable protocols. However, "
"it may also mean that some objects which used to be considered instances of "
"a runtime-checkable protocol may no longer be considered instances of that "
"protocol on Python 3.12+, and vice versa. Most users are unlikely to be "
"affected by this change. (Contributed by Alex Waygood in :gh:`102433`.)"
msgstr ""
"As verificações de :func:`isinstance` com :func:`protocolos verificáveis em "
"tempo de execução <typing.runtime_checkable>` agora use :func:`inspect."
"getattr_static` em vez de :func:`hasattr` para verificar se existem "
"atributos. Isso significa que descritores e métodos :meth:`~object."
"__getattr__` não são mais avaliados inesperadamente durante verificações "
"``isinstance()`` em protocolos verificáveis em tempo de execução. No "
"entanto, também pode significar que alguns objetos que costumavam ser "
"considerados instâncias de um protocolo verificável em tempo de execução "
"podem não ser mais considerados instâncias desse protocolo no Python 3.12+ e "
"vice-versa. É improvável que a maioria dos usuários seja afetada por esta "
"mudança. (Contribuição de Alex Waygood em :gh:`102433`.)"

#: ../../whatsnew/3.12.rst:990
msgid ""
"The members of a runtime-checkable protocol are now considered \"frozen\" at "
"runtime as soon as the class has been created. Monkey-patching attributes "
"onto a runtime-checkable protocol will still work, but will have no impact "
"on :func:`isinstance` checks comparing objects to the protocol. For example::"
msgstr ""
"Os membros de um protocolo verificável em tempo de execução agora são "
"considerados \"congelados\" em tempo de execução assim que a classe é "
"criada. Fazer alterações em atributos em tempo de execução em um protocolo "
"verificável em tempo de execução ainda vai funcioanr, mas não terá impacto "
"nas verificações de :func:`isinstance` comparando objetos com o protocolo. "
"Por exemplo::"

#: ../../whatsnew/3.12.rst:995
msgid ""
">>> from typing import Protocol, runtime_checkable\n"
">>> @runtime_checkable\n"
"... class HasX(Protocol):\n"
"...     x = 1\n"
"...\n"
">>> class Foo: ...\n"
"...\n"
">>> f = Foo()\n"
">>> isinstance(f, HasX)\n"
"False\n"
">>> f.x = 1\n"
">>> isinstance(f, HasX)\n"
"True\n"
">>> HasX.y = 2\n"
">>> isinstance(f, HasX)  # unchanged, even though HasX now also has a \"y\" "
"attribute\n"
"True"
msgstr ""

#: ../../whatsnew/3.12.rst:1012
msgid ""
"This change was made in order to speed up ``isinstance()`` checks against "
"runtime-checkable protocols."
msgstr ""
"Esta mudança foi feita para acelerar as verificações de ``isinstance()`` em "
"protocolos verificáveis em tempo de execução."

#: ../../whatsnew/3.12.rst:1015
msgid ""
"The performance profile of :func:`isinstance` checks against :func:`runtime-"
"checkable protocols <typing.runtime_checkable>` has changed significantly. "
"Most ``isinstance()`` checks against protocols with only a few members "
"should be at least 2x faster than in 3.11, and some may be 20x faster or "
"more. However, ``isinstance()`` checks against protocols with many members "
"may be slower than in Python 3.11. (Contributed by Alex Waygood in :gh:"
"`74690` and :gh:`103193`.)"
msgstr ""
"O perfil de desempenho de verificações de :func:`isinstance` com :func:"
"`protocolos verificáveis em tempo de execução <typing.runtime_checkable>` "
"mudou significativamente. A maioria das verificações ``isinstance()`` a "
"esses protocolos com apenas alguns membros devem ser pelo menos 2x mais "
"rápidas que na versão 3.11, e algumas podem ser 20x mais rápidas ou mais. No "
"entanto, as verificações de ``isinstance()`` em protocolos com muito mais "
"membros podem ser mais lentas do que no Python 3.11. (Contribuição de Alex "
"Waygood em :gh:`74690` e :gh:`103193`.)"

#: ../../whatsnew/3.12.rst:1023
msgid ""
"All :data:`typing.TypedDict` and :data:`typing.NamedTuple` classes now have "
"the ``__orig_bases__`` attribute. (Contributed by Adrian Garcia Badaracco "
"in :gh:`103699`.)"
msgstr ""
"Todas as classes :data:`typing.TypedDict` e :data:`typing.NamedTuple` agora "
"possuem o atributo ``__orig_bases__``. (Contribuição de Adrian Garcia "
"Badaracco em :gh:`103699`.)"

#: ../../whatsnew/3.12.rst:1027
msgid ""
"Add ``frozen_default`` parameter to :func:`typing.dataclass_transform`. "
"(Contributed by Erik De Bonte in :gh:`99957`.)"
msgstr ""
"Adiciona o parâmetro ``frozen_default`` a :func:`typing."
"dataclass_transform`. (Contribuição de Erik De Bonte em :gh:`99957`.)"

#: ../../whatsnew/3.12.rst:1031
msgid "unicodedata"
msgstr "unicodedata"

#: ../../whatsnew/3.12.rst:1033
msgid ""
"The Unicode database has been updated to version 15.0.0. (Contributed by "
"Benjamin Peterson in :gh:`96734`)."
msgstr ""
"O banco de dados Unicode foi atualizado para a versão 15.0.0. (Contribuição "
"de Benjamin Peterson em :gh:`96734`)."

#: ../../whatsnew/3.12.rst:1037 ../../whatsnew/3.12.rst:1580
msgid "unittest"
msgstr "unittest"

#: ../../whatsnew/3.12.rst:1039
msgid ""
"Add a ``--durations`` command line option, showing the N slowest test cases::"
msgstr ""
"Adiciona uma opção de linha de comando ``--durations``, mostrando os N casos "
"de teste mais lentos::"

#: ../../whatsnew/3.12.rst:1041
msgid ""
"python3 -m unittest --durations=3 lib.tests.test_threading\n"
".....\n"
"Slowest test durations\n"
"----------------------------------------------------------------------\n"
"1.210s     test_timeout (Lib.test.test_threading.BarrierTests)\n"
"1.003s     test_default_timeout (Lib.test.test_threading.BarrierTests)\n"
"0.518s     test_timeout (Lib.test.test_threading.EventTests)\n"
"\n"
"(0.000 durations hidden.  Use -v to show these durations.)\n"
"----------------------------------------------------------------------\n"
"Ran 158 tests in 9.869s\n"
"\n"
"OK (skipped=3)"
msgstr ""

#: ../../whatsnew/3.12.rst:1055
msgid "(Contributed by Giampaolo Rodola in :gh:`48330`)"
msgstr "(Contribuição de Giampaolo Rodola em :gh:`48330`)"

#: ../../whatsnew/3.12.rst:1058
msgid "uuid"
msgstr "uuid"

#: ../../whatsnew/3.12.rst:1060
msgid ""
"Add a :ref:`command-line interface <uuid-cli>`. (Contributed by Adam Chhina "
"in :gh:`88597`.)"
msgstr ""
"Adiciona uma :ref:`interface de linha de comando <sqlite3-cli>`. "
"(Contribuição de Adam Chhina em :gh:`88597`.)"

#: ../../whatsnew/3.12.rst:1065
msgid "Optimizations"
msgstr "Otimizações"

#: ../../whatsnew/3.12.rst:1067
msgid ""
"Remove ``wstr`` and ``wstr_length`` members from Unicode objects. It reduces "
"object size by 8 or 16 bytes on 64bit platform. (:pep:`623`) (Contributed by "
"Inada Naoki in :gh:`92536`.)"
msgstr ""
"Remove os membros ``wstr`` e ``wstr_length`` dos objetos Unicode. Reduz o "
"tamanho do objeto em 8 ou 16 bytes na plataforma de 64 bits. (:pep:`623`) "
"(Contribuição de Inada Naoki em :gh:`92536`.)"

#: ../../whatsnew/3.12.rst:1071
msgid ""
"Add experimental support for using the BOLT binary optimizer in the build "
"process, which improves performance by 1-5%. (Contributed by Kevin "
"Modzelewski in :gh:`90536` and tuned by Donghee Na in :gh:`101525`)"
msgstr ""
"Adiciona suporte experimental para usar o otimizador binário BOLT no "
"processo de construção, o que melhora o desempenho de 1 a 5%. (Contribuição "
"de Kevin Modzelewski em :gh:`90536` e ajuste de Donghee Na em :gh:`101525`)"

#: ../../whatsnew/3.12.rst:1075
msgid ""
"Speed up the regular expression substitution (functions :func:`re.sub` and :"
"func:`re.subn` and corresponding :class:`!re.Pattern` methods) for "
"replacement strings containing group references by 2--3 times. (Contributed "
"by Serhiy Storchaka in :gh:`91524`.)"
msgstr ""
"Acelera a substituição de expressões regulares (funções :func:`re.sub` e :"
"func:`re.subn` e métodos :class:`!re.Pattern` correspondentes) para strings "
"de substituição contendo referências de grupo em 2 ou 3 vezes . "
"(Contribuição de Serhiy Storchaka em :gh:`91524`.)"

#: ../../whatsnew/3.12.rst:1080
msgid ""
"Speed up :class:`asyncio.Task` creation by deferring expensive string "
"formatting. (Contributed by Itamar Oren in :gh:`103793`.)"
msgstr ""
"Acelera a criação de :class:`asyncio.Task` adiando a dispendiosa formatação "
"de strings. (Contribuição de Itamar Oren em :gh:`103793`.)"

#: ../../whatsnew/3.12.rst:1083
msgid ""
"The :func:`tokenize.tokenize` and :func:`tokenize.generate_tokens` functions "
"are up to 64% faster as a side effect of the changes required to cover :pep:"
"`701` in the :mod:`tokenize` module. (Contributed by Marta Gómez Macías and "
"Pablo Galindo in :gh:`102856`.)"
msgstr ""
"As funções :func:`tokenize.tokenize` e :func:`tokenize.generate_tokens` são "
"até 64% mais rápidas como efeito colateral das mudanças necessárias para "
"cobrir :pep:`701` no módulo :mod:`tokenize` . (Contribuição de Marta Gómez "
"Macías e Pablo Galindo em :gh:`102856`.)"

#: ../../whatsnew/3.12.rst:1088
msgid ""
"Speed up :func:`super` method calls and attribute loads via the new :opcode:"
"`LOAD_SUPER_ATTR` instruction. (Contributed by Carl Meyer and Vladimir "
"Matveev in :gh:`103497`.)"
msgstr ""
"Acelera chamadas de métodos :func:`super` e carregamentos de atributos "
"através da nova instrução :opcode:`LOAD_SUPER_ATTR`. (Contribuição de Carl "
"Meyer e Vladimir Matveev em :gh:`103497`.)"

#: ../../whatsnew/3.12.rst:1094
msgid "CPython bytecode changes"
msgstr "Alterações de bytecode do CPython"

#: ../../whatsnew/3.12.rst:1096
msgid ""
"Remove the :opcode:`!LOAD_METHOD` instruction. It has been merged into :"
"opcode:`LOAD_ATTR`. :opcode:`LOAD_ATTR` will now behave like the old :opcode:"
"`!LOAD_METHOD` instruction if the low bit of its oparg is set. (Contributed "
"by Ken Jin in :gh:`93429`.)"
msgstr ""
"Remove a instrução :opcode:`!LOAD_METHOD`. Ela foi mesclada em :opcode:"
"`LOAD_ATTR`. :opcode:`LOAD_ATTR` agora se comportará como a antiga "
"instrução :opcode:`!LOAD_METHOD` se o bit inferior de seu oparg estiver "
"definido. (Contribuição de Ken Jin em :gh:`93429`.)"

#: ../../whatsnew/3.12.rst:1101
msgid ""
"Remove the :opcode:`!JUMP_IF_FALSE_OR_POP` and :opcode:`!"
"JUMP_IF_TRUE_OR_POP` instructions. (Contributed by Irit Katriel in :gh:"
"`102859`.)"
msgstr ""
"Remova as instruções :opcode:`!JUMP_IF_FALSE_OR_POP` e :opcode:`!"
"JUMP_IF_TRUE_OR_POP`. (Contribuição de Irit Katriel em :gh:`102859`.)"

#: ../../whatsnew/3.12.rst:1104
msgid ""
"Remove the :opcode:`!PRECALL` instruction. (Contributed by Mark Shannon in :"
"gh:`92925`.)"
msgstr ""
"Remove a instrução :opcode:`!PRECALL`. (Contribuição de Mark Shannon em :gh:"
"`92925`.)"

#: ../../whatsnew/3.12.rst:1107
msgid ""
"Add the :opcode:`BINARY_SLICE` and :opcode:`STORE_SLICE` instructions. "
"(Contributed by Mark Shannon in :gh:`94163`.)"
msgstr ""
"Adiciona as instruções :opcode:`BINARY_SLICE` e :opcode:`STORE_SLICE`. "
"(Contribuição de Mark Shannon em :gh:`94163`.)"

#: ../../whatsnew/3.12.rst:1110
msgid ""
"Add the :opcode:`CALL_INTRINSIC_1` instructions. (Contributed by Mark "
"Shannon in :gh:`99005`.)"
msgstr ""
"Adiciona as instruções :opcode:`CALL_INTRINSIC_1`. (Contribuição de Mark "
"Shannon em :gh:`99005`.)"

#: ../../whatsnew/3.12.rst:1113
msgid ""
"Add the :opcode:`CALL_INTRINSIC_2` instruction. (Contributed by Irit Katriel "
"in :gh:`101799`.)"
msgstr ""
"Adiciona a instrução :opcode:`CALL_INTRINSIC_2`. (Contribuição de Irit "
"Katriel em :gh:`101799`.)"

#: ../../whatsnew/3.12.rst:1116
msgid ""
"Add the :opcode:`CLEANUP_THROW` instruction. (Contributed by Brandt Bucher "
"in :gh:`90997`.)"
msgstr ""
"Adiciona a instrução :opcode:`CLEANUP_THROW`. (Contribuição de Brandt Bucher "
"em :gh:`90997`.)"

#: ../../whatsnew/3.12.rst:1119
msgid ""
"Add the :opcode:`!END_SEND` instruction. (Contributed by Mark Shannon in :gh:"
"`103082`.)"
msgstr ""
"Adiciona a instrução :opcode:`!END_SEND`. (Contribuição de Mark Shannon em :"
"gh:`103082`.)"

#: ../../whatsnew/3.12.rst:1122
msgid ""
"Add the :opcode:`LOAD_FAST_AND_CLEAR` instruction as part of the "
"implementation of :pep:`709`. (Contributed by Carl Meyer in :gh:`101441`.)"
msgstr ""
"Adiciona a instrução :opcode:`LOAD_FAST_AND_CLEAR` como parte da "
"implementação de :pep:`709`. (Contribuição de Carl Meyer em :gh:`101441`.)"

#: ../../whatsnew/3.12.rst:1125
msgid ""
"Add the :opcode:`LOAD_FAST_CHECK` instruction. (Contributed by Dennis "
"Sweeney in :gh:`93143`.)"
msgstr ""
"Adiciona a instrução :opcode:`LOAD_FAST_CHECK`. (Contribuição de Dennis "
"Sweeney em :gh:`93143`.)"

#: ../../whatsnew/3.12.rst:1128
msgid ""
"Add the :opcode:`LOAD_FROM_DICT_OR_DEREF`, :opcode:"
"`LOAD_FROM_DICT_OR_GLOBALS`, and :opcode:`LOAD_LOCALS` opcodes as part of "
"the implementation of :pep:`695`. Remove the :opcode:`!LOAD_CLASSDEREF` "
"opcode, which can be replaced with :opcode:`LOAD_LOCALS` plus :opcode:"
"`LOAD_FROM_DICT_OR_DEREF`. (Contributed by Jelle Zijlstra in :gh:`103764`.)"
msgstr ""
"Adiciona os opcodes :opcode:`LOAD_FROM_DICT_OR_DEREF`, :opcode:"
"`LOAD_FROM_DICT_OR_GLOBALS` e :opcode:`LOAD_LOCALS` como parte da "
"implementação da :pep:`695`. Remove o opcode :opcode:`!LOAD_CLASSDEREF`, que "
"pode ser substituído por :opcode:`LOAD_LOCALS` mais :opcode:"
"`LOAD_FROM_DICT_OR_DEREF`. (Contribuição de Jelle Zijlstra em :gh:`103764`.)"

#: ../../whatsnew/3.12.rst:1134
msgid ""
"Add the :opcode:`LOAD_SUPER_ATTR` instruction. (Contributed by Carl Meyer "
"and Vladimir Matveev in :gh:`103497`.)"
msgstr ""
"Adiciona a instrução :opcode:`LOAD_SUPER_ATTR`. (Contribuição de Carl Meyer "
"e Vladimir Matveev em :gh:`103497`.)"

#: ../../whatsnew/3.12.rst:1137
msgid ""
"Add the :opcode:`RETURN_CONST` instruction. (Contributed by Wenyang Wang in :"
"gh:`101632`.)"
msgstr ""
"Adiciona a instrução :opcode:`RETURN_CONST`. (Contribuição de Wenyang Wang "
"em :gh:`101632`.)"

#: ../../whatsnew/3.12.rst:1140
msgid "Demos and Tools"
msgstr "Ferramentas e daemons"

#: ../../whatsnew/3.12.rst:1142
msgid ""
"Remove the ``Tools/demo/`` directory which contained old demo scripts. A "
"copy can be found in the `old-demos project <https://github.com/gvanrossum/"
"old-demos>`_. (Contributed by Victor Stinner in :gh:`97681`.)"
msgstr ""
"Remove o diretório ``Tools/demo/`` que continha scripts antigos de "
"demonstração. Uma cópia pode ser encontrada no `projeto old-demos <https://"
"github.com/gvanrossum/old-demos>`_. (Contribuição de Victor Stinner em :gh:"
"`97681`.)"

#: ../../whatsnew/3.12.rst:1147
msgid ""
"Remove outdated example scripts of the ``Tools/scripts/`` directory. A copy "
"can be found in the `old-demos project <https://github.com/gvanrossum/old-"
"demos>`_. (Contributed by Victor Stinner in :gh:`97669`.)"
msgstr ""
"Remove scripts de exemplo desatualizados do diretório ``Tools/scripts/``. "
"Uma cópia pode ser encontrada no `projeto old-demos <https://github.com/"
"gvanrossum/old-demos>`_. (Contribuição de Victor Stinner em :gh:`97669`.)"

#: ../../whatsnew/3.12.rst:1154 ../../whatsnew/3.12.rst:2138
msgid "Deprecated"
msgstr "Descontinuados"

#: ../../whatsnew/3.12.rst:1156
#: ../../deprecations/pending-removal-in-3.14.rst:4
msgid ""
":mod:`argparse`: The *type*, *choices*, and *metavar* parameters of :class:`!"
"argparse.BooleanOptionalAction` are deprecated and will be removed in 3.14. "
"(Contributed by Nikita Sobolev in :gh:`92248`.)"
msgstr ""
":mod:`argparse`: Os parâmetros *type*, *choices* e *metavar* de :class:`!"
"argparse.BooleanOptionalAction` foram descontinuados e serão removidos na "
"versão 3.14. (Contribuição de Nikita Sobolev em :gh:`92248`.)"

#: ../../whatsnew/3.12.rst:1161
msgid ""
":mod:`ast`: The following :mod:`ast` features have been deprecated in "
"documentation since Python 3.8, now cause a :exc:`DeprecationWarning` to be "
"emitted at runtime when they are accessed or used, and will be removed in "
"Python 3.14:"
msgstr ""
":mod:`ast`: Os seguintes recursos :mod:`ast` foram descontinuados na "
"documentação desde Python 3.8, agora fazem com que um :exc:"
"`DeprecationWarning` seja emitido em tempo de execução quando eles são "
"acessados ou usados, e serão removidos no Python 3.14:"

#: ../../whatsnew/3.12.rst:1165
#: ../../deprecations/pending-removal-in-3.14.rst:13
msgid ":class:`!ast.Num`"
msgstr ":class:`!ast.Num`"

#: ../../whatsnew/3.12.rst:1166
#: ../../deprecations/pending-removal-in-3.14.rst:14
msgid ":class:`!ast.Str`"
msgstr ":class:`!ast.Str`"

#: ../../whatsnew/3.12.rst:1167
#: ../../deprecations/pending-removal-in-3.14.rst:15
msgid ":class:`!ast.Bytes`"
msgstr ":class:`!ast.Bytes`"

#: ../../whatsnew/3.12.rst:1168
#: ../../deprecations/pending-removal-in-3.14.rst:16
msgid ":class:`!ast.NameConstant`"
msgstr ":class:`!ast.NameConstant`"

#: ../../whatsnew/3.12.rst:1169
#: ../../deprecations/pending-removal-in-3.14.rst:17
msgid ":class:`!ast.Ellipsis`"
msgstr ":class:`!ast.Ellipsis`"

#: ../../whatsnew/3.12.rst:1171
#: ../../deprecations/pending-removal-in-3.14.rst:19
msgid ""
"Use :class:`ast.Constant` instead. (Contributed by Serhiy Storchaka in :gh:"
"`90953`.)"
msgstr ""
"Usa :class:`ast.Constant` em vez disso. (Contribuição de Serhiy Storchaka "
"em :gh:`90953`.)"

#: ../../whatsnew/3.12.rst:1174
#: ../../deprecations/pending-removal-in-3.14.rst:22
msgid ":mod:`asyncio`:"
msgstr ":mod:`asyncio`:"

#: ../../whatsnew/3.12.rst:1176
msgid ""
"The child watcher classes :class:`asyncio.MultiLoopChildWatcher`, :class:"
"`asyncio.FastChildWatcher`, :class:`asyncio.AbstractChildWatcher` and :class:"
"`asyncio.SafeChildWatcher` are deprecated and will be removed in Python "
"3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""
"As classes filhas do observador :class:`asyncio.MultiLoopChildWatcher`, :"
"class:`asyncio.FastChildWatcher`, :class:`asyncio.AbstractChildWatcher` e :"
"class:`asyncio.SafeChildWatcher` foram descontinuadas e serão removidas no "
"Python 3.14. (Contribuição de Kumar Aditya em :gh:`94597`.)"

#: ../../whatsnew/3.12.rst:1182
#: ../../deprecations/pending-removal-in-3.14.rst:30
msgid ""
":func:`asyncio.set_child_watcher`, :func:`asyncio.get_child_watcher`, :meth:"
"`asyncio.AbstractEventLoopPolicy.set_child_watcher` and :meth:`asyncio."
"AbstractEventLoopPolicy.get_child_watcher` are deprecated and will be "
"removed in Python 3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""
":func:`asyncio.set_child_watcher`, :func:`asyncio.get_child_watcher`, :meth:"
"`asyncio.AbstractEventLoopPolicy.set_child_watcher` e :meth:`asyncio."
"AbstractEventLoopPolicy.get_child_watcher` foram descontinuados e serão "
"removidos no Python 3.14. (Contribuição de Kumar Aditya em :gh:`94597`.)"

#: ../../whatsnew/3.12.rst:1188
#: ../../deprecations/pending-removal-in-3.14.rst:36
msgid ""
"The :meth:`~asyncio.get_event_loop` method of the default event loop policy "
"now emits a :exc:`DeprecationWarning` if there is no current event loop set "
"and it decides to create one. (Contributed by Serhiy Storchaka and Guido van "
"Rossum in :gh:`100160`.)"
msgstr ""
"O método :meth:`~asyncio.get_event_loop` da política de laço de eventos "
"padrão agora emite um :exc:`DeprecationWarning` se não houver nenhum laço de "
"eventos atual definido e decidir criar um. (Contribuição de Serhiy Storchaka "
"e Guido van Rossum em :gh:`100160`.)"

#: ../../whatsnew/3.12.rst:1193
#: ../../deprecations/pending-removal-in-future.rst:41
msgid ""
":mod:`calendar`: ``calendar.January`` and ``calendar.February`` constants "
"are deprecated and replaced by :data:`calendar.JANUARY` and :data:`calendar."
"FEBRUARY`. (Contributed by Prince Roshan in :gh:`103636`.)"
msgstr ""
":mod:`calendar`: As constantes ``calendar.January`` e ``calendar.February`` "
"foram descontinuadas e substituídas por :data:`calendar.JANUARY` e :data:"
"`calendar.FEBRUARY`. (Contribuição de Prince Roshan em :gh:`103636`.)"

#: ../../whatsnew/3.12.rst:1197
msgid ""
":mod:`collections.abc`: Deprecated :class:`collections.abc.ByteString`. "
"Prefer :class:`Sequence` or :class:`collections.abc.Buffer`. For use in "
"typing, prefer a union, like ``bytes | bytearray``, or :class:`collections."
"abc.Buffer`. (Contributed by Shantanu Jain in :gh:`91896`.)"
msgstr ""
":mod:`collections.abc`: :class:`collections.abc.ByteString` foi "
"descontinuado. Prefira :class:`Sequence` ou :class:`collections.abc.Buffer`. "
"Para uso em tipagem, prefira uma união, como ``bytes | bytearray`` ou :class:"
"`collections.abc.Buffer`. (Contribuição de Shantanu Jain em :gh:`91896`.)"

#: ../../whatsnew/3.12.rst:1202
msgid ""
":mod:`datetime`: :class:`datetime.datetime`'s :meth:`~datetime.datetime."
"utcnow` and :meth:`~datetime.datetime.utcfromtimestamp` are deprecated and "
"will be removed in a future version. Instead, use timezone-aware objects to "
"represent datetimes in UTC: respectively, call :meth:`~datetime.datetime."
"now` and :meth:`~datetime.datetime.fromtimestamp`  with the *tz* parameter "
"set to :const:`datetime.UTC`. (Contributed by Paul Ganssle in :gh:`103857`.)"
msgstr ""
":mod:`datetime`: :meth:`~datetime.datetime.utcnow` e :meth:`~datetime."
"datetime.utcfromtimestamp` da classe :class:`datetime.datetime` foram "
"descontinuados e serão removidos em uma versão futura. Em vez disso, use "
"objetos conscientes do fuso horário para representar datas e horas em UTC: "
"respectivamente, chame :meth:`~datetime.datetime.now` e :meth:`~datetime."
"datetime.fromtimestamp` com o parâmetro *tz* definido como :const:`datetime."
"UTC`. (Contribuição de Paul Ganssle em :gh:`103857`.)"

#: ../../whatsnew/3.12.rst:1210
msgid ""
":mod:`email`: Deprecate the *isdst* parameter in :func:`email.utils."
"localtime`. (Contributed by Alan Williams in :gh:`72346`.)"
msgstr ""
":mod:`email`: Descontinua o parâmetro *isdst* em :func:`email.utils."
"localtime`. (Contribuição de Alan Williams em :gh:`72346`.)"

#: ../../whatsnew/3.12.rst:1213
msgid ""
":mod:`importlib.abc`: Deprecated the following classes, scheduled for "
"removal in Python 3.14:"
msgstr ""
":mod:`importlib.abc`: Foram descontinuadas as seguintes classes, programadas "
"para remoção no Python 3.14:"

#: ../../whatsnew/3.12.rst:1216
#: ../../deprecations/pending-removal-in-3.14.rst:55
msgid ":class:`!importlib.abc.ResourceReader`"
msgstr ":class:`!importlib.abc.ResourceReader`"

#: ../../whatsnew/3.12.rst:1217
#: ../../deprecations/pending-removal-in-3.14.rst:56
msgid ":class:`!importlib.abc.Traversable`"
msgstr ":class:`!importlib.abc.Traversable`"

#: ../../whatsnew/3.12.rst:1218
#: ../../deprecations/pending-removal-in-3.14.rst:57
msgid ":class:`!importlib.abc.TraversableResources`"
msgstr ":class:`!importlib.abc.TraversableResources`"

#: ../../whatsnew/3.12.rst:1220
#: ../../deprecations/pending-removal-in-3.14.rst:59
msgid "Use :mod:`importlib.resources.abc` classes instead:"
msgstr "Em vez disso, use classes :mod:`importlib.resources.abc`:"

#: ../../whatsnew/3.12.rst:1222
#: ../../deprecations/pending-removal-in-3.14.rst:61
msgid ":class:`importlib.resources.abc.Traversable`"
msgstr ":class:`importlib.resources.abc.Traversable`"

#: ../../whatsnew/3.12.rst:1223
#: ../../deprecations/pending-removal-in-3.14.rst:62
msgid ":class:`importlib.resources.abc.TraversableResources`"
msgstr ":class:`importlib.resources.abc.TraversableResources`"

#: ../../whatsnew/3.12.rst:1225
#: ../../deprecations/pending-removal-in-3.14.rst:64
msgid "(Contributed by Jason R. Coombs and Hugo van Kemenade in :gh:`93963`.)"
msgstr "(Contribuição de Jason R. Coombs e Hugo van Kemenade em :gh:`93963`.)"

#: ../../whatsnew/3.12.rst:1227
msgid ""
":mod:`itertools`: Deprecate the support for copy, deepcopy, and pickle "
"operations, which is undocumented, inefficient, historically buggy, and "
"inconsistent. This will be removed in 3.14 for a significant reduction in "
"code volume and maintenance burden. (Contributed by Raymond Hettinger in :gh:"
"`101588`.)"
msgstr ""
":mod:`itertools`: Descontinua o suporte para operações de cópia, deepcopy e "
"pickle, que é não documentado, ineficiente, historicamente cheio de bugs e "
"inconsistente. Isso será removido na versão 3.14 para uma redução "
"significativa no volume de código e na carga de manutenção. (Contribuição de "
"Raymond Hettinger em :gh:`101588`.)"

#: ../../whatsnew/3.12.rst:1233
msgid ""
":mod:`multiprocessing`: In Python 3.14, the default :mod:`multiprocessing` "
"start method will change to a safer one on Linux, BSDs, and other non-macOS "
"POSIX platforms where ``'fork'`` is currently the default (:gh:`84559`). "
"Adding a runtime warning about this was deemed too disruptive as the "
"majority of code is not expected to care. Use the :func:`~multiprocessing."
"get_context` or :func:`~multiprocessing.set_start_method` APIs to explicitly "
"specify when your code *requires* ``'fork'``.  See :ref:`contexts and start "
"methods <multiprocessing-start-methods>`."
msgstr ""
":mod:`multiprocessing`: No Python 3.14, o método de início padrão de :mod:"
"`multiprocessing` será alterado para um mais seguro no Linux, BSDs e outras "
"plataformas POSIX não-macOS onde ``'fork'`` é atualmente o padrão (:gh:"
"`84559`). Adicionar um aviso em tempo de execução sobre isso foi considerado "
"muito perturbador, pois não se espera que a maior parte do código se "
"importe. Use as APIs :func:`~multiprocessing.get_context` ou :func:"
"`~multiprocessing.set_start_method` para especificar explicitamente quando "
"seu código *requer* ``'fork'``. Veja :ref:`contextos e métodos de início "
"<multiprocessing-start-methods>`."

#: ../../whatsnew/3.12.rst:1243
msgid ""
":mod:`pkgutil`: :func:`pkgutil.find_loader` and :func:`pkgutil.get_loader` "
"are deprecated and will be removed in Python 3.14; use :func:`importlib.util."
"find_spec` instead. (Contributed by Nikita Sobolev in :gh:`97850`.)"
msgstr ""
":mod:`pkgutil`: :func:`pkgutil.find_loader` e :func:`pkgutil.get_loader` "
"foram descontinuados e serão removidos no Python 3.14; use :func:`importlib."
"util.find_spec` em vez disso. (Contribuição de Nikita Sobolev em :gh:"
"`97850`.)"

#: ../../whatsnew/3.12.rst:1248
msgid ""
":mod:`pty`: The module has two undocumented ``master_open()`` and "
"``slave_open()`` functions that have been deprecated since Python 2 but only "
"gained a proper :exc:`DeprecationWarning` in 3.12. Remove them in 3.14. "
"(Contributed by Soumendra Ganguly and Gregory P. Smith in :gh:`85984`.)"
msgstr ""
":mod:`pty`: O módulo tem duas funções ``master_open()`` e ``slave_open()`` "
"não documentadas que foram descontinuados desde Python 2, mas só ganharam "
"um :exc:`DeprecationWarning` adequado em 3.12. Remova-os em 3.14. "
"(Contribuição de Soumendra Ganguly e Gregory P. Smith em :gh:`85984`.)"

#: ../../whatsnew/3.12.rst:1253
msgid ":mod:`os`:"
msgstr ":mod:`os`:"

#: ../../whatsnew/3.12.rst:1255
msgid ""
"The ``st_ctime`` fields return by :func:`os.stat` and :func:`os.lstat` on "
"Windows are deprecated. In a future release, they will contain the last "
"metadata change time, consistent with other platforms. For now, they still "
"contain the creation time, which is also available in the new "
"``st_birthtime`` field. (Contributed by Steve Dower in :gh:`99726`.)"
msgstr ""
"Os campos ``st_ctime`` retornados por :func:`os.stat` e :func:`os.lstat` no "
"Windows foram descontinuados. Em um lançamento futuro, eles conterão o "
"horário da última alteração de metadados, consistente com outras "
"plataformas. Por enquanto, eles ainda contêm o horário de criação, que "
"também está disponível no novo campo ``st_birthtime``. (Contribuição de "
"Steve Dower em :gh:`99726`.)"

#: ../../whatsnew/3.12.rst:1261
msgid ""
"On POSIX platforms, :func:`os.fork` can now raise a :exc:"
"`DeprecationWarning` when it can detect being called from a multithreaded "
"process. There has always been a fundamental incompatibility with the POSIX "
"platform when doing so. Even if such code *appeared* to work. We added the "
"warning to raise awareness as issues encountered by code doing this are "
"becoming more frequent. See the :func:`os.fork` documentation for more "
"details along with `this discussion on fork being incompatible with threads "
"<https://discuss.python.org/t/33555>`_ for *why* we're now surfacing this "
"longstanding platform compatibility problem to developers."
msgstr ""
"Nas plataformas POSIX, :func:`os.fork` agora pode levantar uma exceção :exc:"
"`DeprecationWarning` quando puder detectar a chamada de um processo "
"multithread. Sempre houve uma incompatibilidade fundamental com a plataforma "
"POSIX ao fazer isso. Mesmo que esse código *pareça* funcionar. Adicionamos o "
"aviso para aumentar a conscientização, pois os problemas encontrados pelo "
"código ao fazer isso estão se tornando mais frequentes. Veja a documentação :"
"func:`os.fork` para mais detalhes junto com `esta discussão sobre fork ser "
"incompatível com threads <https://discuss.python.org/t/33555>`_ para *por "
"que* estamos agora trazendo à tona esse antigo problema de compatibilidade "
"de plataforma para os desenvolvedores."

#: ../../whatsnew/3.12.rst:1271
msgid ""
"When this warning appears due to usage of :mod:`multiprocessing` or :mod:"
"`concurrent.futures` the fix is to use a different :mod:`multiprocessing` "
"start method such as ``\"spawn\"`` or ``\"forkserver\"``."
msgstr ""
"Quando este aviso aparece devido ao uso de :mod:`multiprocessing` ou :mod:"
"`concurrent.futures`, a correção é usar um método de início de :mod:"
"`multiprocessing` diferente, como ``\"spawn\"`` ou ``\"forkserver\"``."

#: ../../whatsnew/3.12.rst:1275
msgid ""
":mod:`shutil`: The *onerror* argument of :func:`shutil.rmtree` is "
"deprecated; use *onexc* instead. (Contributed by Irit Katriel in :gh:"
"`102828`.)"
msgstr ""
":mod:`shutil`: O argumento *onerror* de :func:`shutil.rmtree` foi "
"descontinuado; use *onexc* em vez disso. (Contribuição de Irit Katriel em :"
"gh:`102828`.)"

#: ../../whatsnew/3.12.rst:1278
#: ../../deprecations/pending-removal-in-3.14.rst:94
msgid ":mod:`sqlite3`:"
msgstr ":mod:`sqlite3`:"

#: ../../whatsnew/3.12.rst:1280
msgid ""
":ref:`default adapters and converters <sqlite3-default-converters>` are now "
"deprecated. Instead, use the :ref:`sqlite3-adapter-converter-recipes` and "
"tailor them to your needs. (Contributed by Erlend E. Aasland in :gh:`90016`.)"
msgstr ""
":ref:`adaptadores e conversores padrão <sqlite3-default-converters>` agora "
"foram descontinuados. Em vez disso, use :ref:`sqlite3-adapter-converter-"
"recipes` e adapte-os às suas necessidades. (Contribuição de Erlend E. "
"Aasland em :gh:`90016`.)"

#: ../../whatsnew/3.12.rst:1286
msgid ""
"In :meth:`~sqlite3.Cursor.execute`, :exc:`DeprecationWarning` is now emitted "
"when :ref:`named placeholders <sqlite3-placeholders>` are used together with "
"parameters supplied as a :term:`sequence` instead of as a :class:`dict`. "
"Starting from Python 3.14, using named placeholders with parameters supplied "
"as a sequence will raise a :exc:`~sqlite3.ProgrammingError`. (Contributed by "
"Erlend E. Aasland in :gh:`101698`.)"
msgstr ""
"Em :meth:`~sqlite3.Cursor.execute`, :exc:`DeprecationWarning` agora é "
"emitida quando :ref:`espaços reservados nomeados <sqlite3-placeholders>` são "
"usados junto com parâmetros fornecidos como :term:`sequência` em vez de "
"como :class:`dict`. A partir do Python 3.14, usar espaços reservados "
"nomeados com parâmetros fornecidos como uma sequência vai levantar uma :exc:"
"`~sqlite3.ProgrammingError`. (Contribuição de Erlend E. Aasland em :gh:"
"`101698`.)"

#: ../../whatsnew/3.12.rst:1293
msgid ""
":mod:`sys`: The :data:`sys.last_type`, :data:`sys.last_value` and :data:`sys."
"last_traceback` fields are deprecated. Use :data:`sys.last_exc` instead. "
"(Contributed by Irit Katriel in :gh:`102778`.)"
msgstr ""
":mod:`sys`: Os campos :data:`sys.last_type`, :data:`sys.last_value` e :data:"
"`sys.last_traceback` foram descontinuados. Use :data:`sys.last_exc` em vez "
"disso. (Contribuição de Irit Katriel em :gh:`102778`.)"

#: ../../whatsnew/3.12.rst:1297
msgid ""
":mod:`tarfile`: Extracting tar archives without specifying *filter* is "
"deprecated until Python 3.14, when ``'data'`` filter will become the "
"default. See :ref:`tarfile-extraction-filter` for details."
msgstr ""
":mod:`tarfile`: Extrair arquivos tar sem especificar *filter* foi "
"descontinuado até Python 3.14, quando o filtro ``'data'`` se tornará o "
"padrão. Veja :ref:`tarfile-extraction-filter` para detalhes."

#: ../../whatsnew/3.12.rst:1301
msgid ":mod:`typing`:"
msgstr ":mod:`typing`:"

#: ../../whatsnew/3.12.rst:1303
msgid ""
":class:`typing.Hashable` and :class:`typing.Sized`, aliases for :class:"
"`collections.abc.Hashable` and :class:`collections.abc.Sized` respectively, "
"are deprecated. (:gh:`94309`.)"
msgstr ""
":class:`typing.Hashable` e :class:`typing.Sized`, apelidos forem :class:"
"`collections.abc.Hashable` e :class:`collections.abc.Sized` respectivamente, "
"foram descontinuados. (:gh:`94309`.)"

#: ../../whatsnew/3.12.rst:1307
msgid ""
":class:`typing.ByteString`, deprecated since Python 3.9, now causes a :exc:"
"`DeprecationWarning` to be emitted when it is used. (Contributed by Alex "
"Waygood in :gh:`91896`.)"
msgstr ""
":class:`typing.ByteString`, descontinuado desde Python 3.9, agora faz com "
"que um :exc:`DeprecationWarning` seja emitida quando é usado. (Contribuição "
"de Alex Waygood em :gh:`91896`.)"

#: ../../whatsnew/3.12.rst:1311
msgid ""
":mod:`xml.etree.ElementTree`: The module now emits :exc:`DeprecationWarning` "
"when testing the truth value of an :class:`xml.etree.ElementTree.Element`. "
"Before, the Python implementation emitted :exc:`FutureWarning`, and the C "
"implementation emitted nothing. (Contributed by Jacob Walls in :gh:`83122`.)"
msgstr ""
":mod:`xml.etree.ElementTree`: O módulo agora emite :exc:`DeprecationWarning` "
"ao testar o valor verdade de um :class:`xml.etree.ElementTree.Element`. "
"Antes, a implementação Python emitia :exc:`FutureWarning`, e a implementação "
"C não emitia nada. (Contribuição de Jacob Walls em :gh:`83122`.)"

#: ../../whatsnew/3.12.rst:1317
msgid ""
"The 3-arg signatures (type, value, traceback) of :meth:`coroutine throw() "
"<coroutine.throw>`, :meth:`generator throw() <generator.throw>` and :meth:"
"`async generator throw() <agen.athrow>` are deprecated and may be removed in "
"a future version of Python. Use the single-arg versions of these functions "
"instead. (Contributed by Ofey Chan in :gh:`89874`.)"
msgstr ""
"As assinaturas de 3 argumentos (tipo, valor, traceback) de :meth:`coroutine "
"throw() <coroutine.throw>`, :meth:`generator throw() <generator.throw>` e :"
"meth:`async generator throw() <agen.athrow>` foram descontinuados e podem "
"ser removidos em uma versão futura do Python. Use as versões de argumento "
"único dessas funções. (Contribuição de Ofey Chan em :gh:`89874`.)"

#: ../../whatsnew/3.12.rst:1323
msgid ""
":exc:`DeprecationWarning` is now raised when ``__package__`` on a module "
"differs from ``__spec__.parent`` (previously it was :exc:`ImportWarning`). "
"(Contributed by Brett Cannon in :gh:`65961`.)"
msgstr ""
":exc:`DeprecationWarning` agora é levantada quando ``__package__`` em um "
"módulo difere de ``__spec__.parent`` (anteriormente era :exc:"
"`ImportWarning`). (Contribuição de Brett Cannon em :gh:`65961`.)"

#: ../../whatsnew/3.12.rst:1328
msgid ""
"Setting ``__package__`` or ``__cached__`` on a module is deprecated, and "
"will cease to be set or taken into consideration by the import system in "
"Python 3.14. (Contributed by Brett Cannon in :gh:`65961`.)"
msgstr ""
"Definir ``__package__`` ou ``__cached__`` em um módulo foi descontinuado e "
"deixará de ser definido ou levado em consideração pelo sistema de importação "
"no Python 3.14. (Contribuição de Brett Cannon em :gh:`65961`.)"

#: ../../whatsnew/3.12.rst:1332
msgid ""
"The bitwise inversion operator (``~``) on bool is deprecated. It will throw "
"an error in Python 3.16. Use ``not`` for logical negation of bools instead. "
"In the rare case that you really need the bitwise inversion of the "
"underlying ``int``, convert to int explicitly: ``~int(x)``. (Contributed by "
"Tim Hoffmann in :gh:`103487`.)"
msgstr ""
"O operador de inversão bit a bit (``~``) em bool foi descontinuado. Isso "
"levantará um erro no Python 3.16. Use ``not`` para negação lógica de bools. "
"No raro caso em que você realmente precisa da inversão bit a bit do ``int`` "
"subjacente, converta para int explicitamente: ``~int(x)``. (Contribuição de "
"Tim Hoffmann em :gh:`103487`.)"

#: ../../whatsnew/3.12.rst:1338
msgid ""
"Accessing :attr:`~codeobject.co_lnotab` on code objects was deprecated in "
"Python 3.10 via :pep:`626`, but it only got a proper :exc:"
"`DeprecationWarning` in 3.12, therefore it will be removed in 3.14. "
"(Contributed by Nikita Sobolev in :gh:`101866`.)"
msgstr ""
"Acessar :attr:`~codeobject.co_lnotab` em objetos de código foi descontinuado "
"no Python 3.10 via :pep:`626`, mas só obteve um :exc:`DeprecationWarning` "
"adequado em 3.12, portanto será removido em 3.14. (Contribuição de Nikita "
"Sobolev em :gh:`101866`.)"

#: ../../deprecations/pending-removal-in-3.13.rst:2
msgid "Pending Removal in Python 3.13"
msgstr "Remoção pendente no Python 3.13"

#: ../../deprecations/pending-removal-in-3.13.rst:4
msgid "Modules (see :pep:`594`):"
msgstr "Módulos (veja :pep:`594`):"

#: ../../deprecations/pending-removal-in-3.13.rst:6
msgid ":mod:`aifc`"
msgstr ":mod:`aifc`"

#: ../../deprecations/pending-removal-in-3.13.rst:7
msgid ":mod:`audioop`"
msgstr ":mod:`audioop`"

#: ../../deprecations/pending-removal-in-3.13.rst:8
msgid ":mod:`cgi`"
msgstr ":mod:`cgi`"

#: ../../deprecations/pending-removal-in-3.13.rst:9
msgid ":mod:`cgitb`"
msgstr ":mod:`cgitb`"

#: ../../deprecations/pending-removal-in-3.13.rst:10
msgid ":mod:`chunk`"
msgstr ":mod:`chunk`"

#: ../../deprecations/pending-removal-in-3.13.rst:11
msgid ":mod:`crypt`"
msgstr ":mod:`crypt`"

#: ../../deprecations/pending-removal-in-3.13.rst:12
msgid ":mod:`imghdr`"
msgstr ":mod:`imghdr`"

#: ../../deprecations/pending-removal-in-3.13.rst:13
msgid ":mod:`mailcap`"
msgstr ":mod:`mailcap`"

#: ../../deprecations/pending-removal-in-3.13.rst:14
msgid ":mod:`msilib`"
msgstr ":mod:`msilib`"

#: ../../deprecations/pending-removal-in-3.13.rst:15
msgid ":mod:`nis`"
msgstr ":mod:`nis`"

#: ../../deprecations/pending-removal-in-3.13.rst:16
msgid ":mod:`nntplib`"
msgstr ":mod:`nntplib`"

#: ../../deprecations/pending-removal-in-3.13.rst:17
msgid ":mod:`ossaudiodev`"
msgstr ":mod:`ossaudiodev`"

#: ../../deprecations/pending-removal-in-3.13.rst:18
msgid ":mod:`pipes`"
msgstr ":mod:`pipes`"

#: ../../deprecations/pending-removal-in-3.13.rst:19
msgid ":mod:`sndhdr`"
msgstr ":mod:`sndhdr`"

#: ../../deprecations/pending-removal-in-3.13.rst:20
msgid ":mod:`spwd`"
msgstr ":mod:`spwd`"

#: ../../deprecations/pending-removal-in-3.13.rst:21
msgid ":mod:`sunau`"
msgstr ":mod:`sunau`"

#: ../../deprecations/pending-removal-in-3.13.rst:22
msgid ":mod:`telnetlib`"
msgstr ":mod:`telnetlib`"

#: ../../deprecations/pending-removal-in-3.13.rst:23
msgid ":mod:`uu`"
msgstr ":mod:`uu`"

#: ../../deprecations/pending-removal-in-3.13.rst:24
msgid ":mod:`xdrlib`"
msgstr ":mod:`xdrlib`"

#: ../../deprecations/pending-removal-in-3.13.rst:26
msgid "Other modules:"
msgstr "Outros módulos:"

#: ../../deprecations/pending-removal-in-3.13.rst:28
msgid ":mod:`!lib2to3`, and the :program:`2to3` program (:gh:`84540`)"
msgstr ":mod:`!lib2to3` e o programa :program:`2to3` (:gh:`84540`)"

#: ../../deprecations/pending-removal-in-3.13.rst:30
msgid "APIs:"
msgstr "APIs:"

#: ../../deprecations/pending-removal-in-3.13.rst:32
msgid ":class:`!configparser.LegacyInterpolation` (:gh:`90765`)"
msgstr ":class:`!configparser.LegacyInterpolation` (:gh:`90765`)"

#: ../../deprecations/pending-removal-in-3.13.rst:33
msgid "``locale.resetlocale()`` (:gh:`90817`)"
msgstr "``locale.resetlocale()`` (:gh:`90817`)"

#: ../../deprecations/pending-removal-in-3.13.rst:34
msgid ":meth:`!turtle.RawTurtle.settiltangle` (:gh:`50096`)"
msgstr ":meth:`!turtle.RawTurtle.settiltangle` (:gh:`50096`)"

#: ../../deprecations/pending-removal-in-3.13.rst:35
msgid ":func:`!unittest.findTestCases` (:gh:`50096`)"
msgstr ":func:`!unittest.findTestCases` (:gh:`50096`)"

#: ../../deprecations/pending-removal-in-3.13.rst:36
msgid ":func:`!unittest.getTestCaseNames` (:gh:`50096`)"
msgstr ":func:`!unittest.getTestCaseNames` (:gh:`50096`)"

#: ../../deprecations/pending-removal-in-3.13.rst:37
msgid ":func:`!unittest.makeSuite` (:gh:`50096`)"
msgstr ":func:`!unittest.makeSuite` (:gh:`50096`)"

#: ../../deprecations/pending-removal-in-3.13.rst:38
msgid ":meth:`!unittest.TestProgram.usageExit` (:gh:`67048`)"
msgstr ":meth:`!unittest.TestProgram.usageExit` (:gh:`67048`)"

#: ../../deprecations/pending-removal-in-3.13.rst:39
msgid ":class:`!webbrowser.MacOSX` (:gh:`86421`)"
msgstr ":class:`!webbrowser.MacOSX` (:gh:`86421`)"

#: ../../deprecations/pending-removal-in-3.13.rst:40
msgid ":class:`classmethod` descriptor chaining (:gh:`89519`)"
msgstr "Encadeamento do descritor de :class:`classmethod` (:gh:`89519`)"

#: ../../deprecations/pending-removal-in-3.13.rst:41
msgid ":mod:`importlib.resources` deprecated methods:"
msgstr "Métodos descontinuados de :mod:`importlib.resources`:"

#: ../../deprecations/pending-removal-in-3.13.rst:43
msgid "``contents()``"
msgstr "``contents()``"

#: ../../deprecations/pending-removal-in-3.13.rst:44
msgid "``is_resource()``"
msgstr "``is_resource()``"

#: ../../deprecations/pending-removal-in-3.13.rst:45
msgid "``open_binary()``"
msgstr "``open_binary()``"

#: ../../deprecations/pending-removal-in-3.13.rst:46
msgid "``open_text()``"
msgstr "``open_text()``"

#: ../../deprecations/pending-removal-in-3.13.rst:47
msgid "``path()``"
msgstr "``path()``"

#: ../../deprecations/pending-removal-in-3.13.rst:48
msgid "``read_binary()``"
msgstr "``read_binary()``"

#: ../../deprecations/pending-removal-in-3.13.rst:49
msgid "``read_text()``"
msgstr "``read_text()``"

#: ../../deprecations/pending-removal-in-3.13.rst:51
msgid ""
"Use :func:`importlib.resources.files` instead.  Refer to `importlib-"
"resources: Migrating from Legacy <https://importlib-resources.readthedocs.io/"
"en/latest/using.html#migrating-from-legacy>`_ (:gh:`106531`)"
msgstr ""
"Use :func:`importlib.resources.files` em vez disso. Confira `importlib-"
"resources: Migrando do legado <https://importlib-resources.readthedocs.io/en/"
"latest/using.html#migrating-from-legacy>`_ , em inglês (:gh:`106531`)"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:2
#: ../../deprecations/pending-removal-in-3.14.rst:2
msgid "Pending Removal in Python 3.14"
msgstr "Remoção pendente no Python 3.14"

#: ../../deprecations/pending-removal-in-3.14.rst:9
msgid ""
":mod:`ast`: The following features have been deprecated in documentation "
"since Python 3.8, now cause a :exc:`DeprecationWarning` to be emitted at "
"runtime when they are accessed or used, and will be removed in Python 3.14:"
msgstr ""
":mod:`ast`: Os seguintes recursos foram descontinuados na documentação desde "
"Python 3.8, agora fazem com que um :exc:`DeprecationWarning` seja emitido em "
"tempo de execução quando eles são acessados ou usados, e serão removidos no "
"Python 3.14:"

#: ../../deprecations/pending-removal-in-3.14.rst:24
msgid ""
"The child watcher classes :class:`~asyncio.MultiLoopChildWatcher`, :class:"
"`~asyncio.FastChildWatcher`, :class:`~asyncio.AbstractChildWatcher` and :"
"class:`~asyncio.SafeChildWatcher` are deprecated and will be removed in "
"Python 3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""
"As classes filhas do observador :class:`~asyncio.MultiLoopChildWatcher`, :"
"class:`~asyncio.FastChildWatcher`, :class:`~asyncio.AbstractChildWatcher` e :"
"class:`~asyncio.SafeChildWatcher` foram descontinuadas e serão removidas no "
"Python 3.14. (Contribuição de Kumar Aditya em :gh:`94597`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:41
msgid ""
":mod:`collections.abc`: Deprecated :class:`~collections.abc.ByteString`. "
"Prefer :class:`!Sequence` or :class:`~collections.abc.Buffer`. For use in "
"typing, prefer a union, like ``bytes | bytearray``, or :class:`collections."
"abc.Buffer`. (Contributed by Shantanu Jain in :gh:`91896`.)"
msgstr ""
":mod:`collections.abc`: :class:`~collections.abc.ByteString` foi "
"descontinuado. Prefira :class:`!Sequence` ou :class:`~collections.abc."
"Buffer` Para uso em tipagem, prefira uma união, como ``bytes | bytearray`` "
"ou :class:`collections.abc.Buffer`. (Contribuição de Shantanu Jain em :gh:"
"`91896`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:47
msgid ""
":mod:`email`: Deprecated the *isdst* parameter in :func:`email.utils."
"localtime`. (Contributed by Alan Williams in :gh:`72346`.)"
msgstr ""
":mod:`email`: Descontinua o parâmetro *isdst* em :func:`email.utils."
"localtime`. (Contribuição de Alan Williams em :gh:`72346`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:50
msgid ""
":mod:`importlib`: ``__package__`` and ``__cached__`` will cease to be set or "
"taken into consideration by the import system (:gh:`97879`)."
msgstr ""
":mod:`importlib`: ``__package__`` e ``__cached__`` deixarão de ser definidos "
"ou levados em consideração pelo sistema de importação (:gh:`97879`)."

#: ../../deprecations/pending-removal-in-3.14.rst:53
msgid ":mod:`importlib.abc` deprecated classes:"
msgstr ":mod:`importlib.abc` descontinuou as classes:"

#: ../../deprecations/pending-removal-in-3.14.rst:66
msgid ""
":mod:`itertools` had undocumented, inefficient, historically buggy, and "
"inconsistent support for copy, deepcopy, and pickle operations. This will be "
"removed in 3.14 for a significant reduction in code volume and maintenance "
"burden. (Contributed by Raymond Hettinger in :gh:`101588`.)"
msgstr ""
":mod:`itertools` tinha suporte não documentado, ineficiente, historicamente "
"cheio de bugs e inconsistente para operações de cópia, cópia profunda e "
"serialização com pickle. Isso será removido na versão 3.14 para uma redução "
"significativa no volume de código e na carga de manutenção. (Contribuição de "
"Raymond Hettinger em :gh:`101588`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:72
msgid ""
":mod:`multiprocessing`: The default start method will change to a safer one "
"on Linux, BSDs, and other non-macOS POSIX platforms where ``'fork'`` is "
"currently the default (:gh:`84559`). Adding a runtime warning about this was "
"deemed too disruptive as the majority of code is not expected to care. Use "
"the :func:`~multiprocessing.get_context` or :func:`~multiprocessing."
"set_start_method` APIs to explicitly specify when your code *requires* "
"``'fork'``.  See :ref:`multiprocessing-start-methods`."
msgstr ""
":mod:`multiprocessing`: O método de inicialização padrão será alterado para "
"um mais seguro no Linux, BSDs e outras plataformas POSIX não-macOS onde "
"``'fork'`` é atualmente o padrão (:gh:`84559`). Adicionar um aviso de tempo "
"de execução sobre isso foi considerado muito perturbador, pois não se espera "
"que a maior parte do código se importe. Use as APIs :func:`~multiprocessing."
"get_context` ou :func:`~multiprocessing.set_start_method` para especificar "
"explicitamente quando seu código *requer* ``'fork'``. Veja :ref:"
"`multiprocessing-start-methods`."

#: ../../deprecations/pending-removal-in-3.14.rst:80
msgid ""
":mod:`pathlib`: :meth:`~pathlib.PurePath.is_relative_to` and :meth:`~pathlib."
"PurePath.relative_to`: passing additional arguments is deprecated."
msgstr ""
":mod:`pathlib`: :meth:`~pathlib.PurePath.is_relative_to` e :meth:`~pathlib."
"PurePath.relative_to`: passar argumentos adicionais foi descontinuado."

#: ../../deprecations/pending-removal-in-3.14.rst:84
msgid ""
":mod:`pkgutil`: :func:`~pkgutil.find_loader` and :func:`~pkgutil.get_loader` "
"now raise :exc:`DeprecationWarning`; use :func:`importlib.util.find_spec` "
"instead. (Contributed by Nikita Sobolev in :gh:`97850`.)"
msgstr ""
":mod:`pkgutil`: :func:`~pkgutil.find_loader` e :func:`~pkgutil.get_loader` "
"agora levantam :exc:`DeprecationWarning`; use :func:`importlib.util."
"find_spec` em vez disto. (Contribuição de Nikita Sobolev em :gh:`97850`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:89
msgid ":mod:`pty`:"
msgstr ":mod:`pty`:"

#: ../../deprecations/pending-removal-in-3.14.rst:91
msgid "``master_open()``: use :func:`pty.openpty`."
msgstr "``master_open()``: use :func:`pty.openpty`."

#: ../../deprecations/pending-removal-in-3.14.rst:92
msgid "``slave_open()``: use :func:`pty.openpty`."
msgstr "``slave_open()``: use :func:`pty.openpty`."

#: ../../deprecations/pending-removal-in-3.14.rst:96
msgid ":data:`~sqlite3.version` and :data:`~sqlite3.version_info`."
msgstr ":data:`~sqlite3.version` e :data:`~sqlite3.version_info`."

#: ../../deprecations/pending-removal-in-3.14.rst:98
msgid ""
":meth:`~sqlite3.Cursor.execute` and :meth:`~sqlite3.Cursor.executemany` if :"
"ref:`named placeholders <sqlite3-placeholders>` are used and *parameters* is "
"a sequence instead of a :class:`dict`."
msgstr ""
":meth:`~sqlite3.Cursor.execute` e :meth:`~sqlite3.Cursor.executemany` se :"
"ref:`espaços reservados nomeados <sqlite3-placeholders>` forem usados ​​e "
"*parameters* for uma sequência em vez de um :class:`dict` ."

#: ../../deprecations/pending-removal-in-3.14.rst:102
msgid ""
"date and datetime adapter, date and timestamp converter: see the :mod:"
"`sqlite3` documentation for suggested replacement recipes."
msgstr ""
"adaptador de data e hora, conversor de registro de data e hora: veja a "
"documentação de :mod:`sqlite3` para receitas de substituição sugeridas."

#: ../../deprecations/pending-removal-in-3.14.rst:105
msgid ""
":class:`types.CodeType`: Accessing :attr:`~codeobject.co_lnotab` was "
"deprecated in :pep:`626` since 3.10 and was planned to be removed in 3.12, "
"but it only got a proper :exc:`DeprecationWarning` in 3.12. May be removed "
"in 3.14. (Contributed by Nikita Sobolev in :gh:`101866`.)"
msgstr ""
":class:`types.CodeType`: O acesso a :attr:`~codeobject.co_lnotab` foi "
"descontinuado na :pep:`626` desde 3.10 e foi planejado para ser removido em "
"3.12, mas só recebeu uma :exc:`DeprecationWarning` adequada em 3.12. Pode "
"ser removido em 3.14. (Contribuição de Nikita Sobolev em :gh:`101866`.)"

#: ../../deprecations/pending-removal-in-3.14.rst:112
msgid ""
":mod:`typing`: :class:`~typing.ByteString`, deprecated since Python 3.9, now "
"causes a :exc:`DeprecationWarning` to be emitted when it is used."
msgstr ""
":mod:`typing`: :class:`~typing.ByteString`, descontinuado desde Python 3.9, "
"agora faz com que uma :exc:`DeprecationWarning` seja emitida quando é usado."

#: ../../deprecations/pending-removal-in-3.14.rst:115
msgid ""
":mod:`urllib`: :class:`!urllib.parse.Quoter` is deprecated: it was not "
"intended to be a public API. (Contributed by Gregory P. Smith in :gh:"
"`88168`.)"
msgstr ""
":mod:`urllib`: :class:`!urllib.parse.Quoter` está obsoleto: não foi "
"planejado para ser uma API pública. (Contribuição de Gregory P. Smith em :gh:"
"`88168`.)"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:2
#: ../../deprecations/pending-removal-in-3.15.rst:2
msgid "Pending Removal in Python 3.15"
msgstr "Remoção pendente no Python 3.15"

#: ../../deprecations/pending-removal-in-3.15.rst:4
msgid ""
":class:`http.server.CGIHTTPRequestHandler` will be removed along with its "
"related ``--cgi`` flag to ``python -m http.server``.  It was obsolete and "
"rarely used.  No direct replacement exists.  *Anything* is better than CGI "
"to interface a web server with a request handler."
msgstr ""
":class:`http.server.CGIHTTPRequestHandler` será removido junto com seu "
"sinalizador relacionado ``--cgi`` para ``python -m http.server``. Estava "
"descontinuado e raramente usado. Não existe substituição direta. *Qualquer "
"coisa* é melhor que CGI para fazer a interface de um servidor web com um "
"manipulador de solicitações."

#: ../../deprecations/pending-removal-in-3.15.rst:9
msgid ""
":class:`locale`: :func:`locale.getdefaultlocale` was deprecated in Python "
"3.11 and originally planned for removal in Python 3.13 (:gh:`90817`), but "
"removal has been postponed to Python 3.15. Use :func:`locale.setlocale`, :"
"func:`locale.getencoding` and :func:`locale.getlocale` instead. (Contributed "
"by Hugo van Kemenade in :gh:`111187`.)"
msgstr ""
":class:`locale`: :func:`locale.getdefaultlocale` foi descontinuada no Python "
"3.11 e originalmente planejada para remoção no Python 3.13 (:gh:`90817`), "
"mas a remoção foi adiada para o Python 3.15. Use :func:`locale.setlocale`, :"
"func:`locale.getencoding` e :func:`locale.getlocale` em vez disso. "
"(Contribuição de Hugo van Kemenade em :gh:`111187`.)"

#: ../../deprecations/pending-removal-in-3.15.rst:16
msgid ""
":mod:`pathlib`: :meth:`pathlib.PurePath.is_reserved` is deprecated and "
"scheduled for removal in Python 3.15. From Python 3.13 onwards, use ``os."
"path.isreserved`` to detect reserved paths on Windows."
msgstr ""
":mod:`pathlib`: :meth:`pathlib.PurePath.is_reserved` está descontinuado e "
"programado para remoção no Python 3.15. Do Python 3.13 em diante, use ``os."
"path.isreserved`` para detectar caminhos reservados no Windows."

#: ../../deprecations/pending-removal-in-3.15.rst:21
msgid ""
":mod:`platform`: :func:`~platform.java_ver` is deprecated and will be "
"removed in 3.15. It was largely untested, had a confusing API, and was only "
"useful for Jython support. (Contributed by Nikita Sobolev in :gh:`116349`.)"
msgstr ""
":mod:`platform`: :func:`~platform.java_ver` está descontinuada e será "
"removida na versão 3.15. Ela não foi testada em grande parte, tinha uma API "
"confusa e só era útil para suporte a Jython. (Contribuição de Nikita Sobolev "
"em :gh:`116349`.)"

#: ../../deprecations/pending-removal-in-3.15.rst:27
msgid ""
":mod:`threading`: Passing any arguments to :func:`threading.RLock` is now "
"deprecated. C version allows any numbers of args and kwargs, but they are "
"just ignored. Python version does not allow any arguments. All arguments "
"will be removed from :func:`threading.RLock` in Python 3.15. (Contributed by "
"Nikita Sobolev in :gh:`102029`.)"
msgstr ""
":mod:`threading`: Passar qualquer argumento para :func:`threading.RLock` "
"agora está descontinuado. A versão C permite qualquer número de args e "
"kwargs, mas eles são simplesmente ignorados. A versão Python não permite "
"nenhum argumento. Todos os argumentos serão removidos de :func:`threading."
"RLock` no Python 3.15. (Contribuição de Nikita Sobolev em :gh:`102029`.)"

#: ../../deprecations/pending-removal-in-3.15.rst:34
msgid ":class:`typing.NamedTuple`:"
msgstr ":class:`typing.NamedTuple`:"

#: ../../deprecations/pending-removal-in-3.15.rst:36
msgid ""
"The undocumented keyword argument syntax for creating :class:`!NamedTuple` "
"classes (``NT = NamedTuple(\"NT\", x=int)``) is deprecated, and will be "
"disallowed in 3.15. Use the class-based syntax or the functional syntax "
"instead."
msgstr ""
"A sintaxe de argumento nomeado não documentada para criar classes :class:`!"
"NamedTuple` (``NT = NamedTuple(\"NT\", x=int)``) está descontinuada e não "
"será permitida em 3.15. Use a sintaxe baseada em classe ou a sintaxe "
"funcional."

#: ../../deprecations/pending-removal-in-3.15.rst:40
msgid ""
"When using the functional syntax to create a :class:`!NamedTuple` class, "
"failing to pass a value to the *fields* parameter (``NT = "
"NamedTuple(\"NT\")``) is deprecated. Passing ``None`` to the *fields* "
"parameter (``NT = NamedTuple(\"NT\", None)``) is also deprecated. Both will "
"be disallowed in Python 3.15. To create a :class:`!NamedTuple` class with 0 "
"fields, use ``class NT(NamedTuple): pass`` or ``NT = NamedTuple(\"NT\", "
"[])``."
msgstr ""
"Ao usar a sintaxe funcional para criar uma classe :class:`!NamedTuple`, "
"falhar ao passar um valor para o parâmetro *fields* (``NT = "
"NamedTuple(\"NT\")``) está descontinuada. Passar ``None`` para o parâmetro "
"*fields* (``NT = NamedTuple(\"NT\", None)``) também está descontinuada. "
"Ambos não serão permitidos no Python 3.15. Para criar uma classe :class:`!"
"NamedTuple` com 0 campos, use ``class NT(NamedTuple): pass`` ou ``NT = "
"NamedTuple(\"NT\", [])``."

#: ../../deprecations/pending-removal-in-3.15.rst:47
msgid ""
":class:`typing.TypedDict`: When using the functional syntax to create a :"
"class:`!TypedDict` class, failing to pass a value to the *fields* parameter "
"(``TD = TypedDict(\"TD\")``) is deprecated. Passing ``None`` to the *fields* "
"parameter (``TD = TypedDict(\"TD\", None)``) is also deprecated. Both will "
"be disallowed in Python 3.15. To create a :class:`!TypedDict` class with 0 "
"fields, use ``class TD(TypedDict): pass`` or ``TD = TypedDict(\"TD\", {})``."
msgstr ""
":class:`typing.TypedDict`: Ao usar a sintaxe funcional para criar uma "
"classe :class:`!TypedDict`, falhar ao passar um valor para o parâmetro "
"*fields* (``TD = TypedDict(\"TD\")``) está descontinuada. Passar ``None`` "
"para o parâmetro *fields* (``TD = TypedDict(\"TD\", None)``) também está "
"descontinuada. Ambos não serão permitidos no Python 3.15. Para criar uma "
"classe :class:`!TypedDict` com 0 campos, use ``class TD(TypedDict): pass`` "
"ou ``TD = TypedDict(\"TD\", {})``."

#: ../../deprecations/pending-removal-in-3.15.rst:54
msgid ""
":mod:`wave`: Deprecate the ``getmark()``, ``setmark()`` and ``getmarkers()`` "
"methods of the :class:`wave.Wave_read` and :class:`wave.Wave_write` classes. "
"They will be removed in Python 3.15. (Contributed by Victor Stinner in :gh:"
"`105096`.)"
msgstr ""
":mod:`wave`: Descontinua os métodos ``getmark()``, ``setmark()`` e "
"``getmarkers()`` das classes :class:`wave.Wave_read` e :class:`wave."
"Wave_write`. Eles serão removidos no Python 3.15. (Contribuição de Victor "
"Stinner em :gh:`105096`.)"

#: ../../deprecations/pending-removal-in-3.16.rst:2
msgid "Pending Removal in Python 3.16"
msgstr "Remoção pendente no Python 3.16"

#: ../../deprecations/pending-removal-in-3.16.rst:4
msgid ""
":mod:`array`: :class:`array.array` ``'u'`` type (:c:type:`wchar_t`): use the "
"``'w'`` type instead (``Py_UCS4``)."
msgstr ""
":mod:`array`: :class:`array.array`: tipo ``'u'`` (:c:type:`wchar_t`): use o "
"tipo ``'w'`` (``Py_UCS4``)."

#: ../../deprecations/pending-removal-in-3.16.rst:8
msgid ":mod:`builtins`: ``~bool``, bitwise inversion on bool."
msgstr ":mod:`builtins`: ``~bool``, inversão bit a bit em booleanos."

#: ../../deprecations/pending-removal-in-3.16.rst:11
msgid ""
":mod:`symtable`: Deprecate :meth:`symtable.Class.get_methods` due to the "
"lack of interest. (Contributed by Bénédikt Tran in :gh:`119698`.)"
msgstr ""
":mod:`symtable`: Descontinua :meth:`symtable.Class.get_methods` por falta de "
"interesse. (Contribuição de Bénédikt Tran em :gh:`119698`.)"

#: ../../deprecations/c-api-pending-removal-in-future.rst:2
#: ../../deprecations/pending-removal-in-future.rst:2
msgid "Pending Removal in Future Versions"
msgstr "Remoção pendente em versões futuras"

#: ../../deprecations/pending-removal-in-future.rst:4
msgid ""
"The following APIs will be removed in the future, although there is "
"currently no date scheduled for their removal."
msgstr ""
"As APIs a seguir serão removidas no futuro, embora atualmente não haja uma "
"data agendada para sua remoção."

#: ../../deprecations/pending-removal-in-future.rst:7
msgid ""
":mod:`argparse`: Nesting argument groups and nesting mutually exclusive "
"groups are deprecated."
msgstr ""
":mod:`argparse`: O aninhamento de grupos de argumentos e o aninhamento de "
"grupos mutuamente exclusivos estão descontinuados."

#: ../../deprecations/pending-removal-in-future.rst:10
msgid ":mod:`array`'s ``'u'`` format code (:gh:`57281`)"
msgstr "código de formatação ``'u'`` do :mod:`array` (:gh:`57281`)"

#: ../../deprecations/pending-removal-in-future.rst:12
msgid ":mod:`builtins`:"
msgstr ":mod:`builtins`:"

#: ../../deprecations/pending-removal-in-future.rst:14
msgid "``bool(NotImplemented)``."
msgstr "``bool(NotImplemented)``."

#: ../../deprecations/pending-removal-in-future.rst:15
msgid ""
"Generators: ``throw(type, exc, tb)`` and ``athrow(type, exc, tb)`` signature "
"is deprecated: use ``throw(exc)`` and ``athrow(exc)`` instead, the single "
"argument signature."
msgstr ""
"Geradores: A assinatura ``throw(type, exc, tb)`` e ``athrow(type, exc, tb)`` "
"está descontinuada: use ``throw(exc)`` e ``athrow(exc)``, a assinatura do "
"argumento único."

#: ../../deprecations/pending-removal-in-future.rst:18
msgid ""
"Currently Python accepts numeric literals immediately followed by keywords, "
"for example ``0in x``, ``1or x``, ``0if 1else 2``.  It allows confusing and "
"ambiguous expressions like ``[0x1for x in y]`` (which can be interpreted as "
"``[0x1 for x in y]`` or ``[0x1f or x in y]``).  A syntax warning is raised "
"if the numeric literal is immediately followed by one of keywords :keyword:"
"`and`, :keyword:`else`, :keyword:`for`, :keyword:`if`, :keyword:`in`, :"
"keyword:`is` and :keyword:`or`.  In a future release it will be changed to a "
"syntax error. (:gh:`87999`)"
msgstr ""
"Atualmente Python aceita literais numéricos imediatamente seguidos por "
"palavras reservadas como, por exemplo, ``0in x``, ``1or x``, ``0if 1else "
"2``. Ele permite expressões confusas e ambíguas como ``[0x1for x in y]`` "
"(que pode ser interpretada como ``[0x1 for x in y]`` ou ``[0x1f or x in "
"y]``). Um aviso de sintaxe é levantado se o literal numérico for "
"imediatamente seguido por uma das palavras reservadas :keyword:`and`, :"
"keyword:`else`, :keyword:`for`, :keyword:`if`, :keyword:`in` , :keyword:`is` "
"e :keyword:`or`. Em uma versão futura, será alterado para um erro de "
"sintaxe. (:gh:`87999`)"

#: ../../deprecations/pending-removal-in-future.rst:26
msgid ""
"Support for ``__index__()`` and ``__int__()`` method returning non-int type: "
"these methods will be required to return an instance of a strict subclass "
"of :class:`int`."
msgstr ""
"Suporte para métodos ``__index__()`` e ``__int__()`` retornando tipo não-"
"int: esses métodos serão necessários para retornar uma instância de uma "
"subclasse estrita de :class:`int`."

#: ../../deprecations/pending-removal-in-future.rst:29
msgid ""
"Support for ``__float__()`` method returning a strict subclass of :class:"
"`float`: these methods will be required to return an instance of :class:"
"`float`."
msgstr ""
"Suporte para o método ``__float__()`` retornando uma subclasse estrita de :"
"class:`float`: esses métodos serão necessários para retornar uma instância "
"de :class:`float`."

#: ../../deprecations/pending-removal-in-future.rst:32
msgid ""
"Support for ``__complex__()`` method returning a strict subclass of :class:"
"`complex`: these methods will be required to return an instance of :class:"
"`complex`."
msgstr ""
"Suporte para o método ``__complex__()`` retornando uma subclasse estrita de :"
"class:`complex`: esses métodos serão necessários para retornar uma instância "
"de :class:`complex`."

#: ../../deprecations/pending-removal-in-future.rst:35
msgid "Delegation of ``int()`` to ``__trunc__()`` method."
msgstr "Delegação do método ``int()`` para o ``__trunc__()``."

#: ../../deprecations/pending-removal-in-future.rst:36
msgid ""
"Passing a complex number as the *real* or *imag* argument in the :func:"
"`complex` constructor is now deprecated; it should only be passed as a "
"single positional argument. (Contributed by Serhiy Storchaka in :gh:"
"`109218`.)"
msgstr ""
"Passar um número complexo como argumento *real* ou *imag* no construtor :"
"func:`complex` agora está descontinuado; deve ser passado apenas como um "
"único argumento posicional. (Contribuição de Serhiy Storchaka em :gh:"
"`109218`.)"

#: ../../deprecations/pending-removal-in-future.rst:46
msgid ""
":attr:`codeobject.co_lnotab`: use the :meth:`codeobject.co_lines` method "
"instead."
msgstr ""
":attr:`codeobject.co_lnotab`: use o método :meth:`codeobject.co_lines`."

#: ../../deprecations/pending-removal-in-future.rst:49
msgid ":mod:`datetime`:"
msgstr ":mod:`datetime`:"

#: ../../deprecations/pending-removal-in-future.rst:51
msgid ""
":meth:`~datetime.datetime.utcnow`: use ``datetime.datetime.now(tz=datetime."
"UTC)``."
msgstr ""
":meth:`~datetime.datetime.utcnow`: use ``datetime.datetime.now(tz=datetime."
"UTC)``."

#: ../../deprecations/pending-removal-in-future.rst:53
msgid ""
":meth:`~datetime.datetime.utcfromtimestamp`: use ``datetime.datetime."
"fromtimestamp(timestamp, tz=datetime.UTC)``."
msgstr ""
":meth:`~datetime.datetime.utcfromtimestamp`: use ``datetime.datetime."
"fromtimestamp(timestamp, tz=datetime.UTC)``."

#: ../../deprecations/pending-removal-in-future.rst:56
msgid ":mod:`gettext`: Plural value must be an integer."
msgstr ":mod:`gettext`: O valor de plural deve ser um número inteiro."

#: ../../deprecations/pending-removal-in-future.rst:58
msgid ":mod:`importlib`:"
msgstr ":mod:`importlib`:"

#: ../../deprecations/pending-removal-in-future.rst:60
msgid "``load_module()`` method: use ``exec_module()`` instead."
msgstr "Método ``load_module()``: use ``exec_module()`` em vez disso."

#: ../../deprecations/pending-removal-in-future.rst:61
msgid ""
":func:`~importlib.util.cache_from_source` *debug_override* parameter is "
"deprecated: use the *optimization* parameter instead."
msgstr ""
"O parâmetro *debug_override* de :func:`~importlib.util.cache_from_source` "
"foi descontinuado: em vez disso, use o parâmetro *optimization*."

#: ../../deprecations/pending-removal-in-future.rst:64
msgid ":mod:`importlib.metadata`:"
msgstr ":mod:`importlib.metadata`:"

#: ../../deprecations/pending-removal-in-future.rst:66
msgid "``EntryPoints`` tuple interface."
msgstr "Interface de tupla ``EntryPoints``."

#: ../../deprecations/pending-removal-in-future.rst:67
msgid "Implicit ``None`` on return values."
msgstr "``None`` implícito nos valores de retorno."

#: ../../deprecations/pending-removal-in-future.rst:69
msgid ""
":mod:`mailbox`: Use of StringIO input and text mode is deprecated, use "
"BytesIO and binary mode instead."
msgstr ""
":mod:`mailbox`: O uso da entrada StringIO e do modo de texto foi "
"descontinuado; em vez disso, use BytesIO e o modo binário."

#: ../../deprecations/pending-removal-in-future.rst:72
msgid ""
":mod:`os`: Calling :func:`os.register_at_fork` in multi-threaded process."
msgstr ":mod:`os`: Chamar :func:`os.register_at_fork` em processo multithread."

#: ../../deprecations/pending-removal-in-future.rst:74
msgid ""
":class:`!pydoc.ErrorDuringImport`: A tuple value for *exc_info* parameter is "
"deprecated, use an exception instance."
msgstr ""
":class:`!pydoc.ErrorDuringImport`: Um valor de tupla para o parâmetro "
"*exc_info* foi descontinuado, use uma instância de exceção."

#: ../../deprecations/pending-removal-in-future.rst:77
msgid ""
":mod:`re`: More strict rules are now applied for numerical group references "
"and group names in regular expressions.  Only sequence of ASCII digits is "
"now accepted as a numerical reference.  The group name in bytes patterns and "
"replacement strings can now only contain ASCII letters and digits and "
"underscore. (Contributed by Serhiy Storchaka in :gh:`91760`.)"
msgstr ""
":mod:`re`: Regras mais rigorosas agora são aplicadas para referências "
"numéricas de grupos e nomes de grupos em expressões regulares. Apenas a "
"sequência de dígitos ASCII agora é aceita como referência numérica. O nome "
"do grupo em padrões de bytes e strings de substituição agora pode conter "
"apenas letras e dígitos ASCII e sublinhado. (Contribuição de Serhiy "
"Storchaka em :gh:`91760`.)"

#: ../../deprecations/pending-removal-in-future.rst:84
msgid ""
":mod:`!sre_compile`, :mod:`!sre_constants` and :mod:`!sre_parse` modules."
msgstr ""
"Módulos :mod:`!sre_compile`, :mod:`!sre_constants` e :mod:`!sre_parse`."

#: ../../deprecations/pending-removal-in-future.rst:86
msgid ""
":mod:`shutil`: :func:`~shutil.rmtree`'s *onerror* parameter is deprecated in "
"Python 3.12; use the *onexc* parameter instead."
msgstr ""
":mod:`shutil`: O parâmetro *onerror* de :func:`~shutil.rmtree` foi "
"descontinuado no Python 3.12; use o parâmetro *onexc*."

#: ../../deprecations/pending-removal-in-future.rst:89
msgid ":mod:`ssl` options and protocols:"
msgstr "Protocolos e opções de :mod:`ssl`"

#: ../../deprecations/pending-removal-in-future.rst:91
msgid ":class:`ssl.SSLContext` without protocol argument is deprecated."
msgstr ":class:`ssl.SSLContext` sem argumento de protocolo foi descontinuado."

#: ../../deprecations/pending-removal-in-future.rst:92
msgid ""
":class:`ssl.SSLContext`: :meth:`~ssl.SSLContext.set_npn_protocols` and :meth:"
"`!selected_npn_protocol` are deprecated: use ALPN instead."
msgstr ""
":class:`ssl.SSLContext`: :meth:`~ssl.SSLContext.set_npn_protocols` e :meth:`!"
"selected_npn_protocol` foram descontinuados: use ALPN."

#: ../../deprecations/pending-removal-in-future.rst:95
msgid "``ssl.OP_NO_SSL*`` options"
msgstr "Opções de ``ssl.OP_NO_SSL*``"

#: ../../deprecations/pending-removal-in-future.rst:96
msgid "``ssl.OP_NO_TLS*`` options"
msgstr "Opções de ``ssl.OP_NO_TLS*``"

#: ../../deprecations/pending-removal-in-future.rst:97
msgid "``ssl.PROTOCOL_SSLv3``"
msgstr "``ssl.PROTOCOL_SSLv3``"

#: ../../deprecations/pending-removal-in-future.rst:98
msgid "``ssl.PROTOCOL_TLS``"
msgstr "``ssl.PROTOCOL_TLS``"

#: ../../deprecations/pending-removal-in-future.rst:99
msgid "``ssl.PROTOCOL_TLSv1``"
msgstr "``ssl.PROTOCOL_TLSv1``"

#: ../../deprecations/pending-removal-in-future.rst:100
msgid "``ssl.PROTOCOL_TLSv1_1``"
msgstr "``ssl.PROTOCOL_TLSv1_1``"

#: ../../deprecations/pending-removal-in-future.rst:101
msgid "``ssl.PROTOCOL_TLSv1_2``"
msgstr "``ssl.PROTOCOL_TLSv1_2``"

#: ../../deprecations/pending-removal-in-future.rst:102
msgid "``ssl.TLSVersion.SSLv3``"
msgstr "``ssl.TLSVersion.SSLv3``"

#: ../../deprecations/pending-removal-in-future.rst:103
msgid "``ssl.TLSVersion.TLSv1``"
msgstr "``ssl.TLSVersion.TLSv1``"

#: ../../deprecations/pending-removal-in-future.rst:104
msgid "``ssl.TLSVersion.TLSv1_1``"
msgstr "``ssl.TLSVersion.TLSv1_1``"

#: ../../deprecations/pending-removal-in-future.rst:106
msgid ""
":func:`sysconfig.is_python_build` *check_home* parameter is deprecated and "
"ignored."
msgstr ""
"O parâmetro *check_home* de :func:`sysconfig.is_python_build` foi "
"descontinuado e é ignorado."

#: ../../deprecations/pending-removal-in-future.rst:109
msgid ":mod:`threading` methods:"
msgstr "Métodos de :mod:`threading`:"

#: ../../deprecations/pending-removal-in-future.rst:111
msgid ""
":meth:`!threading.Condition.notifyAll`: use :meth:`~threading.Condition."
"notify_all`."
msgstr ""
":meth:`!threading.Condition.notifyAll`: use :meth:`~threading.Condition."
"notify_all`."

#: ../../deprecations/pending-removal-in-future.rst:112
msgid ":meth:`!threading.Event.isSet`: use :meth:`~threading.Event.is_set`."
msgstr ":meth:`!threading.Event.isSet`: use :meth:`~threading.Event.is_set`."

#: ../../deprecations/pending-removal-in-future.rst:113
msgid ""
":meth:`!threading.Thread.isDaemon`, :meth:`threading.Thread.setDaemon`: use :"
"attr:`threading.Thread.daemon` attribute."
msgstr ""
":meth:`!threading.Thread.isDaemon`, :meth:`threading.Thread.setDaemon`: use "
"o atributo :attr:`threading.Thread.daemon`."

#: ../../deprecations/pending-removal-in-future.rst:115
msgid ""
":meth:`!threading.Thread.getName`, :meth:`threading.Thread.setName`: use :"
"attr:`threading.Thread.name` attribute."
msgstr ""
":meth:`!threading.Thread.getName`, :meth:`threading.Thread.setName`: use o "
"atributo :attr:`threading.Thread.name`."

#: ../../deprecations/pending-removal-in-future.rst:117
msgid ":meth:`!threading.currentThread`: use :meth:`threading.current_thread`."
msgstr ""
":meth:`!threading.currentThread`: use :meth:`threading.current_thread`."

#: ../../deprecations/pending-removal-in-future.rst:118
msgid ":meth:`!threading.activeCount`: use :meth:`threading.active_count`."
msgstr ":meth:`!threading.activeCount`: use :meth:`threading.active_count`."

#: ../../deprecations/pending-removal-in-future.rst:120
msgid ":class:`typing.Text` (:gh:`92332`)."
msgstr ":class:`typing.Text` (:gh:`92332`)."

#: ../../deprecations/pending-removal-in-future.rst:122
msgid ""
":class:`unittest.IsolatedAsyncioTestCase`: it is deprecated to return a "
"value that is not ``None`` from a test case."
msgstr ""
":class:`unittest.IsolatedAsyncioTestCase`: foi descontinuado retornar um "
"valor que não seja ``None`` de um caso de teste."

#: ../../deprecations/pending-removal-in-future.rst:125
msgid ""
":mod:`urllib.parse` deprecated functions: :func:`~urllib.parse.urlparse` "
"instead"
msgstr ""
"Funções descontinuadas de :mod:`urllib.parse`: use :func:`~urllib.parse."
"urlparse`"

#: ../../deprecations/pending-removal-in-future.rst:127
msgid "``splitattr()``"
msgstr "``splitattr()``"

#: ../../deprecations/pending-removal-in-future.rst:128
msgid "``splithost()``"
msgstr "``splithost()``"

#: ../../deprecations/pending-removal-in-future.rst:129
msgid "``splitnport()``"
msgstr "``splitnport()``"

#: ../../deprecations/pending-removal-in-future.rst:130
msgid "``splitpasswd()``"
msgstr "``splitpasswd()``"

#: ../../deprecations/pending-removal-in-future.rst:131
msgid "``splitport()``"
msgstr "``splitport()``"

#: ../../deprecations/pending-removal-in-future.rst:132
msgid "``splitquery()``"
msgstr "``splitquery()``"

#: ../../deprecations/pending-removal-in-future.rst:133
msgid "``splittag()``"
msgstr "``splittag()``"

#: ../../deprecations/pending-removal-in-future.rst:134
msgid "``splittype()``"
msgstr "``splittype()``"

#: ../../deprecations/pending-removal-in-future.rst:135
msgid "``splituser()``"
msgstr "``splituser()``"

#: ../../deprecations/pending-removal-in-future.rst:136
msgid "``splitvalue()``"
msgstr "``splitvalue()``"

#: ../../deprecations/pending-removal-in-future.rst:137
msgid "``to_bytes()``"
msgstr "``to_bytes()``"

#: ../../deprecations/pending-removal-in-future.rst:139
msgid ""
":mod:`urllib.request`: :class:`~urllib.request.URLopener` and :class:"
"`~urllib.request.FancyURLopener` style of invoking requests is deprecated. "
"Use newer :func:`~urllib.request.urlopen` functions and methods."
msgstr ""
":mod:`urllib.request`: O estilo de :class:`~urllib.request.URLopener` e :"
"class:`~urllib.request.FancyURLopener` de invocar solicitações foi "
"descontinuado. Use as mais novas funções e métodos :func:`~urllib.request."
"urlopen`."

#: ../../deprecations/pending-removal-in-future.rst:143
msgid ""
":mod:`wsgiref`: ``SimpleHandler.stdout.write()`` should not do partial "
"writes."
msgstr ""
":mod:`wsgiref`: ``SimpleHandler.stdout.write()`` não deve fazer gravações "
"parciais."

#: ../../deprecations/pending-removal-in-future.rst:146
msgid ""
":mod:`xml.etree.ElementTree`: Testing the truth value of an :class:`~xml."
"etree.ElementTree.Element` is deprecated. In a future release it will always "
"return ``True``. Prefer explicit ``len(elem)`` or ``elem is not None`` tests "
"instead."
msgstr ""
":mod:`xml.etree.ElementTree`: testar o valor verdade de um :class:`~xml."
"etree.ElementTree.Element` está descontinuado. Em um lançamento futuro isso "
"sempre retornará ``True``. Em vez disso, prefira os testes explícitos "
"``len(elem)`` ou ``elem is not None``."

#: ../../deprecations/pending-removal-in-future.rst:151
msgid ""
":meth:`zipimport.zipimporter.load_module` is deprecated: use :meth:"
"`~zipimport.zipimporter.exec_module` instead."
msgstr ""
":meth:`zipimport.zipimporter.load_module` foi descontinuado: use :meth:"
"`~zipimport.zipimporter.exec_module`."

#: ../../whatsnew/3.12.rst:1355 ../../whatsnew/3.12.rst:2233
msgid "Removed"
msgstr "Removidos"

#: ../../whatsnew/3.12.rst:1358
msgid "asynchat and asyncore"
msgstr "asynchat e asyncore"

#: ../../whatsnew/3.12.rst:1360
msgid ""
"These two modules have been removed according to the schedule in :pep:`594`, "
"having been deprecated in Python 3.6. Use :mod:`asyncio` instead. "
"(Contributed by Nikita Sobolev in :gh:`96580`.)"
msgstr ""
"Esses dois módulos foram removidos de acordo com o cronograma em :pep:`594`, "
"tendo sido descontinuados no Python 3.6. Use :mod:`asyncio` em vez disso. "
"(Contribuição de Nikita Sobolev em :gh:`96580`.)"

#: ../../whatsnew/3.12.rst:1367
msgid "configparser"
msgstr "configparser"

#: ../../whatsnew/3.12.rst:1369
msgid ""
"Several names deprecated in the :mod:`configparser` way back in 3.2 have "
"been removed per :gh:`89336`:"
msgstr ""
"Vários nomes descontinuados no :mod:`configparser` na versão 3.2 foram "
"removidos por :gh:`89336`:"

#: ../../whatsnew/3.12.rst:1372
msgid ""
":class:`configparser.ParsingError` no longer has a ``filename`` attribute or "
"argument. Use the ``source`` attribute and argument instead."
msgstr ""
":class:`configparser.ParsingError` não possui mais um argumento ou atributo "
"``filename``. Use o atributo e o argumento ``source``."

#: ../../whatsnew/3.12.rst:1374
msgid ""
":mod:`configparser` no longer has a ``SafeConfigParser`` class. Use the "
"shorter :class:`~configparser.ConfigParser` name instead."
msgstr ""
":mod:`configparser` não possui mais uma classe ``SafeConfigParser``. Use o "
"nome :class:`~configparser.ConfigParser` mais curto."

#: ../../whatsnew/3.12.rst:1376
msgid ""
":class:`configparser.ConfigParser` no longer has a ``readfp`` method. Use :"
"meth:`~configparser.ConfigParser.read_file` instead."
msgstr ""
":class:`configparser.ConfigParser` não possui mais um método ``readfp``. "
"Use :meth:`~configparser.ConfigParser.read_file` em vez disso."

#: ../../whatsnew/3.12.rst:1380
msgid "distutils"
msgstr "distutils"

#: ../../whatsnew/3.12.rst:1382
msgid ""
"Remove the :py:mod:`!distutils` package. It was deprecated in Python 3.10 "
"by :pep:`632` \"Deprecate distutils module\". For projects still using "
"``distutils`` and cannot be updated to something else, the ``setuptools`` "
"project can be installed: it still provides ``distutils``. (Contributed by "
"Victor Stinner in :gh:`92584`.)"
msgstr ""
"Remove o pacote :py:mod:`!distutils`. Foi descontinuado no Python 3.10 por :"
"pep:`632` \"Descontinuar o módulo distutils\". Para projetos que ainda usam "
"``distutils`` e não podem ser atualizados para outra coisa, o projeto "
"``setuptools`` pode ser instalado: ele ainda fornece ``distutils``. "
"(Contribuição de Victor Stinner em :gh:`92584`.)"

#: ../../whatsnew/3.12.rst:1389
msgid "ensurepip"
msgstr "ensurepip"

#: ../../whatsnew/3.12.rst:1391
msgid ""
"Remove the bundled setuptools wheel from :mod:`ensurepip`, and stop "
"installing setuptools in environments created by :mod:`venv`."
msgstr ""
"Remove o wheel de setuptools incluído em :mod:`ensurepip` e para de instalar "
"setuptools em ambientes criados por :mod:`venv`."

#: ../../whatsnew/3.12.rst:1394
msgid ""
"``pip (>= 22.1)`` does not require setuptools to be installed in the "
"environment. ``setuptools``-based (and ``distutils``-based) packages can "
"still be used with ``pip install``, since pip will provide ``setuptools`` in "
"the build environment it uses for building a package."
msgstr ""
"``pip (>= 22.1)`` não requer que setuptools sejam instalados no ambiente. "
"Pacotes baseados em ``setuptools`` (e baseados em ``distutils``) ainda podem "
"ser usados com ``pip install``, já que o pip fornecerá ``setuptools`` no "
"ambiente de construção que ele usa para construir um pacote."

#: ../../whatsnew/3.12.rst:1400
msgid ""
"``easy_install``, ``pkg_resources``, ``setuptools`` and ``distutils`` are no "
"longer provided by default in environments created with ``venv`` or "
"bootstrapped with ``ensurepip``, since they are part of the ``setuptools`` "
"package. For projects relying on these at runtime, the ``setuptools`` "
"project should be declared as a dependency and installed separately "
"(typically, using pip)."
msgstr ""
"``easy_install``, ``pkg_resources``, ``setuptools`` e ``distutils`` não são "
"mais fornecidos por padrão em ambientes criados com ``venv`` ou "
"inicializados com ``ensurepip``, já que eles são parte do pacote "
"``setuptools``. Para projetos que dependem destes em tempo de execução, o "
"projeto ``setuptools`` deve ser declarado como uma dependência e instalado "
"separadamente (normalmente, usando pip)."

#: ../../whatsnew/3.12.rst:1407
msgid "(Contributed by Pradyun Gedam in :gh:`95299`.)"
msgstr "(Contribuição de Pradyun Gedam em :gh:`95299`.)"

#: ../../whatsnew/3.12.rst:1410
msgid "enum"
msgstr "enum"

#: ../../whatsnew/3.12.rst:1412
msgid ""
"Remove :mod:`enum`'s ``EnumMeta.__getattr__``, which is no longer needed for "
"enum attribute access. (Contributed by Ethan Furman in :gh:`95083`.)"
msgstr ""
"Remove ``EnumMeta.__getattr__`` de :mod:`enum`, que não é mais necessário "
"para acesso ao atributos do enum. (Contribuição de Ethan Furman em :gh:"
"`95083`.)"

#: ../../whatsnew/3.12.rst:1417
msgid "ftplib"
msgstr "ftplib"

#: ../../whatsnew/3.12.rst:1419
msgid ""
"Remove :mod:`ftplib`'s ``FTP_TLS.ssl_version`` class attribute: use the "
"*context* parameter instead. (Contributed by Victor Stinner in :gh:`94172`.)"
msgstr ""
"Remove o atributo de classe ``FTP_TLS.ssl_version`` do :mod:`ftplib`: use o "
"parâmetro *context* em seu lugar. (Contribuição de Victor Stinner em :gh:"
"`94172`.)"

#: ../../whatsnew/3.12.rst:1424
msgid "gzip"
msgstr "gzip"

#: ../../whatsnew/3.12.rst:1426
msgid ""
"Remove the ``filename`` attribute of :mod:`gzip`'s :class:`gzip.GzipFile`, "
"deprecated since Python 2.6, use the :attr:`~gzip.GzipFile.name` attribute "
"instead. In write mode, the ``filename`` attribute added ``'.gz'`` file "
"extension if it was not present. (Contributed by Victor Stinner in :gh:"
"`94196`.)"
msgstr ""
"Remove o atributo ``filename`` do :class:`gzip.GzipFile` de :mod:`gzip`, "
"descontinuado desde Python 2.6, use o atributo :attr:`~gzip.GzipFile.name` "
"em seu lugar. No modo de gravação, o atributo ``filename`` adicionou a "
"extensão de arquivo ``'.gz'`` se ela não estivesse presente. (Contribuição "
"de Victor Stinner em :gh:`94196`.)"

#: ../../whatsnew/3.12.rst:1433
msgid "hashlib"
msgstr "hashlib"

#: ../../whatsnew/3.12.rst:1435
msgid ""
"Remove the pure Python implementation of :mod:`hashlib`'s :func:`hashlib."
"pbkdf2_hmac`, deprecated in Python 3.10. Python 3.10 and newer requires "
"OpenSSL 1.1.1 (:pep:`644`): this OpenSSL version provides a C implementation "
"of :func:`~hashlib.pbkdf2_hmac` which is faster. (Contributed by Victor "
"Stinner in :gh:`94199`.)"
msgstr ""

#: ../../whatsnew/3.12.rst:1442 ../../whatsnew/3.12.rst:1469
msgid "importlib"
msgstr "importlib"

#: ../../whatsnew/3.12.rst:1444
msgid ""
"Many previously deprecated cleanups in :mod:`importlib` have now been "
"completed:"
msgstr ""
"Foi concluída a remoção de muitos alvos de :mod:`importlib` que haviam sido "
"descontinuados anteriormente:"

#: ../../whatsnew/3.12.rst:1447
msgid ""
"References to, and support for :meth:`!module_repr` has been removed. "
"(Contributed by Barry Warsaw in :gh:`97850`.)"
msgstr ""

#: ../../whatsnew/3.12.rst:1450
msgid ""
"``importlib.util.set_package``, ``importlib.util.set_loader`` and "
"``importlib.util.module_for_loader`` have all been removed. (Contributed by "
"Brett Cannon and Nikita Sobolev in :gh:`65961` and :gh:`97850`.)"
msgstr ""
"``importlib.util.set_package``, ``importlib.util.set_loader`` e ``importlib."
"util.module_for_loader`` foram todos removidos. (Contribuição de Brett "
"Cannon e Nikita Sobolev em :gh:`65961` e :gh:`97850`.)"

#: ../../whatsnew/3.12.rst:1454
msgid ""
"Support for ``find_loader()`` and ``find_module()`` APIs have been removed.  "
"(Contributed by Barry Warsaw in :gh:`98040`.)"
msgstr ""
"O suporte para APIs ``find_loader()`` e ``find_module()`` foi removido. "
"(Contribuição de Barry Warsaw em :gh:`98040`.)"

#: ../../whatsnew/3.12.rst:1457
msgid ""
"``importlib.abc.Finder``, ``pkgutil.ImpImporter``, and ``pkgutil.ImpLoader`` "
"have been removed.  (Contributed by Barry Warsaw in :gh:`98040`.)"
msgstr ""
"``importlib.abc.Finder``, ``pkgutil.ImpImporter`` e ``pkgutil.ImpLoader`` "
"foram removidos. (Contribuição de Barry Warsaw em :gh:`98040`.)"

#: ../../whatsnew/3.12.rst:1461 ../../whatsnew/3.12.rst:1469
msgid "imp"
msgstr "imp"

#: ../../whatsnew/3.12.rst:1463
msgid ""
"The :mod:`!imp` module has been removed.  (Contributed by Barry Warsaw in :"
"gh:`98040`.)"
msgstr ""
"O módulo :mod:`!imp` foi removido. (Contribuição de Barry Warsaw em :gh:"
"`98040`.)"

#: ../../whatsnew/3.12.rst:1466
msgid "To migrate, consult the following correspondence table:"
msgstr "Para migrar consulte a seguinte tabela de correspondência:"

#: ../../whatsnew/3.12.rst:1471
msgid "``imp.NullImporter``"
msgstr "``imp.NullImporter``"

#: ../../whatsnew/3.12.rst:1471
msgid "Insert ``None`` into ``sys.path_importer_cache``"
msgstr "Insere ``None`` em ``sys.path_importer_cache``"

#: ../../whatsnew/3.12.rst:1472
msgid "``imp.cache_from_source()``"
msgstr "``imp.cache_from_source()``"

#: ../../whatsnew/3.12.rst:1472
msgid ":func:`importlib.util.cache_from_source`"
msgstr ":func:`importlib.util.cache_from_source`"

#: ../../whatsnew/3.12.rst:1473
msgid "``imp.find_module()``"
msgstr "``imp.find_module()``"

#: ../../whatsnew/3.12.rst:1473
msgid ":func:`importlib.util.find_spec`"
msgstr ":func:`importlib.util.find_spec`"

#: ../../whatsnew/3.12.rst:1474
msgid "``imp.get_magic()``"
msgstr "``imp.get_magic()``"

#: ../../whatsnew/3.12.rst:1474
msgid ":attr:`importlib.util.MAGIC_NUMBER`"
msgstr ":attr:`importlib.util.MAGIC_NUMBER`"

#: ../../whatsnew/3.12.rst:1475
msgid "``imp.get_suffixes()``"
msgstr "``imp.get_suffixes()``"

#: ../../whatsnew/3.12.rst:1475
msgid ""
":attr:`importlib.machinery.SOURCE_SUFFIXES`, :attr:`importlib.machinery."
"EXTENSION_SUFFIXES`, and :attr:`importlib.machinery.BYTECODE_SUFFIXES`"
msgstr ""
":attr:`importlib.machinery.SOURCE_SUFFIXES`, :attr:`importlib.machinery."
"EXTENSION_SUFFIXES` e :attr:`importlib.machinery.BYTECODE_SUFFIXES`"

#: ../../whatsnew/3.12.rst:1476
msgid "``imp.get_tag()``"
msgstr "``imp.get_tag()``"

#: ../../whatsnew/3.12.rst:1476
msgid ":attr:`sys.implementation.cache_tag <sys.implementation>`"
msgstr ":attr:`sys.implementation.cache_tag <sys.implementation>`"

#: ../../whatsnew/3.12.rst:1477
msgid "``imp.load_module()``"
msgstr "``imp.load_module()``"

#: ../../whatsnew/3.12.rst:1477
msgid ":func:`importlib.import_module`"
msgstr ":func:`importlib.import_module`"

#: ../../whatsnew/3.12.rst:1478
msgid "``imp.new_module(name)``"
msgstr "``imp.new_module(name)``"

#: ../../whatsnew/3.12.rst:1478
msgid "``types.ModuleType(name)``"
msgstr "``types.ModuleType(name)``"

#: ../../whatsnew/3.12.rst:1479
msgid "``imp.reload()``"
msgstr "``imp.reload()``"

#: ../../whatsnew/3.12.rst:1479
msgid ":func:`importlib.reload`"
msgstr ":func:`importlib.reload`"

#: ../../whatsnew/3.12.rst:1480
msgid "``imp.source_from_cache()``"
msgstr "``imp.source_from_cache()``"

#: ../../whatsnew/3.12.rst:1480
msgid ":func:`importlib.util.source_from_cache`"
msgstr ":func:`importlib.util.source_from_cache`"

#: ../../whatsnew/3.12.rst:1481
msgid "``imp.load_source()``"
msgstr "``imp.load_source()``"

#: ../../whatsnew/3.12.rst:1481
msgid "*See below*"
msgstr "*Veja abaixo*"

#: ../../whatsnew/3.12.rst:1484
msgid "Replace ``imp.load_source()`` with::"
msgstr "Substitua ``imp.load_source()`` com::"

#: ../../whatsnew/3.12.rst:1486
msgid ""
"import importlib.util\n"
"import importlib.machinery\n"
"\n"
"def load_source(modname, filename):\n"
"    loader = importlib.machinery.SourceFileLoader(modname, filename)\n"
"    spec = importlib.util.spec_from_file_location(modname, filename, "
"loader=loader)\n"
"    module = importlib.util.module_from_spec(spec)\n"
"    # The module is always executed and not cached in sys.modules.\n"
"    # Uncomment the following line to cache the module.\n"
"    # sys.modules[module.__name__] = module\n"
"    loader.exec_module(module)\n"
"    return module"
msgstr ""

#: ../../whatsnew/3.12.rst:1499
msgid "Remove :mod:`!imp` functions and attributes with no replacements:"
msgstr "Remove funções e atributos do :mod:`!imp` sem substituições:"

#: ../../whatsnew/3.12.rst:1501
msgid "Undocumented functions:"
msgstr "Funções não documentadas:"

#: ../../whatsnew/3.12.rst:1503
msgid "``imp.init_builtin()``"
msgstr "``imp.init_builtin()``"

#: ../../whatsnew/3.12.rst:1504
msgid "``imp.load_compiled()``"
msgstr "``imp.load_compiled()``"

#: ../../whatsnew/3.12.rst:1505
msgid "``imp.load_dynamic()``"
msgstr "``imp.load_dynamic()``"

#: ../../whatsnew/3.12.rst:1506
msgid "``imp.load_package()``"
msgstr "``imp.load_package()``"

#: ../../whatsnew/3.12.rst:1508
msgid ""
"``imp.lock_held()``, ``imp.acquire_lock()``, ``imp.release_lock()``: the "
"locking scheme has changed in Python 3.3 to per-module locks."
msgstr ""
"``imp.lock_held()``, ``imp.acquire_lock()``, ``imp.release_lock()``: o "
"esquema de trava foi alterado no Python 3.3 para travas por módulo."

#: ../../whatsnew/3.12.rst:1510
msgid ""
"``imp.find_module()`` constants: ``SEARCH_ERROR``, ``PY_SOURCE``, "
"``PY_COMPILED``, ``C_EXTENSION``, ``PY_RESOURCE``, ``PKG_DIRECTORY``, "
"``C_BUILTIN``, ``PY_FROZEN``, ``PY_CODERESOURCE``, ``IMP_HOOK``."
msgstr ""
"Constantes de ``imp.find_module()``: ``SEARCH_ERROR``, ``PY_SOURCE``, "
"``PY_COMPILED``, ``C_EXTENSION``, ``PY_RESOURCE``, ``PKG_DIRECTORY``, "
"``C_BUILTIN``, ``PY_FROZEN``, ``PY_CODERESOURCE``, ``IMP_HOOK``."

#: ../../whatsnew/3.12.rst:1515
msgid "io"
msgstr "io"

#: ../../whatsnew/3.12.rst:1517
msgid ""
"Remove :mod:`io`'s ``io.OpenWrapper`` and ``_pyio.OpenWrapper``, deprecated "
"in Python 3.10: just use :func:`open` instead. The :func:`open` (:func:`io."
"open`) function is a built-in function. Since Python 3.10, :func:`!_pyio."
"open` is also a static method. (Contributed by Victor Stinner in :gh:"
"`94169`.)"
msgstr ""
"Remove ``io.OpenWrapper`` e ``_pyio.OpenWrapper`` de :mod:`io`, "
"descontinuados em Python 3.10: basta usar :func:`open` em seu lugar. A "
"função :func:`open` (:func:`io.open`) é uma função embutida. Desde o Python "
"3.10, :func:`!_pyio.open` também é um método estático. (Contribuição de "
"Victor Stinner em :gh:`94169`.)"

#: ../../whatsnew/3.12.rst:1524
msgid "locale"
msgstr "locale"

#: ../../whatsnew/3.12.rst:1526
msgid ""
"Remove :mod:`locale`'s :func:`!locale.format` function, deprecated in Python "
"3.7: use :func:`locale.format_string` instead. (Contributed by Victor "
"Stinner in :gh:`94226`.)"
msgstr ""
"Remove a função :func:`!locale.format` de :mod:`locale`, descontinuada no "
"Python 3.7: use :func:`locale.format_string` em seu lugar. (Contribuição de "
"Victor Stinner em :gh:`94226`.)"

#: ../../whatsnew/3.12.rst:1531
msgid "smtpd"
msgstr "smtpd"

#: ../../whatsnew/3.12.rst:1533
msgid ""
"The ``smtpd`` module has been removed according to the schedule in :pep:"
"`594`, having been deprecated in Python 3.4.7 and 3.5.4. Use the :pypi:"
"`aiosmtpd` PyPI module or any other :mod:`asyncio`-based server instead. "
"(Contributed by Oleg Iarygin in :gh:`93243`.)"
msgstr ""
"O módulo ``smtpd`` foi removido de acordo com o cronograma em :pep:`594`, "
"tendo sido descontinuado em Python 3.4.7 e 3.5.4. Use o módulo PyPI :pypi:"
"`aiosmtpd` ou qualquer outro servidor baseado em :mod:`asyncio`. "
"(Contribuição de Oleg Iarygin em :gh:`93243`.)"

#: ../../whatsnew/3.12.rst:1542
msgid ""
"The following undocumented :mod:`sqlite3` features, deprecated in Python "
"3.10, are now removed:"
msgstr ""
"Os seguintes recursos não documentados do :mod:`sqlite3`, descontinuados no "
"Python 3.10, foram agora removidos:"

#: ../../whatsnew/3.12.rst:1545
msgid "``sqlite3.enable_shared_cache()``"
msgstr "``sqlite3.enable_shared_cache()``"

#: ../../whatsnew/3.12.rst:1546
msgid "``sqlite3.OptimizedUnicode``"
msgstr "``sqlite3.OptimizedUnicode``"

#: ../../whatsnew/3.12.rst:1548
msgid ""
"If a shared cache must be used, open the database in URI mode using the "
"``cache=shared`` query parameter."
msgstr ""
"Se um cache compartilhado deve ser usado, abra o banco de dados no modo URI "
"usando o parâmetro de consulta ``cache=shared``."

#: ../../whatsnew/3.12.rst:1551
msgid ""
"The ``sqlite3.OptimizedUnicode`` text factory has been an alias for :class:"
"`str` since Python 3.3. Code that previously set the text factory to "
"``OptimizedUnicode`` can either use ``str`` explicitly, or rely on the "
"default value which is also ``str``."
msgstr ""
"A fábrica de texto ``sqlite3.OptimizedUnicode`` tem sido um apelido para :"
"class:`str` desde Python 3.3. O código que anteriormente definiu a fábrica "
"de texto como ``OptimizedUnicode`` pode usar ``str`` explicitamente ou "
"confiar no valor padrão que também é ``str``."

#: ../../whatsnew/3.12.rst:1556
msgid "(Contributed by Erlend E. Aasland in :gh:`92548`.)"
msgstr "(Contribuição de Erlend E. Aasland em :gh:`92548`.)"

#: ../../whatsnew/3.12.rst:1559
msgid "ssl"
msgstr "ssl"

#: ../../whatsnew/3.12.rst:1561
msgid ""
"Remove :mod:`ssl`'s :func:`!ssl.RAND_pseudo_bytes` function, deprecated in "
"Python 3.6: use :func:`os.urandom` or :func:`ssl.RAND_bytes` instead. "
"(Contributed by Victor Stinner in :gh:`94199`.)"
msgstr ""
"Remove a função :func:`!ssl.RAND_pseudo_bytes` do :mod:`ssl`, descontinuada "
"no Python 3.6: use :func:`os.urandom` ou :func:`ssl.RAND_bytes` em seu "
"lugar. (Contribuição de Victor Stinner em :gh:`94199`.)"

#: ../../whatsnew/3.12.rst:1565
msgid ""
"Remove the :func:`!ssl.match_hostname` function. It was deprecated in Python "
"3.7. OpenSSL performs hostname matching since Python 3.7, Python no longer "
"uses the :func:`!ssl.match_hostname` function. (Contributed by Victor "
"Stinner in :gh:`94199`.)"
msgstr ""
"Remove a função :func:`!ssl.match_hostname`. Foi descontinuada no Python "
"3.7. OpenSSL realiza correspondência de nome de host desde Python 3.7, "
"Python não usa mais a função :func:`!ssl.match_hostname`. (Contribuição de "
"Victor Stinner em :gh:`94199`.)"

#: ../../whatsnew/3.12.rst:1571
msgid ""
"Remove the :func:`!ssl.wrap_socket` function, deprecated in Python 3.7: "
"instead, create a :class:`ssl.SSLContext` object and call its :class:`ssl."
"SSLContext.wrap_socket` method. Any package that still uses :func:`!ssl."
"wrap_socket` is broken and insecure. The function neither sends a SNI TLS "
"extension nor validates the server hostname. Code is subject to :cwe:`295` "
"(Improper Certificate Validation). (Contributed by Victor Stinner in :gh:"
"`94199`.)"
msgstr ""
"Remove a função :func:`!ssl.wrap_socket`, descontinuada no Python 3.7: em "
"vez desta, crie um objeto :class:`ssl.SSLContext` e chame seu método :class:"
"`ssl.SSLContext.wrap_socket`. Qualquer pacote que ainda use :func:`!ssl."
"wrap_socket` está quebrado e é inseguro. A função não envia uma extensão SNI "
"TLS nem valida o nome do host do servidor. O código está sujeito a :cwe:"
"`295` (validação inadequada de certificado). (Contribuição de Victor Stinner "
"em :gh:`94199`.)"

#: ../../whatsnew/3.12.rst:1582
msgid "Remove many long-deprecated :mod:`unittest` features:"
msgstr "Remove recursos do :mod:`unittest` há muito tempo descontinuados:"

#: ../../whatsnew/3.12.rst:1586
msgid "A number of :class:`~unittest.TestCase` method aliases:"
msgstr "Vários apelidos de método de :class:`~unittest.TestCase`:"

#: ../../whatsnew/3.12.rst:1589
msgid "Deprecated alias"
msgstr "Apelido descontinuado"

#: ../../whatsnew/3.12.rst:1589
msgid "Method Name"
msgstr "Método"

#: ../../whatsnew/3.12.rst:1589
msgid "Deprecated in"
msgstr "Descontinuado em"

#: ../../whatsnew/3.12.rst:1591
msgid "``failUnless``"
msgstr "``failUnless``"

#: ../../whatsnew/3.12.rst:1591 ../../whatsnew/3.12.rst:1598
msgid ":meth:`.assertTrue`"
msgstr ":meth:`.assertTrue`"

#: ../../whatsnew/3.12.rst:1591 ../../whatsnew/3.12.rst:1592
#: ../../whatsnew/3.12.rst:1593 ../../whatsnew/3.12.rst:1594
#: ../../whatsnew/3.12.rst:1595 ../../whatsnew/3.12.rst:1596
#: ../../whatsnew/3.12.rst:1597
msgid "3.1"
msgstr "3.1"

#: ../../whatsnew/3.12.rst:1592
msgid "``failIf``"
msgstr "``failIf``"

#: ../../whatsnew/3.12.rst:1592
msgid ":meth:`.assertFalse`"
msgstr ":meth:`.assertFalse`"

#: ../../whatsnew/3.12.rst:1593
msgid "``failUnlessEqual``"
msgstr "``failUnlessEqual``"

#: ../../whatsnew/3.12.rst:1593 ../../whatsnew/3.12.rst:1599
msgid ":meth:`.assertEqual`"
msgstr ":meth:`.assertEqual`"

#: ../../whatsnew/3.12.rst:1594
msgid "``failIfEqual``"
msgstr "``failIfEqual``"

#: ../../whatsnew/3.12.rst:1594 ../../whatsnew/3.12.rst:1600
msgid ":meth:`.assertNotEqual`"
msgstr ":meth:`.assertNotEqual`"

#: ../../whatsnew/3.12.rst:1595
msgid "``failUnlessAlmostEqual``"
msgstr "``failUnlessAlmostEqual``"

#: ../../whatsnew/3.12.rst:1595 ../../whatsnew/3.12.rst:1601
msgid ":meth:`.assertAlmostEqual`"
msgstr ":meth:`.assertAlmostEqual`"

#: ../../whatsnew/3.12.rst:1596
msgid "``failIfAlmostEqual``"
msgstr "``failIfAlmostEqual``"

#: ../../whatsnew/3.12.rst:1596 ../../whatsnew/3.12.rst:1602
msgid ":meth:`.assertNotAlmostEqual`"
msgstr ":meth:`.assertNotAlmostEqual`"

#: ../../whatsnew/3.12.rst:1597
msgid "``failUnlessRaises``"
msgstr "``failUnlessRaises``"

#: ../../whatsnew/3.12.rst:1597
msgid ":meth:`.assertRaises`"
msgstr ":meth:`.assertRaises`"

#: ../../whatsnew/3.12.rst:1598
msgid "``assert_``"
msgstr "``assert_``"

#: ../../whatsnew/3.12.rst:1598 ../../whatsnew/3.12.rst:1599
#: ../../whatsnew/3.12.rst:1600 ../../whatsnew/3.12.rst:1601
#: ../../whatsnew/3.12.rst:1602 ../../whatsnew/3.12.rst:1603
#: ../../whatsnew/3.12.rst:1604
msgid "3.2"
msgstr "3.2"

#: ../../whatsnew/3.12.rst:1599
msgid "``assertEquals``"
msgstr "``assertEquals``"

#: ../../whatsnew/3.12.rst:1600
msgid "``assertNotEquals``"
msgstr "``assertNotEquals``"

#: ../../whatsnew/3.12.rst:1601
msgid "``assertAlmostEquals``"
msgstr "``assertAlmostEquals``"

#: ../../whatsnew/3.12.rst:1602
msgid "``assertNotAlmostEquals``"
msgstr "``assertNotAlmostEquals``"

#: ../../whatsnew/3.12.rst:1603
msgid "``assertRegexpMatches``"
msgstr "``assertRegexpMatches``"

#: ../../whatsnew/3.12.rst:1603
msgid ":meth:`.assertRegex`"
msgstr ":meth:`.assertRegex`"

#: ../../whatsnew/3.12.rst:1604
msgid "``assertRaisesRegexp``"
msgstr "``assertRaisesRegexp``"

#: ../../whatsnew/3.12.rst:1604
msgid ":meth:`.assertRaisesRegex`"
msgstr ":meth:`.assertRaisesRegex`"

#: ../../whatsnew/3.12.rst:1605
msgid "``assertNotRegexpMatches``"
msgstr "``assertNotRegexpMatches``"

#: ../../whatsnew/3.12.rst:1605
msgid ":meth:`.assertNotRegex`"
msgstr ":meth:`.assertNotRegex`"

#: ../../whatsnew/3.12.rst:1605
msgid "3.5"
msgstr "3.5"

#: ../../whatsnew/3.12.rst:1608
msgid ""
"You can use https://github.com/isidentical/teyit to automatically modernise "
"your unit tests."
msgstr ""
"Você pode usar https://github.com/isidentical/teyit para modernizar "
"automaticamente seus testes de unidade."

#: ../../whatsnew/3.12.rst:1611
msgid ""
"Undocumented and broken :class:`~unittest.TestCase` method "
"``assertDictContainsSubset`` (deprecated in Python 3.2)."
msgstr ""
"Método não documentado e quebrado ``assertDictContainsSubset`` de :class:"
"`~unittest.TestCase` (descontinuado no Python 3.2)."

#: ../../whatsnew/3.12.rst:1614
msgid ""
"Undocumented :meth:`TestLoader.loadTestsFromModule <unittest.TestLoader."
"loadTestsFromModule>` parameter *use_load_tests* (deprecated and ignored "
"since Python 3.5)."
msgstr ""
"Parâmetro não documentado *use_load_tests* de :meth:`TestLoader."
"loadTestsFromModule <unittest.TestLoader.loadTestsFromModule>` "
"(descontinuado e ignorado desde Python 3.5)."

#: ../../whatsnew/3.12.rst:1618
msgid ""
"An alias of the :class:`~unittest.TextTestResult` class: ``_TextTestResult`` "
"(deprecated in Python 3.2)."
msgstr ""
"Um apelido da classe :class:`~unittest.TextTestResult`: ``_TextTestResult`` "
"(descontinuado no Python 3.2)."

#: ../../whatsnew/3.12.rst:1621
msgid "(Contributed by Serhiy Storchaka in :gh:`89325`.)"
msgstr "(Contribuição de Serhiy Storchaka em :gh:`89325`.)"

#: ../../whatsnew/3.12.rst:1624
msgid "webbrowser"
msgstr "webbrowser"

#: ../../whatsnew/3.12.rst:1626
msgid ""
"Remove support for obsolete browsers from :mod:`webbrowser`. The removed "
"browsers include: Grail, Mosaic, Netscape, Galeon, Skipstone, Iceape, "
"Firebird, and Firefox versions 35 and below (:gh:`102871`)."
msgstr ""
"Remove o suporte para navegadores descontinuados de :mod:`webbrowser`. Os "
"navegadores removidos incluem: Grail, Mosaic, Netscape, Galeon, Skipstone, "
"Iceape, Firebird e Firefox versões 35 e inferiores (:gh:`102871`)."

#: ../../whatsnew/3.12.rst:1631
msgid "xml.etree.ElementTree"
msgstr "xml.etree.ElementTree"

#: ../../whatsnew/3.12.rst:1633
msgid ""
"Remove the ``ElementTree.Element.copy()`` method of the pure Python "
"implementation, deprecated in Python 3.10, use the :func:`copy.copy` "
"function instead.  The C implementation of :mod:`xml.etree.ElementTree` has "
"no ``copy()`` method, only a ``__copy__()`` method. (Contributed by Victor "
"Stinner in :gh:`94383`.)"
msgstr ""
"Remove o método ``ElementTree.Element.copy()`` da implementação Python pura, "
"descontinuado no Python 3.10; use a função :func:`copy.copy` em seu lugar. A "
"implementação C de :mod:`xml.etree.ElementTree` não possui nenhum método "
"``copy()``, apenas um método ``__copy__()``. (Contribuição de Victor Stinner "
"em :gh:`94383`.)"

#: ../../whatsnew/3.12.rst:1640
msgid "zipimport"
msgstr "zipimport"

#: ../../whatsnew/3.12.rst:1642
msgid ""
"Remove :mod:`zipimport`'s ``find_loader()`` and ``find_module()`` methods, "
"deprecated in Python 3.10: use the ``find_spec()`` method instead.  See :pep:"
"`451` for the rationale. (Contributed by Victor Stinner in :gh:`94379`.)"
msgstr ""
"Remove os métodos ``find_loader()`` e ``find_module()`` do :mod:`zipimport`, "
"descontinuados no Python 3.10: use o método ``find_spec()`` em seu lugar. "
"Veja :pep:`451` para o raciocínio. (Contribuição de Victor Stinner em :gh:"
"`94379`.)"

#: ../../whatsnew/3.12.rst:1648
msgid "Others"
msgstr "Outros"

#: ../../whatsnew/3.12.rst:1650
msgid ""
"Remove the ``suspicious`` rule from the documentation :file:`Makefile` and :"
"file:`Doc/tools/rstlint.py`, both in favor of `sphinx-lint <https://github."
"com/sphinx-contrib/sphinx-lint>`_. (Contributed by Julien Palard in :gh:"
"`98179`.)"
msgstr ""
"Remove a regra ``suspicious`` do :file:`Makefile` da documentação e do :file:"
"`Doc/tools/rstlint.py`, ambas em favor do `sphinx-lint <https://github.com/"
"sphinx- contrib/sphinx-lint>`_. (Contribuição de Julien Palard em :gh:"
"`98179`.)"

#: ../../whatsnew/3.12.rst:1655
msgid ""
"Remove the *keyfile* and *certfile* parameters from the :mod:`ftplib`, :mod:"
"`imaplib`, :mod:`poplib` and :mod:`smtplib` modules, and the *key_file*, "
"*cert_file* and *check_hostname* parameters from the :mod:`http.client` "
"module, all deprecated since Python 3.6. Use the *context* parameter "
"(*ssl_context* in :mod:`imaplib`) instead. (Contributed by Victor Stinner "
"in :gh:`94172`.)"
msgstr ""
"Remove os parâmetros *keyfile* e *certfile* dos módulos :mod:`ftplib`, :mod:"
"`imaplib`, :mod:`poplib` e :mod:`smtplib`, e dos módulos *key_file*, "
"*cert_file* e *check_hostname* do módulo :mod:`http.client`, todos "
"descontinuados desde Python 3.6. Use o parâmetro *context* (*ssl_context* "
"em :mod:`imaplib`). (Contribuição de Victor Stinner em :gh:`94172`.)"

#: ../../whatsnew/3.12.rst:1663
msgid ""
"Remove ``Jython`` compatibility hacks from several stdlib modules and tests. "
"(Contributed by Nikita Sobolev in :gh:`99482`.)"
msgstr ""
"Remove hacks de compatibilidade ``Jython`` de vários módulos e testes da "
"stdlib. (Contribuição de Nikita Sobolev em :gh:`99482`.)"

#: ../../whatsnew/3.12.rst:1666
msgid ""
"Remove ``_use_broken_old_ctypes_structure_semantics_`` flag from :mod:"
"`ctypes` module. (Contributed by Nikita Sobolev in :gh:`99285`.)"
msgstr ""
"Remove o sinalizador ``_use_broken_old_ctypes_structure_semantics_`` do "
"módulo :mod:`ctypes`. (Contribuição de Nikita Sobolev em :gh:`99285`.)"

#: ../../whatsnew/3.12.rst:1674 ../../whatsnew/3.12.rst:1998
msgid "Porting to Python 3.12"
msgstr "Portando para Python 3.12"

#: ../../whatsnew/3.12.rst:1676
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"Esta seção lista as alterações descritas anteriormente e outras correções "
"que podem exigir alterações no seu código."

#: ../../whatsnew/3.12.rst:1680
msgid "Changes in the Python API"
msgstr "Alterações na API Python"

#: ../../whatsnew/3.12.rst:1682
msgid ""
"More strict rules are now applied for numerical group references and group "
"names in regular expressions. Only sequence of ASCII digits is now accepted "
"as a numerical reference. The group name in bytes patterns and replacement "
"strings can now only contain ASCII letters and digits and underscore. "
"(Contributed by Serhiy Storchaka in :gh:`91760`.)"
msgstr ""
"Regras mais rigorosas agora são aplicadas para referências numéricas de "
"grupos e nomes de grupos em expressões regulares. Apenas a sequência de "
"dígitos ASCII agora é aceita como referência numérica. O nome do grupo em "
"padrões de bytes e strings de substituição agora pode conter apenas letras e "
"dígitos ASCII e sublinhado. (Contribuição de Serhiy Storchaka em :gh:"
"`91760`.)"

#: ../../whatsnew/3.12.rst:1689
msgid ""
"Remove ``randrange()`` functionality deprecated since Python 3.10.  "
"Formerly, ``randrange(10.0)`` losslessly converted to ``randrange(10)``. "
"Now, it raises a :exc:`TypeError`. Also, the exception raised for non-"
"integer values such as ``randrange(10.5)`` or ``randrange('10')`` has been "
"changed from :exc:`ValueError` to :exc:`TypeError`.  This also prevents bugs "
"where ``randrange(1e25)`` would silently select from a larger range than "
"``randrange(10**25)``. (Originally suggested by Serhiy Storchaka :gh:"
"`86388`.)"
msgstr ""
"Remove a funcionalidade ``randrange()`` descontinuada desde o Python 3.10. "
"Anteriormente, ``randrange(10.0)`` era convertido sem perdas para "
"``randrange(10)``. Agora, ele levanta um :exc:`TypeError`. Além disso, a "
"exceção levantada para valores não inteiros como ``randrange(10.5)`` ou "
"``randrange('10')`` foi alterada de :exc:`ValueError` para :exc:`TypeError`. "
"Isso também evita bugs onde ``randrange(1e25)`` selecionaria silenciosamente "
"um intervalo maior que ``randrange(10**25)``. (Originalmente sugerido por "
"Serhiy Storchaka :gh:`86388`.)"

#: ../../whatsnew/3.12.rst:1697
msgid ""
":class:`argparse.ArgumentParser` changed encoding and error handler for "
"reading arguments from file (e.g. ``fromfile_prefix_chars`` option) from "
"default text encoding (e.g. :func:`locale.getpreferredencoding(False) "
"<locale.getpreferredencoding>`) to :term:`filesystem encoding and error "
"handler`. Argument files should be encoded in UTF-8 instead of ANSI Codepage "
"on Windows."
msgstr ""
":class:`argparse.ArgumentParser` alterou a codificação e o tratador de erros "
"para ler argumentos do arquivo (por exemplo, opção "
"``fromfile_prefix_chars``) da codificação de texto padrão (por exemplo, :"
"func:`locale.getpreferredencoding(False) <locale.getpreferredencoding>`) "
"para :term:`tratador de erros e codificação do sistema de arquivos`. Os "
"arquivos de argumento devem ser codificados em UTF-8 em vez de ANSI Codepage "
"no Windows."

#: ../../whatsnew/3.12.rst:1703
msgid ""
"Remove the ``asyncore``-based ``smtpd`` module deprecated in Python 3.4.7 "
"and 3.5.4.  A recommended replacement is the :mod:`asyncio`-based :pypi:"
"`aiosmtpd` PyPI module."
msgstr ""
"Remove o módulo ``smtpd`` baseado em ``asyncore`` descontinuado no Python "
"3.4.7 e 3.5.4. Um substituto recomendado é o módulo PyPI baseado em :mod:"
"`asyncio` :pypi:`aiosmtpd`."

#: ../../whatsnew/3.12.rst:1707
msgid ""
":func:`shlex.split`: Passing ``None`` for *s* argument now raises an "
"exception, rather than reading :data:`sys.stdin`. The feature was deprecated "
"in Python 3.9. (Contributed by Victor Stinner in :gh:`94352`.)"
msgstr ""
":func:`shlex.split`: Passar ``None`` para o argumento *s* agora levanta uma "
"exceção, ao invés de ler :data:`sys.stdin`. O recurso foi descontinuado no "
"Python 3.9. (Contribuição de Victor Stinner em :gh:`94352`.)"

#: ../../whatsnew/3.12.rst:1712
msgid ""
"The :mod:`os` module no longer accepts bytes-like paths, like :class:"
"`bytearray` and :class:`memoryview` types: only the exact :class:`bytes` "
"type is accepted for bytes strings. (Contributed by Victor Stinner in :gh:"
"`98393`.)"
msgstr ""
"O módulo :mod:`os` não aceita mais caminhos bytes ou similar, como os tipos :"
"class:`bytearray` e :class:`memoryview`: apenas o tipo exato :class:`bytes` "
"é aceito para strings de bytes. (Contribuição de Victor Stinner em :gh:"
"`98393`.)"

#: ../../whatsnew/3.12.rst:1717
msgid ""
":func:`syslog.openlog` and :func:`syslog.closelog` now fail if used in "
"subinterpreters. :func:`syslog.syslog` may still be used in subinterpreters, "
"but now only if :func:`syslog.openlog` has already been called in the main "
"interpreter. These new restrictions do not apply to the main interpreter, so "
"only a very small set of users might be affected. This change helps with "
"interpreter isolation.  Furthermore, :mod:`syslog` is a wrapper around "
"process-global resources, which are best managed from the main interpreter. "
"(Contributed by Donghee Na in :gh:`99127`.)"
msgstr ""
":func:`syslog.openlog` e :func:`syslog.closelog` agora falham se usadas ​​em "
"subinterpretadores. :func:`syslog.syslog` ainda pode ser usada em "
"subinterpretadores, mas agora somente se :func:`syslog.openlog` já tiver "
"sido chamada no interpretador principal. Estas novas restrições não se "
"aplicam ao interpretador principal, então apenas um pequeno grupo de "
"usuários poderá ser afetado. Essa mudança ajuda no isolamento do "
"interpretador. Além disso, :mod:`syslog` é um wrapper em torno de recursos "
"globais de processo, que são melhor gerenciados a partir do interpretador "
"principal. (Contribuição de Donghee Na em :gh:`99127`.)"

#: ../../whatsnew/3.12.rst:1726
msgid ""
"The undocumented locking behavior of :func:`~functools.cached_property` is "
"removed, because it locked across all instances of the class, leading to "
"high lock contention. This means that a cached property getter function "
"could now run more than once for a single instance, if two threads race. For "
"most simple cached properties (e.g. those that are idempotent and simply "
"calculate a value based on other attributes of the instance) this will be "
"fine.  If synchronization is needed, implement locking within the cached "
"property getter function or around multi-threaded access points."
msgstr ""
"O comportamento não documentado de trava de :func:`~functools."
"cached_property` foi removido, porque travava todas as instâncias da classe, "
"levando a uma alta contenção de trava. Isso significa que uma função getter "
"de propriedade em cache agora pode ser executada mais de uma vez para uma "
"única instância, se duas threads competirem. Para a maioria das propriedades "
"simples em cache (por exemplo, aquelas que são idempotentes e simplesmente "
"calculam um valor com base em outros atributos da instância), isso será "
"suficiente. Se a sincronização for necessária, implemente a trava na função "
"getter de propriedade em cache ou em torno de pontos de acesso multithread."

#: ../../whatsnew/3.12.rst:1739
msgid ""
"When extracting tar files using :mod:`tarfile` or :func:`shutil."
"unpack_archive`, pass the *filter* argument to limit features that may be "
"surprising or dangerous. See :ref:`tarfile-extraction-filter` for details."
msgstr ""
"Ao extrair arquivos tar usando :mod:`tarfile` ou :func:`shutil."
"unpack_archive`, passe o argumento *filter* para limitar recursos que podem "
"surpreender ou ser perigosos. Veja :ref:`tarfile-extraction-filter` para "
"detalhes."

#: ../../whatsnew/3.12.rst:1744
msgid ""
"The output of the :func:`tokenize.tokenize` and :func:`tokenize."
"generate_tokens` functions is now changed due to the changes introduced in :"
"pep:`701`. This means that ``STRING`` tokens are not emitted any more for f-"
"strings and the tokens described in :pep:`701` are now produced instead: "
"``FSTRING_START``, ``FSTRING_MIDDLE`` and ``FSTRING_END`` are now emitted "
"for f-string \"string\" parts in addition to the appropriate tokens for the "
"tokenization in the expression components. For example for the f-string "
"``f\"start {1+1} end\"`` the old version of the tokenizer emitted::"
msgstr ""
"A saída das funções :func:`tokenize.tokenize` e :func:`tokenize."
"generate_tokens` agora foi alterada devido às mudanças introduzidas na :pep:"
"`701`. Isso significa que os tokens ``STRING`` não são mais emitidos para f-"
"strings e os tokens descritos em :pep:`701` agora são produzidos: "
"``FSTRING_START``, ``FSTRING_MIDDLE`` e ``FSTRING_END`` agora são emitidos "
"para partes \"string\" de f-strings, além dos tokens apropriados para a "
"tokenização nos componentes da expressão. Por exemplo, para a f-string "
"``f\"start {1+1} end\"`` a versão antiga do tokenizer emitida::"

#: ../../whatsnew/3.12.rst:1753
msgid "1,0-1,18:           STRING         'f\"start {1+1} end\"'"
msgstr ""

#: ../../whatsnew/3.12.rst:1755
msgid "while the new version emits::"
msgstr "enquanto a nova versão emite::"

#: ../../whatsnew/3.12.rst:1757
msgid ""
"1,0-1,2:            FSTRING_START  'f\"'\n"
"1,2-1,8:            FSTRING_MIDDLE 'start '\n"
"1,8-1,9:            OP             '{'\n"
"1,9-1,10:           NUMBER         '1'\n"
"1,10-1,11:          OP             '+'\n"
"1,11-1,12:          NUMBER         '1'\n"
"1,12-1,13:          OP             '}'\n"
"1,13-1,17:          FSTRING_MIDDLE ' end'\n"
"1,17-1,18:          FSTRING_END    '\"'"
msgstr ""

#: ../../whatsnew/3.12.rst:1767
msgid ""
"Additionally, there may be some minor behavioral changes as a consequence of "
"the changes required to support :pep:`701`. Some of these changes include:"
msgstr ""
"Além disso, pode haver algumas pequenas alterações comportamentais como "
"consequência das alterações necessárias para oferecer suporte à :pep:`701`. "
"Algumas dessas mudanças incluem:"

#: ../../whatsnew/3.12.rst:1770
msgid ""
"The ``type`` attribute of the tokens emitted when tokenizing some invalid "
"Python characters such as ``!`` has changed from ``ERRORTOKEN`` to ``OP``."
msgstr ""
"O atributo ``type`` dos tokens emitidos ao tokenizar alguns caracteres "
"Python inválidos, como ``!``, mudou de ``ERRORTOKEN`` para ``OP``."

#: ../../whatsnew/3.12.rst:1773
msgid ""
"Incomplete single-line strings now also raise :exc:`tokenize.TokenError` as "
"incomplete multiline strings do."
msgstr ""
"Strings incompletas de linha única agora também levantam :exc:`tokenize."
"TokenError` como fazem strings multilinhas incompletas."

#: ../../whatsnew/3.12.rst:1776
msgid ""
"Some incomplete or invalid Python code now raises :exc:`tokenize.TokenError` "
"instead of returning arbitrary ``ERRORTOKEN`` tokens when tokenizing it."
msgstr ""
"Algum código Python incompleto ou inválido agora levanta :exc:`tokenize."
"TokenError` em vez de retornar tokens ``ERRORTOKEN`` arbitrários ao tokenizá-"
"lo."

#: ../../whatsnew/3.12.rst:1779
msgid ""
"Mixing tabs and spaces as indentation in the same file is not supported "
"anymore and will raise a :exc:`TabError`."
msgstr ""
"Misturar tabulações e espaços como indentação no mesmo arquivo não é mais "
"suportado e vai levantar uma :exc:`TabError`."

#: ../../whatsnew/3.12.rst:1782
msgid ""
"The :mod:`threading` module now expects the :mod:`!_thread` module to have "
"an ``_is_main_interpreter`` attribute.  It is a function with no arguments "
"that returns ``True`` if the current interpreter is the main interpreter."
msgstr ""
"O módulo :mod:`threading` agora espera que o módulo :mod:`!_thread` tenha um "
"atributo ``_is_main_interpreter``. É uma função sem argumentos que retorna "
"``True`` se o interpretador atual for o interpretador principal."

#: ../../whatsnew/3.12.rst:1787
msgid ""
"Any library or application that provides a custom ``_thread`` module should "
"provide ``_is_main_interpreter()``. (See :gh:`112826`.)"
msgstr ""
"Qualquer biblioteca ou aplicação que forneça um módulo ``_thread`` "
"personalizado deve fornecer ``_is_main_interpreter()``. (Veja :gh:`112826`.)"

#: ../../whatsnew/3.12.rst:1792
msgid "Build Changes"
msgstr "Alterações de compilação"

#: ../../whatsnew/3.12.rst:1794
msgid ""
"Python no longer uses :file:`setup.py` to build shared C extension modules. "
"Build parameters like headers and libraries are detected in ``configure`` "
"script. Extensions are built by :file:`Makefile`. Most extensions use ``pkg-"
"config`` and fall back to manual detection. (Contributed by Christian Heimes "
"in :gh:`93939`.)"
msgstr ""
"Python não usa mais :file:`setup.py` para construir módulos de extensão C "
"compartilhados. Parâmetros de construção como cabeçalhos e bibliotecas são "
"detectados no script ``configure``. As extensões são construídas por :file:"
"`Makefile`. A maioria das extensões usa ``pkg-config`` e recorre à detecção "
"manual. (Contribuição de Christian Heimes em :gh:`93939`.)"

#: ../../whatsnew/3.12.rst:1800
msgid ""
"``va_start()`` with two parameters, like ``va_start(args, format),`` is now "
"required to build Python. ``va_start()`` is no longer called with a single "
"parameter. (Contributed by Kumar Aditya in :gh:`93207`.)"
msgstr ""
"``va_start()`` com dois parâmetros, como ``va_start(args, format)``, agora é "
"necessário para construir Python. ``va_start()`` não é mais chamado com um "
"único parâmetro. (Contribuição de Kumar Aditya em :gh:`93207`.)"

#: ../../whatsnew/3.12.rst:1805
msgid ""
"CPython now uses the ThinLTO option as the default link time optimization "
"policy if the Clang compiler accepts the flag. (Contributed by Donghee Na "
"in :gh:`89536`.)"
msgstr ""
"CPython agora usa a opção ThinLTO como política de otimização de tempo de "
"vincualção padrão se o compilador Clang aceitar o sinalizador. (Contribuição "
"de Donghee Na em :gh:`89536`.)"

#: ../../whatsnew/3.12.rst:1809
msgid ""
"Add ``COMPILEALL_OPTS`` variable in :file:`Makefile` to override :mod:"
"`compileall` options (default: ``-j0``) in ``make install``. Also merged the "
"3 ``compileall`` commands into a single command to build .pyc files for all "
"optimization levels (0, 1, 2) at once. (Contributed by Victor Stinner in :gh:"
"`99289`.)"
msgstr ""
"Adiciona a variável ``COMPILEALL_OPTS`` em :file:`Makefile` para substituir "
"as opções :mod:`compileall` (padrão: ``-j0``) em ``make install``. Também "
"fundiu os 3 comandos ``compileall`` em um único comando para construir "
"arquivos .pyc para todos os níveis de otimização (0, 1, 2) de uma só vez. "
"(Contribuição de Victor Stinner em :gh:`99289`.)"

#: ../../whatsnew/3.12.rst:1815
msgid "Add platform triplets for 64-bit LoongArch:"
msgstr "Adiciona trios de plataforma para LoongArch de 64 bits:"

#: ../../whatsnew/3.12.rst:1817
msgid "loongarch64-linux-gnusf"
msgstr "loongarch64-linux-gnusf"

#: ../../whatsnew/3.12.rst:1818
msgid "loongarch64-linux-gnuf32"
msgstr "loongarch64-linux-gnuf32"

#: ../../whatsnew/3.12.rst:1819
msgid "loongarch64-linux-gnu"
msgstr "loongarch64-linux-gnu"

#: ../../whatsnew/3.12.rst:1821
msgid "(Contributed by Zhang Na in :gh:`90656`.)"
msgstr "(Contribuição de Zhang Na em :gh:`90656`.)"

#: ../../whatsnew/3.12.rst:1823
msgid "``PYTHON_FOR_REGEN`` now require Python 3.10 or newer."
msgstr "``PYTHON_FOR_REGEN`` agora requer Python 3.10 ou mais novo."

#: ../../whatsnew/3.12.rst:1825
msgid ""
"Autoconf 2.71 and aclocal 1.16.4 is now required to regenerate :file:`!"
"configure`. (Contributed by Christian Heimes in :gh:`89886`.)"
msgstr ""
"Autoconf 2.71 e aclocal 1.16.4 agora são necessários para regerar :file:`!"
"configure`. (Contribuição de Christian Heimes em :gh:`89886`.)"

#: ../../whatsnew/3.12.rst:1829
msgid ""
"Windows builds and macOS installers from python.org now use OpenSSL 3.0."
msgstr ""
"Construções do Windows e instaladores do macOS em python.org agora usam "
"OpenSSL 3.0."

#: ../../whatsnew/3.12.rst:1833
msgid "C API Changes"
msgstr "Alterações na API C"

#: ../../whatsnew/3.12.rst:1840
msgid ""
":pep:`697`: Introduce the :ref:`Unstable C API tier <unstable-c-api>`, "
"intended for low-level tools like debuggers and JIT compilers. This API may "
"change in each minor release of CPython without deprecation warnings. Its "
"contents are marked by the ``PyUnstable_`` prefix in names."
msgstr ""
":pep:`697`: Introduz o :ref:`tier de API C Instável <unstable-c-api>`, "
"destinada a ferramentas de baixo nível como depuradores e compiladores JIT. "
"Esta API pode mudar em cada versão secundária do CPython sem avisos de "
"descontinuação. Seu conteúdo é marcado pelo prefixo ``PyUnstable_`` nos "
"nomes."

#: ../../whatsnew/3.12.rst:1846
msgid "Code object constructors:"
msgstr "Construtores de objeto código:"

#: ../../whatsnew/3.12.rst:1848
msgid "``PyUnstable_Code_New()`` (renamed from ``PyCode_New``)"
msgstr "``PyUnstable_Code_New()`` (renomeado de ``PyCode_New``)"

#: ../../whatsnew/3.12.rst:1849
msgid ""
"``PyUnstable_Code_NewWithPosOnlyArgs()`` (renamed from "
"``PyCode_NewWithPosOnlyArgs``)"
msgstr ""
"``PyUnstable_Code_NewWithPosOnlyArgs()`` (renomeado de "
"``PyCode_NewWithPosOnlyArgs``)"

#: ../../whatsnew/3.12.rst:1851
msgid "Extra storage for code objects (:pep:`523`):"
msgstr "Armazenamento extra para objetos código (:pep:`523`):"

#: ../../whatsnew/3.12.rst:1853
msgid ""
"``PyUnstable_Eval_RequestCodeExtraIndex()`` (renamed from "
"``_PyEval_RequestCodeExtraIndex``)"
msgstr ""
"``PyUnstable_Eval_RequestCodeExtraIndex()`` (renomeado de "
"``_PyEval_RequestCodeExtraIndex``)"

#: ../../whatsnew/3.12.rst:1854
msgid "``PyUnstable_Code_GetExtra()`` (renamed from ``_PyCode_GetExtra``)"
msgstr "``PyUnstable_Code_GetExtra()`` (renomeado de ``_PyCode_GetExtra``)"

#: ../../whatsnew/3.12.rst:1855
msgid "``PyUnstable_Code_SetExtra()`` (renamed from ``_PyCode_SetExtra``)"
msgstr "``PyUnstable_Code_SetExtra()`` (renomeado de ``_PyCode_SetExtra``)"

#: ../../whatsnew/3.12.rst:1857
msgid ""
"The original names will continue to be available until the respective API "
"changes."
msgstr ""
"Os nomes originais continuarão disponíveis até que a respectiva API seja "
"alterada."

#: ../../whatsnew/3.12.rst:1860
msgid "(Contributed by Petr Viktorin in :gh:`101101`.)"
msgstr "(Contribuição de Petr Viktorin em :gh:`101101`.)"

#: ../../whatsnew/3.12.rst:1862
msgid ""
":pep:`697`: Add an API for extending types whose instance memory layout is "
"opaque:"
msgstr ""
":pep:`697`: Adiciona uma API para estender tipos cujo layout de memória de "
"instância é opaco:"

#: ../../whatsnew/3.12.rst:1865
msgid ""
":c:member:`PyType_Spec.basicsize` can be zero or negative to specify "
"inheriting or extending the base class size."
msgstr ""
":c:member:`PyType_Spec.basicsize` pode ser zero ou negativo para especificar "
"a herança ou extensão do tamanho da classe base."

#: ../../whatsnew/3.12.rst:1867
msgid ""
":c:func:`PyObject_GetTypeData` and :c:func:`PyType_GetTypeDataSize` added to "
"allow access to subclass-specific instance data."
msgstr ""
":c:func:`PyObject_GetTypeData` e :c:func:`PyType_GetTypeDataSize` "
"adicionadas para permitir acesso a dados de instância específicos da "
"subclasse."

#: ../../whatsnew/3.12.rst:1869
msgid ""
":c:macro:`Py_TPFLAGS_ITEMS_AT_END` and :c:func:`PyObject_GetItemData` added "
"to allow safely extending certain variable-sized types, including :c:var:"
"`PyType_Type`."
msgstr ""
":c:macro:`Py_TPFLAGS_ITEMS_AT_END` e :c:func:`PyObject_GetItemData` "
"adicionadas para permitir a extensão segura de certos tipos de tamanho "
"variável, incluindo :c:var:`PyType_Type`."

#: ../../whatsnew/3.12.rst:1872
msgid ""
":c:macro:`Py_RELATIVE_OFFSET` added to allow defining :c:type:`members "
"<PyMemberDef>` in terms of a subclass-specific struct."
msgstr ""
":c:macro:`Py_RELATIVE_OFFSET` adicionada para permitir a definição de :c:"
"type:`membros <PyMemberDef>` em termos de uma estrutura específica da "
"subclasse."

#: ../../whatsnew/3.12.rst:1875
msgid "(Contributed by Petr Viktorin in :gh:`103509`.)"
msgstr "(Contribuição de Petr Viktorin em :gh:`103509`.)"

#: ../../whatsnew/3.12.rst:1877
msgid ""
"Add the new :ref:`limited C API <limited-c-api>` function :c:func:"
"`PyType_FromMetaclass`, which generalizes the existing :c:func:"
"`PyType_FromModuleAndSpec` using an additional metaclass argument. "
"(Contributed by Wenzel Jakob in :gh:`93012`.)"
msgstr ""
"Adiciona à :ref:`API C limitada <limited-c-api>` a nova função :c:func:"
"`PyType_FromMetaclass`, que generaliza a :c:func:`PyType_FromModuleAndSpec` "
"existente usando um argumento de metaclasse adicional. (Contribuição de "
"Wenzel Jakob em :gh:`93012`.)"

#: ../../whatsnew/3.12.rst:1882
msgid ""
"API for creating objects that can be called using :ref:`the vectorcall "
"protocol <vectorcall>` was added to the :ref:`Limited API <stable>`:"
msgstr ""
"API para criação de objetos que podem ser chamados usando :ref:`o protocolo "
"vectorcall <vectorcall>` foi adicionada à :ref:`API Limitada <stable>`:"

#: ../../whatsnew/3.12.rst:1886
msgid ":c:macro:`Py_TPFLAGS_HAVE_VECTORCALL`"
msgstr ":c:macro:`Py_TPFLAGS_HAVE_VECTORCALL`"

#: ../../whatsnew/3.12.rst:1887
msgid ":c:func:`PyVectorcall_NARGS`"
msgstr ":c:func:`PyVectorcall_NARGS`"

#: ../../whatsnew/3.12.rst:1888
msgid ":c:func:`PyVectorcall_Call`"
msgstr ":c:func:`PyVectorcall_Call`"

#: ../../whatsnew/3.12.rst:1889
msgid ":c:type:`vectorcallfunc`"
msgstr ":c:type:`vectorcallfunc`"

#: ../../whatsnew/3.12.rst:1891
msgid ""
"The :c:macro:`Py_TPFLAGS_HAVE_VECTORCALL` flag is now removed from a class "
"when the class's :py:meth:`~object.__call__` method is reassigned. This "
"makes vectorcall safe to use with mutable types (i.e. heap types without the "
"immutable flag, :c:macro:`Py_TPFLAGS_IMMUTABLETYPE`). Mutable types that do "
"not override :c:member:`~PyTypeObject.tp_call` now inherit the "
"``Py_TPFLAGS_HAVE_VECTORCALL`` flag. (Contributed by Petr Viktorin in :gh:"
"`93274`.)"
msgstr ""
"O sinalizador :c:macro:`Py_TPFLAGS_HAVE_VECTORCALL` agora é removido de uma "
"classe quando o método :py:meth:`~object.__call__` da classe é reatribuído. "
"Isso torna vectorcall seguro para uso com tipos mutáveis (ou seja, tipos de "
"heap sem o sinalizador imutável, :c:macro:`Py_TPFLAGS_IMMUTABLETYPE`). Tipos "
"mutáveis que não substituem :c:member:`~PyTypeObject.tp_call` agora herdam o "
"sinalizador ``Py_TPFLAGS_HAVE_VECTORCALL``. (Contribuição de Petr Viktorin "
"em :gh:`93274`.)"

#: ../../whatsnew/3.12.rst:1899
msgid ""
"The :c:macro:`Py_TPFLAGS_MANAGED_DICT` and :c:macro:"
"`Py_TPFLAGS_MANAGED_WEAKREF` flags have been added. This allows extensions "
"classes to support object ``__dict__`` and weakrefs with less bookkeeping, "
"using less memory and with faster access."
msgstr ""
"Os sinalizadores :c:macro:`Py_TPFLAGS_MANAGED_DICT` e :c:macro:"
"`Py_TPFLAGS_MANAGED_WEAKREF` foram adicionados. Isso permite que as classes "
"de extensões ofereçam suporte a objetos ``__dict__`` e weakrefs com menos "
"trabalho, usando menos memória e com acesso mais rápido."

#: ../../whatsnew/3.12.rst:1904
msgid ""
"API for performing calls using :ref:`the vectorcall protocol <vectorcall>` "
"was added to the :ref:`Limited API <stable>`:"
msgstr ""
"API para realizar chamadas usando :ref:`o protocolo vectorcall <vectorcall>` "
"foi adicionada à :ref:`API Limitada <stable>`:"

#: ../../whatsnew/3.12.rst:1908
msgid ":c:func:`PyObject_Vectorcall`"
msgstr ":c:func:`PyObject_Vectorcall`"

#: ../../whatsnew/3.12.rst:1909
msgid ":c:func:`PyObject_VectorcallMethod`"
msgstr ":c:func:`PyObject_VectorcallMethod`"

#: ../../whatsnew/3.12.rst:1910
msgid ":c:macro:`PY_VECTORCALL_ARGUMENTS_OFFSET`"
msgstr ":c:macro:`PY_VECTORCALL_ARGUMENTS_OFFSET`"

#: ../../whatsnew/3.12.rst:1912
msgid ""
"This means that both the incoming and outgoing ends of the vector call "
"protocol are now available in the :ref:`Limited API <stable>`. (Contributed "
"by Wenzel Jakob in :gh:`98586`.)"
msgstr ""
"Isto significa que ambas as extremidades de entrada e saída do protocolo de "
"chamada vetorial estão agora disponíveis na :ref:`API Limitada <stable>`. "
"(Contribuição de Wenzel Jakob em :gh:`98586`.)"

#: ../../whatsnew/3.12.rst:1916
msgid ""
"Add two new public functions, :c:func:`PyEval_SetProfileAllThreads` and :c:"
"func:`PyEval_SetTraceAllThreads`, that allow to set tracing and profiling "
"functions in all running threads in addition to the calling one. "
"(Contributed by Pablo Galindo in :gh:`93503`.)"
msgstr ""
"Adiciona duas novas funções públicas, :c:func:`PyEval_SetProfileAllThreads` "
"e :c:func:`PyEval_SetTraceAllThreads`, que permitem definir funções de "
"rastreamento e perfilação em todos os threads em execução, além do de "
"chamada. (Contribuição de Pablo Galindo em :gh:`93503`.)"

#: ../../whatsnew/3.12.rst:1922
msgid ""
"Add new function :c:func:`PyFunction_SetVectorcall` to the C API which sets "
"the vectorcall field of a given :c:type:`PyFunctionObject`. (Contributed by "
"Andrew Frost in :gh:`92257`.)"
msgstr ""
"Adiciona a nova função :c:func:`PyFunction_SetVectorcall` à API C que define "
"o campo vectorcall de um determinado :c:type:`PyFunctionObject`. "
"(Contribuição de Andrew Frost em :gh:`92257`.)"

#: ../../whatsnew/3.12.rst:1926
msgid ""
"The C API now permits registering callbacks via :c:func:"
"`PyDict_AddWatcher`, :c:func:`PyDict_Watch` and related APIs to be called "
"whenever a dictionary is modified. This is intended for use by optimizing "
"interpreters, JIT compilers, or debuggers. (Contributed by Carl Meyer in :gh:"
"`91052`.)"
msgstr ""
"A API C agora permite registrar funções de retorno de chamada via :c:func:"
"`PyDict_AddWatcher`, :c:func:`PyDict_Watch` e APIs relacionadas a serem "
"chamadas sempre que um dicionário é modificado. Destina-se a ser usado para "
"otimizar interpretadores, compiladores JIT ou depuradores. (Contribuição de "
"Carl Meyer em :gh:`91052`.)"

#: ../../whatsnew/3.12.rst:1932
msgid ""
"Add :c:func:`PyType_AddWatcher` and :c:func:`PyType_Watch` API to register "
"callbacks to receive notification on changes to a type. (Contributed by Carl "
"Meyer in :gh:`91051`.)"
msgstr ""
"Adiciona a API :c:func:`PyType_AddWatcher` e :c:func:`PyType_Watch` para "
"registrar retornos de chamada para receber notificações sobre alterações em "
"um tipo. (Contribuição de Carl Meyer em :gh:`91051`.)"

#: ../../whatsnew/3.12.rst:1936
msgid ""
"Add :c:func:`PyCode_AddWatcher` and :c:func:`PyCode_ClearWatcher` APIs to "
"register callbacks to receive notification on creation and destruction of "
"code objects. (Contributed by Itamar Oren in :gh:`91054`.)"
msgstr ""
"Adiciona APIs :c:func:`PyCode_AddWatcher` e :c:func:`PyCode_ClearWatcher` "
"para registrar retornos de chamada para receber notificação sobre criação e "
"destruição de objetos de código. (Contribuição de Itamar Oren em :gh:"
"`91054`.)"

#: ../../whatsnew/3.12.rst:1941
msgid ""
"Add :c:func:`PyFrame_GetVar` and :c:func:`PyFrame_GetVarString` functions to "
"get a frame variable by its name. (Contributed by Victor Stinner in :gh:"
"`91248`.)"
msgstr ""
"Adiciona as funções :c:func:`PyFrame_GetVar` e :c:func:"
"`PyFrame_GetVarString` para obter uma variável de quadro por seu nome. "
"(Contribuição de Victor Stinner em :gh:`91248`.)"

#: ../../whatsnew/3.12.rst:1945
msgid ""
"Add :c:func:`PyErr_GetRaisedException` and :c:func:"
"`PyErr_SetRaisedException` for saving and restoring the current exception. "
"These functions return and accept a single exception object, rather than the "
"triple arguments of the now-deprecated :c:func:`PyErr_Fetch` and :c:func:"
"`PyErr_Restore`. This is less error prone and a bit more efficient. "
"(Contributed by Mark Shannon in :gh:`101578`.)"
msgstr ""
"Adiciona :c:func:`PyErr_GetRaisedException` e :c:func:"
"`PyErr_SetRaisedException` para salvar e restaurar a exceção atual. Essas "
"funções retornam e aceitam um único objeto de exceção, em vez dos argumentos "
"triplos dos agora obsoletos :c:func:`PyErr_Fetch` e :c:func:`PyErr_Restore`. "
"Isso é menos sujeito a erros e um pouco mais eficiente. (Contribuição de "
"Mark Shannon em :gh:`101578`.)"

#: ../../whatsnew/3.12.rst:1953
msgid ""
"Add ``_PyErr_ChainExceptions1``, which takes an exception instance, to "
"replace the legacy-API ``_PyErr_ChainExceptions``, which is now deprecated. "
"(Contributed by Mark Shannon in :gh:`101578`.)"
msgstr ""
"Adiciona ``_PyErr_ChainExceptions1``, que usa uma instância de exceção, para "
"substituir a API legada ``_PyErr_ChainExceptions``, que agora foi "
"descontinuada. (Contribuição de Mark Shannon em :gh:`101578`.)"

#: ../../whatsnew/3.12.rst:1957
msgid ""
"Add :c:func:`PyException_GetArgs` and :c:func:`PyException_SetArgs` as "
"convenience functions for retrieving and modifying the :attr:`~BaseException."
"args` passed to the exception's constructor. (Contributed by Mark Shannon "
"in :gh:`101578`.)"
msgstr ""
"Adiciona :c:func:`PyException_GetArgs` e :c:func:`PyException_SetArgs` como "
"funções de conveniência para recuperar e modificar o :attr:`~BaseException."
"args` passado para o construtor da exceção. (Contribuição de Mark Shannon "
"em :gh:`101578`.)"

#: ../../whatsnew/3.12.rst:1962
msgid ""
"Add :c:func:`PyErr_DisplayException`, which takes an exception instance, to "
"replace the legacy-api :c:func:`!PyErr_Display`. (Contributed by Irit "
"Katriel in :gh:`102755`)."
msgstr ""
"Adiciona :c:func:`PyErr_DisplayException`, que usa uma instância de exceção, "
"para substituir a API legada :c:func:`!PyErr_Display`. (Contribuição de Irit "
"Katriel em :gh:`102755`)."

#: ../../whatsnew/3.12.rst:1968
msgid ""
":pep:`683`: Introduce *Immortal Objects*, which allows objects to bypass "
"reference counts, and related changes to the C-API:"
msgstr ""
":pep:`683`: Introduz *Objetos Imortais*, que permite que objetos ignorem "
"contagens de referências e alterações relacionadas à API C:"

#: ../../whatsnew/3.12.rst:1971
msgid "``_Py_IMMORTAL_REFCNT``: The reference count that defines an object"
msgstr ""
"``_Py_IMMORTAL_REFCNT``: A contagem de referências que define um objeto"

#: ../../whatsnew/3.12.rst:1972
msgid "as immortal."
msgstr "como imortal."

#: ../../whatsnew/3.12.rst:1973
msgid ""
"``_Py_IsImmortal`` Checks if an object has the immortal reference count."
msgstr ""
"``_Py_IsImmortal`` Verifica se um objeto possui a contagem de referências "
"imortal."

#: ../../whatsnew/3.12.rst:1974
msgid "``PyObject_HEAD_INIT`` This will now initialize reference count to"
msgstr ""
"``PyObject_HEAD_INIT`` Isso agora inicializará a contagem de referências para"

#: ../../whatsnew/3.12.rst:1975
msgid "``_Py_IMMORTAL_REFCNT`` when used with ``Py_BUILD_CORE``."
msgstr "``_Py_IMMORTAL_REFCNT`` quando usado com ``Py_BUILD_CORE``."

#: ../../whatsnew/3.12.rst:1976
msgid "``SSTATE_INTERNED_IMMORTAL`` An identifier for interned unicode objects"
msgstr ""
"``SSTATE_INTERNED_IMMORTAL`` Um identificador para objetos unicode "
"internalizados"

#: ../../whatsnew/3.12.rst:1977
msgid "that are immortal."
msgstr "que são imortais."

#: ../../whatsnew/3.12.rst:1978
msgid "``SSTATE_INTERNED_IMMORTAL_STATIC`` An identifier for interned unicode"
msgstr ""
"``SSTATE_INTERNED_IMMORTAL_STATIC`` Um identificador para unicode "
"internalizado"

#: ../../whatsnew/3.12.rst:1979
msgid "objects that are immortal and static"
msgstr "objetos que são imortais e estáticos"

#: ../../whatsnew/3.12.rst:1980
msgid "``sys.getunicodeinternedsize`` This returns the total number of unicode"
msgstr "``sys.getunicodeinternedsize`` Isso retorna o número total de unicode"

#: ../../whatsnew/3.12.rst:1981
msgid ""
"objects that have been interned. This is now needed for :file:`refleak.py` "
"to correctly track reference counts and allocated blocks"
msgstr ""
"objetos que foram internalizados. Isso agora é necessário para :file:"
"`refleak.py` rastrear corretamente contagens de referências e blocos alocados"

#: ../../whatsnew/3.12.rst:1984
msgid "(Contributed by Eddie Elizondo in :gh:`84436`.)"
msgstr "(Contribuição de Eddie Elizondo em :gh:`84436`.)"

#: ../../whatsnew/3.12.rst:1986
msgid ""
":pep:`684`: Add the new :c:func:`Py_NewInterpreterFromConfig` function and :"
"c:type:`PyInterpreterConfig`, which may be used to create sub-interpreters "
"with their own GILs. (See :ref:`whatsnew312-pep684` for more info.) "
"(Contributed by Eric Snow in :gh:`104110`.)"
msgstr ""
":pep:`684`: Adiciona a nova função :c:func:`Py_NewInterpreterFromConfig` e :"
"c:type:`PyInterpreterConfig`, que podem ser usadas para criar "
"subinterpretadores com suas próprias GILs. (Veja :ref:`whatsnew312-pep684` "
"para mais informações.) (Contribuição de Eric Snow em :gh:`104110`.)"

#: ../../whatsnew/3.12.rst:1992
msgid ""
"In the limited C API version 3.12, :c:func:`Py_INCREF` and :c:func:"
"`Py_DECREF` functions are now implemented as opaque function calls to hide "
"implementation details. (Contributed by Victor Stinner in :gh:`105387`.)"
msgstr ""
"Na API C limitada versão 3.12, as funções :c:func:`Py_INCREF` e :c:func:"
"`Py_DECREF` agora são implementadas como chamadas de função opacas para "
"ocultar detalhes de implementação. (Contribuição de Victor Stinner em :gh:"
"`105387`.)"

#: ../../whatsnew/3.12.rst:2000
msgid ""
"Legacy Unicode APIs based on ``Py_UNICODE*`` representation has been "
"removed. Please migrate to APIs based on UTF-8 or ``wchar_t*``."
msgstr ""
"APIs Unicode legadas baseadas na representação de ``Py_UNICODE*`` foram "
"removidas. Migre para APIs baseadas em UTF-8 ou ``wchar_t*``."

#: ../../whatsnew/3.12.rst:2003
msgid ""
"Argument parsing functions like :c:func:`PyArg_ParseTuple` doesn't support "
"``Py_UNICODE*`` based format (e.g. ``u``, ``Z``) anymore. Please migrate to "
"other formats for Unicode like ``s``, ``z``, ``es``, and ``U``."
msgstr ""
"Funções de análise de argumentos como :c:func:`PyArg_ParseTuple` não mais "
"oferecem suporte a formato baseado em ``Py_UNICODE*`` (por exemplo, ``u``, "
"``Z``). Migre para outros formatos para Unicode como ``s``, ``z``, ``es`` e "
"``U``."

#: ../../whatsnew/3.12.rst:2007
msgid ""
"``tp_weaklist`` for all static builtin types is always ``NULL``. This is an "
"internal-only field on ``PyTypeObject`` but we're pointing out the change in "
"case someone happens to be accessing the field directly anyway.  To avoid "
"breakage, consider using the existing public C-API instead, or, if "
"necessary, the (internal-only) ``_PyObject_GET_WEAKREFS_LISTPTR()`` macro."
msgstr ""
"``tp_weaklist`` para todos os tipos embutidos estáticos é sempre ``NULL``. "
"Este é um campo somente interno em ``PyTypeObject``, mas estamos apontando a "
"mudança caso alguém acesse o campo diretamente de qualquer maneira. Para "
"evitar quebras, considere usar a API C pública existente ou, se necessário, "
"a macro ``_PyObject_GET_WEAKREFS_LISTPTR()`` (somente interna)."

#: ../../whatsnew/3.12.rst:2014
msgid ""
"This internal-only :c:member:`PyTypeObject.tp_subclasses` may now not be a "
"valid object pointer.  Its type was changed to :c:expr:`void *` to reflect "
"this.  We mention this in case someone happens to be accessing the internal-"
"only field directly."
msgstr ""
"Este :c:member:`PyTypeObject.tp_subclasses` somente interno pode agora não "
"ser um ponteiro de objeto válido. Seu tipo foi alterado para :c:expr:`void "
"*` para refletir isso. Mencionamos isso caso alguém esteja acessando "
"diretamente o campo somente interno."

#: ../../whatsnew/3.12.rst:2019
msgid ""
"To get a list of subclasses, call the Python method :py:meth:`~class."
"__subclasses__` (using :c:func:`PyObject_CallMethod`, for example)."
msgstr ""
"Para obter uma lista de subclasses, chame o método Python :py:meth:`~class."
"__subclasses__` (usando :c:func:`PyObject_CallMethod`, por exemplo)."

#: ../../whatsnew/3.12.rst:2023
msgid ""
"Add support of more formatting options (left aligning, octals, uppercase "
"hexadecimals, :c:type:`intmax_t`, :c:type:`ptrdiff_t`, :c:type:`wchar_t` C "
"strings, variable width and precision) in :c:func:`PyUnicode_FromFormat` "
"and :c:func:`PyUnicode_FromFormatV`. (Contributed by Serhiy Storchaka in :gh:"
"`98836`.)"
msgstr ""
"Adicionado suporte para mais opções de formatação (alinhamento à esquerda, "
"octais, hexadecimais maiúsculos, :c:type:`intmax_t`, :c:type:`ptrdiff_t`, :c:"
"type:`wchar_t` strings C, largura variável e precisão) em :c:func:"
"`PyUnicode_FromFormat` e :c:func:`PyUnicode_FromFormatV`. (Contribuição de "
"Serhiy Storchaka em :gh:`98836`.)"

#: ../../whatsnew/3.12.rst:2029
msgid ""
"An unrecognized format character in :c:func:`PyUnicode_FromFormat` and :c:"
"func:`PyUnicode_FromFormatV` now sets a :exc:`SystemError`. In previous "
"versions it caused all the rest of the format string to be copied as-is to "
"the result string, and any extra arguments discarded. (Contributed by Serhiy "
"Storchaka in :gh:`95781`.)"
msgstr ""
"Um caractere de formato não reconhecido em :c:func:`PyUnicode_FromFormat` e :"
"c:func:`PyUnicode_FromFormatV` agora define um :exc:`SystemError`. Nas "
"versões anteriores, fazia com que todo o restante da string de formato fosse "
"copiado como estava para a string de resultado e quaisquer argumentos extras "
"descartados. (Contribuição de Serhiy Storchaka em :gh:`95781`.)"

#: ../../whatsnew/3.12.rst:2035
msgid ""
"Fix wrong sign placement in :c:func:`PyUnicode_FromFormat` and :c:func:"
"`PyUnicode_FromFormatV`. (Contributed by Philip Georgi in :gh:`95504`.)"
msgstr ""
"Corrige o posicionamento incorreto do sinal em :c:func:"
"`PyUnicode_FromFormat` e :c:func:`PyUnicode_FromFormatV`. (Contribuição de "
"Philip Georgi em :gh:`95504`.)"

#: ../../whatsnew/3.12.rst:2039
msgid ""
"Extension classes wanting to add a ``__dict__`` or weak reference slot "
"should use :c:macro:`Py_TPFLAGS_MANAGED_DICT` and :c:macro:"
"`Py_TPFLAGS_MANAGED_WEAKREF` instead of ``tp_dictoffset`` and "
"``tp_weaklistoffset``, respectively. The use of ``tp_dictoffset`` and "
"``tp_weaklistoffset`` is still supported, but does not fully support "
"multiple inheritance (:gh:`95589`), and performance may be worse. Classes "
"declaring :c:macro:`Py_TPFLAGS_MANAGED_DICT` should call :c:func:`!"
"_PyObject_VisitManagedDict` and :c:func:`!_PyObject_ClearManagedDict` to "
"traverse and clear their instance's dictionaries. To clear weakrefs, call :c:"
"func:`PyObject_ClearWeakRefs`, as before."
msgstr ""
"Classes de extensão que desejam adicionar um ``__dict__`` ou slot de "
"referência fraca devem usar :c:macro:`Py_TPFLAGS_MANAGED_DICT` e :c:macro:"
"`Py_TPFLAGS_MANAGED_WEAKREF` em vez de ``tp_dictoffset`` e "
"``tp_weaklistoffset``, respectivamente. O uso de ``tp_dictoffset`` e "
"``tp_weaklistoffset`` ainda é aceitado, mas não oferece suporte totalmente  "
"a herança múltipla (:gh:`95589`), e o desempenho pode ser pior. Classes que "
"declaram :c:macro:`Py_TPFLAGS_MANAGED_DICT` devem chamar :c:func:`!"
"_PyObject_VisitManagedDict` e :c:func:`!_PyObject_ClearManagedDict` para "
"percorrer e limpar os dicionários de sua instância. Para limpar weakrefs "
"(referências fracas), chame :c:func:`PyObject_ClearWeakRefs`, como antes."

#: ../../whatsnew/3.12.rst:2051
msgid ""
"The :c:func:`PyUnicode_FSDecoder` function no longer accepts bytes-like "
"paths, like :class:`bytearray` and :class:`memoryview` types: only the "
"exact :class:`bytes` type is accepted for bytes strings. (Contributed by "
"Victor Stinner in :gh:`98393`.)"
msgstr ""
"A função :c:func:`PyUnicode_FSDecoder` não aceita mais caminhos bytes ou "
"similar, como os tipos :class:`bytearray` e :class:`memoryview`: apenas o "
"tipo exato :class:`bytes` é aceito para strings de bytes. (Contribuição de "
"Victor Stinner em :gh:`98393`.)"

#: ../../whatsnew/3.12.rst:2056
msgid ""
"The :c:macro:`Py_CLEAR`, :c:macro:`Py_SETREF` and :c:macro:`Py_XSETREF` "
"macros now only evaluate their arguments once. If an argument has side "
"effects, these side effects are no longer duplicated. (Contributed by Victor "
"Stinner in :gh:`98724`.)"
msgstr ""
"As macros :c:macro:`Py_CLEAR`, :c:macro:`Py_SETREF` e :c:macro:`Py_XSETREF` "
"agora avaliam seus argumentos apenas uma vez. Se um argumento tiver efeitos "
"colaterais, esses efeitos colaterais não serão mais duplicados. "
"(Contribuição de Victor Stinner em :gh:`98724`.)"

#: ../../whatsnew/3.12.rst:2061
msgid ""
"The interpreter's error indicator is now always normalized. This means that :"
"c:func:`PyErr_SetObject`, :c:func:`PyErr_SetString` and the other functions "
"that set the error indicator now normalize the exception before storing it. "
"(Contributed by Mark Shannon in :gh:`101578`.)"
msgstr ""
"O indicador de erro do interpretador agora está sempre normalizado. Isso "
"significa que :c:func:`PyErr_SetObject`, :c:func:`PyErr_SetString` e as "
"outras funções que definem o indicador de erro agora normalizam a exceção "
"antes de armazená-la. (Contribuição de Mark Shannon em :gh:`101578`.)"

#: ../../whatsnew/3.12.rst:2066
msgid ""
"``_Py_RefTotal`` is no longer authoritative and only kept around for ABI "
"compatibility.  Note that it is an internal global and only available on "
"debug builds.  If you happen to be using it then you'll need to start using "
"``_Py_GetGlobalRefTotal()``."
msgstr ""
"``_Py_RefTotal`` não é mais oficial e é mantido apenas para compatibilidade "
"com ABI. Observe que é um global interno e está disponível apenas em "
"compilações de depuração. Se acontecer de você usá-lo, você precisará "
"começar a usar ``_Py_GetGlobalRefTotal()``."

#: ../../whatsnew/3.12.rst:2071
msgid ""
"The following functions now select an appropriate metaclass for the newly "
"created type:"
msgstr ""
"As seguintes funções agora selecionam uma metaclasse apropriada para o tipo "
"recém-criado:"

#: ../../whatsnew/3.12.rst:2074
msgid ":c:func:`PyType_FromSpec`"
msgstr ":c:func:`PyType_FromSpec`"

#: ../../whatsnew/3.12.rst:2075
msgid ":c:func:`PyType_FromSpecWithBases`"
msgstr ":c:func:`PyType_FromSpecWithBases`"

#: ../../whatsnew/3.12.rst:2076
msgid ":c:func:`PyType_FromModuleAndSpec`"
msgstr ":c:func:`PyType_FromModuleAndSpec`"

#: ../../whatsnew/3.12.rst:2078
msgid ""
"Creating classes whose metaclass overrides :c:member:`~PyTypeObject.tp_new` "
"is deprecated, and in Python 3.14+ it will be disallowed. Note that these "
"functions ignore ``tp_new`` of the metaclass, possibly allowing incomplete "
"initialization."
msgstr ""
"A criação de classes cujas substituições de metaclasse :c:member:"
"`~PyTypeObject.tp_new` foi descontinuada e no Python 3.14+ não será "
"permitida. Observe que essas funções ignoram ``tp_new`` da metaclasse, "
"possivelmente permitindo uma inicialização incompleta."

#: ../../whatsnew/3.12.rst:2083
msgid ""
"Note that :c:func:`PyType_FromMetaclass` (added in Python 3.12) already "
"disallows creating classes whose metaclass overrides ``tp_new`` (:meth:"
"`~object.__new__` in Python)."
msgstr ""
"Observe que :c:func:`PyType_FromMetaclass` (adicionada em Python 3.12) já "
"não permite a criação de classes cuja metaclasse substitui ``tp_new`` (:meth:"
"`~object.__new__` em Python)."

#: ../../whatsnew/3.12.rst:2087
msgid ""
"Since ``tp_new`` overrides almost everything ``PyType_From*`` functions do, "
"the two are incompatible with each other. The existing behavior -- ignoring "
"the metaclass for several steps of type creation -- is unsafe in general, "
"since (meta)classes assume that ``tp_new`` was called. There is no simple "
"general workaround. One of the following may work for you:"
msgstr ""
"Como ``tp_new`` substitui quase tudo que as funções ``PyType_From*`` fazem, "
"os dois são incompatíveis entre si. O comportamento existente -- ignorar a "
"metaclasse em vários passos de criação do tipo -- é inseguro em geral, uma "
"vez que as (meta)classes presumem que ``tp_new`` foi chamado. Não existe uma "
"solução geral simples. Um dos seguintes pode funcionar para você:"

#: ../../whatsnew/3.12.rst:2094
msgid "If you control the metaclass, avoid using ``tp_new`` in it:"
msgstr "Se você controla a metaclasse, evite usar ``tp_new`` nela:"

#: ../../whatsnew/3.12.rst:2096
msgid ""
"If initialization can be skipped, it can be done in :c:member:`~PyTypeObject."
"tp_init` instead."
msgstr ""
"Se a inicialização puder ser ignorada, isso pode ser feito em :c:member:"
"`~PyTypeObject.tp_init`."

#: ../../whatsnew/3.12.rst:2098
msgid ""
"If the metaclass doesn't need to be instantiated from Python, set its "
"``tp_new`` to ``NULL`` using the :c:macro:"
"`Py_TPFLAGS_DISALLOW_INSTANTIATION` flag. This makes it acceptable for "
"``PyType_From*`` functions."
msgstr ""
"Se a metaclasse não precisa ser instanciada do Python, defina seu ``tp_new`` "
"como ``NULL`` usando o sinalizador :c:macro:"
"`Py_TPFLAGS_DISALLOW_INSTANTIATION`. Isso o torna aceitável para funções "
"``PyType_From*``."

#: ../../whatsnew/3.12.rst:2103
msgid ""
"Avoid ``PyType_From*`` functions: if you don't need C-specific features "
"(slots or setting the instance size), create types by :ref:`calling <call>` "
"the metaclass."
msgstr ""
"Evite funções ``PyType_From*``: se você não precisa de recursos específicos "
"do C (slots ou configuração do tamanho da instância), crie tipos :ref:"
"`chamando <call>` a metaclasse."

#: ../../whatsnew/3.12.rst:2107
msgid ""
"If you *know* the ``tp_new`` can be skipped safely, filter the deprecation "
"warning out using :func:`warnings.catch_warnings` from Python."
msgstr ""
"Se você *sabe* que ``tp_new`` pode ser ignorado com segurança, filtre o "
"aviso de descontinuação usando :func:`warnings.catch_warnings` do Python."

#: ../../whatsnew/3.12.rst:2110
msgid ""
":c:var:`PyOS_InputHook` and :c:var:`PyOS_ReadlineFunctionPointer` are no "
"longer called in :ref:`subinterpreters <sub-interpreter-support>`. This is "
"because clients generally rely on process-wide global state (since these "
"callbacks have no way of recovering extension module state)."
msgstr ""
":c:var:`PyOS_InputHook` e :c:var:`PyOS_ReadlineFunctionPointer` não são mais "
"chamados em :ref:`subinterpretadores <sub-interpreter-support>`. Isso ocorre "
"porque os clientes geralmente dependem do estado global de todo o processo "
"(uma vez que esses retornos de chamada não têm como recuperar o estado do "
"módulo de extensão)."

#: ../../whatsnew/3.12.rst:2115
msgid ""
"This also avoids situations where extensions may find themselves running in "
"a subinterpreter that they don't support (or haven't yet been loaded in). "
"See :gh:`104668` for more info."
msgstr ""
"Isso também evita situações em que as extensões podem ser executadas em um "
"subinterpretador que não oferecem suporte (ou no qual ainda não foram "
"carregadas). Veja :gh:`104668` para mais informações."

#: ../../whatsnew/3.12.rst:2119
msgid ""
":c:struct:`PyLongObject` has had its internals changed for better "
"performance. Although the internals of :c:struct:`PyLongObject` are private, "
"they are used by some extension modules. The internal fields should no "
"longer be accessed directly, instead the API functions beginning ``PyLong_..."
"`` should be used instead. Two new *unstable* API functions are provided for "
"efficient access to the value of :c:struct:`PyLongObject`\\s which fit into "
"a single machine word:"
msgstr ""
":c:struct:`PyLongObject` teve seus componentes internos alterados para "
"melhor desempenho. Embora os internos de :c:struct:`PyLongObject` sejam "
"privados, eles são usados por alguns módulos de extensão. Os campos internos "
"não devem mais ser acessados diretamente, em vez disso, as funções da API "
"que começam com ``PyLong_...`` devem ser usadas. Duas novas funções de API "
"*instáveis* são fornecidas para acesso eficiente ao valor de :c:struct:"
"`PyLongObject`\\s que cabe em uma única palavra de máquina:"

#: ../../whatsnew/3.12.rst:2127
msgid ":c:func:`PyUnstable_Long_IsCompact`"
msgstr ":c:func:`PyUnstable_Long_IsCompact`"

#: ../../whatsnew/3.12.rst:2128
msgid ":c:func:`PyUnstable_Long_CompactValue`"
msgstr ":c:func:`PyUnstable_Long_CompactValue`"

#: ../../whatsnew/3.12.rst:2130
msgid ""
"Custom allocators, set via :c:func:`PyMem_SetAllocator`, are now required to "
"be thread-safe, regardless of memory domain.  Allocators that don't have "
"their own state, including \"hooks\", are not affected. If your custom "
"allocator is not already thread-safe and you need guidance then please "
"create a new GitHub issue and CC ``@ericsnowcurrently``."
msgstr ""
"Alocadores personalizados, definidos via :c:func:`PyMem_SetAllocator`, agora "
"precisam ser seguros para thread, independentemente do domínio de memória. "
"Os alocadores que não possuem estado próprio, incluindo \"ganchos\", não são "
"afetados. Se o seu alocador personalizado ainda não for seguro para thread e "
"você precisar de orientação, crie um novo relatório de problema no GitHub e "
"CC ``@ericsnowcurrently``."

#: ../../whatsnew/3.12.rst:2140
msgid ""
"In accordance with :pep:`699`, the ``ma_version_tag`` field in :c:type:"
"`PyDictObject` is deprecated for extension modules. Accessing this field "
"will generate a compiler warning at compile time. This field will be removed "
"in Python 3.14. (Contributed by Ramvikrams and Kumar Aditya in :gh:`101193`. "
"PEP by Ken Jin.)"
msgstr ""
"Em conformidade com a :pep:`699`, o campo ``ma_version_tag`` em :c:type:"
"`PyDictObject` foi descontinuado para módulos de extensão. Acessar este "
"campo gerará um aviso do compilador em tempo de compilação. Este campo será "
"removido no Python 3.14. (Contribuição de Ramvikrams e Kumar Aditya em :gh:"
"`101193`. PEP de Ken Jin.)"

#: ../../whatsnew/3.12.rst:2145
msgid "Deprecate global configuration variable:"
msgstr "Variáveis de configuração global descontinuadas:"

#: ../../whatsnew/3.12.rst:2147
msgid ":c:var:`Py_DebugFlag`: use :c:member:`PyConfig.parser_debug`"
msgstr ":c:var:`Py_DebugFlag`: use :c:member:`PyConfig.parser_debug`"

#: ../../whatsnew/3.12.rst:2148
msgid ":c:var:`Py_VerboseFlag`: use :c:member:`PyConfig.verbose`"
msgstr ":c:var:`Py_VerboseFlag`: use :c:member:`PyConfig.verbose`"

#: ../../whatsnew/3.12.rst:2149
msgid ":c:var:`Py_QuietFlag`: use :c:member:`PyConfig.quiet`"
msgstr ":c:var:`Py_QuietFlag`: use :c:member:`PyConfig.quiet`"

#: ../../whatsnew/3.12.rst:2150
msgid ":c:var:`Py_InteractiveFlag`: use :c:member:`PyConfig.interactive`"
msgstr ":c:var:`Py_InteractiveFlag`: use :c:member:`PyConfig.interactive`"

#: ../../whatsnew/3.12.rst:2151
msgid ":c:var:`Py_InspectFlag`: use :c:member:`PyConfig.inspect`"
msgstr ":c:var:`Py_InspectFlag`: use :c:member:`PyConfig.inspect`"

#: ../../whatsnew/3.12.rst:2152
msgid ":c:var:`Py_OptimizeFlag`: use :c:member:`PyConfig.optimization_level`"
msgstr ":c:var:`Py_OptimizeFlag`: use :c:member:`PyConfig.optimization_level`"

#: ../../whatsnew/3.12.rst:2153
msgid ":c:var:`Py_NoSiteFlag`: use :c:member:`PyConfig.site_import`"
msgstr ":c:var:`Py_NoSiteFlag`: use :c:member:`PyConfig.site_import`"

#: ../../whatsnew/3.12.rst:2154
msgid ":c:var:`Py_BytesWarningFlag`: use :c:member:`PyConfig.bytes_warning`"
msgstr ":c:var:`Py_BytesWarningFlag`: use :c:member:`PyConfig.bytes_warning`"

#: ../../whatsnew/3.12.rst:2155
msgid ":c:var:`Py_FrozenFlag`: use :c:member:`PyConfig.pathconfig_warnings`"
msgstr ":c:var:`Py_FrozenFlag`: use :c:member:`PyConfig.pathconfig_warnings`"

#: ../../whatsnew/3.12.rst:2156
msgid ""
":c:var:`Py_IgnoreEnvironmentFlag`: use :c:member:`PyConfig.use_environment`"
msgstr ""
":c:var:`Py_IgnoreEnvironmentFlag`: use :c:member:`PyConfig.use_environment`"

#: ../../whatsnew/3.12.rst:2157
msgid ""
":c:var:`Py_DontWriteBytecodeFlag`: use :c:member:`PyConfig.write_bytecode`"
msgstr ""
":c:var:`Py_DontWriteBytecodeFlag`: use :c:member:`PyConfig.write_bytecode`"

#: ../../whatsnew/3.12.rst:2158
msgid ""
":c:var:`Py_NoUserSiteDirectory`: use :c:member:`PyConfig.user_site_directory`"
msgstr ""
":c:var:`Py_NoUserSiteDirectory`: use :c:member:`PyConfig.user_site_directory`"

#: ../../whatsnew/3.12.rst:2159
msgid ""
":c:var:`Py_UnbufferedStdioFlag`: use :c:member:`PyConfig.buffered_stdio`"
msgstr ""
":c:var:`Py_UnbufferedStdioFlag`: use :c:member:`PyConfig.buffered_stdio`"

#: ../../whatsnew/3.12.rst:2160
msgid ""
":c:var:`Py_HashRandomizationFlag`: use :c:member:`PyConfig.use_hash_seed` "
"and :c:member:`PyConfig.hash_seed`"
msgstr ""
":c:var:`Py_HashRandomizationFlag`: use :c:member:`PyConfig.use_hash_seed` "
"and :c:member:`PyConfig.hash_seed`"

#: ../../whatsnew/3.12.rst:2162
msgid ":c:var:`Py_IsolatedFlag`: use :c:member:`PyConfig.isolated`"
msgstr ":c:var:`Py_IsolatedFlag`: use :c:member:`PyConfig.isolated`"

#: ../../whatsnew/3.12.rst:2163
msgid ""
":c:var:`Py_LegacyWindowsFSEncodingFlag`: use :c:member:`PyPreConfig."
"legacy_windows_fs_encoding`"
msgstr ""
":c:var:`Py_LegacyWindowsFSEncodingFlag`: use :c:member:`PyPreConfig."
"legacy_windows_fs_encoding`"

#: ../../whatsnew/3.12.rst:2164
msgid ""
":c:var:`Py_LegacyWindowsStdioFlag`: use :c:member:`PyConfig."
"legacy_windows_stdio`"
msgstr ""
":c:var:`Py_LegacyWindowsStdioFlag`: use :c:member:`PyConfig."
"legacy_windows_stdio`"

#: ../../whatsnew/3.12.rst:2165
msgid ""
":c:var:`!Py_FileSystemDefaultEncoding`: use :c:member:`PyConfig."
"filesystem_encoding`"
msgstr ""
":c:var:`!Py_FileSystemDefaultEncoding`: use :c:member:`PyConfig."
"filesystem_encoding`"

#: ../../whatsnew/3.12.rst:2166
msgid ""
":c:var:`!Py_HasFileSystemDefaultEncoding`: use :c:member:`PyConfig."
"filesystem_encoding`"
msgstr ""
":c:var:`!Py_HasFileSystemDefaultEncoding`: use :c:member:`PyConfig."
"filesystem_encoding`"

#: ../../whatsnew/3.12.rst:2167
msgid ""
":c:var:`!Py_FileSystemDefaultEncodeErrors`: use :c:member:`PyConfig."
"filesystem_errors`"
msgstr ""
":c:var:`!Py_FileSystemDefaultEncodeErrors`: use :c:member:`PyConfig."
"filesystem_errors`"

#: ../../whatsnew/3.12.rst:2168
msgid ""
":c:var:`!Py_UTF8Mode`: use :c:member:`PyPreConfig.utf8_mode` (see :c:func:"
"`Py_PreInitialize`)"
msgstr ""
":c:var:`!Py_UTF8Mode`: use :c:member:`PyPreConfig.utf8_mode` (see :c:func:"
"`Py_PreInitialize`)"

#: ../../whatsnew/3.12.rst:2170
msgid ""
"The :c:func:`Py_InitializeFromConfig` API should be used with :c:type:"
"`PyConfig` instead. (Contributed by Victor Stinner in :gh:`77782`.)"
msgstr ""
"A API :c:func:`Py_InitializeFromConfig` deve ser usada com :c:type:"
"`PyConfig`. (Contribuição de Victor Stinner em :gh:`77782`.)"

#: ../../whatsnew/3.12.rst:2174
msgid ""
"Creating :c:data:`immutable types <Py_TPFLAGS_IMMUTABLETYPE>` with mutable "
"bases is deprecated and will be disabled in Python 3.14. (:gh:`95388`)"
msgstr ""
"A criação de :c:data:`tipos imutáveis <Py_TPFLAGS_IMMUTABLETYPE>` com bases "
"mutáveis foi descontinuada e será desativada no Python 3.14. (:gh:`95388`)"

#: ../../whatsnew/3.12.rst:2177
msgid ""
"The :file:`structmember.h` header is deprecated, though it continues to be "
"available and there are no plans to remove it."
msgstr ""
"O cabeçalho :file:`structmember.h` foi descontinuado, embora continue "
"disponível e não haja planos para removê-lo."

#: ../../whatsnew/3.12.rst:2180
msgid ""
"Its contents are now available just by including :file:`Python.h`, with a "
"``Py`` prefix added if it was missing:"
msgstr ""
"Seu conteúdo agora está disponível apenas incluindo :file:`Python.h`, com um "
"prefixo ``Py`` adicionado se estiver faltando:"

#: ../../whatsnew/3.12.rst:2183
msgid ""
":c:struct:`PyMemberDef`, :c:func:`PyMember_GetOne` and :c:func:"
"`PyMember_SetOne`"
msgstr ""
":c:struct:`PyMemberDef`, :c:func:`PyMember_GetOne` e :c:func:"
"`PyMember_SetOne`"

#: ../../whatsnew/3.12.rst:2185
msgid ""
"Type macros like :c:macro:`Py_T_INT`, :c:macro:`Py_T_DOUBLE`, etc. "
"(previously ``T_INT``, ``T_DOUBLE``, etc.)"
msgstr ""
"Macros de tipo como :c:macro:`Py_T_INT`, :c:macro:`Py_T_DOUBLE`, etc. "
"(anteriormente ``T_INT``, ``T_DOUBLE``, etc.)"

#: ../../whatsnew/3.12.rst:2187
msgid ""
"The flags :c:macro:`Py_READONLY` (previously ``READONLY``) and :c:macro:"
"`Py_AUDIT_READ` (previously all uppercase)"
msgstr ""
"Os sinalizadores :c:macro:`Py_READONLY` (anteriormente ``READONLY``) e :c:"
"macro:`Py_AUDIT_READ` (anteriormente todas em maiúsculas)"

#: ../../whatsnew/3.12.rst:2190
msgid "Several items are not exposed from :file:`Python.h`:"
msgstr "Vários itens não são expostos em :file:`Python.h`:"

#: ../../whatsnew/3.12.rst:2192
msgid ":c:macro:`T_OBJECT` (use :c:macro:`Py_T_OBJECT_EX`)"
msgstr ":c:macro:`T_OBJECT` (use :c:macro:`Py_T_OBJECT_EX`)"

#: ../../whatsnew/3.12.rst:2193
msgid ":c:macro:`T_NONE` (previously undocumented, and pretty quirky)"
msgstr ":c:macro:`T_NONE` (anteriormente não documentada e bastante estranha)"

#: ../../whatsnew/3.12.rst:2194
msgid "The macro ``WRITE_RESTRICTED`` which does nothing."
msgstr "A macro ``WRITE_RESTRICTED`` que não faz nada."

#: ../../whatsnew/3.12.rst:2195
msgid ""
"The macros ``RESTRICTED`` and ``READ_RESTRICTED``, equivalents of :c:macro:"
"`Py_AUDIT_READ`."
msgstr ""
"As macros ``RESTRICTED`` e ``READ_RESTRICTED``, equivalentes a :c:macro:"
"`Py_AUDIT_READ`."

#: ../../whatsnew/3.12.rst:2197
msgid ""
"In some configurations, ``<stddef.h>`` is not included from :file:`Python."
"h`. It should be included manually when using ``offsetof()``."
msgstr ""
"Em algumas configurações, ``<stddef.h>`` não está incluído em :file:`Python."
"h`. Deve ser incluído manualmente ao usar ``offsetof()``."

#: ../../whatsnew/3.12.rst:2200
msgid ""
"The deprecated header continues to provide its original contents under the "
"original names. Your old code can stay unchanged, unless the extra include "
"and non-namespaced macros bother you greatly."
msgstr ""
"O cabeçalho descontinuado continua a fornecer seu conteúdo original com os "
"nomes originais. Seu código antigo pode permanecer inalterado, a menos que "
"as macros extras e sem namespace o incomodem muito."

#: ../../whatsnew/3.12.rst:2205
msgid ""
"(Contributed in :gh:`47146` by Petr Viktorin, based on earlier work by "
"Alexander Belopolsky and Matthias Braun.)"
msgstr ""
"(Contribuição em :gh:`47146` de Petr Viktorin, baseado em trabalhos "
"anteriores de Alexander Belopolsky e Matthias Braun.)"

#: ../../whatsnew/3.12.rst:2208
msgid ""
":c:func:`PyErr_Fetch` and :c:func:`PyErr_Restore` are deprecated. Use :c:"
"func:`PyErr_GetRaisedException` and :c:func:`PyErr_SetRaisedException` "
"instead. (Contributed by Mark Shannon in :gh:`101578`.)"
msgstr ""
":c:func:`PyErr_Fetch` e :c:func:`PyErr_Restore` foram descontinuado. Use :c:"
"func:`PyErr_GetRaisedException` e :c:func:`PyErr_SetRaisedException` em vez "
"disso. (Contribuição de Mark Shannon em :gh:`101578`.)"

#: ../../whatsnew/3.12.rst:2213
msgid ""
":c:func:`!PyErr_Display` is deprecated. Use :c:func:`PyErr_DisplayException` "
"instead. (Contributed by Irit Katriel in :gh:`102755`)."
msgstr ""
":c:func:`!PyErr_Display` foi descontinuada. Use :c:func:"
"`PyErr_DisplayException` em vez disso. (Contribuição de Irit Katriel em :gh:"
"`102755`)."

#: ../../whatsnew/3.12.rst:2216
msgid ""
"``_PyErr_ChainExceptions`` is deprecated. Use ``_PyErr_ChainExceptions1`` "
"instead. (Contributed by Irit Katriel in :gh:`102192`.)"
msgstr ""
"``_PyErr_ChainExceptions`` foi descontinuada. Use "
"``_PyErr_ChainExceptions1`` em vez disso. (Contribuição de Irit Katriel em :"
"gh:`102192`.)"

#: ../../whatsnew/3.12.rst:2219
msgid ""
"Using :c:func:`PyType_FromSpec`, :c:func:`PyType_FromSpecWithBases` or :c:"
"func:`PyType_FromModuleAndSpec` to create a class whose metaclass overrides :"
"c:member:`~PyTypeObject.tp_new` is deprecated. Call the metaclass instead."
msgstr ""
"Usar :c:func:`PyType_FromSpec`, :c:func:`PyType_FromSpecWithBases` ou :c:"
"func:`PyType_FromModuleAndSpec` para criar uma classe cujas substituições de "
"metaclasse :c:member:`~PyTypeObject.tp_new` foi descontinuado. Chame a "
"metaclasse."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:4
msgid ""
"The ``ma_version_tag`` field in :c:type:`PyDictObject` for extension modules "
"(:pep:`699`; :gh:`101193`)."
msgstr ""
"O campo ``ma_version_tag`` em :c:type:`PyDictObject` para módulos de "
"extensão (:pep:`699`; :gh:`101193`)."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:7
msgid ""
"Creating :c:data:`immutable types <Py_TPFLAGS_IMMUTABLETYPE>` with mutable "
"bases (:gh:`95388`)."
msgstr ""
"A criação de :c:data:`tipos imutáveis <Py_TPFLAGS_IMMUTABLETYPE>` com bases "
"mutáveis (:gh:`95388`)."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:10
msgid ""
"Functions to configure Python's initialization, deprecated in Python 3.11:"
msgstr ""
"Funções para configurar a inicialização do Python, descontinuadas no Python "
"3.11:"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:12
msgid "``PySys_SetArgvEx()``: set :c:member:`PyConfig.argv` instead."
msgstr "``PySys_SetArgvEx()``: defina :c:member:`PyConfig.argv`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:13
msgid "``PySys_SetArgv()``: set :c:member:`PyConfig.argv` instead."
msgstr "``PySys_SetArgv()``: defina :c:member:`PyConfig.argv`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:14
msgid "``Py_SetProgramName()``: set :c:member:`PyConfig.program_name` instead."
msgstr "``Py_SetProgramName()``: defina :c:member:`PyConfig.program_name`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:15
msgid "``Py_SetPythonHome()``: set :c:member:`PyConfig.home` instead."
msgstr "``Py_SetPythonHome()``: defina :c:member:`PyConfig.home`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:17
#: ../../deprecations/c-api-pending-removal-in-3.14.rst:45
msgid ""
"The :c:func:`Py_InitializeFromConfig` API should be used with :c:type:"
"`PyConfig` instead."
msgstr ""
"A API :c:func:`Py_InitializeFromConfig` deve ser usada com :c:type:"
"`PyConfig`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:20
msgid "Global configuration variables:"
msgstr "Variáveis de configuração globais"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:22
msgid ":c:var:`Py_DebugFlag`: use :c:member:`PyConfig.parser_debug` instead."
msgstr ":c:var:`Py_DebugFlag`: use :c:member:`PyConfig.parser_debug`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:23
msgid ":c:var:`Py_VerboseFlag`: use :c:member:`PyConfig.verbose` instead."
msgstr ":c:var:`Py_VerboseFlag`: use :c:member:`PyConfig.verbose`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:24
msgid ":c:var:`Py_QuietFlag`: use :c:member:`PyConfig.quiet` instead."
msgstr ":c:var:`Py_QuietFlag`: use :c:member:`PyConfig.quiet`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:25
msgid ""
":c:var:`Py_InteractiveFlag`: use :c:member:`PyConfig.interactive` instead."
msgstr ":c:var:`Py_InteractiveFlag`: use :c:member:`PyConfig.interactive`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:26
msgid ":c:var:`Py_InspectFlag`: use :c:member:`PyConfig.inspect` instead."
msgstr ":c:var:`Py_InspectFlag`: use :c:member:`PyConfig.inspect`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:27
msgid ""
":c:var:`Py_OptimizeFlag`: use :c:member:`PyConfig.optimization_level` "
"instead."
msgstr ":c:var:`Py_OptimizeFlag`: use :c:member:`PyConfig.optimization_level`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:28
msgid ":c:var:`Py_NoSiteFlag`: use :c:member:`PyConfig.site_import` instead."
msgstr ":c:var:`Py_NoSiteFlag`: use :c:member:`PyConfig.site_import` ."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:29
msgid ""
":c:var:`Py_BytesWarningFlag`: use :c:member:`PyConfig.bytes_warning` instead."
msgstr ":c:var:`Py_BytesWarningFlag`: use :c:member:`PyConfig.bytes_warning`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:30
msgid ""
":c:var:`Py_FrozenFlag`: use :c:member:`PyConfig.pathconfig_warnings` instead."
msgstr ":c:var:`Py_FrozenFlag`: use :c:member:`PyConfig.pathconfig_warnings`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:31
msgid ""
":c:var:`Py_IgnoreEnvironmentFlag`: use :c:member:`PyConfig.use_environment` "
"instead."
msgstr ""
":c:var:`Py_IgnoreEnvironmentFlag`: use :c:member:`PyConfig.use_environment`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:32
msgid ""
":c:var:`Py_DontWriteBytecodeFlag`: use :c:member:`PyConfig.write_bytecode` "
"instead."
msgstr ""
":c:var:`Py_DontWriteBytecodeFlag`: use :c:member:`PyConfig.write_bytecode`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:33
msgid ""
":c:var:`Py_NoUserSiteDirectory`: use :c:member:`PyConfig."
"user_site_directory` instead."
msgstr ""
":c:var:`Py_NoUserSiteDirectory`: use :c:member:`PyConfig."
"user_site_directory`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:34
msgid ""
":c:var:`Py_UnbufferedStdioFlag`: use :c:member:`PyConfig.buffered_stdio` "
"instead."
msgstr ""
":c:var:`Py_UnbufferedStdioFlag`: use :c:member:`PyConfig.buffered_stdio`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:35
msgid ""
":c:var:`Py_HashRandomizationFlag`: use :c:member:`PyConfig.use_hash_seed` "
"and :c:member:`PyConfig.hash_seed` instead."
msgstr ""
":c:var:`Py_HashRandomizationFlag`: use :c:member:`PyConfig.use_hash_seed` e :"
"c:member:`PyConfig.hash_seed`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:37
msgid ":c:var:`Py_IsolatedFlag`: use :c:member:`PyConfig.isolated` instead."
msgstr ":c:var:`Py_IsolatedFlag`: use :c:member:`PyConfig.isolated`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:38
msgid ""
":c:var:`Py_LegacyWindowsFSEncodingFlag`: use :c:member:`PyPreConfig."
"legacy_windows_fs_encoding` instead."
msgstr ""
":c:var:`Py_LegacyWindowsFSEncodingFlag`: use :c:member:`PyPreConfig."
"legacy_windows_fs_encoding`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:39
msgid ""
":c:var:`Py_LegacyWindowsStdioFlag`: use :c:member:`PyConfig."
"legacy_windows_stdio` instead."
msgstr ""
":c:var:`Py_LegacyWindowsStdioFlag`: use :c:member:`PyConfig."
"legacy_windows_stdio`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:40
msgid ""
":c:var:`!Py_FileSystemDefaultEncoding`: use :c:member:`PyConfig."
"filesystem_encoding` instead."
msgstr ""
":c:var:`!Py_FileSystemDefaultEncoding`: use :c:member:`PyConfig."
"filesystem_encoding`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:41
msgid ""
":c:var:`!Py_HasFileSystemDefaultEncoding`: use :c:member:`PyConfig."
"filesystem_encoding` instead."
msgstr ""
":c:var:`!Py_HasFileSystemDefaultEncoding`: use :c:member:`PyConfig."
"filesystem_encoding`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:42
msgid ""
":c:var:`!Py_FileSystemDefaultEncodeErrors`: use :c:member:`PyConfig."
"filesystem_errors` instead."
msgstr ""
":c:var:`!Py_FileSystemDefaultEncodeErrors`: use :c:member:`PyConfig."
"filesystem_errors`."

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:43
msgid ""
":c:var:`!Py_UTF8Mode`: use :c:member:`PyPreConfig.utf8_mode` instead. (see :"
"c:func:`Py_PreInitialize`)"
msgstr ""
":c:var:`!Py_UTF8Mode`: use :c:member:`PyPreConfig.utf8_mode`. (veja :c:func:"
"`Py_PreInitialize`)"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:4
msgid "The bundled copy of ``libmpdecimal``."
msgstr "A cópia empacotada do ``libmpdecimal``."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:5
msgid ""
":c:func:`PyImport_ImportModuleNoBlock`: use :c:func:`PyImport_ImportModule` "
"instead."
msgstr ""
":c:func:`PyImport_ImportModuleNoBlock`: use :c:func:`PyImport_ImportModule`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:6
msgid ""
":c:func:`PyWeakref_GET_OBJECT`: use :c:func:`!PyWeakref_GetRef` instead."
msgstr ":c:func:`PyWeakref_GET_OBJECT`: use :c:func:`!PyWeakref_GetRef`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:7
msgid ":c:func:`PyWeakref_GetObject`: use :c:func:`!PyWeakref_GetRef` instead."
msgstr ":c:func:`PyWeakref_GetObject`: use :c:func:`!PyWeakref_GetRef`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:8
msgid ":c:type:`!Py_UNICODE_WIDE` type: use :c:type:`wchar_t` instead."
msgstr "O tipo :c:type:`!Py_UNICODE_WIDE`: use :c:type:`wchar_t`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:9
msgid ":c:type:`Py_UNICODE` type: use :c:type:`wchar_t` instead."
msgstr "O tipo :c:type:`Py_UNICODE`: use :c:type:`wchar_t`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:10
msgid "Python initialization functions:"
msgstr "Funções de inicialização do Python"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:12
msgid ""
":c:func:`PySys_ResetWarnOptions`: clear :data:`sys.warnoptions` and :data:`!"
"warnings.filters` instead."
msgstr ""
":c:func:`PySys_ResetWarnOptions`: apague :data:`sys.warnoptions` e :data:`!"
"warnings.filters`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:14
msgid ":c:func:`Py_GetExecPrefix`: get :data:`sys.exec_prefix` instead."
msgstr ":c:func:`Py_GetExecPrefix`: obtenha :data:`sys.exec_prefix`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:15
msgid ":c:func:`Py_GetPath`: get :data:`sys.path` instead."
msgstr ":c:func:`Py_GetPath`: obtenha :data:`sys.path`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:16
msgid ":c:func:`Py_GetPrefix`: get :data:`sys.prefix` instead."
msgstr ":c:func:`Py_GetPrefix`: obtenha :data:`sys.prefix`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:17
msgid ":c:func:`Py_GetProgramFullPath`: get :data:`sys.executable` instead."
msgstr ":c:func:`Py_GetProgramFullPath`: obtenha :data:`sys.executable`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:18
msgid ":c:func:`Py_GetProgramName`: get :data:`sys.executable` instead."
msgstr ":c:func:`Py_GetProgramName`: obtenha :data:`sys.executable`."

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:19
msgid ""
":c:func:`Py_GetPythonHome`: get :c:member:`PyConfig.home` or the :envvar:"
"`PYTHONHOME` environment variable instead."
msgstr ""
":c:func:`Py_GetPythonHome`: obtenha :c:member:`PyConfig.home` ou a variável "
"de ambiente :envvar:`PYTHONHOME`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:4
msgid ""
"The following APIs are deprecated and will be removed, although there is "
"currently no date scheduled for their removal."
msgstr ""
"As APIs a seguir foram descontinuado e serão removidas, embora atualmente "
"não haja uma data agendada para sua remoção."

#: ../../deprecations/c-api-pending-removal-in-future.rst:7
msgid ":c:macro:`Py_TPFLAGS_HAVE_FINALIZE`: unneeded since Python 3.8."
msgstr ":c:macro:`Py_TPFLAGS_HAVE_FINALIZE`: desnecessária desde o Python 3.8."

#: ../../deprecations/c-api-pending-removal-in-future.rst:8
msgid ":c:func:`PyErr_Fetch`: use :c:func:`PyErr_GetRaisedException` instead."
msgstr ":c:func:`PyErr_Fetch`: use :c:func:`PyErr_GetRaisedException`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:9
msgid ""
":c:func:`PyErr_NormalizeException`: use :c:func:`PyErr_GetRaisedException` "
"instead."
msgstr ""
":c:func:`PyErr_NormalizeException`: use :c:func:`PyErr_GetRaisedException`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:10
msgid ""
":c:func:`PyErr_Restore`: use :c:func:`PyErr_SetRaisedException` instead."
msgstr ":c:func:`PyErr_Restore`: use :c:func:`PyErr_SetRaisedException`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:11
msgid ""
":c:func:`PyModule_GetFilename`: use :c:func:`PyModule_GetFilenameObject` "
"instead."
msgstr ""
":c:func:`PyModule_GetFilename`: use :c:func:`PyModule_GetFilenameObject`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:12
msgid ":c:func:`PyOS_AfterFork`: use :c:func:`PyOS_AfterFork_Child` instead."
msgstr ":c:func:`PyOS_AfterFork`: use :c:func:`PyOS_AfterFork_Child`"

#: ../../deprecations/c-api-pending-removal-in-future.rst:13
msgid ""
":c:func:`PySlice_GetIndicesEx`: use :c:func:`PySlice_Unpack` and :c:func:"
"`PySlice_AdjustIndices` instead."
msgstr ""
":c:func:`PySlice_GetIndicesEx`: use :c:func:`PySlice_Unpack` e :c:func:"
"`PySlice_AdjustIndices`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:14
msgid ""
":c:func:`!PyUnicode_AsDecodedObject`: use :c:func:`PyCodec_Decode` instead."
msgstr ":c:func:`!PyUnicode_AsDecodedObject`: use :c:func:`PyCodec_Decode`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:15
msgid ""
":c:func:`!PyUnicode_AsDecodedUnicode`: use :c:func:`PyCodec_Decode` instead."
msgstr ":c:func:`!PyUnicode_AsDecodedUnicode`: use :c:func:`PyCodec_Decode`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:16
msgid ""
":c:func:`!PyUnicode_AsEncodedObject`: use :c:func:`PyCodec_Encode` instead."
msgstr ":c:func:`!PyUnicode_AsEncodedObject`: use :c:func:`PyCodec_Encode`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:17
msgid ""
":c:func:`!PyUnicode_AsEncodedUnicode`: use :c:func:`PyCodec_Encode` instead."
msgstr ":c:func:`!PyUnicode_AsEncodedUnicode`: use :c:func:`PyCodec_Encode`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:18
msgid ":c:func:`PyUnicode_READY`: unneeded since Python 3.12"
msgstr ":c:func:`PyUnicode_READY`: desnecessário desde o Python 3.12"

#: ../../deprecations/c-api-pending-removal-in-future.rst:19
msgid ":c:func:`!PyErr_Display`: use :c:func:`PyErr_DisplayException` instead."
msgstr ":c:func:`!PyErr_Display`: use :c:func:`PyErr_DisplayException`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:20
msgid ""
":c:func:`!_PyErr_ChainExceptions`: use ``_PyErr_ChainExceptions1`` instead."
msgstr ":c:func:`!_PyErr_ChainExceptions`: use ``_PyErr_ChainExceptions1``."

#: ../../deprecations/c-api-pending-removal-in-future.rst:21
msgid ""
":c:member:`!PyBytesObject.ob_shash` member: call :c:func:`PyObject_Hash` "
"instead."
msgstr ""
"O membro :c:member:`!PyBytesObject.ob_shash`: chame :c:func:`PyObject_Hash`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:23
msgid ":c:member:`!PyDictObject.ma_version_tag` member."
msgstr "O membro :c:member:`!PyDictObject.ma_version_tag`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:24
msgid "Thread Local Storage (TLS) API:"
msgstr "API do Thread Local Storage (TLS):"

#: ../../deprecations/c-api-pending-removal-in-future.rst:26
msgid ""
":c:func:`PyThread_create_key`: use :c:func:`PyThread_tss_alloc` instead."
msgstr ":c:func:`PyThread_create_key`: use :c:func:`PyThread_tss_alloc`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:27
msgid ":c:func:`PyThread_delete_key`: use :c:func:`PyThread_tss_free` instead."
msgstr ":c:func:`PyThread_delete_key`: use :c:func:`PyThread_tss_free`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:28
msgid ""
":c:func:`PyThread_set_key_value`: use :c:func:`PyThread_tss_set` instead."
msgstr ":c:func:`PyThread_set_key_value`: use :c:func:`PyThread_tss_set`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:29
msgid ""
":c:func:`PyThread_get_key_value`: use :c:func:`PyThread_tss_get` instead."
msgstr ":c:func:`PyThread_get_key_value`: use :c:func:`PyThread_tss_get`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:30
msgid ""
":c:func:`PyThread_delete_key_value`: use :c:func:`PyThread_tss_delete` "
"instead."
msgstr ""
":c:func:`PyThread_delete_key_value`: use :c:func:`PyThread_tss_delete`."

#: ../../deprecations/c-api-pending-removal-in-future.rst:31
msgid ":c:func:`PyThread_ReInitTLS`: unneeded since Python 3.7."
msgstr ":c:func:`PyThread_ReInitTLS`: desnecessário desde o Python 3.7."

#: ../../whatsnew/3.12.rst:2235
msgid ""
"Remove the :file:`token.h` header file. There was never any public tokenizer "
"C API. The :file:`token.h` header file was only designed to be used by "
"Python internals. (Contributed by Victor Stinner in :gh:`92651`.)"
msgstr ""
"Remove o arquivo de cabeçalho :file:`token.h`. Nunca houve nenhuma API C de "
"tokenizador público. O arquivo de cabeçalho :file:`token.h` foi projetado "
"apenas para ser usado por internos do Python. (Contribuição de Victor "
"Stinner em :gh:`92651`.)"

#: ../../whatsnew/3.12.rst:2240
msgid "Legacy Unicode APIs have been removed. See :pep:`623` for detail."
msgstr ""
"As APIs Unicode legadas foram removidas. Veja a :pep:`623` para detalhes."

#: ../../whatsnew/3.12.rst:2242
msgid ":c:macro:`!PyUnicode_WCHAR_KIND`"
msgstr ":c:macro:`!PyUnicode_WCHAR_KIND`"

#: ../../whatsnew/3.12.rst:2243
msgid ":c:func:`!PyUnicode_AS_UNICODE`"
msgstr ":c:func:`!PyUnicode_AS_UNICODE`"

#: ../../whatsnew/3.12.rst:2244
msgid ":c:func:`!PyUnicode_AsUnicode`"
msgstr ":c:func:`!PyUnicode_AsUnicode`"

#: ../../whatsnew/3.12.rst:2245
msgid ":c:func:`!PyUnicode_AsUnicodeAndSize`"
msgstr ":c:func:`!PyUnicode_AsUnicodeAndSize`"

#: ../../whatsnew/3.12.rst:2246
msgid ":c:func:`!PyUnicode_AS_DATA`"
msgstr ":c:func:`!PyUnicode_AS_DATA`"

#: ../../whatsnew/3.12.rst:2247
msgid ":c:func:`!PyUnicode_FromUnicode`"
msgstr ":c:func:`!PyUnicode_FromUnicode`"

#: ../../whatsnew/3.12.rst:2248
msgid ":c:func:`!PyUnicode_GET_SIZE`"
msgstr ":c:func:`!PyUnicode_GET_SIZE`"

#: ../../whatsnew/3.12.rst:2249
msgid ":c:func:`!PyUnicode_GetSize`"
msgstr ":c:func:`!PyUnicode_GetSize`"

#: ../../whatsnew/3.12.rst:2250
msgid ":c:func:`!PyUnicode_GET_DATA_SIZE`"
msgstr ":c:func:`!PyUnicode_GET_DATA_SIZE`"

#: ../../whatsnew/3.12.rst:2252
msgid ""
"Remove the ``PyUnicode_InternImmortal()`` function macro. (Contributed by "
"Victor Stinner in :gh:`85858`.)"
msgstr ""
"Remove a macro de função ``PyUnicode_InternImmortal()``. (Contribuição de "
"Victor Stinner em :gh:`85858`.)"

#: ../../whatsnew/3.12.rst:2256
msgid "Notable changes in 3.12.4"
msgstr "Alterações notáveis no 3.12.4"

#: ../../whatsnew/3.12.rst:2259
msgid "ipaddress"
msgstr "ipaddress"

#: ../../whatsnew/3.12.rst:2261
msgid ""
"Fixed ``is_global`` and ``is_private`` behavior in ``IPv4Address``, "
"``IPv6Address``, ``IPv4Network`` and ``IPv6Network``."
msgstr ""
"Corrigido o comportamento de ``is_global`` e ``is_private`` em "
"``IPv4Address``, ``IPv6Address``, ``IPv4Network`` e ``IPv6Network``."

#: ../../whatsnew/3.12.rst:2266
msgid "Notable changes in 3.12.5"
msgstr ""

#: ../../whatsnew/3.12.rst:2269 ../../whatsnew/3.12.rst:2286
msgid "email"
msgstr "email"

#: ../../whatsnew/3.12.rst:2272
msgid "Headers with embedded newlines are now quoted on output."
msgstr ""
"Cabeçalhos com novas linhas embutidas agora são colocados entre aspas na "
"saída."

#: ../../whatsnew/3.12.rst:2274
msgid ""
"The :mod:`~email.generator` will now refuse to serialize (write) headers "
"that are improperly folded or delimited, such that they would be parsed as "
"multiple headers or joined with adjacent data. If you need to turn this "
"safety feature off, set :attr:`~email.policy.Policy."
"verify_generated_headers`. (Contributed by Bas Bloemsaat and Petr Viktorin "
"in :gh:`121650`.)"
msgstr ""
"O :mod:`~email.generator` agora se recusará a serializar (escrever) "
"cabeçalhos que são dobrados ou delimitados incorretamente, de modo que eles "
"seriam analisados ​​como vários cabeçalhos ou unidos a dados adjacentes. Se "
"você precisar desativar esse recurso de segurança, defina :attr:`~email."
"policy.Policy.verify_generated_headers`. (Contribuição de Bas Bloemsaat e "
"Petr Viktorin em :gh:`121650`.)"

#: ../../whatsnew/3.12.rst:2283
msgid "Notable changes in 3.12.6"
msgstr ""

#: ../../whatsnew/3.12.rst:2288
msgid ""
":func:`email.utils.getaddresses` and :func:`email.utils.parseaddr` now "
"return ``('', '')`` 2-tuples in more situations where invalid email "
"addresses are encountered, instead of potentially inaccurate values. An "
"optional *strict* parameter was added to these two functions: use "
"``strict=False`` to get the old behavior, accepting malformed inputs. "
"``getattr(email.utils, 'supports_strict_parsing', False)`` can be used to "
"check if the *strict* paramater is available. (Contributed by Thomas Dwyer "
"and Victor Stinner for :gh:`102988` to improve the CVE-2023-27043 fix.)"
msgstr ""
