# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-06 15:04+0000\n"
"PO-Revision-Date: 2024-05-11 00:34+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../whatsnew/3.8.rst:3
msgid "What's New In Python 3.8"
msgstr "O que há de novo no Python 3.8"

#: ../../whatsnew/3.8.rst:0
msgid "Editor"
msgstr "Editor"

#: ../../whatsnew/3.8.rst:45
msgid "Raymond Hettinger"
msgstr "Raymond Hettinger"

#: ../../whatsnew/3.8.rst:47
msgid ""
"This article explains the new features in Python 3.8, compared to 3.7. "
"Python 3.8 was released on October 14, 2019. For full details, see the :ref:"
"`changelog <changelog>`."
msgstr ""
"Este artigo explica os novos recursos no Python 3.8, em comparação com 3.7. "
"Python 3.8 foi lançado em 14 de outubro de 2019. Veja :ref:"
"`changelog<changelog>` para uma lista completa de mudanças."

#: ../../whatsnew/3.8.rst:61
msgid "Summary -- Release highlights"
msgstr "Resumo -- Destaques da versão"

#: ../../whatsnew/3.8.rst:72
msgid "New Features"
msgstr "Novas funcionalidades"

#: ../../whatsnew/3.8.rst:75
msgid "Assignment expressions"
msgstr "Expressões de atribuição"

#: ../../whatsnew/3.8.rst:77
msgid ""
"There is new syntax ``:=`` that assigns values to variables as part of a "
"larger expression. It is affectionately known as \"the walrus operator\" due "
"to its resemblance to `the eyes and tusks of a walrus <https://en.wikipedia."
"org/wiki/Walrus#/media/File:Pacific_Walrus_-_Bull_(8247646168).jpg>`_."
msgstr ""
"Existe uma nova sintaxe ``:=`` que atribui valores a variáveis como parte de "
"uma expressão maior. É carinhosamente conhecido como \"o operador "
"morsa\" (\"the walrus operator\", em inglês) devido à sua semelhança com `os "
"olhos e presas de uma morsa <https://en.wikipedia.org/wiki/Walrus#/media/"
"File:Pacific_Walrus_-_Bull_(8247646168).jpg>`_"

#: ../../whatsnew/3.8.rst:82
msgid ""
"In this example, the assignment expression helps avoid calling :func:`len` "
"twice::"
msgstr ""
"Neste exemplo, a expressão de atribuição ajuda a evitar a chamada de :func:"
"`len` duas vezes::"

#: ../../whatsnew/3.8.rst:85
msgid ""
"if (n := len(a)) > 10:\n"
"    print(f\"List is too long ({n} elements, expected <= 10)\")"
msgstr ""

#: ../../whatsnew/3.8.rst:88
msgid ""
"A similar benefit arises during regular expression matching where match "
"objects are needed twice, once to test whether a match occurred and another "
"to extract a subgroup::"
msgstr ""
"Um benefício semelhante surge durante a correspondência de expressões "
"regulares, onde os objetos de correspondência são necessários duas vezes, "
"uma vez para testar se ocorreu uma correspondência e outra para extrair um "
"subgrupo::"

#: ../../whatsnew/3.8.rst:92
msgid ""
"discount = 0.0\n"
"if (mo := re.search(r'(\\d+)% discount', advertisement)):\n"
"    discount = float(mo.group(1)) / 100.0"
msgstr ""

#: ../../whatsnew/3.8.rst:96
msgid ""
"The operator is also useful with while-loops that compute a value to test "
"loop termination and then need that same value again in the body of the "
"loop::"
msgstr ""
"O operador também é útil com loops while que calculam um valor para testar a "
"finalização do loop e, em seguida, precisam desse mesmo valor novamente no "
"corpo do loop::"

#: ../../whatsnew/3.8.rst:100
msgid ""
"# Loop over fixed length blocks\n"
"while (block := f.read(256)) != '':\n"
"    process(block)"
msgstr ""

#: ../../whatsnew/3.8.rst:104
msgid ""
"Another motivating use case arises in list comprehensions where a value "
"computed in a filtering condition is also needed in the expression body::"
msgstr ""
"Outro caso de uso motivador surge em compreensões de lista em que um valor "
"calculado em uma condição de filtragem também é necessário no corpo da "
"expressão::"

#: ../../whatsnew/3.8.rst:108
msgid ""
"[clean_name.title() for name in names\n"
" if (clean_name := normalize('NFC', name)) in allowed_names]"
msgstr ""

#: ../../whatsnew/3.8.rst:111
msgid ""
"Try to limit use of the walrus operator to clean cases that reduce "
"complexity and improve readability."
msgstr ""
"Tente limitar o uso do operador morsa para limpar os casos que reduzem a "
"complexidade e melhoram a legibilidade."

#: ../../whatsnew/3.8.rst:114
msgid "See :pep:`572` for a full description."
msgstr "Consulte :pep:`572` para uma descrição completa."

#: ../../whatsnew/3.8.rst:116
msgid "(Contributed by Emily Morehouse in :issue:`35224`.)"
msgstr "(Contribuição de Emily Morehouse em :issue:`35224`.)"

#: ../../whatsnew/3.8.rst:120
msgid "Positional-only parameters"
msgstr "Parâmetros somente-posicionais"

#: ../../whatsnew/3.8.rst:122
msgid ""
"There is a new function parameter syntax ``/`` to indicate that some "
"function parameters must be specified positionally and cannot be used as "
"keyword arguments.  This is the same notation shown by ``help()`` for C "
"functions annotated with Larry Hastings' `Argument Clinic <https://devguide."
"python.org/development-tools/clinic/>`__ tool."
msgstr ""
"Existe uma nova sintaxe de parâmetro de função ``/`` para indicar que alguns "
"parâmetros de função devem ser especificados posicionalmente e não podem ser "
"usados como argumentos nomeados. Esta é a mesma notação mostrada por "
"``help()`` para funções C anotadas com a ferramenta `Argument Clinic "
"<https://devguide.python.org/development-tools/clinic/>`_ de Larry Hastings."

#: ../../whatsnew/3.8.rst:128
msgid ""
"In the following example, parameters *a* and *b* are positional-only, while "
"*c* or *d* can be positional or keyword, and *e* or *f* are required to be "
"keywords::"
msgstr ""
"No exemplo a seguir, os parâmetros *a* e *b* são apenas posicionais, "
"enquanto *c* ou *d* podem ser posicionais ou nomeados e *e* ou *f* são "
"obrigatoriamente nomeados::"

#: ../../whatsnew/3.8.rst:132
msgid ""
"def f(a, b, /, c, d, *, e, f):\n"
"    print(a, b, c, d, e, f)"
msgstr ""

#: ../../whatsnew/3.8.rst:135
msgid "The following is a valid call::"
msgstr "A seguir, uma chamada válida::"

#: ../../whatsnew/3.8.rst:137
msgid "f(10, 20, 30, d=40, e=50, f=60)"
msgstr ""

#: ../../whatsnew/3.8.rst:139
msgid "However, these are invalid calls::"
msgstr "Porém, essas chamadas são inválidas::"

#: ../../whatsnew/3.8.rst:141
msgid ""
"f(10, b=20, c=30, d=40, e=50, f=60)   # b cannot be a keyword argument\n"
"f(10, 20, 30, 40, 50, f=60)           # e must be a keyword argument"
msgstr ""

#: ../../whatsnew/3.8.rst:144
msgid ""
"One use case for this notation is that it allows pure Python functions to "
"fully emulate behaviors of existing C coded functions.  For example, the "
"built-in :func:`divmod` function does not accept keyword arguments::"
msgstr ""
"Um caso de uso para essa notação é que ele permite que funções puras do "
"Python emulem completamente os comportamentos das funções codificadas em C "
"existentes. Por exemplo, a função embutida :func:`divmod` não aceita "
"argumentos nomeados::"

#: ../../whatsnew/3.8.rst:148
msgid ""
"def divmod(a, b, /):\n"
"    \"Emulate the built in divmod() function\"\n"
"    return (a // b, a % b)"
msgstr ""

#: ../../whatsnew/3.8.rst:152
msgid ""
"Another use case is to preclude keyword arguments when the parameter name is "
"not helpful.  For example, the builtin :func:`len` function has the "
"signature ``len(obj, /)``.  This precludes awkward calls such as::"
msgstr ""
"Outro caso de uso é impedir argumentos nomeados quando o nome do parâmetro "
"não for útil. Por exemplo, a função embutida :func:`len` possui a assinatura "
"``len(obj, /)``. Isso exclui chamadas estranhas, como::"

#: ../../whatsnew/3.8.rst:156
msgid "len(obj='hello')  # The \"obj\" keyword argument impairs readability"
msgstr ""

#: ../../whatsnew/3.8.rst:158
msgid ""
"A further benefit of marking a parameter as positional-only is that it "
"allows the parameter name to be changed in the future without risk of "
"breaking client code.  For example, in the :mod:`statistics` module, the "
"parameter name *dist* may be changed in the future.  This was made possible "
"with the following function specification::"
msgstr ""
"Um benefício adicional de marcar um parâmetro como somente posicional é que "
"ele permite que o nome do parâmetro seja alterado no futuro sem risco de "
"quebrar o código do cliente. Por exemplo, no módulo :mod:`statistics`, o "
"nome do parâmetro *dist* pode ser alterado no futuro. Isso foi possível com "
"a seguinte especificação de função::"

#: ../../whatsnew/3.8.rst:164
msgid ""
"def quantiles(dist, /, *, n=4, method='exclusive')\n"
"    ..."
msgstr ""

#: ../../whatsnew/3.8.rst:167
msgid ""
"Since the parameters to the left of ``/`` are not exposed as possible "
"keywords, the parameters names remain available for use in ``**kwargs``::"
msgstr ""
"Como os parâmetros à esquerda de ``/`` não são expostos como possíveis "
"palavras-chave, os nomes dos parâmetros permanecem disponíveis para uso em "
"``**kwargs``::"

#: ../../whatsnew/3.8.rst:170
msgid ""
">>> def f(a, b, /, **kwargs):\n"
"...     print(a, b, kwargs)\n"
"...\n"
">>> f(10, 20, a=1, b=2, c=3)         # a and b are used in two ways\n"
"10 20 {'a': 1, 'b': 2, 'c': 3}"
msgstr ""

#: ../../whatsnew/3.8.rst:176
msgid ""
"This greatly simplifies the implementation of functions and methods that "
"need to accept arbitrary keyword arguments.  For example, here is an excerpt "
"from code in the :mod:`collections` module::"
msgstr ""
"Isso simplifica bastante a implementação de funções e métodos que precisam "
"aceitar argumentos nomeados arbitrários. Por exemplo, aqui está um trecho do "
"código no módulo :mod:`collections`::"

#: ../../whatsnew/3.8.rst:180
msgid ""
"class Counter(dict):\n"
"\n"
"    def __init__(self, iterable=None, /, **kwds):\n"
"        # Note \"iterable\" is a possible keyword argument"
msgstr ""

#: ../../whatsnew/3.8.rst:185
msgid "See :pep:`570` for a full description."
msgstr "Consulte a :pep:`570` para uma descrição completa."

#: ../../whatsnew/3.8.rst:187
msgid "(Contributed by Pablo Galindo in :issue:`36540`.)"
msgstr "(Contribuição de Pablo Galindo em :issue:`36540`.)"

#: ../../whatsnew/3.8.rst:193
msgid "Parallel filesystem cache for compiled bytecode files"
msgstr ""
"Cache do sistema de arquivos paralelo para arquivos de bytecode compilados"

#: ../../whatsnew/3.8.rst:195
msgid ""
"The new :envvar:`PYTHONPYCACHEPREFIX` setting (also available as :option:`-"
"X` ``pycache_prefix``) configures the implicit bytecode cache to use a "
"separate parallel filesystem tree, rather than the default ``__pycache__`` "
"subdirectories within each source directory."
msgstr ""
"A nova configuração :envvar:`PYTHONPYCACHEPREFIX` (também disponível como :"
"option:`-X` ``pycache_prefix``) configura o cache implícito de bytecode para "
"usar uma árvore paralela separada do sistema de arquivos, em vez dos "
"subdiretórios padrão ``__pycache__`` dentro cada diretório fonte."

#: ../../whatsnew/3.8.rst:201
msgid ""
"The location of the cache is reported in :data:`sys.pycache_prefix` (:const:"
"`None` indicates the default location in ``__pycache__`` subdirectories)."
msgstr ""
"O local do cache é relatado em :data:`sys.pycache_prefix` (:const:`None` "
"indica o local padrão nos subdiretórios ``__pycache__``)."

#: ../../whatsnew/3.8.rst:205
msgid "(Contributed by Carl Meyer in :issue:`33499`.)"
msgstr "(Contribuição de Carl Meyer em :issue:`33499`.)"

#: ../../whatsnew/3.8.rst:209
msgid "Debug build uses the same ABI as release build"
msgstr "A compilação de depuração usa a mesma ABI da compilação de lançamento"

#: ../../whatsnew/3.8.rst:211
msgid ""
"Python now uses the same ABI whether it's built in release or debug mode. On "
"Unix, when Python is built in debug mode, it is now possible to load C "
"extensions built in release mode and C extensions built using the stable ABI."
msgstr ""
"Agora, o Python usa a mesma ABI, seja ele compilado no modo de lançamento ou "
"depuração. No Unix, quando o Python é compilado no modo de depuração, agora "
"é possível carregar extensões C compiladas no modo de lançamento e extensões "
"C compiladas usando a ABI estável."

#: ../../whatsnew/3.8.rst:215
msgid ""
"Release builds and :ref:`debug builds <debug-build>` are now ABI compatible: "
"defining the ``Py_DEBUG`` macro no longer implies the ``Py_TRACE_REFS`` "
"macro, which introduces the only ABI incompatibility. The ``Py_TRACE_REFS`` "
"macro, which adds the :func:`sys.getobjects` function and the :envvar:"
"`PYTHONDUMPREFS` environment variable, can be set using the new :option:`./"
"configure --with-trace-refs <--with-trace-refs>` build option. (Contributed "
"by Victor Stinner in :issue:`36465`.)"
msgstr ""
"Compilações de lançamento e :ref:`compilações de depuração <debug-build>` "
"agora são compatíveis com ABI: definir a macro ``Py_DEBUG`` não implica mais "
"a macro ``Py_TRACE_REFS``, que introduz a única incompatibilidade ABI. A "
"macro ``Py_TRACE_REFS``, que adiciona a função :func:`sys.getobjects` e a "
"variável de ambiente :envvar:`PYTHONDUMPREFS`, pode ser configurada usando a "
"nova opção de compilação :option:`./configure --with-trace-refs <--with-"
"trace-refs>`. (Contribuição de Victor Stinner em :issue:`36465`.)"

#: ../../whatsnew/3.8.rst:223
msgid ""
"On Unix, C extensions are no longer linked to libpython except on Android "
"and Cygwin. It is now possible for a statically linked Python to load a C "
"extension built using a shared library Python. (Contributed by Victor "
"Stinner in :issue:`21536`.)"
msgstr ""
"No Unix, as extensões C não estão mais vinculadas ao libpython, exceto no "
"Android e Cygwin. Agora é possível que um Python vinculado estaticamente "
"carregue uma extensão C criada usando uma biblioteca compartilhada Python. "
"(Contribuição de Victor Stinner em :issue:`21536`.)"

#: ../../whatsnew/3.8.rst:230
msgid ""
"On Unix, when Python is built in debug mode, import now also looks for C "
"extensions compiled in release mode and for C extensions compiled with the "
"stable ABI. (Contributed by Victor Stinner in :issue:`36722`.)"
msgstr ""
"No Unix, quando o Python é compilado no modo de depuração, a importação "
"agora também procura extensões C compiladas no modo de lançamento e "
"extensões C compiladas com a ABI estável. (Contribuição de Victor Stinner "
"em :issue:`36722`.)"

#: ../../whatsnew/3.8.rst:235
msgid ""
"To embed Python into an application, a new ``--embed`` option must be passed "
"to ``python3-config --libs --embed`` to get ``-lpython3.8`` (link the "
"application to libpython). To support both 3.8 and older, try ``python3-"
"config --libs --embed`` first and fallback to ``python3-config --libs`` "
"(without ``--embed``) if the previous command fails."
msgstr ""
"Para incorporar o Python em uma aplicação, uma nova opção ``--embed`` deve "
"ser passada para ``python3-config --libs --embed`` para obter o ``-"
"lpython3.8`` (vincula a aplicação ao libpython). Para dar suporte a 3.8 e "
"versões mais antigas, tente ``python3-config --libs --embed`` primeiro e use "
"como fallback para ``python3-config --libs`` (sem ``--embed``) se o comando "
"anterior falhar."

#: ../../whatsnew/3.8.rst:241
msgid ""
"Add a pkg-config ``python-3.8-embed`` module to embed Python into an "
"application: ``pkg-config python-3.8-embed --libs`` includes ``-"
"lpython3.8``. To support both 3.8 and older, try ``pkg-config python-X.Y-"
"embed --libs`` first and fallback to ``pkg-config python-X.Y --libs`` "
"(without ``--embed``) if the previous command fails (replace ``X.Y`` with "
"the Python version)."
msgstr ""
"Adicione um módulo pkg-config ``python-3.8-embed`` para incorporar o Python "
"em uma aplicação: ``pkg-config python-3.8-embed --libs`` inclui ``-"
"lpython3.8``. Para suportar tanto o 3.8 quanto o anterior, tente ``pkg-"
"config python-X.Y-embed --libs`` primeiro e use como fallback ``pkg-config "
"python-X.Y --libs`` (sem ``--embed``) se o comando anterior falhar "
"(substitua ``X.Y`` pela versão do Python)."

#: ../../whatsnew/3.8.rst:247
msgid ""
"On the other hand, ``pkg-config python3.8 --libs`` no longer contains ``-"
"lpython3.8``. C extensions must not be linked to libpython (except on "
"Android and Cygwin, whose cases are handled by the script); this change is "
"backward incompatible on purpose. (Contributed by Victor Stinner in :issue:"
"`36721`.)"
msgstr ""
"Por outro lado, ``pkg-config python3.8 --libs`` não contém mais ``-"
"lpython3.8``. As extensões C não devem estar vinculadas ao libpython (exceto "
"no Android e Cygwin, cujos casos são tratados pelo script); essa alteração é "
"retroativamente incompatível de propósito. (Contribuição de Victor Stinner "
"em :issue:`36721`.)"

#: ../../whatsnew/3.8.rst:256
msgid "f-strings support ``=`` for self-documenting expressions and debugging"
msgstr ""
"O suporte a f-strings ``=`` para expressões de auto-documentação e depuração"

#: ../../whatsnew/3.8.rst:258
msgid ""
"Added an ``=`` specifier to :term:`f-string`\\s. An f-string such as "
"``f'{expr=}'`` will expand to the text of the expression, an equal sign, "
"then the representation of the evaluated expression.  For example:"
msgstr ""
"Adicionado um especificador ``=`` para :term:`f-string`\\s. Uma f-string "
"como ``f'{expr=}'`` será expandida para o texto da expressão, um sinal de "
"igual e, em seguida, a representação da expressão avaliada. Por exemplo:"

#: ../../whatsnew/3.8.rst:267
msgid ""
"The usual :ref:`f-string format specifiers <f-strings>` allow more control "
"over how the result of the expression is displayed::"
msgstr ""
"O habitual :ref:`f-string especificadores de formato <f-strings>` permite "
"mais controle sobre como o resultado da expressão é exibido::"

#: ../../whatsnew/3.8.rst:270
msgid ""
">>> delta = date.today() - member_since\n"
">>> f'{user=!s}  {delta.days=:,d}'\n"
"'user=eric_idle  delta.days=16,075'"
msgstr ""

#: ../../whatsnew/3.8.rst:274
msgid ""
"The ``=`` specifier will display the whole expression so that calculations "
"can be shown::"
msgstr ""
"O especificador ``=`` exibirá toda a expressão para que os cálculos possam "
"ser mostrados::"

#: ../../whatsnew/3.8.rst:277
msgid ""
">>> print(f'{theta=}  {cos(radians(theta))=:.3f}')\n"
"theta=30  cos(radians(theta))=0.866"
msgstr ""

#: ../../whatsnew/3.8.rst:280
msgid "(Contributed by Eric V. Smith and Larry Hastings in :issue:`36817`.)"
msgstr "(Contribuição de Eric V. Smith e Larry Hastings em :issue:`36817`.)"

#: ../../whatsnew/3.8.rst:284
msgid "PEP 578: Python Runtime Audit Hooks"
msgstr "PEP 578: Ganchos de auditoria em tempo de execução Python"

#: ../../whatsnew/3.8.rst:286
msgid ""
"The PEP adds an Audit Hook and Verified Open Hook. Both are available from "
"Python and native code, allowing applications and frameworks written in pure "
"Python code to take advantage of extra notifications, while also allowing "
"embedders or system administrators to deploy builds of Python where auditing "
"is always enabled."
msgstr ""
"O PEP adiciona um Gancho de Auditoria e um Gancho Aberto Verificado. Ambos "
"estão disponíveis no Python e no código nativo, permitindo que aplicações e "
"estruturas escritas em código Python puro aproveitem as notificações extras, "
"além de permitir que incorporadores ou administradores de sistema "
"implementem versões do Python onde a auditoria está sempre ativada."

#: ../../whatsnew/3.8.rst:292
msgid "See :pep:`578` for full details."
msgstr "Veja :pep:`578` para mais detalhes."

#: ../../whatsnew/3.8.rst:296
msgid "PEP 587: Python Initialization Configuration"
msgstr "PEP 587: Configuração de Inicialização do Python"

#: ../../whatsnew/3.8.rst:298
msgid ""
"The :pep:`587` adds a new C API to configure the Python Initialization "
"providing finer control on the whole configuration and better error "
"reporting."
msgstr ""
"O :pep:`587` adiciona uma nova API C para configurar a Inicialização do "
"Python, fornecendo um controle mais preciso de toda a configuração e "
"melhores relatórios de erros."

#: ../../whatsnew/3.8.rst:301
msgid "New structures:"
msgstr "Novas estruturas:"

#: ../../whatsnew/3.8.rst:303
msgid ":c:type:`PyConfig`"
msgstr ":c:type:`PyConfig`"

#: ../../whatsnew/3.8.rst:304
msgid ":c:type:`PyPreConfig`"
msgstr ":c:type:`PyPreConfig`"

#: ../../whatsnew/3.8.rst:305
msgid ":c:type:`PyStatus`"
msgstr ":c:type:`PyStatus`"

#: ../../whatsnew/3.8.rst:306
msgid ":c:type:`PyWideStringList`"
msgstr ":c:type:`PyWideStringList`"

#: ../../whatsnew/3.8.rst:308
msgid "New functions:"
msgstr "Novas Funções:"

#: ../../whatsnew/3.8.rst:310
msgid ":c:func:`PyConfig_Clear`"
msgstr ":c:func:`PyConfig_Clear`"

#: ../../whatsnew/3.8.rst:311
msgid ":c:func:`PyConfig_InitIsolatedConfig`"
msgstr ":c:func:`PyConfig_InitIsolatedConfig`"

#: ../../whatsnew/3.8.rst:312
msgid ":c:func:`PyConfig_InitPythonConfig`"
msgstr ":c:func:`PyConfig_InitPythonConfig`"

#: ../../whatsnew/3.8.rst:313
msgid ":c:func:`PyConfig_Read`"
msgstr ":c:func:`PyConfig_Read`"

#: ../../whatsnew/3.8.rst:314
msgid ":c:func:`PyConfig_SetArgv`"
msgstr ":c:func:`PyConfig_SetArgv`"

#: ../../whatsnew/3.8.rst:315
msgid ":c:func:`PyConfig_SetBytesArgv`"
msgstr ":c:func:`PyConfig_SetBytesArgv`"

#: ../../whatsnew/3.8.rst:316
msgid ":c:func:`PyConfig_SetBytesString`"
msgstr ":c:func:`PyConfig_SetBytesString`"

#: ../../whatsnew/3.8.rst:317
msgid ":c:func:`PyConfig_SetString`"
msgstr ":c:func:`PyConfig_SetString`"

#: ../../whatsnew/3.8.rst:318
msgid ":c:func:`PyPreConfig_InitIsolatedConfig`"
msgstr ":c:func:`PyPreConfig_InitIsolatedConfig`"

#: ../../whatsnew/3.8.rst:319
msgid ":c:func:`PyPreConfig_InitPythonConfig`"
msgstr ":c:func:`PyPreConfig_InitPythonConfig`"

#: ../../whatsnew/3.8.rst:320
msgid ":c:func:`PyStatus_Error`"
msgstr ":c:func:`PyStatus_Error`"

#: ../../whatsnew/3.8.rst:321
msgid ":c:func:`PyStatus_Exception`"
msgstr ":c:func:`PyStatus_Exception`"

#: ../../whatsnew/3.8.rst:322
msgid ":c:func:`PyStatus_Exit`"
msgstr ":c:func:`PyStatus_Exit`"

#: ../../whatsnew/3.8.rst:323
msgid ":c:func:`PyStatus_IsError`"
msgstr ":c:func:`PyStatus_IsError`"

#: ../../whatsnew/3.8.rst:324
msgid ":c:func:`PyStatus_IsExit`"
msgstr ":c:func:`PyStatus_IsExit`"

#: ../../whatsnew/3.8.rst:325
msgid ":c:func:`PyStatus_NoMemory`"
msgstr ":c:func:`PyStatus_NoMemory`"

#: ../../whatsnew/3.8.rst:326
msgid ":c:func:`PyStatus_Ok`"
msgstr ":c:func:`PyStatus_Ok`"

#: ../../whatsnew/3.8.rst:327
msgid ":c:func:`PyWideStringList_Append`"
msgstr ":c:func:`PyWideStringList_Append`"

#: ../../whatsnew/3.8.rst:328
msgid ":c:func:`PyWideStringList_Insert`"
msgstr ":c:func:`PyWideStringList_Insert`"

#: ../../whatsnew/3.8.rst:329
msgid ":c:func:`Py_BytesMain`"
msgstr ":c:func:`Py_BytesMain`"

#: ../../whatsnew/3.8.rst:330
msgid ":c:func:`Py_ExitStatusException`"
msgstr ":c:func:`Py_ExitStatusException`"

#: ../../whatsnew/3.8.rst:331
msgid ":c:func:`Py_InitializeFromConfig`"
msgstr ":c:func:`Py_InitializeFromConfig`"

#: ../../whatsnew/3.8.rst:332
msgid ":c:func:`Py_PreInitialize`"
msgstr ":c:func:`Py_PreInitialize`"

#: ../../whatsnew/3.8.rst:333
msgid ":c:func:`Py_PreInitializeFromArgs`"
msgstr ":c:func:`Py_PreInitializeFromArgs`"

#: ../../whatsnew/3.8.rst:334
msgid ":c:func:`Py_PreInitializeFromBytesArgs`"
msgstr ":c:func:`Py_PreInitializeFromBytesArgs`"

#: ../../whatsnew/3.8.rst:335
msgid ":c:func:`Py_RunMain`"
msgstr ":c:func:`Py_RunMain`"

#: ../../whatsnew/3.8.rst:337
msgid ""
"This PEP also adds ``_PyRuntimeState.preconfig`` (:c:type:`PyPreConfig` "
"type) and ``PyInterpreterState.config`` (:c:type:`PyConfig` type) fields to "
"these internal structures. ``PyInterpreterState.config`` becomes the new "
"reference configuration, replacing global configuration variables and other "
"private variables."
msgstr ""
"Esse PEP também adiciona os campos ``_PyRuntimeState.preconfig`` (tipo :c:"
"type:`PyPreConfig`) e ``PyInterpreterState.config`` (tipo :c:type:"
"`PyConfig`) campos a essas estruturas internas. ``PyInterpreterState."
"config`` se torna a nova configuração de referência, substituindo variáveis "
"de configuração global e outras variáveis privadas."

#: ../../whatsnew/3.8.rst:343
msgid ""
"See :ref:`Python Initialization Configuration <init-config>` for the "
"documentation."
msgstr ""
"Veja :ref:`Configuração de Inicialização do Python <init-config>` para a "
"documentação."

#: ../../whatsnew/3.8.rst:346
msgid "See :pep:`587` for a full description."
msgstr "Consulte a :pep:`587` para uma descrição completa."

#: ../../whatsnew/3.8.rst:348
msgid "(Contributed by Victor Stinner in :issue:`36763`.)"
msgstr "(Contribuição de Victor Stinner em :issue:`36763`.)"

#: ../../whatsnew/3.8.rst:352
msgid "PEP 590: Vectorcall: a fast calling protocol for CPython"
msgstr "PEP 590: Vectorcall: um protocolo de chamada rápida para CPython"

#: ../../whatsnew/3.8.rst:354
msgid ""
":ref:`vectorcall` is added to the Python/C API. It is meant to formalize "
"existing optimizations which were already done for various classes. Any :ref:"
"`static type <static-types>` implementing a callable can use this protocol."
msgstr ""
":ref:`vectorcall` é adicionado à API Python/C. Ele visa formalizar as "
"otimizações existentes que já foram feitas para várias classes. Qualquer :"
"ref:`tipo estático <static-types>` que implemente um chamável pode usar esse "
"protocolo."

#: ../../whatsnew/3.8.rst:360
msgid ""
"This is currently provisional. The aim is to make it fully public in Python "
"3.9."
msgstr ""
"Atualmente, isso é provisório. O objetivo é torná-lo totalmente público no "
"Python 3.9."

#: ../../whatsnew/3.8.rst:363
msgid "See :pep:`590` for a full description."
msgstr "Consulte a :pep:`590` para uma descrição completa."

#: ../../whatsnew/3.8.rst:365
msgid ""
"(Contributed by Jeroen Demeyer, Mark Shannon and Petr Viktorin in :issue:"
"`36974`.)"
msgstr ""
"(Contribuição de Jeroen Demeyer, Mark Shannon e Petr Viktorin em :issue:"
"`36974`.)"

#: ../../whatsnew/3.8.rst:369
msgid "Pickle protocol 5 with out-of-band data buffers"
msgstr "Protocolo de Pickle 5 com buffers de dados fora da banda"

#: ../../whatsnew/3.8.rst:371
msgid ""
"When :mod:`pickle` is used to transfer large data between Python processes "
"in order to take advantage of multi-core or multi-machine processing, it is "
"important to optimize the transfer by reducing memory copies, and possibly "
"by applying custom techniques such as data-dependent compression."
msgstr ""
"Quando :mod:`pickle` é usado para transferir grande quantidade de dados "
"entre processos Python, a fim de tirar proveito do processamento com vários "
"núcleos ou com várias máquinas, é importante otimizar a transferência "
"reduzindo cópias de memória e, possivelmente, aplicando técnicas "
"personalizadas, como como compactação dependente de dados."

#: ../../whatsnew/3.8.rst:376
msgid ""
"The :mod:`pickle` protocol 5 introduces support for out-of-band buffers "
"where :pep:`3118`-compatible data can be transmitted separately from the "
"main pickle stream, at the discretion of the communication layer."
msgstr ""
"O protocolo :mod:`pickle` 5 introduz suporte para buffers fora de banda, "
"onde dados compatíveis com a :pep:`3118` podem ser transmitidos "
"separadamente do fluxo de pickle principal, a critério da camada de "
"comunicação."

#: ../../whatsnew/3.8.rst:380
msgid "See :pep:`574` for a full description."
msgstr "Consulte a :pep:`574` para uma descrição completa."

#: ../../whatsnew/3.8.rst:382
msgid "(Contributed by Antoine Pitrou in :issue:`36785`.)"
msgstr "(Contribuição de Antoine Pitrou em :issue:`36785`.)"

#: ../../whatsnew/3.8.rst:386
msgid "Other Language Changes"
msgstr "Outras mudanças na linguagem"

#: ../../whatsnew/3.8.rst:388
msgid ""
"A :keyword:`continue` statement was illegal in the :keyword:`finally` clause "
"due to a problem with the implementation.  In Python 3.8 this restriction "
"was lifted. (Contributed by Serhiy Storchaka in :issue:`32489`.)"
msgstr ""
"A instrução :keyword:`continue` era ilegal na cláusula :keyword:`finally` "
"devido a um problema com a implementação. No Python 3.8, essa restrição foi "
"levantada. (Contribuição de Serhiy Storchaka em :issue:`32489`.)"

#: ../../whatsnew/3.8.rst:393
msgid ""
"The :class:`bool`, :class:`int`, and :class:`fractions.Fraction` types now "
"have an :meth:`~int.as_integer_ratio` method like that found in :class:"
"`float` and :class:`decimal.Decimal`.  This minor API extension makes it "
"possible to write ``numerator, denominator = x.as_integer_ratio()`` and have "
"it work across multiple numeric types. (Contributed by Lisa Roach in :issue:"
"`33073` and Raymond Hettinger in :issue:`37819`.)"
msgstr ""
"Os tipos :class:`bool`, :class:`int` e :class:`fractions.Fraction` agora têm "
"o método :meth:`~int.as_integer_ratio` como o encontrado em :class:`float` "
"e :class:`decimal.Decimal`. Esta pequena extensão da API torna possível "
"escrever ``numerator, denominator = x.as_integer_ratio()`` e fazer com que "
"funcione em vários tipos numéricos. (Contribuição de Lisa Roach em :issue:"
"`33073` e Raymond Hettinger em :issue:`37819`.)"

#: ../../whatsnew/3.8.rst:401
msgid ""
"Constructors of :class:`int`, :class:`float` and :class:`complex` will now "
"use the :meth:`~object.__index__` special method, if available and the "
"corresponding method :meth:`~object.__int__`, :meth:`~object.__float__` or :"
"meth:`~object.__complex__` is not available. (Contributed by Serhiy "
"Storchaka in :issue:`20092`.)"
msgstr ""
"Os construtores de :class:`int`, :class:`float` e :class:`complex` agora "
"usarão o método especial :meth:`~object.__index__`, se disponível, e o "
"método correspondente :meth:`~object.__int__`, :meth:`~object.__float__` ou :"
"meth:`~object.__complex__` não está disponível. (Contribuição de Serhiy "
"Storchaka em :issue:`20092`.)"

#: ../../whatsnew/3.8.rst:407
msgid ""
"Added support of :samp:`\\\\N\\\\{{name}\\\\}` escapes in :mod:`regular "
"expressions <re>`::"
msgstr ""
"Adicionado suporte a escapes :samp:`\\\\N\\\\{{name}\\\\}` em :mod:"
"`expressões regulares <re>`::"

#: ../../whatsnew/3.8.rst:409
msgid ""
">>> notice = 'Copyright © 2019'\n"
">>> copyright_year_pattern = re.compile(r'\\N{copyright sign}\\s*(\\d{4})')\n"
">>> int(copyright_year_pattern.search(notice).group(1))\n"
"2019"
msgstr ""

#: ../../whatsnew/3.8.rst:414
msgid ""
"(Contributed by Jonathan Eunice and Serhiy Storchaka in :issue:`30688`.)"
msgstr ""
"(Contribuição de Jonathan Eunice e Serhiy Storchaka em :issue:`30688`.)"

#: ../../whatsnew/3.8.rst:416
msgid ""
"Dict and dictviews are now iterable in reversed insertion order using :func:"
"`reversed`. (Contributed by Rémi Lapeyre in :issue:`33462`.)"
msgstr ""
"Dict e dictviews agora são iteráveis em ordem de inserção reversa usando :"
"func:`reversed`. (Contribuição de Rémi Lapeyre em :issue:`33462`.)"

#: ../../whatsnew/3.8.rst:419
msgid ""
"The syntax allowed for keyword names in function calls was further "
"restricted. In particular, ``f((keyword)=arg)`` is no longer allowed. It was "
"never intended to permit more than a bare name on the left-hand side of a "
"keyword argument assignment term. (Contributed by Benjamin Peterson in :"
"issue:`34641`.)"
msgstr ""
"A sintaxe permitida para nomes de palavras-chave em chamadas de função foi "
"ainda mais restrita. Em particular, ``f((keyword)=arg)`` não é mais "
"permitido. Ele nunca teve a intenção de permitir mais do que um nome simples "
"no lado esquerdo de um termo de atribuição de argumento nomeado. "
"(Contribuição de Benjamin Peterson em :issue:`34641`.)"

#: ../../whatsnew/3.8.rst:425
msgid ""
"Generalized iterable unpacking in :keyword:`yield` and :keyword:`return` "
"statements no longer requires enclosing parentheses. This brings the *yield* "
"and *return* syntax into better agreement with normal assignment syntax::"
msgstr ""
"O desempacotamento de iterável generalizado das instruções :keyword:`yield` "
"e :keyword:`return` não requer mais parênteses. Isso traz a sintaxe *yield* "
"e *return* uma melhor concordância com a sintaxe de atribuição normal::"

#: ../../whatsnew/3.8.rst:430
msgid ""
">>> def parse(family):\n"
"        lastname, *members = family.split()\n"
"        return lastname.upper(), *members\n"
"\n"
">>> parse('simpsons homer marge bart lisa maggie')\n"
"('SIMPSONS', 'homer', 'marge', 'bart', 'lisa', 'maggie')"
msgstr ""

#: ../../whatsnew/3.8.rst:437
msgid "(Contributed by David Cuthbert and Jordan Chapman in :issue:`32117`.)"
msgstr "(Contribuição de David Cuthbert e Jordan Chapman em :issue:`32117`.)"

#: ../../whatsnew/3.8.rst:439
msgid ""
"When a comma is missed in code such as ``[(10, 20) (30, 40)]``, the compiler "
"displays a :exc:`SyntaxWarning` with a helpful suggestion. This improves on "
"just having a :exc:`TypeError` indicating that the first tuple was not "
"callable.  (Contributed by Serhiy Storchaka in :issue:`15248`.)"
msgstr ""
"Quando uma vírgula está faltando em código como ``[(10, 20) (30, 40)]``, o "
"compilador exibe um :exc:`SyntaxWarning` com uma sugestão útil. Isso melhora "
"apenas tendo um :exc:`TypeError` indicando que a primeira tupla não era "
"chamável. (Contribuição de Serhiy Storchaka em :issue:`15248`.)"

#: ../../whatsnew/3.8.rst:445
msgid ""
"Arithmetic operations between subclasses of :class:`datetime.date` or :class:"
"`datetime.datetime` and :class:`datetime.timedelta` objects now return an "
"instance of the subclass, rather than the base class. This also affects the "
"return type of operations whose implementation (directly or indirectly) "
"uses :class:`datetime.timedelta` arithmetic, such as :meth:`~datetime."
"datetime.astimezone`. (Contributed by Paul Ganssle in :issue:`32417`.)"
msgstr ""
"As operações aritméticas entre as subclasses de :class:`datetime.date` ou :"
"class:`datetime.datetime` e :class:`datetime.timedelta` agora retornam uma "
"instância da subclasse, em vez da classe base. Isso também afeta o tipo de "
"retorno de operações cuja implementação (direta ou indiretamente) utiliza "
"aritmética de :class:`datetime.timedelta`, como :meth:`~datetime.datetime."
"astimezone`. (Contribuição de Paul Ganssle em :issue:`32417`.)"

#: ../../whatsnew/3.8.rst:453
msgid ""
"When the Python interpreter is interrupted by Ctrl-C (SIGINT) and the "
"resulting :exc:`KeyboardInterrupt` exception is not caught, the Python "
"process now exits via a SIGINT signal or with the correct exit code such "
"that the calling process can detect that it died due to a Ctrl-C.  Shells on "
"POSIX and Windows use this to properly terminate scripts in interactive "
"sessions. (Contributed by Google via Gregory P. Smith in :issue:`1054041`.)"
msgstr ""
"Quando o interpretador Python é interrompido por Ctrl-C (SIGINT) e a exceção "
"resultante :exc:`KeyboardInterrupt` não é capturada, o processo Python agora "
"sai por meio de um sinal SIGINT ou com o código de saída correto, para que o "
"processo de chamada possa detectar que foi encerrado devido a um Ctrl-C. Os "
"shells no POSIX e Windows usam isso para finalizar corretamente os scripts "
"em sessões interativas. (Contribuição do Google via Gregory P. Smith em :"
"issue:`1054041`.)"

#: ../../whatsnew/3.8.rst:460
msgid ""
"Some advanced styles of programming require updating the :class:`types."
"CodeType` object for an existing function.  Since code objects are "
"immutable, a new code object needs to be created, one that is modeled on the "
"existing code object.  With 19 parameters, this was somewhat tedious.  Now, "
"the new ``replace()`` method makes it possible to create a clone with a few "
"altered parameters."
msgstr ""
"Alguns estilos avançados de programação requerem a atualização do objeto :"
"class:`types.CodeType` para uma função existente. Como os objetos código são "
"imutáveis, um novo objeto código precisa ser criado, modelado no objeto "
"código existente. Com 19 parâmetros, isso foi um pouco tedioso. Agora, o "
"novo método ``replace()`` torna possível criar um clone com alguns "
"parâmetros alterados."

#: ../../whatsnew/3.8.rst:467
msgid ""
"Here's an example that alters the :func:`statistics.mean` function to "
"prevent the *data* parameter from being used as a keyword argument::"
msgstr ""
"Aqui está um exemplo que altera a função :func:`Statistics.mean` para "
"impedir que o parâmetro *data* seja usado como argumento nomeado::"

#: ../../whatsnew/3.8.rst:470
msgid ""
">>> from statistics import mean\n"
">>> mean(data=[10, 20, 90])\n"
"40\n"
">>> mean.__code__ = mean.__code__.replace(co_posonlyargcount=1)\n"
">>> mean(data=[10, 20, 90])\n"
"Traceback (most recent call last):\n"
"  ...\n"
"TypeError: mean() got some positional-only arguments passed as keyword "
"arguments: 'data'"
msgstr ""

#: ../../whatsnew/3.8.rst:479
msgid "(Contributed by Victor Stinner in :issue:`37032`.)"
msgstr "(Contribuição de Victor Stinner em :issue:`37032`.)"

#: ../../whatsnew/3.8.rst:481
msgid ""
"For integers, the three-argument form of the :func:`pow` function now "
"permits the exponent to be negative in the case where the base is relatively "
"prime to the modulus. It then computes a modular inverse to the base when "
"the exponent is ``-1``, and a suitable power of that inverse for other "
"negative exponents.  For example, to compute the `modular multiplicative "
"inverse <https://en.wikipedia.org/wiki/Modular_multiplicative_inverse>`_ of "
"38 modulo 137, write::"
msgstr ""
"Para números inteiros, a forma de três argumentos da função :func:`pow` "
"agora permite que o expoente seja negativo no caso em que a base é "
"relativamente primária ao módulo. Em seguida, calcula um inverso modular "
"para a base quando o expoente é ``-1`` e uma potência adequada desse inverso "
"para outros expoentes negativos. Por exemplo, para calcular o `inverso "
"multiplicativo modular <https://en.wikipedia.org/wiki/"
"Modular_multiplicative_inverse>`_ de 38 módulo 137, escreva::"

#: ../../whatsnew/3.8.rst:490
msgid ""
">>> pow(38, -1, 137)\n"
"119\n"
">>> 119 * 38 % 137\n"
"1"
msgstr ""

#: ../../whatsnew/3.8.rst:495
msgid ""
"Modular inverses arise in the solution of `linear Diophantine equations "
"<https://en.wikipedia.org/wiki/Diophantine_equation>`_. For example, to find "
"integer solutions for ``4258𝑥 + 147𝑦 = 369``, first rewrite as ``4258𝑥 ≡ 369 "
"(mod 147)`` then solve:"
msgstr ""
"Inversos modulares surgem na solução de `equações diofantinas lineares "
"<https://en.wikipedia.org/wiki/Diophantine_equation>`_. Por exemplo, para "
"encontrar soluções inteiras para ``4258𝑥 + 147𝑦 = 369``, primeiro reescreva "
"como ``4258𝑥 ≡ 369 (mod 147)`` e depois resolva:"

#: ../../whatsnew/3.8.rst:505
msgid "(Contributed by Mark Dickinson in :issue:`36027`.)"
msgstr "(Contribuição de Mark Dickinson em :issue:`36027`.)"

#: ../../whatsnew/3.8.rst:507
msgid ""
"Dict comprehensions have been synced-up with dict literals so that the key "
"is computed first and the value second::"
msgstr ""
"As compreensões de dict foram sincronizadas com literais de dict, para que a "
"chave seja computada primeiro e o valor em segundo::"

#: ../../whatsnew/3.8.rst:510
msgid ""
">>> # Dict comprehension\n"
">>> cast = {input('role? '): input('actor? ') for i in range(2)}\n"
"role? King Arthur\n"
"actor? Chapman\n"
"role? Black Knight\n"
"actor? Cleese\n"
"\n"
">>> # Dict literal\n"
">>> cast = {input('role? '): input('actor? ')}\n"
"role? Sir Robin\n"
"actor? Eric Idle"
msgstr ""

#: ../../whatsnew/3.8.rst:522
msgid ""
"The guaranteed execution order is helpful with assignment expressions "
"because variables assigned in the key expression will be available in the "
"value expression::"
msgstr ""
"A ordem de execução garantida é útil nas expressões de atribuição, porque as "
"variáveis atribuídas na expressão de chave estarão disponíveis na expressão "
"de valor::"

#: ../../whatsnew/3.8.rst:526
msgid ""
">>> names = ['Martin von Löwis', 'Łukasz Langa', 'Walter Dörwald']\n"
">>> {(n := normalize('NFC', name)).casefold() : n for name in names}\n"
"{'martin von löwis': 'Martin von Löwis',\n"
" 'łukasz langa': 'Łukasz Langa',\n"
" 'walter dörwald': 'Walter Dörwald'}"
msgstr ""

#: ../../whatsnew/3.8.rst:532
msgid "(Contributed by Jörn Heissler in :issue:`35224`.)"
msgstr "(Contribuição de Jörn Heissler em :issue:`35224`.)"

#: ../../whatsnew/3.8.rst:534
msgid ""
"The :meth:`object.__reduce__` method can now return a tuple from two to six "
"elements long. Formerly, five was the limit.  The new, optional sixth "
"element is a callable with a ``(obj, state)`` signature.  This allows the "
"direct control over the state-updating behavior of a specific object.  If "
"not *None*, this callable will have priority over the object's :meth:"
"`~__setstate__` method. (Contributed by Pierre Glaser and Olivier Grisel in :"
"issue:`35900`.)"
msgstr ""
"O método :meth:`object.__reduce__` agora pode retornar uma tupla de dois a "
"seis elementos. Anteriormente, cinco era o limite. O novo sexto elemento "
"opcional é um chamável com uma assinatura ``(obj, state)``. Isso permite o "
"controle direto sobre o comportamento de atualização de estado de um objeto "
"específico. Caso contrário, *None*, esse chamável terá prioridade sobre o "
"método :meth:`~__setstate__` do objeto. (Contribuição de Pierre Glaser e "
"Olivier Grisel em :issue:`35900`.)"

#: ../../whatsnew/3.8.rst:543
msgid "New Modules"
msgstr "Novos módulos"

#: ../../whatsnew/3.8.rst:545
msgid ""
"The new :mod:`importlib.metadata` module provides (provisional) support for "
"reading metadata from third-party packages.  For example, it can extract an "
"installed package's version number, list of entry points, and more::"
msgstr ""
"O novo módulo :mod:`importlib.metadata` fornece suporte (provisório) para a "
"leitura de metadados de pacotes de terceiros. Por exemplo, ele pode extrair "
"o número da versão de um pacote instalado, a lista de pontos de entrada e "
"muito mais::"

#: ../../whatsnew/3.8.rst:549
msgid ""
">>> # Note following example requires that the popular \"requests\"\n"
">>> # package has been installed.\n"
">>>\n"
">>> from importlib.metadata import version, requires, files\n"
">>> version('requests')\n"
"'2.22.0'\n"
">>> list(requires('requests'))\n"
"['chardet (<3.1.0,>=3.0.2)']\n"
">>> list(files('requests'))[:5]\n"
"[PackagePath('requests-2.22.0.dist-info/INSTALLER'),\n"
" PackagePath('requests-2.22.0.dist-info/LICENSE'),\n"
" PackagePath('requests-2.22.0.dist-info/METADATA'),\n"
" PackagePath('requests-2.22.0.dist-info/RECORD'),\n"
" PackagePath('requests-2.22.0.dist-info/WHEEL')]"
msgstr ""

#: ../../whatsnew/3.8.rst:564
msgid "(Contributed by Barry Warsaw and Jason R. Coombs in :issue:`34632`.)"
msgstr "(Contribuição de Barry Warsaw e Jason R. Coombs em :issue:`34632`.)"

#: ../../whatsnew/3.8.rst:568
msgid "Improved Modules"
msgstr "Módulos melhorados"

#: ../../whatsnew/3.8.rst:571
msgid "ast"
msgstr "ast"

#: ../../whatsnew/3.8.rst:573
msgid ""
"AST nodes now have ``end_lineno`` and ``end_col_offset`` attributes, which "
"give the precise location of the end of the node.  (This only applies to "
"nodes that have ``lineno`` and ``col_offset`` attributes.)"
msgstr ""
"Os nós de AST agora têm os atributos ``end_lineno`` e ``end_col_offset``, "
"que fornecem a localização precisa do final do nó. (Isso se aplica apenas "
"aos nós que possuem os atributos ``lineno`` e ``col_offset``.)"

#: ../../whatsnew/3.8.rst:577
msgid ""
"New function :func:`ast.get_source_segment` returns the source code for a "
"specific AST node."
msgstr ""
"Nova função :func:`ast.get_source_segment` retorna o código-fonte para um nó "
"AST específico."

#: ../../whatsnew/3.8.rst:580
msgid "(Contributed by Ivan Levkivskyi in :issue:`33416`.)"
msgstr "(Contribuição de Ivan Levkivskyi em :issue:`33416`.)"

#: ../../whatsnew/3.8.rst:582
msgid "The :func:`ast.parse` function has some new flags:"
msgstr "A função :func:`ast.parse` possui alguns novos sinalizadores:"

#: ../../whatsnew/3.8.rst:584
msgid ""
"``type_comments=True`` causes it to return the text of :pep:`484` and :pep:"
"`526` type comments associated with certain AST nodes;"
msgstr ""
"``type_comments=True`` faz com que retorne o texto dos comentários de tipos "
"de :pep:`484` e :pep:`526` associados a determinados nós AST;"

#: ../../whatsnew/3.8.rst:587
msgid ""
"``mode='func_type'`` can be used to parse :pep:`484` \"signature type "
"comments\" (returned for function definition AST nodes);"
msgstr ""
"``mode='func_type'`` pode ser usado para analisar \"comentários do tipo de "
"assinatura\" do :pep:`484` (retornados para nós AST de definição de função);"

#: ../../whatsnew/3.8.rst:590
msgid ""
"``feature_version=(3, N)`` allows specifying an earlier Python 3 version.  "
"For example, ``feature_version=(3, 4)`` will treat :keyword:`async` and :"
"keyword:`await` as non-reserved words."
msgstr ""
"``feature_version=(3, N)`` permite especificar uma versão anterior do Python "
"3. Por exemplo, ``feature_version=(3, 4)`` tratará :keyword:`async` e :"
"keyword:`await` como palavras não reservadas."

#: ../../whatsnew/3.8.rst:594
msgid "(Contributed by Guido van Rossum in :issue:`35766`.)"
msgstr "(Contribuição de Guido van Rossum em :issue:`35766`.)"

#: ../../whatsnew/3.8.rst:598
msgid "asyncio"
msgstr "asyncio"

#: ../../whatsnew/3.8.rst:600
msgid ""
":func:`asyncio.run` has graduated from the provisional to stable API. This "
"function can be used to execute a :term:`coroutine` and return the result "
"while automatically managing the event loop. For example::"
msgstr ""
":func:`asyncio.run` passou da API provisória para a estável. Esta função "
"pode ser usada para executar uma :term:`corrotina <coroutine>` e retornar o "
"resultado enquanto gerencia automaticamente o loop de eventos. Por exemplo::"

#: ../../whatsnew/3.8.rst:604
msgid ""
"import asyncio\n"
"\n"
"async def main():\n"
"    await asyncio.sleep(0)\n"
"    return 42\n"
"\n"
"asyncio.run(main())"
msgstr ""

#: ../../whatsnew/3.8.rst:612
msgid "This is *roughly* equivalent to::"
msgstr "Isso é *aproximadamente* equivalente a::"

#: ../../whatsnew/3.8.rst:614
msgid ""
"import asyncio\n"
"\n"
"async def main():\n"
"    await asyncio.sleep(0)\n"
"    return 42\n"
"\n"
"loop = asyncio.new_event_loop()\n"
"asyncio.set_event_loop(loop)\n"
"try:\n"
"    loop.run_until_complete(main())\n"
"finally:\n"
"    asyncio.set_event_loop(None)\n"
"    loop.close()"
msgstr ""

#: ../../whatsnew/3.8.rst:629
msgid ""
"The actual implementation is significantly more complex. Thus, :func:"
"`asyncio.run` should be the preferred way of running asyncio programs."
msgstr ""
"A implementação real é significativamente mais complexa. Assim, :func:"
"`asyncio.run` deve ser a maneira preferida de executar programas assíncronos."

#: ../../whatsnew/3.8.rst:632
msgid "(Contributed by Yury Selivanov in :issue:`32314`.)"
msgstr "(Contribuição de Yury Selivanov em :issue:`32314`.)"

#: ../../whatsnew/3.8.rst:634
msgid ""
"Running ``python -m asyncio`` launches a natively async REPL.  This allows "
"rapid experimentation with code that has a top-level :keyword:`await`.  "
"There is no longer a need to directly call ``asyncio.run()`` which would "
"spawn a new event loop on every invocation:"
msgstr ""
"A execução de ``python -m asyncio`` lança um REPL nativo assíncrono. Isso "
"permite a experimentação rápida de código que possui um nível superior :"
"keyword:`await`. Não é mais necessário chamar diretamente ``asyncio.run()``, "
"o que geraria um novo loop de evento a cada chamada:"

#: ../../whatsnew/3.8.rst:639
msgid ""
"$ python -m asyncio\n"
"asyncio REPL 3.8.0\n"
"Use \"await\" directly instead of \"asyncio.run()\".\n"
"Type \"help\", \"copyright\", \"credits\" or \"license\" for more "
"information.\n"
">>> import asyncio\n"
">>> await asyncio.sleep(10, result='hello')\n"
"hello"
msgstr ""

#: ../../whatsnew/3.8.rst:649
msgid "(Contributed by Yury Selivanov in :issue:`37028`.)"
msgstr "(Contribuição de Yury Selivanov em :issue:`37028`.)"

#: ../../whatsnew/3.8.rst:651 ../../whatsnew/3.8.rst:1970
msgid ""
"The exception :class:`asyncio.CancelledError` now inherits from :class:"
"`BaseException` rather than :class:`Exception` and no longer inherits from :"
"class:`concurrent.futures.CancelledError`. (Contributed by Yury Selivanov "
"in :issue:`32528`.)"
msgstr ""
"A exceção :class:`asyncio.CancelledError` agora herda de :class:"
"`BaseException` em vez de :class:`Exception` e não mais herda de :class:"
"`concurrent.futures.CancelledError`. (Contribuição de Yury Selivanov em :"
"issue:`32528`.)"

#: ../../whatsnew/3.8.rst:656
msgid ""
"On Windows, the default event loop is now :class:`~asyncio."
"ProactorEventLoop`. (Contributed by Victor Stinner in :issue:`34687`.)"
msgstr ""
"No Windows, o loop de eventos padrão é agora :class:`~asyncio."
"ProactorEventLoop`. (Contribuição de Victor Stinner em :issue:`34687`.)"

#: ../../whatsnew/3.8.rst:659
msgid ""
":class:`~asyncio.ProactorEventLoop` now also supports UDP. (Contributed by "
"Adam Meily and Andrew Svetlov in :issue:`29883`.)"
msgstr ""
":class:`~asyncio.ProactorEventLoop` agora também tem suporte a UDP. "
"(Contribuição de Adam Meily e Andrew Svetlov em :issue:`29883`.)"

#: ../../whatsnew/3.8.rst:662
msgid ""
":class:`~asyncio.ProactorEventLoop` can now be interrupted by :exc:"
"`KeyboardInterrupt` (\"CTRL+C\"). (Contributed by Vladimir Matveev in :issue:"
"`23057`.)"
msgstr ""
":class:`~asyncio.ProactorEventLoop` pode agora ser interrompido por :exc:"
"`KeyboardInterrupt` (\"CTRL+C\"). (Contribuição de Vladimir Matveev em :"
"issue:`23057`.)"

#: ../../whatsnew/3.8.rst:666
msgid ""
"Added :meth:`asyncio.Task.get_coro` for getting the wrapped coroutine within "
"an :class:`asyncio.Task`. (Contributed by Alex Grönholm in :issue:`36999`.)"
msgstr ""
"Adicionado :meth:`asyncio.Task.get_coro` para obter a corrotina de dentro de "
"um :class:`asyncio.Task`. (Contribuição de Alex Grönholm em :issue:`36999`.)"

#: ../../whatsnew/3.8.rst:670
msgid ""
"Asyncio tasks can now be named, either by passing the ``name`` keyword "
"argument to :func:`asyncio.create_task` or the :meth:`~asyncio.loop."
"create_task` event loop method, or by calling the :meth:`~asyncio.Task."
"set_name` method on the task object. The task name is visible in the "
"``repr()`` output of :class:`asyncio.Task` and can also be retrieved using "
"the :meth:`~asyncio.Task.get_name` method. (Contributed by Alex Grönholm in :"
"issue:`34270`.)"
msgstr ""
"As tarefas de asyncio agora podem ser nomeadas, passando o argumento nomeado "
"``name`` para :func:`asyncio.create_task` ou o método de loop de evento :"
"meth:`~asyncio.loop.create_task` ou chamando o método :meth:`~asyncio.Task."
"set_name` no objeto de tarefa. O nome da tarefa é visível na saída de "
"``repr()`` de :class:`asyncio.Task` e também pode ser recuperado usando o "
"método :meth:`~asyncio.Task.get_name`. (Contribuição de Alex Grönholm em :"
"issue:`34270`.)"

#: ../../whatsnew/3.8.rst:678
msgid ""
"Added support for `Happy Eyeballs <https://en.wikipedia.org/wiki/"
"Happy_Eyeballs>`_ to :func:`asyncio.loop.create_connection`. To specify the "
"behavior, two new parameters have been added: *happy_eyeballs_delay* and "
"*interleave*. The Happy Eyeballs algorithm improves responsiveness in "
"applications that support IPv4 and IPv6 by attempting to simultaneously "
"connect using both. (Contributed by twisteroid ambassador in :issue:`33530`.)"
msgstr ""
"Adicionado suporte a `Happy Eyeballs <https://en.wikipedia.org/wiki/"
"Happy_Eyeballs>`_ para :func:`asyncio.loop.create_connection`. Para "
"especificar o comportamento, dois novos parâmetros foram adicionados: "
"*happy_eyeballs_delay* e *interleave*. O algoritmo Happy Eyeballs melhora a "
"capacidade de resposta em aplicativos compatíveis com IPv4 e IPv6, tentando "
"conectar-se simultaneamente usando os dois. (Contribuição de twisteroid "
"ambassador em :issue:`33530`.)"

#: ../../whatsnew/3.8.rst:688
msgid "builtins"
msgstr "builtins"

#: ../../whatsnew/3.8.rst:690
msgid ""
"The :func:`compile` built-in has been improved to accept the ``ast."
"PyCF_ALLOW_TOP_LEVEL_AWAIT`` flag. With this new flag passed, :func:"
"`compile` will allow top-level ``await``, ``async for`` and ``async with`` "
"constructs that are usually considered invalid syntax. Asynchronous code "
"object marked with the ``CO_COROUTINE`` flag may then be returned. "
"(Contributed by Matthias Bussonnier in :issue:`34616`)"
msgstr ""
"A função embutida :func:`compile` foi aprimorada para aceitar o sinalizador "
"``ast.PyCF_ALLOW_TOP_LEVEL_AWAIT``. Com esse novo sinalizador passado, :func:"
"`compile` permitirá construções de nível superior ``await``, ``async for`` e "
"``async with`` que geralmente são consideradas sintaxe inválida. O objeto de "
"código assíncrono marcado com o sinalizador ``CO_COROUTINE`` pode ser "
"retornado. (Contribuição de Matthias Bussonnier em :issue:`34616`)"

#: ../../whatsnew/3.8.rst:699
msgid "collections"
msgstr "collections"

#: ../../whatsnew/3.8.rst:701
msgid ""
"The :meth:`~collections.somenamedtuple._asdict` method for :func:"
"`collections.namedtuple` now returns a :class:`dict` instead of a :class:"
"`collections.OrderedDict`. This works because regular dicts have guaranteed "
"ordering since Python 3.7. If the extra features of :class:`OrderedDict` are "
"required, the suggested remediation is to cast the result to the desired "
"type: ``OrderedDict(nt._asdict())``. (Contributed by Raymond Hettinger in :"
"issue:`35864`.)"
msgstr ""
"O método :meth:`~collections.somenamedtuple._asdict` para :func:`collections."
"namedtuple` agora retorna a :class:`dict` em vez de um :class:`collections."
"OrderedDict`. Isso funciona porque os dict regulares garantem pedidos desde "
"o Python 3.7. Se os recursos extras de :class:`OrderedDict` forem "
"necessários, a solução sugerida é converter o resultado no tipo desejado: "
"``OrderedDict(nt._asdict())``. (Contribuição de Raymond Hettinger em :issue:"
"`35864`.)"

#: ../../whatsnew/3.8.rst:711
msgid "cProfile"
msgstr "cProfile"

#: ../../whatsnew/3.8.rst:713
msgid ""
"The :class:`cProfile.Profile <profile.Profile>` class can now be used as a "
"context manager. Profile a block of code by running::"
msgstr ""
"A classe :class:`cProfile.Profile <profile.Profile>` agora pode ser usada "
"como um gerenciador de contexto. Perfile um bloco de código executando::"

#: ../../whatsnew/3.8.rst:716
msgid ""
"import cProfile\n"
"\n"
"with cProfile.Profile() as profiler:\n"
"      # code to be profiled\n"
"      ..."
msgstr ""

#: ../../whatsnew/3.8.rst:722
msgid "(Contributed by Scott Sanderson in :issue:`29235`.)"
msgstr "(Contribuição de Scott Sanderson em :issue:`29235`.)"

#: ../../whatsnew/3.8.rst:726
msgid "csv"
msgstr "csv"

#: ../../whatsnew/3.8.rst:728
msgid ""
"The :class:`csv.DictReader` now returns instances of :class:`dict` instead "
"of a :class:`collections.OrderedDict`.  The tool is now faster and uses less "
"memory while still preserving the field order. (Contributed by Michael Selik "
"in :issue:`34003`.)"
msgstr ""
"O :class:`csv.DictReader` agora retorna instâncias de :class:`dict` em vez "
"de um :class:`collections.OrderedDict`. Agora, a ferramenta é mais rápida e "
"utiliza menos memória enquanto preserva a ordem dos campos. (Contribuição de "
"Michael Selik em :issue:`34003`.)"

#: ../../whatsnew/3.8.rst:735
msgid "curses"
msgstr "curses"

#: ../../whatsnew/3.8.rst:737
msgid ""
"Added a new variable holding structured version information for the "
"underlying ncurses library: :data:`~curses.ncurses_version`. (Contributed by "
"Serhiy Storchaka in :issue:`31680`.)"
msgstr ""
"Adicionada uma nova variável contendo informações de versão estruturada para "
"a biblioteca ncurses subjacente: :data:`~curses.ncurses_version`. "
"(Contribuição de Serhiy Storchaka em :issue:`31680`.)"

#: ../../whatsnew/3.8.rst:743
msgid "ctypes"
msgstr "ctypes"

#: ../../whatsnew/3.8.rst:745
msgid ""
"On Windows, :class:`~ctypes.CDLL` and subclasses now accept a *winmode* "
"parameter to specify flags for the underlying ``LoadLibraryEx`` call. The "
"default flags are set to only load DLL dependencies from trusted locations, "
"including the path where the DLL is stored (if a full or partial path is "
"used to load the initial DLL) and paths added by :func:`~os."
"add_dll_directory`. (Contributed by Steve Dower in :issue:`36085`.)"
msgstr ""
"No Windows, :class:`~ctypes.CDLL` e subclasses agora aceitam um parâmetro "
"*winmode* para especificar sinalizadores para a chamada subjacente "
"``LoadLibraryEx``. Os sinalizadores padrão são definidos para carregar "
"apenas dependências da DLL em locais confiáveis, incluindo o caminho em que "
"a DLL está armazenada (se um caminho completo ou parcial for usado para "
"carregar a DLL inicial) e os caminhos adicionados por :func:`~os."
"add_dll_directory` . (Contribuição de Steve Dower em :issue:`36085`.)"

#: ../../whatsnew/3.8.rst:754
msgid "datetime"
msgstr "datetime"

#: ../../whatsnew/3.8.rst:756
msgid ""
"Added new alternate constructors :meth:`datetime.date.fromisocalendar` and :"
"meth:`datetime.datetime.fromisocalendar`, which construct :class:`~datetime."
"date` and :class:`~datetime.datetime` objects respectively from ISO year, "
"week number, and weekday; these are the inverse of each class's "
"``isocalendar`` method. (Contributed by Paul Ganssle in :issue:`36004`.)"
msgstr ""
"Adicionados novos construtores alternativos :meth:`datetime.date."
"fromisocalendar` e :meth:`datetime.datetime.fromisocalendar`, que constroem "
"objetos de :class:`~datetime.date` e :class:`~datetime.datetime` "
"respectivamente do ano ISO, número da semana e dia da semana; estes são o "
"inverso do método ``isocalendar`` de cada classe. (Contribuição de Paul "
"Ganssle em :issue:`36004`.)"

#: ../../whatsnew/3.8.rst:764
msgid "functools"
msgstr "functools"

#: ../../whatsnew/3.8.rst:766
msgid ""
":func:`functools.lru_cache` can now be used as a straight decorator rather "
"than as a function returning a decorator.  So both of these are now "
"supported::"
msgstr ""
":func:`functools.lru_cache` agora pode ser usado como um decorador direto, e "
"não como uma função retornando um decorador. Portanto, agora ambos são "
"suportados::"

#: ../../whatsnew/3.8.rst:769
msgid ""
"@lru_cache\n"
"def f(x):\n"
"    ...\n"
"\n"
"@lru_cache(maxsize=256)\n"
"def f(x):\n"
"    ..."
msgstr ""

#: ../../whatsnew/3.8.rst:777
msgid "(Contributed by Raymond Hettinger in :issue:`36772`.)"
msgstr "(Contribuição de Raymond Hettinger em :issue:`36772`.)"

#: ../../whatsnew/3.8.rst:779
msgid ""
"Added a new :func:`functools.cached_property` decorator, for computed "
"properties cached for the life of the instance. ::"
msgstr ""
"Adicionado um novo decorador :func:`functools.cached_property`, para "
"propriedades computadas armazenadas em cache durante toda a vida útil da "
"instância. ::"

#: ../../whatsnew/3.8.rst:782
msgid ""
"import functools\n"
"import statistics\n"
"\n"
"class Dataset:\n"
"   def __init__(self, sequence_of_numbers):\n"
"      self.data = sequence_of_numbers\n"
"\n"
"   @functools.cached_property\n"
"   def variance(self):\n"
"      return statistics.variance(self.data)"
msgstr ""

#: ../../whatsnew/3.8.rst:793
msgid "(Contributed by Carl Meyer in :issue:`21145`)"
msgstr "(Contribuição de Carl Meyer em :issue:`21145`)"

#: ../../whatsnew/3.8.rst:796
msgid ""
"Added a new :func:`functools.singledispatchmethod` decorator that converts "
"methods into :term:`generic functions <generic function>` using :term:"
"`single dispatch`::"
msgstr ""
"Adicionado um novo decorador :func:`functools.singledispatchmethod` que "
"converte métodos em :term:`funções genéricas <generic function>` usando :"
"term:`despacho único <single dispatch>`::"

#: ../../whatsnew/3.8.rst:800
msgid ""
"from functools import singledispatchmethod\n"
"from contextlib import suppress\n"
"\n"
"class TaskManager:\n"
"\n"
"    def __init__(self, tasks):\n"
"        self.tasks = list(tasks)\n"
"\n"
"    @singledispatchmethod\n"
"    def discard(self, value):\n"
"        with suppress(ValueError):\n"
"            self.tasks.remove(value)\n"
"\n"
"    @discard.register(list)\n"
"    def _(self, tasks):\n"
"        targets = set(tasks)\n"
"        self.tasks = [x for x in self.tasks if x not in targets]"
msgstr ""

#: ../../whatsnew/3.8.rst:818
msgid "(Contributed by Ethan Smith in :issue:`32380`)"
msgstr "(Contribuição de Ethan Smith em :issue:`32380`)"

#: ../../whatsnew/3.8.rst:821
msgid "gc"
msgstr "gc"

#: ../../whatsnew/3.8.rst:823
msgid ""
":func:`~gc.get_objects` can now receive an optional *generation* parameter "
"indicating a generation to get objects from. (Contributed by Pablo Galindo "
"in :issue:`36016`.)"
msgstr ""
":func:`~gc.get_objects` agora pode receber um parâmetro opcional "
"*generation* indicando uma geração da qual obter objetos. (Contribuição de "
"Pablo Galindo em :issue:`36016`.)"

#: ../../whatsnew/3.8.rst:829
msgid "gettext"
msgstr "gettext"

#: ../../whatsnew/3.8.rst:831
msgid ""
"Added :func:`~gettext.pgettext` and its variants. (Contributed by Franz "
"Glasner, Éric Araujo, and Cheryl Sabella in :issue:`2504`.)"
msgstr ""
"Adicionado :func:`~gettext.pgettext` e suas variantes. (Contribuição de "
"Franz Glasner, Éric Araujo e Cheryl Sabella em :issue:`2504`.)"

#: ../../whatsnew/3.8.rst:836
msgid "gzip"
msgstr "gzip"

#: ../../whatsnew/3.8.rst:838
msgid ""
"Added the *mtime* parameter to :func:`gzip.compress` for reproducible "
"output. (Contributed by Guo Ci Teo in :issue:`34898`.)"
msgstr ""
"Adicionado o parâmetro *mtime* em :func:`gzip.compress` para saída "
"reproduzível. (Contribuição de Guo Ci Teo em :issue:`34898`.)"

#: ../../whatsnew/3.8.rst:841
msgid ""
"A :exc:`~gzip.BadGzipFile` exception is now raised instead of :exc:`OSError` "
"for certain types of invalid or corrupt gzip files. (Contributed by Filip "
"Gruszczyński, Michele Orrù, and Zackery Spytz in :issue:`6584`.)"
msgstr ""
"A exceção :exc:`~gzip.BadGzipFile` agora é levantada em vez de :exc:"
"`OSError` para certos tipos de arquivos gzip inválidos ou corrompidos. "
"(Contribuição de Filip Gruszczyński, Michele Orrù e Zackery Spytz em :issue:"
"`6584`.)"

#: ../../whatsnew/3.8.rst:848
msgid "IDLE and idlelib"
msgstr "IDLE e idlelib"

#: ../../whatsnew/3.8.rst:850
msgid ""
"Output over N lines (50 by default) is squeezed down to a button. N can be "
"changed in the PyShell section of the General page of the Settings dialog.  "
"Fewer, but possibly extra long, lines can be squeezed by right clicking on "
"the output.  Squeezed output can be expanded in place by double-clicking the "
"button or into the clipboard or a separate window by right-clicking the "
"button.  (Contributed by Tal Einat in :issue:`1529353`.)"
msgstr ""
"A saída em N linhas (50 por padrão) é compactada até um limite inferior. N "
"pode ser alterado na seção PyShell da página General da caixa de diálogo "
"Settings. Menos linhas, mas possivelmente extra longas, podem ser espremidas "
"clicando com o botão direito do mouse na saída. A saída compactada pode ser "
"expandida no local clicando duas vezes no botão ou na área de transferência "
"ou em uma janela separada clicando com o botão direito do mouse. "
"(Contribuição de Tal Einat em :issue:`1529353`.)"

#: ../../whatsnew/3.8.rst:857
msgid ""
"Add \"Run Customized\" to the Run menu to run a module with customized "
"settings. Any command line arguments entered are added to sys.argv. They "
"also re-appear in the box for the next customized run.  One can also "
"suppress the normal Shell main module restart.  (Contributed by Cheryl "
"Sabella, Terry Jan Reedy, and others in :issue:`5680` and :issue:`37627`.)"
msgstr ""
"Adiciona \"Run Customized\" ao menu Executar para executar um módulo com "
"configurações personalizadas. Quaisquer argumentos de linha de comando "
"inseridos são adicionados ao sys.argv. Eles também reaparecem na caixa para "
"a próxima execução personalizada. Pode-se também suprimir a reinicialização "
"normal do módulo principal do console. (Contribuição de Cheryl Sabella, "
"Terry Jan Reedy e outros em :issue:`5680` e :issue:`37627`.)"

#: ../../whatsnew/3.8.rst:863
msgid ""
"Added optional line numbers for IDLE editor windows. Windows open without "
"line numbers unless set otherwise in the General tab of the configuration "
"dialog.  Line numbers for an existing window are shown and hidden in the "
"Options menu. (Contributed by Tal Einat and Saimadhav Heblikar in :issue:"
"`17535`.)"
msgstr ""
"Adicionados números de linha opcionais para janelas do editor IDLE. O "
"Windows é aberto sem números de linha, a menos que definido de outra forma "
"na guia General da caixa de diálogo de configuração. Os números de linha de "
"uma janela existente são mostrados e ocultos no menu Opções. (Contribuição "
"de Tal Einat e Saimadhav Heblikar em :issue:`17535`.)"

#: ../../whatsnew/3.8.rst:869
msgid ""
"OS native encoding is now used for converting between Python strings and Tcl "
"objects. This allows IDLE to work with emoji and other non-BMP characters. "
"These characters can be displayed or copied and pasted to or from the "
"clipboard.  Converting strings from Tcl to Python and back now never fails. "
"(Many people worked on this for eight years but the problem was finally "
"solved by Serhiy Storchaka in :issue:`13153`.)"
msgstr ""
"A codificação nativa do sistema operacional agora é usada para converter "
"entre strings Python e objetos Tcl. Isso permite que o IDLE trabalhe com "
"emoji e outros caracteres não BMP. Esses caracteres podem ser exibidos ou "
"copiados e colados na ou da área de transferência. A conversão de strings de "
"Tcl para Python e de volta agora nunca falha. (Muitas pessoas trabalharam "
"nisso por oito anos, mas o problema foi finalmente resolvido por Serhiy "
"Storchaka em :issue:`13153`.)"

#: ../../whatsnew/3.8.rst:876
msgid "New in 3.8.1:"
msgstr "Novo em 3.8.1:"

#: ../../whatsnew/3.8.rst:878
msgid ""
"Add option to toggle cursor blink off.  (Contributed by Zackery Spytz in :"
"issue:`4603`.)"
msgstr ""
"Adiciona a opção para ativar e desativar o piscar do cursor. (Contribuição "
"de Zackery Spytz na :issue:`4603`.)"

#: ../../whatsnew/3.8.rst:881
msgid ""
"Escape key now closes IDLE completion windows.  (Contributed by Johnny "
"Najera in :issue:`38944`.)"
msgstr ""
"A tecla Escape agora fecha as janelas de conclusão IDLE. (Contribuição de "
"Johnny Najera em :issue:`38944`.)"

#: ../../whatsnew/3.8.rst:884
msgid "The changes above have been backported to 3.7 maintenance releases."
msgstr "As alterações acima foram suportadas para versões de manutenção 3.7."

#: ../../whatsnew/3.8.rst:886
msgid ""
"Add keywords to module name completion list.  (Contributed by Terry J. Reedy "
"in :issue:`37765`.)"
msgstr ""
"Adiciona argumentos nomeados à lista de completamento de nome de módulo. "
"(Contribuição de Terry J. Reedy em :issue:`37765`.)"

#: ../../whatsnew/3.8.rst:890
msgid "inspect"
msgstr "inspect"

#: ../../whatsnew/3.8.rst:892
msgid ""
"The :func:`inspect.getdoc` function can now find docstrings for "
"``__slots__`` if that attribute is a :class:`dict` where the values are "
"docstrings. This provides documentation options similar to what we already "
"have for :func:`property`, :func:`classmethod`, and :func:`staticmethod`::"
msgstr ""
"A função :func:`inspect.getdoc` agora pode encontrar docstrings para "
"``__slots__`` se esse atributo for :class:`dict` onde os valores são "
"docstrings. Isso fornece opções de documentação semelhantes às que já temos "
"para :func:`property`, :func:`classmethod` e :func:`staticmethod`::"

#: ../../whatsnew/3.8.rst:897
msgid ""
"class AudioClip:\n"
"    __slots__ = {'bit_rate': 'expressed in kilohertz to one decimal place',\n"
"                 'duration': 'in seconds, rounded up to an integer'}\n"
"    def __init__(self, bit_rate, duration):\n"
"        self.bit_rate = round(bit_rate / 1000.0, 1)\n"
"        self.duration = ceil(duration)"
msgstr ""

#: ../../whatsnew/3.8.rst:904
msgid "(Contributed by Raymond Hettinger in :issue:`36326`.)"
msgstr "(Contribuição de Raymond Hettinger em :issue:`36326`.)"

#: ../../whatsnew/3.8.rst:908
msgid "io"
msgstr "io"

#: ../../whatsnew/3.8.rst:910
msgid ""
"In development mode (:option:`-X` ``env``) and in :ref:`debug build <debug-"
"build>`, the :class:`io.IOBase` finalizer now logs the exception if the "
"``close()`` method fails. The exception is ignored silently by default in "
"release build. (Contributed by Victor Stinner in :issue:`18748`.)"
msgstr ""
"No modo de desenvolvimento (:option:`-X` ``env``) e na :ref:`compilação de "
"depuração <debug-build>`, o finalizador :class:`io.IOBase` agora registra a "
"exceção se o método ``close()`` falhar. A exceção é ignorada silenciosamente "
"por padrão na compilação de lançamento. (Contribuição de Victor Stinner em :"
"issue:`18748`.)"

#: ../../whatsnew/3.8.rst:917
msgid "itertools"
msgstr "itertools"

#: ../../whatsnew/3.8.rst:919
msgid ""
"The :func:`itertools.accumulate` function added an option *initial* keyword "
"argument to specify an initial value::"
msgstr ""
"A função :func:`itertools.accumulate` adicionou uma opção de argumento "
"nomeado *initial* para especificar um valor inicial::"

#: ../../whatsnew/3.8.rst:922
msgid ""
">>> from itertools import accumulate\n"
">>> list(accumulate([10, 5, 30, 15], initial=1000))\n"
"[1000, 1010, 1015, 1045, 1060]"
msgstr ""

#: ../../whatsnew/3.8.rst:926
msgid "(Contributed by Lisa Roach in :issue:`34659`.)"
msgstr "(Contribuído por Lisa Roach em :issue:`34659`.)"

#: ../../whatsnew/3.8.rst:930
msgid "json.tool"
msgstr "json.tool"

#: ../../whatsnew/3.8.rst:932
msgid ""
"Add option ``--json-lines`` to parse every input line as a separate JSON "
"object. (Contributed by Weipeng Hong in :issue:`31553`.)"
msgstr ""
"Adiciona a opção ``--json-lines`` para analisar cada linha de entrada como "
"um objeto JSON separado. (Contribuição de Weipeng Hong em :issue:`31553`.)"

#: ../../whatsnew/3.8.rst:937
msgid "logging"
msgstr "logging"

#: ../../whatsnew/3.8.rst:939
msgid ""
"Added a *force* keyword argument to :func:`logging.basicConfig` When set to "
"true, any existing handlers attached to the root logger are removed and "
"closed before carrying out the configuration specified by the other "
"arguments."
msgstr ""

#: ../../whatsnew/3.8.rst:944
msgid ""
"This solves a long-standing problem.  Once a logger or *basicConfig()* had "
"been called, subsequent calls to *basicConfig()* were silently ignored. This "
"made it difficult to update, experiment with, or teach the various logging "
"configuration options using the interactive prompt or a Jupyter notebook."
msgstr ""
"Isso resolve um problema de longa data. Depois que um logger ou "
"*basicConfig()* foi chamado, as chamadas subsequentes para *basicConfig()* "
"foram ignoradas silenciosamente. Isso dificultava a atualização, a "
"experimentação ou o ensino das várias opções de configuração de log usando o "
"prompt interativo ou um bloco de notas de Jupyter."

#: ../../whatsnew/3.8.rst:950
msgid ""
"(Suggested by Raymond Hettinger, implemented by Donghee Na, and reviewed by "
"Vinay Sajip in :issue:`33897`.)"
msgstr ""
"(Sugestão de Raymond Hettinger, implementação de Dong-hee Na e revisão de "
"Vinay Sajip em :issue:`33897`.)"

#: ../../whatsnew/3.8.rst:955
msgid "math"
msgstr "math"

#: ../../whatsnew/3.8.rst:957
msgid ""
"Added new function :func:`math.dist` for computing Euclidean distance "
"between two points.  (Contributed by Raymond Hettinger in :issue:`33089`.)"
msgstr ""
"Adicionada nova função :func:`math.dist` para calcular a distância "
"euclidiana entre dois pontos. (Contribuição de Raymond Hettinger em :issue:"
"`33089`.)"

#: ../../whatsnew/3.8.rst:960
msgid ""
"Expanded the :func:`math.hypot` function to handle multiple dimensions. "
"Formerly, it only supported the 2-D case. (Contributed by Raymond Hettinger "
"in :issue:`33089`.)"
msgstr ""
"Expandida a função :func:`math.hypot` para manipular várias dimensões. "
"Anteriormente, suportava apenas o caso 2-D. (Contribuição de Raymond "
"Hettinger em :issue:`33089`.)"

#: ../../whatsnew/3.8.rst:964
msgid ""
"Added new function, :func:`math.prod`, as analogous function to :func:`sum` "
"that returns the product of a 'start' value (default: 1) times an iterable "
"of numbers::"
msgstr ""
"Adicionada nova função, :func:`math.prod`, como função análoga a :func:`sum` "
"que retorna o produto de um valor 'start' (padrão: 1) vezes uma iterável de "
"números::"

#: ../../whatsnew/3.8.rst:968
msgid ""
">>> prior = 0.8\n"
">>> likelihoods = [0.625, 0.84, 0.30]\n"
">>> math.prod(likelihoods, start=prior)\n"
"0.126"
msgstr ""

#: ../../whatsnew/3.8.rst:973
msgid "(Contributed by Pablo Galindo in :issue:`35606`.)"
msgstr "(Contribuição de Pablo Galindo em :issue:`35606`.)"

#: ../../whatsnew/3.8.rst:975
msgid ""
"Added two new combinatoric functions :func:`math.perm` and :func:`math."
"comb`::"
msgstr ""
"Adicionadas duas novas funções combinatórias :func:`math.perm` e :func:`math."
"comb`::"

#: ../../whatsnew/3.8.rst:977
msgid ""
">>> math.perm(10, 3)    # Permutations of 10 things taken 3 at a time\n"
"720\n"
">>> math.comb(10, 3)    # Combinations of 10 things taken 3 at a time\n"
"120"
msgstr ""

#: ../../whatsnew/3.8.rst:982
msgid ""
"(Contributed by Yash Aggarwal, Keller Fuchs, Serhiy Storchaka, and Raymond "
"Hettinger in :issue:`37128`, :issue:`37178`, and :issue:`35431`.)"
msgstr ""
"(Contribuição de Yash Aggarwal, Keller Fuchs, Serhiy Storchaka e Raymond "
"Hettinger em :issue:`37128`, :issue:`37178` e :issue:`35431`.)"

#: ../../whatsnew/3.8.rst:985
msgid ""
"Added a new function :func:`math.isqrt` for computing accurate integer "
"square roots without conversion to floating point.  The new function "
"supports arbitrarily large integers.  It is faster than ``floor(sqrt(n))`` "
"but slower than :func:`math.sqrt`::"
msgstr ""
"Adicionada uma nova função :func:`math.isqrt` para calcular raízes quadradas "
"inteiras precisas sem conversão para ponto flutuante. A nova função suporta "
"números inteiros arbitrariamente grandes. É mais rápido que "
"``floor(sqrt(n))``, mas mais lento que :func:`math.sqrt`::"

#: ../../whatsnew/3.8.rst:990
msgid ""
">>> r = 650320427\n"
">>> s = r ** 2\n"
">>> isqrt(s - 1)         # correct\n"
"650320426\n"
">>> floor(sqrt(s - 1))   # incorrect\n"
"650320427"
msgstr ""

#: ../../whatsnew/3.8.rst:997
msgid "(Contributed by Mark Dickinson in :issue:`36887`.)"
msgstr "(Contribuição de Mark Dickinson em :issue:`36887`.)"

#: ../../whatsnew/3.8.rst:999
msgid ""
"The function :func:`math.factorial` no longer accepts arguments that are not "
"int-like. (Contributed by Pablo Galindo in :issue:`33083`.)"
msgstr ""
"A função :func:`math.factorial` não aceita mais argumentos que não são "
"parecidos com int. (Contribuição de Pablo Galindo em :issue:`33083`.)"

#: ../../whatsnew/3.8.rst:1004
msgid "mmap"
msgstr "mmap"

#: ../../whatsnew/3.8.rst:1006
msgid ""
"The :class:`mmap.mmap` class now has an :meth:`~mmap.mmap.madvise` method to "
"access the ``madvise()`` system call. (Contributed by Zackery Spytz in :"
"issue:`32941`.)"
msgstr ""
"A classe :class:`mmap.mmap` agora possui o método :meth:`~mmap.mmap.madvise` "
"para acessar a chamada do sistema ``madvise()``. (Contribuição de Zackery "
"Spytz em :issue:`32941`.)"

#: ../../whatsnew/3.8.rst:1012
msgid "multiprocessing"
msgstr "multiprocessing"

#: ../../whatsnew/3.8.rst:1014
msgid ""
"Added new :mod:`multiprocessing.shared_memory` module. (Contributed by Davin "
"Potts in :issue:`35813`.)"
msgstr ""
"Adicionado novo módulo :mod:`multiprocessing.shared_memory`. (Contribuição "
"de Davin Potts em :issue:`35813`.)"

#: ../../whatsnew/3.8.rst:1017
msgid ""
"On macOS, the *spawn* start method is now used by default. (Contributed by "
"Victor Stinner in :issue:`33725`.)"
msgstr ""
"No macOS, o método inicial *spawn* agora é usado por padrão. (Contribuição "
"de Victor Stinner em :issue:`33725`.)"

#: ../../whatsnew/3.8.rst:1022
msgid "os"
msgstr "os"

#: ../../whatsnew/3.8.rst:1024
msgid ""
"Added new function :func:`~os.add_dll_directory` on Windows for providing "
"additional search paths for native dependencies when importing extension "
"modules or loading DLLs using :mod:`ctypes`. (Contributed by Steve Dower in :"
"issue:`36085`.)"
msgstr ""
"Adicionada nova função :func:`~os.add_dll_directory` no Windows para "
"fornecer caminhos de pesquisa adicionais para dependências nativas ao "
"importar módulos de extensão ou carregar DLLs usando :mod:`ctypes`. "
"(Contribuição de Steve Dower em :issue:`36085`.)"

#: ../../whatsnew/3.8.rst:1029
msgid ""
"A new :func:`os.memfd_create` function was added to wrap the "
"``memfd_create()`` syscall. (Contributed by Zackery Spytz and Christian "
"Heimes in :issue:`26836`.)"
msgstr ""
"Uma nova função :func:`os.memfd_create` foi adicionada para envolver a "
"chamada de sistema ``memfd_create()``. (Contribuição de Zackery Spytz e "
"Christian Heimes em :issue:`26836`.)"

#: ../../whatsnew/3.8.rst:1033
msgid ""
"On Windows, much of the manual logic for handling reparse points (including "
"symlinks and directory junctions) has been delegated to the operating "
"system. Specifically, :func:`os.stat` will now traverse anything supported "
"by the operating system, while :func:`os.lstat` will only open reparse "
"points that identify as \"name surrogates\" while others are opened as for :"
"func:`os.stat`. In all cases, :attr:`stat_result.st_mode` will only have "
"``S_IFLNK`` set for symbolic links and not other kinds of reparse points. To "
"identify other kinds of reparse point, check the new :attr:`stat_result."
"st_reparse_tag` attribute."
msgstr ""
"No Windows, grande parte da lógica manual para manipular pontos de nova "
"análise (incluindo links simbólicos e junções de diretório) foi delegada ao "
"sistema operacional. Especificamente, :func:`os.stat` agora percorrerá "
"qualquer coisa suportada pelo sistema operacional, enquanto :func:`os.lstat` "
"abrirá apenas pontos de nova análise que se identificam como \"substitutos "
"de nome\" enquanto outros são abertos como :func:`os.stat`. Em todos os "
"casos, :attr:`stat_result.st_mode` terá apenas ``S_IFLNK`` definido para "
"links simbólicos e não para outros tipos de pontos de nova análise. Para "
"identificar outros tipos de pontos de nova análise, verifique o novo "
"atributo :attr:`stat_result.st_reparse_tag`."

#: ../../whatsnew/3.8.rst:1042
msgid ""
"On Windows, :func:`os.readlink` is now able to read directory junctions. "
"Note that :func:`~os.path.islink` will return ``False`` for directory "
"junctions, and so code that checks ``islink`` first will continue to treat "
"junctions as directories, while code that handles errors from :func:`os."
"readlink` may now treat junctions as links."
msgstr ""
"No Windows, :func:`os.readlink` agora pode ler junções de diretório. Observe "
"que :func:`~os.path.islink` retornará ``False`` para junções de diretório e, "
"portanto, o código que verifica primeiro ``islink`` continuará tratando "
"junções como diretórios, enquanto o código que lida com erros de :func:`os."
"readlink` agora pode tratar junções como links."

#: ../../whatsnew/3.8.rst:1048 ../../whatsnew/3.8.rst:1073
msgid "(Contributed by Steve Dower in :issue:`37834`.)"
msgstr "(Contribuição de Steve Dower em :issue:`37834`.)"

#: ../../whatsnew/3.8.rst:1052
msgid "os.path"
msgstr "os.path"

#: ../../whatsnew/3.8.rst:1054
msgid ""
":mod:`os.path` functions that return a boolean result like :func:`~os.path."
"exists`, :func:`~os.path.lexists`, :func:`~os.path.isdir`, :func:`~os.path."
"isfile`, :func:`~os.path.islink`, and :func:`~os.path.ismount` now return "
"``False`` instead of raising :exc:`ValueError` or its subclasses :exc:"
"`UnicodeEncodeError` and :exc:`UnicodeDecodeError` for paths that contain "
"characters or bytes unrepresentable at the OS level. (Contributed by Serhiy "
"Storchaka in :issue:`33721`.)"
msgstr ""
"Funções de :mod:`os.path` que retornam um resultado booleano como :func:`~os."
"path.exists`, :func:`~os.path.lexists`, :func:`~os.path.isdir`, :func:`~os."
"path.isfile`, :func:`~os.path.islink` e :func:`~os.path.ismount` agora "
"retornam ``False`` em vez de levantar :exc:`ValueError` ou suas subclasses :"
"exc:`UnicodeEncodeError` e :exc:`UnicodeDecodeError` para caminhos que "
"contêm caracteres ou bytes não representáveis no nível do SO. (Contribuição "
"de Serhiy Storchaka em :issue:`33721`.)"

#: ../../whatsnew/3.8.rst:1062 ../../whatsnew/3.8.rst:1965
msgid ""
":func:`~os.path.expanduser` on Windows now prefers the :envvar:`USERPROFILE` "
"environment variable and does not use :envvar:`HOME`, which is not normally "
"set for regular user accounts. (Contributed by Anthony Sottile in :issue:"
"`36264`.)"
msgstr ""
":func:`~os.path.expanduser` no Windows agora prefere a variável de ambiente :"
"envvar:`USERPROFILE` e não usa :envvar:`HOME`, que normalmente não é "
"definido para contas de usuário comuns. (Contribuição de Anthony Sottile em :"
"issue:`36264`.)"

#: ../../whatsnew/3.8.rst:1067
msgid ""
":func:`~os.path.isdir` on Windows no longer returns ``True`` for a link to a "
"non-existent directory."
msgstr ""
":func:`~os.path.isdir` no Windows não retorna mais ``True`` para um link "
"para um diretório inexistente."

#: ../../whatsnew/3.8.rst:1070
msgid ""
":func:`~os.path.realpath` on Windows now resolves reparse points, including "
"symlinks and directory junctions."
msgstr ""
":func:`~os.path.realpath` no Windows agora resolve pontos de nova análise, "
"incluindo links simbólicos e junções de diretório."

#: ../../whatsnew/3.8.rst:1077
msgid "pathlib"
msgstr "pathlib"

#: ../../whatsnew/3.8.rst:1079
msgid ""
":mod:`pathlib.Path` methods that return a boolean result like :meth:"
"`~pathlib.Path.exists`, :meth:`~pathlib.Path.is_dir`, :meth:`~pathlib.Path."
"is_file`, :meth:`~pathlib.Path.is_mount`, :meth:`~pathlib.Path.is_symlink`, :"
"meth:`~pathlib.Path.is_block_device`, :meth:`~pathlib.Path.is_char_device`, :"
"meth:`~pathlib.Path.is_fifo`, :meth:`~pathlib.Path.is_socket` now return "
"``False`` instead of raising :exc:`ValueError` or its subclass :exc:"
"`UnicodeEncodeError` for paths that contain characters unrepresentable at "
"the OS level. (Contributed by Serhiy Storchaka in :issue:`33721`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1089
msgid ""
"Added :meth:`!pathlib.Path.link_to` which creates a hard link pointing to a "
"path. (Contributed by Joannah Nanjekye in :issue:`26978`) Note that "
"``link_to`` was deprecated in 3.10 and removed in 3.12 in favor of a "
"``hardlink_to`` method added in 3.10 which matches the semantics of the "
"existing ``symlink_to`` method."
msgstr ""

#: ../../whatsnew/3.8.rst:1098
msgid "pickle"
msgstr "pickle"

#: ../../whatsnew/3.8.rst:1100
msgid ""
":mod:`pickle` extensions subclassing the C-optimized :class:`~pickle."
"Pickler` can now override the pickling logic of functions and classes by "
"defining the special :meth:`~pickle.Pickler.reducer_override` method. "
"(Contributed by Pierre Glaser and Olivier Grisel in :issue:`35900`.)"
msgstr ""
"Extensões de :mod:`pickle`, que atuem como subclasse da classe otimizada "
"para C :class:`~pickle.Pickler`, agora podem substituir a lógica de "
"\"pickling\" de funções e classes definindo o método especial :meth:`~pickle."
"Pickler.reducer_override`. (Contribuição de Pierre Glaser e Olivier Grisel "
"em :issue:`35900`.)"

#: ../../whatsnew/3.8.rst:1107
msgid "plistlib"
msgstr "plistlib"

#: ../../whatsnew/3.8.rst:1109
msgid ""
"Added new :class:`plistlib.UID` and enabled support for reading and writing "
"NSKeyedArchiver-encoded binary plists. (Contributed by Jon Janzen in :issue:"
"`26707`.)"
msgstr ""
"Adicionado novo :class:`plistlib.UID` e habilitado suporte para leitura e "
"escrita de plists binárias codificadas em NSKeyedArchiver. (Contribuição de "
"Jon Janzen em :issue:`26707`.)"

#: ../../whatsnew/3.8.rst:1115
msgid "pprint"
msgstr "pprint"

#: ../../whatsnew/3.8.rst:1117
msgid ""
"The :mod:`pprint` module added a *sort_dicts* parameter to several "
"functions. By default, those functions continue to sort dictionaries before "
"rendering or printing.  However, if *sort_dicts* is set to false, the "
"dictionaries retain the order that keys were inserted.  This can be useful "
"for comparison to JSON inputs during debugging."
msgstr ""
"O módulo :mod:`pprint` adicionou um parâmetro *sort_dicts* a várias funções. "
"Por padrão, essas funções continuam a classificar dicionários antes da "
"renderização ou impressão. No entanto, se *sort_dicts* estiver definido como "
"false, os dicionários manterão a ordem em que as chaves foram inseridas. "
"Isso pode ser útil para comparação com entradas JSON durante a depuração."

#: ../../whatsnew/3.8.rst:1123
msgid ""
"In addition, there is a convenience new function, :func:`pprint.pp` that is "
"like :func:`pprint.pprint` but with *sort_dicts* defaulting to ``False``::"
msgstr ""
"Além disso, existe uma nova função de conveniência, :func:`pprint.pp`, que é "
"como :func:`pprint.pprint`, mas com *sort_dicts* padronizando como "
"``False``::"

#: ../../whatsnew/3.8.rst:1126
msgid ""
">>> from pprint import pprint, pp\n"
">>> d = dict(source='input.txt', operation='filter', destination='output."
"txt')\n"
">>> pp(d, width=40)                  # Original order\n"
"{'source': 'input.txt',\n"
" 'operation': 'filter',\n"
" 'destination': 'output.txt'}\n"
">>> pprint(d, width=40)              # Keys sorted alphabetically\n"
"{'destination': 'output.txt',\n"
" 'operation': 'filter',\n"
" 'source': 'input.txt'}"
msgstr ""

#: ../../whatsnew/3.8.rst:1137
msgid "(Contributed by Rémi Lapeyre in :issue:`30670`.)"
msgstr "(Contribuição de Rémi Lapeyre em :issue:`30670`.)"

#: ../../whatsnew/3.8.rst:1141
msgid "py_compile"
msgstr "py_compile"

#: ../../whatsnew/3.8.rst:1143
msgid ""
":func:`py_compile.compile` now supports silent mode. (Contributed by Joannah "
"Nanjekye in :issue:`22640`.)"
msgstr ""
":func:`py_compile.compile` agora possui suporte a um modo silencioso. "
"(Contribuição de Joannah Nanjekye em :issue:`22640`.)"

#: ../../whatsnew/3.8.rst:1148
msgid "shlex"
msgstr "shlex"

#: ../../whatsnew/3.8.rst:1150
msgid ""
"The new :func:`shlex.join` function acts as the inverse of :func:`shlex."
"split`. (Contributed by Bo Bayles in :issue:`32102`.)"
msgstr ""
"A nova função :func:`shlex.join` atua como o inverso da :func:`shlex.split`. "
"(Contribuição de Bo Bayles em :issue:`32102`.)"

#: ../../whatsnew/3.8.rst:1155
msgid "shutil"
msgstr "shutil"

#: ../../whatsnew/3.8.rst:1157
msgid ""
":func:`shutil.copytree` now accepts a new ``dirs_exist_ok`` keyword "
"argument. (Contributed by Josh Bronson in :issue:`20849`.)"
msgstr ""
":func:`shutil.copytree` agora aceita um novo argumento nomeado "
"``dirs_exist_ok``. (Contribuição de Josh Bronson em :issue:`20849`.)"

#: ../../whatsnew/3.8.rst:1160
msgid ""
":func:`shutil.make_archive` now defaults to the modern pax (POSIX.1-2001) "
"format for new archives to improve portability and standards conformance, "
"inherited from the corresponding change to the :mod:`tarfile` module. "
"(Contributed by C.A.M. Gerlach in :issue:`30661`.)"
msgstr ""
":func:`shutil.make_archive` agora tem como pádrão o formato pax moderno "
"(POSIX.1-2001) de novos arquivos para melhorar a portabilidade e a "
"conformidade com os padrões, herdados da alteração correspondente no módulo :"
"mod:`tarfile`. (Contribuição de C.A.M. Gerlach em :issue:`30661`.)"

#: ../../whatsnew/3.8.rst:1165
msgid ""
":func:`shutil.rmtree` on Windows now removes directory junctions without "
"recursively removing their contents first. (Contributed by Steve Dower in :"
"issue:`37834`.)"
msgstr ""
":func:`shutil.rmtree` no Windows agora remove junções de diretórios sem "
"remover recursivamente o conteúdo primeiro. (Contribuição de Steve Dower em :"
"issue:`37834`.)"

#: ../../whatsnew/3.8.rst:1171
msgid "socket"
msgstr "socket"

#: ../../whatsnew/3.8.rst:1173
msgid ""
"Added :meth:`~socket.create_server` and :meth:`~socket.has_dualstack_ipv6` "
"convenience functions to automate the necessary tasks usually involved when "
"creating a server socket, including accepting both IPv4 and IPv6 connections "
"on the same socket.  (Contributed by Giampaolo Rodolà in :issue:`17561`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1178
msgid ""
"The :func:`socket.if_nameindex`, :func:`socket.if_nametoindex`, and :func:"
"`socket.if_indextoname` functions have been implemented on Windows. "
"(Contributed by Zackery Spytz in :issue:`37007`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1184
msgid "ssl"
msgstr "ssl"

#: ../../whatsnew/3.8.rst:1186
msgid ""
"Added :attr:`~ssl.SSLContext.post_handshake_auth` to enable and :meth:`~ssl."
"SSLSocket.verify_client_post_handshake` to initiate TLS 1.3 post-handshake "
"authentication. (Contributed by Christian Heimes in :issue:`34670`.)"
msgstr ""
"Adicionado :attr:`~ssl.SSLContext.post_handshake_auth` para ativar e :meth:"
"`~ssl.SSLSocket.verify_client_post_handshake` para iniciar a autenticação "
"pós-handshake do TLS 1.3. (Contribuição de Christian Heimes em :issue:"
"`34670`.)"

#: ../../whatsnew/3.8.rst:1193
msgid "statistics"
msgstr "statistics"

#: ../../whatsnew/3.8.rst:1195
msgid ""
"Added :func:`statistics.fmean` as a faster, floating-point variant of :func:"
"`statistics.mean`.  (Contributed by Raymond Hettinger and Steven D'Aprano "
"in :issue:`35904`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1199
msgid ""
"Added :func:`statistics.geometric_mean` (Contributed by Raymond Hettinger "
"in :issue:`27181`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1202
msgid ""
"Added :func:`statistics.multimode` that returns a list of the most common "
"values. (Contributed by Raymond Hettinger in :issue:`35892`.)"
msgstr ""
"Adicionada :func:`Statistics.multimode` que retorna uma lista dos valores "
"mais comuns. (Contribuição de Raymond Hettinger em :issue:`35892`.)"

#: ../../whatsnew/3.8.rst:1205
msgid ""
"Added :func:`statistics.quantiles` that divides data or a distribution in to "
"equiprobable intervals (e.g. quartiles, deciles, or percentiles). "
"(Contributed by Raymond Hettinger in :issue:`36546`.)"
msgstr ""
"Adicionada :func:`statistics.quantiles` que divide dados ou uma distribuição "
"em intervalos equivalentes (por exemplo, quartis, decis ou percentis). "
"(Contribuição de Raymond Hettinger em :issue:`36546`.)"

#: ../../whatsnew/3.8.rst:1209
msgid ""
"Added :class:`statistics.NormalDist`, a tool for creating and manipulating "
"normal distributions of a random variable. (Contributed by Raymond Hettinger "
"in :issue:`36018`.)"
msgstr ""
"Adicionada :class:`statistics.NormalDist`, uma ferramenta para criar e "
"manipular distribuições normais de uma variável aleatória. (Contribuição de "
"Raymond Hettinger em :issue:`36018`.)"

#: ../../whatsnew/3.8.rst:1215
msgid ""
">>> temperature_feb = NormalDist.from_samples([4, 12, -3, 2, 7, 14])\n"
">>> temperature_feb.mean\n"
"6.0\n"
">>> temperature_feb.stdev\n"
"6.356099432828281\n"
"\n"
">>> temperature_feb.cdf(3)            # Chance of being under 3 degrees\n"
"0.3184678262814532\n"
">>> # Relative chance of being 7 degrees versus 10 degrees\n"
">>> temperature_feb.pdf(7) / temperature_feb.pdf(10)\n"
"1.2039930378537762\n"
"\n"
">>> el_niño = NormalDist(4, 2.5)\n"
">>> temperature_feb += el_niño        # Add in a climate effect\n"
">>> temperature_feb\n"
"NormalDist(mu=10.0, sigma=6.830080526611674)\n"
"\n"
">>> temperature_feb * (9/5) + 32      # Convert to Fahrenheit\n"
"NormalDist(mu=50.0, sigma=12.294144947901014)\n"
">>> temperature_feb.samples(3)        # Generate random samples\n"
"[7.672102882379219, 12.000027119750287, 4.647488369766392]"
msgstr ""

#: ../../whatsnew/3.8.rst:1239
msgid "sys"
msgstr "sys"

#: ../../whatsnew/3.8.rst:1241
msgid ""
"Add new :func:`sys.unraisablehook` function which can be overridden to "
"control how \"unraisable exceptions\" are handled. It is called when an "
"exception has occurred but there is no way for Python to handle it. For "
"example, when a destructor raises an exception or during garbage collection "
"(:func:`gc.collect`). (Contributed by Victor Stinner in :issue:`36829`.)"
msgstr ""
"Adiciona uma nova função :func:`sys.unraisablehook`, que pode ser "
"substituída para controlar como as \"exceções não passíveis de "
"levantamento\" são tratadas. É chamada quando uma exceção ocorre, mas não há "
"como o Python manipulá-la. Por exemplo, quando um destruidor gera uma "
"exceção ou durante a coleta de lixo (:func:`gc.collect`). (Contribuição de "
"Victor Stinner em :issue:`36829`.)"

#: ../../whatsnew/3.8.rst:1250 ../../whatsnew/3.8.rst:2350
msgid "tarfile"
msgstr "tarfile"

#: ../../whatsnew/3.8.rst:1252
msgid ""
"The :mod:`tarfile` module now defaults to the modern pax (POSIX.1-2001) "
"format for new archives, instead of the previous GNU-specific one. This "
"improves cross-platform portability with a consistent encoding (UTF-8) in a "
"standardized and extensible format, and offers several other benefits. "
"(Contributed by C.A.M. Gerlach in :issue:`36268`.)"
msgstr ""
"O módulo :mod:`tarfile` agora tem como padrão o formato pax moderno "
"(POSIX.1-2001) para novos arquivos, em vez do anterior específico do GNU. "
"Isso melhora a portabilidade de plataforma cruzada com uma codificação "
"consistente (UTF-8) em um formato padronizado e extensível e oferece vários "
"outros benefícios. (Contribuição de C.A.M. Gerlach em :issue:`36268`.)"

#: ../../whatsnew/3.8.rst:1260
msgid "threading"
msgstr "threading"

#: ../../whatsnew/3.8.rst:1262
msgid ""
"Add a new :func:`threading.excepthook` function which handles uncaught :meth:"
"`threading.Thread.run` exception. It can be overridden to control how "
"uncaught :meth:`threading.Thread.run` exceptions are handled. (Contributed "
"by Victor Stinner in :issue:`1230540`.)"
msgstr ""
"Adiciona uma nova função :func:`threading.excepthook` que manipula a exceção "
"não capturada :meth:`threading.Thread.run`. Pode ser substituída para "
"controlar como exceções não capturadas :meth:`threading.Thread.run` são "
"manipuladas. (Contribuição de Victor Stinner em :issue:`1230540`.)"

#: ../../whatsnew/3.8.rst:1267
msgid ""
"Add a new :func:`threading.get_native_id` function and a :data:`~threading."
"Thread.native_id` attribute to the :class:`threading.Thread` class. These "
"return the native integral Thread ID of the current thread assigned by the "
"kernel. This feature is only available on certain platforms, see :func:"
"`get_native_id <threading.get_native_id>` for more information. (Contributed "
"by Jake Tesler in :issue:`36084`.)"
msgstr ""
"Adiciona uma nova função :func:`threading.get_native_id` e um atributo :data:"
"`~threading.Thread.native_id` à classe :class:`threading.Thread`. Eles "
"retornam o Thread ID integral nativo do thread atual atribuído pelo kernel. "
"Este recurso está disponível apenas em determinadas plataformas, consulte :"
"func:`get_native_id <threading.get_native_id>` para mais informações. "
"(Contribuição de Jake Tesler em :issue:`36084`.)"

#: ../../whatsnew/3.8.rst:1277
msgid "tokenize"
msgstr "tokenize"

#: ../../whatsnew/3.8.rst:1279
msgid ""
"The :mod:`tokenize` module now implicitly emits a ``NEWLINE`` token when "
"provided with input that does not have a trailing new line.  This behavior "
"now matches what the C tokenizer does internally. (Contributed by Ammar "
"Askar in :issue:`33899`.)"
msgstr ""
"O módulo :mod:`tokenize` agora emite implicitamente um token ``NEWLINE`` "
"quando fornecido com entrada que não possui uma nova linha à direita. Esse "
"comportamento agora corresponde ao que o tokenizador do C faz internamente. "
"(Contribuição de Ammar Askar em :issue:`33899`.)"

#: ../../whatsnew/3.8.rst:1286
msgid "tkinter"
msgstr "tkinter"

#: ../../whatsnew/3.8.rst:1288
msgid ""
"Added methods :meth:`~tkinter.Spinbox.selection_from`, :meth:`~tkinter."
"Spinbox.selection_present`, :meth:`~tkinter.Spinbox.selection_range` and :"
"meth:`~tkinter.Spinbox.selection_to` in the :class:`tkinter.Spinbox` class. "
"(Contributed by Juliette Monsel in :issue:`34829`.)"
msgstr ""
"Adicionados os métodos :meth:`~tkinter.Spinbox.selection_from`, :meth:"
"`~tkinter.Spinbox.selection_present`, :meth:`~tkinter.Spinbox."
"selection_range` e :meth:`~tkinter.Spinbox.selection_to` à classe :class:"
"`tkinter.Spinbox`. (Contribuição de Juliette Monsel em :issue:`34829`.)"

#: ../../whatsnew/3.8.rst:1295
msgid ""
"Added method :meth:`~tkinter.Canvas.moveto` in the :class:`tkinter.Canvas` "
"class. (Contributed by Juliette Monsel in :issue:`23831`.)"
msgstr ""
"Adicionado o método :meth:`~tkinter.Canvas.moveto` na classe :class:`tkinter."
"Canvas`. (Contribuição de Juliette Monsel em :issue:`23831`.)"

#: ../../whatsnew/3.8.rst:1299
msgid ""
"The :class:`tkinter.PhotoImage` class now has :meth:`~tkinter.PhotoImage."
"transparency_get` and :meth:`~tkinter.PhotoImage.transparency_set` methods.  "
"(Contributed by Zackery Spytz in :issue:`25451`.)"
msgstr ""
"A classe :class:`tkinter.PhotoImage` agore tem os métodos :meth:`~tkinter."
"PhotoImage.transparency_get` e :meth:`~tkinter.PhotoImage.transparency_set`. "
"(Contribuição de Zackery Spytz em :issue:`25451`.)"

#: ../../whatsnew/3.8.rst:1306
msgid "time"
msgstr "time"

#: ../../whatsnew/3.8.rst:1308
msgid ""
"Added new clock :const:`~time.CLOCK_UPTIME_RAW` for macOS 10.12. "
"(Contributed by Joannah Nanjekye in :issue:`35702`.)"
msgstr ""
"Adiciona o novo relógio :const:`~time.CLOCK_UPTIME_RAW` ao macOS 10.12. "
"(Contribuição de Joannah Nanjekye em :issue:`35702`.)"

#: ../../whatsnew/3.8.rst:1313
msgid "typing"
msgstr "typing"

#: ../../whatsnew/3.8.rst:1315
msgid "The :mod:`typing` module incorporates several new features:"
msgstr "O módulo :mod:`typing` incorpora vários novos recursos:"

#: ../../whatsnew/3.8.rst:1317
msgid ""
"A dictionary type with per-key types.  See :pep:`589` and :class:`typing."
"TypedDict`. TypedDict uses only string keys.  By default, every key is "
"required to be present. Specify \"total=False\" to allow keys to be "
"optional::"
msgstr ""
"Um tipo de dicionário com tipos por chave. Veja :pep:`589` e :class:`typing."
"TypedDict`. TypedDict usa apenas chaves de strings. Por padrão, é necessário "
"que todas as chaves estejam presentes. Especifique \"total=False\" para "
"permitir que as chaves sejam opcionais::"

#: ../../whatsnew/3.8.rst:1322
msgid ""
"class Location(TypedDict, total=False):\n"
"    lat_long: tuple\n"
"    grid_square: str\n"
"    xy_coordinate: tuple"
msgstr ""

#: ../../whatsnew/3.8.rst:1327
msgid ""
"Literal types.  See :pep:`586` and :class:`typing.Literal`. Literal types "
"indicate that a parameter or return value is constrained to one or more "
"specific literal values::"
msgstr ""
"Tipos literais. Veja :pep:`586` e :class:`typing.Literal`. Tipos literais "
"indicam que um parâmetro ou valor de retorno está restrito a um ou mais "
"valores literais específicos::"

#: ../../whatsnew/3.8.rst:1331
msgid ""
"def get_status(port: int) -> Literal['connected', 'disconnected']:\n"
"    ..."
msgstr ""

#: ../../whatsnew/3.8.rst:1334
msgid ""
"\"Final\" variables, functions, methods and classes.  See :pep:`591`, :class:"
"`typing.Final` and :func:`typing.final`. The final qualifier instructs a "
"static type checker to restrict subclassing, overriding, or reassignment::"
msgstr ""
"Variáveis, funções, métodos e classes \"finais\". Veja :pep:`591`, :class:"
"`typing.Final` e :func:`typing.final`. O qualificador final instrui um "
"verificador de tipo estático a restringir criação de subclasse, substituição "
"ou reatribuição::"

#: ../../whatsnew/3.8.rst:1339
msgid "pi: Final[float] = 3.1415926536"
msgstr ""

#: ../../whatsnew/3.8.rst:1341
msgid ""
"Protocol definitions.  See :pep:`544`, :class:`typing.Protocol` and :func:"
"`typing.runtime_checkable`.  Simple ABCs like :class:`typing.SupportsInt` "
"are now ``Protocol`` subclasses."
msgstr ""
"Definições de protocolo. Veja :pep:`544`, :class:`typing.Protocol` e :func:"
"`typing.runtime_checkable`. ABCs simples como :class:`typing.SupportsInt` "
"agora são subclasses de ``Protocol``."

#: ../../whatsnew/3.8.rst:1345
msgid "New protocol class :class:`typing.SupportsIndex`."
msgstr "Nova classe de protocolo :class:`typing.SupportsIndex`."

#: ../../whatsnew/3.8.rst:1347
msgid "New functions :func:`typing.get_origin` and :func:`typing.get_args`."
msgstr "Novas funções :func:`typing.get_origin` e :func:`typing.get_args`."

#: ../../whatsnew/3.8.rst:1351
msgid "unicodedata"
msgstr "unicodedata"

#: ../../whatsnew/3.8.rst:1353
msgid ""
"The :mod:`unicodedata` module has been upgraded to use the `Unicode 12.1.0 "
"<https://blog.unicode.org/2019/05/unicode-12-1-en.html>`_ release."
msgstr ""
"O módulo :mod:`unicodedata` agora foi atualizado para usar o `Unicode 12.1.0 "
"<https://blog.unicode.org/2019/05/unicode-12-1-en.html>`_."

#: ../../whatsnew/3.8.rst:1356
msgid ""
"New function :func:`~unicodedata.is_normalized` can be used to verify a "
"string is in a specific normal form, often much faster than by actually "
"normalizing the string.  (Contributed by Max Belanger, David Euresti, and "
"Greg Price in :issue:`32285` and :issue:`37966`)."
msgstr ""
"A nova função :func:`~unicodedata.is_normalized` pode ser usada para "
"verificar se uma string está em uma forma normal específica, geralmente "
"muito mais rápida do que normalizar a string. (Contribuição de Max Belanger, "
"David Euresti e Greg Price em :issue:`32285` e :issue:`37966`)."

#: ../../whatsnew/3.8.rst:1363
msgid "unittest"
msgstr "unittest"

#: ../../whatsnew/3.8.rst:1365
msgid ""
"Added :class:`~unittest.mock.AsyncMock` to support an asynchronous version "
"of :class:`~unittest.mock.Mock`.  Appropriate new assert functions for "
"testing have been added as well. (Contributed by Lisa Roach in :issue:"
"`26467`)."
msgstr ""
"Adicionada :class:`~unittest.mock.AsyncMock` para dar suporte a uma versão "
"assíncrona de :class:`~unittest.mock.Mock`. Também foram adicionadas novas "
"funções apropriadas para teste. (Contribuição de Lisa Roach em :issue:"
"`26467`)."

#: ../../whatsnew/3.8.rst:1370
msgid ""
"Added :func:`~unittest.addModuleCleanup` and :meth:`~unittest.TestCase."
"addClassCleanup` to unittest to support cleanups for :func:`~unittest."
"setUpModule` and :meth:`~unittest.TestCase.setUpClass`. (Contributed by Lisa "
"Roach in :issue:`24412`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1376
msgid ""
"Several mock assert functions now also print a list of actual calls upon "
"failure. (Contributed by Petter Strandmark in :issue:`35047`.)"
msgstr ""
"Várias funções de declaração de mock agora também exibem uma lista de "
"chamadas reais em caso de falha. (Contribuição de Petter Strandmark em :"
"issue:`35047`.)"

#: ../../whatsnew/3.8.rst:1379
msgid ""
":mod:`unittest` module gained support for coroutines to be used as test "
"cases with :class:`unittest.IsolatedAsyncioTestCase`. (Contributed by Andrew "
"Svetlov in :issue:`32972`.)"
msgstr ""
"O módulo :mod:`unittest` ganhou suporte a corrotinas a serem usadas como "
"casos de teste com :class:`unittest.IsolatedAsyncioTestCase`. (Contribuição "
"de Andrew Svetlov em :issue:`32972`.)"

#: ../../whatsnew/3.8.rst:1383
msgid "Example::"
msgstr "Exemplo::"

#: ../../whatsnew/3.8.rst:1385
msgid ""
"import unittest\n"
"\n"
"\n"
"class TestRequest(unittest.IsolatedAsyncioTestCase):\n"
"\n"
"    async def asyncSetUp(self):\n"
"        self.connection = await AsyncConnection()\n"
"\n"
"    async def test_get(self):\n"
"        response = await self.connection.get(\"https://example.com\")\n"
"        self.assertEqual(response.status_code, 200)\n"
"\n"
"    async def asyncTearDown(self):\n"
"        await self.connection.close()\n"
"\n"
"\n"
"if __name__ == \"__main__\":\n"
"    unittest.main()"
msgstr ""

#: ../../whatsnew/3.8.rst:1406
msgid "venv"
msgstr "venv"

#: ../../whatsnew/3.8.rst:1408
msgid ""
":mod:`venv` now includes an ``Activate.ps1`` script on all platforms for "
"activating virtual environments under PowerShell Core 6.1. (Contributed by "
"Brett Cannon in :issue:`32718`.)"
msgstr ""
":mod:`venv` agora inclui um script ``Activate.ps1`` em todas as plataformas "
"para ativar ambientes virtuais no PowerShell Core 6.1. (Contribuição de "
"Brett Cannon em :issue:`32718`.)"

#: ../../whatsnew/3.8.rst:1414
msgid "weakref"
msgstr "weakref"

#: ../../whatsnew/3.8.rst:1416
msgid ""
"The proxy objects returned by :func:`weakref.proxy` now support the matrix "
"multiplication operators ``@`` and ``@=`` in addition to the other numeric "
"operators. (Contributed by Mark Dickinson in :issue:`36669`.)"
msgstr ""
"Os objetos proxy retornados por :func:`weakref.proxy` agora possuem suporte "
"aos operadores de multiplicação de matrizes ``@`` e ``@=`` além dos outros "
"operadores numéricos. (Contribuição de Mark Dickinson em :issue:`36669`.)"

#: ../../whatsnew/3.8.rst:1422
msgid "xml"
msgstr "xml"

#: ../../whatsnew/3.8.rst:1424
msgid ""
"As mitigation against DTD and external entity retrieval, the :mod:`xml.dom."
"minidom` and :mod:`xml.sax` modules no longer process external entities by "
"default. (Contributed by Christian Heimes in :issue:`17239`.)"
msgstr ""
"Como atenuação a DTD e recuperação de entidade externa, os módulos :mod:`xml."
"dom.minidom` e :mod:`xml.sax` não processam mais entidades externas por "
"padrão. (Contribuição de Christian Heimes em :issue:`17239`.)"

#: ../../whatsnew/3.8.rst:1429
msgid ""
"The ``.find*()`` methods in the :mod:`xml.etree.ElementTree` module support "
"wildcard searches like ``{*}tag`` which ignores the namespace and "
"``{namespace}*`` which returns all tags in the given namespace. (Contributed "
"by Stefan Behnel in :issue:`28238`.)"
msgstr ""
"Os métodos ``.find*()`` no módulo :mod:`xml.etree.ElementTree` possuem "
"suporte a pesquisas curinga como ``{*}tag``, que ignora o espaço para nome e "
"``{namespace}*``, que retorna todas as tags no espaço para nome "
"especificado. (Contribuição de Stefan Behnel em :issue:`28238`.)"

#: ../../whatsnew/3.8.rst:1434
msgid ""
"The :mod:`xml.etree.ElementTree` module provides a new function :func:`–xml."
"etree.ElementTree.canonicalize` that implements C14N 2.0. (Contributed by "
"Stefan Behnel in :issue:`13611`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1438
msgid ""
"The target object of :class:`xml.etree.ElementTree.XMLParser` can receive "
"namespace declaration events through the new callback methods ``start_ns()`` "
"and ``end_ns()``.  Additionally, the :class:`xml.etree.ElementTree."
"TreeBuilder` target can be configured to process events about comments and "
"processing instructions to include them in the generated tree. (Contributed "
"by Stefan Behnel in :issue:`36676` and :issue:`36673`.)"
msgstr ""
"O objeto de destino de :class:`xml.etree.ElementTree.XMLParser` pode receber "
"eventos de declaração de espaço de nomes através dos novos métodos de "
"retorno de chamada ``start_ns()`` e ``end_ns ()``. Além disso, o destino :"
"class:`xml.etree.ElementTree.TreeBuilder` pode ser configurado para "
"processar eventos sobre comentários e instruções de processamento para "
"incluí-los na árvore gerada. (Contribuição de Stefan Behnel em :issue:"
"`36676` e :issue:`36673`.)"

#: ../../whatsnew/3.8.rst:1448
msgid "xmlrpc"
msgstr "xmlrpc"

#: ../../whatsnew/3.8.rst:1450
msgid ""
":class:`xmlrpc.client.ServerProxy` now supports an optional *headers* "
"keyword argument for a sequence of HTTP headers to be sent with each "
"request.  Among other things, this makes it possible to upgrade from default "
"basic authentication to faster session authentication. (Contributed by "
"Cédric Krier in :issue:`35153`.)"
msgstr ""
":class:`xmlrpc.client.ServerProxy` agora possui suporte a um argumento "
"nomeado *headers* opcional para que uma sequência de cabeçalhos HTTP seja "
"enviada a cada solicitação. Entre outras coisas, isso possibilita a "
"atualização da autenticação básica padrão para uma autenticação de sessão "
"mais rápida. (Contribuição de Cédric Krier em :issue:`35153`.)"

#: ../../whatsnew/3.8.rst:1458
msgid "Optimizations"
msgstr "Otimizações"

#: ../../whatsnew/3.8.rst:1460
msgid ""
"The :mod:`subprocess` module can now use the :func:`os.posix_spawn` function "
"in some cases for better performance. Currently, it is only used on macOS "
"and Linux (using glibc 2.24 or newer) if all these conditions are met:"
msgstr ""
"O módulo :mod:`subprocess` agora pode usar a função :func:`os.posix_spawn` "
"em alguns casos para obter melhor desempenho. Atualmente, ele é usado apenas "
"no macOS e Linux (usando glibc 2.24 ou mais recente) se todas essas "
"condições forem atendidas:"

#: ../../whatsnew/3.8.rst:1464
msgid "*close_fds* is false;"
msgstr "*close_fds* ser false;"

#: ../../whatsnew/3.8.rst:1465
msgid ""
"*preexec_fn*, *pass_fds*, *cwd* and *start_new_session* parameters are not "
"set;"
msgstr ""
"os parâmetros *preexec_fn*, *pass_fds*, *cwd* and *start_new_session* não "
"estarem definidos;"

#: ../../whatsnew/3.8.rst:1467
msgid "the *executable* path contains a directory."
msgstr "o caminho *executable* conter um diretório."

#: ../../whatsnew/3.8.rst:1469
msgid "(Contributed by Joannah Nanjekye and Victor Stinner in :issue:`35537`.)"
msgstr "(Contribuição de Joannah Nanjekye e Victor Stinner em :issue:`35537`.)"

#: ../../whatsnew/3.8.rst:1471
msgid ""
":func:`shutil.copyfile`, :func:`shutil.copy`, :func:`shutil.copy2`, :func:"
"`shutil.copytree` and :func:`shutil.move` use platform-specific \"fast-"
"copy\" syscalls on Linux and macOS in order to copy the file more "
"efficiently. \"fast-copy\" means that the copying operation occurs within "
"the kernel, avoiding the use of userspace buffers in Python as in \"``outfd."
"write(infd.read())``\". On Windows :func:`shutil.copyfile` uses a bigger "
"default buffer size (1 MiB instead of 16 KiB) and a :func:`memoryview`-based "
"variant of :func:`shutil.copyfileobj` is used. The speedup for copying a 512 "
"MiB file within the same partition is about +26% on Linux, +50% on macOS and "
"+40% on Windows. Also, much less CPU cycles are consumed. See :ref:`shutil-"
"platform-dependent-efficient-copy-operations` section. (Contributed by "
"Giampaolo Rodolà in :issue:`33671`.)"
msgstr ""
":func:`shutil.copyfile`, :func:`shutil.copy`, :func:`shutil.copy2`, :func:"
"`shutil.copytree` e :func:`shutil.copytree` usam chamadas de sistema \"fast-"
"copy\" específicas da plataforma no Linux e no macOS para copiar o arquivo "
"com mais eficiência. \"fast-copy\" significa que a operação de cópia ocorre "
"dentro do kernel, evitando o uso de buffers de espaço do usuário no Python "
"como em \"``outfd.write(infd.read())``\". No Windows, :func:`shutil."
"copyfile` usa um buffer padrão com tamanho maior (1 MiB em vez de 16 KiB) e "
"é usada uma variante de :func:`shutil.copyfileobj` baseada em :func:"
"`memoryview`. A velocidade de cópia de um arquivo 512 MiB na mesma partição "
"é de aproximadamente +26% no Linux, +50% no macOS e +40% no Windows. Além "
"disso, muito menos ciclos de CPU são consumidos. Veja a seção :ref:`shutil-"
"platform-dependent-efficient-copy-operations`. (Contribuição de Giampaolo "
"Rodolà em :issue:`33671`.)"

#: ../../whatsnew/3.8.rst:1487
msgid ""
":func:`shutil.copytree` uses :func:`os.scandir` function and all copy "
"functions depending from it use cached :func:`os.stat` values. The speedup "
"for copying a directory with 8000 files is around +9% on Linux, +20% on "
"Windows and +30% on a Windows SMB share. Also the number of :func:`os.stat` "
"syscalls is reduced by 38% making :func:`shutil.copytree` especially faster "
"on network filesystems. (Contributed by Giampaolo Rodolà in :issue:`33695`.)"
msgstr ""
":func:`shutil.copytree` usa a função :func:`os.scandir` e todas as funções "
"de cópia que dependem dela usam valores em cache de :func:`os.stat`. A "
"velocidade para copiar um diretório com 8000 arquivos é de cerca de +9% no "
"Linux, +20% no Windows e +30% em um compartilhamento SMB do Windows. Além "
"disso, o número de chamadas de sistema :func:`os.stat` é reduzido em 38%, "
"tornando :func:`shutil.copytree` especialmente mais rápida em sistemas de "
"arquivos em rede. (Contribuição de Giampaolo Rodolà em :issue:`33695`.)"

#: ../../whatsnew/3.8.rst:1494
msgid ""
"The default protocol in the :mod:`pickle` module is now Protocol 4, first "
"introduced in Python 3.4.  It offers better performance and smaller size "
"compared to Protocol 3 available since Python 3.0."
msgstr ""
"O protocolo padrão no módulo :mod:`pickle` agora é o Protocolo 4, "
"introduzido pela primeira vez no Python 3.4. Ele oferece melhor desempenho e "
"tamanho menor em comparação com o Protocolo 3 disponível desde o Python 3.0."

#: ../../whatsnew/3.8.rst:1498
msgid ""
"Removed one :c:type:`Py_ssize_t` member from ``PyGC_Head``.  All GC tracked "
"objects (e.g. tuple, list, dict) size is reduced 4 or 8 bytes. (Contributed "
"by Inada Naoki in :issue:`33597`.)"
msgstr ""
"Removido um membro :c:type:`Py_ssize_t` de ``PyGC_Head``. O tamanho de todos "
"os objetos rastreados pelo coletor de lixo (por exemplo, tupla, lista, "
"ditado) é reduzido em 4 ou 8 bytes. (Contribuição de Inada Naoki em :issue:"
"`33597`.)"

#: ../../whatsnew/3.8.rst:1502
msgid ""
":class:`uuid.UUID` now uses ``__slots__`` to reduce its memory footprint. "
"(Contributed by Wouter Bolsterlee and Tal Einat in :issue:`30977`)"
msgstr ""
":class:`uuid.UUID` agora usa ``__slots__`` para reduzir seu uso de espaço de "
"memória. (Contribuição de Wouter Bolsterlee e Tal Einat em :issue:`30977`)"

#: ../../whatsnew/3.8.rst:1505
msgid ""
"Improved performance of :func:`operator.itemgetter` by 33%.  Optimized "
"argument handling and added a fast path for the common case of a single non-"
"negative integer index into a tuple (which is the typical use case in the "
"standard library).  (Contributed by Raymond Hettinger in :issue:`35664`.)"
msgstr ""
"Melhor desempenho de :func:`operator.itemgetter` em 33%. Manipulação de "
"argumento otimizada e incluído um caminho rápido para o caso comum de um "
"único índice inteiro não negativo em uma tupla (que é o caso de uso típico "
"na biblioteca padrão). (Contribuição de Raymond Hettinger em :issue:`35664`.)"

#: ../../whatsnew/3.8.rst:1511
msgid ""
"Sped-up field lookups in :func:`collections.namedtuple`.  They are now more "
"than two times faster, making them the fastest form of instance variable "
"lookup in Python. (Contributed by Raymond Hettinger, Pablo Galindo, and Joe "
"Jevnik, Serhiy Storchaka in :issue:`32492`.)"
msgstr ""
"Pesquisas de campo aceleradas em :func:`collections.namedtuple`. Agora elas "
"são duas vezes mais rápidas, tornando-as a forma mais rápida de pesquisa de "
"variáveis de instância no Python. (Contribuição de Raymond Hettinger, Pablo "
"Galindo e Joe Jevnik, Serhiy Storchaka em :issue:`32492`.)"

#: ../../whatsnew/3.8.rst:1516
msgid ""
"The :class:`list` constructor does not overallocate the internal item buffer "
"if the input iterable has a known length (the input implements ``__len__``). "
"This makes the created list 12% smaller on average. (Contributed by Raymond "
"Hettinger and Pablo Galindo in :issue:`33234`.)"
msgstr ""
"O construtor :class:`list` não atribui globalmente o buffer interno do item "
"se a entrada iterável tiver um comprimento conhecido (a entrada implementa "
"``__len__``). Isso torna a lista criada 12% menor em média. (Contribuição de "
"Raymond Hettinger e Pablo Galindo em :issue:`33234`.)"

#: ../../whatsnew/3.8.rst:1521
msgid ""
"Doubled the speed of class variable writes.  When a non-dunder attribute was "
"updated, there was an unnecessary call to update slots. (Contributed by "
"Stefan Behnel, Pablo Galindo Salgado, Raymond Hettinger, Neil Schemenauer, "
"and Serhiy Storchaka in :issue:`36012`.)"
msgstr ""
"Duplicada a velocidade de gravação de variável de classe. Quando um atributo "
"não-dunder era atualizado, havia uma chamada desnecessária para atualizar os "
"slots. (Contribuição de Stefan Behnel, Pablo Galindo Salgado, Raymond "
"Hettinger, Neil Schemenauer e Serhiy Storchaka em :issue:`36012`.)"

#: ../../whatsnew/3.8.rst:1526
msgid ""
"Reduced an overhead of converting arguments passed to many builtin functions "
"and methods.  This sped up calling some simple builtin functions and methods "
"up to 20--50%.  (Contributed by Serhiy Storchaka in :issue:`23867`, :issue:"
"`35582` and :issue:`36127`.)"
msgstr ""
"Reduzida a sobrecarga dos argumentos de conversão passados para muitas "
"funções e métodos internos. Isso acelerou chamando algumas funções e métodos "
"internos simples de 20--50%. (Contribuição de Serhiy Storchaka em :issue:"
"`23867`, :issue:`35582` e :issue:`36127`.)"

#: ../../whatsnew/3.8.rst:1531
msgid ""
"``LOAD_GLOBAL`` instruction now uses new \"per opcode cache\" mechanism. It "
"is about 40% faster now.  (Contributed by Yury Selivanov and Inada Naoki in :"
"issue:`26219`.)"
msgstr ""
"A instrução ``LOAD_GLOBAL`` agora usa o novo mecanismo \"por cache de código "
"de operação\". É cerca de 40% mais rápido agora. (Contribuição de Yury "
"Selivanov e Inada Naoki em :issue: `26219`.)"

#: ../../whatsnew/3.8.rst:1537
msgid "Build and C API Changes"
msgstr "Mudanças a construções e API C"

#: ../../whatsnew/3.8.rst:1539
msgid ""
"Default :data:`sys.abiflags` became an empty string: the ``m`` flag for "
"pymalloc became useless (builds with and without pymalloc are ABI "
"compatible) and so has been removed. (Contributed by Victor Stinner in :"
"issue:`36707`.)"
msgstr ""
"O :data:`sys.abiflags` padrão se tornou uma string vazia: o sinalizador "
"``m`` para pymalloc se tornou inútil (compilações com e sem pymalloc são "
"compatíveis com ABI) e, portanto, foi removido. (Contribuição de Victor "
"Stinner em :issue:`36707`.)"

#: ../../whatsnew/3.8.rst:1543
msgid "Example of changes:"
msgstr "Exemplos de alterações:"

#: ../../whatsnew/3.8.rst:1545
msgid ""
"Only ``python3.8`` program is installed, ``python3.8m`` program is gone."
msgstr ""
"Somente o programa ``python3.8`` é instalado, o programa ``python3.8m`` se "
"foi."

#: ../../whatsnew/3.8.rst:1546
msgid ""
"Only ``python3.8-config`` script is installed, ``python3.8m-config`` script "
"is gone."
msgstr ""
"Somente o script ``python3.8-config`` é instalado, o programa ``python3.8m-"
"config`` se foi."

#: ../../whatsnew/3.8.rst:1548
msgid ""
"The ``m`` flag has been removed from the suffix of dynamic library "
"filenames: extension modules in the standard library as well as those "
"produced and installed by third-party packages, like those downloaded from "
"PyPI. On Linux, for example, the Python 3.7 suffix ``.cpython-37m-x86_64-"
"linux-gnu.so`` became ``.cpython-38-x86_64-linux-gnu.so`` in Python 3.8."
msgstr ""
"O sinalizador ``m`` foi removido do sufixo dos nomes de arquivos da "
"biblioteca dinâmica: módulos de extensão na biblioteca padrão, bem como "
"daqueles produzidos e instalados por pacotes de terceiros, como os baixados "
"do PyPI. No Linux, por exemplo, o sufixo de ``.cpython-37m-x86_64-linux-gnu."
"so`` do Python 3.7 se tornou ``.cpython-38-x86_64-linux-gnu.so`` no Python "
"3.8."

#: ../../whatsnew/3.8.rst:1555
msgid ""
"The header files have been reorganized to better separate the different "
"kinds of APIs:"
msgstr ""
"Os arquivos de cabeçalho foram reorganizados para separar melhor os "
"diferentes tipos de APIs:"

#: ../../whatsnew/3.8.rst:1558
msgid "``Include/*.h`` should be the portable public stable C API."
msgstr "``Include/*.h`` deve ser a API C pública estável e portátil."

#: ../../whatsnew/3.8.rst:1559
msgid ""
"``Include/cpython/*.h`` should be the unstable C API specific to CPython; "
"public API, with some private API prefixed by ``_Py`` or ``_PY``."
msgstr ""
"``Include/cpython/*.h`` deve ser a API C instável específica do CPython; API "
"pública, com alguma API privada prefixada por ``_Py`` ou ``_PY``."

#: ../../whatsnew/3.8.rst:1561
msgid ""
"``Include/internal/*.h`` is the private internal C API very specific to "
"CPython. This API comes with no backward compatibility warranty and should "
"not be used outside CPython. It is only exposed for very specific needs like "
"debuggers and profiles which has to access to CPython internals without "
"calling functions. This API is now installed by ``make install``."
msgstr ""
"``Include/internal/*.h`` é a API C interna privada muito específica do "
"CPython. Essa API é fornecida sem garantia de compatibilidade com versões "
"anteriores e não deve ser usada fora do CPython. Ele é exposto apenas a "
"necessidades muito específicas, como depuradores e perfis, que precisam "
"acessar os componentes internos do CPython sem chamar funções. Esta API "
"agora está instalada por ``make install``."

#: ../../whatsnew/3.8.rst:1567
msgid ""
"(Contributed by Victor Stinner in :issue:`35134` and :issue:`35081`, work "
"initiated by Eric Snow in Python 3.7.)"
msgstr ""
"(Contribuição de Victor Stinner em :issue:`35134` e :issue:`35081`, trabalho "
"iniciado por Eric Snow em Python 3.7.)"

#: ../../whatsnew/3.8.rst:1570
msgid ""
"Some macros have been converted to static inline functions: parameter types "
"and return type are well defined, they don't have issues specific to macros, "
"variables have a local scopes. Examples:"
msgstr ""
"Algumas macros foram convertidas em funções in-line estáticas: os tipos de "
"parâmetros e o tipo de retorno são bem definidos, eles não têm problemas "
"específicos para as macros, as variáveis têm escopos locais. Exemplos:"

#: ../../whatsnew/3.8.rst:1574
msgid ":c:func:`Py_INCREF`, :c:func:`Py_DECREF`"
msgstr ":c:func:`Py_INCREF`, :c:func:`Py_DECREF`"

#: ../../whatsnew/3.8.rst:1575
msgid ":c:func:`Py_XINCREF`, :c:func:`Py_XDECREF`"
msgstr ":c:func:`Py_XINCREF`, :c:func:`Py_XDECREF`"

#: ../../whatsnew/3.8.rst:1576
msgid ":c:func:`PyObject_INIT`, :c:func:`PyObject_INIT_VAR`"
msgstr ":c:func:`PyObject_INIT`, :c:func:`PyObject_INIT_VAR`"

#: ../../whatsnew/3.8.rst:1577
msgid ""
"Private functions: :c:func:`!_PyObject_GC_TRACK`, :c:func:`!"
"_PyObject_GC_UNTRACK`, :c:func:`!_Py_Dealloc`"
msgstr ""
"Funções privadas: :c:func:`!_PyObject_GC_TRACK`, :c:func:`!"
"_PyObject_GC_UNTRACK`, :c:func:`!_Py_Dealloc`"

#: ../../whatsnew/3.8.rst:1580
msgid "(Contributed by Victor Stinner in :issue:`35059`.)"
msgstr "(Contribuição de Victor Stinner em :issue:`35059`.)"

#: ../../whatsnew/3.8.rst:1582
msgid ""
"The :c:func:`!PyByteArray_Init` and :c:func:`!PyByteArray_Fini` functions "
"have been removed. They did nothing since Python 2.7.4 and Python 3.2.0, "
"were excluded from the limited API (stable ABI), and were not documented. "
"(Contributed by Victor Stinner in :issue:`35713`.)"
msgstr ""
"As funções :c:func:`!PyByteArray_Init` e :c:func:`!PyByteArray_Fini` foram "
"removidas. Elas não faziam nada desde o Python 2.7.4 e o Python 3.2.0, foram "
"excluídas da API limitada (ABI estável) e não foram documentados. "
"(Contribuição de Victor Stinner em :issue:`35713`.)"

#: ../../whatsnew/3.8.rst:1587
msgid ""
"The result of :c:func:`PyExceptionClass_Name` is now of type ``const char "
"*`` rather of ``char *``. (Contributed by Serhiy Storchaka in :issue:"
"`33818`.)"
msgstr ""
"O resultado de :c:func:`PyExceptionClass_Name` agora é do tipo ``const char "
"*`` em vez de ``char *``. (Contribuição de Serhiy Storchaka em :issue:"
"`33818`.)"

#: ../../whatsnew/3.8.rst:1591
msgid ""
"The duality of ``Modules/Setup.dist`` and ``Modules/Setup`` has been "
"removed.  Previously, when updating the CPython source tree, one had to "
"manually copy ``Modules/Setup.dist`` (inside the source tree) to ``Modules/"
"Setup`` (inside the build tree) in order to reflect any changes upstream.  "
"This was of a small benefit to packagers at the expense of a frequent "
"annoyance to developers following CPython development, as forgetting to copy "
"the file could produce build failures."
msgstr ""
"A dualidade de ``Modules/Setup.dist`` e ``Modules/Setup`` foi removida. "
"Anteriormente, ao atualizar a árvore de fontes do CPython, era necessário "
"copiar manualmente ``Modules/Setup.dist`` (dentro da árvore de fontes) para "
"``Modules/Setup`` (dentro da árvore de compilação), a fim de refletir todas "
"as alterações upstream. Isso foi um pequeno benefício para os empacotadores, "
"à custa de um aborrecimento frequente para os desenvolvedores após o "
"desenvolvimento do CPython, pois esquecer de copiar o arquivo pode causar "
"falhas na compilação."

#: ../../whatsnew/3.8.rst:1599
msgid ""
"Now the build system always reads from ``Modules/Setup`` inside the source "
"tree.  People who want to customize that file are encouraged to maintain "
"their changes in a git fork of CPython or as patch files, as they would do "
"for any other change to the source tree."
msgstr ""
"Agora, o sistema de compilação sempre lê ``Modules/Setup`` dentro da árvore "
"de fontes. As pessoas que desejam personalizar esse arquivo são incentivadas "
"a manter suas alterações em um fork do git do CPython ou como arquivos de "
"patch, como faria em qualquer outra alteração na árvore de fontes."

#: ../../whatsnew/3.8.rst:1604
msgid "(Contributed by Antoine Pitrou in :issue:`32430`.)"
msgstr "(Contribuição de Antoine Pitrou em :issue:`32430`.)"

#: ../../whatsnew/3.8.rst:1606
msgid ""
"Functions that convert Python number to C integer like :c:func:"
"`PyLong_AsLong` and argument parsing functions like :c:func:"
"`PyArg_ParseTuple` with integer converting format units like ``'i'`` will "
"now use the :meth:`~object.__index__` special method instead of :meth:"
"`~object.__int__`, if available.  The deprecation warning will be emitted "
"for objects with the ``__int__()`` method but without the ``__index__()`` "
"method (like :class:`~decimal.Decimal` and :class:`~fractions.Fraction`).  :"
"c:func:`PyNumber_Check` will now return ``1`` for objects implementing "
"``__index__()``. :c:func:`PyNumber_Long`, :c:func:`PyNumber_Float` and :c:"
"func:`PyFloat_AsDouble` also now use the ``__index__()`` method if "
"available. (Contributed by Serhiy Storchaka in :issue:`36048` and :issue:"
"`20092`.)"
msgstr ""
"Funções que convertem um número Python em número inteiro C, como :c:func:"
"`PyLong_AsLong`, e funções de análise de argumentos, como :c:func:"
"`PyArg_ParseTuple`, com unidades de formato de conversão de números "
"inteiros, como ``'i'``, agora usarão o método especial :meth:`~object."
"__index__` em vez de :meth:`~object.__int__`, se disponível. O aviso de "
"descontinuação será emitido para objetos com o método ``__int__()``, mas sem "
"o método ``__index__()`` (como :class:`~decimal.Decimal` e :class:"
"`~fractions.Fraction` ). :c:func:`PyNumber_Check` agora retornará ``1`` para "
"objetos implementando ``__index__()``. :c:func:`PyNumber_Long`, :c:func:"
"`PyNumber_Float` e :c:func:`PyFloat_AsDouble` agora também usam o método "
"``__index__()``, se disponível. (Contribuição de Serhiy Storchaka em :issue:"
"`36048` e :issue:`20092`.)"

#: ../../whatsnew/3.8.rst:1620
msgid ""
"Heap-allocated type objects will now increase their reference count in :c:"
"func:`PyObject_Init` (and its parallel macro ``PyObject_INIT``) instead of "
"in :c:func:`PyType_GenericAlloc`. Types that modify instance allocation or "
"deallocation may need to be adjusted. (Contributed by Eddie Elizondo in :"
"issue:`35810`.)"
msgstr ""
"Objetos de tipo alocado a heap agora aumentarão sua contagem de referências "
"em :c:func:`PyObject_Init` (e sua macro paralela ``PyObject_INIT``) em vez "
"de em :c:func:`PyType_GenericAlloc`. Os tipos que modificam a alocação ou "
"desalocação de instância podem precisar ser ajustados. (Contribuição de "
"Eddie Elizondo em :issue:`35810`.)"

#: ../../whatsnew/3.8.rst:1626
msgid ""
"The new function :c:func:`!PyCode_NewWithPosOnlyArgs` allows to create code "
"objects like :c:func:`!PyCode_New`, but with an extra *posonlyargcount* "
"parameter for indicating the number of positional-only arguments. "
"(Contributed by Pablo Galindo in :issue:`37221`.)"
msgstr ""
"A nova função :c:func:`!PyCode_NewWithPosOnlyArgs` permite criar objetos de "
"código como :c:func:`!PyCode_New`, mas com um parâmetro extra "
"*posonlyargcount* para indicar o número de argumentos somente posicionais. "
"(Contribuição de Pablo Galindo em :issue:`37221`.)"

#: ../../whatsnew/3.8.rst:1631
msgid ""
":c:func:`!Py_SetPath` now sets :data:`sys.executable` to the program full "
"path (:c:func:`Py_GetProgramFullPath`) rather than to the program name (:c:"
"func:`Py_GetProgramName`). (Contributed by Victor Stinner in :issue:`38234`.)"
msgstr ""
":c:func:`!Py_SetPath` agora define :data:`sys.executable` para o caminho "
"completo do programa (:c:func:`Py_GetProgramFullPath`) em vez do nome do "
"programa (:c:func:`Py_GetProgramName`). (Contribuição de Victor Stinner em :"
"issue:`38234`.)"

#: ../../whatsnew/3.8.rst:1638
msgid "Deprecated"
msgstr "Descontinuados"

#: ../../whatsnew/3.8.rst:1640
msgid ""
"The distutils ``bdist_wininst`` command is now deprecated, use "
"``bdist_wheel`` (wheel packages) instead. (Contributed by Victor Stinner in :"
"issue:`37481`.)"
msgstr ""
"O comando distutils ``bdist_wininst`` agora está descontinuado; use "
"``bdist_wheel`` (pacotes wheel). (Contribuição de Victor Stinner em :issue:"
"`37481`.)"

#: ../../whatsnew/3.8.rst:1644
msgid ""
"Deprecated methods ``getchildren()`` and ``getiterator()`` in the :mod:`~xml."
"etree.ElementTree` module now emit a :exc:`DeprecationWarning` instead of :"
"exc:`PendingDeprecationWarning`. They will be removed in Python 3.9. "
"(Contributed by Serhiy Storchaka in :issue:`29209`.)"
msgstr ""
"Os métodos descontinuados ``getchildren()`` e ``getiterator()`` no módulo :"
"mod:`~xml.etree.ElementTree` agora emitem um :exc:`DeprecationWarning` em "
"vez de :exc:`PendingDeprecationWarning`. Eles serão removidos no Python 3.9. "
"(Contribuição de Serhiy Storchaka em :issue:`29209`.)"

#: ../../whatsnew/3.8.rst:1650
msgid ""
"Passing an object that is not an instance of :class:`concurrent.futures."
"ThreadPoolExecutor` to :meth:`loop.set_default_executor() <asyncio.loop."
"set_default_executor>` is deprecated and will be prohibited in Python 3.9. "
"(Contributed by Elvis Pranskevichus in :issue:`34075`.)"
msgstr ""
"Passar um objeto que não é uma instância de :class:`concurrent.futures."
"ThreadPoolExecutor` para :meth:`loop.set_default_executor() <asyncio.loop."
"set_default_executor>` foi descontinuado e será proibido no Python 3.9. "
"(Contribuição de Elvis Pranskevichus em :issue:`34075`.)"

#: ../../whatsnew/3.8.rst:1656
msgid ""
"The :meth:`~object.__getitem__` methods of :class:`xml.dom.pulldom."
"DOMEventStream`, :class:`wsgiref.util.FileWrapper` and :class:`fileinput."
"FileInput` have been deprecated."
msgstr ""
"Os métodos :meth:`~object.__getitem__` de :class:`xml.dom.pulldom."
"DOMEventStream`, :class:`wsgiref.util.FileWrapper` e :class:`fileinput."
"FileInput` foram descontinuados."

#: ../../whatsnew/3.8.rst:1660
msgid ""
"Implementations of these methods have been ignoring their *index* parameter, "
"and returning the next item instead. (Contributed by Berker Peksag in :issue:"
"`9372`.)"
msgstr ""
"As implementações desses métodos têm ignorado seu parâmetro *index* e "
"retornado o próximo item. (Contribuição de Berker Peksag em :issue:`9372`.)"

#: ../../whatsnew/3.8.rst:1664
msgid ""
"The :class:`typing.NamedTuple` class has deprecated the ``_field_types`` "
"attribute in favor of the ``__annotations__`` attribute which has the same "
"information. (Contributed by Raymond Hettinger in :issue:`36320`.)"
msgstr ""
"A classe :class:`typing.NamedTuple` descontinuou o atributo ``_field_types`` "
"em favor do atributo ``__annotations__`` que possui as mesmas informações. "
"(Contribuição de Raymond Hettinger em :issue:`36320`.)"

#: ../../whatsnew/3.8.rst:1668
msgid ""
":mod:`ast` classes ``Num``, ``Str``, ``Bytes``, ``NameConstant`` and "
"``Ellipsis`` are considered deprecated and will be removed in future Python "
"versions. :class:`~ast.Constant` should be used instead. (Contributed by "
"Serhiy Storchaka in :issue:`32892`.)"
msgstr ""
"As classes ``Num``, ``Str``, ``Bytes``, ``NameConstant`` e ``Ellipsis`` do "
"módulo :mod:`ast` são consideradas descontinuadas e serão removidos em "
"versões futuras do Python. A :class:`~ast.Constant` deve ser usado. "
"(Contribuição de Serhiy Storchaka em :issue:`32892`.)"

#: ../../whatsnew/3.8.rst:1673
msgid ""
":class:`ast.NodeVisitor` methods ``visit_Num()``, ``visit_Str()``, "
"``visit_Bytes()``, ``visit_NameConstant()`` and ``visit_Ellipsis()`` are "
"deprecated now and will not be called in future Python versions. Add the :"
"meth:`~ast.NodeVisitor.visit_Constant` method to handle all constant nodes. "
"(Contributed by Serhiy Storchaka in :issue:`36917`.)"
msgstr ""
"Os métodos ``visit_Num()``, ``visit_Str()``, ``visit_Bytes()``, "
"``visit_NameConstant()`` e ``visit_Ellipsis()`` da classe :class:`ast."
"NodeVisitor` estão agora descontinuados e não serão chamados nas versões "
"futuras do Python. Adicione o método :meth:`~ast.NodeVisitor.visit_Constant` "
"para manipular todos os nós constantes. (Contribuição de Serhiy Storchaka "
"em :issue:`36917`.)"

#: ../../whatsnew/3.8.rst:1680
msgid ""
"The :func:`asyncio.coroutine` :term:`decorator` is deprecated and will be "
"removed in version 3.10.  Instead of ``@asyncio.coroutine``, use :keyword:"
"`async def` instead. (Contributed by Andrew Svetlov in :issue:`36921`.)"
msgstr ""
"O :term:`decorador <decorator>` de :func:`asyncio.coroutine` foi "
"descontinuado e será removido na versão 3.10. Em vez de ``@asyncio."
"coroutine``, use :keyword:`async def`. (Contribuição de Andrew Svetlov em :"
"issue:`36921`.)"

#: ../../whatsnew/3.8.rst:1685
msgid ""
"In :mod:`asyncio`, the explicit passing of a *loop* argument has been "
"deprecated and will be removed in version 3.10 for the following: :func:"
"`asyncio.sleep`, :func:`asyncio.gather`, :func:`asyncio.shield`, :func:"
"`asyncio.wait_for`, :func:`asyncio.wait`, :func:`asyncio.as_completed`, :"
"class:`asyncio.Task`, :class:`asyncio.Lock`, :class:`asyncio.Event`, :class:"
"`asyncio.Condition`, :class:`asyncio.Semaphore`, :class:`asyncio."
"BoundedSemaphore`, :class:`asyncio.Queue`, :func:`asyncio."
"create_subprocess_exec`, and :func:`asyncio.create_subprocess_shell`."
msgstr ""
"Em :mod:`asyncio`, a passagem explícita de um argumento *loop* foi "
"descontinuado e será removido na versão 3.10 para os seguintes: :func:"
"`asyncio.sleep`, :func:`asyncio.gather`, :func:`asyncio.shield`, :func:"
"`asyncio.wait_for`, :func:`asyncio.wait`, :func:`asyncio.as_completed`, :"
"class:`asyncio.Task`, :class:`asyncio.Lock`, :class:`asyncio.Event`, :class:"
"`asyncio.Condition`, :class:`asyncio.Semaphore`, :class:`asyncio."
"BoundedSemaphore`, :class:`asyncio.Queue`, :func:`asyncio."
"create_subprocess_exec` e :func:`asyncio.create_subprocess_shell`."

#: ../../whatsnew/3.8.rst:1695
msgid ""
"The explicit passing of coroutine objects to :func:`asyncio.wait` has been "
"deprecated and will be removed in version 3.11. (Contributed by Yury "
"Selivanov in :issue:`34790`.)"
msgstr ""
"A passagem explícita dos objetos da corrotina para :func:`asyncio.wait` foi "
"descontinuada e será removida na versão 3.11. (Contribuição de Yury "
"Selivanov em :issue:`34790`.)"

#: ../../whatsnew/3.8.rst:1699
msgid ""
"The following functions and methods are deprecated in the :mod:`gettext` "
"module: :func:`~gettext.lgettext`, :func:`~gettext.ldgettext`, :func:"
"`~gettext.lngettext` and :func:`~gettext.ldngettext`. They return encoded "
"bytes, and it's possible that you will get unexpected Unicode-related "
"exceptions if there are encoding problems with the translated strings. It's "
"much better to use alternatives which return Unicode strings in Python 3. "
"These functions have been broken for a long time."
msgstr ""
"As seguintes funções e os seguintes métodos estão descontinuados no módulo :"
"mod:`gettext`: :func:`~gettext.lgettext`, :func:`~gettext.ldgettext`, :func:"
"`~gettext.lngettext` e :func:`~gettext.ldngettext`. Eles retornam bytes "
"codificados e é possível que você obtenha exceções relacionadas ao Unicode "
"inesperadas se houver problemas de codificação com as strings traduzidas. É "
"muito melhor usar alternativas que retornam strings Unicode no Python 3. "
"Essas funções estiveram quebradas por um longo tempo."

#: ../../whatsnew/3.8.rst:1707
msgid ""
"Function :func:`~gettext.bind_textdomain_codeset`, methods :meth:`~gettext."
"NullTranslations.output_charset` and :meth:`~gettext.NullTranslations."
"set_output_charset`, and the *codeset* parameter of functions :func:"
"`~gettext.translation` and :func:`~gettext.install` are also deprecated, "
"since they are only used for the ``l*gettext()`` functions. (Contributed by "
"Serhiy Storchaka in :issue:`33710`.)"
msgstr ""
"A função :func:`~gettext.bind_textdomain_codeset`, os métodos :meth:"
"`~gettext.NullTranslations.output_charset` e :meth:`~gettext."
"NullTranslations.set_output_charset` e o parâmetro *codeset* das funções :"
"func:`~gettext.translation` e :func:`~gettext.install` também estão "
"descontinuados, pois são usados apenas para as funções ``l*gettext()``. "
"(Contribuição de Serhiy Storchaka em :issue:`33710`.)"

#: ../../whatsnew/3.8.rst:1715
msgid ""
"The :meth:`~threading.Thread.isAlive` method of :class:`threading.Thread` "
"has been deprecated. (Contributed by Donghee Na in :issue:`35283`.)"
msgstr ""

#: ../../whatsnew/3.8.rst:1719
msgid ""
"Many builtin and extension functions that take integer arguments will now "
"emit a deprecation warning for :class:`~decimal.Decimal`\\ s, :class:"
"`~fractions.Fraction`\\ s and any other objects that can be converted to "
"integers only with a loss (e.g. that have the :meth:`~object.__int__` method "
"but do not have the :meth:`~object.__index__` method).  In future version "
"they will be errors. (Contributed by Serhiy Storchaka in :issue:`36048`.)"
msgstr ""
"Muitas funções internas e de extensão que recebem argumentos inteiros agora "
"emitem um aviso de descontinuidade para objetos de :class:`~decimal."
"Decimal`, de :class:`~fractions.Fraction` e quaisquer outros objetos que "
"possam ser convertidos apenas em números inteiros com perda (por exemplo, "
"que possuem o método :meth:`~object.__int__`, mas não têm o método :meth:"
"`~object.__index__`). Em uma versão futura, haverá erros. (Contribuição de "
"Serhiy Storchaka em :issue:`36048`.)"

#: ../../whatsnew/3.8.rst:1727
msgid "Deprecated passing the following arguments as keyword arguments:"
msgstr ""
"Descontinuada a passagem dos seguintes argumentos como argumentos nomeados:"

#: ../../whatsnew/3.8.rst:1729
msgid ""
"*func* in :func:`functools.partialmethod`, :func:`weakref.finalize`, :meth:"
"`profile.Profile.runcall`, :meth:`cProfile.Profile.runcall`, :meth:`bdb.Bdb."
"runcall`, :meth:`trace.Trace.runfunc` and :func:`curses.wrapper`."
msgstr ""
"*func* em :func:`functools.partialmethod`, :func:`weakref.finalize`, :meth:"
"`profile.Profile.runcall`, :meth:`cProfile.Profile.runcall`, :meth:`bdb.Bdb."
"runcall`, :meth:`trace.Trace.runfunc` e :func:`curses.wrapper`."

#: ../../whatsnew/3.8.rst:1733
msgid "*function* in :meth:`unittest.TestCase.addCleanup`."
msgstr "*function* em :meth:`unittest.TestCase.addCleanup`."

#: ../../whatsnew/3.8.rst:1734
msgid ""
"*fn* in the :meth:`~concurrent.futures.Executor.submit` method of :class:"
"`concurrent.futures.ThreadPoolExecutor` and :class:`concurrent.futures."
"ProcessPoolExecutor`."
msgstr ""
"*fn* no método :meth:`~concurrent.futures.Executor.submit` de :class:"
"`concurrent.futures.ThreadPoolExecutor` e :class:`concurrent.futures."
"ProcessPoolExecutor`."

#: ../../whatsnew/3.8.rst:1737
msgid ""
"*callback* in :meth:`contextlib.ExitStack.callback`, :meth:`contextlib."
"AsyncExitStack.callback` and :meth:`contextlib.AsyncExitStack."
"push_async_callback`."
msgstr ""
"*callback* em :meth:`contextlib.ExitStack.callback`, :meth:`contextlib."
"AsyncExitStack.callback` e :meth:`contextlib.AsyncExitStack."
"push_async_callback`."

#: ../../whatsnew/3.8.rst:1740
msgid ""
"*c* and *typeid* in the :meth:`~multiprocessing.managers.Server.create` "
"method of :class:`multiprocessing.managers.Server` and :class:"
"`multiprocessing.managers.SharedMemoryServer`."
msgstr ""
"*c* e *typeid* no método :meth:`~multiprocessing.managers.Server.create` de :"
"class:`multiprocessing.managers.Server` e :class:`multiprocessing.managers."
"SharedMemoryServer`."

#: ../../whatsnew/3.8.rst:1743
msgid "*obj* in :func:`weakref.finalize`."
msgstr "*obj* em :func:`weakref.finalize`."

#: ../../whatsnew/3.8.rst:1745
msgid ""
"In future releases of Python, they will be :ref:`positional-only <positional-"
"only_parameter>`. (Contributed by Serhiy Storchaka in :issue:`36492`.)"
msgstr ""
"Em versões futuras do Python, elas serão :ref:`somente-posicionais "
"<positional-only_parameter>`. (Contribuição de Serhiy Storchaka em :issue:"
"`36492`.)"

#: ../../whatsnew/3.8.rst:1751
msgid "API and Feature Removals"
msgstr "Remoção de APIs e recursos"

#: ../../whatsnew/3.8.rst:1753
msgid "The following features and APIs have been removed from Python 3.8:"
msgstr "Os seguintes recursos e APIs foram removidos do Python 3.8:"

#: ../../whatsnew/3.8.rst:1755
msgid ""
"Starting with Python 3.3, importing ABCs from :mod:`collections` was "
"deprecated, and importing should be done from :mod:`collections.abc`. Being "
"able to import from collections was marked for removal in 3.8, but has been "
"delayed to 3.9. (See :issue:`36952`.)"
msgstr ""
"A partir do Python 3.3, a importação de ABCs de :mod:`collections` foi "
"descontinuada e a importação deve ser feita de :mod:`collections.abc`. A "
"possibilidade de importar de coleções foi marcada para remoção em 3.8, mas "
"foi adiada para 3.9. (Veja :issue:`36952`.)"

#: ../../whatsnew/3.8.rst:1760
msgid ""
"The :mod:`macpath` module, deprecated in Python 3.7, has been removed. "
"(Contributed by Victor Stinner in :issue:`35471`.)"
msgstr ""
"O módulo :mod:`macpath`, descontinuado no Python 3.7, foi removido. "
"(Contribuição de Victor Stinner em :issue:`35471`.)"

#: ../../whatsnew/3.8.rst:1763 ../../whatsnew/3.8.rst:1882
msgid ""
"The function :func:`platform.popen` has been removed, after having been "
"deprecated since Python 3.3: use :func:`os.popen` instead. (Contributed by "
"Victor Stinner in :issue:`35345`.)"
msgstr ""
"A função :func:`platform.popen` foi removida, após ter sido descontinuada "
"desde o Python 3.3: use :func:`os.popen`. (Contribuição de Victor Stinner "
"em :issue:`35345`.)"

#: ../../whatsnew/3.8.rst:1767
msgid ""
"The function :func:`time.clock` has been removed, after having been "
"deprecated since Python 3.3: use :func:`time.perf_counter` or :func:`time."
"process_time` instead, depending on your requirements, to have well-defined "
"behavior. (Contributed by Matthias Bussonnier in :issue:`36895`.)"
msgstr ""
"A função :func:`time.clock` foi removida, após ter sido descontinuada desde "
"o Python 3.3: use :func:`time.perf_counter` ou :func:`time.process_time`, "
"dependendo de seus requisitos, para ter o comportamento já definido. "
"(Contribuição de Matthias Bussonnier em :issue:`36895`.)"

#: ../../whatsnew/3.8.rst:1773
msgid ""
"The ``pyvenv`` script has been removed in favor of ``python3.8 -m venv`` to "
"help eliminate confusion as to what Python interpreter the ``pyvenv`` script "
"is tied to. (Contributed by Brett Cannon in :issue:`25427`.)"
msgstr ""
"O script ``pyvenv`` foi removido em favor do ``python3.8 -m venv`` para "
"ajudar a eliminar a confusão sobre a qual interpretador Python o script "
"``pyvenv`` está associado. (Contribuição de Brett Cannon em :issue:`25427`.)"

#: ../../whatsnew/3.8.rst:1777
msgid ""
"``parse_qs``, ``parse_qsl``, and ``escape`` are removed from the :mod:`cgi` "
"module.  They are deprecated in Python 3.2 or older. They should be imported "
"from the ``urllib.parse`` and ``html`` modules instead."
msgstr ""
"``parse_qs``, ``parse_qsl`` e ``escape`` foram removidos do módulo :mod:"
"`cgi`. Eles foram descontinuados no Python 3.2 ou mais antigo. Eles devem "
"ser importados dos módulos ``urllib.parse`` e ``html``."

#: ../../whatsnew/3.8.rst:1781
msgid ""
"``filemode`` function is removed from the :mod:`tarfile` module. It is not "
"documented and deprecated since Python 3.3."
msgstr ""
"A função ``filemode`` foi removida do módulo :mod:`tarfile`. Não é "
"documentada e foi descontinuada desde o Python 3.3."

#: ../../whatsnew/3.8.rst:1784
msgid ""
"The :class:`~xml.etree.ElementTree.XMLParser` constructor no longer accepts "
"the *html* argument.  It never had an effect and was deprecated in Python "
"3.4. All other parameters are now :ref:`keyword-only <keyword-"
"only_parameter>`. (Contributed by Serhiy Storchaka in :issue:`29209`.)"
msgstr ""
"O construtor :class:`~xml.etree.ElementTree.XMLParser` não aceita mais o "
"argumento *html*. Isso nunca teve efeito e foi descontinuado no Python 3.4. "
"Todos os outros parâmetros agora são :ref:`somente-nomeados <keyword-"
"only_parameter>`. (Contribuição de Serhiy Storchaka em :issue:`29209`.)"

#: ../../whatsnew/3.8.rst:1789
msgid ""
"Removed the ``doctype()`` method of :class:`~xml.etree.ElementTree."
"XMLParser`. (Contributed by Serhiy Storchaka in :issue:`29209`.)"
msgstr ""
"Removido o método ``doctype()`` de :class:`~xml.etree.ElementTree."
"XMLParser`. (Contribuição de Serhiy Storchaka em :issue:`29209`.)"

#: ../../whatsnew/3.8.rst:1792
msgid ""
"\"unicode_internal\" codec is removed. (Contributed by Inada Naoki in :issue:"
"`36297`.)"
msgstr ""
"O codec \"unicode_internal\" foi removido. (Contribuição de Inada Naoki em :"
"issue:`36297`.)"

#: ../../whatsnew/3.8.rst:1795
msgid ""
"The ``Cache`` and ``Statement`` objects of the :mod:`sqlite3` module are not "
"exposed to the user. (Contributed by Aviv Palivoda in :issue:`30262`.)"
msgstr ""
"Os objetos ``Cache`` e ``Statement`` do módulo :mod:`sqlite3` não expostos "
"para o usuário. (Contribuição de Aviv Palivoda em :issue:`30262`.)"

#: ../../whatsnew/3.8.rst:1799
msgid ""
"The ``bufsize`` keyword argument of :func:`fileinput.input` and :func:"
"`fileinput.FileInput` which was ignored and deprecated since Python 3.6 has "
"been removed. :issue:`36952` (Contributed by Matthias Bussonnier.)"
msgstr ""
"O argumento nomeado ``bufsize`` de :func:`fileinput.input` e :func:"
"`fileinput.FileInput`, que era ignorado e estava descontinuado desde o "
"Python 3.6, foi removido. :issue:`36952` (Contribuição de Matthias "
"Bussonnier.)"

#: ../../whatsnew/3.8.rst:1803
msgid ""
"The functions :func:`sys.set_coroutine_wrapper` and :func:`sys."
"get_coroutine_wrapper` deprecated in Python 3.7 have been removed; :issue:"
"`36933` (Contributed by Matthias Bussonnier.)"
msgstr ""
"As funções descontinuadas :func:`sys.set_coroutine_wrapper` e :func:`sys."
"get_coroutine_wrapper` no Python 3.7 foram removidas; :issue:`36933` "
"(Contribuição de Matthias Bussonnier.)"

#: ../../whatsnew/3.8.rst:1809
msgid "Porting to Python 3.8"
msgstr "Portando para o Python 3.8"

#: ../../whatsnew/3.8.rst:1811
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"Esta seção lista as alterações descritas anteriormente e outras correções "
"que podem exigir alterações no seu código."

#: ../../whatsnew/3.8.rst:1816
msgid "Changes in Python behavior"
msgstr "Alterações no comportamento do Python"

#: ../../whatsnew/3.8.rst:1818
msgid ""
"Yield expressions (both ``yield`` and ``yield from`` clauses) are now "
"disallowed in comprehensions and generator expressions (aside from the "
"iterable expression in the leftmost :keyword:`!for` clause). (Contributed by "
"Serhiy Storchaka in :issue:`10544`.)"
msgstr ""
"Expressões *yield* (ambas as cláusulas ``yield`` e ``yield from``) agora não "
"são permitidas nas compreensões e expressões geradoras (além da expressão "
"iterável na cláusula mais à esquerda :keyword:`!for`). (Contribuição de "
"Serhiy Storchaka em :issue:`10544`.)"

#: ../../whatsnew/3.8.rst:1823
msgid ""
"The compiler now produces a :exc:`SyntaxWarning` when identity checks "
"(``is`` and ``is not``) are used with certain types of literals (e.g. "
"strings, numbers).  These can often work by accident in CPython, but are not "
"guaranteed by the language spec.  The warning advises users to use equality "
"tests (``==`` and ``!=``) instead. (Contributed by Serhiy Storchaka in :"
"issue:`34850`.)"
msgstr ""
"Agora, o compilador produz um :exc:`SyntaxWarning` quando verificações de "
"identidade (``is`` e ``is not``) são usadas com certos tipos de literais "
"(por exemplo, strings, números). Geralmente, eles podem funcionar "
"acidentalmente no CPython, mas não são garantidos pelas especificações da "
"linguagem. O aviso aconselha os usuários a usar testes de igualdade (``==`` "
"e ``!=``). (Contribuição de Serhiy Storchaka em :issue:`34850`.)"

#: ../../whatsnew/3.8.rst:1830
msgid ""
"The CPython interpreter can swallow exceptions in some circumstances. In "
"Python 3.8 this happens in fewer cases.  In particular, exceptions raised "
"when getting the attribute from the type dictionary are no longer ignored. "
"(Contributed by Serhiy Storchaka in :issue:`35459`.)"
msgstr ""
"O interpretador do CPython pode engolir exceções em algumas circunstâncias. "
"No Python 3.8, isso acontece em menos casos. Em particular, as exceções "
"levantadas ao obter o atributo do dicionário de tipos não são mais "
"ignoradas. (Contribuição de Serhiy Storchaka em :issue:`35459`.)"

#: ../../whatsnew/3.8.rst:1835
msgid ""
"Removed ``__str__`` implementations from builtin types :class:`bool`, :class:"
"`int`, :class:`float`, :class:`complex` and few classes from the standard "
"library.  They now inherit ``__str__()`` from :class:`object`. As result, "
"defining the ``__repr__()`` method in the subclass of these classes will "
"affect their string representation. (Contributed by Serhiy Storchaka in :"
"issue:`36793`.)"
msgstr ""
"Removidas as implementações ``__str__`` dos tipos embutidos :class:`bool`, :"
"class:`int`, :class:`float`, :class:`complex` e poucas classes da biblioteca "
"padrão. Agora eles herdam ``__str__()`` de :class:`object`. Como resultado, "
"definir o método ``__repr__()`` na subclasse dessas classes afetará sua "
"representação de string. (Contribuição de Serhiy Storchaka em :issue:"
"`36793`.)"

#: ../../whatsnew/3.8.rst:1842
msgid ""
"On AIX, :data:`sys.platform` doesn't contain the major version anymore. It "
"is always ``'aix'``, instead of ``'aix3'`` .. ``'aix7'``.  Since older "
"Python versions include the version number, so it is recommended to always "
"use ``sys.platform.startswith('aix')``. (Contributed by M. Felt in :issue:"
"`36588`.)"
msgstr ""
"No AIX, :data:`sys.platform` não contém mais a versão principal. É sempre "
"``'aix'``, em vez de ``'aix3'`` .. ``'aix7'``. Como as versões mais antigas "
"do Python incluem o número da versão, é recomendável usar sempre ``sys."
"platform.startswith('aix')``. (Contribuição de M. Felt em :issue:`36588`.)"

#: ../../whatsnew/3.8.rst:1848
msgid ""
":c:func:`!PyEval_AcquireLock` and :c:func:`!PyEval_AcquireThread` now "
"terminate the current thread if called while the interpreter is finalizing, "
"making them consistent with :c:func:`PyEval_RestoreThread`, :c:func:"
"`Py_END_ALLOW_THREADS`, and :c:func:`PyGILState_Ensure`. If this behavior is "
"not desired, guard the call by checking :c:func:`!_Py_IsFinalizing` or :func:"
"`sys.is_finalizing`. (Contributed by Joannah Nanjekye in :issue:`36475`.)"
msgstr ""
":c:func:`!PyEval_AcquireLock` e :c:func:`!PyEval_AcquireThread` agora "
"encerram a thread atual se chamado enquanto o interpretador está "
"finalizando, tornando-os consistentes com :c:func:`PyEval_RestoreThread`, :c:"
"func:`Py_END_ALLOW_THREADS` e :c:func:`PyGILState_Ensure`. Se esse "
"comportamento não for desejado, proteja a chamada verificando :c:func:`!"
"_Py_IsFinalizing` ou :func:`sys.is_finalizing`. (Contribuição de Joannah "
"Nanjekye em :issue:`36475`.)"

#: ../../whatsnew/3.8.rst:1858 ../../whatsnew/3.8.rst:2321
msgid "Changes in the Python API"
msgstr "Alterações na API Python"

#: ../../whatsnew/3.8.rst:1860
msgid ""
"The :func:`os.getcwdb` function now uses the UTF-8 encoding on Windows, "
"rather than the ANSI code page: see :pep:`529` for the rationale. The "
"function is no longer deprecated on Windows. (Contributed by Victor Stinner "
"in :issue:`37412`.)"
msgstr ""
"A função :func:`os.getcwdb` agora usa a codificação UTF-8 no Windows, em vez "
"da página de códigos ANSI: veja :pep:`529` para a justificativa. A função "
"não é mais descontinuada no Windows. (Contribuição de Victor Stinner em :"
"issue:`37412`.)"

#: ../../whatsnew/3.8.rst:1865
msgid ""
":class:`subprocess.Popen` can now use :func:`os.posix_spawn` in some cases "
"for better performance. On Windows Subsystem for Linux and QEMU User "
"Emulation, the :class:`Popen` constructor using :func:`os.posix_spawn` no "
"longer raises an exception on errors like \"missing program\".  Instead the "
"child process fails with a non-zero :attr:`~Popen.returncode`. (Contributed "
"by Joannah Nanjekye and Victor Stinner in :issue:`35537`.)"
msgstr ""
":class:`subprocess.Popen` agora pode usar :func:`os.posix_spawn` em alguns "
"casos, para obter melhor desempenho. No Windows Subsystem para Linux e "
"emulação de usuário QEMU, o construtor :class:`Popen` usando :func:`os."
"posix_spawn` não levanta mais uma exceção em erros como \"missing program\". "
"Em vez disso, o processo filho falha com um diferente de zero :attr:`~Popen."
"returncode`. (Contribuição de Joannah Nanjekye e Victor Stinner em :issue:"
"`35537`.)"

#: ../../whatsnew/3.8.rst:1872
msgid ""
"The *preexec_fn* argument of * :class:`subprocess.Popen` is no longer "
"compatible with subinterpreters. The use of the parameter in a "
"subinterpreter now raises :exc:`RuntimeError`. (Contributed by Eric Snow in :"
"issue:`34651`, modified by Christian Heimes in :issue:`37951`.)"
msgstr ""
"O argumento *preexec_fn* de * :class:`subprocess.Popen` não é mais "
"compatível com subinterpretadores. O uso do parâmetro em um subinterpretador "
"agora levanta :exc:`RuntimeError`. (Contribuição de Eric Snow em :issue:"
"`34651`, modificado por Christian Heimes em :issue:`37951`.)"

#: ../../whatsnew/3.8.rst:1878
msgid ""
"The :meth:`imap.IMAP4.logout` method no longer silently ignores arbitrary "
"exceptions. (Contributed by Victor Stinner in :issue:`36348`.)"
msgstr ""
"O método :meth:`imap.IMAP4.logout` não mais ignora silenciosamente exceções "
"arbitrárias. (Contribuição de Victor Stinner em :issue:`36348`.)"

#: ../../whatsnew/3.8.rst:1886
msgid ""
"The :func:`statistics.mode` function no longer raises an exception when "
"given multimodal data.  Instead, it returns the first mode encountered in "
"the input data.  (Contributed by Raymond Hettinger in :issue:`35892`.)"
msgstr ""
"A função :func:`Statistics.mode` não levanta mais uma exceção quando dados "
"multimodais são fornecidos. Em vez disso, ela retorna o primeiro modo "
"encontrado nos dados de entrada. (Contribuição de Raymond Hettinger em :"
"issue:`35892`.)"

#: ../../whatsnew/3.8.rst:1891
msgid ""
"The :meth:`~tkinter.ttk.Treeview.selection` method of the :class:`tkinter."
"ttk.Treeview` class no longer takes arguments.  Using it with arguments for "
"changing the selection was deprecated in Python 3.6.  Use specialized "
"methods like :meth:`~tkinter.ttk.Treeview.selection_set` for changing the "
"selection.  (Contributed by Serhiy Storchaka in :issue:`31508`.)"
msgstr ""
"O método :meth:`~tkinter.ttk.Treeview.selection` da classe :class:`tkinter."
"ttk.Treeview` não recebe mais argumentos. Seu uso com argumentos para "
"alterar a seleção foi descontinuado no Python 3.6. Use métodos "
"especializados como :meth:`~tkinter.ttk.Treeview.selection_set` para alterar "
"a seleção. (Contribuição de Serhiy Storchaka em :issue:`31508`.)"

#: ../../whatsnew/3.8.rst:1897
msgid ""
"The :meth:`writexml`, :meth:`toxml` and :meth:`toprettyxml` methods of :mod:"
"`xml.dom.minidom`, and the :meth:`write` method of :mod:`xml.etree`, now "
"preserve the attribute order specified by the user. (Contributed by Diego "
"Rojas and Raymond Hettinger in :issue:`34160`.)"
msgstr ""
"Os métodos :meth:`writexml`, :meth:`toxml` e :meth:`toprettyxml` de :mod:"
"`xml.dom.minidom`, e o método :meth:`write` de :mod:`xml.etree`, agora "
"preservam a ordem dos atributos especificados pelo usuário. (Contribuição de "
"Diego Rojas e Raymond Hettinger em :issue:`34160`.)"

#: ../../whatsnew/3.8.rst:1902
msgid ""
"A :mod:`dbm.dumb` database opened with flags ``'r'`` is now read-only. :func:"
"`dbm.dumb.open` with flags ``'r'`` and ``'w'`` no longer creates a database "
"if it does not exist. (Contributed by Serhiy Storchaka in :issue:`32749`.)"
msgstr ""
"Um banco de dados :mod:`dbm.dumb` aberto com sinalizadores ``'r'`` agora é "
"somente leitura. :func:`dbm.dumb.open` com os sinalizadores ``'r'`` e "
"``'w'`` não cria mais um banco de dados se ele não existir. (Contribuição de "
"Serhiy Storchaka em :issue:`32749`.)"

#: ../../whatsnew/3.8.rst:1907
msgid ""
"The ``doctype()`` method defined in a subclass of :class:`~xml.etree."
"ElementTree.XMLParser` will no longer be called and will emit a :exc:"
"`RuntimeWarning` instead of a :exc:`DeprecationWarning`. Define the :meth:"
"`doctype() <xml.etree.ElementTree.TreeBuilder.doctype>` method on a target "
"for handling an XML doctype declaration. (Contributed by Serhiy Storchaka "
"in :issue:`29209`.)"
msgstr ""
"O método ``doctype()`` definido em uma subclasse de :class:`~xml.etree."
"ElementTree.XMLParser` não será mais chamado e emitirá um :exc:"
"`RuntimeWarning` em vez de um :exc:`DeprecationWarning`. Defina o método :"
"meth:`doctype() <xml.etree.ElementTree.TreeBuilder.doctype>` em um alvo para "
"manipular uma declaração doctype XML. (Contribuição de Serhiy Storchaka em :"
"issue:`29209`.)"

#: ../../whatsnew/3.8.rst:1914
msgid ""
"A :exc:`RuntimeError` is now raised when the custom metaclass doesn't "
"provide the ``__classcell__`` entry in the namespace passed to ``type."
"__new__``.  A :exc:`DeprecationWarning` was emitted in Python 3.6--3.7.  "
"(Contributed by Serhiy Storchaka in :issue:`23722`.)"
msgstr ""
"Uma :exc:`RuntimeError` agora é levantada quando a metaclasse personalizada "
"não fornece a entrada ``__classcell__`` no espaço de nomes passado para "
"``type.__new__``. Uma :exc:`DeprecationWarning` era emitida no Python "
"3.6-3.7. (Contribuição de Serhiy Storchaka em :issue:`23722`.)"

#: ../../whatsnew/3.8.rst:1919
msgid ""
"The :class:`cProfile.Profile` class can now be used as a context manager. "
"(Contributed by Scott Sanderson in :issue:`29235`.)"
msgstr ""
"A classe :class:`cProfile.Profile` agora pode ser usada como um gerenciador "
"de contexto. (Contribuição de Scott Sanderson em :issue:`29235`.)"

#: ../../whatsnew/3.8.rst:1922
msgid ""
":func:`shutil.copyfile`, :func:`shutil.copy`, :func:`shutil.copy2`, :func:"
"`shutil.copytree` and :func:`shutil.move` use platform-specific \"fast-"
"copy\" syscalls (see :ref:`shutil-platform-dependent-efficient-copy-"
"operations` section)."
msgstr ""
":func:`shutil.copyfile`, :func:`shutil.copy`, :func:`shutil.copy2`, :func:"
"`shutil.copytree` e :func:`shutil.copytree` usam chamadas de sistema de "
"\"cópia rápido\" específica da plataforma (veja a seção :ref:`shutil-"
"platform-dependent-efficient-copy-operations`)."

#: ../../whatsnew/3.8.rst:1927
msgid ""
":func:`shutil.copyfile` default buffer size on Windows was changed from 16 "
"KiB to 1 MiB."
msgstr ""
"O tamanho padrão do buffer de :func:`shutil.copyfile` no Windows foi "
"alterado de 16 KiB para 1 MiB."

#: ../../whatsnew/3.8.rst:1930
msgid ""
"The ``PyGC_Head`` struct has changed completely.  All code that touched the "
"struct member should be rewritten.  (See :issue:`33597`.)"
msgstr ""
"A estrutura de ``PyGC_Head`` mudou completamente. Todo o código que tocava "
"no membro struct deve ser reescrito. (Veja :issue:`33597`.)"

#: ../../whatsnew/3.8.rst:1933
msgid ""
"The :c:type:`PyInterpreterState` struct has been moved into the \"internal\" "
"header files (specifically Include/internal/pycore_pystate.h).  An opaque "
"``PyInterpreterState`` is still available as part of the public API (and "
"stable ABI).  The docs indicate that none of the struct's fields are public, "
"so we hope no one has been using them.  However, if you do rely on one or "
"more of those private fields and have no alternative then please open a BPO "
"issue.  We'll work on helping you adjust (possibly including adding accessor "
"functions to the public API).  (See :issue:`35886`.)"
msgstr ""
"A estrutura de :c:type:`PyInterpreterState` foi movida para os arquivos de "
"cabeçalho \"internal\" (especificamente Include/internal/pycore_pystate.h). "
"Um ``PyInterpreterState`` opaco ainda está disponível como parte da API "
"pública (e ABI estável). Os documentos indicam que nenhum dos campos da "
"estrutura é público, por isso esperamos que ninguém os tenha usado. No "
"entanto, se você confia em um ou mais desses campos em particular e não "
"tiver alternativa, abra um relatório de erro no BPO. Vamos trabalhar para "
"ajudá-lo a ajustar (possivelmente incluindo a adição de funções de acessador "
"à API pública). (Veja :issue:`35886`.)"

#: ../../whatsnew/3.8.rst:1943
msgid ""
"The :meth:`mmap.flush() <mmap.mmap.flush>` method now returns ``None`` on "
"success and raises an exception on error under all platforms.  Previously, "
"its behavior was platform-dependent: a nonzero value was returned on "
"success; zero was returned on error under Windows.  A zero value was "
"returned on success; an exception was raised on error under Unix. "
"(Contributed by Berker Peksag in :issue:`2122`.)"
msgstr ""
"O método :meth:`mmap.flush() <mmap.mmap.flush>` agora retorna ``None`` com "
"êxito e levanta uma exceção no erro em todas as plataformas. Anteriormente, "
"seu comportamento dependia da plataforma: um valor diferente de zero era "
"retornado com êxito; zero era retornado com erro no Windows. Um valor zero "
"era retornado com sucesso; uma exceção era levanta no caso de erro no Unix. "
"(Contribuição de Berker Peksag em :issue:`2122`.)"

#: ../../whatsnew/3.8.rst:1950
msgid ""
":mod:`xml.dom.minidom` and :mod:`xml.sax` modules no longer process external "
"entities by default. (Contributed by Christian Heimes in :issue:`17239`.)"
msgstr ""
"Os módulos :mod:`xml.dom.minidom` e :mod:`xml.sax` não mais processam "
"entidades externas por padrão. (Contribuição de Christian Heimes em :issue:"
"`17239`.)"

#: ../../whatsnew/3.8.rst:1954
msgid ""
"Deleting a key from a read-only :mod:`dbm` database (:mod:`dbm.dumb`, :mod:"
"`dbm.gnu` or :mod:`dbm.ndbm`) raises :attr:`error` (:exc:`dbm.dumb.error`, :"
"exc:`dbm.gnu.error` or :exc:`dbm.ndbm.error`) instead of :exc:`KeyError`. "
"(Contributed by Xiang Zhang in :issue:`33106`.)"
msgstr ""
"A exclusão de uma chave de um banco de dados somente leitura :mod:`dbm` (:"
"mod:`dbm.dumb`, :mod:`dbm.gnu` ou :mod:`dbm.ndbm`) levanta :attr:`error` (:"
"exc:`dbm.dumb.error`, :exc:`dbm.gnu.error` ou :exc:`dbm.ndbm.error`) em vez "
"de :exc:`KeyError`. (Contribuição de Xiang Zhang em :issue:`33106`.)"

#: ../../whatsnew/3.8.rst:1959
msgid ""
"Simplified AST for literals.  All constants will be represented as :class:"
"`ast.Constant` instances.  Instantiating old classes ``Num``, ``Str``, "
"``Bytes``, ``NameConstant`` and ``Ellipsis`` will return an instance of "
"``Constant``. (Contributed by Serhiy Storchaka in :issue:`32892`.)"
msgstr ""
"AST foi simplificado para literais. Todas as constantes serão representadas "
"como instâncias de :class:`ast.Constant`. Instanciar classes antigas "
"``Num``, ``Str``, ``Bytes``, ``NameConstant`` e ``Ellipsis`` retornará uma "
"instância de ``Constant``. (Contribuição de Serhiy Storchaka em :issue:"
"`32892`.)"

#: ../../whatsnew/3.8.rst:1975
msgid ""
"The function :func:`asyncio.wait_for` now correctly waits for cancellation "
"when using an instance of :class:`asyncio.Task`. Previously, upon reaching "
"*timeout*, it was cancelled and immediately returned. (Contributed by Elvis "
"Pranskevichus in :issue:`32751`.)"
msgstr ""
"A função :func:`asyncio.wait_for` agora aguarda corretamente o cancelamento "
"ao usar uma instância de :class:`asyncio.Task`. Anteriormente, ao atingir "
"tempo limite, ele era cancelado e devolvido imediatamente. (Contribuição de "
"Elvis Pranskevichus em :issue:`32751`.)"

#: ../../whatsnew/3.8.rst:1980
msgid ""
"The function :func:`asyncio.BaseTransport.get_extra_info` now returns a safe "
"to use socket object when 'socket' is passed to the *name* parameter. "
"(Contributed by Yury Selivanov in :issue:`37027`.)"
msgstr ""
"A função :func:`asyncio.BaseTransport.get_extra_info` agora retorna um "
"objeto soquete seguro de usar quando 'socket' é passado para o parâmetro "
"*name*. (Contribuição de Yury Selivanov em :issue:`37027`.)"

#: ../../whatsnew/3.8.rst:1984
msgid ":class:`asyncio.BufferedProtocol` has graduated to the stable API."
msgstr ":class:`asyncio.BufferedProtocol` foi promovida a API estável."

#: ../../whatsnew/3.8.rst:1988
msgid ""
"DLL dependencies for extension modules and DLLs loaded with :mod:`ctypes` on "
"Windows are now resolved more securely. Only the system paths, the directory "
"containing the DLL or PYD file, and directories added with :func:`~os."
"add_dll_directory` are searched for load-time dependencies. Specifically, :"
"envvar:`PATH` and the current working directory are no longer used, and "
"modifications to these will no longer have any effect on normal DLL "
"resolution. If your application relies on these mechanisms, you should check "
"for :func:`~os.add_dll_directory` and if it exists, use it to add your DLLs "
"directory while loading your library. Note that Windows 7 users will need to "
"ensure that Windows Update KB2533623 has been installed (this is also "
"verified by the installer). (Contributed by Steve Dower in :issue:`36085`.)"
msgstr ""
"As dependências de DLL para módulos de extensão e DLLs carregadas com :mod:"
"`ctypes` no Windows agora são resolvidas com mais segurança. Somente os "
"caminhos do sistema, o diretório que contém o arquivo DLL ou PYD e os "
"diretórios adicionados com :func:`~os.add_dll_directory` são pesquisados por "
"dependências de tempo de carregamento. Especificamente, :envvar:`PATH` e o "
"diretório de trabalho atual não são mais usados, e as modificações nelas não "
"terão mais efeito na resolução normal da DLL. Se seu aplicativo conta com "
"esses mecanismos, você deve verificar :func:`~os.add_dll_directory` e, se "
"existir, use-o para adicionar seu diretório DLLs ao carregar sua biblioteca. "
"Observe que os usuários do Windows 7 precisarão garantir que o Windows "
"Update KB2533623 esteja instalado (isso também é verificado pelo "
"instalador). (Contribuição de Steve Dower em :issue:`36085`.)"

#: ../../whatsnew/3.8.rst:2001
msgid ""
"The header files and functions related to pgen have been removed after its "
"replacement by a pure Python implementation. (Contributed by Pablo Galindo "
"in :issue:`36623`.)"
msgstr ""
"Os arquivos de cabeçalho e as funções relacionadas ao pgen foram removidos "
"após sua substituição por uma implementação pura do Python. (Contribuição de "
"Pablo Galindo em :issue:`36623`.)"

#: ../../whatsnew/3.8.rst:2005
msgid ""
":class:`types.CodeType` has a new parameter in the second position of the "
"constructor (*posonlyargcount*) to support positional-only arguments defined "
"in :pep:`570`. The first argument (*argcount*) now represents the total "
"number of positional arguments (including positional-only arguments). The "
"new ``replace()`` method of :class:`types.CodeType` can be used to make the "
"code future-proof."
msgstr ""
":class:`types.CodeType` possui um novo parâmetro na segunda posição do "
"construtor (*posonlyargcount *) para suportar argumentos apenas de posição "
"definidos em :pep:`570`. O primeiro argumento (*argcount*) agora representa "
"o número total de argumentos posicionais (incluindo argumentos somente "
"posicionais). O novo método ``replace()`` de :class:`types.CodeType` pode "
"ser usado para tornar o código à prova de futuro."

#: ../../whatsnew/3.8.rst:2012
msgid ""
"The parameter ``digestmod`` for :func:`hmac.new` no longer uses the MD5 "
"digest by default."
msgstr ""
"O parâmetro ``digestmod`` para :func:`hmac.new` não usa mais o resumo MD5 "
"por padrão."

#: ../../whatsnew/3.8.rst:2016
msgid "Changes in the C API"
msgstr "Alterações na API C"

#: ../../whatsnew/3.8.rst:2018
msgid ""
"The :c:struct:`PyCompilerFlags` structure got a new *cf_feature_version* "
"field. It should be initialized to ``PY_MINOR_VERSION``. The field is "
"ignored by default, and is used if and only if ``PyCF_ONLY_AST`` flag is set "
"in *cf_flags*. (Contributed by Guido van Rossum in :issue:`35766`.)"
msgstr ""
"A estrutura :c:struct:`PyCompilerFlags` recebeu um novo campo "
"*cf_feature_version*. Ele deve ser inicializado para ``PY_MINOR_VERSION``. O "
"campo é ignorado por padrão e é usado se e somente se o sinalizador "
"``PyCF_ONLY_AST`` estiver definido em *cf_flags*. (Contribuição de Guido van "
"Rossum em :issue:`35766`.)"

#: ../../whatsnew/3.8.rst:2024
msgid ""
"The :c:func:`!PyEval_ReInitThreads` function has been removed from the C "
"API. It should not be called explicitly: use :c:func:`PyOS_AfterFork_Child` "
"instead. (Contributed by Victor Stinner in :issue:`36728`.)"
msgstr ""
"A função :c:func:`!PyEval_ReInitThreads` foi removida da API C. Não deve ser "
"chamada explicitamente: use :c:func:`PyOS_AfterFork_Child`. (Contribuição de "
"Victor Stinner em :issue:`36728`.)"

#: ../../whatsnew/3.8.rst:2029
msgid ""
"On Unix, C extensions are no longer linked to libpython except on Android "
"and Cygwin. When Python is embedded, ``libpython`` must not be loaded with "
"``RTLD_LOCAL``, but ``RTLD_GLOBAL`` instead. Previously, using "
"``RTLD_LOCAL``, it was already not possible to load C extensions which were "
"not linked to ``libpython``, like C extensions of the standard library built "
"by the ``*shared*`` section of ``Modules/Setup``. (Contributed by Victor "
"Stinner in :issue:`21536`.)"
msgstr ""
"No Unix, as extensões C não estão mais vinculadas ao libpython, exceto no "
"Android e Cygwin. Quando o Python é incorporado, ``libpython`` não deve ser "
"carregado com ``RTLD_LOCAL``, mas ``RTLD_GLOBAL``. Anteriormente, usando "
"``RTLD_LOCAL``, já não era possível carregar extensões C que não estavam "
"vinculadas a ``libpython``, como extensões C da biblioteca padrão criada "
"pela seção ``*shared*`` de ``Modules/Setup``. (Contribuição de Victor "
"Stinner em :issue:`21536`.)"

#: ../../whatsnew/3.8.rst:2037
msgid ""
"Use of ``#`` variants of formats in parsing or building value (e.g. :c:func:"
"`PyArg_ParseTuple`, :c:func:`Py_BuildValue`, :c:func:"
"`PyObject_CallFunction`, etc.) without ``PY_SSIZE_T_CLEAN`` defined raises "
"``DeprecationWarning`` now. It will be removed in 3.10 or 4.0.  Read :ref:"
"`arg-parsing` for detail. (Contributed by Inada Naoki in :issue:`36381`.)"
msgstr ""
"O uso de variantes ``#`` de formatos na análise ou construção de valor (por "
"exemplo, :c:func:`PyArg_ParseTuple`, :c:func:`Py_BuildValue`, :c:func:"
"`PyObject_CallFunction`, etc.) sem ``PY_SSIZE_T_CLEAN`` definido agora "
"levanta ``DeprecationWarning``. Será removido em 3.10 ou 4.0. Leia :ref:`arg-"
"parsing` para detalhes. (Contribuição de Inada Naoki em :issue:`36381`.)"

#: ../../whatsnew/3.8.rst:2043
msgid ""
"Instances of heap-allocated types (such as those created with :c:func:"
"`PyType_FromSpec`) hold a reference to their type object. Increasing the "
"reference count of these type objects has been moved from :c:func:"
"`PyType_GenericAlloc` to the more low-level functions, :c:func:"
"`PyObject_Init` and :c:func:`PyObject_INIT`. This makes types created "
"through :c:func:`PyType_FromSpec` behave like other classes in managed code."
msgstr ""
"Instâncias de tipos alocados por heap (como aqueles criados com :c:func:"
"`PyType_FromSpec`) mantêm uma referência ao seu objeto de tipo. O aumento da "
"contagem de referências desses objetos de tipo foi movido de :c:func:"
"`PyType_GenericAlloc` para as funções de nível mais baixo, :c:func:"
"`PyObject_Init` e :c:func:`PyObject_INIT`. Isso faz com que os tipos criados "
"através de :c:func:`PyType_FromSpec` se comportem como outras classes no "
"código gerenciado."

#: ../../whatsnew/3.8.rst:2051
msgid ":ref:`Statically allocated types <static-types>` are not affected."
msgstr ":ref:`Tipos alocados estaticamente <static-types>` não são afetados."

#: ../../whatsnew/3.8.rst:2053
msgid ""
"For the vast majority of cases, there should be no side effect. However, "
"types that manually increase the reference count after allocating an "
"instance (perhaps to work around the bug) may now become immortal. To avoid "
"this, these classes need to call Py_DECREF on the type object during "
"instance deallocation."
msgstr ""
"Para a grande maioria dos casos, não deve haver efeito colateral. No "
"entanto, tipos que aumentam manualmente a contagem de referência após alocar "
"uma instância (talvez para solucionar o bug) agora podem se tornar imortais. "
"Para evitar isso, essas classes precisam chamar Py_DECREF no objeto de tipo "
"durante a desalocação da instância."

#: ../../whatsnew/3.8.rst:2059
msgid ""
"To correctly port these types into 3.8, please apply the following changes:"
msgstr ""
"Para portar corretamente esses tipos para o 3.8, aplique as seguintes "
"alterações:"

#: ../../whatsnew/3.8.rst:2062
msgid ""
"Remove :c:macro:`Py_INCREF` on the type object after allocating an instance "
"- if any. This may happen after calling :c:macro:`PyObject_New`, :c:macro:"
"`PyObject_NewVar`, :c:func:`PyObject_GC_New`, :c:func:`PyObject_GC_NewVar`, "
"or any other custom allocator that uses :c:func:`PyObject_Init` or :c:func:"
"`PyObject_INIT`."
msgstr ""
"Remove :c:macro:`Py_INCREF` no objeto de tipo depois de alocar uma instância "
"-- se houver. Isso pode acontecer após a chamada de :c:macro:"
"`PyObject_New`, :c:macro:`PyObject_NewVar`, :c:func:`PyObject_GC_New`, :c:"
"func:`PyObject_GC_NewVar` ou qualquer outro alocador personalizado que use :"
"c:func:`PyObject_Init` ou :c:func:`PyObject_INIT`."

#: ../../whatsnew/3.8.rst:2069 ../../whatsnew/3.8.rst:2088
#: ../../whatsnew/3.8.rst:2107
msgid "Example:"
msgstr "Exemplo:"

#: ../../whatsnew/3.8.rst:2071
msgid ""
"static foo_struct *\n"
"foo_new(PyObject *type) {\n"
"    foo_struct *foo = PyObject_GC_New(foo_struct, (PyTypeObject *) type);\n"
"    if (foo == NULL)\n"
"        return NULL;\n"
"#if PY_VERSION_HEX < 0x03080000\n"
"    // Workaround for Python issue 35810; no longer necessary in Python 3.8\n"
"    PY_INCREF(type)\n"
"#endif\n"
"    return foo;\n"
"}"
msgstr ""

#: ../../whatsnew/3.8.rst:2085
msgid ""
"Ensure that all custom ``tp_dealloc`` functions of heap-allocated types "
"decrease the type's reference count."
msgstr ""
"Certifica-se de que todas as funções ``tp_dealloc`` personalizadas de tipos "
"alocados em heap diminuam a contagem de referências do tipo."

#: ../../whatsnew/3.8.rst:2090
msgid ""
"static void\n"
"foo_dealloc(foo_struct *instance) {\n"
"    PyObject *type = Py_TYPE(instance);\n"
"    PyObject_GC_Del(instance);\n"
"#if PY_VERSION_HEX >= 0x03080000\n"
"    // This was not needed before Python 3.8 (Python issue 35810)\n"
"    Py_DECREF(type);\n"
"#endif\n"
"}"
msgstr ""

#: ../../whatsnew/3.8.rst:2102
msgid "(Contributed by Eddie Elizondo in :issue:`35810`.)"
msgstr "(Contribuição de Eddie Elizondo em :issue:`35810`.)"

#: ../../whatsnew/3.8.rst:2104
msgid ""
"The :c:macro:`Py_DEPRECATED()` macro has been implemented for MSVC. The "
"macro now must be placed before the symbol name."
msgstr ""
"A macro :c:macro:`Py_DEPRECATED()` foi implementada para MSVC. A macro agora "
"deve ser colocada antes do nome do símbolo."

#: ../../whatsnew/3.8.rst:2109
msgid "Py_DEPRECATED(3.8) PyAPI_FUNC(int) Py_OldFunction(void);"
msgstr ""

#: ../../whatsnew/3.8.rst:2113
msgid "(Contributed by Zackery Spytz in :issue:`33407`.)"
msgstr "(Contribuição de Zackery Spytz em :issue:`33407`.)"

#: ../../whatsnew/3.8.rst:2115
msgid ""
"The interpreter does not pretend to support binary compatibility of "
"extension types across feature releases, anymore.  A :c:type:`PyTypeObject` "
"exported by a third-party extension module is supposed to have all the slots "
"expected in the current Python version, including :c:member:`~PyTypeObject."
"tp_finalize` (:c:macro:`Py_TPFLAGS_HAVE_FINALIZE` is not checked anymore "
"before reading :c:member:`~PyTypeObject.tp_finalize`)."
msgstr ""
"O interpretador não pretende mais dar suporte à compatibilidade binária de "
"tipos de extensão nas liberações de recursos. O :c:type:`PyTypeObject` "
"exportado por um módulo de extensão de terceiros deve ter todos os slots "
"esperados na versão atual do Python, incluindo :c:member:`~PyTypeObject."
"tp_finalize` (:c:macro:`Py_TPFLAGS_HAVE_FINALIZE` não é mais verificado "
"antes de ler :c:member:`~PyTypeObject.tp_finalize`)."

#: ../../whatsnew/3.8.rst:2122
msgid "(Contributed by Antoine Pitrou in :issue:`32388`.)"
msgstr "(Contribuição de Antoine Pitrou em :issue:`32388`.)"

#: ../../whatsnew/3.8.rst:2124
msgid ""
"The functions :c:func:`!PyNode_AddChild` and :c:func:`!PyParser_AddToken` "
"now accept two additional ``int`` arguments *end_lineno* and "
"*end_col_offset*."
msgstr ""
"As funções :c:func:`!PyNode_AddChild` e :c:func:`!PyParser_AddToken` agora "
"aceitam dois argumentos adicionais ``int`` *end_lineno* e *end_col_offset*."

#: ../../whatsnew/3.8.rst:2127
msgid ""
"The :file:`libpython38.a` file to allow MinGW tools to link directly "
"against :file:`python38.dll` is no longer included in the regular Windows "
"distribution. If you require this file, it may be generated with the "
"``gendef`` and ``dlltool`` tools, which are part of the MinGW binutils "
"package:"
msgstr ""
"O arquivo :file:`libpython38.a` para permitir que as ferramentas do MinGW se "
"vinculem diretamente a :file:`python38.dll` não está mais incluído na "
"distribuição regular do Windows. Se você precisar deste arquivo, ele poderá "
"ser gerado com as ferramentas ``gendef`` e ``dlltool``, que fazem parte do "
"pacote binutils do MinGW:"

#: ../../whatsnew/3.8.rst:2132
msgid ""
"gendef - python38.dll > tmp.def\n"
"dlltool --dllname python38.dll --def tmp.def --output-lib libpython38.a"
msgstr ""

#: ../../whatsnew/3.8.rst:2137
msgid ""
"The location of an installed :file:`pythonXY.dll` will depend on the "
"installation options and the version and language of Windows. See :ref:"
"`using-on-windows` for more information. The resulting library should be "
"placed in the same directory as :file:`pythonXY.lib`, which is generally "
"the :file:`libs` directory under your Python installation."
msgstr ""
"A localização de um arquivo :file:`pythonXY.dll` dependerá das opções de "
"instalação e da versão e idioma do Windows. Consulte :ref:`using-on-windows` "
"para mais informações. A biblioteca resultante deve ser colocada no mesmo "
"diretório que :file:`pythonXY.lib`, que geralmente é o diretório :file:"
"`libs` na sua instalação do Python."

#: ../../whatsnew/3.8.rst:2143
msgid "(Contributed by Steve Dower in :issue:`37351`.)"
msgstr "(Contribuição de Steve Dower em :issue:`37351`.)"

#: ../../whatsnew/3.8.rst:2147
msgid "CPython bytecode changes"
msgstr "Alterações de bytecode do CPython"

#: ../../whatsnew/3.8.rst:2149
msgid ""
"The interpreter loop  has been simplified by moving the logic of unrolling "
"the stack of blocks into the compiler.  The compiler emits now explicit "
"instructions for adjusting the stack of values and calling the cleaning-up "
"code for :keyword:`break`, :keyword:`continue` and :keyword:`return`."
msgstr ""
"O loop do interpretador foi simplificado movendo a lógica de desenrolar a "
"pilha de blocos no compilador. O compilador agora emite instruções "
"explícitas para ajustar a pilha de valores e chamar o código de limpeza "
"para :keyword:`break`, :keyword:`continue` e :keyword:`return`."

#: ../../whatsnew/3.8.rst:2155
msgid ""
"Removed opcodes :opcode:`BREAK_LOOP`, :opcode:`CONTINUE_LOOP`, :opcode:"
"`SETUP_LOOP` and :opcode:`SETUP_EXCEPT`.  Added new opcodes :opcode:"
"`ROT_FOUR`, :opcode:`BEGIN_FINALLY`, :opcode:`CALL_FINALLY` and :opcode:"
"`POP_FINALLY`.  Changed the behavior of :opcode:`END_FINALLY` and :opcode:"
"`WITH_CLEANUP_START`."
msgstr ""
"Removidos os códigos de operação :opcode:`BREAK_LOOP`, :opcode:"
"`CONTINUE_LOOP`, :opcode:`SETUP_LOOP` e :opcode:`SETUP_EXCEPT`. Adicionados "
"novos códigos de operação :opcode:`ROT_FOUR`, :opcode:`BEGIN_FINALLY`, :"
"opcode:`CALL_FINALLY` e :opcode:`POP_FINALLY`. Alterado o comportamento de :"
"opcode:`END_FINALLY` e :opcode:`WITH_CLEANUP_START`."

#: ../../whatsnew/3.8.rst:2161
msgid ""
"(Contributed by Mark Shannon, Antoine Pitrou and Serhiy Storchaka in :issue:"
"`17611`.)"
msgstr ""
"(Contribuição de Mark Shannon, Antoine Pitrou e Serhiy Storchaka em :issue:"
"`17611`.)"

#: ../../whatsnew/3.8.rst:2164
msgid ""
"Added new opcode :opcode:`END_ASYNC_FOR` for handling exceptions raised when "
"awaiting a next item in an :keyword:`async for` loop. (Contributed by Serhiy "
"Storchaka in :issue:`33041`.)"
msgstr ""
"Adicionado novo código de operação :opcode:`END_ASYNC_FOR` para lidar com "
"exceções geradas ao aguardar um próximo item em um loop :keyword:`async "
"for`. (Contribuição de Serhiy Storchaka em :issue:`33041`.)"

#: ../../whatsnew/3.8.rst:2168
msgid ""
"The :opcode:`MAP_ADD` now expects the value as the first element in the "
"stack and the key as the second element. This change was made so the key is "
"always evaluated before the value in dictionary comprehensions, as proposed "
"by :pep:`572`. (Contributed by Jörn Heissler in :issue:`35224`.)"
msgstr ""
"O :opcode:`MAP_ADD` agora espera o valor como o primeiro elemento na pilha e "
"a chave como o segundo elemento. Essa alteração foi feita para que a chave "
"seja sempre avaliada antes do valor na compreensão do dicionário, conforme "
"proposto em :pep:`572`. (Contribuição de Jörn Heissler em :issue:`35224`.)"

#: ../../whatsnew/3.8.rst:2175
msgid "Demos and Tools"
msgstr "Ferramentas e daemons"

#: ../../whatsnew/3.8.rst:2177
msgid ""
"Added a benchmark script for timing various ways to access variables: "
"``Tools/scripts/var_access_benchmark.py``. (Contributed by Raymond Hettinger "
"in :issue:`35884`.)"
msgstr ""
"Adicionado um script de benchmark para cronometrar várias maneiras de "
"acessar variáveis: ``Tools/scripts/var_access_benchmark.py``. (Contribuição "
"de Raymond Hettinger em :issue:`35884`.)"

#: ../../whatsnew/3.8.rst:2181
msgid "Here's a summary of performance improvements since Python 3.3:"
msgstr "Aqui está um resumo das melhorias de desempenho desde Python 3.3:"

#: ../../whatsnew/3.8.rst:2183
msgid ""
"Python version                       3.3     3.4     3.5     3.6     3.7     "
"3.8\n"
"--------------                       ---     ---     ---     ---     ---     "
"---\n"
"\n"
"Variable and attribute read access:\n"
"    read_local                       4.0     7.1     7.1     5.4     5.1     "
"3.9\n"
"    read_nonlocal                    5.3     7.1     8.1     5.8     5.4     "
"4.4\n"
"    read_global                     13.3    15.5    19.0    14.3    13.6     "
"7.6\n"
"    read_builtin                    20.0    21.1    21.6    18.5    19.0     "
"7.5\n"
"    read_classvar_from_class        20.5    25.6    26.5    20.7    19.5    "
"18.4\n"
"    read_classvar_from_instance     18.5    22.8    23.5    18.8    17.1    "
"16.4\n"
"    read_instancevar                26.8    32.4    33.1    28.0    26.3    "
"25.4\n"
"    read_instancevar_slots          23.7    27.8    31.3    20.8    20.8    "
"20.2\n"
"    read_namedtuple                 68.5    73.8    57.5    45.0    46.8    "
"18.4\n"
"    read_boundmethod                29.8    37.6    37.9    29.6    26.9    "
"27.7\n"
"\n"
"Variable and attribute write access:\n"
"    write_local                      4.6     8.7     9.3     5.5     5.3     "
"4.3\n"
"    write_nonlocal                   7.3    10.5    11.1     5.6     5.5     "
"4.7\n"
"    write_global                    15.9    19.7    21.2    18.0    18.0    "
"15.8\n"
"    write_classvar                  81.9    92.9    96.0   104.6   102.1    "
"39.2\n"
"    write_instancevar               36.4    44.6    45.8    40.0    38.9    "
"35.5\n"
"    write_instancevar_slots         28.7    35.6    36.1    27.3    26.6    "
"25.7\n"
"\n"
"Data structure read access:\n"
"    read_list                       19.2    24.2    24.5    20.8    20.8    "
"19.0\n"
"    read_deque                      19.9    24.7    25.5    20.2    20.6    "
"19.8\n"
"    read_dict                       19.7    24.3    25.7    22.3    23.0    "
"21.0\n"
"    read_strdict                    17.9    22.6    24.3    19.5    21.2    "
"18.9\n"
"\n"
"Data structure write access:\n"
"    write_list                      21.2    27.1    28.5    22.5    21.6    "
"20.0\n"
"    write_deque                     23.8    28.7    30.1    22.7    21.8    "
"23.5\n"
"    write_dict                      25.9    31.4    33.3    29.3    29.2    "
"24.7\n"
"    write_strdict                   22.9    28.4    29.9    27.5    25.2    "
"23.1\n"
"\n"
"Stack (or queue) operations:\n"
"    list_append_pop                144.2    93.4   112.7    75.4    74.2    "
"50.8\n"
"    deque_append_pop                30.4    43.5    57.0    49.4    49.2    "
"42.5\n"
"    deque_append_popleft            30.8    43.7    57.3    49.7    49.7    "
"42.8\n"
"\n"
"Timing loop:\n"
"    loop_overhead                    0.3     0.5     0.6     0.4     0.3     "
"0.3"
msgstr ""

#: ../../whatsnew/3.8.rst:2228
msgid ""
"The benchmarks were measured on an `Intel® Core™ i7-4960HQ processor "
"<https://ark.intel.com/content/www/us/en/ark/products/76088/intel-core-"
"i7-4960hq-processor-6m-cache-up-to-3-80-ghz.html>`_ running the macOS 64-bit "
"builds found at `python.org <https://www.python.org/downloads/macos/>`_. The "
"benchmark script displays timings in nanoseconds."
msgstr ""
"Os benchmarks foram medidos em um processador `Intel® Core™ i7-4960HQ "
"<https://ark.intel.com/content/www/us/en/ark/products/76088/intel-core-"
"i7-4960hq-processor-6m-cache-up-to-3-80-ghz.html>`_ nos sistemas macOS 64-"
"bit encontrados em `python.org <https://www.python.org/downloads/macos/>`_. "
"O script de benchmark exibe tempos em nanossegundos."

#: ../../whatsnew/3.8.rst:2237
msgid "Notable changes in Python 3.8.1"
msgstr "Alterações notáveis no Python 3.8.1"

#: ../../whatsnew/3.8.rst:2239
msgid ""
"Due to significant security concerns, the *reuse_address* parameter of :meth:"
"`asyncio.loop.create_datagram_endpoint` is no longer supported. This is "
"because of the behavior of the socket option ``SO_REUSEADDR`` in UDP. For "
"more details, see the documentation for ``loop.create_datagram_endpoint()``. "
"(Contributed by Kyle Stanley, Antoine Pitrou, and Yury Selivanov in :issue:"
"`37228`.)"
msgstr ""
"Devido a significativas preocupações de segurança, o parâmetro "
"*reuse_address* de :meth:`asyncio.loop.create_datagram_endpoint` não é mais "
"suportado. Isso ocorre devido ao comportamento da opção de soquete "
"``SO_REUSEADDR`` no UDP. Para mais detalhes, consulte a documentação de "
"``loop.create_datagram_endpoint()``. (Contribuição de Kyle Stanley, Antoine "
"Pitrou e Yury Selivanov em :issue:`37228`.)"

#: ../../whatsnew/3.8.rst:2247
msgid "Notable changes in Python 3.8.2"
msgstr "Alterações notáveis no Python 3.8.2"

#: ../../whatsnew/3.8.rst:2249
msgid ""
"Fixed a regression with the ``ignore`` callback of :func:`shutil.copytree`. "
"The argument types are now str and List[str] again. (Contributed by Manuel "
"Barkhau and Giampaolo Rodola in :gh:`83571`.)"
msgstr ""
"Corrigida uma regressão com o retorno de chamada ``ignore`` de :func:`shutil."
"copytree`. Os tipos de argumento agora são str e List[str] novamente. "
"(Contribuição de Manuel Barkhau e Giampaolo Rodola em :gh:`83571`.)"

#: ../../whatsnew/3.8.rst:2254
msgid "Notable changes in Python 3.8.3"
msgstr "Alterações notáveis no Python 3.8.3"

#: ../../whatsnew/3.8.rst:2256
msgid ""
"The constant values of future flags in the :mod:`__future__` module are "
"updated in order to prevent collision with compiler flags. Previously "
"``PyCF_ALLOW_TOP_LEVEL_AWAIT`` was clashing with ``CO_FUTURE_DIVISION``. "
"(Contributed by Batuhan Taskaya in :gh:`83743`)"
msgstr ""
"Os valores constantes dos futuros sinalizadores no módulo :mod:`__future__` "
"fpram atualizados para evitar colisão com os sinalizadores do compilador. "
"Anteriormente, ``PyCF_ALLOW_TOP_LEVEL_AWAIT`` estava colidindo com "
"``CO_FUTURE_DIVISION``. (Contribuição de Batuhan Taskaya em :gh:`83743`)"

#: ../../whatsnew/3.8.rst:2262
msgid "Notable changes in Python 3.8.8"
msgstr "Alterações notáveis no Python 3.8.8"

#: ../../whatsnew/3.8.rst:2264
msgid ""
"Earlier Python versions allowed using both ``;`` and ``&`` as query "
"parameter separators in :func:`urllib.parse.parse_qs` and :func:`urllib."
"parse.parse_qsl`.  Due to security concerns, and to conform with newer W3C "
"recommendations, this has been changed to allow only a single separator key, "
"with ``&`` as the default.  This change also affects :func:`cgi.parse` and :"
"func:`cgi.parse_multipart` as they use the affected functions internally. "
"For more details, please see their respective documentation. (Contributed by "
"Adam Goldschmidt, Senthil Kumaran and Ken Jin in :issue:`42967`.)"
msgstr ""
"Versões anteriores do Python permitiam o uso de ``;`` e ``&`` como "
"separadores de parâmetros de consulta nas funções :func:`urllib.parse."
"parse_qs` e :func:`urllib.parse.parse_qsl`. Devido a questões de segurança, "
"e em conformidade com as recomendações mais recentes do W3C, isso foi "
"alterado para permitir apenas uma única chave separadora, com ``&`` como "
"padrão. Esta mudança também afeta as funções :func:`cgi.parse` e :func:`cgi."
"parse_multipart` já que elas usam as funções afetadas internamente. Para "
"obter mais detalhes, consulte sua respectiva documentação. (Contribuição de "
"Adam Goldschmidt, Senthil Kumaran e Ken Jin em :issue:`42967`.)"

#: ../../whatsnew/3.8.rst:2275
msgid "Notable changes in Python 3.8.9"
msgstr "Alterações notáveis no Python 3.8.9"

#: ../../whatsnew/3.8.rst:2277
msgid ""
"A security fix alters the :class:`ftplib.FTP` behavior to not trust the IPv4 "
"address sent from the remote server when setting up a passive data channel.  "
"We reuse the ftp server IP address instead.  For unusual code requiring the "
"old behavior, set a ``trust_server_pasv_ipv4_address`` attribute on your FTP "
"instance to ``True``.  (See :gh:`87451`)"
msgstr ""
"Uma correção de segurança altera o comportamento :class:`ftplib.FTP` para "
"não confiar no endereço IPv4 enviado do servidor remoto ao configurar um "
"canal de dados passivo. Em vez disso, reutilizamos o endereço IP do servidor "
"ftp. Para códigos incomuns que requerem o comportamento antigo, defina um "
"atributo ``trust_server_pasv_ipv4_address`` em sua instância de FTP para "
"``True``. (Veja :gh:`87451`)"

#: ../../whatsnew/3.8.rst:2284 ../../whatsnew/3.8.rst:2304
msgid "Notable changes in Python 3.8.10"
msgstr "Alterações notáveis no Python 3.8.10"

#: ../../whatsnew/3.8.rst:2287
msgid "macOS 11.0 (Big Sur) and Apple Silicon Mac support"
msgstr "Suporte a macOS 11.0 (Big Sur) e Apple Silicon Mac"

#: ../../whatsnew/3.8.rst:2289
msgid ""
"As of 3.8.10, Python now supports building and running on macOS 11 (Big Sur) "
"and on Apple Silicon Macs (based on the ``ARM64`` architecture). A new "
"universal build variant, ``universal2``, is now available to natively "
"support both ``ARM64`` and ``Intel 64`` in one set of executables. Note that "
"support for \"weaklinking\", building binaries targeted for newer versions "
"of macOS that will also run correctly on older versions by testing at "
"runtime for missing features, is not included in this backport from Python "
"3.9; to support a range of macOS versions, continue to target for and build "
"on the oldest version in the range."
msgstr ""
"A partir do 3.8.10, Python oferece suporte total à construção e execução no "
"macOS 11 (Big Sur) e no Apple Silicon Macs (baseado na arquitetura "
"``ARM64``). Uma nova variante de compilação universal, ``universal2``, está "
"agora disponível com suporte nativo para ``ARM64`` e ``Intel 64`` em um "
"conjunto de executáveis. Observe que suporte para \"ligação fraca\", criar "
"binários direcionados para versões mais recentes do macOS que também serão "
"executados corretamente em versões mais antigas através da verificação em "
"tempo de execução por recursos ausentes, não está mais incluída de forma "
"retroativa do Python 3.9; para oferece suporte a uma gama de versões do "
"macOS, continue a visar e a desenvolver para a versão mais antiga do "
"intervalo."

#: ../../whatsnew/3.8.rst:2299
msgid ""
"(Originally contributed by Ronald Oussoren and Lawrence D'Anna in :gh:"
"`85272`, with fixes by FX Coudert and Eli Rykoff, and backported to 3.8 by "
"Maxime Bélanger and Ned Deily)"
msgstr ""
"(Contribuição original de Ronald Oussoren e Lawrence D'Anna em :gh:`85272`, "
"com correções de FX Coudert e Eli Rykoff, e portado para a versão 3.8 por "
"Maxime Bélanger e Ned Deily)"

#: ../../whatsnew/3.8.rst:2307
msgid "urllib.parse"
msgstr "urllib.parse"

#: ../../whatsnew/3.8.rst:2309
msgid ""
"The presence of newline or tab characters in parts of a URL allows for some "
"forms of attacks. Following the WHATWG specification that updates :rfc:"
"`3986`, ASCII newline ``\\n``, ``\\r`` and tab ``\\t`` characters are "
"stripped from the URL by the parser in :mod:`urllib.parse` preventing such "
"attacks. The removal characters are controlled by a new module level "
"variable ``urllib.parse._UNSAFE_URL_BYTES_TO_REMOVE``. (See :issue:`43882`)"
msgstr ""
"A presença de caracteres de nova linha ou tab em partes de um URL permite "
"algumas formas de ataques. Seguindo a especificação WHATWG que atualiza :rfc:"
"`3986`, nova linha ASCII ``\\n``, ``\\r`` e os caracteres de tabulação "
"``\\t`` são retirados da URL pelo analisador sintático em :mod:`urllib."
"parse` impedindo tais ataques. Os caracteres de remoção são controlados por "
"uma nova variável de nível de módulo ``urllib.parse."
"_UNSAFE_URL_BYTES_TO_REMOVE``. (Veja :issue:`43882`)"

#: ../../whatsnew/3.8.rst:2318
msgid "Notable changes in Python 3.8.12"
msgstr "Alterações notáveis no Python 3.8.12"

#: ../../whatsnew/3.8.rst:2323
msgid ""
"Starting with Python 3.8.12 the :mod:`ipaddress` module no longer accepts "
"any leading zeros in IPv4 address strings. Leading zeros are ambiguous and "
"interpreted as octal notation by some libraries. For example the legacy "
"function :func:`socket.inet_aton` treats leading zeros as octal notation. "
"glibc implementation of modern :func:`~socket.inet_pton` does not accept any "
"leading zeros."
msgstr ""
"A partir do Python 3.8.12, o módulo :mod:`ipaddress` não aceita mais zeros à "
"esquerda em strings de endereço IPv4. Os zeros à esquerda são ambíguos e "
"interpretados como notação octal por algumas bibliotecas. Por exemplo, a "
"função legada :func:`socket.inet_aton` trata os zeros à esquerda como "
"notação octal. A implementação glibc de :func:`~socket.inet_pton` moderna "
"não aceita nenhum zeros à esquerda."

#: ../../whatsnew/3.8.rst:2330
msgid ""
"(Originally contributed by Christian Heimes in :issue:`36384`, and "
"backported to 3.8 by Achraf Merzouki.)"
msgstr ""
"(Originalmente contribuição de Christian Heimes em :issue:`36384` e backport "
"para 3.8 por Achraf Merzouki.)"

#: ../../whatsnew/3.8.rst:2334
msgid "Notable security feature in 3.8.14"
msgstr "Recursos de segurança notáveis no 3.8.14"

#: ../../whatsnew/3.8.rst:2336
msgid ""
"Converting between :class:`int` and :class:`str` in bases other than 2 "
"(binary), 4, 8 (octal), 16 (hexadecimal), or 32 such as base 10 (decimal) "
"now raises a :exc:`ValueError` if the number of digits in string form is "
"above a limit to avoid potential denial of service attacks due to the "
"algorithmic complexity. This is a mitigation for :cve:`2020-10735`. This "
"limit can be configured or disabled by environment variable, command line "
"flag, or :mod:`sys` APIs. See the :ref:`integer string conversion length "
"limitation <int_max_str_digits>` documentation.  The default limit is 4300 "
"digits in string form."
msgstr ""
"Converter entre :class:`int` e :class:`str` em bases diferentes de 2 "
"(binário), 4, 8 (octal), 16 (hexadecimal) ou 32 como base 10 (decimal) agora "
"levanta uma exceção :exc:`ValueError` se o número de dígitos em forma de "
"string estiver acima de um limite para evitar possíveis ataques de negação "
"de serviço devido à complexidade algorítmica. Esta é uma mitigação para :cve:"
"`2020-10735`. Este limite pode ser configurado ou desabilitado por variável "
"de ambiente, sinalizador de linha de comando ou APIs de :mod:`sys`. Veja a "
"documentação de :ref:`limitação de comprimento de conversão de string "
"inteira <int_max_str_digits>`. O limite padrão é de 4300 dígitos em forma de "
"string."

#: ../../whatsnew/3.8.rst:2347
msgid "Notable changes in 3.8.17"
msgstr "Alterações notáveis no 3.8.17"

#: ../../whatsnew/3.8.rst:2352
msgid ""
"The extraction methods in :mod:`tarfile`, and :func:`shutil.unpack_archive`, "
"have a new a *filter* argument that allows limiting tar features than may be "
"surprising or dangerous, such as creating files outside the destination "
"directory. See :ref:`tarfile-extraction-filter` for details. In Python 3.12, "
"use without the *filter* argument will show a :exc:`DeprecationWarning`. In "
"Python 3.14, the default will switch to ``'data'``. (Contributed by Petr "
"Viktorin in :pep:`706`.)"
msgstr ""
"Os métodos de extração em :mod:`tarfile` e :func:`shutil.unpack_archive`, "
"têm um novo argumento *filter* que permite limitar recursos do tar que podem "
"ser surpreendentes ou perigosos, como criar arquivos fora do diretório de "
"destino. Veja :ref:`tarfile-extraction-filter` para detalhes. No Python "
"3.12, usar sem o argumento *filter* mostrará um :exc:`DeprecationWarning`. "
"No Python 3.14, o padrão mudará para ``'data'``. (Contribuição de Petr "
"Viktorin em :pep:`706`.)"
