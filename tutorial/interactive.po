# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Welington Carlos <wcarlos3@gmail.com>, 2021
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2021
# Rafael Fontenelle <rffontenelle@gmail.com>, 2023
# Adorilson Bezerra <adorilson@gmail.com>, 2023
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-17 14:16+0000\n"
"PO-Revision-Date: 2021-06-28 01:50+0000\n"
"Last-Translator: Adorilson Bezerra <adorilson@gmail.com>, 2023\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../tutorial/interactive.rst:5
msgid "Interactive Input Editing and History Substitution"
msgstr "Edição de entrada interativa e substituição de histórico"

#: ../../tutorial/interactive.rst:7
msgid ""
"Some versions of the Python interpreter support editing of the current input "
"line and history substitution, similar to facilities found in the Korn shell "
"and the GNU Bash shell.  This is implemented using the `GNU Readline`_ "
"library, which supports various styles of editing.  This library has its own "
"documentation which we won't duplicate here."
msgstr ""
"Algumas versões do interpretador Python suportam a edição da linha de "
"entrada atual e a substituição da história, semelhante às habilidade "
"encontradas no shell Korn e no shell GNU Bash. Isso é implementado usando a "
"biblioteca `GNU Readline`_, que oferece suporte a vários estilos de edição. "
"Esta biblioteca possui sua própria documentação, que não vamos duplicar aqui."

#: ../../tutorial/interactive.rst:17
msgid "Tab Completion and History Editing"
msgstr "Tab Completion e Histórico de Edição"

#: ../../tutorial/interactive.rst:19
msgid ""
"Completion of variable and module names is :ref:`automatically enabled "
"<rlcompleter-config>` at interpreter startup so that the :kbd:`Tab` key "
"invokes the completion function; it looks at Python statement names, the "
"current local variables, and the available module names.  For dotted "
"expressions such as ``string.a``, it will evaluate the expression up to the "
"final ``'.'`` and then suggest completions from the attributes of the "
"resulting object.  Note that this may execute application-defined code if an "
"object with a :meth:`~object.__getattr__` method is part of the expression.  "
"The default configuration also saves your history into a file named :file:`."
"python_history` in your user directory. The history will be available again "
"during the next interactive interpreter session."
msgstr ""
"A conclusão dos nomes de variáveis e módulos é :ref:`ativado automaticamente "
"<rlcompleter-config>` na inicialização do interpretador para que a tecla :"
"kbd:`Tab` invoque a função de conclusão. Ele analisa os nomes das instruções "
"Python, as variáveis locais atuais e os nomes dos módulos disponíveis. Para "
"expressões pontilhadas como ``string.a``, ele avaliará a expressão até o "
"``'.'`` final e então sugerirá conclusões dos atributos do objeto "
"resultante. Observe que isso pode executar o código definido pelo aplicativo "
"se um objeto com um método :meth:`~object.__getattr__` faz parte da "
"expressão. A configuração padrão também guarda seu histórico em um arquivo "
"chamado :file:`.python_history` no seu diretório de usuário. O histórico "
"estará disponível novamente durante a próxima sessão de interpretação "
"interativa."

#: ../../tutorial/interactive.rst:36
msgid "Alternatives to the Interactive Interpreter"
msgstr "Alternativas ao interpretador interativo"

#: ../../tutorial/interactive.rst:38
msgid ""
"This facility is an enormous step forward compared to earlier versions of "
"the interpreter; however, some wishes are left: It would be nice if the "
"proper indentation were suggested on continuation lines (the parser knows if "
"an indent token is required next).  The completion mechanism might use the "
"interpreter's symbol table.  A command to check (or even suggest) matching "
"parentheses, quotes, etc., would also be useful."
msgstr ""
"Esta facilidade é um enorme passo em frente em comparação com as versões "
"anteriores do interpretador; No entanto, alguns desejos são deixados: seria "
"bom se a indentação adequada fosse sugerida nas linhas de continuação (o "
"analisador sabe se é necessário um token de recuo). O mecanismo de conclusão "
"pode usar a tabela de símbolos do interpretador. Um comando para verificar "
"(ou mesmo sugerir) parênteses, aspas, etc., também seria útil."

#: ../../tutorial/interactive.rst:45
msgid ""
"One alternative enhanced interactive interpreter that has been around for "
"quite some time is IPython_, which features tab completion, object "
"exploration and advanced history management.  It can also be thoroughly "
"customized and embedded into other applications.  Another similar enhanced "
"interactive environment is bpython_."
msgstr ""
"Um interpretador interativo aprimorado e alternativo que existe há algum "
"tempo é o IPython_, que apresenta a conclusão da guia, a exploração de "
"objetos e o gerenciamento de histórico avançado. Também pode ser "
"completamente personalizado e incorporado em outras aplicações. Outro "
"ambiente interativo aprimorado similar é bpython_."
