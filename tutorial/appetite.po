# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-08 14:48+0000\n"
"PO-Revision-Date: 2024-05-11 00:34+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../tutorial/appetite.rst:5
msgid "Whetting Your Appetite"
msgstr "Abrindo seu apetite"

#: ../../tutorial/appetite.rst:7
msgid ""
"If you do much work on computers, eventually you find that there's some task "
"you'd like to automate.  For example, you may wish to perform a search-and-"
"replace over a large number of text files, or rename and rearrange a bunch "
"of photo files in a complicated way. Perhaps you'd like to write a small "
"custom database, or a specialized GUI application, or a simple game."
msgstr ""
"Se você trabalha bastante com computadores, eventualmente perceberá que há "
"alguma tarefa que gostaria de automatizar. Por exemplo, pode querer realizar "
"uma busca e substituição em um grande número de arquivos de texto ou "
"renomear e reorganizar um conjunto de fotos de maneira complexa. Talvez "
"deseje criar um pequeno banco de dados personalizado, uma aplicação GUI "
"especializada ou um jogo simples."

#: ../../tutorial/appetite.rst:13
msgid ""
"If you're a professional software developer, you may have to work with "
"several C/C++/Java libraries but find the usual write/compile/test/re-"
"compile cycle is too slow.  Perhaps you're writing a test suite for such a "
"library and find writing the testing code a tedious task.  Or maybe you've "
"written a program that could use an extension language, and you don't want "
"to design and implement a whole new language for your application."
msgstr ""
"Se você é um desenvolvedor de software profissional, pode ter que trabalhar "
"com várias bibliotecas C/C++/Java, mas o tradicional ciclo escrever/compilar/"
"testar/recompilar é muito lento. Talvez você esteja escrevendo um conjunto "
"de testes para uma biblioteca e está achando tedioso codificar os testes. Ou "
"talvez você tenha escrito um programa que poderia utilizar uma linguagem de "
"extensão, e você não quer conceber e implementar toda uma nova linguagem "
"para sua aplicação."

#: ../../tutorial/appetite.rst:20
msgid "Python is just the language for you."
msgstr "Python é a linguagem para você."

#: ../../tutorial/appetite.rst:22
msgid ""
"You could write a Unix shell script or Windows batch files for some of these "
"tasks, but shell scripts are best at moving around files and changing text "
"data, not well-suited for GUI applications or games. You could write a C/C++/"
"Java program, but it can take a lot of development time to get even a first-"
"draft program.  Python is simpler to use, available on Windows, macOS, and "
"Unix operating systems, and will help you get the job done more quickly."
msgstr ""
"Você pode escrever um script shell do Unix ou arquivos batch do Windows para "
"algumas dessas tarefas, mas os scripts shell são melhores para mover "
"arquivos e alterar dados de texto, não são adequados para aplicações GUI ou "
"jogos. Você pode escrever um programa C/C++/Java, mas pode levar muito tempo "
"de desenvolvimento para obter até mesmo um primeiro rascunho de programa. O "
"Python é mais simples de usar, está disponível nos sistemas operacionais "
"Windows, macOS e Unix e ajudará você a terminar o trabalho mais rapidamente."

#: ../../tutorial/appetite.rst:29
msgid ""
"Python is simple to use, but it is a real programming language, offering "
"much more structure and support for large programs than shell scripts or "
"batch files can offer.  On the other hand, Python also offers much more "
"error checking than C, and, being a *very-high-level language*, it has high-"
"level data types built in, such as flexible arrays and dictionaries.  "
"Because of its more general data types Python is applicable to a much larger "
"problem domain than Awk or even Perl, yet many things are at least as easy "
"in Python as in those languages."
msgstr ""
"Python é fácil de usar, sem deixar de ser uma linguagem de programação de "
"verdade, oferecendo muito mais estruturação e suporte para programas "
"extensos do que shell scripts ou arquivos de lote oferecem. Por outro lado, "
"Python também oferece melhor verificação de erros do que C, e por ser uma "
"linguagem de *muito alto nível*, ela possui tipos nativos de alto nível, "
"tais como dicionários e vetores (arrays) flexíveis. Devido ao suporte nativo "
"a uma variedade de tipos de dados, Python é aplicável a um domínio de "
"problemas muito mais vasto do que Awk ou até mesmo Perl, ainda assim muitas "
"tarefas são pelo menos tão fáceis em Python quanto nessas linguagens."

#: ../../tutorial/appetite.rst:37
msgid ""
"Python allows you to split your program into modules that can be reused in "
"other Python programs.  It comes with a large collection of standard modules "
"that you can use as the basis of your programs --- or as examples to start "
"learning to program in Python.  Some of these modules provide things like "
"file I/O, system calls, sockets, and even interfaces to graphical user "
"interface toolkits like Tk."
msgstr ""
"Python permite que você organize seu programa em módulos que podem ser "
"reutilizados em outros programas escritos em Python. A linguagem provê uma "
"vasta coleção de módulos que podem ser utilizados como base para sua "
"aplicação --- ou como exemplos para estudo e aprofundamento. Alguns desses "
"módulos implementam manipulação de arquivos, chamadas do sistema, sockets, e "
"até mesmo acesso a bibliotecas de construção de interfaces gráficas, como Tk."

#: ../../tutorial/appetite.rst:44
msgid ""
"Python is an interpreted language, which can save you considerable time "
"during program development because no compilation and linking is necessary.  "
"The interpreter can be used interactively, which makes it easy to experiment "
"with features of the language, to write throw-away programs, or to test "
"functions during bottom-up program development. It is also a handy desk "
"calculator."
msgstr ""
"Python é uma linguagem interpretada, por isso você pode economizar um tempo "
"considerável durante o desenvolvimento, uma vez que não há necessidade de "
"compilação e ligação (*linking*). O interpretador pode ser usado "
"interativamente, o que torna fácil experimentar diversas características da "
"linguagem, escrever programas “descartáveis”, ou testar funções em um "
"desenvolvimento debaixo para cima (*bottom-up*). É também uma útil "
"calculadora de mesa."

#: ../../tutorial/appetite.rst:50
msgid ""
"Python enables programs to be written compactly and readably.  Programs "
"written in Python are typically much shorter than equivalent C,  C++, or "
"Java programs, for several reasons:"
msgstr ""
"Python permite a escrita de programas compactos e legíveis. Programas "
"escritos em Python são tipicamente mais curtos do que seus equivalentes em "
"C, C++ ou Java, por diversas razões:"

#: ../../tutorial/appetite.rst:54
msgid ""
"the high-level data types allow you to express complex operations in a "
"single statement;"
msgstr ""
"os tipos de alto nível permitem que você expresse operações complexas em um "
"único comando;"

#: ../../tutorial/appetite.rst:57
msgid ""
"statement grouping is done by indentation instead of beginning and ending "
"brackets;"
msgstr ""
"a definição de bloco é feita por indentação ao invés de marcadores de início "
"e fim de bloco;"

#: ../../tutorial/appetite.rst:60
msgid "no variable or argument declarations are necessary."
msgstr "não há necessidade de declaração de variáveis ou parâmetros formais;"

#: ../../tutorial/appetite.rst:62
msgid ""
"Python is *extensible*: if you know how to program in C it is easy to add a "
"new built-in function or module to the interpreter, either to perform "
"critical operations at maximum speed, or to link Python programs to "
"libraries that may only be available in binary form (such as a vendor-"
"specific graphics library). Once you are really hooked, you can link the "
"Python interpreter into an application written in C and use it as an "
"extension or command language for that application."
msgstr ""
"Python é *extensível*: se você sabe como programar em C, é fácil adicionar "
"módulos ou funções embutidas diretamente no interpretador, seja para "
"desempenhar operações críticas em máxima velocidade, ou para vincular "
"programas Python a bibliotecas que só estejam disponíveis em formato binário "
"(como uma biblioteca gráfica de terceiros). Uma vez que você tenha sido "
"fisgado, você pode vincular o interpretador Python a uma aplicação escrita "
"em C e utilizá-la como linguagem de comandos ou extensão para esta aplicação."

#: ../../tutorial/appetite.rst:70
msgid ""
"By the way, the language is named after the BBC show \"Monty Python's Flying "
"Circus\" and has nothing to do with reptiles.  Making references to Monty "
"Python skits in documentation is not only allowed, it is encouraged!"
msgstr ""
"A propósito, a linguagem foi batizada a partir do famoso programa da BBC "
"“Monty Python’s Flying Circus” e não tem nada a ver com répteis. Fazer "
"referências a citações do programa na documentação não é só permitido, como "
"também é encorajado!"

#: ../../tutorial/appetite.rst:74
msgid ""
"Now that you are all excited about Python, you'll want to examine it in some "
"more detail.  Since the best way to learn a language is to use it, the "
"tutorial invites you to play with the Python interpreter as you read."
msgstr ""
"Agora que você se entusiasmou com o Python, vai querer conhecê-lo com mais "
"detalhes. Partindo do princípio que a melhor maneira de aprender uma "
"linguagem é usando-a, este tutorial lhe convida para fazê-lo com o "
"interpretador do Python enquanto você o lê."

#: ../../tutorial/appetite.rst:78
msgid ""
"In the next chapter, the mechanics of using the interpreter are explained.  "
"This is rather mundane information, but essential for trying out the "
"examples shown later."
msgstr ""
"No próximo capítulo, a mecânica de utilização do interpretador é explicada. "
"Essa informação, ainda que mundana, é essencial para a experimentação dos "
"exemplos apresentados mais tarde."

#: ../../tutorial/appetite.rst:82
msgid ""
"The rest of the tutorial introduces various features of the Python language "
"and system through examples, beginning with simple expressions, statements "
"and data types, through functions and modules, and finally touching upon "
"advanced concepts like exceptions and user-defined classes."
msgstr ""
"O resto do tutorial introduz diversos aspectos do sistema e linguagem Python "
"por intermédio de exemplos. Serão abordadas expressões simples, instruções, "
"tipos, funções e módulos. Finalmente, serão explicados alguns conceitos "
"avançados como exceções e classes definidas pelo usuário."
