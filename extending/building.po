# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-02 14:19+0000\n"
"PO-Revision-Date: 2021-06-28 00:51+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../extending/building.rst:7
msgid "Building C and C++ Extensions"
msgstr "Construindo extensões C e C++"

#: ../../extending/building.rst:9
msgid ""
"A C extension for CPython is a shared library (e.g. a ``.so`` file on Linux, "
"``.pyd`` on Windows), which exports an *initialization function*."
msgstr ""
"Uma extensão C para CPython é uma biblioteca compartilhada (por exemplo, um "
"arquivo ``.so`` no Linux, ``.pyd`` no Windows), que exporta uma *função de "
"inicialização*."

#: ../../extending/building.rst:12
msgid ""
"To be importable, the shared library must be available on :envvar:"
"`PYTHONPATH`, and must be named after the module name, with an appropriate "
"extension. When using setuptools, the correct filename is generated "
"automatically."
msgstr ""
"Para ser importável, a biblioteca compartilhada deve estar disponível em :"
"envvar:`PYTHONPATH`, e deve ser nomeada após o nome do módulo, com uma "
"extensão apropriada. Ao usar setuptools, o nome do arquivo correto é gerado "
"automaticamente."

#: ../../extending/building.rst:16
msgid "The initialization function has the signature:"
msgstr "A função de inicialização tem a assinatura:"

#: ../../extending/building.rst:20
msgid ""
"It returns either a fully initialized module, or a :c:type:`PyModuleDef` "
"instance. See :ref:`initializing-modules` for details."
msgstr ""
"Ela retorna um módulo totalmente inicializado ou uma instância de :c:type:"
"`PyModuleDef`. Veja :ref:`initializing-modules` para detalhes."

#: ../../extending/building.rst:25
msgid ""
"For modules with ASCII-only names, the function must be named "
"``PyInit_<modulename>``, with ``<modulename>`` replaced by the name of the "
"module. When using :ref:`multi-phase-initialization`, non-ASCII module names "
"are allowed. In this case, the initialization function name is "
"``PyInitU_<modulename>``, with ``<modulename>`` encoded using Python's "
"*punycode* encoding with hyphens replaced by underscores. In Python::"
msgstr ""
"Para módulos com nomes somente ASCII, a função deve ser nomeada "
"``PyInit_<nomemódulo>``, com ``<nomemódulo>`` substituído pelo nome do "
"módulo. Ao usar :ref:`multi-phase-initialization`, nomes de módulos não "
"ASCII são permitidos. Neste caso, o nome da função de inicialização é "
"``PyInitU_<nomemódulo>``, com ``<nomemódulo>`` codificado usando a "
"codificação *punycode* do Python com hifenes substituídos por sublinhados. "
"Em Python::"

#: ../../extending/building.rst:32
msgid ""
"def initfunc_name(name):\n"
"    try:\n"
"        suffix = b'_' + name.encode('ascii')\n"
"    except UnicodeEncodeError:\n"
"        suffix = b'U_' + name.encode('punycode').replace(b'-', b'_')\n"
"    return b'PyInit' + suffix"
msgstr ""
"def nome_func_iniciadora(nome):\n"
"    try:\n"
"        sufixo = b'_' + nome.encode('ascii')\n"
"    except UnicodeEncodeError:\n"
"        sufixo = b'U_' + nome.encode('punycode').replace(b'-', b'_')\n"
"    return b'PyInit' + sufixo"

#: ../../extending/building.rst:39
msgid ""
"It is possible to export multiple modules from a single shared library by "
"defining multiple initialization functions. However, importing them requires "
"using symbolic links or a custom importer, because by default only the "
"function corresponding to the filename is found. See the *\"Multiple modules "
"in one library\"* section in :pep:`489` for details."
msgstr ""
"É possível exportar vários módulos de uma única biblioteca compartilhada, "
"definindo várias funções de inicialização. No entanto, importá-los requer o "
"uso de links simbólicos ou um importador personalizado, porque por padrão "
"apenas a função correspondente ao nome do arquivo é encontrada. Veja a "
"seção  *\"Multiple modules in one library\"* na :pep:`489` para detalhes."

#: ../../extending/building.rst:52
msgid "Building C and C++ Extensions with setuptools"
msgstr "Construindo extensões C e C ++ com setuptools"

#: ../../extending/building.rst:54
msgid ""
"Python 3.12 and newer no longer come with distutils. Please refer to the "
"``setuptools`` documentation at https://setuptools.readthedocs.io/en/latest/"
"setuptools.html to learn more about how build and distribute C/C++ "
"extensions with setuptools."
msgstr ""
"O Python 3.12 e mais recente não vêm mais com distutils. Consulte a "
"documentação ``setuptools`` em https://setuptools.readthedocs.io/en/latest/"
"setuptools.html para saber mais sobre como construir e distribuir extensões "
"C/C++ com setuptools."
