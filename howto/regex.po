# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Marco Rougeth <marco@rougeth.com>, 2019
# Welington Carlos <wcarlos3@gmail.com>, 2019
# Ruan Aragão <ruanaragao2@gmail.com>, 2019
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2019
# Leticia Portella <leportella@gmail.com>, 2019
# Denis Vicentainer <denisvicentainer@gmail.com>, 2020
# i17obot <i17obot@rougeth.com>, 2020
# Rafael Fontenelle <rffontenelle@gmail.com>, 2021
# Adorilson Bezerra <adorilson@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-23 16:56+0000\n"
"PO-Revision-Date: 2019-09-01 03:38+0000\n"
"Last-Translator: Adorilson Bezerra <adorilson@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:5
msgid "Regular Expression HOWTO"
msgstr "Expressões Regulares HOWTO"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:0
msgid "Author"
msgstr "Autor"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:7
msgid "A.M. Kuchling <amk@amk.ca>"
msgstr "A.M. Kuchling <amk@amk.ca>"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rstNone
msgid "Abstract"
msgstr "Resumo"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:18
msgid ""
"This document is an introductory tutorial to using regular expressions in "
"Python with the :mod:`re` module.  It provides a gentler introduction than "
"the corresponding section in the Library Reference."
msgstr ""
"Este documento é um tutorial introdutório sobre expressões regulares em "
"Python com o módulo  :mod:`re`. Ele provê uma introdução mais tranquila  que "
"a seção correspondente à documentação do módulo. "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:24
msgid "Introduction"
msgstr "Introdução"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:26
msgid ""
"Regular expressions (called REs, or regexes, or regex patterns) are "
"essentially a tiny, highly specialized programming language embedded inside "
"Python and made available through the :mod:`re` module. Using this little "
"language, you specify the rules for the set of possible strings that you "
"want to match; this set might contain English sentences, or e-mail "
"addresses, or TeX commands, or anything you like.  You can then ask "
"questions such as \"Does this string match the pattern?\", or \"Is there a "
"match for the pattern anywhere in this string?\".  You can also use REs to "
"modify a string or to split it apart in various ways."
msgstr ""
"As expressões regulares (chamadas de REs, regexes, ou padrões de regex)\n"
"são, essencialmente, uma pequena linguagem de programação, altamente\n"
"especializada, embutida dentro do Python e disponibilizadas através do "
"módulo\n"
"re. Utilizando esta pequena linguagem, você especifica as regras para o "
"conjunto de\n"
"possíveis strings com as quais você deseja corresponder, este conjunto pode\n"
"conter frases em inglês, endereços de e-mail, comandos TeX ou qualquer coisa "
"que você\n"
"queira. Você pode então fazer perguntas como \"Será que esta string "
"corresponde\n"
"ao padrão?\" ou \"Existe uma correspondência para o padrão em qualquer lugar "
"nesta\n"
"string?\". Você também pode usar REs para modificar uma string ou dividi-la\n"
"de várias maneiras."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:35
msgid ""
"Regular expression patterns are compiled into a series of bytecodes which "
"are then executed by a matching engine written in C.  For advanced use, it "
"may be necessary to pay careful attention to how the engine will execute a "
"given RE, and write the RE in a certain way in order to produce bytecode "
"that runs faster. Optimization isn't covered in this document, because it "
"requires that you have a good understanding of the matching engine's "
"internals."
msgstr ""
"Padrões de expressões regulares são compilados em uma série de bytecodes que "
"são\n"
"então executados por um mecanismo de correspondência escrito em C. Para uso "
"avançado,\n"
"pode ser necessário prestar muita atenção à forma como o mecanismo irá "
"executar\n"
"uma RE informada, e escrever a RE de uma certa maneira, a fim de produzir um "
"bytecode que seja\n"
"executado de forma mais rápida. A otimização não é abordada neste documento, "
"porque ela requer que\n"
"você tenha um bom entendimento interno do mecanismo de correspondência."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:42
msgid ""
"The regular expression language is relatively small and restricted, so not "
"all possible string processing tasks can be done using regular expressions.  "
"There are also tasks that *can* be done with regular expressions, but the "
"expressions turn out to be very complicated.  In these cases, you may be "
"better off writing Python code to do the processing; while Python code will "
"be slower than an elaborate regular expression, it will also probably be "
"more understandable."
msgstr ""
"A linguagem de expressão regular é relativamente pequena e restrita, por "
"isso nem\n"
"todas as tarefas de processamento de strings possíveis podem ser feitas "
"usando\n"
"expressões regulares. Existem também tarefas que podem ser feitas com "
"expressões\n"
"regulares, mas as expressões acabam por ser tornar muito complicadas. Nestes "
"casos, pode\n"
"ser melhor para você escrever um código Python para fazer o processamento;\n"
"embora um código Python seja mais lento do que uma expressão regular "
"elaborada,\n"
"ele provavelmente será mais compreensível."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:51
msgid "Simple Patterns"
msgstr "Padrões Simples"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:53
msgid ""
"We'll start by learning about the simplest possible regular expressions.  "
"Since regular expressions are used to operate on strings, we'll begin with "
"the most common task: matching characters."
msgstr ""
"Vamos começar por aprender sobre as expressões regulares mais simples "
"possíveis.\n"
"Como as expressões regulares são usadas para operar em strings, vamos "
"começar\n"
"com a tarefa mais comum: de correspondência caracteres."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:57
msgid ""
"For a detailed explanation of the computer science underlying regular "
"expressions (deterministic and non-deterministic finite automata), you can "
"refer to almost any textbook on writing compilers."
msgstr ""
"Para uma explicação detalhada da ciência da computação referente a "
"expressões\n"
"regulares (autômatos finitos determinísticos e não-determinístico), você "
"pode consultar\n"
"a praticamente qualquer livro sobre a escrita de compiladores."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:63
msgid "Matching Characters"
msgstr "Caracteres Correspondentes"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:65
msgid ""
"Most letters and characters will simply match themselves.  For example, the "
"regular expression ``test`` will match the string ``test`` exactly.  (You "
"can enable a case-insensitive mode that would let this RE match ``Test`` or "
"``TEST`` as well; more about this later.)"
msgstr ""
"A maioria das letras e caracteres simplesmente irão corresponder entre si. "
"Por exemplo, a expressão regular ``teste``\n"
"irá combinar com a string ``teste`` totalmente. (Você pode habilitar o modo "
"de maiúsculas e minúsculas que faria com que\n"
"a RE corresponder com ``Test`` ou ``TEST`` também; veremos mais sobre isso "
"mais adiante.)"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:70
msgid ""
"There are exceptions to this rule; some characters are special :dfn:"
"`metacharacters`, and don't match themselves.  Instead, they signal that "
"some out-of-the-ordinary thing should be matched, or they affect other "
"portions of the RE by repeating them or changing their meaning.  Much of "
"this document is devoted to discussing various metacharacters and what they "
"do."
msgstr ""
"Há exceções a essa regra, alguns caracteres são metacaracteres especiais, e "
"não se\n"
"correspondem. Em vez disso, eles sinalizam que alguma coisa fora do normal "
"deve\n"
"ser correspondida, ou eles afetam outras partes da RE, repetindo-as ou "
"alterando seus\n"
"significados. Grande parte deste documento é dedicada à discussão de vários "
"metacaracteres\n"
"e o que eles fazem."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:76
msgid ""
"Here's a complete list of the metacharacters; their meanings will be "
"discussed in the rest of this HOWTO."
msgstr ""
"Aqui está a lista completa de metacaracteres; seus significados serão "
"discutidos ao longo deste documento."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:83
msgid ""
"The first metacharacters we'll look at are ``[`` and ``]``. They're used for "
"specifying a character class, which is a set of characters that you wish to "
"match.  Characters can be listed individually, or a range of characters can "
"be indicated by giving two characters and separating them by a ``'-'``.  For "
"example, ``[abc]`` will match any of the characters ``a``, ``b``, or ``c``; "
"this is the same as ``[a-c]``, which uses a range to express the same set of "
"characters.  If you wanted to match only lowercase letters, your RE would be "
"``[a-z]``."
msgstr ""
"O primeiro metacaractere que vamos olhar são os colchetes, ``[`` e ``]``. "
"Eles são usados para\n"
"especificar uma classe de caracteres, que é um conjunto de caracteres que "
"você\n"
"deseja corresponder. Os caracteres podem ser listados individualmente, ou "
"um\n"
"intervalo de caracteres pode ser indicado informando dois caracteres e "
"separando-os por\n"
"um ``-``. Por exemplo, ``[abc]`` irá corresponder a qualquer dos caracteres "
"``a``, ``b``, ``c`` ou, o que\n"
"é o mesmo que ``[a-c]``, que usa um intervalo de expressar o mesmo conjunto "
"de\n"
"caracteres. Se você quiser corresponder apenas letras minúsculas, a RE seria "
"``[a-z]``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:92
msgid ""
"Metacharacters are not active inside classes.  For example, ``[akm$]`` will "
"match any of the characters ``'a'``, ``'k'``, ``'m'``, or ``'$'``; ``'$'`` "
"is usually a metacharacter, but inside a character class it's stripped of "
"its special nature."
msgstr ""
"Metacaracteres não são ativos dentro classes ``[ ]``. Por exemplo, "
"``[akm$]`` irá\n"
"corresponder a qualquer um dos caracteres ``a``, ``k``, ``m``, ou ``$``; "
"``$`` é geralmente um\n"
"metacaractere, mas dentro de uma classe de caracteres ele é despojado de sua "
"natureza\n"
"especial."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:97
msgid ""
"You can match the characters not listed within the class by :dfn:"
"`complementing` the set.  This is indicated by including a ``'^'`` as the "
"first character of the class. For example, ``[^5]`` will match any character "
"except ``'5'``.  If the caret appears elsewhere in a character class, it "
"does not have special meaning. For example: ``[5^]`` will match either a "
"``'5'`` or a ``'^'``."
msgstr ""
"Você pode combinar os caracteres não listados na classe :dfn:"
"`complementando` o conjunto. Isso é indicado pela inclusão de um ``'^''`` "
"como o primeiro caractere da classe. Por exemplo, ``[^5]`` corresponderá a "
"qualquer caractere, exceto ``'5'``. Se o sinal de intercalação aparecer em "
"outro lugar da classe de personagem, ele não terá um significado especial. "
"Por exemplo: ``[5^]`` corresponderá a um ``'5'`` ou a ``'^'``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:103
msgid ""
"Perhaps the most important metacharacter is the backslash, ``\\``.   As in "
"Python string literals, the backslash can be followed by various characters "
"to signal various special sequences.  It's also used to escape all the "
"metacharacters so you can still match them in patterns; for example, if you "
"need to match a ``[`` or  ``\\``, you can precede them with a backslash to "
"remove their special meaning: ``\\[`` or ``\\\\``."
msgstr ""
"Talvez o metacaractere mais importante é a barra invertida, ``\\``. Como as "
"strings literais em\n"
"Python, a barra invertida pode ser seguida por vários caracteres para "
"sinalizar várias\n"
"sequências especiais. Ela também é usada para ``escapar`` todos os "
"metacaracteres,\n"
"e assim, você poder combiná-los em padrões; por exemplo, se você precisa\n"
"fazer correspondência a um ``[`` ou ``\\``, você pode precedê-los com uma "
"barra invertida para\n"
"remover seu significado especial: ``\\[`` ou ``\\\\``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:110
msgid ""
"Some of the special sequences beginning with ``'\\'`` represent predefined "
"sets of characters that are often useful, such as the set of digits, the set "
"of letters, or the set of anything that isn't whitespace."
msgstr ""
"Algumas das sequências especiais que começam com ``'\\'`` representam "
"conjuntos de caracteres predefinidos que são frequentemente úteis, como o "
"conjunto de dígitos, o conjunto de letras ou o conjunto de qualquer coisa "
"que não seja espaço em branco."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:115
msgid ""
"Let's take an example: ``\\w`` matches any alphanumeric character.  If the "
"regex pattern is expressed in bytes, this is equivalent to the class ``[a-zA-"
"Z0-9_]``.  If the regex pattern is a string, ``\\w`` will match all the "
"characters marked as letters in the Unicode database provided by the :mod:"
"`unicodedata` module.  You can use the more restricted definition of ``\\w`` "
"in a string pattern by supplying the :const:`re.ASCII` flag when compiling "
"the regular expression."
msgstr ""
"Vejamos um exemplo: ``\\w`` corresponde a qualquer caractere alfanumérico. "
"Se o padrão regex for expresso em bytes, isso é equivalente à classe ``[a-zA-"
"Z0-9_] ``. Se o padrão regex for uma string, ``\\w`` combinará todos os "
"caracteres marcados como letras no banco de dados Unicode fornecido pelo "
"módulo :mod:`unicodedata`. Você pode usar a definição mais restrita de "
"``\\w`` em um padrão de sequência, fornecendo o sinalizador :const:`re."
"ASCII` ao compilar a expressão regular."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:123
msgid ""
"The following list of special sequences isn't complete. For a complete list "
"of sequences and expanded class definitions for Unicode string patterns, see "
"the last part of :ref:`Regular Expression Syntax <re-syntax>` in the "
"Standard Library reference.  In general, the Unicode versions match any "
"character that's in the appropriate category in the Unicode database."
msgstr ""
"A lista a seguir de sequências especiais não está completa. Para obter uma "
"lista completa das sequências e definições de classe expandidas para padrões "
"de Strings Unicode, veja a última parte de  :ref:`Regular Expression Syntax "
"1` na referência da Biblioteca Padrão. Em geral, as versões Unicode "
"correspondem a qualquer caractere que esteja na categoria apropriada do "
"banco de dados Unicode."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:131
msgid "``\\d``"
msgstr "``\\d``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:131
msgid "Matches any decimal digit; this is equivalent to the class ``[0-9]``."
msgstr ""
"corresponde a qualquer ``dígito decimal``, que é equivalente à classe "
"``[0-9]``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:134
msgid "``\\D``"
msgstr "``\\D``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:134
msgid ""
"Matches any non-digit character; this is equivalent to the class ``[^0-9]``."
msgstr ""
"corresponde a qualquer caractere ``não-dígito``, o que é equivalente à "
"classe ``[^0-9]``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:138
msgid "``\\s``"
msgstr "``\\s``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:137
msgid ""
"Matches any whitespace character; this is equivalent to the class "
"``[ \\t\\n\\r\\f\\v]``."
msgstr ""
"corresponde a qualquer caractere ``espaço-em-branco``, o que é equivalente à "
"classe ``[\\t\\n\\r\\f\\v]``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:142
msgid "``\\S``"
msgstr "``\\S``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:141
msgid ""
"Matches any non-whitespace character; this is equivalent to the class ``[^ "
"\\t\\n\\r\\f\\v]``."
msgstr ""
"corresponde a qualquer caractere ``não-espaço-branco``, o que é equivalente "
"à classe ``[^\\t\\n\\r\\f\\v].``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:146
msgid "``\\w``"
msgstr "``\\w``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:145
msgid ""
"Matches any alphanumeric character; this is equivalent to the class ``[a-zA-"
"Z0-9_]``."
msgstr ""
"corresponde a qualquer caractere ``alfanumérico``, o que é equivalente à "
"classe ``[azA-Z0-9_]``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:150
msgid "``\\W``"
msgstr "``\\W``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:149
msgid ""
"Matches any non-alphanumeric character; this is equivalent to the class "
"``[^a-zA-Z0-9_]``."
msgstr ""
"corresponde a qualquer caractere ``não-alfanumérico``, o que é equivalente à "
"classe ``[^a-zA-Z0-9_]``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:152
msgid ""
"These sequences can be included inside a character class.  For example, "
"``[\\s,.]`` is a character class that will match any whitespace character, "
"or ``','`` or ``'.'``."
msgstr ""
"Estas sequências podem ser incluídas dentro de uma classe caractere. Por "
"exemplo,\n"
"``[\\s,.]`` É uma classe caractere que irá corresponder a qualquer caractere "
"``espaço-em-branco``, ou ``,`` ou ``.``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:156
msgid ""
"The final metacharacter in this section is ``.``.  It matches anything "
"except a newline character, and there's an alternate mode (:const:`re."
"DOTALL`) where it will match even a newline.  ``.`` is often used where you "
"want to match \"any character\"."
msgstr ""
"O último metacaracter nesta sessão é o \".\". Ele corresponde a qualquer "
"caractere, exceto o caractere de nova linha. Há um modo alternativo (:"
"const:'re.DOTALL') que irá corresponder inclusive a uma nova linha. \".\" é "
"frequentemente usado quando você quer uma correspondência de \"qualquer "
"caractere\"."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:163
msgid "Repeating Things"
msgstr "Repetindo Coisas"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:165
msgid ""
"Being able to match varying sets of characters is the first thing regular "
"expressions can do that isn't already possible with the methods available on "
"strings.  However, if that was the only additional capability of regexes, "
"they wouldn't be much of an advance. Another capability is that you can "
"specify that portions of the RE must be repeated a certain number of times."
msgstr ""
"Ser capaz de corresponder com variados conjuntos de caracteres é a primeira "
"coisa que as\n"
"expressões regulares podem fazer que ainda não é possível com os métodos "
"disponíveis\n"
"para strings. No entanto, se essa fosse a única capacidade adicional das "
"expressões\n"
"regulares, elas não seriam um avanço relevante. Outro recurso que você pode "
"especificar é que\n"
"partes do RE devem ser repetidas um certo número de vezes."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:171
msgid ""
"The first metacharacter for repeating things that we'll look at is ``*``.  "
"``*`` doesn't match the literal character ``'*'``; instead, it specifies "
"that the previous character can be matched zero or more times, instead of "
"exactly once."
msgstr ""
"O primeiro metacaractere para repetir coisas que veremos é ``*``. ``*`` não "
"corresponde ao caractere literal ``'*'``; em vez disso, ele especifica que o "
"caractere anterior pode ser correspondido zero ou mais vezes, em vez de "
"exatamente uma vez."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:175
msgid ""
"For example, ``ca*t`` will match ``'ct'`` (0 ``'a'`` characters), ``'cat'`` "
"(1 ``'a'``), ``'caaat'`` (3 ``'a'`` characters), and so forth."
msgstr ""
"Por exemplo, ``ca*t`` vai corresponder ``'ct'`` (0 ``'a'`` caracteres), "
"``'cat'`` (1 ``'a'``), ``'caaat'`` (3 ``'a'`` caracteres), e assim por "
"diante."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:178
msgid ""
"Repetitions such as ``*`` are :dfn:`greedy`; when repeating a RE, the "
"matching engine will try to repeat it as many times as possible. If later "
"portions of the pattern don't match, the matching engine will then back up "
"and try again with fewer repetitions."
msgstr ""
"Repetições, tais como ``*`` são gananciosas; ao repetir a RE, o motor de "
"correspondência\n"
"vai tentar repeti-la tantas vezes quanto possível. Se porções posteriores do "
"padrão\n"
"não corresponderem, o motor de correspondência, em seguida, volta e tenta\n"
"novamente com algumas repetições."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:183
msgid ""
"A step-by-step example will make this more obvious.  Let's consider the "
"expression ``a[bcd]*b``.  This matches the letter ``'a'``, zero or more "
"letters from the class ``[bcd]``, and finally ends with a ``'b'``.  Now "
"imagine matching this RE against the string ``'abcbd'``."
msgstr ""
"Um exemplo passo a passo fará isso mais óbvio. Vamos considerar a expressão "
"\"a[bcd]*b\". Isto corresponde à letra \"a\", zero ou mais letras da classe "
"\"[bcd]\" e, finalmente, termina com \"b\".  Agora, imagine corresponder "
"este RE com a string \"abcbd\"."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:189
msgid "Step"
msgstr "Passo "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:189
msgid "Matched"
msgstr "Correspondência"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:189
msgid "Explanation"
msgstr "Explanação"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:191
msgid "1"
msgstr "1"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:191
msgid "``a``"
msgstr "``a``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:191
msgid "The ``a`` in the RE matches."
msgstr "O caractere ``a`` na RE tem correspondência. "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:193
msgid "2"
msgstr "2"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:193
msgid "``abcbd``"
msgstr "``abcbd``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:193
msgid ""
"The engine matches ``[bcd]*``, going as far as it can, which is to the end "
"of the string."
msgstr ""
"O motor corresponde com [bcd]*, indo tão longe quanto possível, que é o fim "
"do string."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:197
msgid "3"
msgstr "3"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:197
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:205
msgid "*Failure*"
msgstr "*Failure*"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:197
msgid ""
"The engine tries to match ``b``, but the current position is at the end of "
"the string, so it fails."
msgstr ""
"O motor tenta corresponder com ``b``, mas a posição corrente está no final "
"da string, então ele falha."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:202
msgid "4"
msgstr "4"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:202
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:213
msgid "``abcb``"
msgstr "``abcb``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:202
msgid "Back up, so that  ``[bcd]*`` matches one less character."
msgstr "Voltando, de modo que [bcd]* corresponde a um caracter a menos. "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:205
msgid "5"
msgstr "5"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:205
msgid ""
"Try ``b`` again, but the current position is at the last character, which is "
"a ``'d'``."
msgstr ""
"Tenta ``b`` novamente, mas a posição corrente é a do último caractere, que é "
"um ``d``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:209
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:213
msgid "6"
msgstr "6"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:209
msgid "``abc``"
msgstr "``abc``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:209
msgid "Back up again, so that ``[bcd]*`` is only matching ``bc``."
msgstr ""
"Voltando novamente, de modo que [bcd]* está correspondendo com ``bc`` "
"somente."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:213
msgid ""
"Try ``b`` again.  This time the character at the current position is "
"``'b'``, so it succeeds."
msgstr ""
"Tenta ``b`` novamente. Desta vez, o caractere na posição corrente é ``b``, "
"por isso sucesso. "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:219
msgid ""
"The end of the RE has now been reached, and it has matched ``'abcb'``.  This "
"demonstrates how the matching engine goes as far as it can at first, and if "
"no match is found it will then progressively back up and retry the rest of "
"the RE again and again.  It will back up until it has tried zero matches for "
"``[bcd]*``, and if that subsequently fails, the engine will conclude that "
"the string doesn't match the RE at all."
msgstr ""
"O final da RE foi atingido e correspondeu a ``'abcb'``. Isso demonstra como "
"o mecanismo de correspondência vai tão longe quanto pode no início e, se "
"nenhuma correspondência for encontrada, ele fará o backup progressivamente e "
"tentará novamente o restante da RE. Ele fará backup até que tenha tentado "
"zero correspondências para ``[bcd]*``, e se isso falhar subsequentemente, o "
"mecanismo concluirá que a string não corresponde a RE de forma alguma."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:226
msgid ""
"Another repeating metacharacter is ``+``, which matches one or more times.  "
"Pay careful attention to the difference between ``*`` and ``+``; ``*`` "
"matches *zero* or more times, so whatever's being repeated may not be "
"present at all, while ``+`` requires at least *one* occurrence.  To use a "
"similar example, ``ca+t`` will match ``'cat'`` (1 ``'a'``), ``'caaat'`` (3 "
"``'a'``\\ s), but won't match ``'ct'``."
msgstr ""
"Outro metacaractere de repetição é o ``+``, que corresponde a uma ou mais "
"vezes. Preste muita atenção para a diferença entre ``*`` e ``+``; ``*`` "
"corresponde com zero ou mais vezes, assim, o que quer que esteja sendo "
"repetido pode não estar presente, enquanto que ``+`` requer pelo menos uma "
"ocorrência. Para usar um exemplo similar, ``ca+t`` vai corresponder a "
"``'cat'``, (1 ``'a'``), ``'caaat'`` (3 ``'a'``\\ s), mas não corresponde com "
"``'ct'``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:233
msgid ""
"There are two more repeating qualifiers.  The question mark character, ``?"
"``, matches either once or zero times; you can think of it as marking "
"something as being optional.  For example, ``home-?brew`` matches either "
"``'homebrew'`` or ``'home-brew'``."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:238
msgid ""
"The most complicated repeated qualifier is ``{m,n}``, where *m* and *n* are "
"decimal integers.  This qualifier means there must be at least *m* "
"repetitions, and at most *n*.  For example, ``a/{1,3}b`` will match ``'a/"
"b'``, ``'a//b'``, and ``'a///b'``.  It won't match ``'ab'``, which has no "
"slashes, or ``'a////b'``, which has four."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:244
msgid ""
"You can omit either *m* or *n*; in that case, a reasonable value is assumed "
"for the missing value.  Omitting *m* is interpreted as a lower limit of 0, "
"while omitting *n* results in an upper bound of infinity."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:248
msgid ""
"Readers of a reductionist bent may notice that the three other qualifiers "
"can all be expressed using this notation.  ``{0,}`` is the same as ``*``, "
"``{1,}`` is equivalent to ``+``, and ``{0,1}`` is the same as ``?``.  It's "
"better to use ``*``, ``+``, or ``?`` when you can, simply because they're "
"shorter and easier to read."
msgstr ""
"Os leitores de uma inclinação reducionista podem notar que os três outros\n"
"qualificadores podem todos serem expressos utilizando esta notação. ``{0,}`` "
"é o mesmo que ``*``,\n"
"``{1,}`` é equivalente a ``+``, e ``{0,1}`` é o mesmo que ``?``. É melhor "
"usar ``*``, ``+`` ou ``?`` quando\n"
"puder, simplesmente porque eles são mais curtos e fáceis de ler."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:256
msgid "Using Regular Expressions"
msgstr "Usando expressões regulares"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:258
msgid ""
"Now that we've looked at some simple regular expressions, how do we actually "
"use them in Python?  The :mod:`re` module provides an interface to the "
"regular expression engine, allowing you to compile REs into objects and then "
"perform matches with them."
msgstr ""
"Agora que nós vimos algumas expressões regulares simples, como nós\n"
"realmente as usamos em Python? O módulo re fornece uma interface para o "
"mecanismo\n"
"de expressão regular, permitindo compilar REs em objetos e, em seguida,\n"
"executar comparações com eles."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:265
msgid "Compiling Regular Expressions"
msgstr "Compilando Expressões Regulares"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:267
msgid ""
"Regular expressions are compiled into pattern objects, which have methods "
"for various operations such as searching for pattern matches or performing "
"string substitutions. ::"
msgstr ""
"As expressões regulares são compiladas em objetos padrão, que têm métodos "
"para\n"
"várias operações, tais como a procura por padrões de correspondência ou "
"realizar substituições de\n"
"strings."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:276
msgid ""
":func:`re.compile` also accepts an optional *flags* argument, used to enable "
"various special features and syntax variations.  We'll go over the available "
"settings later, but for now a single example will do::"
msgstr ""
":func:`re.compile()` também aceita flags opcionais como argumentos, "
"utilizados para\n"
"habilitar vários recursos especiais e variações de sintaxe. Nós vamos ver "
"todas as\n"
"configurações disponíveis mais tarde, mas por agora, um único exemplo vai "
"servir:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:282
msgid ""
"The RE is passed to :func:`re.compile` as a string.  REs are handled as "
"strings because regular expressions aren't part of the core Python language, "
"and no special syntax was created for expressing them.  (There are "
"applications that don't need REs at all, so there's no need to bloat the "
"language specification by including them.) Instead, the :mod:`re` module is "
"simply a C extension module included with Python, just like the :mod:"
"`socket` or :mod:`zlib` modules."
msgstr ""
"A RE é passada para ``re.compile()`` como uma string. REs são tratadas como\n"
"strings porque as expressões regulares não são parte do núcleo da linguagem "
"Python,\n"
"e nenhuma sintaxe especial foi criada para expressá-las. (Existem aplicações "
"que não\n"
"necessitam de REs nenhuma, por isso não há necessidade de inchar a "
"especificação\n"
"da linguagem, incluindo-as.) Em vez disso, o módulo ``re`` é simplesmente um "
"módulo\n"
"de extensão C incluído no Python, assim como os módulos de ``socket`` ou "
"``zlib``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:289
msgid ""
"Putting REs in strings keeps the Python language simpler, but has one "
"disadvantage which is the topic of the next section."
msgstr ""
"Colocando REs em strings mantém a linguagem Python mais simples, mas tem "
"uma\n"
"desvantagem, que é o tema da próxima seção."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:296
msgid "The Backslash Plague"
msgstr "A praga da barra invertida"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:298
msgid ""
"As stated earlier, regular expressions use the backslash character "
"(``'\\'``) to indicate special forms or to allow special characters to be "
"used without invoking their special meaning. This conflicts with Python's "
"usage of the same character for the same purpose in string literals."
msgstr ""
"Como afirmado anteriormente, expressões regulares usam o caractere de barra\n"
"invertida ``\\`` para indicar formas especiais ou para permitir que "
"caracteres especiais\n"
"sejam usados sem invocar o seu significado especial. Isso entra em conflito "
"com o uso\n"
"pelo Python do mesmo caractere para o mesmo propósito nas strings literais."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:303
msgid ""
"Let's say you want to write a RE that matches the string ``\\section``, "
"which might be found in a LaTeX file.  To figure out what to write in the "
"program code, start with the desired string to be matched.  Next, you must "
"escape any backslashes and other metacharacters by preceding them with a "
"backslash, resulting in the string ``\\\\section``.  The resulting string "
"that must be passed to :func:`re.compile` must be ``\\\\section``.  However, "
"to express this as a Python string literal, both backslashes must be escaped "
"*again*."
msgstr ""
"Vamos dizer que você quer escrever uma RE que corresponde com a string "
"``\\section``, que\n"
"pode ser encontrada em um arquivo LaTeX. Para descobrir o que escrever no "
"código\n"
"do programa, comece com a string que se deseja corresponder. Em seguida, "
"você\n"
"deve preceder qualquer barra invertida e outros metacaracteres com\n"
"uma barra invertida, tendo como resultado a string ``\\\\section``. A string "
"resultante que deve ser\n"
"passada para ``re.compile()`` deve ser ``\\\\section``. No entanto, para "
"expressar isso\n"
"como uma string literal Python, ambas as barras invertidas devem ser "
"precedidas com uma barra invertida\n"
"novamente."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:312
msgid "Characters"
msgstr "Caracteres"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:312
msgid "Stage"
msgstr "Etapa"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:314
msgid "``\\section``"
msgstr "``\\section``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:314
msgid "Text string to be matched"
msgstr " string de texto a ser correspondida "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:316
msgid "``\\\\section``"
msgstr "``\\\\section``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:316
msgid "Escaped backslash for :func:`re.compile`"
msgstr "preceder com barra invertida para :func:`re.compile`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:318
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:345
msgid "``\"\\\\\\\\section\"``"
msgstr "``\"\\\\\\\\section\"``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:318
msgid "Escaped backslashes for a string literal"
msgstr "barras invertidas precedidas novamente para uma string literal"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:321
msgid ""
"In short, to match a literal backslash, one has to write ``'\\\\\\\\'`` as "
"the RE string, because the regular expression must be ``\\\\``, and each "
"backslash must be expressed as ``\\\\`` inside a regular Python string "
"literal.  In REs that feature backslashes repeatedly, this leads to lots of "
"repeated backslashes and makes the resulting strings difficult to understand."
msgstr ""
"Em suma, para corresponder com uma barra invertida literal, tem de se "
"escrever ``\\\\\\\\``\n"
"como a string da RE, porque a expressão regular deve ser ``\\\\``, e cada "
"barra invertida\n"
"deve ser expressa como ``\\\\`` dentro de uma string literal Python normal. "
"Em REs que\n"
"apresentam barras invertidas repetidas vezes, isso leva a um monte de "
"barras\n"
"invertidas repetidas e faz as strings resultantes difíceis de entender."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:327
msgid ""
"The solution is to use Python's raw string notation for regular expressions; "
"backslashes are not handled in any special way in a string literal prefixed "
"with ``'r'``, so ``r\"\\n\"`` is a two-character string containing ``'\\'`` "
"and ``'n'``, while ``\"\\n\"`` is a one-character string containing a "
"newline. Regular expressions will often be written in Python code using this "
"raw string notation."
msgstr ""
"A solução é usar a notação de string crua (raw) do Python para expressões "
"regulares;\n"
"barras invertidas não são tratadas de nenhuma forma especial em uma string "
"literal\n"
"se prefixada com ``r``, então ``r\"\\n\"`` é uma string de dois caracteres "
"contendo ``\\`` e\n"
"``n``, enquanto ``\"\\n\"`` é uma string de um único caractere contendo uma "
"nova linha. As\n"
"expressões regulares, muitas vezes, são escritas no código Python usando "
"esta\n"
"notação de string crua (raw)."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:333
msgid ""
"In addition, special escape sequences that are valid in regular expressions, "
"but not valid as Python string literals, now result in a :exc:"
"`DeprecationWarning` and will eventually become a :exc:`SyntaxError`, which "
"means the sequences will be invalid if raw string notation or escaping the "
"backslashes isn't used."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:341
msgid "Regular String"
msgstr "**String Regular**"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:341
msgid "Raw string"
msgstr "**String Crua**"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:343
msgid "``\"ab*\"``"
msgstr "``\"ab*\"``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:343
msgid "``r\"ab*\"``"
msgstr "``r\"ab*\"``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:345
msgid "``r\"\\\\section\"``"
msgstr "``r\"\\\\section\"``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:347
msgid "``\"\\\\w+\\\\s+\\\\1\"``"
msgstr "``\"\\\\w+\\\\s+\\\\1\"``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:347
msgid "``r\"\\w+\\s+\\1\"``"
msgstr "``r\"\\w+\\s+\\1\"``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:352
msgid "Performing Matches"
msgstr "Executando Comparações"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:354
msgid ""
"Once you have an object representing a compiled regular expression, what do "
"you do with it?  Pattern objects have several methods and attributes. Only "
"the most significant ones will be covered here; consult the :mod:`re` docs "
"for a complete listing."
msgstr ""
"Uma vez que você tem um objeto que representa uma expressão regular "
"compilada, o\n"
"que você faz com ele? Objetos padrão têm vários métodos e atributos. Apenas "
"os\n"
"mais significativos serão vistos aqui; consulte a documentação do módulo "
"``re`` para uma lista\n"
"completa."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:360
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:418
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1057
msgid "Method/Attribute"
msgstr "**Método/Atributo**"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:360
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:418
#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1057
msgid "Purpose"
msgstr " **Propósito** "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:362
msgid "``match()``"
msgstr "``match()``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:362
msgid "Determine if the RE matches at the beginning of the string."
msgstr "Determina se a RE combina com o início da string. "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:365
msgid "``search()``"
msgstr "``search()``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:365
msgid "Scan through a string, looking for any location where this RE matches."
msgstr ""
"Varre toda a string, procurando qualquer local onde esta RE tem "
"correspondência."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:368
msgid "``findall()``"
msgstr "``findall()``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:368
msgid "Find all substrings where the RE matches, and returns them as a list."
msgstr ""
"Encontra todas as substrings onde a RE corresponde, e as retorna como uma "
"lista."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:371
msgid "``finditer()``"
msgstr "``finditer()``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:371
msgid ""
"Find all substrings where the RE matches, and returns them as an :term:"
"`iterator`."
msgstr ""
"Encontra todas as substrings onde a RE corresponde, e as retorna como um "
"iterator."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:375
msgid ""
":meth:`~re.Pattern.match` and :meth:`~re.Pattern.search` return ``None`` if "
"no match can be found.  If they're successful, a :ref:`match object <match-"
"objects>` instance is returned, containing information about the match: "
"where it starts and ends, the substring it matched, and more."
msgstr ""
":meth:`~re.Pattern.match` e :meth:`~re.Pattern.search` retornam ``None`` se "
"não existir nenhuma correspondência encontrada. Se tiveram sucesso, uma "
"instância de :ref:`match object <match-objects>` é retornada, contendo "
"informações sobre a correspondência: onde ela começa e termina, a substring "
"com a qual ela teve correspondência, e mais."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:380
msgid ""
"You can learn about this by interactively experimenting with the :mod:`re` "
"module.  If you have :mod:`tkinter` available, you may also want to look at :"
"source:`Tools/demo/redemo.py`, a demonstration program included with the "
"Python distribution.  It allows you to enter REs and strings, and displays "
"whether the RE matches or fails. :file:`redemo.py` can be quite useful when "
"trying to debug a complicated RE."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:387
msgid ""
"This HOWTO uses the standard Python interpreter for its examples. First, run "
"the Python interpreter, import the :mod:`re` module, and compile a RE::"
msgstr ""
"Este HOWTO usa o interpretador Python padrão para seus exemplos. Primeiro, "
"execute o interpretador Python, importe o\n"
"modulo ``re``, e compile uma RE"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:395
msgid ""
"Now, you can try matching various strings against the RE ``[a-z]+``.  An "
"empty string shouldn't match at all, since ``+`` means 'one or more "
"repetitions'. :meth:`~re.Pattern.match` should return ``None`` in this case, "
"which will cause the interpreter to print no output.  You can explicitly "
"print the result of :meth:`!match` to make this clear. ::"
msgstr ""
"Agora, você pode tentar corresponder várias strings com a RE ``[a-z]+``. Mas "
"uma string vazia não deveria corresponder com nada, uma vez que ``+`` "
"significa 'uma ou mais repetições'. :meth:`~re.Pattern.match` deve retornar "
"``None`` neste caso, o que fará com que o interpretador não imprima nenhuma "
"saída. Você pode imprimir explicitamente o resultado de :meth:`!match` para "
"deixar isso claro."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:405
msgid ""
"Now, let's try it on a string that it should match, such as ``tempo``.  In "
"this case, :meth:`~re.Pattern.match` will return a :ref:`match object <match-"
"objects>`, so you should store the result in a variable for later use. ::"
msgstr ""
"Agora, vamos experimentá-la em uma string que ela deve corresponder, como "
"``tempo``. Neste caso, :meth:`~re.Pattern.match` irá retornar um :ref:"
"`objeto match <match-objects>`, assim que você deve armazenar o resultado em "
"uma variável para uso posterior."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:413
msgid ""
"Now you can query the :ref:`match object <match-objects>` for information "
"about the matching string.  Match object instances also have several methods "
"and attributes; the most important ones are:"
msgstr ""
"Agora você pode consultar o :ref:`objeto match <match-objects>` para obter "
"informações sobre a string correspondente. Instâncias do objeto match também "
"tem vários métodos e atributos; os mais importantes são os seguintes:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:420
msgid "``group()``"
msgstr "``group()``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:420
msgid "Return the string matched by the RE"
msgstr "Retorna a string que corresponde com a RE "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:422
msgid "``start()``"
msgstr "``start()``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:422
msgid "Return the starting position of the match"
msgstr "Retorna a posição inicial da string correspondente "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:424
msgid "``end()``"
msgstr "``end()``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:424
msgid "Return the ending position of the match"
msgstr "Retorna a posição final da string correspondente"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:426
msgid "``span()``"
msgstr "``span()``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:426
msgid "Return a tuple containing the (start, end) positions  of the match"
msgstr ""
"Retorna uma tupla contendo as posições (inicial, final) da string combinada "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:430
msgid "Trying these methods will soon clarify their meaning::"
msgstr "Experimentando estes métodos teremos seus significado esclarecidos:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:439
msgid ""
":meth:`~re.Match.group` returns the substring that was matched by the RE.  :"
"meth:`~re.Match.start` and :meth:`~re.Match.end` return the starting and "
"ending index of the match. :meth:`~re.Match.span` returns both start and end "
"indexes in a single tuple.  Since the :meth:`~re.Pattern.match` method only "
"checks if the RE matches at the start of a string, :meth:`!start` will "
"always be zero.  However, the :meth:`~re.Pattern.search` method of patterns "
"scans through the string, so  the match may not start at zero in that "
"case. ::"
msgstr ""
":meth:`~re.Match.group` retorna a substring correspondeu com a RE.  :meth:"
"`~re.Match.start` e  :meth:`~re.Match.end` retornam os índices inicial e o "
"final da substring correspondente.  :meth:`~re.Match.span` retorna tanto os "
"índices inicial e final em uma única tupla. Como o método  :meth:`~re."
"Pattern.match`  somente verifica se a RE corresponde com o início de uma "
"string,  :meth:`!start`  será sempre zero. No entanto, o método :meth:`~re."
"Pattern.search` dos objetos padrão, varre toda a string, de modo que a "
"substring correspondente pode não iniciar em zero nesse caso."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:456
msgid ""
"In actual programs, the most common style is to store the :ref:`match object "
"<match-objects>` in a variable, and then check if it was ``None``.  This "
"usually looks like::"
msgstr ""
"Nos programas reais, o estilo mais comum é armazenar o MatchObject em uma\n"
"variável e, em seguida, verificar se ela é 'None'. Isso geralmente se parece "
"com:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:467
msgid ""
"Two pattern methods return all of the matches for a pattern. :meth:`~re."
"Pattern.findall` returns a list of matching strings::"
msgstr ""
"Dois métodos padrão retornam todas as correspondências de um padrão. :meth:"
"`~re.Pattern.findall` retorna uma lista de strings correspondentes:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:474
msgid ""
"The ``r`` prefix, making the literal a raw string literal, is needed in this "
"example because escape sequences in a normal \"cooked\" string literal that "
"are not recognized by Python, as opposed to regular expressions, now result "
"in a :exc:`DeprecationWarning` and will eventually become a :exc:"
"`SyntaxError`.  See :ref:`the-backslash-plague`."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:480
msgid ""
":meth:`~re.Pattern.findall` has to create the entire list before it can be "
"returned as the result.  The :meth:`~re.Pattern.finditer` method returns a "
"sequence of :ref:`match object <match-objects>` instances as an :term:"
"`iterator`::"
msgstr ""
":meth:`~re.Pattern.findall` tem que criar a lista inteira antes de poder "
"devolvê-la como resultado. O método :meth:`~re.Pattern.finditer` retorna uma "
"sequência de instâncias :ref:`objeto match <match-objects>` como um :term:"
"`iterator`::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:496
msgid "Module-Level Functions"
msgstr "Funções de Nível de Módulo"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:498
msgid ""
"You don't have to create a pattern object and call its methods; the :mod:"
"`re` module also provides top-level functions called :func:`~re.match`, :"
"func:`~re.search`, :func:`~re.findall`, :func:`~re.sub`, and so forth.  "
"These functions take the same arguments as the corresponding pattern method "
"with the RE string added as the first argument, and still return either "
"``None`` or a :ref:`match object <match-objects>` instance. ::"
msgstr ""
"Você não tem que criar um objeto padrão e chamar seus métodos; o módulo :mod:"
"`re` também fornece funções de nível superior chamada :func:`~re.match`, :"
"func:`~re.search`, :func:`~re.findall`, :func:`~re.sub`, e assim por diante. "
"Estas funções recebem os mesmos argumentos que o método padrão "
"correspondente, com a string RE adicionada como o primeiro argumento, e "
"ainda retornam ``None`` ou uma instância :ref:`objeto match <match-"
"objects>`. ::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:510
msgid ""
"Under the hood, these functions simply create a pattern object for you and "
"call the appropriate method on it.  They also store the compiled object in a "
"cache, so future calls using the same RE won't need to parse the pattern "
"again and again."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:515
msgid ""
"Should you use these module-level functions, or should you get the pattern "
"and call its methods yourself?  If you're accessing a regex within a loop, "
"pre-compiling it will save a few function calls. Outside of loops, there's "
"not much difference thanks to the internal cache."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:523
msgid "Compilation Flags"
msgstr "Flags de Compilação"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:525
msgid ""
"Compilation flags let you modify some aspects of how regular expressions "
"work. Flags are available in the :mod:`re` module under two names, a long "
"name such as :const:`IGNORECASE` and a short, one-letter form such as :const:"
"`I`.  (If you're familiar with Perl's pattern modifiers, the one-letter "
"forms use the same letters; the short form of :const:`re.VERBOSE` is :const:"
"`re.X`, for example.) Multiple flags can be specified by bitwise OR-ing "
"them; ``re.I | re.M`` sets both the :const:`I` and :const:`M` flags, for "
"example."
msgstr ""
"Flags de compilação permitem modificar alguns aspectos de como as "
"expressões\n"
"regulares funcionam. Flags estão disponíveis no módulo ``rev`` sob dois "
"nomes, um\n"
"nome longo, tal como ``IGNORECASE`` e um curto, na forma de uma letra, como "
"``I``. (Se você\n"
"estiver familiarizado com o padrão dos modificadores do Perl, o nome curto\n"
"usa as mesmas letras; o forma abreviada de ``re.VERBOSE`` é ``re.X``, por "
"exemplo)\n"
"Várias flags podem ser especificadas como um vetor intercalado por "
"``OU(|)``; ``re.I |re.M`` define as flags\n"
"``I`` e ``M``, por exemplo."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:533
msgid ""
"Here's a table of the available flags, followed by a more detailed "
"explanation of each one."
msgstr ""
"Aqui está uma tabela das flags disponíveis, seguida por uma explicação mais "
"detalhada\n"
"de cada uma:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:537
msgid "Flag"
msgstr "Flag"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:537
msgid "Meaning"
msgstr "Significado"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:539
msgid ":const:`ASCII`, :const:`A`"
msgstr ":const:`ASCII`, :const:`A`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:539
msgid ""
"Makes several escapes like ``\\w``, ``\\b``, ``\\s`` and ``\\d`` match only "
"on ASCII characters with the respective property."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:543
msgid ":const:`DOTALL`, :const:`S`"
msgstr ":const:`DOTALL`, :const:`S`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:543
msgid "Make ``.`` match any character, including newlines."
msgstr "Faz o ``.`` corresponder a qualquer caractere, incluindo novas linhas."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:546
msgid ":const:`IGNORECASE`, :const:`I`"
msgstr ":const:`IGNORECASE`, :const:`I`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:546
msgid "Do case-insensitive matches."
msgstr "Faz combinações sem diferenciar maiúsculo de minúsculo"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:548
msgid ":const:`LOCALE`, :const:`L`"
msgstr ":const:`LOCALE`, :const:`L`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:548
msgid "Do a locale-aware match."
msgstr "Faz uma correspondência considerando a localidade."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:550
msgid ":const:`MULTILINE`, :const:`M`"
msgstr ":const:`MULTILINE`, :const:`M`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:550
msgid "Multi-line matching, affecting ``^`` and ``$``."
msgstr "Correspondência multilinha, afetando ``^`` e ``$``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:553
msgid ":const:`VERBOSE`, :const:`X` (for 'extended')"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:553
msgid ""
"Enable verbose REs, which can be organized more cleanly and understandably."
msgstr ""
"Habilita REs detalhadas, que podem ser organizadas de forma mais clara e "
"compreensível."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:562
msgid ""
"Perform case-insensitive matching; character class and literal strings will "
"match letters by ignoring case.  For example, ``[A-Z]`` will match lowercase "
"letters, too. Full Unicode matching also works unless the :const:`ASCII` "
"flag is used to disable non-ASCII matches.  When the Unicode patterns ``[a-"
"z]`` or ``[A-Z]`` are used in combination with the :const:`IGNORECASE` flag, "
"they will match the 52 ASCII letters and 4 additional non-ASCII letters: "
"'İ' (U+0130, Latin capital letter I with dot above), 'ı' (U+0131, Latin "
"small letter dotless i), 'ſ' (U+017F, Latin small letter long s) and "
"'K' (U+212A, Kelvin sign).  ``Spam`` will match ``'Spam'``, ``'spam'``, "
"``'spAM'``, or ``'ſpam'`` (the latter is matched only in Unicode mode). This "
"lowercasing doesn't take the current locale into account; it will if you "
"also set the :const:`LOCALE` flag."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:580
msgid ""
"Make ``\\w``, ``\\W``, ``\\b``, ``\\B`` and case-insensitive matching "
"dependent on the current locale instead of the Unicode database."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:583
msgid ""
"Locales are a feature of the C library intended to help in writing programs "
"that take account of language differences.  For example, if you're "
"processing encoded French text, you'd want to be able to write ``\\w+`` to "
"match words, but ``\\w`` only matches the character class ``[A-Za-z]`` in "
"bytes patterns; it won't match bytes corresponding to ``é`` or ``ç``. If "
"your system is configured properly and a French locale is selected, certain "
"C functions will tell the program that the byte corresponding to ``é`` "
"should also be considered a letter. Setting the :const:`LOCALE` flag when "
"compiling a regular expression will cause the resulting compiled object to "
"use these C functions for ``\\w``; this is slower, but also enables ``\\w+`` "
"to match French words as you'd expect. The use of this flag is discouraged "
"in Python 3 as the locale mechanism is very unreliable, it only handles one "
"\"culture\" at a time, and it only works with 8-bit locales.  Unicode "
"matching is already enabled by default in Python 3 for Unicode (str) "
"patterns, and it is able to handle different locales/languages."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:605
msgid ""
"(``^`` and ``$`` haven't been explained yet;  they'll be introduced in "
"section :ref:`more-metacharacters`.)"
msgstr ""
"(``^`` e ``$`` ainda não foram explicados, eles serão comentados na seção "
"``Mais\n"
"Metacaracteres``.)"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:608
msgid ""
"Usually ``^`` matches only at the beginning of the string, and ``$`` matches "
"only at the end of the string and immediately before the newline (if any) at "
"the end of the string. When this flag is specified, ``^`` matches at the "
"beginning of the string and at the beginning of each line within the string, "
"immediately following each newline.  Similarly, the ``$`` metacharacter "
"matches either at the end of the string and at the end of each line "
"(immediately preceding each newline)."
msgstr ""
"Normalmente ``^`` corresponde apenas ao início da string e ``$`` corresponde "
"apenas ao\n"
"final da string, e imediatamente antes da nova linha (se existir) no final "
"da string.\n"
"Quando esta flag é especificada, o ``^`` corresponde ao início da string e "
"ao início de\n"
"cada linha dentro da string, imediatamente após cada nova linha. Da mesma\n"
"forma, o metacaractere ``$`` corresponde tanto ao final da string e ao final "
"de cada linha\n"
"(imediatamente antes de cada nova linha)."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:621
msgid ""
"Makes the ``'.'`` special character match any character at all, including a "
"newline; without this flag, ``'.'`` will match anything *except* a newline."
msgstr ""
"Faz o caractere especial ``.`` corresponder com qualquer caractere que seja, "
"incluindo o\n"
"nova linha; sem esta flag, ``.`` irá corresponder a qualquer coisa, exceto o "
"nova linha."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:629
msgid ""
"Make ``\\w``, ``\\W``, ``\\b``, ``\\B``, ``\\s`` and ``\\S`` perform ASCII-"
"only matching instead of full Unicode matching. This is only meaningful for "
"Unicode patterns, and is ignored for byte patterns."
msgstr ""
"Faz com que ``\\w``, ``\\W``, ``\\b``, ``\\B``,  ``\\s`` e ``\\S`` executem "
"a correspondência somente ASCII em vez da correspondência Unicode completa. "
"Isso é significativo apenas para padrões Unicode e é ignorado para padrões "
"de bytes."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:638
msgid ""
"This flag allows you to write regular expressions that are more readable by "
"granting you more flexibility in how you can format them.  When this flag "
"has been specified, whitespace within the RE string is ignored, except when "
"the whitespace is in a character class or preceded by an unescaped "
"backslash; this lets you organize and indent the RE more clearly.  This flag "
"also lets you put comments within a RE that will be ignored by the engine; "
"comments are marked by a ``'#'`` that's neither in a character class or "
"preceded by an unescaped backslash."
msgstr ""
"Esta flag permite escrever expressões regulares mais legíveis,\n"
"permitindo mais flexibilidade na maneira de formatá-la. Quando esta flag\n"
"é especificada, o espaço em branco dentro da string RE é ignorado, exceto "
"quando o\n"
"espaço em branco está em uma classe de caracteres ou precedido por uma "
"barra\n"
"invertida não \"escapada\"; isto permite organizar e formatar a RE de "
"maneira mais clara. Esta\n"
"flag também permite que se coloque comentários dentro de uma RE que serão "
"ignorados pelo\n"
"mecanismo; os comentários são marcados por um \"#\" que não está nem em uma "
"classe de\n"
"caracteres nem precedido por uma barra invertida não \"escapada\"."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:647
msgid ""
"For example, here's a RE that uses :const:`re.VERBOSE`; see how much easier "
"it is to read? ::"
msgstr ""
"Por exemplo, aqui está uma RE que usa re.VERBOSE; veja, o quanto mais fácil\n"
"de ler é ?"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:660
msgid "Without the verbose setting, the RE would look like this::"
msgstr "Sem o \"verbose\" definido, A RE iria se parecer como isto:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:666
msgid ""
"In the above example, Python's automatic concatenation of string literals "
"has been used to break up the RE into smaller pieces, but it's still more "
"difficult to understand than the version using :const:`re.VERBOSE`."
msgstr ""
"No exemplo acima, a concatenação automática de strings literais em Python "
"foi\n"
"usada para quebrar a RE em partes menores, mas ainda é mais difícil de "
"entender\n"
"do que a versão que usa :const:`re.VERBOSE`."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:672
msgid "More Pattern Power"
msgstr "Mais Poder dos Padrões"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:674
msgid ""
"So far we've only covered a part of the features of regular expressions.  In "
"this section, we'll cover some new metacharacters, and how to use groups to "
"retrieve portions of the text that was matched."
msgstr ""
"Até agora, cobrimos apenas uma parte dos recursos das expressões regulares.\n"
"Nesta seção, vamos abordar alguns metacaracteres novos, e como usar grupos "
"para\n"
"recuperar partes do texto que teve correspondência."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:682
msgid "More Metacharacters"
msgstr "Mais Metacaracteres"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:684
msgid ""
"There are some metacharacters that we haven't covered yet.  Most of them "
"will be covered in this section."
msgstr ""
"Existem alguns metacaracteres que nós ainda não vimos. A maioria deles serão "
"referenciados\n"
"nesta seção."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:687
msgid ""
"Some of the remaining metacharacters to be discussed are :dfn:`zero-width "
"assertions`.  They don't cause the engine to advance through the string; "
"instead, they consume no characters at all, and simply succeed or fail.  For "
"example, ``\\b`` is an assertion that the current position is located at a "
"word boundary; the position isn't changed by the ``\\b`` at all.  This means "
"that zero-width assertions should never be repeated, because if they match "
"once at a given location, they can obviously be matched an infinite number "
"of times."
msgstr ""
"Alguns dos metacaracteres restantes a serem discutidos são como uma "
"afirmação de ``largura zero`` (zero-width assertions). Eles\n"
"não fazem com que o mecanismo avance pela string; ao contrário, eles não "
"consomem\n"
"nenhum caractere, e simplesmente tem sucesso ou falha. Por exemplo, ``\\b`` "
"é\n"
"uma afirmação de que a posição atual está localizada nas bordas de uma "
"palavra; a\n"
"posição não é alterada de nenhuma maneira por ``\\b``. Isto significa que "
"afirmações de ``largura zero``\n"
"nunca devem ser repetidas, porque se elas combinam uma vez em um\n"
"determinado local, elas podem, obviamente, combinar um número infinito de\n"
"vezes."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:703
msgid "``|``"
msgstr "``|``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:696
msgid ""
"Alternation, or the \"or\" operator.   If *A* and *B* are regular "
"expressions, ``A|B`` will match any string that matches either *A* or *B*. "
"``|`` has very low precedence in order to make it work reasonably when "
"you're alternating multi-character strings. ``Crow|Servo`` will match either "
"``'Crow'`` or ``'Servo'``, not ``'Cro'``, a ``'w'`` or an ``'S'``, and "
"``'ervo'``."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:702
msgid ""
"To match a literal ``'|'``, use ``\\|``, or enclose it inside a character "
"class, as in ``[|]``."
msgstr ""
"Para corresponder com um ``|`` literal, use ``\\|``, ou coloque ele dentro "
"de uma classe de\n"
"caracteres, como em ``[|]``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:718
msgid "``^``"
msgstr "``^``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:706
msgid ""
"Matches at the beginning of lines.  Unless the :const:`MULTILINE` flag has "
"been set, this will only match at the beginning of the string.  In :const:"
"`MULTILINE` mode, this also matches immediately after each newline within "
"the string."
msgstr ""
"Corresponde ao início de linha. A menos que a flag MULTILINE tenha sido "
"definida,\n"
"isso só irá corresponder ao início da string. No modo MULTILINE, isso "
"também\n"
"corresponde imediatamente após cada nova linha de dentro da string."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:710
msgid ""
"For example, if you wish to match the word ``From`` only at the beginning of "
"a line, the RE to use is ``^From``. ::"
msgstr ""
"Por exemplo, para ter correspondência com a palavra ``From`` apenas no "
"início de uma linha, a\n"
"RE a ser usada é ``^From``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:718
msgid "To match a literal ``'^'``, use ``\\^``."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:732
msgid "``$``"
msgstr "``$``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:721
msgid ""
"Matches at the end of a line, which is defined as either the end of the "
"string, or any location followed by a newline character.     ::"
msgstr ""
"Corresponde ao fim de uma linha, que tanto é definido como o fim de uma "
"string, ou qualquer local seguido por um\n"
"caractere de nova linha."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:731
msgid ""
"To match a literal ``'$'``, use ``\\$`` or enclose it inside a character "
"class, as in  ``[$]``."
msgstr ""
"Para corresponder com um ``$`` literal, use ``\\$`` ou coloque-o dentro de "
"uma classe de\n"
"caracteres, como em ``[$]``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:738
msgid "``\\A``"
msgstr "``\\A``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:735
msgid ""
"Matches only at the start of the string.  When not in :const:`MULTILINE` "
"mode, ``\\A`` and ``^`` are effectively the same.  In :const:`MULTILINE` "
"mode, they're different: ``\\A`` still matches only at the beginning of the "
"string, but ``^`` may match at any location inside the string that follows a "
"newline character."
msgstr ""
"Corresponde apenas com o início da string. Quando não estiver em modo "
"MULTILINE, ``\\A``\n"
"e ``^`` são efetivamente a mesma coisa. No modo MULTILINE, eles são "
"diferentes: ``\\A`` continua a\n"
"corresponder apenas com o início da string, mas ``^`` pode corresponder com "
"qualquer localização de dentro da string, que\n"
"seja posterior a um caractere nova linha."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:741
msgid "``\\Z``"
msgstr "``\\Z``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:741
msgid "Matches only at the end of the string."
msgstr "Corresponde apenas ao final da string."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:776
msgid "``\\b``"
msgstr "``\\b``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:744
msgid ""
"Word boundary.  This is a zero-width assertion that matches only at the "
"beginning or end of a word.  A word is defined as a sequence of alphanumeric "
"characters, so the end of a word is indicated by whitespace or a non-"
"alphanumeric character."
msgstr ""
"Borda de palavra. Esta é uma afirmação de ``largura zero`` que corresponde "
"apenas ao\n"
"início ou ao final de uma palavra. Uma palavra é definida como uma sequência "
"de\n"
"caracteres alfanuméricos, de modo que o fim de uma palavra é indicado por "
"espaços\n"
"em branco ou um caractere não alfanumérico."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:749
msgid ""
"The following example matches ``class`` only when it's a complete word; it "
"won't match when it's contained inside another word. ::"
msgstr ""
"O exemplo a seguir corresponde a ``class`` apenas quando é a palavra exata; "
"ele\n"
"não irá corresponder quando for contido dentro de uma outra palavra."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:760
msgid ""
"There are two subtleties you should remember when using this special "
"sequence. First, this is the worst collision between Python's string "
"literals and regular expression sequences.  In Python's string literals, "
"``\\b`` is the backspace character, ASCII value 8.  If you're not using raw "
"strings, then Python will convert the ``\\b`` to a backspace, and your RE "
"won't match as you expect it to. The following example looks the same as our "
"previous RE, but omits the ``'r'`` in front of the RE string. ::"
msgstr ""
"Há duas sutilezas você deve lembrar ao usar essa sequência especial. Em "
"primeiro\n"
"lugar, esta é a pior colisão entre strings literais do Python e sequências "
"de expressão\n"
"regular. Nas strings literais do Python, ``\\b`` é o caractere backspace, o "
"valor ASCII 8. Se\n"
"você não estiver usando strings cruas (raw), então Python irá converter o "
"``\\b`` em um\n"
"backspace e sua RE não irá funcionar da maneira que você espera. O exemplo "
"a\n"
"seguir parece igual a nossa RE anterior, mas omite o ``r`` na frente da "
"string RE."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:774
msgid ""
"Second, inside a character class, where there's no use for this assertion, "
"``\\b`` represents the backspace character, for compatibility with Python's "
"string literals."
msgstr ""
"Além disso, dentro de uma classe de caracteres, onde não há nenhum uso para "
"esta\n"
"afirmação, ``\\b`` representa o caractere backspace, para compatibilidade "
"com strings\n"
"literais do Python"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:781
msgid "``\\B``"
msgstr "``\\B``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:779
msgid ""
"Another zero-width assertion, this is the opposite of ``\\b``, only matching "
"when the current position is not at a word boundary."
msgstr ""
"Outra afirmação de ``largura zero``; isto é o oposto de ``\\b``, "
"correspondendo apenas quando\n"
"a posição corrente não é de uma borda de palavra."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:784
msgid "Grouping"
msgstr "Agrupamento"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:786
msgid ""
"Frequently you need to obtain more information than just whether the RE "
"matched or not.  Regular expressions are often used to dissect strings by "
"writing a RE divided into several subgroups which match different components "
"of interest. For example, an RFC-822 header line is divided into a header "
"name and a value, separated by a ``':'``, like this:"
msgstr ""
"Frequentemente é necessário obter mais informações do que apenas se a RE "
"teve correspondência ou não. As expressões regulares são muitas vezes "
"utilizadas para dissecar strings escrevendo uma RE dividida em vários "
"subgrupos que correspondem a diferentes componentes de interesse. Por "
"exemplo, uma linha de cabeçalho RFC-822 é dividida em um nome de cabeçalho e "
"um valor, separados por um ``':'``, como essa:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:799
msgid ""
"This can be handled by writing a regular expression which matches an entire "
"header line, and has one group which matches the header name, and another "
"group which matches the header's value."
msgstr ""
"Isto pode ser gerenciado ao escrever uma expressão regular que corresponde "
"com uma\n"
"linha inteira de cabeçalho, e tem um grupo que corresponde ao nome do "
"cabeçalho, e\n"
"um outro grupo, que corresponde ao valor do cabeçalho.\n"
"Os grupos são marcados pelos metacaracteres ``(`` e ``)``. ``(`` e ``)`` têm "
"muito do\n"
"mesmo significado que eles têm em expressões matemáticas; eles agrupam as\n"
"expressões contidas dentro deles, e você pode repetir o conteúdo de um grupo "
"com\n"
"um qualificador de repetição, como ``*``, ``+``, ``?``, ou ``{m,n}``. Por "
"exemplo, ``(ab)*`` irá\n"
"corresponder a zero ou mais repetições de ``ab``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:803
msgid ""
"Groups are marked by the ``'('``, ``')'`` metacharacters. ``'('`` and "
"``')'`` have much the same meaning as they do in mathematical expressions; "
"they group together the expressions contained inside them, and you can "
"repeat the contents of a group with a repeating qualifier, such as ``*``, "
"``+``, ``?``, or ``{m,n}``.  For example, ``(ab)*`` will match zero or more "
"repetitions of ``ab``. ::"
msgstr ""
"Grupos indicados com ``(`` e ``)`` também capturam o índice inicial e final "
"do texto que\n"
"eles correspondem; isso pode ser obtido por meio da passagem de um argumento "
"para\n"
"``group()``, ``start()``, ``end()``, e ``span()``. Os grupos são numerados "
"começando com\n"
"0. O grupo 0 está sempre presente; é toda a RE, logo, todos os métodos "
"MatchObject têm\n"
"o grupo 0 como seu argumento padrão. Mais tarde veremos como expressar\n"
"grupos que não capturam a extensão de texto com a qual eles correspondem."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:814
msgid ""
"Groups indicated with ``'('``, ``')'`` also capture the starting and ending "
"index of the text that they match; this can be retrieved by passing an "
"argument to :meth:`~re.Match.group`, :meth:`~re.Match.start`, :meth:`~re."
"Match.end`, and :meth:`~re.Match.span`.  Groups are numbered starting with "
"0.  Group 0 is always present; it's the whole RE, so :ref:`match object "
"<match-objects>` methods all have group 0 as their default argument.  Later "
"we'll see how to express groups that don't capture the span of text that "
"they match. ::"
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:830
msgid ""
"Subgroups are numbered from left to right, from 1 upward.  Groups can be "
"nested; to determine the number, just count the opening parenthesis "
"characters, going from left to right. ::"
msgstr ""
"Subgrupos são numerados a partir da esquerda para a direita, de forma "
"crescente a partir de 1.\n"
"Os grupos podem ser aninhados; para determinar o número, basta contar os\n"
"caracteres de abertura de parêntese - ``(``, indo da esquerda para a direita."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:843
msgid ""
":meth:`~re.Match.group` can be passed multiple group numbers at a time, in "
"which case it will return a tuple containing the corresponding values for "
"those groups. ::"
msgstr ""
":meth:`~re.Match.group` pode receber vários números de grupos de uma vez, e "
"nesse caso ele irá retornar uma tupla contendo os valores correspondentes "
"desses grupos."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:849
msgid ""
"The :meth:`~re.Match.groups` method returns a tuple containing the strings "
"for all the subgroups, from 1 up to however many there are. ::"
msgstr ""
"O método  :meth:`~re.Match.groups` retorna uma tupla contendo as strings de "
"todos os subgrupos, de 1 até o último. Independente da quantidade de "
"subgrupos informada. ::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:855
msgid ""
"Backreferences in a pattern allow you to specify that the contents of an "
"earlier capturing group must also be found at the current location in the "
"string.  For example, ``\\1`` will succeed if the exact contents of group 1 "
"can be found at the current position, and fails otherwise.  Remember that "
"Python's string literals also use a backslash followed by numbers to allow "
"including arbitrary characters in a string, so be sure to use a raw string "
"when incorporating backreferences in a RE."
msgstr ""
"Referências anteriores em um padrão permitem que você especifique que o "
"conteúdo\n"
"de um grupo capturado anteriormente também deve ser encontrado na posição\n"
"atual na sequência. Por exemplo, ``\\1`` terá sucesso se o conteúdo exato do "
"grupo 1\n"
"puder ser encontrado na posição atual, e falhar caso contrário. Lembre-se "
"que as strings\n"
"literais do Python também usam a barra invertida seguida por números para\n"
"permitir a inclusão de caracteres arbitrários em uma string, por isso "
"certifique-se de usar\n"
"strings cruas (raw) ao incorporar referências anteriores em uma RE."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:863
msgid "For example, the following RE detects doubled words in a string. ::"
msgstr "Por exemplo, a seguinte RE detecta palavras duplicadas em uma string."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:869
msgid ""
"Backreferences like this aren't often useful for just searching through a "
"string --- there are few text formats which repeat data in this way --- but "
"you'll soon find out that they're *very* useful when performing string "
"substitutions."
msgstr ""
"Referências anteriores como esta não são, geralmente, muito úteis apenas "
"para fazer pesquisa percorrendo\n"
"uma string — existem alguns formatos de texto que repetem dados dessa forma "
"—\n"
"mas em breve você irá descobrir que elas são muito úteis para realizar "
"substituições de\n"
"strings."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:875
msgid "Non-capturing and Named Groups"
msgstr "Não captura e Grupos Nomeados"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:877
msgid ""
"Elaborate REs may use many groups, both to capture substrings of interest, "
"and to group and structure the RE itself.  In complex REs, it becomes "
"difficult to keep track of the group numbers.  There are two features which "
"help with this problem.  Both of them use a common syntax for regular "
"expression extensions, so we'll look at that first."
msgstr ""
"REs elaboradas podem usar muitos grupos, tanto para capturar substrings de\n"
"interesse, quanto para agrupar e estruturar a própria RE. Em REs complexas, "
"torna-se difícil\n"
"manter o controle dos números dos grupos. Existem dois recursos que ajudam\n"
"a lidar com esse problema. Ambos usam uma sintaxe comum para extensões de "
"expressão\n"
"regular, então vamos olhar para isso em primeiro lugar."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:883
msgid ""
"Perl 5 is well known for its powerful additions to standard regular "
"expressions. For these new features the Perl developers couldn't choose new "
"single-keystroke metacharacters or new special sequences beginning with "
"``\\`` without making Perl's regular expressions confusingly different from "
"standard REs.  If they chose ``&`` as a new metacharacter, for example, old "
"expressions would be assuming that ``&`` was a regular character and "
"wouldn't have escaped it by writing ``\\&`` or ``[&]``."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:890
msgid ""
"The solution chosen by the Perl developers was to use ``(?...)`` as the "
"extension syntax.  ``?`` immediately after a parenthesis was a syntax error "
"because the ``?`` would have nothing to repeat, so this didn't introduce any "
"compatibility problems.  The characters immediately after the ``?``  "
"indicate what extension is being used, so ``(?=foo)`` is one thing (a "
"positive lookahead assertion) and ``(?:foo)`` is something else (a non-"
"capturing group containing the subexpression ``foo``)."
msgstr ""
"A solução escolhida pelos desenvolvedores do Perl foi usar ``(?...)`` como "
"uma sintaxe de\n"
"extensão. Um ``?`` imediatamente após um parêntese era um erro de sintaxe "
"porque o ``?``\n"
"não teria nada a repetir, de modo que isso não introduz quaisquer problemas "
"de\n"
"compatibilidade. Os caracteres imediatamente após um ``?`` indicam que a "
"extensão está\n"
"sendo usada, então ``(?=foo)`` é uma coisa (uma afirmação ``lookahead`` "
"positiva) e\n"
"``(?:foo)`` é outra coisa (um grupo de não captura contendo a subexpressão "
"``foo``)."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:898
msgid ""
"Python supports several of Perl's extensions and adds an extension syntax to "
"Perl's extension syntax.  If the first character after the question mark is "
"a ``P``, you know that it's an extension that's specific to Python."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:903
msgid ""
"Now that we've looked at the general extension syntax, we can return to the "
"features that simplify working with groups in complex REs."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:906
msgid ""
"Sometimes you'll want to use a group to denote a part of a regular "
"expression, but aren't interested in retrieving the group's contents. You "
"can make this fact explicit by using a non-capturing group: ``(?:...)``, "
"where you can replace the ``...`` with any other regular expression. ::"
msgstr ""
"Às vezes você vai querer usar um grupo para representar uma parte de uma "
"expressão regular, mas não está interessado em recuperar o conteúdo do "
"grupo. Você pode fazer este fato explícito usando um grupo de não-captura: "
"``(?:...)``, onde você pode substituir o ``...`` por qualquer outra "
"expressão regular. ::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:918
msgid ""
"Except for the fact that you can't retrieve the contents of what the group "
"matched, a non-capturing group behaves exactly the same as a capturing "
"group; you can put anything inside it, repeat it with a repetition "
"metacharacter such as ``*``, and nest it within other groups (capturing or "
"non-capturing). ``(?:...)`` is particularly useful when modifying an "
"existing pattern, since you can add new groups without changing how all the "
"other groups are numbered.  It should be mentioned that there's no "
"performance difference in searching between capturing and non-capturing "
"groups; neither form is any faster than the other."
msgstr ""
"Exceto pelo fato de que não é possível recuperar o conteúdo sobre o qual o "
"grupo\n"
"corresponde, um grupo de não captura se comporta exatamente da mesma forma "
"que um\n"
"grupo de captura; você pode colocar qualquer coisa dentro dele, repeti-lo "
"com um\n"
"metacaractere de repetição, como o '*', e aninhá-lo dentro de outros grupos "
"(de captura ou\n"
"não captura). ``(?:...)`` é particularmente útil para modificar um padrão "
"existente,\n"
"já que você pode adicionar novos grupos sem alterar a forma como todos os\n"
"outros grupos estão numerados. Deve ser mencionado que não há diferença de "
"desempenho na\n"
"busca entre grupos de captura e grupos de não captura; uma forma não é mais "
"rápida\n"
"que outra."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:927
msgid ""
"A more significant feature is named groups: instead of referring to them by "
"numbers, groups can be referenced by a name."
msgstr ""
"Uma característica mais significativa são os grupos nomeados: em vez de se "
"referir a\n"
"eles por números, os grupos podem ser referenciados por um nome."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:930
msgid ""
"The syntax for a named group is one of the Python-specific extensions: ``(?"
"P<name>...)``.  *name* is, obviously, the name of the group.  Named groups "
"behave exactly like capturing groups, and additionally associate a name with "
"a group.  The :ref:`match object <match-objects>` methods that deal with "
"capturing groups all accept either integers that refer to the group by "
"number or strings that contain the desired group's name.  Named groups are "
"still given numbers, so you can retrieve information about a group in two "
"ways::"
msgstr ""
"A sintaxe de um grupo nomeado é uma das extensões específicas do Python:``(?"
"P<name>...)``. ``name`` é, obviamente, o nome do grupo. Os grupos nomeados "
"se comportam exatamente como os grupos de captura, e, adicionalmente, "
"associam um nome a um grupo. Todos os métodos ``MatchObject`` que lidam com "
"grupos de captura aceitam tanto inteiros que se referem ao grupo por número "
"ou strings que contêm o nome do grupo desejado. Os grupos nomeados ainda "
"recebem números, então você pode recuperar informações sobre um grupo de "
"duas maneiras::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:945
msgid ""
"Named groups are handy because they let you use easily-remembered names, "
"instead of having to remember numbers.  Here's an example RE from the :mod:"
"`imaplib` module::"
msgstr ""
"Os grupos nomeados são úteis porque eles permitem que você use nomes de "
"fácil\n"
"lembrança, em vez de ter que lembrar de números. Aqui está um exemplo de RE "
"usando o\n"
"módulo ``imaplib``::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:956
msgid ""
"It's obviously much easier to retrieve ``m.group('zonem')``, instead of "
"having to remember to retrieve group 9."
msgstr ""
"É obviamente muito mais fácil fazer referência a ``m.group('zonem')``, do "
"que ter que se\n"
"lembrar de capturar o grupo 9."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:959
msgid ""
"The syntax for backreferences in an expression such as ``(...)\\1`` refers "
"to the number of the group.  There's naturally a variant that uses the group "
"name instead of the number. This is another Python extension: ``(?P=name)`` "
"indicates that the contents of the group called *name* should again be "
"matched at the current point.  The regular expression for finding doubled "
"words, ``\\b(\\w+)\\s+\\1\\b`` can also be written as ``\\b(?"
"P<word>\\w+)\\s+(?P=word)\\b``::"
msgstr ""
"A sintaxe para referências anteriores em uma expressão, tal como "
"``(...)\\1``, faz referência ao número do grupo. Existe, naturalmente, uma "
"variante que usa o nome do grupo em vez do número. Isto é outra extensão "
"Python: ``(?P=name)`` indica que o conteúdo do grupo chamado *name* deve, "
"novamente, ser correspondido no ponto atual. A expressão regular para "
"encontrar palavras duplicadas, ``(\\b\\w+)\\s+\\1``, também pode ser escrita "
"como ``(?P<word>\\b\\w+)\\s+(?P=word)``::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:972
msgid "Lookahead Assertions"
msgstr "Afirmação Lookahead"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:974
msgid ""
"Another zero-width assertion is the lookahead assertion.  Lookahead "
"assertions are available in both positive and negative form, and  look like "
"this:"
msgstr ""
"Outra afirmação de \"largura zero\" é a afirmação lookahead. Afirmações "
"LookAhead\n"
"estão disponíveis tanto na forma positiva quanto na negativa, e se parece "
"com isto:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:982
msgid "``(?=...)``"
msgstr "``(?=...)``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:978
msgid ""
"Positive lookahead assertion.  This succeeds if the contained regular "
"expression, represented here by ``...``, successfully matches at the current "
"location, and fails otherwise. But, once the contained expression has been "
"tried, the matching engine doesn't advance at all; the rest of the pattern "
"is tried right where the assertion started."
msgstr ""
"Afirmação lookahead positiva. Retorna sucesso se a expressão regular "
"informada, aqui\n"
"representada por ``...``, corresponde com o conteúdo da localização atual, e "
"retorna falha caso contrário.\n"
"Mas, uma vez que a expressão informada tenha sido testada, o mecanismo de "
"correspondência não\n"
"faz qualquer avanço; o resto do padrão é tentado no mesmo local de onde a "
"afirmação foi iniciada."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:987
msgid "``(?!...)``"
msgstr "``(?!...)``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:985
msgid ""
"Negative lookahead assertion.  This is the opposite of the positive "
"assertion; it succeeds if the contained expression *doesn't* match at the "
"current position in the string."
msgstr ""
"Afirmação lookahead negativa. É o oposto da afirmação positiva; será bem-"
"sucedida se\n"
"a expressão informada não corresponder com o conteúdo da posição atual na "
"string."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:989
msgid ""
"To make this concrete, let's look at a case where a lookahead is useful. "
"Consider a simple pattern to match a filename and split it apart into a base "
"name and an extension, separated by a ``.``.  For example, in ``news.rc``, "
"``news`` is the base name, and ``rc`` is the filename's extension."
msgstr ""
"Para tornar isto concreto, vamos olhar para um caso em que um lookahead é "
"útil.\n"
"Considere um padrão simples para corresponder com um nome de arquivo e "
"divida-o em pedaços,\n"
"um nome base e uma extensão, separados por um ``.``. Por exemplo, em\n"
"``news.rc,news`` é o nome base, e ``rc`` é a extensão do nome de arquivo."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:994
msgid "The pattern to match this is quite simple:"
msgstr "O padrão para corresponder com isso é muito simples::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:996
msgid "``.*[.].*$``"
msgstr "``.*[.].*$``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:998
msgid ""
"Notice that the ``.`` needs to be treated specially because it's a "
"metacharacter, so it's inside a character class to only match that specific "
"character.  Also notice the trailing ``$``; this is added to ensure that all "
"the rest of the string must be included in the extension.  This regular "
"expression matches ``foo.bar`` and ``autoexec.bat`` and ``sendmail.cf`` and "
"``printers.conf``."
msgstr ""

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1005
msgid ""
"Now, consider complicating the problem a bit; what if you want to match "
"filenames where the extension is not ``bat``? Some incorrect attempts:"
msgstr ""
"Agora, considere complicar um pouco o problema; e se você desejar\n"
"corresponder com nomes de arquivos onde a extensão não é ``bat``? Algumas "
"tentativas\n"
"incorretas::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1008
msgid ""
"``.*[.][^b].*$``  The first attempt above tries to exclude ``bat`` by "
"requiring that the first character of the extension is not a ``b``.  This is "
"wrong, because the pattern also doesn't match ``foo.bar``."
msgstr ""
"``.*[.][^b].*$`` A primeira tentativa acima tenta excluir bat, exigindo que "
"o primeiro caractere da\n"
"extensão não é um b. Isso é errado, porque o padrão também não corresponde\n"
"``foo.bar``::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1012
msgid "``.*[.]([^b]..|.[^a].|..[^t])$``"
msgstr "``.*[.]([^b]..|.[^a].|..[^t])$``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1014
msgid ""
"The expression gets messier when you try to patch up the first solution by "
"requiring one of the following cases to match: the first character of the "
"extension isn't ``b``; the second character isn't ``a``; or the third "
"character isn't ``t``.  This accepts ``foo.bar`` and rejects ``autoexec."
"bat``, but it requires a three-letter extension and won't accept a filename "
"with a two-letter extension such as ``sendmail.cf``.  We'll complicate the "
"pattern again in an effort to fix it."
msgstr ""
"A expressão fica mais confusa se você tentar remendar a primeira solução,\n"
"exigindo que uma das seguintes situações corresponda: o primeiro caractere "
"da extensão não é ``b``; o\n"
"segundo caractere não é ``a``; ou o terceiro caractere não é ``t``. Isso "
"aceita\n"
"``foo.bar`` e rejeita ``autoexec.bat``, mas requer uma extensão de três "
"letras e não\n"
"aceitará um nome de arquivo com uma extensão de duas letras, tal como "
"``sendmail.cf``.\n"
"Nós iremos complicar o padrão novamente em um esforço para corrigi-lo::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1022
msgid "``.*[.]([^b].?.?|.[^a]?.?|..?[^t]?)$``"
msgstr "``.*[.]([^b].?.?|.[^a]?.?|..?[^t]?)$``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1024
msgid ""
"In the third attempt, the second and third letters are all made optional in "
"order to allow matching extensions shorter than three characters, such as "
"``sendmail.cf``."
msgstr ""
"Na terceira tentativa, a segunda e terceira letras são todas consideradas "
"opcionais, a fim de\n"
"permitir correspondência com as extensões mais curtas do que três "
"caracteres, tais como\n"
"``sendmail.cf``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1028
msgid ""
"The pattern's getting really complicated now, which makes it hard to read "
"and understand.  Worse, if the problem changes and you want to exclude both "
"``bat`` and ``exe`` as extensions, the pattern would get even more "
"complicated and confusing."
msgstr ""
"O padrão está ficando realmente muito complicado agora, o que faz com que "
"seja difícil de ler e\n"
"compreender. Pior ainda, se o problema mudar e você quiser excluir tanto "
"``bat`` quanto ``exe``\n"
"como extensões, o padrão iria ficar ainda mais complicado e confuso."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1033
msgid "A negative lookahead cuts through all this confusion:"
msgstr "Um lookahead negativo elimina toda esta confusão::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1035
msgid ""
"``.*[.](?!bat$)[^.]*$``  The negative lookahead means: if the expression "
"``bat`` doesn't match at this point, try the rest of the pattern; if "
"``bat$`` does match, the whole pattern will fail.  The trailing ``$`` is "
"required to ensure that something like ``sample.batch``, where the extension "
"only starts with ``bat``, will be allowed.  The ``[^.]*`` makes sure that "
"the pattern works when there are multiple dots in the filename."
msgstr ""
"``.*[.](?!bat$).*$`` O lookahead negativo significa: se a expressão ``bat`` "
"não corresponder até este momento,\n"
"tente o resto do padrão; se ``bat$`` tem correspondência, todo o padrão irá "
"falhar. O\n"
"final ``$`` é necessário para garantir que algo como ``sample.batch``, onde "
"a extensão\n"
"só começa com o ``bat``, será permitido."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1042
msgid ""
"Excluding another filename extension is now easy; simply add it as an "
"alternative inside the assertion.  The following pattern excludes filenames "
"that end in either ``bat`` or ``exe``:"
msgstr ""
"Excluir uma outra extensão de nome de arquivo agora é fácil; basta fazer a "
"adição de uma\n"
"alternativa dentro da afirmação. O padrão a seguir exclui os nomes de "
"arquivos que\n"
"terminam com ``bat`` ou ``exe``::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1046
msgid "``.*[.](?!bat$|exe$)[^.]*$``"
msgstr "``.*[.](?!bat$|exe$)[^.]*$``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1050
msgid "Modifying Strings"
msgstr "Modificando Strings"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1052
msgid ""
"Up to this point, we've simply performed searches against a static string. "
"Regular expressions are also commonly used to modify strings in various "
"ways, using the following pattern methods:"
msgstr ""
"Até este ponto, nós simplesmente realizamos pesquisas em uma string "
"estática. As\n"
"expressões regulares também são comumente usadas para modificar strings "
"através de várias\n"
"maneiras, usando os seguintes métodos padrão:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1059
msgid "``split()``"
msgstr "``split()``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1059
msgid "Split the string into a list, splitting it wherever the RE matches"
msgstr ""
"Divide a string em uma lista, dividindo-a onde quer que haja correspondência "
"com a RE "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1062
msgid "``sub()``"
msgstr "``sub()``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1062
msgid ""
"Find all substrings where the RE matches, and replace them with a different "
"string"
msgstr ""
"Encontra todas as substrings que correspondem com a RE e faz a substituição "
"por uma string diferente"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1065
msgid "``subn()``"
msgstr "``subn()``"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1065
msgid ""
"Does the same thing as :meth:`!sub`,  but returns the new string and the "
"number of replacements"
msgstr ""
"Faz a mesma coisa que :meth:`!sub`, mas retorna a nova string e o número de "
"substituições"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1072
msgid "Splitting Strings"
msgstr "Dividindo as Strings"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1074
msgid ""
"The :meth:`~re.Pattern.split` method of a pattern splits a string apart "
"wherever the RE matches, returning a list of the pieces. It's similar to "
"the :meth:`~str.split` method of strings but provides much more generality "
"in the delimiters that you can split by; string :meth:`!split` only supports "
"splitting by whitespace or by a fixed string.  As you'd expect, there's a "
"module-level :func:`re.split` function, too."
msgstr ""
"O método :meth:`~re.Pattern.split`  de um padrão divide uma string em "
"pedaços onde quer que a RE corresponda, retornando uma lista formada por "
"esses pedaços. É semelhante ao método :meth:`~str.split` de strings, mas "
"oferece muito mais generalidade nos delimitadores, e assim, você pode fazer "
"disso para fazer a divisão; :meth:`!split` só implementa a divisão de espaço "
"em branco ou por uma string\n"
"fixa. Como você deve deduzir, existe também uma função a nível de módulo "
"``re.split()``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1085
msgid ""
"Split *string* by the matches of the regular expression.  If capturing "
"parentheses are used in the RE, then their contents will also be returned as "
"part of the resulting list.  If *maxsplit* is nonzero, at most *maxsplit* "
"splits are performed."
msgstr ""
"Divide a string usando a correspondência com uma expressão regular. Se os "
"parênteses de\n"
"captura forem utilizados na RE, então seu conteúdo também será retornado "
"como\n"
"parte da lista resultante. Se maxsplit é diferente de zero, um número de "
"divisões\n"
"``maxsplit`` será executado."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1090
msgid ""
"You can limit the number of splits made, by passing a value for *maxsplit*. "
"When *maxsplit* is nonzero, at most *maxsplit* splits will be made, and the "
"remainder of the string is returned as the final element of the list.  In "
"the following example, the delimiter is any sequence of non-alphanumeric "
"characters. ::"
msgstr ""
"Você pode limitar o número de divisões feitas, passando um valor para "
"maxsplit.\n"
"Quando ``maxsplit`` é diferente de zero, um determinado número de divisões "
"``maxsplit`` será executado, e o\n"
"restante da string é retornado como o elemento final da lista. No exemplo a "
"seguir, o\n"
"delimitador é qualquer sequência de caracteres não alfanuméricos."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1102
msgid ""
"Sometimes you're not only interested in what the text between delimiters is, "
"but also need to know what the delimiter was.  If capturing parentheses are "
"used in the RE, then their values are also returned as part of the list.  "
"Compare the following calls::"
msgstr ""
"Às vezes, você não está apenas interessado no que o texto que está entre\n"
"delimitadores contém, mas também precisa saber qual o delimitador foi usado. "
"Se os parênteses\n"
"de captura são utilizados na RE, então os respectivos valores são também\n"
"retornados como parte da lista. Compare as seguintes chamadas:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1114
msgid ""
"The module-level function :func:`re.split` adds the RE to be used as the "
"first argument, but is otherwise the same.   ::"
msgstr ""
"A função de nível de módulo re.split() adiciona a RE a ser utilizada como o\n"
"primeiro argumento, mas é, em determinadas circunstâncias, a mesma."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1126
msgid "Search and Replace"
msgstr "Busca e Substituição"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1128
msgid ""
"Another common task is to find all the matches for a pattern, and replace "
"them with a different string.  The :meth:`~re.Pattern.sub` method takes a "
"replacement value, which can be either a string or a function, and the "
"string to be processed."
msgstr ""
"Outra tarefa comum é encontrar todas as combinações para um padrão e "
"substituí-las por uma string diferente. O método :meth:`~re.Pattern.sub` "
"recebe um valor de substituição, que pode ser uma string ou uma função, e a "
"string a ser processada."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1135
msgid ""
"Returns the string obtained by replacing the leftmost non-overlapping "
"occurrences of the RE in *string* by the replacement *replacement*.  If the "
"pattern isn't found, *string* is returned unchanged."
msgstr ""
"Retorna a string obtida substituindo as ocorrências mais à esquerda não "
"sobrepostas\n"
"da RE em ``string`` pela substituição ``replacement``. Se o padrão não for "
"encontrado, a\n"
"``string`` é retornada inalterada."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1139
msgid ""
"The optional argument *count* is the maximum number of pattern occurrences "
"to be replaced; *count* must be a non-negative integer.  The default value "
"of 0 means to replace all occurrences."
msgstr ""
"O argumento opcional ``count`` é o número máximo de ocorrências do padrão a "
"ser\n"
"substituído; ``count`` deve ser um número inteiro não negativo. O valor "
"padrão ``0``\n"
"significa para substituir todas as ocorrências."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1143
msgid ""
"Here's a simple example of using the :meth:`~re.Pattern.sub` method.  It "
"replaces colour names with the word ``colour``::"
msgstr ""
"Aqui está um exemplo simples do uso do método :meth:`~re.Pattern.sub`. Ele "
"substitui nomes de cores pela palavra ``colour``::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1152
msgid ""
"The :meth:`~re.Pattern.subn` method does the same work, but returns a 2-"
"tuple containing the new string value and the number of replacements  that "
"were performed::"
msgstr ""
"O método :meth:`~re.Pattern.subn` faz o mesmo trabalho, mas retorna uma "
"tupla com duas informações; contém uma string com novo valor e o número de "
"substituições que foram realizadas:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1161
msgid ""
"Empty matches are replaced only when they're not adjacent to a previous "
"empty match. ::"
msgstr ""
"Correspondências vazias somente são substituídas quando não estão adjacente "
"(próxima) a uma correspondência vazia anterior."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1168
msgid ""
"If *replacement* is a string, any backslash escapes in it are processed.  "
"That is, ``\\n`` is converted to a single newline character, ``\\r`` is "
"converted to a carriage return, and so forth. Unknown escapes such as "
"``\\&`` are left alone. Backreferences, such as ``\\6``, are replaced with "
"the substring matched by the corresponding group in the RE.  This lets you "
"incorporate portions of the original text in the resulting replacement "
"string."
msgstr ""
"Se a substituição (replacement) é uma string, qualquer barra invertida é "
"interpretada e processada. Isto é, ``\\n`` é convertido a um único caractere "
"de nova linha, ``\\r`` é convertido em um retorno do carro, e assim por "
"diante. Casos desconhecidos, como ``\\&`` são ignorados. Referências "
"anteriores (retrovisor - Aurelio), como ``\\6``, são substituídas com a "
"substring correspondida pelo grupo correspondente na RE. Isso permite que "
"você incorpore partes do texto original na string de substituição resultante."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1175
msgid ""
"This example matches the word ``section`` followed by a string enclosed in "
"``{``, ``}``, and changes ``section`` to ``subsection``::"
msgstr ""
"Este exemplo corresponde com a palavra ``section``, seguida por uma string "
"colocada entre\n"
"``{, }`` e altera ``section`` para ``subsection``:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1182
msgid ""
"There's also a syntax for referring to named groups as defined by the ``(?"
"P<name>...)`` syntax.  ``\\g<name>`` will use the substring matched by the "
"group named ``name``, and  ``\\g<number>``  uses the corresponding group "
"number. ``\\g<2>`` is therefore equivalent to ``\\2``,  but isn't ambiguous "
"in a replacement string such as ``\\g<2>0``.  (``\\20`` would be interpreted "
"as a reference to group 20, not a reference to group 2 followed by the "
"literal character ``'0'``.)  The following substitutions are all equivalent, "
"but use all three variations of the replacement string. ::"
msgstr ""
"Há também uma sintaxe para se referir a grupos nomeados como definido pela\n"
"sintaxe ``(?P<name>...)``. ``\\g<name>`` usará a substring correspondida "
"pelo grupo\n"
"com nome ``name`` e ``\\g<number>`` utiliza o número do grupo "
"correspondente. ``.\\g<2>`` é,\n"
"portanto, equivalente a ``\\2``, mas não é ambígua em uma string de "
"substituição (replacement), tal\n"
"como ``\\g<2>0``. (``\\20`` seria interpretado como uma referência ao grupo "
"de ``20``, e não\n"
"uma referência ao grupo ``2`` seguido pelo caractere literal ``0``). As "
"seguintes substituições são todas equivalentes, são usadas todas as três "
"variações da string de\n"
"substituição (replacement)."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1199
msgid ""
"*replacement* can also be a function, which gives you even more control.  If "
"*replacement* is a function, the function is called for every non-"
"overlapping occurrence of *pattern*.  On each call, the function is passed "
"a :ref:`match object <match-objects>` argument for the match and can use "
"this information to compute the desired replacement string and return it."
msgstr ""
"A substituição (replacement) também pode ser uma função, o que dá a você "
"ainda mais controle. Se a\n"
"substituição (replacement) é uma função, a função é chamada para cada "
"ocorrência não\n"
"sobreposta de padrão. Em cada chamada, a função passa o argumento\n"
"MatchObject para a correspondência e pode usar esta informação para calcular "
"a\n"
"string de substituição desejada e fazer seu retorno."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1205
msgid ""
"In the following example, the replacement function translates decimals into "
"hexadecimal::"
msgstr ""
"No exemplo a seguir, a função de substituição (replacement) traduz decimal "
"em hexadecimal::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1217
msgid ""
"When using the module-level :func:`re.sub` function, the pattern is passed "
"as the first argument.  The pattern may be provided as an object or as a "
"string; if you need to specify regular expression flags, you must either use "
"a pattern object as the first parameter, or use embedded modifiers in the "
"pattern string, e.g. ``sub(\"(?i)b+\", \"x\", \"bbbb BBBB\")`` returns ``'x "
"x'``."
msgstr ""
"Ao utilizar a função de nível de módulo ``re.sub()``, o padrão é passado "
"como o primeiro\n"
"argumento. O padrão pode ser fornecido como um objeto ou como uma string; "
"se\n"
"você precisa especificar flags de expressões regulares, você deve usar um "
"objeto\n"
"padrão como o primeiro parâmetro, ou usar modificadores embutidos na string\n"
"padrão, por exemplo, ``sub(\"(?i)b+\", \"x\", \"bbbb BBBB\")`` retorna ``x "
"x``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1225
msgid "Common Problems"
msgstr "Problemas Comuns"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1227
msgid ""
"Regular expressions are a powerful tool for some applications, but in some "
"ways their behaviour isn't intuitive and at times they don't behave the way "
"you may expect them to.  This section will point out some of the most common "
"pitfalls."
msgstr ""
"Expressões regulares são uma ferramenta poderosa para algumas aplicações, "
"mas de\n"
"certa forma o seu comportamento não é intuitivo, e às vezes, as RE não se "
"comportam\n"
"da maneira que você espera que elas se comportem. Esta seção irá apontar "
"algumas das\n"
"armadilhas mais comuns."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1233
msgid "Use String Methods"
msgstr "Usando String Methods"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1235
msgid ""
"Sometimes using the :mod:`re` module is a mistake.  If you're matching a "
"fixed string, or a single character class, and you're not using any :mod:"
"`re` features such as the :const:`~re.IGNORECASE` flag, then the full power "
"of regular expressions may not be required. Strings have several methods for "
"performing operations with fixed strings and they're usually much faster, "
"because the implementation is a single small C loop that's been optimized "
"for the purpose, instead of the large, more generalized regular expression "
"engine."
msgstr ""
"Às vezes, usar o módulo :mod:`re` é um equívoco. Se você está fazendo "
"correspondência com uma string fixa, ou uma classe de caractere única, e "
"você não está usando nenhum recurso de :mod:`re` como o sinalizador :const:"
"`~re.IGNORECASE`, então pode não ser necessário todo o poder das expressões "
"regulares. Strings possui vários métodos para executar operações com strings "
"fixas e eles são, geralmente, muito mais rápidos, porque a implementação é "
"um único e pequeno laço (loop) de C que foi otimizado para esse propósito, "
"em vez do grande e mais generalizado mecanismo das expressões regulares."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1243
msgid ""
"One example might be replacing a single fixed string with another one; for "
"example, you might replace ``word`` with ``deed``.  :func:`re.sub` seems "
"like the function to use for this, but consider the :meth:`~str.replace` "
"method.  Note that :meth:`!replace` will also replace ``word`` inside words, "
"turning ``swordfish`` into ``sdeedfish``, but the  naive RE ``word`` would "
"have done that, too.  (To avoid performing the substitution on parts of "
"words, the pattern would have to be ``\\bword\\b``, in order to require that "
"``word`` have a word boundary on either side.  This takes the job beyond  :"
"meth:`!replace`'s abilities.)"
msgstr ""
"Um exemplo pode ser a substituição de uma string fixa única por outra; por "
"exemplo, você pode substituir ``word`` por ``deed``. :func:`re.sub` parece "
"ser a função a ser usada para isso, mas considere o método :meth:`~str."
"replace`. Note que :meth:`!replace` também irá substituir ``word`` dentro de "
"palavras, transformando ``swordfish`` em ``sdeedfish``, mas uma RE ingênua "
"teria feito isso também. (Para evitar a realização da substituição de partes "
"de palavras, o padrão teria que ser ``\\bword\\b``, a fim de exigir que "
"``word`` tenha um limite de palavra em ambos os lados (o recurso borda). "
"Isso leva o tarefa para além da capacidade de :meth:`!replace`.)"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1252
msgid ""
"Another common task is deleting every occurrence of a single character from "
"a string or replacing it with another single character.  You might do this "
"with something like ``re.sub('\\n', ' ', S)``, but :meth:`~str.translate` is "
"capable of doing both tasks and will be faster than any regular expression "
"operation can be."
msgstr ""
"Outra tarefa comum é apagar todas as ocorrências de um único caractere de "
"uma string ou substitui-lo por um outro caractere único. Você pode fazer "
"isso com algo como ``re.sub('\\n', ' ', S)``, mas :meth:`~str.translate` é "
"capaz de fazer ambas as tarefas e será mais rápida do que qualquer operação "
"de expressão regular pode ser."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1258
msgid ""
"In short, before turning to the :mod:`re` module, consider whether your "
"problem can be solved with a faster and simpler string method."
msgstr ""
"Em suma, antes de recorrer ao o módulo ``re``, considere se o seu problema "
"pode ser\n"
"resolvido com um método string mais rápido e mais simples."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1263
msgid "match() versus search()"
msgstr "match() versus search()"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1265
msgid ""
"The :func:`~re.match` function only checks if the RE matches at the "
"beginning of the string while :func:`~re.search` will scan forward through "
"the string for a match. It's important to keep this distinction in mind.  "
"Remember,  :func:`!match` will only report a successful match which will "
"start at 0; if the match wouldn't start at zero,  :func:`!match` will *not* "
"report it. ::"
msgstr ""
"A função :func:`~re.match` somente verifica se a  RE corresponde ao início "
"da string, enquanto :func:`~re.search` fará a varredura através na string "
"procurando por uma correspondência. É importante manter esta distinção em "
"mente. Lembre-se, :func:`!match` só irá relatar uma correspondência bem-"
"sucedida que começa em 0; se a correspondência não começar em zero, :func:`!"
"match` não vai reportá-la."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1276
msgid ""
"On the other hand, :func:`~re.search` will scan forward through the string, "
"reporting the first match it finds. ::"
msgstr ""
"Por outro lado, :func:`~re.search` fará a varredura percorrendo a string e "
"relatando a primeira correspondência que encontrar."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1284
msgid ""
"Sometimes you'll be tempted to keep using :func:`re.match`, and just add ``."
"*`` to the front of your RE.  Resist this temptation and use :func:`re."
"search` instead.  The regular expression compiler does some analysis of REs "
"in order to speed up the process of looking for a match.  One such analysis "
"figures out what the first character of a match must be; for example, a "
"pattern starting with ``Crow`` must match starting with a ``'C'``.  The "
"analysis lets the engine quickly scan through the string looking for the "
"starting character, only trying the full match if a ``'C'`` is found."
msgstr ""
"Às vezes, você vai ficar tentado a continuar usando ``re.match()``, e apenas "
"adicionar ``.*`` ao início de sua RE.\n"
"Resista a essa tentação e use ``re.search()`` em vez disso. O\n"
"compilador de expressão regular faz alguma análise das REs, a fim de "
"acelerar o\n"
"processo de procura de uma correspondência. Tal análise descobre o que o "
"primeiro\n"
"caractere de uma string deve ser; por exemplo, um padrão começando com "
"``Crow``\n"
"deve corresponder com algo iniciando com ``C``. A análise permite que o "
"mecanismo faça a varredura rapidamente através\n"
"da string a procura do caractere inicial, apenas tentando a combinação "
"completa se um ``C`` for encontrado."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1293
msgid ""
"Adding ``.*`` defeats this optimization, requiring scanning to the end of "
"the string and then backtracking to find a match for the rest of the RE.  "
"Use :func:`re.search` instead."
msgstr ""
"Adicionar um ``.*`` evita essa otimização, sendo necessário a varredura até "
"o final da string e, em seguida, retroceder\n"
"para encontrar uma correspondência para o resto da RE. Use ``re.search()`` "
"em vez disso."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1299
msgid "Greedy versus Non-Greedy"
msgstr "Gulosos versus não Gulosos"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1301
msgid ""
"When repeating a regular expression, as in ``a*``, the resulting action is "
"to consume as much of the pattern as possible.  This fact often bites you "
"when you're trying to match a pair of balanced delimiters, such as the angle "
"brackets surrounding an HTML tag.  The naive pattern for matching a single "
"HTML tag doesn't work because of the greedy nature of ``.*``. ::"
msgstr ""
"Ao repetir uma expressão regular, como em ``a*``, a ação resultante é "
"consumir o tanto do\n"
"padrão quanto possível. Este fato, muitas vezes derruba você quando você "
"está tentando\n"
"corresponder com um par de delimitadores balanceados, tal como os colchetes "
"que cercam uma tag\n"
"HTML. O padrão ingênuo para combinar uma única tag HTML não funciona por "
"causa\n"
"da natureza gulosa de ``.*``."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1315
msgid ""
"The RE matches the ``'<'`` in ``'<html>'``, and the ``.*`` consumes the rest "
"of the string.  There's still more left in the RE, though, and the ``>`` "
"can't match at the end of the string, so the regular expression engine has "
"to backtrack character by character until it finds a match for the ``>``.   "
"The final match extends from the ``'<'`` in ``'<html>'`` to the ``'>'`` in "
"``'</title>'``, which isn't what you want."
msgstr ""
"A RE corresponde a ``'<'`` em ``'<html>'``, e o ``.*`` consome o resto da "
"string. Existe ainda mais coisa existente na RE, no entanto, e o ``>`` pode "
"não corresponder com o final da string, de modo que o mecanismo de expressão "
"regular tem que recuar caractere por caractere até encontrar uma "
"correspondência para a ``>``. A correspondência final se estende do ``'<'`` "
"em ``'<html>'`` ao ``'>'`` em ``'</title>'``, que não é o que você quer."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1322
msgid ""
"In this case, the solution is to use the non-greedy qualifiers ``*?``, ``+?"
"``, ``??``, or ``{m,n}?``, which match as *little* text as possible.  In the "
"above example, the ``'>'`` is tried immediately after the first ``'<'`` "
"matches, and when it fails, the engine advances a character at a time, "
"retrying the ``'>'`` at every step.  This produces just the right result::"
msgstr ""
"Neste caso, a solução é usar os qualificadores não-gulosos ``*?, +?,??``, or "
"``{m,n}?``,\n"
"que corresponde com o mínimo de texto possível. No exemplo acima, o ``>`` é "
"tentado\n"
"imediatamente após a primeira correspondência de ``<``, e quando ele falhar, "
"o mecanismo avança\n"
"um caractere de cada vez, experimentado ``>`` a cada passo. Isso produz "
"justamente o\n"
"resultado correto:"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1331
msgid ""
"(Note that parsing HTML or XML with regular expressions is painful. Quick-"
"and-dirty patterns will handle common cases, but HTML and XML have special "
"cases that will break the obvious regular expression; by the time you've "
"written a regular expression that handles all of the possible cases, the "
"patterns will be *very* complicated.  Use an HTML or XML parser module for "
"such tasks.)"
msgstr ""
"(Note que a análise de HTML ou XML com expressões regulares é dolorosa. "
"Padrões\n"
"\"sujos e rápidos\" irão lidar com casos comuns, mas HTML e XML tem casos "
"especiais\n"
"que irão quebrar expressões regulares óbvias; com o tempo, expressões "
"regulares que você venha a escrever para lidar com todos os casos possíveis, "
"se tornarão um padrão muito\n"
"complicado. Use um módulo de análise de HTML ou XML para tais tarefas.)"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1339
msgid "Using re.VERBOSE"
msgstr "Usando re.VERBOSE"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1341
msgid ""
"By now you've probably noticed that regular expressions are a very compact "
"notation, but they're not terribly readable.  REs of moderate complexity can "
"become lengthy collections of backslashes, parentheses, and metacharacters, "
"making them difficult to read and understand."
msgstr ""
"Nesse momento, você provavelmente deve ter notado que as expressões "
"regulares são de uma notação\n"
"muito compacta, mas não é possível dizer que são legíveis. REs de "
"complexidade\n"
"moderada podem se tornar longas coleções de barras invertidas, parênteses e\n"
"metacaracteres, fazendo com que se tornem difíceis de ler e compreender."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1346
msgid ""
"For such REs, specifying the :const:`re.VERBOSE` flag when compiling the "
"regular expression can be helpful, because it allows you to format the "
"regular expression more clearly."
msgstr ""
"Para tais REs, especificar a flag :const:`re.VERBOSE` ao compilar a "
"expressão regular pode ser útil, porque permite que você formate a expressão "
"regular de forma mais clara."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1350
msgid ""
"The ``re.VERBOSE`` flag has several effects.  Whitespace in the regular "
"expression that *isn't* inside a character class is ignored.  This means "
"that an expression such as ``dog | cat`` is equivalent to the less readable "
"``dog|cat``, but ``[a b]`` will still match the characters ``'a'``, ``'b'``, "
"or a space.  In addition, you can also put comments inside a RE; comments "
"extend from a ``#`` character to the next newline.  When used with triple-"
"quoted strings, this enables REs to be formatted more neatly::"
msgstr ""
"A flag ``re.VERBOSE`` produz vários efeitos. Espaço em branco na expressão "
"regular que\n"
"não está dentro de uma classe de caracteres é ignorado. Isto significa que "
"uma\n"
"expressão como ``dog | cat`` é equivalente ao menos legível ``dog|cat``, mas "
"``[a b]``\n"
"ainda vai coincidir com os caracteres ``a``, ``b``, ou um ``espaço``. Além "
"disso, você\n"
"também pode colocar comentários dentro de uma RE; comentários se estendem de "
"um\n"
"caractere ``#`` até a próxima nova linha. Quando usados junto com strings de "
"aspas\n"
"triplas, isso permite as REs serem formatadas mais ordenadamente::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1367
msgid "This is far more readable than::"
msgstr "Isso é muito mais legível do que::"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1373
msgid "Feedback"
msgstr "Comentários"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1375
msgid ""
"Regular expressions are a complicated topic.  Did this document help you "
"understand them?  Were there parts that were unclear, or Problems you "
"encountered that weren't covered here?  If so, please send suggestions for "
"improvements to the author."
msgstr ""
"Expressões regulares são um tópico complicado. Esse documento ajudou você a "
"compreendê-las?\n"
"Existem partes que foram pouco claras, ou situações que você vivenciou\n"
"que não foram abordadas aqui? Se assim for, por favor, envie sugestões de "
"melhorias\n"
"para o autor. "

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/howto/regex.rst:1380
msgid ""
"The most complete book on regular expressions is almost certainly Jeffrey "
"Friedl's Mastering Regular Expressions, published by O'Reilly.  "
"Unfortunately, it exclusively concentrates on Perl and Java's flavours of "
"regular expressions, and doesn't contain any Python material at all, so it "
"won't be useful as a reference for programming in Python.  (The first "
"edition covered Python's now-removed :mod:`!regex` module, which won't help "
"you much.)  Consider checking it out from your library."
msgstr ""
"O livro mais completo sobre expressões regulares é quase certamente o "
"Mastering Regular Expressions de Jeffrey Friedl’s, publicado pela O'Reilly. "
"Infelizmente, ele se concentra exclusivamente em sabores de expressões "
"regulares do Perl e do Java, e não contém qualquer material relativo a "
"Python, por isso não vai ser útil como uma referência para a programação em "
"Python. (A primeira edição cobre o módulo :mod:`!regex` agora removido do "
"Python, o que não vai te ajudar muito.) Considere removê-lo de sua "
"biblioteca."
