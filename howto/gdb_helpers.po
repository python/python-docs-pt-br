# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-16 15:24+0000\n"
"PO-Revision-Date: 2024-02-23 16:46+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../howto/gdb_helpers.rst:5
msgid "Debugging C API extensions and CPython Internals with GDB"
msgstr "Depurando extensões de API C e internos do CPython com GDB"

#: ../../howto/gdb_helpers.rst:9
msgid ""
"This document explains how the Python GDB extension, ``python-gdb.py``, can "
"be used with the GDB debugger to debug CPython extensions and the CPython "
"interpreter itself."
msgstr ""
"Este documento explica como a extensão GDB do Python, ``python-gdb.py``, "
"pode ser usada com o depurador GDB para depurar extensões CPython e o "
"próprio interpretador CPython."

#: ../../howto/gdb_helpers.rst:13
msgid ""
"When debugging low-level problems such as crashes or deadlocks, a low-level "
"debugger, such as GDB, is useful to diagnose and correct the issue. By "
"default, GDB (or any of its front-ends) doesn't support high-level "
"information specific to the CPython interpreter."
msgstr ""
"Ao depurar problemas de baixo nível, como falhas ou impasses, um depurador "
"de baixo nível, como o GDB, é útil para diagnosticar e corrigir o problema. "
"Por padrão, o GDB (ou qualquer uma de suas interfaces) não oferece suporte a "
"informações de alto nível específicas do interpretador CPython."

#: ../../howto/gdb_helpers.rst:18
msgid ""
"The ``python-gdb.py`` extension adds CPython interpreter information to GDB. "
"The extension helps introspect the stack of currently executing Python "
"functions. Given a Python object represented by a :c:expr:`PyObject *` "
"pointer, the extension surfaces the type and value of the object."
msgstr ""
"A extensão ``python-gdb.py`` adiciona informações do interpretador CPython "
"ao GDB. A extensão ajuda a inspecionar a pilha de funções Python atualmente "
"em execução. Dado um objeto Python representado por um ponteiro :c:expr:"
"`PyObject *`, a extensão mostra o tipo e o valor do objeto."

#: ../../howto/gdb_helpers.rst:23
msgid ""
"Developers who are working on CPython extensions or tinkering with parts of "
"CPython that are written in C can use this document to learn how to use the "
"``python-gdb.py`` extension with GDB."
msgstr ""
"Desenvolvedores que estão trabalhando em extensões CPython ou mexendo com "
"partes do CPython escritas em C podem usar este documento para aprender como "
"usar a extensão ``python-gdb.py`` com o GDB."

#: ../../howto/gdb_helpers.rst:29
msgid ""
"This document assumes that you are familiar with the basics of GDB and the "
"CPython C API. It consolidates guidance from the `devguide <https://devguide."
"python.org>`_  and the `Python wiki <https://wiki.python.org/moin/"
"DebuggingWithGdb>`_."
msgstr ""
"Este documento pressupõe que você esteja familiarizado com o básico do GDB e "
"da API C do CPython. Ele consolida orientações do `devguide <https://"
"devguide.python.org>`_ e da `wiki do Python <https://wiki.python.org/moin/"
"DebuggingWithGdb>`_."

#: ../../howto/gdb_helpers.rst:36
msgid "Prerequisites"
msgstr "Pré-requisitos"

#: ../../howto/gdb_helpers.rst:38
msgid "You need to have:"
msgstr "Você precisa ter:"

#: ../../howto/gdb_helpers.rst:40
msgid ""
"GDB 7 or later. (For earlier versions of GDB, see ``Misc/gdbinit`` in the "
"CPython sources. Note that this file will be removed in Python 3.12.)"
msgstr ""
"GDB 7 ou posterior. (Para versões anteriores do GDB, consulte ``Misc/"
"gdbinit`` nas fontes do CPython. Observe que este arquivo será removido no "
"Python 3.12.)"

#: ../../howto/gdb_helpers.rst:42
msgid ""
"GDB-compatible debugging information for Python and any extension you are "
"debugging."
msgstr ""
"Informações de depuração compatíveis com GDB para Python e qualquer extensão "
"que você esteja depurando."

#: ../../howto/gdb_helpers.rst:44
msgid "The ``python-gdb.py`` extension."
msgstr "A extensão ``python-gdb.py``."

#: ../../howto/gdb_helpers.rst:46
msgid ""
"The extension is built with Python, but might be distributed separately or "
"not at all. Below, we include tips for a few common systems as examples. "
"Note that even if the instructions match your system, they might be outdated."
msgstr ""
"A extensão é construída com Python, mas pode ser distribuída separadamente "
"ou não ser distribuída. Abaixo, incluímos dicas para alguns sistemas comuns "
"como exemplos. Note que mesmo se as instruções corresponderem ao seu "
"sistema, elas podem estar desatualizadas."

#: ../../howto/gdb_helpers.rst:52
msgid "Setup with Python built from source"
msgstr "Configuração com Python construído a partir do código-fonte"

#: ../../howto/gdb_helpers.rst:54
msgid ""
"When you build CPython from source, debugging information should be "
"available, and the build should add a ``python-gdb.py`` file to the root "
"directory of your repository."
msgstr ""
"Quando você compila o CPython a partir do código-fonte, as informações de "
"depuração devem estar disponíveis, e a compilação deve adicionar um arquivo "
"``python-gdb.py`` ao diretório raiz do seu repositório."

#: ../../howto/gdb_helpers.rst:58
msgid ""
"To activate support, you must add the directory containing ``python-gdb.py`` "
"to GDB's \"auto-load-safe-path\". If you haven't done this, recent versions "
"of GDB will print out a warning with instructions on how to do this."
msgstr ""
"Para ativar o suporte, você deve adicionar o diretório que contém ``python-"
"gdb.py`` ao \"auto-load-safe-path\" do GDB. Se você ainda não fez isso, as "
"versões recentes do GDB imprimirão um aviso com instruções sobre como fazer "
"isso."

#: ../../howto/gdb_helpers.rst:65
msgid ""
"If you do not see instructions for your version of GDB, put this in your "
"configuration file (``~/.gdbinit`` or ``~/.config/gdb/gdbinit``)::"
msgstr ""
"Se você não encontrar instruções para a sua versão do GDB, coloque isso no "
"seu arquivo de configuração (``~/.gdbinit`` ou ``~/.config/gdb/gdbinit``)::"

#: ../../howto/gdb_helpers.rst:70
msgid "You can also add multiple paths, separated by ``:``."
msgstr "Você também pode adicionar vários caminhos, separados por ``:``."

#: ../../howto/gdb_helpers.rst:74
msgid "Setup for Python from a Linux distro"
msgstr "Configuração para Python a partir de uma distribuição Linux"

#: ../../howto/gdb_helpers.rst:76
msgid ""
"Most Linux systems provide debug information for the system Python in a "
"package called ``python-debuginfo``, ``python-dbg`` or similar. For example:"
msgstr ""
"A maioria dos sistemas Linux fornece informações de depuração para o Python "
"do sistema em um pacote chamado ``python-debuginfo``, ``python-dbg`` ou "
"similar. Por exemplo:"

#: ../../howto/gdb_helpers.rst:80
msgid "Fedora:"
msgstr "Fedora:"

#: ../../howto/gdb_helpers.rst:87
msgid "Ubuntu:"
msgstr "Ubuntu:"

#: ../../howto/gdb_helpers.rst:93
msgid ""
"On several recent Linux systems, GDB can download debugging symbols "
"automatically using *debuginfod*. However, this will not install the "
"``python-gdb.py`` extension; you generally do need to install the debug info "
"package separately."
msgstr ""
"Em vários sistemas Linux recentes, o GDB pode baixar automaticamente "
"símbolos de depuração usando *debuginfod*. No entanto, isso não instalará a "
"extensão ``python-gdb.py``; geralmente é necessário instalar separadamente o "
"pacote de informações de depuração."

#: ../../howto/gdb_helpers.rst:100
msgid "Using the Debug build and Development mode"
msgstr "Usando a compilação de depuração e o modo de desenvolvimento"

#: ../../howto/gdb_helpers.rst:102
msgid "For easier debugging, you might want to:"
msgstr "Para facilitar a depuração, você pode querer:"

#: ../../howto/gdb_helpers.rst:104
msgid ""
"Use a :ref:`debug build <debug-build>` of Python. (When building from "
"source, use ``configure --with-pydebug``. On Linux distros, install and run "
"a package like ``python-debug`` or ``python-dbg``, if available.)"
msgstr ""
"Use a :ref:`compilação de depuração <debug-build>` do Python. (Ao compilar a "
"partir do código-fonte, use ``configure --with-pydebug``. Em distribuições "
"Linux, instale e execute um pacote como ``python-debug`` ou ``python-dbg``, "
"se disponível.)"

#: ../../howto/gdb_helpers.rst:107
msgid "Use the runtime :ref:`development mode <devmode>` (``-X dev``)."
msgstr ""
"Use o :ref:`modo de desenvolvimento <devmode>` de tempo de execução (``-X "
"dev``)."

#: ../../howto/gdb_helpers.rst:109
msgid ""
"Both enable extra assertions and disable some optimizations. Sometimes this "
"hides the bug you are trying to find, but in most cases they make the "
"process easier."
msgstr ""
"Ambos habilitam assertivas extras e desabilitam algumas otimizações. Às "
"vezes isso esconde o bug que você está tentando encontrar, mas na maioria "
"dos casos eles facilitam o processo."

#: ../../howto/gdb_helpers.rst:115
msgid "Using the ``python-gdb`` extension"
msgstr "Usando a extensão ``python-gdb``"

#: ../../howto/gdb_helpers.rst:117
msgid ""
"When the extension is loaded, it provides two main features: pretty printers "
"for Python values, and additional commands."
msgstr ""
"Quando a extensão é carregada, ela fornece duas principais funcionalidades: "
"impressões bonitas para valores Python e comandos adicionais."

#: ../../howto/gdb_helpers.rst:121
msgid "Pretty-printers"
msgstr "Pretty-printers"

#: ../../howto/gdb_helpers.rst:123
msgid ""
"This is what a GDB backtrace looks like (truncated) when this extension is "
"enabled::"
msgstr ""
"Este é o aspecto de um backtrace do GDB (truncado) quando esta extensão está "
"habilitada:"

#: ../../howto/gdb_helpers.rst:142
msgid ""
"Notice how the dictionary argument to ``PyDict_GetItemString`` is displayed "
"as its ``repr()``, rather than an opaque ``PyObject *`` pointer."
msgstr ""
"Observe como o argumento do dicionário para ``PyDict_GetItemString`` é "
"exibido como seu ``repr()``, em vez de um ponteiro ``PyObject *`` opaco."

#: ../../howto/gdb_helpers.rst:145
msgid ""
"The extension works by supplying a custom printing routine for values of "
"type ``PyObject *``.  If you need to access lower-level details of an "
"object, then cast the value to a pointer of the appropriate type.  For "
"example::"
msgstr ""
"A extensão funciona fornecendo uma rotina de impressão personalizada para "
"valores do tipo ``PyObject *``. Se você precisar acessar detalhes de nível "
"inferior de um objeto, então converta o valor para um ponteiro do tipo "
"apropriado. Por exemplo:"

#: ../../howto/gdb_helpers.rst:168
msgid ""
"Note that the pretty-printers do not actually call ``repr()``. For basic "
"types, they try to match its result closely."
msgstr ""
"Observe que os pretty-printers não chamam realmente ``repr()``. Para tipos "
"básicos, eles tentam corresponder ao seu resultado de perto."

#: ../../howto/gdb_helpers.rst:171
msgid ""
"An area that can be confusing is that the custom printer for some types look "
"a lot like GDB's built-in printer for standard types.  For example, the "
"pretty-printer for a Python ``int`` (:c:expr:`PyLongObject *`) gives a "
"representation that is not distinguishable from one of a regular machine-"
"level integer::"
msgstr ""
"Uma área que pode ser confusa é que a impressão personalizada para alguns "
"tipos se parece muito com a impressão embutida do GDB para tipos padrão. Por "
"exemplo, a impressora bonita para um ``int`` do Python (:c:expr:"
"`PyLongObject *`) fornece uma representação que não é distinguível de um "
"inteiro de nível de máquina regular."

#: ../../howto/gdb_helpers.rst:183
msgid ""
"The internal structure can be revealed with a cast to :c:expr:`PyLongObject "
"*`:"
msgstr ""
"A estrutura interna pode ser revelada com um elenco para :c:expr:"
"`PyLongObject *`."

#: ../../howto/gdb_helpers.rst:185
msgid ""
"(gdb) p *(PyLongObject*)some_python_integer $5 = {ob_base = {ob_base = "
"{ob_refcnt = 8, ob_type = 0x3dad39f5e0}, ob_size = 1}, ob_digit = {42}}"
msgstr ""
"(gdb) p *(PyLongObject*)some_python_integer $5 = {ob_base = {ob_base = "
"{ob_refcnt = 8, ob_type = 0x3dad39f5e0}, ob_size = 1}, ob_digit = {42}}"

#: ../../howto/gdb_helpers.rst:189
msgid ""
"A similar confusion can arise with the ``str`` type, where the output looks "
"a lot like gdb's built-in printer for ``char *``::"
msgstr ""
"Uma confusão semelhante pode surgir com o tipo ``str``, onde a saída se "
"parece muito com a a impressão embutida do gdb para ``char *``."

#: ../../howto/gdb_helpers.rst:195
msgid ""
"The pretty-printer for ``str`` instances defaults to using single-quotes (as "
"does Python's ``repr`` for strings) whereas the standard printer for ``char "
"*`` values uses double-quotes and contains a hexadecimal address::"
msgstr ""
"O pretty-printer para instâncias de ``str`` tem como padrão o uso de aspas "
"simples (assim como o ``repr`` do Python para strings), enquanto o printer "
"padrão para valores de ``char *`` usa aspas duplas e contém um endereço "
"hexadecimal."

#: ../../howto/gdb_helpers.rst:202
msgid ""
"Again, the implementation details can be revealed with a cast to :c:expr:"
"`PyUnicodeObject *`::"
msgstr ""
"Novamente, os detalhes de implementação podem ser revelados com um chamada "
"a :c:expr:`PyUnicodeObject *`::."

#: ../../howto/gdb_helpers.rst:210
msgid "``py-list``"
msgstr "``py-list``"

#: ../../howto/gdb_helpers.rst:212
msgid ""
"The extension adds a ``py-list`` command, which lists the Python source code "
"(if any) for the current frame in the selected thread.  The current line is "
"marked with a \">\"::"
msgstr ""
"A extensão adiciona um comando ``py-list``, que lista o código-fonte Python "
"(se houver) para o quadro atual na thread selecionada. A linha atual é "
"marcada com um \">\"::"

#: ../../howto/gdb_helpers.rst:229
msgid ""
"Use ``py-list START`` to list at a different line number within the Python "
"source, and ``py-list START,END`` to list a specific range of lines within "
"the Python source."
msgstr ""
"Use ``py-list START`` para listar em um número de linha diferente dentro do "
"código Python, e ``py-list START,END`` para listar um intervalo específico "
"de linhas dentro do código Python."

#: ../../howto/gdb_helpers.rst:234
msgid "``py-up`` and ``py-down``"
msgstr "``py-up`` e ``py-down``"

#: ../../howto/gdb_helpers.rst:236
msgid ""
"The ``py-up`` and ``py-down`` commands are analogous to GDB's regular ``up`` "
"and ``down`` commands, but try to move at the level of CPython frames, "
"rather than C frames."
msgstr ""
"Os comandos ``py-up`` e ``py-down`` são análogos aos comandos regulares "
"``up`` e ``down`` do GDB, mas tentam se mover no nível dos quadros do "
"CPython, em vez dos quadros do C."

#: ../../howto/gdb_helpers.rst:240
msgid ""
"GDB is not always able to read the relevant frame information, depending on "
"the optimization level with which CPython was compiled. Internally, the "
"commands look for C frames that are executing the default frame evaluation "
"function (that is, the core bytecode interpreter loop within CPython) and "
"look up the value of the related ``PyFrameObject *``."
msgstr ""
"GDB nem sempre consegue ler as informações relevantes do quadro, dependendo "
"do nível de otimização com o qual o CPython foi compilado. Internamente, os "
"comandos procuram por quadros C que estão executando a função de avaliação "
"de quadro padrão (ou seja, o laço do interpretador de bytecode principal "
"dentro do CPython) e procuram o valor do ``PyFrameObject *`` relacionado."

#: ../../howto/gdb_helpers.rst:246
msgid "They emit the frame number (at the C level) within the thread."
msgstr "Eles emitem o número do quadro (no nível C) dentro da thread."

#: ../../howto/gdb_helpers.rst:248 ../../howto/gdb_helpers.rst:298
msgid "For example::"
msgstr "Por exemplo::"

#: ../../howto/gdb_helpers.rst:261
msgid "so we're at the top of the Python stack."
msgstr "de forma estamos no topo da pilha do Python."

#: ../../howto/gdb_helpers.rst:263
msgid ""
"The frame numbers correspond to those displayed by GDB's standard "
"``backtrace`` command. The command skips C frames which are not executing "
"Python code."
msgstr ""
"Os números de quadro correspondem aos exibidos pelo comando padrão "
"``backtrace`` do GDB. O comando ignora os quadros C que não estão executando "
"código Python."

#: ../../howto/gdb_helpers.rst:267
msgid "Going back down::"
msgstr "Voltando para baixo::"

#: ../../howto/gdb_helpers.rst:289
msgid "and we're at the bottom of the Python stack."
msgstr "e estamos na parte inferior da pilha do Python."

#: ../../howto/gdb_helpers.rst:293
msgid "``py-bt``"
msgstr "``py-bt``"

#: ../../howto/gdb_helpers.rst:295
msgid ""
"The ``py-bt`` command attempts to display a Python-level backtrace of the "
"current thread."
msgstr ""
"O comando ``py-bt`` tenta mostrar uma rastreabilidade em nível Python da "
"thread atual."

#: ../../howto/gdb_helpers.rst:314
msgid ""
"The frame numbers correspond to those displayed by GDB's standard "
"``backtrace`` command."
msgstr ""
"Os números de quadro correspondem aos exibidos pelo comando padrão "
"``backtrace`` do GDB."

#: ../../howto/gdb_helpers.rst:318
msgid "``py-print``"
msgstr "``py-print``"

#: ../../howto/gdb_helpers.rst:320
msgid ""
"The ``py-print`` command looks up a Python name and tries to print it. It "
"looks in locals within the current thread, then globals, then finally "
"builtins::"
msgstr ""
"O comando ``py-print`` procura um nome em Python e tenta imprimi-lo. Ele "
"procura em locais dentro da thread atual, depois em globais e, finalmente, "
"em embutidos::"

#: ../../howto/gdb_helpers.rst:335
msgid "``py-locals``"
msgstr "``py-locals``"

#: ../../howto/gdb_helpers.rst:337
msgid ""
"The ``py-locals`` command looks up all Python locals within the current "
"Python frame in the selected thread, and prints their representations::"
msgstr ""
"O comando ``py-locals`` busca todas as variáveis locais do Python no quadro "
"Python atual na thread selecionada e imprime suas representações::"

#: ../../howto/gdb_helpers.rst:347
msgid "Use with GDB commands"
msgstr "Uso com comandos do GDB"

#: ../../howto/gdb_helpers.rst:349
msgid ""
"The extension commands complement GDB's built-in commands. For example, you "
"can use a frame numbers shown by ``py-bt`` with the ``frame`` command to go "
"a specific frame within the selected thread, like this::"
msgstr ""
"Os comandos de extensão complementam os comandos embutidos do GDB. Por "
"exemplo, você pode usar os números de quadro mostrados por ``py-bt`` com o "
"comando ``frame`` para ir a um quadro específico dentro da thread "
"selecionada, assim::"

#: ../../howto/gdb_helpers.rst:368
msgid ""
"The ``info threads`` command will give you a list of the threads within the "
"process, and you can use the ``thread`` command to select a different one::"
msgstr ""
"O comando ``info threads`` fornecerá uma lista das threads dentro do "
"processo, e você pode usar o comando ``thread`` para selecionar uma "
"diferente::"

#: ../../howto/gdb_helpers.rst:376
msgid ""
"You can use ``thread apply all COMMAND`` or (``t a a COMMAND`` for short) to "
"run a command on all threads.  With ``py-bt``, this lets you see what every "
"thread is doing at the Python level::"
msgstr ""
"Você pode usar ``thread apply all COMANDO`` ou (``t a a COMANDO`` para "
"abreviar) para executar um comando em todas as threads. Com ``py-bt``, isso "
"permite que você veja o que cada thread está fazendo no nível do Python::"
