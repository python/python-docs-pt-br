# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-22 21:56+0000\n"
"PO-Revision-Date: 2025-09-22 17:54+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../c-api/dict.rst:6
msgid "Dictionary Objects"
msgstr "Objetos dicionários"

#: ../../c-api/dict.rst:13
msgid ""
"This subtype of :c:type:`PyObject` represents a Python dictionary object."
msgstr ""
"Este subtipo do :c:type:`PyObject` representa um objeto dicionário Python."

#: ../../c-api/dict.rst:18
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python dictionary "
"type.  This is the same object as :class:`dict` in the Python layer."
msgstr ""
"Esta instância do :c:type:`PyTypeObject` representa o tipo do dicionário "
"Python. Este é o mesmo objeto :class:`dict` na camada do Python."

#: ../../c-api/dict.rst:24
msgid ""
"Return true if *p* is a dict object or an instance of a subtype of the dict "
"type.  This function always succeeds."
msgstr ""
"Retorna verdadeiro se *p* é um objeto dicionário ou uma instância de um "
"subtipo do tipo dicionário. Esta função sempre tem sucesso."

#: ../../c-api/dict.rst:30
msgid ""
"Return true if *p* is a dict object, but not an instance of a subtype of the "
"dict type.  This function always succeeds."
msgstr ""
"Retorna verdadeiro se *p* é um objeto dicionário, mas não uma instância de "
"um subtipo do tipo dicionário. Esta função sempre tem sucesso."

#: ../../c-api/dict.rst:36
msgid "Return a new empty dictionary, or ``NULL`` on failure."
msgstr "Retorna um novo dicionário vazio ou ``NULL`` em caso de falha."

#: ../../c-api/dict.rst:41
msgid ""
"Return a :class:`types.MappingProxyType` object for a mapping which enforces "
"read-only behavior.  This is normally used to create a view to prevent "
"modification of the dictionary for non-dynamic class types."
msgstr ""
"Retorna um objeto :class:`types.MappingProxyType` para um mapeamento que "
"reforça o comportamento somente leitura. Isso normalmente é usado para criar "
"uma visão para evitar a modificação do dicionário para tipos de classes não "
"dinâmicas."

#: ../../c-api/dict.rst:48
msgid "Empty an existing dictionary of all key-value pairs."
msgstr "Esvazia um dicionário existente de todos os pares chave-valor."

#: ../../c-api/dict.rst:53
msgid ""
"Determine if dictionary *p* contains *key*.  If an item in *p* is matches "
"*key*, return ``1``, otherwise return ``0``.  On error, return ``-1``. This "
"is equivalent to the Python expression ``key in p``."
msgstr ""
"Determina se o dicionário *p* contém *key*. Se um item em *p* corresponder à "
"*key*, retorna ``1``, caso contrário, retorna ``0``. Em caso de erro, "
"retorna ``-1``. Isso é equivalente à expressão Python ``key in p``."

#: ../../c-api/dict.rst:60
msgid "Return a new dictionary that contains the same key-value pairs as *p*."
msgstr "Retorna um novo dicionário que contém o mesmo chave-valor como *p*."

#: ../../c-api/dict.rst:65
msgid ""
"Insert *val* into the dictionary *p* with a key of *key*.  *key* must be :"
"term:`hashable`; if it isn't, :exc:`TypeError` will be raised. Return ``0`` "
"on success or ``-1`` on failure.  This function *does not* steal a reference "
"to *val*."
msgstr ""
"Insere *val* no dicionário *p* com a tecla *key*. *key* deve ser :term:"
"`hasheável <hashable>`; se não for, :exc:`TypeError` será levantada. Retorna "
"``0`` em caso de sucesso ou ``-1`` em caso de falha. Esta função *não* rouba "
"uma referência a *val*."

#: ../../c-api/dict.rst:75
msgid ""
"Insert *val* into the dictionary *p* using *key* as a key. *key* should be "
"a :c:type:`const char*`.  The key object is created using "
"``PyUnicode_FromString(key)``.  Return ``0`` on success or ``-1`` on "
"failure.  This function *does not* steal a reference to *val*."
msgstr ""
"Insere *val* no dicionário *p* usando *key* como uma chave. *key* deve ser "
"a :c:type:`const char*`. O objeto chave é criado usando "
"``PyUnicode_FromString(key)``. Retorna ``0`` em caso de sucesso ou ``-1`` em "
"caso de falha. Esta função *não* rouba uma referência a *val*."

#: ../../c-api/dict.rst:83
msgid ""
"Remove the entry in dictionary *p* with key *key*. *key* must be hashable; "
"if it isn't, :exc:`TypeError` is raised. If *key* is not in the dictionary, :"
"exc:`KeyError` is raised. Return ``0`` on success or ``-1`` on failure."
msgstr ""
"Remove a entrada no dicionário *p* com a chave *key*. *key* deve ser "
"hasheável; se não for, :exc:`TypeError` é levantada. Se *key* não estiver no "
"dicionário, :exc:`KeyError` é levantada. Retorna ``0`` em caso de sucesso ou "
"``-1`` em caso de falha."

#: ../../c-api/dict.rst:91
msgid ""
"Remove the entry in dictionary *p* which has a key specified by the string "
"*key*. If *key* is not in the dictionary, :exc:`KeyError` is raised. Return "
"``0`` on success or ``-1`` on failure."
msgstr ""
"Remove a entrada no dicionário *p* que tem uma chave especificada pela "
"string *key*. Se *key* não estiver no dicionário, :exc:`KeyError` é "
"levantada. Retorna ``0`` em caso de sucesso ou ``-1`` em caso de falha."

#: ../../c-api/dict.rst:98
msgid ""
"Return the object from dictionary *p* which has a key *key*.  Return "
"``NULL`` if the key *key* is not present, but *without* setting an exception."
msgstr ""
"Retorna o objeto do dicionário *p* que possui uma chave *key*. Retorna "
"``NULL`` se a chave *key* não estiver presente, mas *sem* definir uma "
"exceção."

#: ../../c-api/dict.rst:101
msgid ""
"Note that exceptions which occur while calling :meth:`__hash__` and :meth:"
"`__eq__` methods will get suppressed. To get error reporting use :c:func:"
"`PyDict_GetItemWithError()` instead."
msgstr ""
"Observe que as exceções que ocorrem ao chamar os métodos :meth:`__hash__` e :"
"meth:`__eq__` serão suprimidas. Para obter o relatório de erros, use :c:func:"
"`PyDict_GetItemWithError()`."

#: ../../c-api/dict.rst:108
msgid ""
"Variant of :c:func:`PyDict_GetItem` that does not suppress exceptions. "
"Return ``NULL`` **with** an exception set if an exception occurred.  Return "
"``NULL`` **without** an exception set if the key wasn't present."
msgstr ""
"Variante de :c:func:`PyDict_GetItem` que não suprime exceções. Retorna "
"``NULL`` **com** uma exceção definida se uma exceção ocorreu. Retorna "
"``NULL`` ** sem ** uma exceção definida se a chave não estiver presente."

#: ../../c-api/dict.rst:116
msgid ""
"This is the same as :c:func:`PyDict_GetItem`, but *key* is specified as a :c:"
"type:`const char*`, rather than a :c:type:`PyObject*`."
msgstr ""
"É o mesmo que :c:func:`PyDict_GetItem`, mas *key* é especificada como um :c:"
"type:`const char*`, em vez de um :c:type:`PyObject*`."

#: ../../c-api/dict.rst:119
msgid ""
"Note that exceptions which occur while calling :meth:`__hash__` and :meth:"
"`__eq__` methods and creating a temporary string object will get suppressed. "
"To get error reporting use :c:func:`PyDict_GetItemWithError()` instead."
msgstr ""
"Observe que as exceções que ocorrem ao chamar os métodos :meth:`__hash__` e :"
"meth:`__eq__` e criar um objeto string temporário serão suprimidas. Para "
"obter o relatório de erros, use :c:func:`PyDict_GetItemWithError()`."

#: ../../c-api/dict.rst:127
msgid ""
"This is the same as the Python-level :meth:`dict.setdefault`.  If present, "
"it returns the value corresponding to *key* from the dictionary *p*.  If the "
"key is not in the dict, it is inserted with value *defaultobj* and "
"*defaultobj* is returned.  This function evaluates the hash function of "
"*key* only once, instead of evaluating it independently for the lookup and "
"the insertion."
msgstr ""
"Isso é o mesmo que o :meth:`dict.setdefault` de nível Python. Se presente, "
"ele retorna o valor correspondente a *key* do dicionário *p*. Se a chave não "
"estiver no dict, ela será inserida com o valor *defaultobj* e *defaultobj* "
"será retornado. Esta função avalia a função hash de *key* apenas uma vez, em "
"vez de avaliá-la independentemente para a pesquisa e a inserção."

#: ../../c-api/dict.rst:137
msgid ""
"Return a :c:type:`PyListObject` containing all the items from the dictionary."
msgstr ""
"Retorna um :c:type:`PyListObject` contendo todos os itens do dicionário."

#: ../../c-api/dict.rst:142
msgid ""
"Return a :c:type:`PyListObject` containing all the keys from the dictionary."
msgstr ""
"Retorna um :c:type:`PyListObject` contendo todas as chaves do dicionário."

#: ../../c-api/dict.rst:147
msgid ""
"Return a :c:type:`PyListObject` containing all the values from the "
"dictionary *p*."
msgstr ""
"Retorna um :c:type:`PyListObject` contendo todos os valores do dicionário "
"*p*."

#: ../../c-api/dict.rst:155
msgid ""
"Return the number of items in the dictionary.  This is equivalent to "
"``len(p)`` on a dictionary."
msgstr ""
"Retorna o número de itens no dicionário. Isso é equivalente a ``len(p)`` em "
"um dicionário."

#: ../../c-api/dict.rst:161
msgid ""
"Iterate over all key-value pairs in the dictionary *p*.  The :c:type:"
"`Py_ssize_t` referred to by *ppos* must be initialized to ``0`` prior to the "
"first call to this function to start the iteration; the function returns "
"true for each pair in the dictionary, and false once all pairs have been "
"reported.  The parameters *pkey* and *pvalue* should either point to :c:type:"
"`PyObject*` variables that will be filled in with each key and value, "
"respectively, or may be ``NULL``.  Any references returned through them are "
"borrowed.  *ppos* should not be altered during iteration. Its value "
"represents offsets within the internal dictionary structure, and since the "
"structure is sparse, the offsets are not consecutive."
msgstr ""
"Itera todos os pares de valores-chave no dicionário *p*. O :c:type:"
"`Py_ssize_t` referido por *ppos* deve ser inicializado para ``0`` antes da "
"primeira chamada para esta função para iniciar a iteração; a função retorna "
"true para cada par no dicionário e false quando todos os pares forem "
"relatados. Os parâmetros *pkey* e *pvalue* devem apontar para variáveis de :"
"c:type:`PyObject*` que serão preenchidas com cada chave e valor, "
"respectivamente, ou podem ser ``NULL``. Todas as referências retornadas por "
"meio deles são emprestadas. *ppos* não deve ser alterado durante a iteração. "
"Seu valor representa deslocamentos dentro da estrutura do dicionário interno "
"e, como a estrutura é esparsa, os deslocamentos não são consecutivos."

#: ../../c-api/dict.rst:172
msgid "For example::"
msgstr "Por exemplo::"

#: ../../c-api/dict.rst:182
msgid ""
"The dictionary *p* should not be mutated during iteration.  It is safe to "
"modify the values of the keys as you iterate over the dictionary, but only "
"so long as the set of keys does not change.  For example::"
msgstr ""
"O dicionário *p* não deve sofrer mutação durante a iteração. É seguro "
"modificar os valores das chaves à medida que você itera no dicionário, mas "
"apenas enquanto o conjunto de chaves não mudar. Por exemplo::"

#: ../../c-api/dict.rst:207
msgid ""
"Iterate over mapping object *b* adding key-value pairs to dictionary *a*. "
"*b* may be a dictionary, or any object supporting :c:func:`PyMapping_Keys` "
"and :c:func:`PyObject_GetItem`. If *override* is true, existing pairs in *a* "
"will be replaced if a matching key is found in *b*, otherwise pairs will "
"only be added if there is not a matching key in *a*. Return ``0`` on success "
"or ``-1`` if an exception was raised."
msgstr ""
"Itera sobre o objeto de mapeamento *b* adicionando pares de valores-chave ao "
"dicionário *a*. *b* pode ser um dicionário, ou qualquer objeto que suporte :"
"c:func:`PyMapping_Keys` e :c:func:`PyObject_GetItem`. Se *override* for "
"verdadeiro, os pares existentes em *a* serão substituídos se uma chave "
"correspondente for encontrada em *b*, caso contrário, os pares serão "
"adicionados apenas se não houver uma chave correspondente em *a*. Retorna "
"``0`` em caso de sucesso ou ``-1`` se uma exceção foi levantada."

#: ../../c-api/dict.rst:217
msgid ""
"This is the same as ``PyDict_Merge(a, b, 1)`` in C, and is similar to ``a."
"update(b)`` in Python except that :c:func:`PyDict_Update` doesn't fall back "
"to the iterating over a sequence of key value pairs if the second argument "
"has no \"keys\" attribute.  Return ``0`` on success or ``-1`` if an "
"exception was raised."
msgstr ""
"É o mesmo que ``PyDict_Merge(a, b, 1)`` em C, e é semelhante a ``a."
"update(b)`` em Python, exceto que :c:func:`PyDict_Update` não cai na "
"iteração em uma sequência de pares de valores de chave se o segundo "
"argumento não tiver o atributo \"keys\". Retorna ``0`` em caso de sucesso ou "
"``-1`` se uma exceção foi levantada."

#: ../../c-api/dict.rst:226
msgid ""
"Update or merge into dictionary *a*, from the key-value pairs in *seq2*. "
"*seq2* must be an iterable object producing iterable objects of length 2, "
"viewed as key-value pairs.  In case of duplicate keys, the last wins if "
"*override* is true, else the first wins. Return ``0`` on success or ``-1`` "
"if an exception was raised. Equivalent Python (except for the return value)::"
msgstr ""
"Atualiza ou mescla no dicionário *a*, a partir dos pares de chave-valor em "
"*seq2*. *seq2* deve ser um objeto iterável produzindo objetos iteráveis de "
"comprimento 2, vistos como pares chave-valor. No caso de chaves duplicadas, "
"a última vence se *override* for verdadeiro, caso contrário, a primeira "
"vence. Retorne ``0`` em caso de sucesso ou ``-1`` se uma exceção foi "
"levantada. Python equivalente (exceto para o valor de retorno)::"
