# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Welington Carlos <wcarlos3@gmail.com>, 2019
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-23 16:56+0000\n"
"PO-Revision-Date: 2019-09-01 03:40+0000\n"
"Last-Translator: Welington Carlos <wcarlos3@gmail.com>, 2019\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/allocation.rst:6
msgid "Allocating Objects on the Heap"
msgstr "Alocando objetos em pilha"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/allocation.rst:17
msgid ""
"Initialize a newly-allocated object *op* with its type and initial "
"reference.  Returns the initialized object.  If *type* indicates that the "
"object participates in the cyclic garbage detector, it is added to the "
"detector's set of observed objects. Other fields of the object are not "
"affected."
msgstr ""
"Inicialize um objeto *op* recém alocado com seu tipo e sua referência "
"inicial. Retorna o objeto incializado. Se * type * indica que o objeto "
"participa do detector de lixo cíclico, ele é adicionado ao grupo do detector "
"de objetos observados. Outros campos do objeto não são afetados."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/allocation.rst:26
msgid ""
"This does everything :c:func:`PyObject_Init` does, and also initializes the "
"length information for a variable-size object."
msgstr ""
"Isso faz tudo que :c:func:`PyObject_Init` faz, e também inicializa a "
"informação de comprimento para um objeto tamanho-de-variável."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/allocation.rst:32
msgid ""
"Allocate a new Python object using the C structure type *TYPE* and the "
"Python type object *type*.  Fields not defined by the Python object header "
"are not initialized; the object's reference count will be one.  The size of "
"the memory allocation is determined from the :c:member:`~PyTypeObject."
"tp_basicsize` field of the type object."
msgstr ""
"Aloque um novo objeto Python usando a estrutura C digite *TYPE* e o  objecto "
"Python *type*. Campos não definidos no cabeçalho do objeto Python não são "
"inicializados; a contagem de referência do objeto será um deles. O tamanho "
"da alocação de memória é determinado do campo :c:member:`~PyTypeObject."
"tp_basicsize` do objeto tipo."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/allocation.rst:41
msgid ""
"Allocate a new Python object using the C structure type *TYPE* and the "
"Python type object *type*.  Fields not defined by the Python object header "
"are not initialized.  The allocated memory allows for the *TYPE* structure "
"plus *size* fields of the size given by the :c:member:`~PyTypeObject."
"tp_itemsize` field of *type*.  This is useful for implementing objects like "
"tuples, which are able to determine their size at construction time.  "
"Embedding the array of fields into the same allocation decreases the number "
"of allocations, improving the memory management efficiency."
msgstr ""
"Alocar um novo objeto Python usando o tipo de estrutura C *TYPE* e o tipo de "
"objeto Python *type*. Campos não definidos pelo cabeçalho do objeto Python "
"não são inicializados. A memória alocada permite a estrutura * TYPE * e os "
"campos * size * do tamanho dado pelo campo: c: member: `~ PyTypeObject."
"tp_itemsize` de * type *. Isto é útil para implementar objetos como tuplas, "
"que são capazes de determinar seu tamanho em tempo de construção. "
"Incorporando o array de campos dentro da mesma alocação diminuindo o numero "
"de alocações, melhorando a eficiência de gerenciamento de memória."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/allocation.rst:53
msgid ""
"Releases memory allocated to an object using :c:func:`PyObject_New` or :c:"
"func:`PyObject_NewVar`.  This is normally called from the :c:member:"
"`~PyTypeObject.tp_dealloc` handler specified in the object's type.  The "
"fields of the object should not be accessed after this call as the memory is "
"no longer a valid Python object."
msgstr ""
"Libera memória alocada para um objeto usando :c:func:`PyObject_New` ou :c:"
"func:`PyObject_NewVar`. Isso é normalmente chamado por :c:member:"
"`~PyTypeObject.tp_dealloc`  manipulador especificado no tipo do objeto. Os "
"campos do objeto não devem ser acessados ​​após esta chamada, já que a memória "
"não é mais um objeto Python válido."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/allocation.rst:62
msgid ""
"Object which is visible in Python as ``None``.  This should only be accessed "
"using the :c:macro:`Py_None` macro, which evaluates to a pointer to this "
"object."
msgstr ""
"Objeto que é visível em Python como ``None``. Isso só deve ser acessado "
"usando o :c:macro:`Py_None` macro, que avalia como um ponteiro para este "
"objeto."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/allocation.rst:69
msgid ":c:func:`PyModule_Create`"
msgstr ":c:func:`PyModule_Create`"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/allocation.rst:70
msgid "To allocate and create extension modules."
msgstr "Para alocar e criar módulos de extensão"
