# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-03 16:02+0000\n"
"PO-Revision-Date: 2025-07-18 20:08+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../c-api/list.rst:6
msgid "List Objects"
msgstr "Objeto List"

#: ../../c-api/list.rst:13
msgid "This subtype of :c:type:`PyObject` represents a Python list object."
msgstr ""
"Este subtipo de :c:type:`PyObject` representa um objeto de lista Python."

#: ../../c-api/list.rst:18
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python list type. "
"This is the same object as :class:`list` in the Python layer."
msgstr ""
"Esta instância de :c:type:`PyTypeObject` representa o tipo de lista Python. "
"Este é o mesmo objeto que :class:`list` na camada Python."

#: ../../c-api/list.rst:24
msgid ""
"Return true if *p* is a list object or an instance of a subtype of the list "
"type.  This function always succeeds."
msgstr ""
"Retorna verdadeiro se *p* é um objeto lista ou uma instância de um subtipo "
"do tipo lista. Esta função sempre tem sucesso."

#: ../../c-api/list.rst:30
msgid ""
"Return true if *p* is a list object, but not an instance of a subtype of the "
"list type.  This function always succeeds."
msgstr ""
"Retorna verdadeiro se *p* é um objeto lista, mas não uma instância de um "
"subtipo do tipo lista. Esta função sempre tem sucesso."

#: ../../c-api/list.rst:36
msgid "Return a new list of length *len* on success, or ``NULL`` on failure."
msgstr ""
"Retorna uma nova lista de comprimento *len* em caso de sucesso, ou ``NULL`` "
"em caso de falha."

#: ../../c-api/list.rst:40
msgid ""
"If *len* is greater than zero, the returned list object's items are set to "
"``NULL``.  Thus you cannot use abstract API functions such as :c:func:"
"`PySequence_SetItem`  or expose the object to Python code before setting all "
"items to a real object with :c:func:`PyList_SetItem`."
msgstr ""
"Se *len* for maior que zero, os itens do objeto de lista retornado são "
"definidos como ``NULL``. Portanto, você não pode usar funções API abstratas, "
"como :c:func:`PySequence_SetItem` ou expor o objeto ao código Python antes "
"de definir todos os itens para um objeto real com :c:func:`PyList_SetItem`."

#: ../../c-api/list.rst:50
msgid ""
"Return the length of the list object in *list*; this is equivalent to "
"``len(list)`` on a list object."
msgstr ""
"Retorna o comprimento do objeto de lista em *list*; isto é equivalente a "
"``len(list)`` em um objeto lista."

#: ../../c-api/list.rst:56
msgid "Macro form of :c:func:`PyList_Size` without error checking."
msgstr "Forma macro de :c:func:`PyList_Size` sem verificação de erros."

#: ../../c-api/list.rst:61
msgid ""
"Return the object at position *index* in the list pointed to by *list*.  The "
"position must be non-negative; indexing from the end of the list is not "
"supported.  If *index* is out of bounds (<0 or >=len(list)), return ``NULL`` "
"and set an :exc:`IndexError` exception."
msgstr ""
"Retorna o objeto na posição *index* na lista apontada por *list*. A posição "
"deve ser não negativa; não há suporte à indexação do final da lista. Se "
"*index* estiver fora dos limites (<o ou >=len(list)), retorna ``NULL`` e "
"levanta uma exceção :exc:`IndexError`."

#: ../../c-api/list.rst:69
msgid "Macro form of :c:func:`PyList_GetItem` without error checking."
msgstr "Forma macro de :c:func:`PyList_GetItem` sem verificação de erros."

#: ../../c-api/list.rst:74
msgid ""
"Set the item at index *index* in list to *item*.  Return ``0`` on success. "
"If *index* is out of bounds, return ``-1`` and set an :exc:`IndexError` "
"exception."
msgstr ""
"Define o item no índice *index* na lista como *item*. Retorna ``0`` em caso "
"de sucesso. Se *index* estiver fora dos limites, retorna ``-1`` e levanta "
"uma exceção :exc:`IndexError`."

#: ../../c-api/list.rst:80
msgid ""
"This function \"steals\" a reference to *item* and discards a reference to "
"an item already in the list at the affected position."
msgstr ""
"Esta função \"rouba\" uma referência para o *item* e descarta uma referência "
"para um item já presente na lista na posição afetada."

#: ../../c-api/list.rst:86
msgid ""
"Macro form of :c:func:`PyList_SetItem` without error checking. This is "
"normally only used to fill in new lists where there is no previous content."
msgstr ""
"Forma macro de :c:func:`PyList_SetItem` sem verificação de erro. Este é "
"normalmente usado apenas para preencher novas listas onde não há conteúdo "
"anterior."

#: ../../c-api/list.rst:91
msgid ""
"This macro \"steals\" a reference to *item*, and, unlike :c:func:"
"`PyList_SetItem`, does *not* discard a reference to any item that is being "
"replaced; any reference in *list* at position *i* will be leaked."
msgstr ""
"Esta macro \"rouba\" uma referência para o *item* e, ao contrário de :c:func:"
"`PyList_SetItem`, *não* descarta uma referência para nenhum item que esteja "
"sendo substituído; qualquer referência em *list* será perdida."

#: ../../c-api/list.rst:99
msgid ""
"Insert the item *item* into list *list* in front of index *index*.  Return "
"``0`` if successful; return ``-1`` and set an exception if unsuccessful. "
"Analogous to ``list.insert(index, item)``."
msgstr ""
"Insere o item *item* na lista *list* na frente do índice *index*. Retorna "
"``0`` se for bem-sucedido; retorna ``-1`` e levanta uma exceção se "
"malsucedido. Análogo a ``list.insert(index, item)``."

#: ../../c-api/list.rst:106
msgid ""
"Append the object *item* at the end of list *list*. Return ``0`` if "
"successful; return ``-1`` and set an exception if unsuccessful.  Analogous "
"to ``list.append(item)``."
msgstr ""
"Adiciona o item *item* ao final da lista *list*. Retorna ``0`` se for bem-"
"sucedido; retorna ``-1`` e levanta uma exceção se malsucedido. Análogo a "
"``list.insert(index, item)``."

#: ../../c-api/list.rst:113
msgid ""
"Return a list of the objects in *list* containing the objects *between* "
"*low* and *high*.  Return ``NULL`` and set an exception if unsuccessful.  "
"Analogous to ``list[low:high]``.  Indexing from the end of the list is not "
"supported."
msgstr ""
"Retorna uma lista dos objetos em *list* contendo os objetos *entre* *low* e "
"*alto*. Retorne ``NULL`` e levanta uma exceção se malsucedido. Análogo a "
"``list[low:high]``. Não há suporte à indexação do final da lista."

#: ../../c-api/list.rst:120
msgid ""
"Set the slice of *list* between *low* and *high* to the contents of "
"*itemlist*.  Analogous to ``list[low:high] = itemlist``. The *itemlist* may "
"be ``NULL``, indicating the assignment of an empty list (slice deletion). "
"Return ``0`` on success, ``-1`` on failure.  Indexing from the end of the "
"list is not supported."
msgstr ""
"Define a fatia de *list* entre *low* e *high* para o conteúdo de *itemlist*. "
"Análogo a ``list[low:high] = itemlist``. *itemlist* pode ser ``NULL``, "
"indicando a atribuição de uma lista vazia (exclusão de fatia). Retorna ``0`` "
"em caso de sucesso, ``-1`` em caso de falha. Não há suporte à indexação do "
"final da lista."

#: ../../c-api/list.rst:129
msgid ""
"Sort the items of *list* in place.  Return ``0`` on success, ``-1`` on "
"failure.  This is equivalent to ``list.sort()``."
msgstr ""
"Ordena os itens de *list* no mesmo lugar. Retorna ``0`` em caso de sucesso, "
"e ``-1`` em caso de falha. Isso é o equivalente de ``list.sort()``."

#: ../../c-api/list.rst:135
msgid ""
"Reverse the items of *list* in place.  Return ``0`` on success, ``-1`` on "
"failure.  This is the equivalent of ``list.reverse()``."
msgstr ""
"Inverte os itens de *list* no mesmo lugar. Retorna ``0`` em caso de sucesso, "
"e ``-1`` em caso de falha. Isso é o equivalente de ``list.reverse()``."

#: ../../c-api/list.rst:143
msgid ""
"Return a new tuple object containing the contents of *list*; equivalent to "
"``tuple(list)``."
msgstr ""
"Retorna um novo objeto tupla contendo os conteúdos de *list*; equivale a "
"``tuple(list)``."
