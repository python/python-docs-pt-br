# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2017
# Adjamilton Júnior <jr@ieee.org>, 2019
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-08 16:35+0000\n"
"PO-Revision-Date: 2017-02-16 17:34+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../c-api/datetime.rst:6
msgid "DateTime Objects"
msgstr "Objetos DateTime"

#: ../../c-api/datetime.rst:8
msgid ""
"Various date and time objects are supplied by the :mod:`datetime` module. "
"Before using any of these functions, the header file :file:`datetime.h` must "
"be included in your source (note that this is not included by :file:`Python."
"h`), and the macro :c:macro:`PyDateTime_IMPORT` must be invoked, usually as "
"part of the module initialisation function.  The macro puts a pointer to a C "
"structure into a static variable, :c:data:`PyDateTimeAPI`, that is used by "
"the following macros."
msgstr ""
"Vários objetos de data e hora são fornecidos pelo módulo :mod:`datetime`. "
"Antes de usar qualquer uma dessas funções, o arquivo de cabeçalho :file:"
"`datetime.h` deve ser incluído na sua fonte (observe que isso não é incluído "
"por :file:`Python.h`) e a macro :c:macro:`PyDateTime_IMPORT` deve ser "
"chamada, geralmente como parte da função de inicialização do módulo. A macro "
"coloca um ponteiro para uma estrutura C em uma variável estática, :c:data:"
"`PyDateTimeAPI`, usada pelas macros a seguir."

#: ../../c-api/datetime.rst:16
msgid "Macro for access to the UTC singleton:"
msgstr "Macro para acesso ao singleton UTC:"

#: ../../c-api/datetime.rst:20
msgid ""
"Returns the time zone singleton representing UTC, the same object as :attr:"
"`datetime.timezone.utc`."
msgstr ""
"Retorna um singleton do fuso horário representando o UTC, o mesmo objeto "
"que :attr:`datetime.timezone.utc`."

#: ../../c-api/datetime.rst:26
msgid "Type-check macros:"
msgstr "Macros de verificação de tipo:"

#: ../../c-api/datetime.rst:30
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType` or a subtype "
"of :c:data:`PyDateTime_DateType`.  *ob* must not be ``NULL``.  This function "
"always succeeds."
msgstr ""
"Retorna true se *ob* for do tipo :c:data:`PyDateTime_DateType` ou um subtipo "
"de :c:data:`PyDateTime_DateType`. *ob* não deve ser ``NULL``. Esta função "
"sempre tem sucesso."

#: ../../c-api/datetime.rst:37
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"Retorna true se *ob* for do tipo :c:data:`PyDateTime_DateType`. *ob* não "
"deve ser ``NULL``. Esta função sempre obtém sucesso."

#: ../../c-api/datetime.rst:43
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateTimeType` or a "
"subtype of :c:data:`PyDateTime_DateTimeType`.  *ob* must not be ``NULL``.  "
"This function always succeeds."
msgstr ""
"Retorna true se *ob* é do tipo :c:data:`PyDateTime_DateTimeType` ou um "
"subtipo de :c:data:`PyDateTime_DateTimeType`. *ob* não deve ser ``NULL``. "
"Esta função sempre tem sucesso."

#: ../../c-api/datetime.rst:50
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateTimeType`. *ob* must "
"not be ``NULL``.  This function always succeeds."
msgstr ""
"Retorna true se *ob* for do tipo :c:data:`PyDateTime_DateTimeType`. *ob* não "
"deve ser ``NULL``. Esta função sempre obtém sucesso."

#: ../../c-api/datetime.rst:56
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TimeType` or a subtype "
"of :c:data:`PyDateTime_TimeType`.  *ob* must not be ``NULL``.  This function "
"always succeeds."
msgstr ""
"Retorna true se *ob* é do tipo :c:data:`PyDateTime_TimeType` ou um subtipo "
"de :c:data:`PyDateTime_TimeType`. *ob* não deve ser ``NULL``. Esta função "
"sempre tem sucesso."

#: ../../c-api/datetime.rst:63
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TimeType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"Retorna true se *ob* for do tipo :c:data:`PyDateTime_TimeType`. *ob* não "
"deve ser ``NULL``. Esta função sempre tem sucesso."

#: ../../c-api/datetime.rst:69
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DeltaType` or a subtype "
"of :c:data:`PyDateTime_DeltaType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"Retorna true se *ob* é do tipo :c:data:`PyDateTime_DeltaType` ou um subtipo "
"de :c:data:`PyDateTime_DeltaType`. *ob* não deve ser ``NULL``. Esta função "
"sempre tem sucesso."

#: ../../c-api/datetime.rst:76
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DeltaType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"Retorna true se *ob* for do tipo :c:data:`PyDateTime_DeltaType`. *ob* não "
"deve ser ``NULL``. Esta função sempre tem sucesso."

#: ../../c-api/datetime.rst:82
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TZInfoType` or a subtype "
"of :c:data:`PyDateTime_TZInfoType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"Retorna true se *ob* é do tipo :c:data:`PyDateTime_TZInfoType` ou um subtipo "
"de :c:data:`PyDateTime_TZInfoType`. *ob* não deve ser ``NULL``. Esta função "
"sempre tem sucesso."

#: ../../c-api/datetime.rst:89
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TZInfoType`. *ob* must "
"not be ``NULL``.  This function always succeeds."
msgstr ""
"Retorna true se *ob* for do tipo :c:data:`PyDateTime_TZInfoType`. *ob* não "
"deve ser ``NULL``. Esta função sempre tem sucesso."

#: ../../c-api/datetime.rst:93
msgid "Macros to create objects:"
msgstr "Macros para criar objetos:"

#: ../../c-api/datetime.rst:97
msgid ""
"Return a :class:`datetime.date` object with the specified year, month and "
"day."
msgstr ""
"Retorna um objeto :class:`datetime.date` com o ano, mês e dia especificados."

#: ../../c-api/datetime.rst:102
msgid ""
"Return a :class:`datetime.datetime` object with the specified year, month, "
"day, hour, minute, second and microsecond."
msgstr ""
"Retorna um objeto :class:`datetime.datetime` com o ano, mês, dia, hora, "
"minuto, segundo, microssegundo especificados."

#: ../../c-api/datetime.rst:108
msgid ""
"Return a :class:`datetime.datetime` object with the specified year, month, "
"day, hour, minute, second, microsecond and fold."
msgstr ""
"Retorna um objeto :class:`datetime.datetime` com o ano, mês, dia, hora, "
"minuto, segundo, microssegundo e a dobra especificados."

#: ../../c-api/datetime.rst:116
msgid ""
"Return a :class:`datetime.time` object with the specified hour, minute, "
"second and microsecond."
msgstr ""
"Retorna um objeto :class:`datetime.time` com a hora, minuto, segundo e "
"microssegundo especificados."

#: ../../c-api/datetime.rst:122
msgid ""
"Return a :class:`datetime.time` object with the specified hour, minute, "
"second, microsecond and fold."
msgstr ""
"Retorna um objeto :class:`datetime.time` com a hora, minuto, segundo, "
"microssegundo e a dobra especificados."

#: ../../c-api/datetime.rst:130
msgid ""
"Return a :class:`datetime.timedelta` object representing the given number of "
"days, seconds and microseconds.  Normalization is performed so that the "
"resulting number of microseconds and seconds lie in the ranges documented "
"for :class:`datetime.timedelta` objects."
msgstr ""
"Retorna um objeto :class:`datetime.timedelta` representando o número "
"especificado de dias, segundos e microssegundos. A normalização é realizada "
"para que o número resultante de microssegundos e segundos esteja nos "
"intervalos documentados para objetos de :class:`datetime.timedelta`."

#: ../../c-api/datetime.rst:137
msgid ""
"Return a :class:`datetime.timezone` object with an unnamed fixed offset "
"represented by the *offset* argument."
msgstr ""
"Retorna um objeto :class:`datetime.timezone` com um deslocamento fixo sem "
"nome representado pelo argumento *offset*."

#: ../../c-api/datetime.rst:144
msgid ""
"Return a :class:`datetime.timezone` object with a fixed offset represented "
"by the *offset* argument and with tzname *name*."
msgstr ""
"Retorna um objeto :class:`datetime.timezone` com um deslocamento fixo "
"representado pelo argumento *offset* e com tzname *name*."

#: ../../c-api/datetime.rst:150
msgid ""
"Macros to extract fields from date objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Date`, including subclasses (such as :c:data:"
"`PyDateTime_DateTime`).  The argument must not be ``NULL``, and the type is "
"not checked:"
msgstr ""
"Macros para extrair campos de objetos de data. O argumento deve ser uma "
"instância de :c:data:`PyDateTime_Date`, incluindo subclasses (como :c:data:"
"`PyDateTime_DateTime`). O argumento não deve ser ``NULL`` e o tipo não está "
"marcado:"

#: ../../c-api/datetime.rst:157
msgid "Return the year, as a positive int."
msgstr "Retorna o ano, como um inteiro positivo."

#: ../../c-api/datetime.rst:162
msgid "Return the month, as an int from 1 through 12."
msgstr "Retorna o mês, como um inteiro de 1 a 12."

#: ../../c-api/datetime.rst:167
msgid "Return the day, as an int from 1 through 31."
msgstr "Retorna o dia, como um inteiro de 1 a 31."

#: ../../c-api/datetime.rst:170
msgid ""
"Macros to extract fields from datetime objects.  The argument must be an "
"instance of :c:data:`PyDateTime_DateTime`, including subclasses. The "
"argument must not be ``NULL``, and the type is not checked:"
msgstr ""
"Macros para extrair campos de objetos de data e hora. O argumento deve ser "
"uma instância de :c:data:`PyDateTime_DateTime`, incluindo subclasses. O "
"argumento não deve ser ``NULL`` e o tipo não é verificado:"

#: ../../c-api/datetime.rst:176 ../../c-api/datetime.rst:207
msgid "Return the hour, as an int from 0 through 23."
msgstr "Retorna a hora, como um inteiro de 0 a 23."

#: ../../c-api/datetime.rst:181 ../../c-api/datetime.rst:212
msgid "Return the minute, as an int from 0 through 59."
msgstr "Retorna o minuto, como um inteiro de 0 a 59."

#: ../../c-api/datetime.rst:186 ../../c-api/datetime.rst:217
msgid "Return the second, as an int from 0 through 59."
msgstr "Retorna o segundo, como um inteiro de 0 a 59."

#: ../../c-api/datetime.rst:191 ../../c-api/datetime.rst:222
msgid "Return the microsecond, as an int from 0 through 999999."
msgstr "Retorna o microssegundo, como um inteiro de 0 a 999999."

#: ../../c-api/datetime.rst:196 ../../c-api/datetime.rst:227
msgid "Return the fold, as an int from 0 through 1."
msgstr "Retorna a dobra, como um inteiro de 0 a 1."

#: ../../c-api/datetime.rst:201
msgid ""
"Macros to extract fields from time objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Time`, including subclasses. The argument "
"must not be ``NULL``, and the type is not checked:"
msgstr ""
"Macros para extrair campos de objetos de tempo. O argumento deve ser uma "
"instância de :c:data:`PyDateTime_Time`, incluindo subclasses. O argumento "
"não deve ser ``NULL`` e o tipo não é verificado:"

#: ../../c-api/datetime.rst:232
msgid ""
"Macros to extract fields from time delta objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Delta`, including subclasses. The argument "
"must not be ``NULL``, and the type is not checked:"
msgstr ""
"Macros para extrair campos de objetos time delta. O argumento deve ser uma "
"instância de :c:data:`PyDateTime_Delta`, incluindo subclasses. O argumento "
"não deve ser ``NULL``, e o tipo não é checado:"

#: ../../c-api/datetime.rst:238
msgid "Return the number of days, as an int from -999999999 to 999999999."
msgstr "Retorna o número de dias, como um inteiro de -999999999 a 999999999."

#: ../../c-api/datetime.rst:245
msgid "Return the number of seconds, as an int from 0 through 86399."
msgstr "Retorna o número de segundos, como um inteiro de 0 a 86399."

#: ../../c-api/datetime.rst:252
msgid "Return the number of microseconds, as an int from 0 through 999999."
msgstr "Retorna o número de microssegundos, como um inteiro de 0 a 999999."

#: ../../c-api/datetime.rst:257
msgid "Macros for the convenience of modules implementing the DB API:"
msgstr "Macros para a conveniência de módulos implementando a API de DB:"

#: ../../c-api/datetime.rst:261
msgid ""
"Create and return a new :class:`datetime.datetime` object given an argument "
"tuple suitable for passing to :meth:`datetime.datetime.fromtimestamp()`."
msgstr ""
"Cria e retorna um novo objeto :class:`datetime.datetime`, com uma tupla de "
"argumentos adequada para passar para :meth:`datetime.datetime."
"fromtimestamp()`."

#: ../../c-api/datetime.rst:267
msgid ""
"Create and return a new :class:`datetime.date` object given an argument "
"tuple suitable for passing to :meth:`datetime.date.fromtimestamp()`."
msgstr ""
"Cria e retorna um novo objeto :class:`datetime.date`, com uma tupla de "
"argumentos adequada para passar para :meth:`datetime.date.fromtimestamp()`."
