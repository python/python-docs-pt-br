# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2017
# Rafael Fontenelle <rffontenelle@gmail.com>, 2023
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-16 16:41+0000\n"
"PO-Revision-Date: 2017-02-16 17:39+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2023\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../c-api/stable.rst:7
msgid "Stable Application Binary Interface"
msgstr "Interface Binária de Aplicação Estável"

#: ../../c-api/stable.rst:9
msgid ""
"Traditionally, the C API of Python will change with every release.  Most "
"changes will be source-compatible, typically by only adding API, rather than "
"changing existing API or removing API (although some interfaces do get "
"removed after being deprecated first)."
msgstr ""
"Tradicionalmente, a API C do Python mudará com cada versão. A maioria das "
"mudanças será compatível com a origem, normalmente, apenas adicionando API, "
"ao invés de alterar a API existente ou remover API (embora algumas "
"interfaces sejam removidas depois de primeiro se tornarem obsoletas )."

#: ../../c-api/stable.rst:14
msgid ""
"Unfortunately, the API compatibility does not extend to binary compatibility "
"(the ABI). The reason is primarily the evolution of struct definitions, "
"where addition of a new field, or changing the type of a field, might not "
"break the API, but can break the ABI.  As a consequence, extension modules "
"need to be recompiled for every Python release (although an exception is "
"possible on Unix when none of the affected interfaces are used). In "
"addition, on Windows, extension modules link with a specific pythonXY.dll "
"and need to be recompiled to link with a newer one."
msgstr ""
"Infelizmente, a compatibilidade da API não se estende à compatibilidade "
"binária (o ABI). O motivo é principalmente a evolução das definições de "
"estrutura, onde a adição de um novo campo, ou a alteração do tipo de um "
"campo, pode não quebrar a API, mas pode quebrar o ABI. Como consequência, os "
"módulos de extensão precisam ser recompilados para cada versão do Python "
"(embora exista uma exceção no Unix quando nenhuma das interfaces afetadas é "
"usada). Além disso, no Windows, os módulos de extensão se conectam com um "
"pythonXY.dll específico e precisam ser recompilados para vincular com um "
"novo."

#: ../../c-api/stable.rst:23
msgid ""
"Since Python 3.2, a subset of the API has been declared to guarantee a "
"stable ABI. Extension modules wishing to use this API (called \"limited "
"API\") need to define ``Py_LIMITED_API``. A number of interpreter details "
"then become hidden from the extension module; in return, a module is built "
"that works on any 3.x version (x>=2) without recompilation."
msgstr ""
"Desde o Python 3.2, um subconjunto da API foi declarado para garantir um ABI "
"estável. Os módulos de extensão que desejam usar esta API (chamada \"API "
"limitada\") precisam definir ``Py_LIMITED_API``. Uma série de detalhes do "
"interpretador ficam escondidos do módulo de extensão; em troca, um módulo é "
"construído que funciona em qualquer versão 3.x (x> = 2) sem recompilação."

#: ../../c-api/stable.rst:29
msgid ""
"In some cases, the stable ABI needs to be extended with new functions. "
"Extension modules wishing to use these new APIs need to set "
"``Py_LIMITED_API`` to the ``PY_VERSION_HEX`` value (see :ref:"
"`apiabiversion`) of the minimum Python version they want to support (e.g. "
"``0x03030000`` for Python 3.3). Such modules will work on all subsequent "
"Python releases, but fail to load (because of missing symbols) on the older "
"releases."
msgstr ""
"Em alguns casos, a ABI estável deve ser estendida com novas funções. Os "
"módulos de extensão que desejam usar essas novas APIs precisam definir "
"``Py_LIMITED_API`` para o valor ``PY_VERSION_HEX`` (veja :ref:"
"`apiabiversion`) da versão mínima do Python que eles querem suportar (por "
"exemplo,``0x03030000`` para Python 3.3). Esses módulos funcionarão em todas "
"as versões subsequentes do Python, mas não carregarão (por causa dos "
"símbolos que faltam) nos lançamentos mais antigos."

#: ../../c-api/stable.rst:36
msgid ""
"As of Python 3.2, the set of functions available to the limited API is "
"documented in :pep:`384`.  In the C API documentation, API elements that are "
"not part of the limited API are marked as \"Not part of the limited API.\""
msgstr ""
"A partir do Python 3.2, o conjunto de funções disponíveis para a API "
"limitada está documentado em :pep:`384`. Na documentação da API C, os "
"elementos da API que não fazem parte da API limitada são marcados como \"Não "
"faz parte da API limitada\"."
