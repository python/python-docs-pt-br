# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-31 17:33+0000\n"
"PO-Revision-Date: 2025-07-18 19:17+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../c-api/apiabiversion.rst:7
msgid "API and ABI Versioning"
msgstr "API e Versionamento de ABI"

#: ../../c-api/apiabiversion.rst:9
msgid ""
"``PY_VERSION_HEX`` is the Python version number encoded in a single integer."
msgstr ""
"``PY_VERSION_HEX`` É o número da versão do Python codificado em um único "
"inteiro."

#: ../../c-api/apiabiversion.rst:11
msgid ""
"For example if the ``PY_VERSION_HEX`` is set to ``0x030401a2``, the "
"underlying version information can be found by treating it as a 32 bit "
"number in the following manner:"
msgstr ""
"Por exemplo se o ``PY_VERSION_HEX`` está configurado para ``0x030401a2``, a "
"informações de versão subjacente pode ser encontrada tratando-a como um "
"numero de 32 bit da seguinte maneira:"

#: ../../c-api/apiabiversion.rst:16
msgid "Bytes"
msgstr "Bytes"

#: ../../c-api/apiabiversion.rst:16
msgid "Bits (big endian order)"
msgstr "Bits (big endian order)"

#: ../../c-api/apiabiversion.rst:16
msgid "Meaning"
msgstr "Significado"

#: ../../c-api/apiabiversion.rst:18
msgid "``1``"
msgstr "``1``"

#: ../../c-api/apiabiversion.rst:18
msgid "``1-8``"
msgstr "``1-8``"

#: ../../c-api/apiabiversion.rst:18
msgid "``PY_MAJOR_VERSION`` (the ``3`` in ``3.4.1a2``)"
msgstr "``PY_MAJOR_VERSION`` (O ``3`` em ``3.4.1a2``)"

#: ../../c-api/apiabiversion.rst:21
msgid "``2``"
msgstr "``2``"

#: ../../c-api/apiabiversion.rst:21
msgid "``9-16``"
msgstr "``9-16``"

#: ../../c-api/apiabiversion.rst:21
msgid "``PY_MINOR_VERSION`` (the ``4`` in ``3.4.1a2``)"
msgstr "``PY_MINOR_VERSION`` (O ``4`` em ``3.4.1a2``)"

#: ../../c-api/apiabiversion.rst:24
msgid "``3``"
msgstr "``3``"

#: ../../c-api/apiabiversion.rst:24
msgid "``17-24``"
msgstr "``17-24``"

#: ../../c-api/apiabiversion.rst:24
msgid "``PY_MICRO_VERSION`` (the ``1`` in ``3.4.1a2``)"
msgstr "``PY_MICRO_VERSION`` (O ``1`` em ``3.4.1a2``)"

#: ../../c-api/apiabiversion.rst:27
msgid "``4``"
msgstr "``4``"

#: ../../c-api/apiabiversion.rst:27
msgid "``25-28``"
msgstr "``25-28``"

#: ../../c-api/apiabiversion.rst:27
msgid ""
"``PY_RELEASE_LEVEL`` (``0xA`` for alpha, ``0xB`` for beta, ``0xC`` for "
"release candidate and ``0xF`` for final), in this case it is alpha."
msgstr ""
"``PY_RELEASE_LEVEL`` (``0xA`` para alfa, ``0xB`` para beta, ``0xC`` para "
"release candidate e ``0xF`` para final), que nesse caso é alfa."

#: ../../c-api/apiabiversion.rst:32
msgid "``29-32``"
msgstr "``29-32``"

#: ../../c-api/apiabiversion.rst:32
msgid ""
"``PY_RELEASE_SERIAL`` (the ``2`` in ``3.4.1a2``, zero for final releases)"
msgstr ""
"``PY_RELEASE_SERIAL`` (O ``2`` em ``3.4.1a2``, zero para lançamentos finais)"

#: ../../c-api/apiabiversion.rst:36
msgid "Thus ``3.4.1a2`` is hexversion ``0x030401a2``."
msgstr "Portanto \"3.4.1a2\" é em versão hexa \"0x03041a2\"."

#: ../../c-api/apiabiversion.rst:38
msgid "All the given macros are defined in :source:`Include/patchlevel.h`."
msgstr ""
"Todas as macros dadas estão definidas em :source:`Include/patchlevel.h`."
