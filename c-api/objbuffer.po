# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-22 21:19+0000\n"
"PO-Revision-Date: 2025-09-22 15:57+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../c-api/objbuffer.rst:4
msgid "Old Buffer Protocol"
msgstr "Protocolo de Buffer Antigo"

#: ../../c-api/objbuffer.rst:8
msgid ""
"These functions were part of the \"old buffer protocol\" API in Python 2. In "
"Python 3, this protocol doesn't exist anymore but the functions are still "
"exposed to ease porting 2.x code.  They act as a compatibility wrapper "
"around the :ref:`new buffer protocol <bufferobjects>`, but they don't give "
"you control over the lifetime of the resources acquired when a buffer is "
"exported."
msgstr ""
"Essas funções faziam parte da API do \"protocolo de buffer antigo\" no "
"Python 2. No Python 3, esse protocolo não existe mais, mas as funções ainda "
"estão expostas para facilitar a portabilidade do código 2.x. Eles atuam como "
"um wrapper de compatibilidade em torno do :ref:`novo protocolo de buffer "
"<bufferobjects>`, mas não oferecem controle sobre a vida útil dos recursos "
"adquiridos quando um buffer é exportado."

#: ../../c-api/objbuffer.rst:15
msgid ""
"Therefore, it is recommended that you call :c:func:`PyObject_GetBuffer` (or "
"the ``y*`` or ``w*`` :ref:`format codes <arg-parsing>` with the :c:func:"
"`PyArg_ParseTuple` family of functions) to get a buffer view over an object, "
"and :c:func:`PyBuffer_Release` when the buffer view can be released."
msgstr ""
"Portanto, é recomendável que você chame :c:func:`PyObject_GetBuffer` (ou os :"
"ref:`códigos de formatação <arg-parsing>` ``y*`` ou ``w*`` com o família de "
"funções de :c:func:`PyArg_ParseTuple`) para obter uma visão de buffer sobre "
"um objeto e :c:func:`PyBuffer_Release` quando a visão de buffer puder ser "
"liberada."

#: ../../c-api/objbuffer.rst:23
msgid ""
"Returns a pointer to a read-only memory location usable as character-based "
"input.  The *obj* argument must support the single-segment character buffer "
"interface.  On success, returns ``0``, sets *buffer* to the memory location "
"and *buffer_len* to the buffer length.  Returns ``-1`` and sets a :exc:"
"`TypeError` on error."
msgstr ""
"Retorna um ponteiro para um local de memória somente leitura utilizável como "
"entrada baseada em caracteres. O argumento *obj* deve ter suporte a "
"interface do buffer de caracteres de segmento único. Em caso de sucesso, "
"retorna ``0``, define *buffer* com o local da memória e *buffer_len* com o "
"comprimento do buffer. Retorna ``-1`` e define a :exc:`TypeError` em caso de "
"erro."

#: ../../c-api/objbuffer.rst:32
msgid ""
"Returns a pointer to a read-only memory location containing arbitrary data. "
"The *obj* argument must support the single-segment readable buffer "
"interface.  On success, returns ``0``, sets *buffer* to the memory location "
"and *buffer_len* to the buffer length.  Returns ``-1`` and sets a :exc:"
"`TypeError` on error."
msgstr ""
"Retorna um ponteiro para um local de memória somente leitura que contém "
"dados arbitrários. O argumento *obj* deve ter suporte a interface de buffer "
"legível de segmento único. Em caso de sucesso, retorna ``0``, define "
"*buffer* com o local da memória e *buffer_len* com o comprimento do buffer. "
"Retorna ``-1`` e define a :exc:`TypeError` em caso de erro."

#: ../../c-api/objbuffer.rst:41
msgid ""
"Returns ``1`` if *o* supports the single-segment readable buffer interface. "
"Otherwise returns ``0``.  This function always succeeds."
msgstr ""
"Retorna ``1`` se *o* tiver suporte a interface de buffer legível de segmento "
"único. Caso contrário, retorna ``0``. Esta função sempre tem sucesso."

#: ../../c-api/objbuffer.rst:44
msgid ""
"Note that this function tries to get and release a buffer, and exceptions "
"which occur while calling corresponding functions will get suppressed. To "
"get error reporting use :c:func:`PyObject_GetBuffer()` instead."
msgstr ""
"Observe que esta função tenta obter e liberar um buffer, e as exceções que "
"ocorrem ao chamar as funções correspondentes serão suprimidas. Para obter o "
"relatório de erros, use :c:func:`PyObject_GetBuffer()` em vez disso."

#: ../../c-api/objbuffer.rst:51
msgid ""
"Returns a pointer to a writable memory location.  The *obj* argument must "
"support the single-segment, character buffer interface.  On success, returns "
"``0``, sets *buffer* to the memory location and *buffer_len* to the buffer "
"length.  Returns ``-1`` and sets a :exc:`TypeError` on error."
msgstr ""
"Retorna um ponteiro para um local de memória gravável. O argumento *obj* "
"deve ter suporte a interface de buffer de caracteres de segmento único. Em "
"caso de sucesso, retorna ``0``, define *buffer* com o local da memória e "
"*buffer_len* com o comprimento do buffer. Retorna ``-1`` e define a :exc:"
"`TypeError` em caso de erro."
