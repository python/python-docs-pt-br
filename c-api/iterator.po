# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2019
# Rafael Fontenelle <rffontenelle@gmail.com>, 2020
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-23 16:56+0000\n"
"PO-Revision-Date: 2019-09-01 03:38+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2020\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/iterator.rst:6
msgid "Iterator Objects"
msgstr "Objeto Iterator"

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/iterator.rst:8
msgid ""
"Python provides two general-purpose iterator objects.  The first, a sequence "
"iterator, works with an arbitrary sequence supporting the :meth:"
"`__getitem__` method.  The second works with a callable object and a "
"sentinel value, calling the callable for each item in the sequence, and "
"ending the iteration when the sentinel value is returned."
msgstr ""
"O Python fornece dois objetos iteradores de uso geral. O primeiro, um "
"iterador de sequência, trabalha com uma sequência arbitrária que suporta o "
"método :meth:`__getitem__`. O segundo funciona com um objeto que pode ser "
"chamado e um valor de sentinela, chamando o que pode ser chamado para cada "
"item na sequência e finalizando a iteração quando o valor de sentinela é "
"retornado."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/iterator.rst:17
msgid ""
"Type object for iterator objects returned by :c:func:`PySeqIter_New` and the "
"one-argument form of the :func:`iter` built-in function for built-in "
"sequence types."
msgstr ""
"Objeto de tipo para objetos iteradores retornados por :c:func:"
"`PySeqIter_New` e a forma de um argumento da função embutida :func:`iter` "
"para tipos de sequência embutidos."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/iterator.rst:24
msgid "Return true if the type of *op* is :c:data:`PySeqIter_Type`."
msgstr "Retorna true se o tipo de *op* for :c:data:`PySeqIter_Type`."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/iterator.rst:29
msgid ""
"Return an iterator that works with a general sequence object, *seq*.  The "
"iteration ends when the sequence raises :exc:`IndexError` for the "
"subscripting operation."
msgstr ""
"Retorna um iterador que funcione com um objeto de sequência geral, *seq*. A "
"iteração termina quando a sequência levanta :exc:`IndexError` para a "
"operação de assinatura."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/iterator.rst:36
msgid ""
"Type object for iterator objects returned by :c:func:`PyCallIter_New` and "
"the two-argument form of the :func:`iter` built-in function."
msgstr ""
"Objeto de tipo para objetos iteradores retornados por :c:func:"
"`PyCallIter_New` e a forma de dois argumentos da função embutida :func:"
"`iter`."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/iterator.rst:42
msgid "Return true if the type of *op* is :c:data:`PyCallIter_Type`."
msgstr "Retorna true se o tipo de *op* é :c:data:`PyCallIter_Type`."

#: /home/runner/work/python-docs-tx-translations/python-docs-tx-translations/cpython/Doc/c-api/iterator.rst:47
msgid ""
"Return a new iterator.  The first parameter, *callable*, can be any Python "
"callable object that can be called with no parameters; each call to it "
"should return the next item in the iteration.  When *callable* returns a "
"value equal to *sentinel*, the iteration will be terminated."
msgstr ""
"Retorna um novo iterador. O primeiro parâmetro, *callable*, pode ser "
"qualquer objeto chamável do Python que possa ser chamado sem parâmetros; "
"cada chamada deve retornar o próximo item na iteração. Quando *callable* "
"retorna um valor igual a *sentinel*, a iteração será encerrada."
