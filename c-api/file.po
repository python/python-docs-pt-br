# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-23 16:12+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../c-api/file.rst:6
msgid "File Objects"
msgstr "Objetos arquivos"

#: ../../c-api/file.rst:10
msgid ""
"These APIs are a minimal emulation of the Python 2 C API for built-in file "
"objects, which used to rely on the buffered I/O (:c:expr:`FILE*`) support "
"from the C standard library.  In Python 3, files and streams use the new :"
"mod:`io` module, which defines several layers over the low-level unbuffered "
"I/O of the operating system.  The functions described below are convenience "
"C wrappers over these new APIs, and meant mostly for internal error "
"reporting in the interpreter; third-party code is advised to access the :mod:"
"`io` APIs instead."
msgstr ""
"Essas APIs são uma emulação mínima da API C do Python 2 para objetos arquivo "
"embutidos, que costumavam depender do suporte de E/S em buffer (:c:expr:"
"`FILE*`) da biblioteca C padrão. No Python 3, arquivos e streams usam o novo "
"módulo :mod:`io`, que define várias camadas sobre a E/S sem buffer de baixo "
"nível do sistema operacional. As funções descritas a seguir são invólucros "
"de conveniência para o C sobre essas novas APIs e são destinadas "
"principalmente para relatórios de erros internos no interpretador; código de "
"terceiros é recomendado para acessar as APIs de :mod:`io`."

#: ../../c-api/file.rst:22
msgid ""
"Create a Python file object from the file descriptor of an already opened "
"file *fd*.  The arguments *name*, *encoding*, *errors* and *newline* can be "
"``NULL`` to use the defaults; *buffering* can be *-1* to use the default. "
"*name* is ignored and kept for backward compatibility. Return ``NULL`` on "
"failure. For a more comprehensive description of the arguments, please refer "
"to the :func:`io.open` function documentation."
msgstr ""
"Cria um objeto arquivo Python a partir do descritor de arquivo de um arquivo "
"já aberto *fd*. Os argumentos *name*, *encoding*, *errors* and *newline* "
"podem ser ``NULL`` para usar os padrões; *buffering* pode ser *-1* para usar "
"o padrão. *name* é ignorado e mantido para compatibilidade com versões "
"anteriores. Retorna ``NULL`` em caso de falha. Para uma descrição mais "
"abrangente dos argumentos, consulte a documentação da função :func:`io.open`."

#: ../../c-api/file.rst:31
msgid ""
"Since Python streams have their own buffering layer, mixing them with OS-"
"level file descriptors can produce various issues (such as unexpected "
"ordering of data)."
msgstr ""
"Como os streams do Python têm sua própria camada de buffer, combiná-los com "
"os descritores de arquivo no nível do sistema operacional pode produzir "
"vários problemas (como ordenação inesperada de dados)."

#: ../../c-api/file.rst:35
msgid "Ignore *name* attribute."
msgstr "Ignora atributo *name*."

#: ../../c-api/file.rst:41
msgid ""
"Return the file descriptor associated with *p* as an :c:expr:`int`.  If the "
"object is an integer, its value is returned.  If not, the object's :meth:"
"`~io.IOBase.fileno` method is called if it exists; the method must return an "
"integer, which is returned as the file descriptor value.  Sets an exception "
"and returns ``-1`` on failure."
msgstr ""
"Retorna o descritor de arquivo associado a *p* como um :c:expr:`int`. Se o "
"objeto for um inteiro, seu valor será retornado. Caso contrário, o método :"
"meth:`~io.IOBase.fileno` do objeto será chamado se existir; o método deve "
"retornar um inteiro, que é retornado como o valor do descritor de arquivo. "
"Define uma exceção e retorna ``-1`` em caso de falha."

#: ../../c-api/file.rst:52
msgid ""
"Equivalent to ``p.readline([n])``, this function reads one line from the "
"object *p*.  *p* may be a file object or any object with a :meth:`~io.IOBase."
"readline` method.  If *n* is ``0``, exactly one line is read, regardless of "
"the length of the line.  If *n* is greater than ``0``, no more than *n* "
"bytes will be read from the file; a partial line can be returned.  In both "
"cases, an empty string is returned if the end of the file is reached "
"immediately.  If *n* is less than ``0``, however, one line is read "
"regardless of length, but :exc:`EOFError` is raised if the end of the file "
"is reached immediately."
msgstr ""
"Equivalente a ``p.readline([n])``, esta função lê uma linha do objeto *p*. "
"*p* pode ser um objeto arquivo ou qualquer objeto com um método :meth:`~io."
"IOBase.readline`. Se *n* for ``0``, exatamente uma linha é lida, "
"independentemente do comprimento da linha. Se *n* for maior que ``0``, não "
"mais do que *n* bytes serão lidos do arquivo; uma linha parcial pode ser "
"retornada. Em ambos os casos, uma string vazia é retornada se o final do "
"arquivo for alcançado imediatamente. Se *n* for menor que ``0``, entretanto, "
"uma linha é lida independentemente do comprimento, mas :exc:`EOFError` é "
"levantada se o final do arquivo for alcançado imediatamente."

#: ../../c-api/file.rst:65
msgid ""
"Overrides the normal behavior of :func:`io.open_code` to pass its parameter "
"through the provided handler."
msgstr ""
"Substitui o comportamento normal de :func:`io.open_code` para passar seu "
"parâmetro por meio do manipulador fornecido."

#: ../../c-api/file.rst:68
msgid ""
"The handler is a function of type :c:expr:`PyObject *(\\*)(PyObject *path, "
"void *userData)`, where *path* is guaranteed to be :c:type:`PyUnicodeObject`."
msgstr ""
"O manipulador é uma função do tipo :c:expr:`PyObject *(\\*)(PyObject *path, "
"void *userData)`, sendo *path* garantido como sendo :c:type:"
"`PyUnicodeObject`."

#: ../../c-api/file.rst:71
msgid ""
"The *userData* pointer is passed into the hook function. Since hook "
"functions may be called from different runtimes, this pointer should not "
"refer directly to Python state."
msgstr ""
"O ponteiro *userData* é passado para a função de gancho. Como as funções de "
"gancho podem ser chamadas de diferentes tempos de execução, esse ponteiro "
"não deve se referir diretamente ao estado do Python."

#: ../../c-api/file.rst:75
msgid ""
"As this hook is intentionally used during import, avoid importing new "
"modules during its execution unless they are known to be frozen or available "
"in ``sys.modules``."
msgstr ""
"Como este gancho é usado intencionalmente durante a importação, evite "
"importar novos módulos durante sua execução, a menos que eles estejam "
"congelados ou disponíveis em ``sys.modules``."

#: ../../c-api/file.rst:79
msgid ""
"Once a hook has been set, it cannot be removed or replaced, and later calls "
"to :c:func:`PyFile_SetOpenCodeHook` will fail. On failure, the function "
"returns -1 and sets an exception if the interpreter has been initialized."
msgstr ""
"Uma vez que um gancho foi definido, ele não pode ser removido ou "
"substituído, e chamadas posteriores para :c:func:`PyFile_SetOpenCodeHook` "
"irão falhar. Em caso de falha, a função retorna -1 e define uma exceção se o "
"interpretador foi inicializado."

#: ../../c-api/file.rst:83
msgid "This function is safe to call before :c:func:`Py_Initialize`."
msgstr "É seguro chamar esta função antes :c:func:`Py_Initialize`."

#: ../../c-api/file.rst:85
msgid ""
"Raises an :ref:`auditing event <auditing>` ``setopencodehook`` with no "
"arguments."
msgstr ""
"Levanta um :ref:`evento de auditoria<auditing>` ``setopencodehook`` sem "
"argumentos."

#: ../../c-api/file.rst:95
msgid ""
"Write object *obj* to file object *p*.  The only supported flag for *flags* "
"is :const:`Py_PRINT_RAW`; if given, the :func:`str` of the object is written "
"instead of the :func:`repr`.  Return ``0`` on success or ``-1`` on failure; "
"the appropriate exception will be set."
msgstr ""
"Escreve o objeto *obj* no objeto arquivo *p*. O único sinalizador suportado "
"para *flags* é :const:`Py_PRINT_RAW`; se fornecido, o :func:`str` do objeto "
"é escrito em vez de :func:`repr`. Retorna ``0`` em caso de sucesso ou ``-1`` "
"em caso de falha; a exceção apropriada será definida."

#: ../../c-api/file.rst:103
msgid ""
"Write string *s* to file object *p*.  Return ``0`` on success or ``-1`` on "
"failure; the appropriate exception will be set."
msgstr ""
"Escreve a string *s* no objeto arquivo *p*. Retorna ``0`` em caso de sucesso "
"ou ``-1`` em caso de falha; a exceção apropriada será definida."
