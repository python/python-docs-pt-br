# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2021
# Jones Martins, 2024
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-02-28 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 00:50+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../c-api/slice.rst:6
msgid "Slice Objects"
msgstr "Objetos Slice"

#: ../../c-api/slice.rst:11
msgid ""
"The type object for slice objects.  This is the same as :class:`slice` in "
"the Python layer."
msgstr ""
"Tipo de objeto para objetos fatia. Isso é o mesmo que :class:`slice` na "
"camada Python."

#: ../../c-api/slice.rst:17
msgid ""
"Return true if *ob* is a slice object; *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"Retorna true se *ob* for um objeto fatia; *ob* não deve ser ``NULL``. Esta "
"função sempre tem sucesso."

#: ../../c-api/slice.rst:23
msgid ""
"Return a new slice object with the given values.  The *start*, *stop*, and "
"*step* parameters are used as the values of the slice object attributes of "
"the same names.  Any of the values may be ``NULL``, in which case the "
"``None`` will be used for the corresponding attribute."
msgstr ""
"Retorna um novo objeto fatia com os valores fornecidos. Os parâmetros "
"*start*, *stop* e *step* são usados como os valores dos atributos do objeto "
"fatia com os mesmos nomes. Qualquer um dos valores pode ser ``NULL``, caso "
"em que ``None`` será usado para o atributo correspondente."

#: ../../c-api/slice.rst:28
msgid ""
"Return ``NULL`` with an exception set if the new object could not be "
"allocated."
msgstr ""
"Retorna ``NULL`` com uma exceção definida se o novo objeto não puder ser "
"alocado."

#: ../../c-api/slice.rst:34
msgid ""
"Retrieve the start, stop and step indices from the slice object *slice*, "
"assuming a sequence of length *length*. Treats indices greater than *length* "
"as errors."
msgstr ""
"Recupera os índices de início, parada e intermediário do objeto fatia "
"*slice*, presumindo uma sequência de comprimento *length*. Trata índices "
"maiores que *length* como erros."

#: ../../c-api/slice.rst:38
msgid ""
"Returns ``0`` on success and ``-1`` on error with no exception set (unless "
"one of the indices was not ``None`` and failed to be converted to an "
"integer, in which case ``-1`` is returned with an exception set)."
msgstr ""
"Retorna ``0`` em caso de sucesso e ``-1`` em caso de erro sem exceção "
"definida (a menos que um dos índices não fosse ``None`` e falhou ao ser "
"convertido para um inteiro, neste caso ``-1`` é retornado com uma exceção "
"definida)."

#: ../../c-api/slice.rst:42
msgid "You probably do not want to use this function."
msgstr "Você provavelmente não deseja usar esta função."

#: ../../c-api/slice.rst:44 ../../c-api/slice.rst:75
msgid ""
"The parameter type for the *slice* parameter was ``PySliceObject*`` before."
msgstr ""
"O tipo de parâmetro para o parâmetro *slice* era antes de ``PySliceObject*``."

#: ../../c-api/slice.rst:51
msgid ""
"Usable replacement for :c:func:`PySlice_GetIndices`.  Retrieve the start, "
"stop, and step indices from the slice object *slice* assuming a sequence of "
"length *length*, and store the length of the slice in *slicelength*.  Out of "
"bounds indices are clipped in a manner consistent with the handling of "
"normal slices."
msgstr ""
"Substituição utilizável para :c:func:`PySlice_GetIndices`. Recupera os "
"índices de início, parada e intermediário do objeto fatia *slice* presumindo "
"uma sequência de comprimento *length* e armazena o comprimento da fatia em "
"*slicelength*. Índices fora dos limites são cortados de maneira consistente "
"com o tratamento de fatias normais."

#: ../../c-api/slice.rst:57
msgid "Return ``0`` on success and ``-1`` on error with an exception set."
msgstr ""
"Retorna ``0`` em caso de sucesso e ``-1`` em caso de erro com uma exceção "
"definida."

#: ../../c-api/slice.rst:60
msgid ""
"This function is considered not safe for resizable sequences. Its invocation "
"should be replaced by a combination of :c:func:`PySlice_Unpack` and :c:func:"
"`PySlice_AdjustIndices` where ::"
msgstr ""
"Esta função não é considerada segura para sequências redimensionáveis. Sua "
"invocação deve ser substituída por uma combinação de :c:func:"
"`PySlice_Unpack` e :c:func:`PySlice_AdjustIndices` sendo ::"

#: ../../c-api/slice.rst:64
msgid ""
"if (PySlice_GetIndicesEx(slice, length, &start, &stop, &step, &slicelength) "
"< 0) {\n"
"    // return error\n"
"}"
msgstr ""
"if (PySlice_GetIndicesEx(slice, length, &start, &stop, &step, &slicelength) "
"< 0) {\n"
"    // retorna erro\n"
"}"

#: ../../c-api/slice.rst:68
msgid "is replaced by ::"
msgstr "substituído por ::"

#: ../../c-api/slice.rst:70
msgid ""
"if (PySlice_Unpack(slice, &start, &stop, &step) < 0) {\n"
"    // return error\n"
"}\n"
"slicelength = PySlice_AdjustIndices(length, &start, &stop, step);"
msgstr ""
"if (PySlice_Unpack(slice, &start, &stop, &step) < 0) {\n"
"    // retorna erro\n"
"}\n"
"slicelength = PySlice_AdjustIndices(length, &start, &stop, step);"

#: ../../c-api/slice.rst:79
msgid ""
"If ``Py_LIMITED_API`` is not set or set to the value between ``0x03050400`` "
"and ``0x03060000`` (not including) or ``0x03060100`` or higher :c:func:`!"
"PySlice_GetIndicesEx` is implemented as a macro using :c:func:`!"
"PySlice_Unpack` and :c:func:`!PySlice_AdjustIndices`. Arguments *start*, "
"*stop* and *step* are evaluated more than once."
msgstr ""
"Se ``Py_LIMITED_API`` não estiver definido ou estiver definido com um valor "
"entre ``0x03050400`` e ``0x03060000`` (não incluso) ou ``0x03060100`` ou "
"mais alto, :c:func:`!PySlice_GetIndicesEx` é implementado como uma macro "
"usando :c:func:`!PySlice_Unpack` e :c:func:`!PySlice_AdjustIndices`. Os "
"argumentos *start*, *stop* e *step* são avaliados mais de uma vez."

#: ../../c-api/slice.rst:86
msgid ""
"If ``Py_LIMITED_API`` is set to the value less than ``0x03050400`` or "
"between ``0x03060000`` and ``0x03060100`` (not including) :c:func:`!"
"PySlice_GetIndicesEx` is a deprecated function."
msgstr ""
"Se ``Py_LIMITED_API`` estiver definido para um valor menor que "
"``0x03050400`` ou entre ``0x03060000`` e ``0x03060100`` (não incluso), :c:"
"func:`!PySlice_GetIndicesEx` é uma função descontinuada."

#: ../../c-api/slice.rst:94
msgid ""
"Extract the start, stop and step data members from a slice object as C "
"integers.  Silently reduce values larger than ``PY_SSIZE_T_MAX`` to "
"``PY_SSIZE_T_MAX``, silently boost the start and stop values less than "
"``PY_SSIZE_T_MIN`` to ``PY_SSIZE_T_MIN``, and silently boost the step values "
"less than ``-PY_SSIZE_T_MAX`` to ``-PY_SSIZE_T_MAX``."
msgstr ""
"Extrai os membros de dados de início, parada e intermediário de um objeto "
"fatia como C inteiros. Reduz silenciosamente os valores maiores do que "
"``PY_SSIZE_T_MAX`` para ``PY_SSIZE_T_MAX``, aumenta silenciosamente os "
"valores de início e parada menores que ``PY_SSIZE_T_MIN`` para "
"``PY_SSIZE_T_MIN``, e silenciosamente aumenta os valores de intermediário "
"menores que ``-PY_SSIZE_T_MAX`` para ``-PY_SSIZE_T_MAX``."

#: ../../c-api/slice.rst:100
msgid "Return ``-1`` with an exception set on error, ``0`` on success."
msgstr ""
"Retorna ``-1`` com uma exceção definida em caso de erro, ``0`` em caso de "
"sucesso."

#: ../../c-api/slice.rst:107
msgid ""
"Adjust start/end slice indices assuming a sequence of the specified length. "
"Out of bounds indices are clipped in a manner consistent with the handling "
"of normal slices."
msgstr ""
"Ajusta os índices de fatias inicial/final presumindo uma sequência do "
"comprimento especificado. Índices fora dos limites são cortados de maneira "
"consistente com o tratamento de fatias normais."

#: ../../c-api/slice.rst:111
msgid ""
"Return the length of the slice.  Always successful.  Doesn't call Python "
"code."
msgstr ""
"Retorna o comprimento da fatia. Sempre bem-sucedido. Não chama o código "
"Python."

#: ../../c-api/slice.rst:118
msgid "Ellipsis Object"
msgstr "Objeto Ellipsis"

#: ../../c-api/slice.rst:123
msgid ""
"The type of Python :const:`Ellipsis` object.  Same as :class:`types."
"EllipsisType` in the Python layer."
msgstr ""
"O tipo do objeto Python :const:`Ellipsis`. O mesmo que :class:`types."
"EllipsisType` na camada Python."

#: ../../c-api/slice.rst:129
msgid ""
"The Python ``Ellipsis`` object.  This object has no methods.  Like :c:data:"
"`Py_None`, it is an :term:`immortal` singleton object."
msgstr ""
"O objeto Python ``Ellipsis``. Este objeto não tem métodos. Como :c:data:"
"`Py_None`, é um objeto singleton :term:`imortal`."

#: ../../c-api/slice.rst:132
msgid ":c:data:`Py_Ellipsis` is immortal."
msgstr ":c:data:`Py_Ellipsis` é imortal."
