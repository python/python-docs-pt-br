# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# python-doc bot, 2025
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-22 20:37+0000\n"
"PO-Revision-Date: 2025-09-22 16:49+0000\n"
"Last-Translator: python-doc bot, 2025\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../c-api/code.rst:8
msgid "Code Objects"
msgstr "Objetos código"

#: ../../c-api/code.rst:12
msgid ""
"Code objects are a low-level detail of the CPython implementation. Each one "
"represents a chunk of executable code that hasn't yet been bound into a "
"function."
msgstr ""
"Os objetos código são um detalhe de baixo nível da implementação do CPython. "
"Cada um representa um pedaço de código executável que ainda não foi "
"vinculado a uma função."

#: ../../c-api/code.rst:18
msgid ""
"The C structure of the objects used to describe code objects.  The fields of "
"this type are subject to change at any time."
msgstr ""
"A estrutura C dos objetos usados para descrever objetos código. Os campos "
"deste tipo estão sujeitos a alterações a qualquer momento."

#: ../../c-api/code.rst:24
msgid ""
"This is an instance of :c:type:`PyTypeObject` representing the Python :ref:"
"`code object <code-objects>`."
msgstr ""
"Esta é uma instância de :c:type:`PyTypeObject` representando o :ref:`objeto "
"código <code-objects>` Python."

#: ../../c-api/code.rst:30
msgid ""
"Return true if *co* is a :ref:`code object <code-objects>`. This function "
"always succeeds."
msgstr ""
"Retorna verdadeiro se *co* for um :ref:`objeto código <code-objects>`. Esta "
"função sempre tem sucesso."

#: ../../c-api/code.rst:35
msgid "Return the number of free variables in *co*."
msgstr "Retorna o número de variáveis livres em *co*."

#: ../../c-api/code.rst:39
msgid ""
"Return a new code object.  If you need a dummy code object to create a "
"frame, use :c:func:`PyCode_NewEmpty` instead.  Calling :c:func:`PyCode_New` "
"directly will bind you to a precise Python version since the definition of "
"the bytecode changes often. The many arguments of this function are inter-"
"dependent in complex ways, meaning that subtle changes to values are likely "
"to result in incorrect execution or VM crashes. Use this function only with "
"extreme care."
msgstr ""
"Retorna um novo objeto código. Se você precisar de um objeto código fictício "
"para criar um quadro, use :c:func:`PyCode_NewEmpty`. Chamar :c:func:"
"`PyCode_New` diretamente irá vincular você a uma versão precisa do Python, "
"já que a definição do bytecode muda frequentemente. Os muitos argumentos "
"dessa função são interdependentes de maneiras complexas, o que significa que "
"alterações sutis nos valores provavelmente resultarão em execução incorreta "
"ou travamentos da VM. Use esta função apenas com extremo cuidado."

#: ../../c-api/code.rst:46
msgid "Added ``qualname`` and ``exceptiontable`` parameters."
msgstr "Adicionou os parâmetros ``qualname`` e ``exceptiontable``"

#: ../../c-api/code.rst:51
msgid ""
"Similar to :c:func:`PyCode_New`, but with an extra \"posonlyargcount\" for "
"positional-only arguments. The same caveats that apply to ``PyCode_New`` "
"also apply to this function."
msgstr ""
"Semelhante a :c:func:`PyCode_New` mas com um \"posonlyargcount\" extra para "
"argumentos somente posicionais. As mesmas advertências que se aplicam a "
"``PyCode_New`` também se aplicam a esta função."

#: ../../c-api/code.rst:56
msgid "Added ``qualname`` and  ``exceptiontable`` parameters."
msgstr "Adicionados os parâmetros ``qualname`` e ``exceptiontable``"

#: ../../c-api/code.rst:61
msgid ""
"Return a new empty code object with the specified filename, function name, "
"and first line number. The resulting code object will raise an ``Exception`` "
"if executed."
msgstr ""
"Retorna um novo objeto código vazio com o nome de arquivo, nome da função e "
"número da primeira linha especificados. O objeto código resultante irá "
"levantar uma ``Exception`` se executado."

#: ../../c-api/code.rst:67
msgid ""
"Return the line number of the instruction that occurs on or before "
"``byte_offset`` and ends after it. If you just need the line number of a "
"frame, use :c:func:`PyFrame_GetLineNumber` instead."
msgstr ""
"Retorna o número da linha da instrução que ocorre em ou antes de "
"``byte_offset`` e termina depois disso. Se você só precisa do número da "
"linha de um quadro, use :c:func:`PyFrame_GetLineNumber`."

#: ../../c-api/code.rst:70
msgid ""
"For efficiently iterating over the line numbers in a code object, use `the "
"API described in PEP 626 <https://peps.python.org/pep-0626/#out-of-process-"
"debuggers-and-profilers>`_."
msgstr ""
"Para iterar eficientemente sobre os números de linha em um objeto código, "
"use `a API descrita em PEP 626 <https://peps.python.org/pep-0626/#out-of-"
"process-debuggers-and-profilers>`_ ."

#: ../../c-api/code.rst:75
msgid ""
"Sets the passed ``int`` pointers to the source code line and column numbers "
"for the instruction at ``byte_offset``. Sets the value to ``0`` when "
"information is not available for any particular element."
msgstr ""
"Define os ponteiros ``int`` passados para a linha do código-fonte e os "
"números da coluna para a instrução em ``byte_offset``. Define o valor como "
"``0`` quando as informações não estão disponíveis para nenhum elemento em "
"particular."

#: ../../c-api/code.rst:79
msgid "Returns ``1`` if the function succeeds and 0 otherwise."
msgstr "Retorna ``1`` se a função for bem-sucedida e 0 caso contrário."

#: ../../c-api/code.rst:85
msgid ""
"Equivalent to the Python code ``getattr(co, 'co_code')``. Returns a strong "
"reference to a :c:type:`PyBytesObject` representing the bytecode in a code "
"object. On error, ``NULL`` is returned and an exception is raised."
msgstr ""
"Equivalente ao código Python ``getattr(co, 'co_code')``. Retorna uma "
"referência forte a um :c:type:`PyBytesObject` representando o bytecode em um "
"objeto código. Em caso de erro, ``NULL`` é retornado e uma exceção é "
"levantada."

#: ../../c-api/code.rst:90
msgid ""
"This ``PyBytesObject`` may be created on-demand by the interpreter and does "
"not necessarily represent the bytecode actually executed by CPython. The "
"primary use case for this function is debuggers and profilers."
msgstr ""
"Este ``PyBytesObject`` pode ser criado sob demanda pelo interpretador e não "
"representa necessariamente o bytecode realmente executado pelo CPython. O "
"caso de uso primário para esta função são depuradores e criadores de perfil."

#: ../../c-api/code.rst:98
msgid ""
"Equivalent to the Python code ``getattr(co, 'co_varnames')``. Returns a new "
"reference to a :c:type:`PyTupleObject` containing the names of the local "
"variables. On error, ``NULL`` is returned and an exception is raised."
msgstr ""
"Equivalente ao código Python ``getattr(co, 'co_varnames')``. Retorna uma "
"nova referência a um :c:type:`PyTupleObject` contendo os nomes das variáveis "
"locais. Em caso de erro, ``NULL`` é retornado e uma exceção é levantada."

#: ../../c-api/code.rst:107
msgid ""
"Equivalent to the Python code ``getattr(co, 'co_cellvars')``. Returns a new "
"reference to a :c:type:`PyTupleObject` containing the names of the local "
"variables that are referenced by nested functions. On error, ``NULL`` is "
"returned and an exception is raised."
msgstr ""
"Equivalente ao código Python ``getattr(co, 'co_cellvars')``. Retorna uma "
"nova referência a um :c:type:`PyTupleObject` contendo os nomes das variáveis "
"locais referenciadas por funções aninhadas. Em caso de erro, ``NULL`` é "
"retornado e uma exceção é levantada."

#: ../../c-api/code.rst:116
msgid ""
"Equivalent to the Python code ``getattr(co, 'co_freevars')``. Returns a new "
"reference to a :c:type:`PyTupleObject` containing the names of the free "
"variables. On error, ``NULL`` is returned and an exception is raised."
msgstr ""
"Equivalente ao código Python ``getattr(co, 'co_freevars')``. Retorna uma "
"nova referência a um :c:type:`PyTupleObject` contendo os nomes das variáveis "
"livres. Em caso de erro, ``NULL`` é retornado e uma exceção é levantada."

#: ../../c-api/code.rst:3
msgid "object"
msgstr "objeto"

#: ../../c-api/code.rst:3
msgid "code"
msgstr "código"

#: ../../c-api/code.rst:3
msgid "code object"
msgstr "objeto código"
