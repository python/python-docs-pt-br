# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-31 11:30+0000\n"
"PO-Revision-Date: 2024-05-11 00:32+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../c-api/capsule.rst:6
msgid "Capsules"
msgstr "Capsules"

#: ../../c-api/capsule.rst:10
msgid ""
"Refer to :ref:`using-capsules` for more information on using these objects."
msgstr ""
"Consulte :ref:`using-capsules` para obter mais informações sobre o uso "
"desses objetos."

#: ../../c-api/capsule.rst:17
msgid ""
"This subtype of :c:type:`PyObject` represents an opaque value, useful for C "
"extension modules who need to pass an opaque value (as a :c:expr:`void*` "
"pointer) through Python code to other C code.  It is often used to make a C "
"function pointer defined in one module available to other modules, so the "
"regular import mechanism can be used to access C APIs defined in dynamically "
"loaded modules."
msgstr ""
"Este subtipo de :c:type:`PyObject` representa um valor opaco, útil para "
"módulos de extensão C que precisam passar um valor opaco (como ponteiro :c:"
"expr:`void*`) através do código Python para outro código C . É "
"frequentemente usado para disponibilizar um ponteiro de função C definido em "
"um módulo para outros módulos, para que o mecanismo de importação regular "
"possa ser usado para acessar APIs C definidas em módulos carregados "
"dinamicamente."

#: ../../c-api/capsule.rst:27
msgid "The type of a destructor callback for a capsule.  Defined as::"
msgstr ""
"O tipo de um retorno de chamada destruidor para uma cápsula. Definido como::"

#: ../../c-api/capsule.rst:29
msgid "typedef void (*PyCapsule_Destructor)(PyObject *);"
msgstr ""

#: ../../c-api/capsule.rst:31
msgid ""
"See :c:func:`PyCapsule_New` for the semantics of PyCapsule_Destructor "
"callbacks."
msgstr ""
"Veja :c:func:`PyCapsule_New` para a semântica dos retornos de chamada "
"PyCapsule_Destructor."

#: ../../c-api/capsule.rst:37
msgid ""
"Return true if its argument is a :c:type:`PyCapsule`.  This function always "
"succeeds."
msgstr ""
"Retorna true se seu argumento é um :c:type:`PyCapsule`. Esta função sempre "
"tem sucesso."

#: ../../c-api/capsule.rst:43
msgid ""
"Create a :c:type:`PyCapsule` encapsulating the *pointer*.  The *pointer* "
"argument may not be ``NULL``."
msgstr ""
"Cria um :c:type:`PyCapsule` que encapsula o *ponteiro*. O argumento "
"*pointer* pode não ser ``NULL``."

#: ../../c-api/capsule.rst:46
msgid "On failure, set an exception and return ``NULL``."
msgstr "Em caso de falha, define uma exceção e retorna ``NULL``."

#: ../../c-api/capsule.rst:48
msgid ""
"The *name* string may either be ``NULL`` or a pointer to a valid C string.  "
"If non-``NULL``, this string must outlive the capsule.  (Though it is "
"permitted to free it inside the *destructor*.)"
msgstr ""
"A string *name* pode ser ``NULL`` ou um ponteiro para uma string C válida. "
"Se não for ``NULL``, essa string deverá sobreviver à cápsula. (Embora seja "
"permitido liberá-lo dentro do *descructor*.)"

#: ../../c-api/capsule.rst:52
msgid ""
"If the *destructor* argument is not ``NULL``, it will be called with the "
"capsule as its argument when it is destroyed."
msgstr ""
"Se o argumento *destructor* não for ``NULL``, ele será chamado com a cápsula "
"como argumento quando for destruído."

#: ../../c-api/capsule.rst:55
msgid ""
"If this capsule will be stored as an attribute of a module, the *name* "
"should be specified as ``modulename.attributename``.  This will enable other "
"modules to import the capsule using :c:func:`PyCapsule_Import`."
msgstr ""
"Se esta cápsula for armazenada como um atributo de um módulo, o *name* deve "
"ser especificado como ``modulename.attributename``. Isso permitirá que "
"outros módulos importem a cápsula usando :c:func:`PyCapsule_Import`."

#: ../../c-api/capsule.rst:62
msgid ""
"Retrieve the *pointer* stored in the capsule.  On failure, set an exception "
"and return ``NULL``."
msgstr ""
"Recupera o *pointer* armazenado na cápsula. Em caso de falha, define uma "
"exceção e retorna ``NULL``."

#: ../../c-api/capsule.rst:65
msgid ""
"The *name* parameter must compare exactly to the name stored in the capsule. "
"If the name stored in the capsule is ``NULL``, the *name* passed in must "
"also be ``NULL``.  Python uses the C function :c:func:`!strcmp` to compare "
"capsule names."
msgstr ""
"O parâmetro *name* deve ser comparado exatamente com o nome armazenado na "
"cápsula. Se o nome armazenado na cápsula for ``NULL``, o *name* passado "
"também deve ser ``NULL``. Python usa a função C :c:func:`!strcmp` para "
"comparar nomes de cápsulas."

#: ../../c-api/capsule.rst:73
msgid ""
"Return the current destructor stored in the capsule.  On failure, set an "
"exception and return ``NULL``."
msgstr ""
"Retorna o destruidor atual armazenado na cápsula. Em caso de falha, define "
"uma exceção e retorna ``NULL``."

#: ../../c-api/capsule.rst:76
msgid ""
"It is legal for a capsule to have a ``NULL`` destructor.  This makes a "
"``NULL`` return code somewhat ambiguous; use :c:func:`PyCapsule_IsValid` or :"
"c:func:`PyErr_Occurred` to disambiguate."
msgstr ""
"É legal para uma cápsula ter um destruidor ``NULL``. Isso torna um código de "
"retorno ``NULL`` um tanto ambíguo; use :c:func:`PyCapsule_IsValid` ou :c:"
"func:`PyErr_Occurred` para desambiguar."

#: ../../c-api/capsule.rst:83
msgid ""
"Return the current context stored in the capsule.  On failure, set an "
"exception and return ``NULL``."
msgstr ""
"Retorna o contexto atual armazenado na cápsula. Em caso de falha, define uma "
"exceção e retorna ``NULL``."

#: ../../c-api/capsule.rst:86
msgid ""
"It is legal for a capsule to have a ``NULL`` context.  This makes a ``NULL`` "
"return code somewhat ambiguous; use :c:func:`PyCapsule_IsValid` or :c:func:"
"`PyErr_Occurred` to disambiguate."
msgstr ""
"É legal para uma cápsula ter um contexto ``NULL``. Isso torna um código de "
"retorno ``NULL`` um tanto ambíguo; use :c:func:`PyCapsule_IsValid` ou :c:"
"func:`PyErr_Occurred` para desambiguar."

#: ../../c-api/capsule.rst:93
msgid ""
"Return the current name stored in the capsule.  On failure, set an exception "
"and return ``NULL``."
msgstr ""
"Retorna o nome atual armazenado na cápsula. Em caso de falha, define uma "
"exceção e retorna ``NULL``."

#: ../../c-api/capsule.rst:96
msgid ""
"It is legal for a capsule to have a ``NULL`` name.  This makes a ``NULL`` "
"return code somewhat ambiguous; use :c:func:`PyCapsule_IsValid` or :c:func:"
"`PyErr_Occurred` to disambiguate."
msgstr ""
"É legal para uma cápsula ter um nome ``NULL``. Isso torna um código de "
"retorno ``NULL`` um tanto ambíguo; use :c:func:`PyCapsule_IsValid` ou :c:"
"func:`PyErr_Occurred` para desambiguar."

#: ../../c-api/capsule.rst:103
msgid ""
"Import a pointer to a C object from a capsule attribute in a module.  The "
"*name* parameter should specify the full name to the attribute, as in "
"``module.attribute``.  The *name* stored in the capsule must match this "
"string exactly."
msgstr ""
"Importa um ponteiro para um objeto C de um atributo de cápsula em um módulo. "
"O parâmetro *name* deve especificar o nome completo do atributo, como em "
"``module.attribute``. O *name* armazenado na cápsula deve corresponder "
"exatamente a essa string."

#: ../../c-api/capsule.rst:108
msgid ""
"Return the capsule's internal *pointer* on success.  On failure, set an "
"exception and return ``NULL``."
msgstr ""
"Retorna o ponteiro interno *pointer* da cápsula com sucesso. Em caso de "
"falha, define uma exceção e retorna ``NULL``."

#: ../../c-api/capsule.rst:111
msgid "*no_block* has no effect anymore."
msgstr "*no_block* não tem mais efeito."

#: ../../c-api/capsule.rst:117
msgid ""
"Determines whether or not *capsule* is a valid capsule.  A valid capsule is "
"non-``NULL``, passes :c:func:`PyCapsule_CheckExact`, has a non-``NULL`` "
"pointer stored in it, and its internal name matches the *name* parameter.  "
"(See :c:func:`PyCapsule_GetPointer` for information on how capsule names are "
"compared.)"
msgstr ""
"Determina se *capsule* é ou não uma cápsula válida. Uma cápsula válida é "
"diferente de ``NULL``, passa :c:func:`PyCapsule_CheckExact`, possui um "
"ponteiro diferente de ``NULL`` armazenado e seu nome interno corresponde ao "
"parâmetro *name*. (Consulte :c:func:`PyCapsule_GetPointer` para obter "
"informações sobre como os nomes das cápsulas são comparados.)"

#: ../../c-api/capsule.rst:123
msgid ""
"In other words, if :c:func:`PyCapsule_IsValid` returns a true value, calls "
"to any of the accessors (any function starting with ``PyCapsule_Get``) are "
"guaranteed to succeed."
msgstr ""
"Em outras palavras, se :c:func:`PyCapsule_IsValid` retornar um valor "
"verdadeiro, as chamadas para qualquer um dos acessadores (qualquer função "
"que comece com ``PyCapsule_Get``) terão êxito garantido."

#: ../../c-api/capsule.rst:127
msgid ""
"Return a nonzero value if the object is valid and matches the name passed "
"in. Return ``0`` otherwise.  This function will not fail."
msgstr ""
"Retorna um valor diferente de zero se o objeto for válido e corresponder ao "
"nome passado. Retorna ``0`` caso contrário. Esta função não falhará."

#: ../../c-api/capsule.rst:133
msgid "Set the context pointer inside *capsule* to *context*."
msgstr "Define o ponteiro de contexto dentro de *capsule* para *context*."

#: ../../c-api/capsule.rst:135 ../../c-api/capsule.rst:142
#: ../../c-api/capsule.rst:151 ../../c-api/capsule.rst:159
msgid ""
"Return ``0`` on success.  Return nonzero and set an exception on failure."
msgstr ""
"Retorna ``0`` em caso de sucesso. Retorna diferente de zero e define uma "
"exceção em caso de falha."

#: ../../c-api/capsule.rst:140
msgid "Set the destructor inside *capsule* to *destructor*."
msgstr "Define o destrutor dentro de *capsule* para *destructor*."

#: ../../c-api/capsule.rst:147
msgid ""
"Set the name inside *capsule* to *name*.  If non-``NULL``, the name must "
"outlive the capsule.  If the previous *name* stored in the capsule was not "
"``NULL``, no attempt is made to free it."
msgstr ""
"Define o nome dentro de *capsule* como *name*. Se não for ``NULL``, o nome "
"deve sobreviver à cápsula. Se o *name* anterior armazenado na cápsula não "
"era ``NULL``, nenhuma tentativa será feita para liberá-lo."

#: ../../c-api/capsule.rst:156
msgid ""
"Set the void pointer inside *capsule* to *pointer*.  The pointer may not be "
"``NULL``."
msgstr ""
"Define o ponteiro nulo dentro de *capsule* para *pointer*. O ponteiro não "
"pode ser ``NULL``."

#: ../../c-api/capsule.rst:8
msgid "object"
msgstr "objeto"

#: ../../c-api/capsule.rst:8
msgid "Capsule"
msgstr "Cápsula"
