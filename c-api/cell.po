# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-22 14:17+0000\n"
"PO-Revision-Date: 2021-06-28 00:47+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../c-api/cell.rst:6
msgid "Cell Objects"
msgstr "Objeto célula"

#: ../../c-api/cell.rst:8
msgid ""
"\"Cell\" objects are used to implement variables referenced by multiple "
"scopes. For each such variable, a cell object is created to store the value; "
"the local variables of each stack frame that references the value contains a "
"reference to the cells from outer scopes which also use that variable.  When "
"the value is accessed, the value contained in the cell is used instead of "
"the cell object itself.  This de-referencing of the cell object requires "
"support from the generated byte-code; these are not automatically de-"
"referenced when accessed. Cell objects are not likely to be useful elsewhere."
msgstr ""
"Objetos \"cell\" são usados ​para implementar variáveis ​​referenciadas por "
"múltiplos escopos. Para cada variável, um objeto célula é criado para "
"armazenar o valor; as variáveis ​locais de cada quadro de pilha que "
"referencia o valor contém uma referência para as células de escopos externos "
"que também usam essa variável. Quando o valor é acessado, o valor contido na "
"célula é usado em vez do próprio objeto da célula. Essa des-referência do "
"objeto da célula requer suporte do código de bytes gerado; estes não são "
"automaticamente desprezados quando acessados. Objetos de células "
"provavelmente não serão úteis em outro lugar."

#: ../../c-api/cell.rst:20
msgid "The C structure used for cell objects."
msgstr "A estrutura C usada para objetos célula."

#: ../../c-api/cell.rst:25
msgid "The type object corresponding to cell objects."
msgstr "O objeto de tipo correspondente aos objetos célula."

#: ../../c-api/cell.rst:30
msgid ""
"Return true if *ob* is a cell object; *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"Retorna verdadeiro se *ob* for um objeto célula; *ob* não deve ser ``NULL``. "
"Esta função sempre tem sucesso."

#: ../../c-api/cell.rst:36
msgid ""
"Create and return a new cell object containing the value *ob*. The parameter "
"may be ``NULL``."
msgstr ""
"Cria e retorna um novo objeto célula contendo o valor *ob*. O parâmetro pode "
"ser ``NULL``."

#: ../../c-api/cell.rst:42
msgid ""
"Return the contents of the cell *cell*, which can be ``NULL``. If *cell* is "
"not a cell object, returns ``NULL`` with an exception set."
msgstr ""
"Retorna o conteúdo da célula *cell*, que pode ser ``NULL``. Se *cell* não "
"for um objeto célula, retorna ``NULL`` com um conjunto de exceções."

#: ../../c-api/cell.rst:48
msgid ""
"Return the contents of the cell *cell*, but without checking that *cell* is "
"non-``NULL`` and a cell object."
msgstr ""
"Retorna o conteúdo da célula *cell*, mas sem verificar se *cell* não é "
"``NULL`` e um objeto célula."

#: ../../c-api/cell.rst:54
msgid ""
"Set the contents of the cell object *cell* to *value*.  This releases the "
"reference to any current content of the cell. *value* may be ``NULL``.  "
"*cell* must be non-``NULL``."
msgstr ""
"Define o conteúdo do objeto da célula *cell* como *value*. Isso libera a "
"referência a qualquer conteúdo atual da célula. *value* pode ser ``NULL``. "
"*cell* não pode ser ``NULL``."

#: ../../c-api/cell.rst:58
msgid ""
"On success, return ``0``. If *cell* is not a cell object, set an exception "
"and return ``-1``."
msgstr ""
"Em caso de sucesso, retorna ``0``. Se *cell* não for um objeto célula, "
"define uma exceção e retorna ``-1``."

#: ../../c-api/cell.rst:64
msgid ""
"Sets the value of the cell object *cell* to *value*.  No reference counts "
"are adjusted, and no checks are made for safety; *cell* must be non-``NULL`` "
"and must be a cell object."
msgstr ""
"Define o valor do objeto da célula *cell* como *value*. Nenhuma contagem de "
"referência é ajustada e nenhuma verificação é feita quanto à segurança; "
"*cell* não pode ser ``NULL`` e deve ser um objeto célula."
