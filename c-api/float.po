# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-23 16:12+0000\n"
"PO-Revision-Date: 2022-11-05 17:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../c-api/float.rst:6
msgid "Floating Point Objects"
msgstr "Objetos de ponto flutuante"

#: ../../c-api/float.rst:13
msgid ""
"This subtype of :c:type:`PyObject` represents a Python floating point object."
msgstr ""
"Este subtipo de :c:type:`PyObject` representa um objeto de ponto flutuante "
"do Python."

#: ../../c-api/float.rst:18
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python floating point "
"type.  This is the same object as :class:`float` in the Python layer."
msgstr ""
"Esta instância do :c:type:`PyTypeObject` representa o tipo de ponto "
"flutuante do Python. Este é o mesmo objeto :class:`float` na camada do "
"Python."

#: ../../c-api/float.rst:24
msgid ""
"Return true if its argument is a :c:type:`PyFloatObject` or a subtype of :c:"
"type:`PyFloatObject`.  This function always succeeds."
msgstr ""
"Retorna true se seu argumento é um :c:type:`PyFloatObject` ou um subtipo de :"
"c:type:`PyFloatObject`. Esta função sempre tem sucesso."

#: ../../c-api/float.rst:30
msgid ""
"Return true if its argument is a :c:type:`PyFloatObject`, but not a subtype "
"of :c:type:`PyFloatObject`.  This function always succeeds."
msgstr ""
"Retorna true se seu argumento é um :c:type:`PyFloatObject`, mas um subtipo "
"de :c:type:`PyFloatObject`. Esta função sempre tem sucesso."

#: ../../c-api/float.rst:36
msgid ""
"Create a :c:type:`PyFloatObject` object based on the string value in *str*, "
"or ``NULL`` on failure."
msgstr ""
"Cria um objeto :c:type:`PyFloatObject` baseado em uma string de valor "
"\"str\" ou ``NULL`` em falha."

#: ../../c-api/float.rst:42
msgid ""
"Create a :c:type:`PyFloatObject` object from *v*, or ``NULL`` on failure."
msgstr "Cria um objeto :c:type:`PyFloatObject` de *v* ou ``NULL`` em falha."

#: ../../c-api/float.rst:47
msgid ""
"Return a C :c:expr:`double` representation of the contents of *pyfloat*.  If "
"*pyfloat* is not a Python floating point object but has a :meth:`__float__` "
"method, this method will first be called to convert *pyfloat* into a float. "
"If ``__float__()`` is not defined then it falls back to :meth:`__index__`. "
"This method returns ``-1.0`` upon failure, so one should call :c:func:"
"`PyErr_Occurred` to check for errors."
msgstr ""

#: ../../c-api/float.rst:54
msgid "Use :meth:`__index__` if available."
msgstr "Usa :meth:`__index__`, se disponível."

#: ../../c-api/float.rst:60
msgid ""
"Return a C :c:expr:`double` representation of the contents of *pyfloat*, but "
"without error checking."
msgstr ""
"Retorna uma representação C :c:expr:`double` do conteúdo de *pyfloat*, mas "
"sem verificação de erro."

#: ../../c-api/float.rst:66
msgid ""
"Return a structseq instance which contains information about the precision, "
"minimum and maximum values of a float. It's a thin wrapper around the header "
"file :file:`float.h`."
msgstr ""
"Retorna uma instância de structseq que contém informações sobre a precisão, "
"os valores mínimo e máximo de um ponto flutuante. É um invólucro fino em "
"torno do arquivo de cabeçalho :file:`float.h`."

#: ../../c-api/float.rst:73
msgid ""
"Return the maximum representable finite float *DBL_MAX* as C :c:expr:"
"`double`."
msgstr ""
"Retorna o ponto flutuante finito máximo representável *DBL_MAX* como :c:expr:"
"`double` do C."

#: ../../c-api/float.rst:78
msgid ""
"Return the minimum normalized positive float *DBL_MIN* as C :c:expr:`double`."
msgstr ""
"Retorna o ponto flutuante positivo mínimo normalizado *DBL_MIN* como :c:expr:"
"`double` do C."
