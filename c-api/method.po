# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2021
# Adorilson Bezerra <adorilson@gmail.com>, 2021
# Cássio Nomura <cassionomura@gmail.com>, 2021
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-02 14:19+0000\n"
"PO-Revision-Date: 2021-06-28 00:49+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2024\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../c-api/method.rst:6
msgid "Instance Method Objects"
msgstr "Objetos de Método de Instância"

#: ../../c-api/method.rst:10
msgid ""
"An instance method is a wrapper for a :c:type:`PyCFunction` and the new way "
"to bind a :c:type:`PyCFunction` to a class object. It replaces the former "
"call ``PyMethod_New(func, NULL, class)``."
msgstr ""
"Um método de instância é um invólucro para um :c:type:`PyCFunction` e a nova "
"maneira de vincular um :c:type:`PyCFunction` a um objeto classe. Ele "
"substitui a chamada anterior ``PyMethod_New(func, NULL, class)``."

#: ../../c-api/method.rst:17
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python instance "
"method type. It is not exposed to Python programs."
msgstr ""
"Esta instância de :c:type:`PyTypeObject` representa o tipo de método de "
"instância Python. Não é exposto a programas Python."

#: ../../c-api/method.rst:23
msgid ""
"Return true if *o* is an instance method object (has type :c:data:"
"`PyInstanceMethod_Type`).  The parameter must not be ``NULL``. This function "
"always succeeds."
msgstr ""
"Retorna verdadeiro se *o* é um objeto de método de instância (tem tipo :c:"
"data:`PyInstanceMethod_Type`). O parâmetro não deve ser ``NULL``. Esta "
"função sempre tem sucesso."

#: ../../c-api/method.rst:30
msgid ""
"Return a new instance method object, with *func* being any callable object. "
"*func* is the function that will be called when the instance method is "
"called."
msgstr ""
"Retorna um novo objeto de método de instância, com *func* sendo qualquer "
"objeto chamável. *func* é a função que será chamada quando o método de "
"instância for chamado."

#: ../../c-api/method.rst:37
msgid "Return the function object associated with the instance method *im*."
msgstr "Retorna o objeto função associado ao método de instância *im*."

#: ../../c-api/method.rst:42
msgid ""
"Macro version of :c:func:`PyInstanceMethod_Function` which avoids error "
"checking."
msgstr ""
"Versão macro de :c:func:`PyInstanceMethod_Function` que evita a verificação "
"de erros."

#: ../../c-api/method.rst:48
msgid "Method Objects"
msgstr "Objetos método"

#: ../../c-api/method.rst:52
msgid ""
"Methods are bound function objects. Methods are always bound to an instance "
"of a user-defined class. Unbound methods (methods bound to a class object) "
"are no longer available."
msgstr ""
"Métodos são objetos função vinculados. Os métodos são sempre associados a "
"uma instância de uma classe definida pelo usuário. Métodos não vinculados "
"(métodos vinculados a um objeto de classe) não estão mais disponíveis."

#: ../../c-api/method.rst:61
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python method type.  "
"This is exposed to Python programs as ``types.MethodType``."
msgstr ""
"Esta instância de :c:type:`PyTypeObject` representa o tipo de método Python. "
"Isso é exposto a programas Python como ``types.MethodType``."

#: ../../c-api/method.rst:67
msgid ""
"Return true if *o* is a method object (has type :c:data:`PyMethod_Type`).  "
"The parameter must not be ``NULL``.  This function always succeeds."
msgstr ""
"Retorna verdadeiro se *o* é um objeto de método (tem tipo :c:data:"
"`PyMethod_Type`). O parâmetro não deve ser ``NULL``. Esta função sempre tem "
"sucesso."

#: ../../c-api/method.rst:73
msgid ""
"Return a new method object, with *func* being any callable object and *self* "
"the instance the method should be bound. *func* is the function that will be "
"called when the method is called. *self* must not be ``NULL``."
msgstr ""
"Retorna um novo objeto de método, com *func* sendo qualquer objeto chamável "
"e *self* a instância à qual o método deve ser vinculado. *func* é a função "
"que será chamada quando o método for chamado. *self* não deve ser ``NULL``."

#: ../../c-api/method.rst:80
msgid "Return the function object associated with the method *meth*."
msgstr "Retorna o objeto função associado ao método *meth*."

#: ../../c-api/method.rst:85
msgid ""
"Macro version of :c:func:`PyMethod_Function` which avoids error checking."
msgstr ""
"Versão macro de :c:func:`PyMethod_Function` que evita a verificação de erros."

#: ../../c-api/method.rst:90
msgid "Return the instance associated with the method *meth*."
msgstr "Retorna a instância associada com o método *meth*."

#: ../../c-api/method.rst:95
msgid "Macro version of :c:func:`PyMethod_Self` which avoids error checking."
msgstr ""
"Versão macro de :c:func:`PyMethod_Self` que evita a verificação de erros."

#: ../../c-api/method.rst:8 ../../c-api/method.rst:50
msgid "object"
msgstr "objeto"

#: ../../c-api/method.rst:8
msgid "instancemethod"
msgstr "instancemethod"

#: ../../c-api/method.rst:50
msgid "method"
msgstr "método"

#: ../../c-api/method.rst:59
msgid "MethodType (in module types)"
msgstr "MethodType (em tipos de módulos)"
