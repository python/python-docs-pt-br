# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2024, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2023
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-31 13:50+0000\n"
"PO-Revision-Date: 2020-05-30 11:49+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2023\n"
"Language-Team: Portuguese (Brazil) (https://app.transifex.com/python-doc/"
"teams/5390/pt_BR/)\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % "
"1000000 == 0 ? 1 : 2;\n"

#: ../../c-api/mapping.rst:6
msgid "Mapping Protocol"
msgstr "Protocolo de mapeamento"

#: ../../c-api/mapping.rst:8
msgid ""
"See also :c:func:`PyObject_GetItem`, :c:func:`PyObject_SetItem` "
"and :c:func:`PyObject_DelItem`."
msgstr ""
"Veja também :c:func:`PyObject_GetItem`, :c:func:`PyObject_SetItem` "
"e :c:func:`PyObject_DelItem`."

#: ../../c-api/mapping.rst:14
msgid ""
"Return ``1`` if the object provides mapping protocol or supports slicing, "
"and ``0`` otherwise.  Note that it returns ``1`` for Python classes with "
"a :meth:`__getitem__` method since in general case it is impossible to "
"determine what type of keys it supports. This function always succeeds."
msgstr ""
"Retorna ``1`` se o objeto fornece protocolo de mapeamento ou suporta "
"fatiamento e ``0`` caso contrário. Note que ele retorna ``1`` para classes "
"Python com um método :meth:`__getitem__` visto que no caso geral é "
"impossível determinar que tipo de chaves ele suporta. Esta função sempre tem "
"sucesso."

#: ../../c-api/mapping.rst:25
msgid ""
"Returns the number of keys in object *o* on success, and ``-1`` on failure. "
"This is equivalent to the Python expression ``len(o)``."
msgstr ""
"Retorna o número de chaves no objeto *o* em caso de sucesso e ``-1`` em caso "
"de falha. Isso é equivalente à expressão Python ``len(o)``."

#: ../../c-api/mapping.rst:31
msgid ""
"Return element of *o* corresponding to the string *key* or ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o[key]``. See "
"also :c:func:`PyObject_GetItem`."
msgstr ""
"Retorna o elemento de *o* correspondente à string *key* ou ``NULL`` em caso "
"de falha. Este é o equivalente da expressão Python ``o[key]``. Veja "
"também :c:func:`PyObject_GetItem`."

#: ../../c-api/mapping.rst:38
msgid ""
"Map the string *key* to the value *v* in object *o*.  Returns ``-1`` on "
"failure.  This is the equivalent of the Python statement ``o[key] = v``. See "
"also :c:func:`PyObject_SetItem`.  This function *does not* steal a reference "
"to *v*."
msgstr ""
"Mapeia a string *key* para o valor *v* no objeto *o*. Retorna ``-1`` em caso "
"de falha. Este é o equivalente da instrução Python ``o[key] = v``. Veja "
"também :c:func:`PyObject_SetItem`. Esta função *não* rouba uma referência a "
"*v*."

#: ../../c-api/mapping.rst:46
msgid ""
"Remove the mapping for the object *key* from the object *o*.  Return ``-1`` "
"on failure.  This is equivalent to the Python statement ``del o[key]``. This "
"is an alias of :c:func:`PyObject_DelItem`."
msgstr ""
"Remove o mapeamento para o objeto *key* do objeto *o*. Retorna ``-1`` em "
"caso de falha. Isso é equivalente à instrução Python ``del o[key]``. Este é "
"um alias de :c:func:`PyObject_DelItem`."

#: ../../c-api/mapping.rst:53
msgid ""
"Remove the mapping for the string *key* from the object *o*.  Return ``-1`` "
"on failure.  This is equivalent to the Python statement ``del o[key]``."
msgstr ""
"Remove o mapeamento para a string *key* do objeto *o*. Retorna ``-1`` em "
"caso de falha. Isso é equivalente à instrução Python ``del o[key]``."

#: ../../c-api/mapping.rst:59 ../../c-api/mapping.rst:70
msgid ""
"Return ``1`` if the mapping object has the key *key* and ``0`` otherwise. "
"This is equivalent to the Python expression ``key in o``. This function "
"always succeeds."
msgstr ""
"Retorna ``1`` se o objeto de mapeamento tiver a chave *key* e ``0`` caso "
"contrário. Isso é equivalente à expressão Python ``key in o``. Esta função "
"sempre tem sucesso."

#: ../../c-api/mapping.rst:63
msgid ""
"Note that exceptions which occur while calling the :meth:`__getitem__` "
"method will get suppressed. To get error reporting "
"use :c:func:`PyObject_GetItem()` instead."
msgstr ""
"Observe que as exceções que ocorrem ao chamar o método :meth:`__getitem__` "
"serão suprimidas. Para obter relatórios de erros, "
"use :c:func:`PyObject_GetItem()`."

#: ../../c-api/mapping.rst:74
msgid ""
"Note that exceptions which occur while calling the :meth:`__getitem__` "
"method and creating a temporary string object will get suppressed. To get "
"error reporting use :c:func:`PyMapping_GetItemString()` instead."
msgstr ""
"Observe que as exceções que ocorrem ao chamar o método :meth:`__getitem__` e "
"criar um objeto string temporário serão suprimidas. Para obter relatórios de "
"erros, use :c:func:`PyMapping_GetItemString()`."

#: ../../c-api/mapping.rst:81
msgid ""
"On success, return a list of the keys in object *o*.  On failure, return "
"``NULL``."
msgstr ""
"Em caso de sucesso, retorna uma lista das chaves no objeto *o*. Em caso de "
"falha, retorna ``NULL``."

#: ../../c-api/mapping.rst:84 ../../c-api/mapping.rst:93
#: ../../c-api/mapping.rst:102
msgid "Previously, the function returned a list or a tuple."
msgstr "Anteriormente, a função retornava uma lista ou tupla."

#: ../../c-api/mapping.rst:90
msgid ""
"On success, return a list of the values in object *o*.  On failure, return "
"``NULL``."
msgstr ""
"Em caso de sucesso, retorna uma lista dos valores no objeto *o*. Em caso de "
"falha, retorna ``NULL``."

#: ../../c-api/mapping.rst:99
msgid ""
"On success, return a list of the items in object *o*, where each item is a "
"tuple containing a key-value pair.  On failure, return ``NULL``."
msgstr ""
"Em caso de sucesso, retorna uma lista dos itens no objeto *o*, onde cada "
"item é uma tupla contendo um par de valores-chave. Em caso de falha, retorna "
"``NULL``."
